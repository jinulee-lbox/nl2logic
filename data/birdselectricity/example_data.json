[
    {
        "id": 0,
        "statement": "is(cow, round).",
        "description": "The cow is round."
    },
    {
        "id": 1,
        "statement": "needs(cow, lion).",
        "description": "The cow needs the lion."
    },
    {
        "id": 2,
        "statement": "needs(cow, rabbit).",
        "description": "The cow needs the rabbit."
    },
    {
        "id": 3,
        "statement": "sees(cow, lion).",
        "description": "The cow sees the lion."
    },
    {
        "id": 4,
        "statement": "visits(cow, rabbit).",
        "description": "The cow visits the rabbit."
    },
    {
        "id": 5,
        "statement": "is(lion, round).",
        "description": "The lion is round."
    },
    {
        "id": 6,
        "statement": "is(rabbit, kind).",
        "description": "The rabbit is kind."
    },
    {
        "id": 7,
        "statement": "visits(rabbit, tiger).",
        "description": "The rabbit visits the tiger."
    },
    {
        "id": 8,
        "statement": "is(tiger, big).",
        "description": "The tiger is big."
    },
    {
        "id": 9,
        "statement": "is(tiger, kind).",
        "description": "The tiger is kind."
    },
    {
        "id": 10,
        "statement": "sees(tiger, rabbit).",
        "description": "The tiger sees the rabbit."
    },
    {
        "id": 11,
        "statement": "visits(tiger, rabbit).",
        "description": "The tiger visits the rabbit."
    },
    {
        "id": 12,
        "statement": "is(X, young) :- is(X, kind), visits(X, rabbit).",
        "description": "If something is kind and it visits the rabbit then it is young."
    },
    {
        "id": 13,
        "statement": "sees(X, rabbit) :- sees(X, tiger), visits(X, lion).",
        "description": "If something sees the tiger and it visits the lion then it sees the rabbit."
    },
    {
        "id": 14,
        "statement": "sees(X, lion) :- is(X, big), is(X, young).",
        "description": "If something is big and young then it sees the lion."
    },
    {
        "id": 15,
        "statement": "needs(rabbit, lion) :- visits(X, rabbit).",
        "description": "If something visits the rabbit then the rabbit needs the lion."
    },
    {
        "id": 16,
        "statement": "visits(X, rabbit) :- is(X, big).",
        "description": "If something is big then it visits the rabbit."
    },
    {
        "id": 17,
        "statement": "is(X, rough) :- sees(X, tiger).",
        "description": "If something sees the tiger then it is rough."
    },
    {
        "id": 18,
        "statement": "needs(rabbit, lion) :- visits(X, rabbit), is(X, kind).",
        "description": "If something visits the rabbit and it is kind then the rabbit needs the lion."
    },
    {
        "id": 19,
        "statement": "visits(X, lion) :- is(X, rough), is(X, kind).",
        "description": "If something is rough and kind then it visits the lion."
    },
    {
        "id": 20,
        "statement": "is(X, big) :- needs(X, lion).",
        "description": "If something needs the lion then it is big."
    },
    {
        "id": 21,
        "statement": "is(anne, big).",
        "description": "Anne is big."
    },
    {
        "id": 22,
        "statement": "is(anne, red).",
        "description": "Anne is red."
    },
    {
        "id": 23,
        "statement": "is(anne, smart).",
        "description": "Anne is smart."
    },
    {
        "id": 24,
        "statement": "is(charlie, big).",
        "description": "Charlie is big."
    },
    {
        "id": 25,
        "statement": "is(charlie, cold).",
        "description": "Charlie is cold."
    },
    {
        "id": 26,
        "statement": "is(charlie, furry).",
        "description": "Charlie is furry."
    },
    {
        "id": 27,
        "statement": "is(charlie, quiet).",
        "description": "Charlie is quiet."
    },
    {
        "id": 28,
        "statement": "is(charlie, red).",
        "description": "Charlie is red."
    },
    {
        "id": 29,
        "statement": "is(charlie, rough).",
        "description": "Charlie is rough."
    },
    {
        "id": 30,
        "statement": "is(charlie, smart).",
        "description": "Charlie is smart."
    },
    {
        "id": 31,
        "statement": "is(dave, cold).",
        "description": "Dave is cold."
    },
    {
        "id": 32,
        "statement": "is(dave, furry).",
        "description": "Dave is furry."
    },
    {
        "id": 33,
        "statement": "is(dave, quiet).",
        "description": "Dave is quiet."
    },
    {
        "id": 34,
        "statement": "is(dave, rough).",
        "description": "Dave is rough."
    },
    {
        "id": 35,
        "statement": "is(dave, smart).",
        "description": "Dave is smart."
    },
    {
        "id": 36,
        "statement": "is(harry, rough).",
        "description": "Harry is rough."
    },
    {
        "id": 37,
        "statement": "is(X, big) :- is(X, quiet), is(X, smart).",
        "description": "Quiet, smart things are big."
    },
    {
        "id": 38,
        "statement": "is(X, quiet) :- is(X, rough).",
        "description": "Rough things are quiet."
    },
    {
        "id": 39,
        "statement": "is(harry, furry) :- is(harry, rough), is(harry, cold).",
        "description": "If Harry is rough and Harry is cold then Harry is furry."
    },
    {
        "id": 40,
        "statement": "is(X, quiet) :- is(X, furry), is(X, big).",
        "description": "If something is furry and big then it is quiet."
    },
    {
        "id": 41,
        "statement": "is(X, rough) :- is(X, big).",
        "description": "All big things are rough."
    },
    {
        "id": 42,
        "statement": "is(harry, smart) :- is(harry, quiet).",
        "description": "If Harry is quiet then Harry is smart."
    },
    {
        "id": 43,
        "statement": "is(X, red) :- is(X, furry).",
        "description": "If something is furry then it is red."
    },
    {
        "id": 44,
        "statement": "is(X, furry) :- is(X, big), is(X, quiet).",
        "description": "Big, quiet things are furry."
    },
    {
        "id": 45,
        "statement": "is(bear, blue).",
        "description": "The bear is blue."
    },
    {
        "id": 46,
        "statement": "is(bear, nice).",
        "description": "The bear is nice."
    },
    {
        "id": 47,
        "statement": "sees(bear, tiger).",
        "description": "The bear sees the tiger."
    },
    {
        "id": 48,
        "statement": "needs(dog, bear).",
        "description": "The dog needs the bear."
    },
    {
        "id": 49,
        "statement": "sees(dog, tiger).",
        "description": "The dog sees the tiger."
    },
    {
        "id": 50,
        "statement": "needs(rabbit, dog).",
        "description": "The rabbit needs the dog."
    },
    {
        "id": 51,
        "statement": "is(tiger, rough).",
        "description": "The tiger is rough."
    },
    {
        "id": 52,
        "statement": "is(X, rough) :- is(X, nice).",
        "description": "If someone is nice then they are rough."
    },
    {
        "id": 53,
        "statement": "sees(X, rabbit) :- is(X, rough).",
        "description": "If someone is rough then they see the rabbit."
    },
    {
        "id": 54,
        "statement": "is(X, kind) :- is(X, rough).",
        "description": "All rough people are kind."
    },
    {
        "id": 55,
        "statement": "needs(X, dog) :- chases(X, rabbit), is(rabbit, kind).",
        "description": "If someone chases the rabbit and the rabbit is kind then they need the dog."
    },
    {
        "id": 56,
        "statement": "is(X, nice) :- is(X, green).",
        "description": "If someone is green then they are nice."
    },
    {
        "id": 57,
        "statement": "chases(X, tiger) :- is(X, kind), chases(X, bear).",
        "description": "If someone is kind and they chase the bear then they chase the tiger."
    },
    {
        "id": 58,
        "statement": "chases(X, rabbit) :- chases(X, bear).",
        "description": "If someone chases the bear then they chase the rabbit."
    },
    {
        "id": 59,
        "statement": "is(rabbit, green) :- sees(bear, rabbit).",
        "description": "If the bear sees the rabbit then the rabbit is green."
    },
    {
        "id": 60,
        "statement": "sees(rabbit, tiger) :- needs(rabbit, dog).",
        "description": "If the rabbit needs the dog then the rabbit sees the tiger."
    },
    {
        "id": 61,
        "statement": "visits(bear, rabbit).",
        "description": "The bear visits the rabbit."
    },
    {
        "id": 62,
        "statement": "sees(cat, bear).",
        "description": "The cat sees the bear."
    },
    {
        "id": 63,
        "statement": "needs(rabbit, bear).",
        "description": "The rabbit needs the bear."
    },
    {
        "id": 64,
        "statement": "needs(tiger, cat).",
        "description": "The tiger needs the cat."
    },
    {
        "id": 65,
        "statement": "needs(tiger, rabbit).",
        "description": "The tiger needs the rabbit."
    },
    {
        "id": 66,
        "statement": "is(X, kind) :- sees(X, bear).",
        "description": "If something sees the bear then it is kind."
    },
    {
        "id": 67,
        "statement": "sees(tiger, cat) :- visits(X, tiger), is(X, green).",
        "description": "If something visits the tiger and it is green then the tiger sees the cat."
    },
    {
        "id": 68,
        "statement": "is(tiger, round) :- visits(tiger, bear).",
        "description": "If the tiger visits the bear then the tiger is round."
    },
    {
        "id": 69,
        "statement": "is(cat, kind) :- is(X, round), visits(X, cat).",
        "description": "If something is round and it visits the cat then the cat is kind."
    },
    {
        "id": 70,
        "statement": "needs(tiger, rabbit) :- visits(X, tiger).",
        "description": "If something visits the tiger then the tiger needs the rabbit."
    },
    {
        "id": 71,
        "statement": "is(bear, rough) :- is(X, round), sees(X, bear).",
        "description": "If something is round and it sees the bear then the bear is rough."
    },
    {
        "id": 72,
        "statement": "sees(tiger, rabbit) :- visits(X, tiger), visits(tiger, cat).",
        "description": "If something visits the tiger and the tiger visits the cat then the tiger sees the rabbit."
    },
    {
        "id": 73,
        "statement": "is(X, round) :- is(X, kind).",
        "description": "All kind things are round."
    },
    {
        "id": 74,
        "statement": "is(X, kind) :- is(X, rough).",
        "description": "If something is rough then it is kind."
    },
    {
        "id": 75,
        "statement": "chases(cat, cow).",
        "description": "The cat chases the cow."
    },
    {
        "id": 76,
        "statement": "is(cat, big).",
        "description": "The cat is big."
    },
    {
        "id": 77,
        "statement": "sees(cat, tiger).",
        "description": "The cat sees the tiger."
    },
    {
        "id": 78,
        "statement": "chases(cow, cat).",
        "description": "The cow chases the cat."
    },
    {
        "id": 79,
        "statement": "chases(cow, lion).",
        "description": "The cow chases the lion."
    },
    {
        "id": 80,
        "statement": "eats(cow, cat).",
        "description": "The cow eats the cat."
    },
    {
        "id": 81,
        "statement": "is(cow, big).",
        "description": "The cow is big."
    },
    {
        "id": 82,
        "statement": "chases(lion, cow).",
        "description": "The lion chases the cow."
    },
    {
        "id": 83,
        "statement": "is(lion, big).",
        "description": "The lion is big."
    },
    {
        "id": 84,
        "statement": "is(lion, rough).",
        "description": "The lion is rough."
    },
    {
        "id": 85,
        "statement": "sees(lion, cat).",
        "description": "The lion sees the cat."
    },
    {
        "id": 86,
        "statement": "is(tiger, blue).",
        "description": "The tiger is blue."
    },
    {
        "id": 87,
        "statement": "sees(tiger, cow).",
        "description": "The tiger sees the cow."
    },
    {
        "id": 88,
        "statement": "sees(tiger, lion).",
        "description": "The tiger sees the lion."
    },
    {
        "id": 89,
        "statement": "chases(X, cat) :- sees(X, cow), eats(X, lion).",
        "description": "If something sees the cow and it eats the lion then it chases the cat."
    },
    {
        "id": 90,
        "statement": "chases(X, cat) :- is(X, big), is(X, red).",
        "description": "If something is big and red then it chases the cat."
    },
    {
        "id": 91,
        "statement": "sees(cat, cow) :- chases(tiger, cat), is(cat, big).",
        "description": "If the tiger chases the cat and the cat is big then the cat sees the cow."
    },
    {
        "id": 92,
        "statement": "eats(X, lion) :- sees(X, cow).",
        "description": "If something sees the cow then it eats the lion."
    },
    {
        "id": 93,
        "statement": "sees(X, tiger) :- is(X, cold).",
        "description": "If something is cold then it sees the tiger."
    },
    {
        "id": 94,
        "statement": "chases(cow, dog).",
        "description": "The cow chases the dog."
    },
    {
        "id": 95,
        "statement": "chases(cow, tiger).",
        "description": "The cow chases the tiger."
    },
    {
        "id": 96,
        "statement": "is(cow, cold).",
        "description": "The cow is cold."
    },
    {
        "id": 97,
        "statement": "chases(dog, cow).",
        "description": "The dog chases the cow."
    },
    {
        "id": 98,
        "statement": "chases(dog, mouse).",
        "description": "The dog chases the mouse."
    },
    {
        "id": 99,
        "statement": "is(dog, round).",
        "description": "The dog is round."
    },
    {
        "id": 100,
        "statement": "visits(dog, mouse).",
        "description": "The dog visits the mouse."
    },
    {
        "id": 101,
        "statement": "chases(mouse, tiger).",
        "description": "The mouse chases the tiger."
    },
    {
        "id": 102,
        "statement": "likes(mouse, dog).",
        "description": "The mouse likes the dog."
    },
    {
        "id": 103,
        "statement": "visits(mouse, dog).",
        "description": "The mouse visits the dog."
    },
    {
        "id": 104,
        "statement": "is(tiger, round).",
        "description": "The tiger is round."
    },
    {
        "id": 105,
        "statement": "likes(tiger, mouse).",
        "description": "The tiger likes the mouse."
    },
    {
        "id": 106,
        "statement": "visits(tiger, dog).",
        "description": "The tiger visits the dog."
    },
    {
        "id": 107,
        "statement": "chases(X, tiger) :- is(X, round).",
        "description": "If someone is round then they chase the tiger."
    },
    {
        "id": 108,
        "statement": "likes(X, mouse) :- visits(X, cow).",
        "description": "If someone visits the cow then they like the mouse."
    },
    {
        "id": 109,
        "statement": "visits(cow, mouse) :- visits(X, cow).",
        "description": "If someone visits the cow then the cow visits the mouse."
    },
    {
        "id": 110,
        "statement": "is(X, big) :- chases(X, tiger).",
        "description": "If someone chases the tiger then they are big."
    },
    {
        "id": 111,
        "statement": "likes(X, dog) :- likes(X, tiger).",
        "description": "If someone likes the tiger then they like the dog."
    },
    {
        "id": 112,
        "statement": "visits(X, cow) :- is(X, big), visits(X, mouse).",
        "description": "If someone is big and they visit the mouse then they visit the cow."
    },
    {
        "id": 113,
        "statement": "chases(cow, mouse) :- chases(cow, dog), chases(cow, tiger).",
        "description": "If the cow chases the dog and the cow chases the tiger then the cow chases the mouse."
    },
    {
        "id": 114,
        "statement": "is(cow, round) :- likes(X, cow), visits(cow, mouse).",
        "description": "If someone likes the cow and the cow visits the mouse then the cow is round."
    },
    {
        "id": 115,
        "statement": "is(X, cold) :- chases(X, mouse), not likes(X, mouse).",
        "description": "If someone chases the mouse and they do not like the mouse then they are cold."
    },
    {
        "id": 116,
        "statement": "is(anne, kind).",
        "description": "Anne is kind."
    },
    {
        "id": 117,
        "statement": "is(fiona, round).",
        "description": "Fiona is round."
    },
    {
        "id": 118,
        "statement": "is(fiona, smart).",
        "description": "Fiona is smart."
    },
    {
        "id": 119,
        "statement": "is(gary, nice).",
        "description": "Gary is nice."
    },
    {
        "id": 120,
        "statement": "is(gary, smart).",
        "description": "Gary is smart."
    },
    {
        "id": 121,
        "statement": "is(gary, white).",
        "description": "Gary is white."
    },
    {
        "id": 122,
        "statement": "is(harry, kind).",
        "description": "Harry is kind."
    },
    {
        "id": 123,
        "statement": "is(X, smart) :- is(X, cold), not is(X, round).",
        "description": "If something is cold and not round then it is smart."
    },
    {
        "id": 124,
        "statement": "is(X, smart) :- is(X, green), is(X, white).",
        "description": "If something is green and white then it is smart."
    },
    {
        "id": 125,
        "statement": "is(X, nice) :- is(X, cold).",
        "description": "Cold things are nice."
    },
    {
        "id": 126,
        "statement": "is(X, nice) :- is(X, cold).",
        "description": "If something is cold then it is nice."
    },
    {
        "id": 127,
        "statement": "is(gary, kind) :- is(gary, round), is(gary, smart).",
        "description": "If Gary is round and Gary is smart then Gary is kind."
    },
    {
        "id": 128,
        "statement": "is(X, green) :- is(X, nice).",
        "description": "Nice things are green."
    },
    {
        "id": 129,
        "statement": "is(anne, smart) :- is(anne, white).",
        "description": "If Anne is white then Anne is smart."
    },
    {
        "id": 130,
        "statement": "is(X, white) :- is(X, kind).",
        "description": "Kind things are white."
    },
    {
        "id": 131,
        "statement": "is(X, cold) :- is(X, kind), is(X, smart).",
        "description": "If something is kind and smart then it is cold."
    },
    {
        "id": 132,
        "statement": "is(fiona, cold).",
        "description": "Fiona is cold."
    },
    {
        "id": 133,
        "statement": "is(fiona, nice).",
        "description": "Fiona is nice."
    },
    {
        "id": 134,
        "statement": "is(fiona, quiet).",
        "description": "Fiona is quiet."
    },
    {
        "id": 135,
        "statement": "is(gary, furry).",
        "description": "Gary is furry."
    },
    {
        "id": 136,
        "statement": "is(X, green) :- is(X, furry).",
        "description": "All furry things are green."
    },
    {
        "id": 137,
        "statement": "is(X, green) :- is(X, quiet).",
        "description": "Quiet things are green."
    },
    {
        "id": 138,
        "statement": "is(X, quiet) :- is(X, nice).",
        "description": "All nice things are quiet."
    },
    {
        "id": 139,
        "statement": "is(X, quiet) :- is(X, cold), is(X, green).",
        "description": "All cold, green things are quiet."
    },
    {
        "id": 140,
        "statement": "is(X, quiet) :- is(X, cold).",
        "description": "Cold things are quiet."
    },
    {
        "id": 141,
        "statement": "is(X, rough) :- is(X, furry).",
        "description": "If something is furry then it is rough."
    },
    {
        "id": 142,
        "statement": "is(X, furry) :- is(X, quiet), is(X, green).",
        "description": "Quiet, green things are furry."
    },
    {
        "id": 143,
        "statement": "is(charlie, big) :- is(charlie, furry).",
        "description": "If Charlie is furry then Charlie is big."
    },
    {
        "id": 144,
        "statement": "is(X, nice) :- is(X, big), is(X, furry).",
        "description": "Big, furry things are nice."
    },
    {
        "id": 145,
        "statement": "is(anne, cold).",
        "description": "Anne is cold."
    },
    {
        "id": 146,
        "statement": "is(anne, furry).",
        "description": "Anne is furry."
    },
    {
        "id": 147,
        "statement": "is(anne, green).",
        "description": "Anne is green."
    },
    {
        "id": 148,
        "statement": "is(anne, nice).",
        "description": "Anne is nice."
    },
    {
        "id": 149,
        "statement": "is(anne, quiet).",
        "description": "Anne is quiet."
    },
    {
        "id": 150,
        "statement": "is(anne, round).",
        "description": "Anne is round."
    },
    {
        "id": 151,
        "statement": "is(charlie, green).",
        "description": "Charlie is green."
    },
    {
        "id": 152,
        "statement": "is(charlie, kind).",
        "description": "Charlie is kind."
    },
    {
        "id": 153,
        "statement": "is(charlie, round).",
        "description": "Charlie is round."
    },
    {
        "id": 154,
        "statement": "is(erin, nice).",
        "description": "Erin is nice."
    },
    {
        "id": 155,
        "statement": "is(erin, round).",
        "description": "Erin is round."
    },
    {
        "id": 156,
        "statement": "is(harry, cold).",
        "description": "Harry is cold."
    },
    {
        "id": 157,
        "statement": "is(harry, quiet).",
        "description": "Harry is quiet."
    },
    {
        "id": 158,
        "statement": "is(X, round) :- is(X, green).",
        "description": "If someone is green then they are round."
    },
    {
        "id": 159,
        "statement": "is(X, cold) :- is(X, nice).",
        "description": "All nice people are cold."
    },
    {
        "id": 160,
        "statement": "is(X, green) :- is(X, nice).",
        "description": "All nice people are green."
    },
    {
        "id": 161,
        "statement": "is(X, furry) :- is(X, green), is(X, cold).",
        "description": "If someone is green and cold then they are furry."
    },
    {
        "id": 162,
        "statement": "is(X, kind) :- is(X, cold).",
        "description": "Cold people are kind."
    },
    {
        "id": 163,
        "statement": "is(X, quiet) :- is(X, furry).",
        "description": "All furry people are quiet."
    },
    {
        "id": 164,
        "statement": "is(X, nice) :- is(X, furry).",
        "description": "Furry people are nice."
    },
    {
        "id": 165,
        "statement": "is(X, green) :- is(X, round), is(X, cold).",
        "description": "All round, cold people are green."
    },
    {
        "id": 166,
        "statement": "is(X, round) :- is(X, kind), is(X, cold).",
        "description": "Kind, cold people are round."
    },
    {
        "id": 167,
        "statement": "is(bear, round).",
        "description": "The bear is round."
    },
    {
        "id": 168,
        "statement": "likes(bear, tiger).",
        "description": "The bear likes the tiger."
    },
    {
        "id": 169,
        "statement": "likes(mouse, bear).",
        "description": "The mouse likes the bear."
    },
    {
        "id": 170,
        "statement": "likes(mouse, rabbit).",
        "description": "The mouse likes the rabbit."
    },
    {
        "id": 171,
        "statement": "chases(rabbit, mouse).",
        "description": "The rabbit chases the mouse."
    },
    {
        "id": 172,
        "statement": "is(rabbit, big).",
        "description": "The rabbit is big."
    },
    {
        "id": 173,
        "statement": "likes(rabbit, bear).",
        "description": "The rabbit likes the bear."
    },
    {
        "id": 174,
        "statement": "likes(rabbit, tiger).",
        "description": "The rabbit likes the tiger."
    },
    {
        "id": 175,
        "statement": "chases(tiger, bear).",
        "description": "The tiger chases the bear."
    },
    {
        "id": 176,
        "statement": "chases(tiger, rabbit).",
        "description": "The tiger chases the rabbit."
    },
    {
        "id": 177,
        "statement": "eats(tiger, mouse).",
        "description": "The tiger eats the mouse."
    },
    {
        "id": 178,
        "statement": "is(rabbit, round) :- is(X, cold), chases(X, rabbit).",
        "description": "If someone is cold and they chase the rabbit then the rabbit is round."
    },
    {
        "id": 179,
        "statement": "is(X, cold) :- likes(X, mouse), eats(mouse, rabbit).",
        "description": "If someone likes the mouse and the mouse eats the rabbit then they are cold."
    },
    {
        "id": 180,
        "statement": "is(X, cold) :- chases(X, mouse), chases(mouse, rabbit).",
        "description": "If someone chases the mouse and the mouse chases the rabbit then they are cold."
    },
    {
        "id": 181,
        "statement": "likes(X, mouse) :- is(X, round).",
        "description": "If someone is round then they like the mouse."
    },
    {
        "id": 182,
        "statement": "likes(bear, mouse) :- likes(X, bear).",
        "description": "If someone likes the bear then the bear likes the mouse."
    },
    {
        "id": 183,
        "statement": "eats(X, bear) :- eats(X, mouse).",
        "description": "If someone eats the mouse then they eat the bear."
    },
    {
        "id": 184,
        "statement": "eats(X, mouse) :- is(X, cold).",
        "description": "If someone is cold then they eat the mouse."
    },
    {
        "id": 185,
        "statement": "eats(rabbit, tiger) :- eats(X, rabbit).",
        "description": "If someone eats the rabbit then the rabbit eats the tiger."
    },
    {
        "id": 186,
        "statement": "eats(mouse, rabbit) :- likes(mouse, rabbit).",
        "description": "If the mouse likes the rabbit then the mouse eats the rabbit."
    },
    {
        "id": 187,
        "statement": "is(cat, red).",
        "description": "The cat is red."
    },
    {
        "id": 188,
        "statement": "likes(lion, cat).",
        "description": "The lion likes the cat."
    },
    {
        "id": 189,
        "statement": "needs(lion, squirrel).",
        "description": "The lion needs the squirrel."
    },
    {
        "id": 190,
        "statement": "visits(lion, cat).",
        "description": "The lion visits the cat."
    },
    {
        "id": 191,
        "statement": "visits(lion, mouse).",
        "description": "The lion visits the mouse."
    },
    {
        "id": 192,
        "statement": "visits(lion, squirrel).",
        "description": "The lion visits the squirrel."
    },
    {
        "id": 193,
        "statement": "likes(mouse, squirrel).",
        "description": "The mouse likes the squirrel."
    },
    {
        "id": 194,
        "statement": "needs(mouse, cat).",
        "description": "The mouse needs the cat."
    },
    {
        "id": 195,
        "statement": "is(squirrel, young).",
        "description": "The squirrel is young."
    },
    {
        "id": 196,
        "statement": "visits(squirrel, mouse).",
        "description": "The squirrel visits the mouse."
    },
    {
        "id": 197,
        "statement": "needs(mouse, squirrel) :- needs(squirrel, mouse).",
        "description": "If the squirrel needs the mouse then the mouse needs the squirrel."
    },
    {
        "id": 198,
        "statement": "visits(X, cat) :- is(X, blue).",
        "description": "If someone is blue then they visit the cat."
    },
    {
        "id": 199,
        "statement": "is(mouse, round) :- is(mouse, blue).",
        "description": "If the mouse is blue then the mouse is round."
    },
    {
        "id": 200,
        "statement": "likes(squirrel, cat) :- needs(cat, squirrel), is(squirrel, red).",
        "description": "If the cat needs the squirrel and the squirrel is red then the squirrel likes the cat."
    },
    {
        "id": 201,
        "statement": "needs(X, mouse) :- visits(X, cat).",
        "description": "If someone visits the cat then they need the mouse."
    },
    {
        "id": 202,
        "statement": "is(X, blue) :- visits(X, cat).",
        "description": "If someone visits the cat then they are blue."
    },
    {
        "id": 203,
        "statement": "is(X, blue) :- visits(X, mouse).",
        "description": "If someone visits the mouse then they are blue."
    },
    {
        "id": 204,
        "statement": "is(X, red) :- is(X, big).",
        "description": "Big people are red."
    },
    {
        "id": 205,
        "statement": "visits(mouse, lion) :- needs(mouse, squirrel), is(squirrel, blue).",
        "description": "If the mouse needs the squirrel and the squirrel is blue then the mouse visits the lion."
    },
    {
        "id": 206,
        "statement": "is(dave, blue).",
        "description": "Dave is blue."
    },
    {
        "id": 207,
        "statement": "is(dave, nice).",
        "description": "Dave is nice."
    },
    {
        "id": 208,
        "statement": "is(erin, blue).",
        "description": "Erin is blue."
    },
    {
        "id": 209,
        "statement": "is(erin, red).",
        "description": "Erin is red."
    },
    {
        "id": 210,
        "statement": "is(gary, quiet).",
        "description": "Gary is quiet."
    },
    {
        "id": 211,
        "statement": "is(harry, blue).",
        "description": "Harry is blue."
    },
    {
        "id": 212,
        "statement": "is(harry, furry).",
        "description": "Harry is furry."
    },
    {
        "id": 213,
        "statement": "is(harry, smart).",
        "description": "Harry is smart."
    },
    {
        "id": 214,
        "statement": "is(X, furry) :- is(X, smart).",
        "description": "Smart things are furry."
    },
    {
        "id": 215,
        "statement": "is(gary, blue) :- is(gary, furry).",
        "description": "If Gary is furry then Gary is blue."
    },
    {
        "id": 216,
        "statement": "is(X, cold) :- is(X, quiet), is(X, red).",
        "description": "All quiet, red things are cold."
    },
    {
        "id": 217,
        "statement": "is(gary, red) :- is(gary, blue), is(gary, nice).",
        "description": "If Gary is blue and Gary is nice then Gary is red."
    },
    {
        "id": 218,
        "statement": "is(X, smart) :- is(X, quiet), is(X, cold).",
        "description": "If something is quiet and cold then it is smart."
    },
    {
        "id": 219,
        "statement": "is(X, cold) :- is(X, red).",
        "description": "Red things are cold."
    },
    {
        "id": 220,
        "statement": "is(X, blue) :- is(X, smart), is(X, cold).",
        "description": "Smart, cold things are blue."
    },
    {
        "id": 221,
        "statement": "is(X, nice) :- is(X, furry).",
        "description": "All furry things are nice."
    },
    {
        "id": 222,
        "statement": "is(erin, quiet) :- is(erin, red), is(erin, cold).",
        "description": "If Erin is red and Erin is cold then Erin is quiet."
    },
    {
        "id": 223,
        "statement": "is(bob, green).",
        "description": "Bob is green."
    },
    {
        "id": 224,
        "statement": "is(bob, red).",
        "description": "Bob is red."
    },
    {
        "id": 225,
        "statement": "is(charlie, blue).",
        "description": "Charlie is blue."
    },
    {
        "id": 226,
        "statement": "is(charlie, white).",
        "description": "Charlie is white."
    },
    {
        "id": 227,
        "statement": "is(charlie, young).",
        "description": "Charlie is young."
    },
    {
        "id": 228,
        "statement": "is(dave, young).",
        "description": "Dave is young."
    },
    {
        "id": 229,
        "statement": "is(fiona, young).",
        "description": "Fiona is young."
    },
    {
        "id": 230,
        "statement": "is(X, young) :- is(X, white).",
        "description": "If someone is white then they are young."
    },
    {
        "id": 231,
        "statement": "is(dave, white) :- is(dave, green), is(dave, red).",
        "description": "If Dave is green and Dave is red then Dave is white."
    },
    {
        "id": 232,
        "statement": "is(charlie, quiet) :- is(charlie, young).",
        "description": "If Charlie is young then Charlie is quiet."
    },
    {
        "id": 233,
        "statement": "is(X, white) :- is(X, green).",
        "description": "All green people are white."
    },
    {
        "id": 234,
        "statement": "is(X, blue) :- is(X, white), is(X, kind).",
        "description": "White, kind people are blue."
    },
    {
        "id": 235,
        "statement": "is(X, kind) :- is(X, quiet).",
        "description": "Quiet people are kind."
    },
    {
        "id": 236,
        "statement": "is(X, green) :- is(X, young), not is(X, red).",
        "description": "If someone is young and not red then they are green."
    },
    {
        "id": 237,
        "statement": "is(X, quiet) :- is(X, white).",
        "description": "White people are quiet."
    },
    {
        "id": 238,
        "statement": "is(dave, big).",
        "description": "Dave is big."
    },
    {
        "id": 239,
        "statement": "is(dave, kind).",
        "description": "Dave is kind."
    },
    {
        "id": 240,
        "statement": "is(dave, red).",
        "description": "Dave is red."
    },
    {
        "id": 241,
        "statement": "is(harry, big).",
        "description": "Harry is big."
    },
    {
        "id": 242,
        "statement": "is(harry, red).",
        "description": "Harry is red."
    },
    {
        "id": 243,
        "statement": "is(harry, young).",
        "description": "Harry is young."
    },
    {
        "id": 244,
        "statement": "is(erin, red) :- is(erin, blue), is(erin, rough).",
        "description": "If Erin is blue and Erin is rough then Erin is red."
    },
    {
        "id": 245,
        "statement": "is(dave, red) :- is(dave, kind).",
        "description": "If Dave is kind then Dave is red."
    },
    {
        "id": 246,
        "statement": "is(X, quiet) :- is(X, blue), is(X, kind).",
        "description": "All blue, kind people are quiet."
    },
    {
        "id": 247,
        "statement": "is(X, big) :- is(X, quiet).",
        "description": "If someone is quiet then they are big."
    },
    {
        "id": 248,
        "statement": "is(X, kind) :- is(X, rough), is(X, red).",
        "description": "If someone is rough and red then they are kind."
    },
    {
        "id": 249,
        "statement": "is(X, big) :- is(X, young).",
        "description": "If someone is young then they are big."
    },
    {
        "id": 250,
        "statement": "is(X, quiet) :- is(X, red), is(X, kind).",
        "description": "Red, kind people are quiet."
    },
    {
        "id": 251,
        "statement": "is(X, rough) :- is(X, blue).",
        "description": "Blue people are rough."
    },
    {
        "id": 252,
        "statement": "is(harry, kind) :- is(harry, quiet).",
        "description": "If Harry is quiet then Harry is kind."
    },
    {
        "id": 253,
        "statement": "is(bob, furry).",
        "description": "Bob is furry."
    },
    {
        "id": 254,
        "statement": "is(bob, quiet).",
        "description": "Bob is quiet."
    },
    {
        "id": 255,
        "statement": "is(bob, round).",
        "description": "Bob is round."
    },
    {
        "id": 256,
        "statement": "is(X, white) :- is(X, quiet), not is(X, kind).",
        "description": "If someone is quiet and not kind then they are white."
    },
    {
        "id": 257,
        "statement": "is(X, white) :- is(X, big).",
        "description": "All big people are white."
    },
    {
        "id": 258,
        "statement": "is(X, big) :- is(X, round).",
        "description": "If someone is round then they are big."
    },
    {
        "id": 259,
        "statement": "is(X, furry) :- is(X, red).",
        "description": "All red people are furry."
    },
    {
        "id": 260,
        "statement": "is(X, furry) :- is(X, quiet).",
        "description": "Quiet people are furry."
    },
    {
        "id": 261,
        "statement": "is(X, furry) :- is(X, round).",
        "description": "All round people are furry."
    },
    {
        "id": 262,
        "statement": "is(X, round) :- is(X, white).",
        "description": "All white people are round."
    },
    {
        "id": 263,
        "statement": "is(bob, big).",
        "description": "Bob is big."
    },
    {
        "id": 264,
        "statement": "is(bob, smart).",
        "description": "Bob is smart."
    },
    {
        "id": 265,
        "statement": "is(bob, young).",
        "description": "Bob is young."
    },
    {
        "id": 266,
        "statement": "is(erin, smart).",
        "description": "Erin is smart."
    },
    {
        "id": 267,
        "statement": "is(erin, young).",
        "description": "Erin is young."
    },
    {
        "id": 268,
        "statement": "is(X, quiet) :- is(X, furry), is(X, blue).",
        "description": "All furry, blue things are quiet."
    },
    {
        "id": 269,
        "statement": "is(X, big) :- is(X, rough).",
        "description": "Rough things are big."
    },
    {
        "id": 270,
        "statement": "is(X, blue) :- is(X, furry).",
        "description": "If something is furry then it is blue."
    },
    {
        "id": 271,
        "statement": "is(erin, young) :- is(erin, rough), is(erin, big).",
        "description": "If Erin is rough and Erin is big then Erin is young."
    },
    {
        "id": 272,
        "statement": "is(X, young) :- is(X, smart), is(X, rough).",
        "description": "All smart, rough things are young."
    },
    {
        "id": 273,
        "statement": "is(X, smart) :- is(X, quiet), is(X, big).",
        "description": "All quiet, big things are smart."
    },
    {
        "id": 274,
        "statement": "is(X, young) :- is(X, rough).",
        "description": "All rough things are young."
    },
    {
        "id": 275,
        "statement": "is(X, young) :- is(X, quiet), is(X, blue).",
        "description": "If something is quiet and blue then it is young."
    },
    {
        "id": 276,
        "statement": "is(X, furry) :- is(X, big), is(X, young).",
        "description": "If something is big and young then it is furry."
    },
    {
        "id": 277,
        "statement": "is(gary, green).",
        "description": "Gary is green."
    },
    {
        "id": 278,
        "statement": "is(gary, red).",
        "description": "Gary is red."
    },
    {
        "id": 279,
        "statement": "is(gary, young).",
        "description": "Gary is young."
    },
    {
        "id": 280,
        "statement": "is(harry, nice).",
        "description": "Harry is nice."
    },
    {
        "id": 281,
        "statement": "is(harry, white).",
        "description": "Harry is white."
    },
    {
        "id": 282,
        "statement": "is(X, white) :- is(X, young), not is(X, smart).",
        "description": "If someone is young and not smart then they are white."
    },
    {
        "id": 283,
        "statement": "is(X, furry) :- is(X, young), is(X, nice).",
        "description": "All young, nice people are furry."
    },
    {
        "id": 284,
        "statement": "is(dave, young) :- is(dave, green).",
        "description": "If Dave is green then Dave is young."
    },
    {
        "id": 285,
        "statement": "is(X, nice) :- is(X, smart), is(X, green).",
        "description": "Smart, green people are nice."
    },
    {
        "id": 286,
        "statement": "is(X, green) :- is(X, young).",
        "description": "All young people are green."
    },
    {
        "id": 287,
        "statement": "is(dave, white) :- is(dave, smart), is(dave, furry).",
        "description": "If Dave is smart and Dave is furry then Dave is white."
    },
    {
        "id": 288,
        "statement": "is(X, red) :- is(X, green), is(X, white).",
        "description": "Green, white people are red."
    },
    {
        "id": 289,
        "statement": "is(X, red) :- is(X, smart), not is(X, young).",
        "description": "If someone is smart and not young then they are red."
    },
    {
        "id": 290,
        "statement": "is(bob, blue).",
        "description": "Bob is blue."
    },
    {
        "id": 291,
        "statement": "is(charlie, nice).",
        "description": "Charlie is nice."
    },
    {
        "id": 292,
        "statement": "is(fiona, kind).",
        "description": "Fiona is kind."
    },
    {
        "id": 293,
        "statement": "is(X, young) :- is(X, quiet).",
        "description": "Quiet people are young."
    },
    {
        "id": 294,
        "statement": "is(X, kind) :- is(X, young), not is(X, blue).",
        "description": "If someone is young and not blue then they are kind."
    },
    {
        "id": 295,
        "statement": "is(X, big) :- is(X, nice).",
        "description": "Nice people are big."
    },
    {
        "id": 296,
        "statement": "is(X, quiet) :- is(X, young).",
        "description": "If someone is young then they are quiet."
    },
    {
        "id": 297,
        "statement": "is(X, quiet) :- is(X, furry).",
        "description": "Furry people are quiet."
    },
    {
        "id": 298,
        "statement": "is(X, nice) :- is(X, kind).",
        "description": "All kind people are nice."
    },
    {
        "id": 299,
        "statement": "is(anne, white).",
        "description": "Anne is white."
    },
    {
        "id": 300,
        "statement": "is(bob, nice).",
        "description": "Bob is nice."
    },
    {
        "id": 301,
        "statement": "is(bob, rough).",
        "description": "Bob is rough."
    },
    {
        "id": 302,
        "statement": "is(bob, white).",
        "description": "Bob is white."
    },
    {
        "id": 303,
        "statement": "is(gary, round).",
        "description": "Gary is round."
    },
    {
        "id": 304,
        "statement": "is(X, young) :- is(X, white).",
        "description": "All white things are young."
    },
    {
        "id": 305,
        "statement": "is(X, smart) :- is(X, nice).",
        "description": "If something is nice then it is smart."
    },
    {
        "id": 306,
        "statement": "is(bob, rough) :- is(bob, white).",
        "description": "If Bob is white then Bob is rough."
    },
    {
        "id": 307,
        "statement": "is(X, round) :- is(X, smart).",
        "description": "All smart things are round."
    },
    {
        "id": 308,
        "statement": "is(X, round) :- is(X, rough), is(X, white).",
        "description": "All rough, white things are round."
    },
    {
        "id": 309,
        "statement": "is(anne, nice) :- is(anne, young), is(anne, white).",
        "description": "If Anne is young and Anne is white then Anne is nice."
    },
    {
        "id": 310,
        "statement": "is(gary, nice) :- is(gary, rough).",
        "description": "If Gary is rough then Gary is nice."
    },
    {
        "id": 311,
        "statement": "is(X, rough) :- is(X, round).",
        "description": "All round things are rough."
    },
    {
        "id": 312,
        "statement": "chases(bear, squirrel).",
        "description": "The bear chases the squirrel."
    },
    {
        "id": 313,
        "statement": "eats(bear, squirrel).",
        "description": "The bear eats the squirrel."
    },
    {
        "id": 314,
        "statement": "eats(bear, tiger).",
        "description": "The bear eats the tiger."
    },
    {
        "id": 315,
        "statement": "is(bear, kind).",
        "description": "The bear is kind."
    },
    {
        "id": 316,
        "statement": "is(bear, red).",
        "description": "The bear is red."
    },
    {
        "id": 317,
        "statement": "needs(bear, lion).",
        "description": "The bear needs the lion."
    },
    {
        "id": 318,
        "statement": "needs(bear, squirrel).",
        "description": "The bear needs the squirrel."
    },
    {
        "id": 319,
        "statement": "chases(lion, bear).",
        "description": "The lion chases the bear."
    },
    {
        "id": 320,
        "statement": "chases(lion, squirrel).",
        "description": "The lion chases the squirrel."
    },
    {
        "id": 321,
        "statement": "chases(lion, tiger).",
        "description": "The lion chases the tiger."
    },
    {
        "id": 322,
        "statement": "eats(lion, squirrel).",
        "description": "The lion eats the squirrel."
    },
    {
        "id": 323,
        "statement": "needs(lion, bear).",
        "description": "The lion needs the bear."
    },
    {
        "id": 324,
        "statement": "eats(squirrel, lion).",
        "description": "The squirrel eats the lion."
    },
    {
        "id": 325,
        "statement": "eats(squirrel, tiger).",
        "description": "The squirrel eats the tiger."
    },
    {
        "id": 326,
        "statement": "is(tiger, nice).",
        "description": "The tiger is nice."
    },
    {
        "id": 327,
        "statement": "needs(bear, lion) :- is(bear, blue).",
        "description": "If the bear is blue then the bear needs the lion."
    },
    {
        "id": 328,
        "statement": "chases(X, tiger) :- needs(X, lion), is(lion, blue).",
        "description": "If something needs the lion and the lion is blue then it chases the tiger."
    },
    {
        "id": 329,
        "statement": "needs(X, squirrel) :- eats(X, bear), eats(X, squirrel).",
        "description": "If something eats the bear and it eats the squirrel then it needs the squirrel."
    },
    {
        "id": 330,
        "statement": "is(X, nice) :- chases(X, tiger).",
        "description": "If something chases the tiger then it is nice."
    },
    {
        "id": 331,
        "statement": "eats(tiger, lion) :- eats(bear, tiger), needs(tiger, bear).",
        "description": "If the bear eats the tiger and the tiger needs the bear then the tiger eats the lion."
    },
    {
        "id": 332,
        "statement": "eats(X, tiger) :- is(X, rough).",
        "description": "If something is rough then it eats the tiger."
    },
    {
        "id": 333,
        "statement": "is(X, blue) :- is(X, nice).",
        "description": "All nice things are blue."
    },
    {
        "id": 334,
        "statement": "is(erin, big).",
        "description": "Erin is big."
    },
    {
        "id": 335,
        "statement": "is(fiona, furry).",
        "description": "Fiona is furry."
    },
    {
        "id": 336,
        "statement": "is(fiona, red).",
        "description": "Fiona is red."
    },
    {
        "id": 337,
        "statement": "is(X, red) :- is(X, furry).",
        "description": "If someone is furry then they are red."
    },
    {
        "id": 338,
        "statement": "is(X, red) :- is(X, quiet).",
        "description": "All quiet people are red."
    },
    {
        "id": 339,
        "statement": "is(anne, quiet) :- is(anne, cold).",
        "description": "If Anne is cold then Anne is quiet."
    },
    {
        "id": 340,
        "statement": "is(X, big) :- is(X, furry).",
        "description": "If someone is furry then they are big."
    },
    {
        "id": 341,
        "statement": "is(X, furry) :- is(X, quiet), is(X, smart).",
        "description": "All quiet, smart people are furry."
    },
    {
        "id": 342,
        "statement": "is(X, smart) :- is(X, red), is(X, quiet).",
        "description": "If someone is red and quiet then they are smart."
    },
    {
        "id": 343,
        "statement": "is(X, cold) :- is(X, furry), is(X, big).",
        "description": "If someone is furry and big then they are cold."
    },
    {
        "id": 344,
        "statement": "chases(cat, mouse).",
        "description": "The cat chases the mouse."
    },
    {
        "id": 345,
        "statement": "visits(cat, cow).",
        "description": "The cat visits the cow."
    },
    {
        "id": 346,
        "statement": "visits(cat, rabbit).",
        "description": "The cat visits the rabbit."
    },
    {
        "id": 347,
        "statement": "is(cow, green).",
        "description": "The cow is green."
    },
    {
        "id": 348,
        "statement": "likes(cow, rabbit).",
        "description": "The cow likes the rabbit."
    },
    {
        "id": 349,
        "statement": "chases(mouse, rabbit).",
        "description": "The mouse chases the rabbit."
    },
    {
        "id": 350,
        "statement": "is(mouse, big).",
        "description": "The mouse is big."
    },
    {
        "id": 351,
        "statement": "is(mouse, green).",
        "description": "The mouse is green."
    },
    {
        "id": 352,
        "statement": "likes(rabbit, mouse).",
        "description": "The rabbit likes the mouse."
    },
    {
        "id": 353,
        "statement": "chases(cow, cat) :- chases(X, mouse), visits(X, cow).",
        "description": "If someone chases the mouse and they visit the cow then the cow chases the cat."
    },
    {
        "id": 354,
        "statement": "chases(cow, cat) :- visits(X, cow), not is(cow, round).",
        "description": "If someone visits the cow and the cow is not round then the cow chases the cat."
    },
    {
        "id": 355,
        "statement": "visits(mouse, cat) :- chases(X, mouse), chases(X, cat).",
        "description": "If someone chases the mouse and they chase the cat then the mouse visits the cat."
    },
    {
        "id": 356,
        "statement": "visits(cat, mouse) :- chases(X, cat), visits(cat, cow).",
        "description": "If someone chases the cat and the cat visits the cow then the cat visits the mouse."
    },
    {
        "id": 357,
        "statement": "chases(X, cow) :- visits(X, rabbit), is(rabbit, round).",
        "description": "If someone visits the rabbit and the rabbit is round then they chase the cow."
    },
    {
        "id": 358,
        "statement": "chases(cat, rabbit) :- visits(X, cat).",
        "description": "If someone visits the cat then the cat chases the rabbit."
    },
    {
        "id": 359,
        "statement": "likes(cat, mouse) :- visits(X, mouse), not chases(X, cat).",
        "description": "If someone visits the mouse and they do not chase the cat then the cat likes the mouse."
    },
    {
        "id": 360,
        "statement": "likes(X, cat) :- likes(X, mouse), not is(X, cold).",
        "description": "If someone likes the mouse and they are not cold then they like the cat."
    },
    {
        "id": 361,
        "statement": "is(X, red) :- likes(X, cat), not visits(X, cat).",
        "description": "If someone likes the cat and they do not visit the cat then they are red."
    },
    {
        "id": 362,
        "statement": "is(dave, green).",
        "description": "Dave is green."
    },
    {
        "id": 363,
        "statement": "is(gary, cold).",
        "description": "Gary is cold."
    },
    {
        "id": 364,
        "statement": "is(X, cold) :- is(X, furry).",
        "description": "If something is furry then it is cold."
    },
    {
        "id": 365,
        "statement": "is(X, cold) :- is(X, nice).",
        "description": "Nice things are cold."
    },
    {
        "id": 366,
        "statement": "is(X, blue) :- is(X, green).",
        "description": "Green things are blue."
    },
    {
        "id": 367,
        "statement": "is(X, blue) :- is(X, red).",
        "description": "All red things are blue."
    },
    {
        "id": 368,
        "statement": "is(X, furry) :- is(X, blue).",
        "description": "All blue things are furry."
    },
    {
        "id": 369,
        "statement": "is(X, furry) :- is(X, nice).",
        "description": "If something is nice then it is furry."
    },
    {
        "id": 370,
        "statement": "is(X, nice) :- is(X, red).",
        "description": "Red things are nice."
    },
    {
        "id": 371,
        "statement": "is(X, red) :- is(X, cold).",
        "description": "All cold things are red."
    },
    {
        "id": 372,
        "statement": "is(X, quiet) :- is(X, furry), not is(X, nice).",
        "description": "If something is furry and not nice then it is quiet."
    },
    {
        "id": 373,
        "statement": "is(cat, green).",
        "description": "The cat is green."
    },
    {
        "id": 374,
        "statement": "chases(cow, rabbit).",
        "description": "The cow chases the rabbit."
    },
    {
        "id": 375,
        "statement": "needs(cow, cat).",
        "description": "The cow needs the cat."
    },
    {
        "id": 376,
        "statement": "chases(rabbit, squirrel).",
        "description": "The rabbit chases the squirrel."
    },
    {
        "id": 377,
        "statement": "eats(rabbit, cow).",
        "description": "The rabbit eats the cow."
    },
    {
        "id": 378,
        "statement": "eats(rabbit, squirrel).",
        "description": "The rabbit eats the squirrel."
    },
    {
        "id": 379,
        "statement": "needs(rabbit, cat).",
        "description": "The rabbit needs the cat."
    },
    {
        "id": 380,
        "statement": "chases(squirrel, cow).",
        "description": "The squirrel chases the cow."
    },
    {
        "id": 381,
        "statement": "eats(squirrel, cat).",
        "description": "The squirrel eats the cat."
    },
    {
        "id": 382,
        "statement": "is(squirrel, red).",
        "description": "The squirrel is red."
    },
    {
        "id": 383,
        "statement": "is(squirrel, rough).",
        "description": "The squirrel is rough."
    },
    {
        "id": 384,
        "statement": "eats(squirrel, cow) :- needs(X, squirrel).",
        "description": "If something needs the squirrel then the squirrel eats the cow."
    },
    {
        "id": 385,
        "statement": "needs(cow, squirrel) :- eats(X, cow), needs(cow, rabbit).",
        "description": "If something eats the cow and the cow needs the rabbit then the cow needs the squirrel."
    },
    {
        "id": 386,
        "statement": "needs(X, cat) :- eats(X, cow), chases(cow, rabbit).",
        "description": "If something eats the cow and the cow chases the rabbit then it needs the cat."
    },
    {
        "id": 387,
        "statement": "is(squirrel, round) :- eats(X, squirrel).",
        "description": "If something eats the squirrel then the squirrel is round."
    },
    {
        "id": 388,
        "statement": "chases(rabbit, cow) :- needs(rabbit, cow).",
        "description": "If the rabbit needs the cow then the rabbit chases the cow."
    },
    {
        "id": 389,
        "statement": "chases(rabbit, cow) :- is(rabbit, red).",
        "description": "If the rabbit is red then the rabbit chases the cow."
    },
    {
        "id": 390,
        "statement": "needs(X, rabbit) :- needs(X, cat).",
        "description": "If something needs the cat then it needs the rabbit."
    },
    {
        "id": 391,
        "statement": "is(cow, round) :- not needs(cow, cat).",
        "description": "If the cow does not need the cat then the cow is round."
    },
    {
        "id": 392,
        "statement": "eats(cat, lion).",
        "description": "The cat eats the lion."
    },
    {
        "id": 393,
        "statement": "eats(cat, mouse).",
        "description": "The cat eats the mouse."
    },
    {
        "id": 394,
        "statement": "eats(cat, squirrel).",
        "description": "The cat eats the squirrel."
    },
    {
        "id": 395,
        "statement": "likes(lion, mouse).",
        "description": "The lion likes the mouse."
    },
    {
        "id": 396,
        "statement": "likes(lion, squirrel).",
        "description": "The lion likes the squirrel."
    },
    {
        "id": 397,
        "statement": "needs(lion, mouse).",
        "description": "The lion needs the mouse."
    },
    {
        "id": 398,
        "statement": "eats(mouse, lion).",
        "description": "The mouse eats the lion."
    },
    {
        "id": 399,
        "statement": "eats(mouse, squirrel).",
        "description": "The mouse eats the squirrel."
    },
    {
        "id": 400,
        "statement": "is(mouse, round).",
        "description": "The mouse is round."
    },
    {
        "id": 401,
        "statement": "likes(squirrel, lion).",
        "description": "The squirrel likes the lion."
    },
    {
        "id": 402,
        "statement": "needs(squirrel, cat).",
        "description": "The squirrel needs the cat."
    },
    {
        "id": 403,
        "statement": "needs(squirrel, mouse).",
        "description": "The squirrel needs the mouse."
    },
    {
        "id": 404,
        "statement": "is(X, round) :- is(X, blue), eats(X, lion).",
        "description": "If something is blue and it eats the lion then it is round."
    },
    {
        "id": 405,
        "statement": "is(X, round) :- likes(X, cat).",
        "description": "If something likes the cat then it is round."
    },
    {
        "id": 406,
        "statement": "likes(X, mouse) :- likes(X, squirrel), likes(squirrel, lion).",
        "description": "If something likes the squirrel and the squirrel likes the lion then it likes the mouse."
    },
    {
        "id": 407,
        "statement": "is(X, blue) :- eats(X, lion), likes(X, mouse).",
        "description": "If something eats the lion and it likes the mouse then it is blue."
    },
    {
        "id": 408,
        "statement": "likes(mouse, squirrel) :- needs(cat, lion), not eats(cat, mouse).",
        "description": "If the cat needs the lion and the cat does not eat the mouse then the mouse likes the squirrel."
    },
    {
        "id": 409,
        "statement": "likes(lion, cat) :- eats(X, lion), not is(lion, red).",
        "description": "If something eats the lion and the lion is not red then the lion likes the cat."
    },
    {
        "id": 410,
        "statement": "likes(lion, mouse) :- needs(X, mouse), not needs(mouse, lion).",
        "description": "If something needs the mouse and the mouse does not need the lion then the lion likes the mouse."
    },
    {
        "id": 411,
        "statement": "is(X, young) :- is(X, round).",
        "description": "Round things are young."
    },
    {
        "id": 412,
        "statement": "likes(cat, squirrel) :- likes(X, cat).",
        "description": "If something likes the cat then the cat likes the squirrel."
    },
    {
        "id": 413,
        "statement": "eats(lion, tiger).",
        "description": "The lion eats the tiger."
    },
    {
        "id": 414,
        "statement": "is(mouse, young).",
        "description": "The mouse is young."
    },
    {
        "id": 415,
        "statement": "needs(mouse, tiger).",
        "description": "The mouse needs the tiger."
    },
    {
        "id": 416,
        "statement": "chases(squirrel, lion).",
        "description": "The squirrel chases the lion."
    },
    {
        "id": 417,
        "statement": "chases(squirrel, mouse).",
        "description": "The squirrel chases the mouse."
    },
    {
        "id": 418,
        "statement": "needs(squirrel, tiger).",
        "description": "The squirrel needs the tiger."
    },
    {
        "id": 419,
        "statement": "chases(tiger, lion).",
        "description": "The tiger chases the lion."
    },
    {
        "id": 420,
        "statement": "chases(tiger, mouse).",
        "description": "The tiger chases the mouse."
    },
    {
        "id": 421,
        "statement": "is(tiger, cold).",
        "description": "The tiger is cold."
    },
    {
        "id": 422,
        "statement": "needs(tiger, squirrel).",
        "description": "The tiger needs the squirrel."
    },
    {
        "id": 423,
        "statement": "needs(lion, tiger) :- chases(X, lion), eats(X, lion).",
        "description": "If something chases the lion and it eats the lion then the lion needs the tiger."
    },
    {
        "id": 424,
        "statement": "is(mouse, young) :- is(mouse, cold).",
        "description": "If the mouse is cold then the mouse is young."
    },
    {
        "id": 425,
        "statement": "chases(X, tiger) :- is(X, young), needs(X, lion).",
        "description": "If something is young and it needs the lion then it chases the tiger."
    },
    {
        "id": 426,
        "statement": "chases(X, mouse) :- is(X, young), needs(X, lion).",
        "description": "If something is young and it needs the lion then it chases the mouse."
    },
    {
        "id": 427,
        "statement": "eats(tiger, lion) :- chases(X, tiger).",
        "description": "If something chases the tiger then the tiger eats the lion."
    },
    {
        "id": 428,
        "statement": "eats(X, squirrel) :- is(X, big).",
        "description": "If something is big then it eats the squirrel."
    },
    {
        "id": 429,
        "statement": "needs(X, squirrel) :- needs(X, lion).",
        "description": "If something needs the lion then it needs the squirrel."
    },
    {
        "id": 430,
        "statement": "chases(X, tiger) :- chases(X, mouse).",
        "description": "If something chases the mouse then it chases the tiger."
    },
    {
        "id": 431,
        "statement": "chases(X, mouse) :- eats(X, tiger), needs(X, tiger).",
        "description": "If something eats the tiger and it needs the tiger then it chases the mouse."
    },
    {
        "id": 432,
        "statement": "likes(bald_eagle, bear).",
        "description": "The bald eagle likes the bear."
    },
    {
        "id": 433,
        "statement": "likes(bear, lion).",
        "description": "The bear likes the lion."
    },
    {
        "id": 434,
        "statement": "sees(bear, bald_eagle).",
        "description": "The bear sees the bald eagle."
    },
    {
        "id": 435,
        "statement": "visits(bear, tiger).",
        "description": "The bear visits the tiger."
    },
    {
        "id": 436,
        "statement": "visits(lion, bear).",
        "description": "The lion visits the bear."
    },
    {
        "id": 437,
        "statement": "likes(tiger, bear).",
        "description": "The tiger likes the bear."
    },
    {
        "id": 438,
        "statement": "sees(tiger, bald_eagle).",
        "description": "The tiger sees the bald eagle."
    },
    {
        "id": 439,
        "statement": "visits(tiger, bear).",
        "description": "The tiger visits the bear."
    },
    {
        "id": 440,
        "statement": "is(X, cold) :- sees(X, bear).",
        "description": "If something sees the bear then it is cold."
    },
    {
        "id": 441,
        "statement": "likes(X, lion) :- visits(X, bear), is(X, cold).",
        "description": "If something visits the bear and it is cold then it likes the lion."
    },
    {
        "id": 442,
        "statement": "visits(X, bear) :- is(X, cold).",
        "description": "If something is cold then it visits the bear."
    },
    {
        "id": 443,
        "statement": "likes(tiger, bald_eagle) :- is(tiger, big), likes(tiger, bear).",
        "description": "If the tiger is big and the tiger likes the bear then the tiger likes the bald eagle."
    },
    {
        "id": 444,
        "statement": "sees(bear, tiger) :- likes(X, bear).",
        "description": "If something likes the bear then the bear sees the tiger."
    },
    {
        "id": 445,
        "statement": "visits(X, lion) :- is(X, round).",
        "description": "If something is round then it visits the lion."
    },
    {
        "id": 446,
        "statement": "sees(bald_eagle, bear) :- sees(tiger, bald_eagle), likes(tiger, lion).",
        "description": "If the tiger sees the bald eagle and the tiger likes the lion then the bald eagle sees the bear."
    },
    {
        "id": 447,
        "statement": "visits(X, lion) :- sees(X, lion).",
        "description": "If something sees the lion then it visits the lion."
    },
    {
        "id": 448,
        "statement": "is(bald_eagle, nice) :- is(X, nice), sees(X, bald_eagle).",
        "description": "If something is nice and it sees the bald eagle then the bald eagle is nice."
    },
    {
        "id": 449,
        "statement": "eats(bald_eagle, bear).",
        "description": "The bald eagle eats the bear."
    },
    {
        "id": 450,
        "statement": "visits(bald_eagle, bear).",
        "description": "The bald eagle visits the bear."
    },
    {
        "id": 451,
        "statement": "eats(bear, bald_eagle).",
        "description": "The bear eats the bald eagle."
    },
    {
        "id": 452,
        "statement": "eats(bear, lion).",
        "description": "The bear eats the lion."
    },
    {
        "id": 453,
        "statement": "needs(bear, bald_eagle).",
        "description": "The bear needs the bald eagle."
    },
    {
        "id": 454,
        "statement": "is(lion, blue).",
        "description": "The lion is blue."
    },
    {
        "id": 455,
        "statement": "eats(tiger, bald_eagle).",
        "description": "The tiger eats the bald eagle."
    },
    {
        "id": 456,
        "statement": "eats(tiger, bear).",
        "description": "The tiger eats the bear."
    },
    {
        "id": 457,
        "statement": "eats(tiger, lion).",
        "description": "The tiger eats the lion."
    },
    {
        "id": 458,
        "statement": "needs(tiger, bear).",
        "description": "The tiger needs the bear."
    },
    {
        "id": 459,
        "statement": "eats(tiger, bald_eagle) :- needs(X, tiger), visits(tiger, lion).",
        "description": "If something needs the tiger and the tiger visits the lion then the tiger eats the bald eagle."
    },
    {
        "id": 460,
        "statement": "visits(X, bear) :- is(X, cold), needs(X, bald_eagle).",
        "description": "If something is cold and it needs the bald eagle then it visits the bear."
    },
    {
        "id": 461,
        "statement": "needs(lion, bald_eagle) :- needs(X, tiger), eats(X, lion).",
        "description": "If something needs the tiger and it eats the lion then the lion needs the bald eagle."
    },
    {
        "id": 462,
        "statement": "needs(X, tiger) :- is(X, young).",
        "description": "If something is young then it needs the tiger."
    },
    {
        "id": 463,
        "statement": "is(X, blue) :- eats(X, tiger).",
        "description": "If something eats the tiger then it is blue."
    },
    {
        "id": 464,
        "statement": "is(X, young) :- needs(X, bald_eagle).",
        "description": "If something needs the bald eagle then it is young."
    },
    {
        "id": 465,
        "statement": "is(X, round) :- visits(X, tiger), visits(X, bald_eagle).",
        "description": "If something visits the tiger and it visits the bald eagle then it is round."
    },
    {
        "id": 466,
        "statement": "eats(X, bear) :- is(X, cold), is(X, young).",
        "description": "If something is cold and young then it eats the bear."
    },
    {
        "id": 467,
        "statement": "is(lion, blue) :- visits(lion, bear).",
        "description": "If the lion visits the bear then the lion is blue."
    },
    {
        "id": 468,
        "statement": "is(anne, rough).",
        "description": "Anne is rough."
    },
    {
        "id": 469,
        "statement": "is(harry, green).",
        "description": "Harry is green."
    },
    {
        "id": 470,
        "statement": "is(X, rough) :- is(X, kind).",
        "description": "All kind people are rough."
    },
    {
        "id": 471,
        "statement": "is(X, kind) :- is(X, young), is(X, green).",
        "description": "All young, green people are kind."
    },
    {
        "id": 472,
        "statement": "is(X, young) :- is(X, quiet).",
        "description": "If someone is quiet then they are young."
    },
    {
        "id": 473,
        "statement": "is(X, white) :- is(X, young), is(X, rough).",
        "description": "Young, rough people are white."
    },
    {
        "id": 474,
        "statement": "is(charlie, smart) :- is(charlie, young).",
        "description": "If Charlie is young then Charlie is smart."
    },
    {
        "id": 475,
        "statement": "is(X, green) :- is(X, kind), is(X, white).",
        "description": "Kind, white people are green."
    },
    {
        "id": 476,
        "statement": "is(anne, rough) :- is(anne, smart).",
        "description": "If Anne is smart then Anne is rough."
    },
    {
        "id": 477,
        "statement": "is(X, green) :- is(X, young).",
        "description": "If someone is young then they are green."
    },
    {
        "id": 478,
        "statement": "needs(bald_eagle, bear).",
        "description": "The bald eagle needs the bear."
    },
    {
        "id": 479,
        "statement": "chases(bear, rabbit).",
        "description": "The bear chases the rabbit."
    },
    {
        "id": 480,
        "statement": "needs(bear, dog).",
        "description": "The bear needs the dog."
    },
    {
        "id": 481,
        "statement": "sees(bear, rabbit).",
        "description": "The bear sees the rabbit."
    },
    {
        "id": 482,
        "statement": "is(dog, red).",
        "description": "The dog is red."
    },
    {
        "id": 483,
        "statement": "sees(dog, bald_eagle).",
        "description": "The dog sees the bald eagle."
    },
    {
        "id": 484,
        "statement": "chases(rabbit, bear).",
        "description": "The rabbit chases the bear."
    },
    {
        "id": 485,
        "statement": "is(rabbit, nice).",
        "description": "The rabbit is nice."
    },
    {
        "id": 486,
        "statement": "is(rabbit, round).",
        "description": "The rabbit is round."
    },
    {
        "id": 487,
        "statement": "is(rabbit, young).",
        "description": "The rabbit is young."
    },
    {
        "id": 488,
        "statement": "sees(bald_eagle, dog) :- is(X, green), chases(X, bald_eagle).",
        "description": "If something is green and it chases the bald eagle then the bald eagle sees the dog."
    },
    {
        "id": 489,
        "statement": "is(X, red) :- chases(X, rabbit).",
        "description": "If something chases the rabbit then it is red."
    },
    {
        "id": 490,
        "statement": "chases(X, dog) :- sees(X, rabbit).",
        "description": "If something sees the rabbit then it chases the dog."
    },
    {
        "id": 491,
        "statement": "sees(X, bald_eagle) :- sees(X, dog), not is(X, nice).",
        "description": "If something sees the dog and it is not nice then it sees the bald eagle."
    },
    {
        "id": 492,
        "statement": "sees(X, dog) :- is(X, red).",
        "description": "If something is red then it sees the dog."
    },
    {
        "id": 493,
        "statement": "chases(bald_eagle, rabbit) :- chases(X, bald_eagle), not is(bald_eagle, round).",
        "description": "If something chases the bald eagle and the bald eagle is not round then the bald eagle chases the rabbit."
    },
    {
        "id": 494,
        "statement": "chases(X, bald_eagle) :- needs(X, bear).",
        "description": "If something needs the bear then it chases the bald eagle."
    },
    {
        "id": 495,
        "statement": "needs(dog, rabbit) :- chases(dog, rabbit), sees(rabbit, dog).",
        "description": "If the dog chases the rabbit and the rabbit sees the dog then the dog needs the rabbit."
    },
    {
        "id": 496,
        "statement": "is(dave, round).",
        "description": "Dave is round."
    },
    {
        "id": 497,
        "statement": "is(X, red) :- is(X, round), is(X, smart).",
        "description": "All round, smart people are red."
    },
    {
        "id": 498,
        "statement": "is(X, kind) :- is(X, red), is(X, nice).",
        "description": "If someone is red and nice then they are kind."
    },
    {
        "id": 499,
        "statement": "is(X, round) :- is(X, big), is(X, kind).",
        "description": "All big, kind people are round."
    },
    {
        "id": 500,
        "statement": "is(X, blue) :- is(X, smart), is(X, round).",
        "description": "Smart, round people are blue."
    },
    {
        "id": 501,
        "statement": "is(X, blue) :- is(X, red), is(X, kind).",
        "description": "Red, kind people are blue."
    },
    {
        "id": 502,
        "statement": "is(X, big) :- is(X, nice).",
        "description": "All nice people are big."
    },
    {
        "id": 503,
        "statement": "is(X, kind) :- is(X, red), is(X, round).",
        "description": "All red, round people are kind."
    },
    {
        "id": 504,
        "statement": "is(X, round) :- is(X, smart).",
        "description": "All smart people are round."
    },
    {
        "id": 505,
        "statement": "is(X, smart) :- is(X, big).",
        "description": "If someone is big then they are smart."
    },
    {
        "id": 506,
        "statement": "is(bob, cold).",
        "description": "Bob is cold."
    },
    {
        "id": 507,
        "statement": "is(erin, white).",
        "description": "Erin is white."
    },
    {
        "id": 508,
        "statement": "is(X, big) :- is(X, white), is(X, blue).",
        "description": "White, blue things are big."
    },
    {
        "id": 509,
        "statement": "is(X, blue) :- is(X, white).",
        "description": "All white things are blue."
    },
    {
        "id": 510,
        "statement": "is(X, nice) :- is(X, young).",
        "description": "All young things are nice."
    },
    {
        "id": 511,
        "statement": "is(X, big) :- is(X, cold), is(X, nice).",
        "description": "Cold, nice things are big."
    },
    {
        "id": 512,
        "statement": "is(X, young) :- is(X, big), is(X, white).",
        "description": "All big, white things are young."
    },
    {
        "id": 513,
        "statement": "is(X, big) :- is(X, cold).",
        "description": "If something is cold then it is big."
    },
    {
        "id": 514,
        "statement": "is(X, quiet) :- is(X, young), is(X, nice).",
        "description": "Young, nice things are quiet."
    },
    {
        "id": 515,
        "statement": "eats(cat, dog).",
        "description": "The cat eats the dog."
    },
    {
        "id": 516,
        "statement": "eats(cat, rabbit).",
        "description": "The cat eats the rabbit."
    },
    {
        "id": 517,
        "statement": "is(cat, rough).",
        "description": "The cat is rough."
    },
    {
        "id": 518,
        "statement": "chases(dog, cat).",
        "description": "The dog chases the cat."
    },
    {
        "id": 519,
        "statement": "eats(dog, cat).",
        "description": "The dog eats the cat."
    },
    {
        "id": 520,
        "statement": "eats(dog, squirrel).",
        "description": "The dog eats the squirrel."
    },
    {
        "id": 521,
        "statement": "eats(rabbit, cat).",
        "description": "The rabbit eats the cat."
    },
    {
        "id": 522,
        "statement": "needs(rabbit, squirrel).",
        "description": "The rabbit needs the squirrel."
    },
    {
        "id": 523,
        "statement": "eats(squirrel, rabbit).",
        "description": "The squirrel eats the rabbit."
    },
    {
        "id": 524,
        "statement": "needs(squirrel, dog).",
        "description": "The squirrel needs the dog."
    },
    {
        "id": 525,
        "statement": "is(X, rough) :- chases(X, squirrel), needs(X, dog).",
        "description": "If something chases the squirrel and it needs the dog then it is rough."
    },
    {
        "id": 526,
        "statement": "is(cat, nice) :- is(X, rough), needs(X, cat).",
        "description": "If something is rough and it needs the cat then the cat is nice."
    },
    {
        "id": 527,
        "statement": "chases(squirrel, cat) :- chases(X, squirrel).",
        "description": "If something chases the squirrel then the squirrel chases the cat."
    },
    {
        "id": 528,
        "statement": "chases(rabbit, squirrel) :- eats(X, rabbit).",
        "description": "If something eats the rabbit then the rabbit chases the squirrel."
    },
    {
        "id": 529,
        "statement": "is(dog, young) :- chases(X, dog).",
        "description": "If something chases the dog then the dog is young."
    },
    {
        "id": 530,
        "statement": "needs(X, dog) :- chases(X, squirrel), chases(squirrel, cat).",
        "description": "If something chases the squirrel and the squirrel chases the cat then it needs the dog."
    },
    {
        "id": 531,
        "statement": "needs(rabbit, squirrel) :- chases(X, rabbit), eats(X, cat).",
        "description": "If something chases the rabbit and it eats the cat then the rabbit needs the squirrel."
    },
    {
        "id": 532,
        "statement": "is(anne, blue).",
        "description": "Anne is blue."
    },
    {
        "id": 533,
        "statement": "is(bob, kind).",
        "description": "Bob is kind."
    },
    {
        "id": 534,
        "statement": "is(erin, furry).",
        "description": "Erin is furry."
    },
    {
        "id": 535,
        "statement": "is(erin, kind).",
        "description": "Erin is kind."
    },
    {
        "id": 536,
        "statement": "is(erin, rough).",
        "description": "Erin is rough."
    },
    {
        "id": 537,
        "statement": "is(X, furry) :- is(X, nice).",
        "description": "All nice people are furry."
    },
    {
        "id": 538,
        "statement": "is(X, rough) :- is(X, furry), is(X, nice).",
        "description": "Furry, nice people are rough."
    },
    {
        "id": 539,
        "statement": "is(X, big) :- is(X, furry), is(X, white).",
        "description": "Furry, white people are big."
    },
    {
        "id": 540,
        "statement": "is(X, white) :- is(X, nice), not is(X, rough).",
        "description": "If someone is nice and not rough then they are white."
    },
    {
        "id": 541,
        "statement": "is(X, white) :- is(X, rough).",
        "description": "If someone is rough then they are white."
    },
    {
        "id": 542,
        "statement": "is(X, blue) :- is(X, big), is(X, kind).",
        "description": "Big, kind people are blue."
    },
    {
        "id": 543,
        "statement": "is(X, blue) :- is(X, big), is(X, nice).",
        "description": "If someone is big and nice then they are blue."
    },
    {
        "id": 544,
        "statement": "is(X, cold) :- is(X, young), is(X, smart).",
        "description": "If something is young and smart then it is cold."
    },
    {
        "id": 545,
        "statement": "is(X, cold) :- is(X, kind).",
        "description": "All kind things are cold."
    },
    {
        "id": 546,
        "statement": "is(X, round) :- is(X, cold).",
        "description": "If something is cold then it is round."
    },
    {
        "id": 547,
        "statement": "is(X, round) :- is(X, cold), is(X, young).",
        "description": "Cold, young things are round."
    },
    {
        "id": 548,
        "statement": "is(X, kind) :- is(X, cold), is(X, round).",
        "description": "If something is cold and round then it is kind."
    },
    {
        "id": 549,
        "statement": "is(X, green) :- is(X, kind).",
        "description": "All kind things are green."
    },
    {
        "id": 550,
        "statement": "is(X, young) :- is(X, smart).",
        "description": "All smart things are young."
    },
    {
        "id": 551,
        "statement": "is(fiona, kind) :- is(fiona, round).",
        "description": "If Fiona is round then Fiona is kind."
    },
    {
        "id": 552,
        "statement": "is(charlie, round) :- is(charlie, kind).",
        "description": "If Charlie is kind then Charlie is round."
    },
    {
        "id": 553,
        "statement": "is(anne, young).",
        "description": "Anne is young."
    },
    {
        "id": 554,
        "statement": "is(fiona, white).",
        "description": "Fiona is white."
    },
    {
        "id": 555,
        "statement": "is(X, red) :- is(X, white), is(X, young).",
        "description": "White, young people are red."
    },
    {
        "id": 556,
        "statement": "is(X, red) :- is(X, young), is(X, cold).",
        "description": "Young, cold people are red."
    },
    {
        "id": 557,
        "statement": "is(X, green) :- is(X, red).",
        "description": "If someone is red then they are green."
    },
    {
        "id": 558,
        "statement": "is(X, nice) :- is(X, big).",
        "description": "All big people are nice."
    },
    {
        "id": 559,
        "statement": "is(X, cold) :- is(X, nice), is(X, young).",
        "description": "If someone is nice and young then they are cold."
    },
    {
        "id": 560,
        "statement": "is(gary, big) :- is(gary, young), is(gary, white).",
        "description": "If Gary is young and Gary is white then Gary is big."
    },
    {
        "id": 561,
        "statement": "is(dave, white) :- is(dave, big), is(dave, red).",
        "description": "If Dave is big and Dave is red then Dave is white."
    },
    {
        "id": 562,
        "statement": "is(X, big) :- is(X, red), is(X, green).",
        "description": "If someone is red and green then they are big."
    },
    {
        "id": 563,
        "statement": "is(cow, kind).",
        "description": "The cow is kind."
    },
    {
        "id": 564,
        "statement": "is(cow, nice).",
        "description": "The cow is nice."
    },
    {
        "id": 565,
        "statement": "visits(cow, dog).",
        "description": "The cow visits the dog."
    },
    {
        "id": 566,
        "statement": "visits(cow, squirrel).",
        "description": "The cow visits the squirrel."
    },
    {
        "id": 567,
        "statement": "chases(dog, tiger).",
        "description": "The dog chases the tiger."
    },
    {
        "id": 568,
        "statement": "needs(dog, cow).",
        "description": "The dog needs the cow."
    },
    {
        "id": 569,
        "statement": "visits(dog, tiger).",
        "description": "The dog visits the tiger."
    },
    {
        "id": 570,
        "statement": "is(squirrel, cold).",
        "description": "The squirrel is cold."
    },
    {
        "id": 571,
        "statement": "is(squirrel, green).",
        "description": "The squirrel is green."
    },
    {
        "id": 572,
        "statement": "is(squirrel, kind).",
        "description": "The squirrel is kind."
    },
    {
        "id": 573,
        "statement": "visits(tiger, squirrel).",
        "description": "The tiger visits the squirrel."
    },
    {
        "id": 574,
        "statement": "is(X, cold) :- is(X, nice), needs(X, cow).",
        "description": "If someone is nice and they need the cow then they are cold."
    },
    {
        "id": 575,
        "statement": "is(dog, nice) :- needs(X, dog).",
        "description": "If someone needs the dog then the dog is nice."
    },
    {
        "id": 576,
        "statement": "visits(tiger, dog) :- chases(X, tiger).",
        "description": "If someone chases the tiger then the tiger visits the dog."
    },
    {
        "id": 577,
        "statement": "visits(tiger, cow) :- visits(X, tiger), visits(tiger, dog).",
        "description": "If someone visits the tiger and the tiger visits the dog then the tiger visits the cow."
    },
    {
        "id": 578,
        "statement": "needs(X, dog) :- visits(X, cow).",
        "description": "If someone visits the cow then they need the dog."
    },
    {
        "id": 579,
        "statement": "is(erin, green).",
        "description": "Erin is green."
    },
    {
        "id": 580,
        "statement": "is(gary, kind).",
        "description": "Gary is kind."
    },
    {
        "id": 581,
        "statement": "is(gary, rough).",
        "description": "Gary is rough."
    },
    {
        "id": 582,
        "statement": "is(X, nice) :- is(X, rough).",
        "description": "All rough things are nice."
    },
    {
        "id": 583,
        "statement": "is(X, smart) :- is(X, red).",
        "description": "If something is red then it is smart."
    },
    {
        "id": 584,
        "statement": "is(X, round) :- is(X, smart), is(X, red).",
        "description": "Smart, red things are round."
    },
    {
        "id": 585,
        "statement": "is(X, kind) :- is(X, green).",
        "description": "If something is green then it is kind."
    },
    {
        "id": 586,
        "statement": "is(X, rough) :- is(X, nice), is(X, red).",
        "description": "All nice, red things are rough."
    },
    {
        "id": 587,
        "statement": "is(X, green) :- is(X, red), is(X, round).",
        "description": "All red, round things are green."
    },
    {
        "id": 588,
        "statement": "is(gary, kind) :- is(gary, green).",
        "description": "If Gary is green then Gary is kind."
    },
    {
        "id": 589,
        "statement": "is(X, red) :- is(X, kind), is(X, nice).",
        "description": "All kind, nice things are red."
    },
    {
        "id": 590,
        "statement": "is(cat, young).",
        "description": "The cat is young."
    },
    {
        "id": 591,
        "statement": "needs(cat, cow).",
        "description": "The cat needs the cow."
    },
    {
        "id": 592,
        "statement": "eats(cow, tiger).",
        "description": "The cow eats the tiger."
    },
    {
        "id": 593,
        "statement": "is(cow, young).",
        "description": "The cow is young."
    },
    {
        "id": 594,
        "statement": "needs(lion, tiger).",
        "description": "The lion needs the tiger."
    },
    {
        "id": 595,
        "statement": "is(tiger, young).",
        "description": "The tiger is young."
    },
    {
        "id": 596,
        "statement": "needs(X, tiger) :- is(X, young), eats(X, cat).",
        "description": "If something is young and it eats the cat then it needs the tiger."
    },
    {
        "id": 597,
        "statement": "eats(lion, cow) :- is(X, young), needs(X, lion).",
        "description": "If something is young and it needs the lion then the lion eats the cow."
    },
    {
        "id": 598,
        "statement": "chases(tiger, cow) :- eats(X, tiger), is(X, nice).",
        "description": "If something eats the tiger and it is nice then the tiger chases the cow."
    },
    {
        "id": 599,
        "statement": "is(X, nice) :- needs(X, tiger).",
        "description": "If something needs the tiger then it is nice."
    },
    {
        "id": 600,
        "statement": "eats(cow, cat) :- chases(X, cow).",
        "description": "If something chases the cow then the cow eats the cat."
    },
    {
        "id": 601,
        "statement": "needs(X, cat) :- eats(X, cow), not chases(cow, lion).",
        "description": "If something eats the cow and the cow does not chase the lion then it needs the cat."
    },
    {
        "id": 602,
        "statement": "eats(tiger, cat) :- eats(X, cow), needs(cow, tiger).",
        "description": "If something eats the cow and the cow needs the tiger then the tiger eats the cat."
    },
    {
        "id": 603,
        "statement": "eats(tiger, cow) :- eats(cow, tiger).",
        "description": "If the cow eats the tiger then the tiger eats the cow."
    },
    {
        "id": 604,
        "statement": "is(cow, cold) :- is(X, kind), not chases(X, cow).",
        "description": "If something is kind and it does not chase the cow then the cow is cold."
    },
    {
        "id": 605,
        "statement": "is(X, cold) :- is(X, blue), is(X, big).",
        "description": "Blue, big people are cold."
    },
    {
        "id": 606,
        "statement": "is(X, red) :- is(X, blue).",
        "description": "Blue people are red."
    },
    {
        "id": 607,
        "statement": "is(anne, blue) :- is(anne, red), is(anne, cold).",
        "description": "If Anne is red and Anne is cold then Anne is blue."
    },
    {
        "id": 608,
        "statement": "is(X, young) :- is(X, big), is(X, nice).",
        "description": "If someone is big and nice then they are young."
    },
    {
        "id": 609,
        "statement": "is(X, nice) :- is(X, cold).",
        "description": "All cold people are nice."
    },
    {
        "id": 610,
        "statement": "is(X, red) :- is(X, nice), is(X, big).",
        "description": "If someone is nice and big then they are red."
    },
    {
        "id": 611,
        "statement": "is(erin, cold).",
        "description": "Erin is cold."
    },
    {
        "id": 612,
        "statement": "is(erin, quiet).",
        "description": "Erin is quiet."
    },
    {
        "id": 613,
        "statement": "is(X, cold) :- is(X, white), is(X, big).",
        "description": "All white, big things are cold."
    },
    {
        "id": 614,
        "statement": "is(X, cold) :- is(X, white), is(X, kind).",
        "description": "White, kind things are cold."
    },
    {
        "id": 615,
        "statement": "is(X, smart) :- is(X, red).",
        "description": "Red things are smart."
    },
    {
        "id": 616,
        "statement": "is(X, smart) :- is(X, cold), is(X, big).",
        "description": "All cold, big things are smart."
    },
    {
        "id": 617,
        "statement": "is(X, red) :- is(X, cold), is(X, kind).",
        "description": "If something is cold and kind then it is red."
    },
    {
        "id": 618,
        "statement": "is(X, kind) :- is(X, white).",
        "description": "White things are kind."
    },
    {
        "id": 619,
        "statement": "is(X, quiet) :- is(X, big), is(X, white).",
        "description": "Big, white things are quiet."
    },
    {
        "id": 620,
        "statement": "is(X, big) :- is(X, smart).",
        "description": "All smart things are big."
    },
    {
        "id": 621,
        "statement": "is(cow, blue).",
        "description": "The cow is blue."
    },
    {
        "id": 622,
        "statement": "is(cow, rough).",
        "description": "The cow is rough."
    },
    {
        "id": 623,
        "statement": "likes(cow, lion).",
        "description": "The cow likes the lion."
    },
    {
        "id": 624,
        "statement": "eats(lion, rabbit).",
        "description": "The lion eats the rabbit."
    },
    {
        "id": 625,
        "statement": "is(lion, young).",
        "description": "The lion is young."
    },
    {
        "id": 626,
        "statement": "eats(rabbit, lion).",
        "description": "The rabbit eats the lion."
    },
    {
        "id": 627,
        "statement": "eats(rabbit, tiger).",
        "description": "The rabbit eats the tiger."
    },
    {
        "id": 628,
        "statement": "likes(rabbit, lion).",
        "description": "The rabbit likes the lion."
    },
    {
        "id": 629,
        "statement": "is(tiger, red).",
        "description": "The tiger is red."
    },
    {
        "id": 630,
        "statement": "likes(tiger, cow).",
        "description": "The tiger likes the cow."
    },
    {
        "id": 631,
        "statement": "likes(tiger, lion).",
        "description": "The tiger likes the lion."
    },
    {
        "id": 632,
        "statement": "likes(tiger, rabbit).",
        "description": "The tiger likes the rabbit."
    },
    {
        "id": 633,
        "statement": "likes(X, lion) :- is(X, red).",
        "description": "If someone is red then they like the lion."
    },
    {
        "id": 634,
        "statement": "likes(X, lion) :- is(X, green).",
        "description": "If someone is green then they like the lion."
    },
    {
        "id": 635,
        "statement": "likes(lion, cow) :- sees(X, lion), eats(X, rabbit).",
        "description": "If someone sees the lion and they eat the rabbit then the lion likes the cow."
    },
    {
        "id": 636,
        "statement": "is(X, blue) :- eats(X, tiger), not sees(tiger, rabbit).",
        "description": "If someone eats the tiger and the tiger does not see the rabbit then they are blue."
    },
    {
        "id": 637,
        "statement": "is(X, blue) :- eats(X, rabbit).",
        "description": "If someone eats the rabbit then they are blue."
    },
    {
        "id": 638,
        "statement": "likes(X, tiger) :- likes(X, lion).",
        "description": "If someone likes the lion then they like the tiger."
    },
    {
        "id": 639,
        "statement": "is(X, green) :- likes(X, tiger).",
        "description": "If someone likes the tiger then they are green."
    },
    {
        "id": 640,
        "statement": "is(X, young) :- is(X, cold).",
        "description": "Cold people are young."
    },
    {
        "id": 641,
        "statement": "is(X, blue) :- is(X, big).",
        "description": "If someone is big then they are blue."
    },
    {
        "id": 642,
        "statement": "is(X, blue) :- is(X, furry).",
        "description": "All furry people are blue."
    },
    {
        "id": 643,
        "statement": "is(X, furry) :- is(X, cold), is(X, blue).",
        "description": "If someone is cold and blue then they are furry."
    },
    {
        "id": 644,
        "statement": "is(X, cold) :- is(X, furry), is(X, kind).",
        "description": "If someone is furry and kind then they are cold."
    },
    {
        "id": 645,
        "statement": "is(X, kind) :- is(X, young), is(X, cold).",
        "description": "All young, cold people are kind."
    },
    {
        "id": 646,
        "statement": "is(X, big) :- is(X, young), is(X, kind).",
        "description": "All young, kind people are big."
    },
    {
        "id": 647,
        "statement": "is(bald_eagle, cold).",
        "description": "The bald eagle is cold."
    },
    {
        "id": 648,
        "statement": "is(bear, cold).",
        "description": "The bear is cold."
    },
    {
        "id": 649,
        "statement": "visits(bear, cow).",
        "description": "The bear visits the cow."
    },
    {
        "id": 650,
        "statement": "sees(cow, rabbit).",
        "description": "The cow sees the rabbit."
    },
    {
        "id": 651,
        "statement": "is(rabbit, cold).",
        "description": "The rabbit is cold."
    },
    {
        "id": 652,
        "statement": "likes(rabbit, bald_eagle).",
        "description": "The rabbit likes the bald eagle."
    },
    {
        "id": 653,
        "statement": "is(bald_eagle, kind) :- likes(X, bald_eagle).",
        "description": "If something likes the bald eagle then the bald eagle is kind."
    },
    {
        "id": 654,
        "statement": "sees(X, bear) :- is(X, rough).",
        "description": "If something is rough then it sees the bear."
    },
    {
        "id": 655,
        "statement": "is(X, young) :- sees(X, bald_eagle), sees(bald_eagle, cow).",
        "description": "If something sees the bald eagle and the bald eagle sees the cow then it is young."
    },
    {
        "id": 656,
        "statement": "likes(rabbit, bald_eagle) :- visits(cow, rabbit).",
        "description": "If the cow visits the rabbit then the rabbit likes the bald eagle."
    },
    {
        "id": 657,
        "statement": "likes(bear, bald_eagle) :- likes(bald_eagle, bear), is(bear, young).",
        "description": "If the bald eagle likes the bear and the bear is young then the bear likes the bald eagle."
    },
    {
        "id": 658,
        "statement": "is(X, rough) :- is(X, kind).",
        "description": "All kind things are rough."
    },
    {
        "id": 659,
        "statement": "visits(X, bear) :- sees(X, bear).",
        "description": "If something sees the bear then it visits the bear."
    },
    {
        "id": 660,
        "statement": "is(rabbit, cold) :- sees(rabbit, bald_eagle), likes(rabbit, bear).",
        "description": "If the rabbit sees the bald eagle and the rabbit likes the bear then the rabbit is cold."
    },
    {
        "id": 661,
        "statement": "visits(X, bald_eagle) :- visits(X, bear).",
        "description": "If something visits the bear then it visits the bald eagle."
    },
    {
        "id": 662,
        "statement": "is(dave, white).",
        "description": "Dave is white."
    },
    {
        "id": 663,
        "statement": "is(X, young) :- is(X, cold), is(X, red).",
        "description": "If something is cold and red then it is young."
    },
    {
        "id": 664,
        "statement": "is(X, red) :- is(X, furry), is(X, smart).",
        "description": "All furry, smart things are red."
    },
    {
        "id": 665,
        "statement": "is(X, red) :- is(X, furry).",
        "description": "All furry things are red."
    },
    {
        "id": 666,
        "statement": "is(X, cold) :- is(X, white).",
        "description": "All white things are cold."
    },
    {
        "id": 667,
        "statement": "is(X, cold) :- is(X, young), not is(X, white).",
        "description": "If something is young and not white then it is cold."
    },
    {
        "id": 668,
        "statement": "is(fiona, green).",
        "description": "Fiona is green."
    },
    {
        "id": 669,
        "statement": "is(X, red) :- is(X, rough), is(X, young).",
        "description": "Rough, young people are red."
    },
    {
        "id": 670,
        "statement": "is(X, big) :- is(X, green), is(X, young).",
        "description": "If someone is green and young then they are big."
    },
    {
        "id": 671,
        "statement": "is(X, big) :- is(X, cold), is(X, green).",
        "description": "If someone is cold and green then they are big."
    },
    {
        "id": 672,
        "statement": "is(X, furry) :- is(X, big).",
        "description": "All big people are furry."
    },
    {
        "id": 673,
        "statement": "is(X, young) :- is(X, green), is(X, furry).",
        "description": "Green, furry people are young."
    },
    {
        "id": 674,
        "statement": "is(X, rough) :- is(X, big), is(X, young).",
        "description": "If someone is big and young then they are rough."
    },
    {
        "id": 675,
        "statement": "is(X, cold) :- is(X, red), is(X, rough).",
        "description": "If someone is red and rough then they are cold."
    },
    {
        "id": 676,
        "statement": "sees(bald_eagle, dog).",
        "description": "The bald eagle sees the dog."
    },
    {
        "id": 677,
        "statement": "chases(bear, mouse).",
        "description": "The bear chases the mouse."
    },
    {
        "id": 678,
        "statement": "is(bear, green).",
        "description": "The bear is green."
    },
    {
        "id": 679,
        "statement": "sees(dog, mouse).",
        "description": "The dog sees the mouse."
    },
    {
        "id": 680,
        "statement": "chases(mouse, bear).",
        "description": "The mouse chases the bear."
    },
    {
        "id": 681,
        "statement": "chases(X, bald_eagle) :- is(X, round), chases(X, dog).",
        "description": "If something is round and it chases the dog then it chases the bald eagle."
    },
    {
        "id": 682,
        "statement": "sees(X, dog) :- is(X, round).",
        "description": "If something is round then it sees the dog."
    },
    {
        "id": 683,
        "statement": "eats(X, dog) :- eats(X, bald_eagle).",
        "description": "If something eats the bald eagle then it eats the dog."
    },
    {
        "id": 684,
        "statement": "eats(X, dog) :- sees(X, dog), chases(dog, bear).",
        "description": "If something sees the dog and the dog chases the bear then it eats the dog."
    },
    {
        "id": 685,
        "statement": "chases(dog, bear) :- sees(X, dog), chases(X, bald_eagle).",
        "description": "If something sees the dog and it chases the bald eagle then the dog chases the bear."
    },
    {
        "id": 686,
        "statement": "is(dog, round) :- eats(X, dog).",
        "description": "If something eats the dog then the dog is round."
    },
    {
        "id": 687,
        "statement": "eats(bald_eagle, mouse) :- is(X, nice), chases(X, bald_eagle).",
        "description": "If something is nice and it chases the bald eagle then the bald eagle eats the mouse."
    },
    {
        "id": 688,
        "statement": "chases(X, dog) :- chases(X, bear).",
        "description": "If something chases the bear then it chases the dog."
    },
    {
        "id": 689,
        "statement": "is(fiona, big).",
        "description": "Fiona is big."
    },
    {
        "id": 690,
        "statement": "is(fiona, rough).",
        "description": "Fiona is rough."
    },
    {
        "id": 691,
        "statement": "is(X, rough) :- is(X, red).",
        "description": "If something is red then it is rough."
    },
    {
        "id": 692,
        "statement": "is(X, round) :- is(X, red), is(X, rough).",
        "description": "All red, rough things are round."
    },
    {
        "id": 693,
        "statement": "is(X, kind) :- is(X, furry).",
        "description": "Furry things are kind."
    },
    {
        "id": 694,
        "statement": "is(X, furry) :- is(X, round).",
        "description": "Round things are furry."
    },
    {
        "id": 695,
        "statement": "is(bob, red) :- is(bob, quiet).",
        "description": "If Bob is quiet then Bob is red."
    },
    {
        "id": 696,
        "statement": "is(X, quiet) :- is(X, kind).",
        "description": "If something is kind then it is quiet."
    },
    {
        "id": 697,
        "statement": "is(fiona, kind) :- is(fiona, quiet).",
        "description": "If Fiona is quiet then Fiona is kind."
    },
    {
        "id": 698,
        "statement": "needs(cow, squirrel).",
        "description": "The cow needs the squirrel."
    },
    {
        "id": 699,
        "statement": "sees(cow, dog).",
        "description": "The cow sees the dog."
    },
    {
        "id": 700,
        "statement": "likes(dog, cow).",
        "description": "The dog likes the cow."
    },
    {
        "id": 701,
        "statement": "sees(dog, squirrel).",
        "description": "The dog sees the squirrel."
    },
    {
        "id": 702,
        "statement": "sees(squirrel, dog).",
        "description": "The squirrel sees the dog."
    },
    {
        "id": 703,
        "statement": "needs(tiger, cow).",
        "description": "The tiger needs the cow."
    },
    {
        "id": 704,
        "statement": "needs(tiger, dog).",
        "description": "The tiger needs the dog."
    },
    {
        "id": 705,
        "statement": "sees(tiger, squirrel).",
        "description": "The tiger sees the squirrel."
    },
    {
        "id": 706,
        "statement": "is(X, young) :- is(X, round).",
        "description": "If someone is round then they are young."
    },
    {
        "id": 707,
        "statement": "likes(X, cow) :- needs(X, cow).",
        "description": "If someone needs the cow then they like the cow."
    },
    {
        "id": 708,
        "statement": "likes(X, dog) :- likes(X, tiger), likes(tiger, squirrel).",
        "description": "If someone likes the tiger and the tiger likes the squirrel then they like the dog."
    },
    {
        "id": 709,
        "statement": "sees(X, cow) :- is(X, round), sees(X, squirrel).",
        "description": "If someone is round and they see the squirrel then they see the cow."
    },
    {
        "id": 710,
        "statement": "is(cow, nice) :- is(X, young), needs(X, cow).",
        "description": "If someone is young and they need the cow then the cow is nice."
    },
    {
        "id": 711,
        "statement": "needs(squirrel, cow) :- is(X, round), sees(X, squirrel).",
        "description": "If someone is round and they see the squirrel then the squirrel needs the cow."
    },
    {
        "id": 712,
        "statement": "is(tiger, young) :- sees(X, tiger), likes(tiger, squirrel).",
        "description": "If someone sees the tiger and the tiger likes the squirrel then the tiger is young."
    },
    {
        "id": 713,
        "statement": "is(squirrel, round) :- likes(squirrel, cow).",
        "description": "If the squirrel likes the cow then the squirrel is round."
    },
    {
        "id": 714,
        "statement": "is(charlie, smart) :- is(charlie, cold).",
        "description": "If Charlie is cold then Charlie is smart."
    },
    {
        "id": 715,
        "statement": "is(harry, smart) :- is(harry, young).",
        "description": "If Harry is young then Harry is smart."
    },
    {
        "id": 716,
        "statement": "is(X, kind) :- is(X, cold), is(X, young).",
        "description": "Cold, young things are kind."
    },
    {
        "id": 717,
        "statement": "is(X, smart) :- is(X, young).",
        "description": "If something is young then it is smart."
    },
    {
        "id": 718,
        "statement": "is(charlie, young) :- is(charlie, nice), is(charlie, big).",
        "description": "If Charlie is nice and Charlie is big then Charlie is young."
    },
    {
        "id": 719,
        "statement": "is(X, quiet) :- is(X, big), is(X, kind).",
        "description": "If something is big and kind then it is quiet."
    },
    {
        "id": 720,
        "statement": "is(X, big) :- is(X, smart).",
        "description": "If something is smart then it is big."
    },
    {
        "id": 721,
        "statement": "is(bear, rough).",
        "description": "The bear is rough."
    },
    {
        "id": 722,
        "statement": "sees(lion, mouse).",
        "description": "The lion sees the mouse."
    },
    {
        "id": 723,
        "statement": "visits(rabbit, lion).",
        "description": "The rabbit visits the lion."
    },
    {
        "id": 724,
        "statement": "chases(X, rabbit) :- sees(X, bear), is(bear, kind).",
        "description": "If something sees the bear and the bear is kind then it chases the rabbit."
    },
    {
        "id": 725,
        "statement": "chases(lion, rabbit) :- sees(X, lion).",
        "description": "If something sees the lion then the lion chases the rabbit."
    },
    {
        "id": 726,
        "statement": "chases(lion, mouse) :- chases(X, lion).",
        "description": "If something chases the lion then the lion chases the mouse."
    },
    {
        "id": 727,
        "statement": "visits(mouse, lion) :- visits(X, mouse).",
        "description": "If something visits the mouse then the mouse visits the lion."
    },
    {
        "id": 728,
        "statement": "visits(bear, rabbit) :- chases(X, bear), sees(bear, mouse).",
        "description": "If something chases the bear and the bear sees the mouse then the bear visits the rabbit."
    },
    {
        "id": 729,
        "statement": "visits(X, mouse) :- sees(X, lion).",
        "description": "If something sees the lion then it visits the mouse."
    },
    {
        "id": 730,
        "statement": "visits(lion, rabbit) :- chases(X, lion), is(lion, big).",
        "description": "If something chases the lion and the lion is big then the lion visits the rabbit."
    },
    {
        "id": 731,
        "statement": "sees(X, lion) :- visits(X, lion).",
        "description": "If something visits the lion then it sees the lion."
    },
    {
        "id": 732,
        "statement": "is(bald_eagle, green).",
        "description": "The bald eagle is green."
    },
    {
        "id": 733,
        "statement": "sees(cat, bald_eagle).",
        "description": "The cat sees the bald eagle."
    },
    {
        "id": 734,
        "statement": "sees(cat, cow).",
        "description": "The cat sees the cow."
    },
    {
        "id": 735,
        "statement": "visits(cat, bald_eagle).",
        "description": "The cat visits the bald eagle."
    },
    {
        "id": 736,
        "statement": "sees(cow, bald_eagle).",
        "description": "The cow sees the bald eagle."
    },
    {
        "id": 737,
        "statement": "visits(cow, cat).",
        "description": "The cow visits the cat."
    },
    {
        "id": 738,
        "statement": "is(rabbit, green).",
        "description": "The rabbit is green."
    },
    {
        "id": 739,
        "statement": "visits(rabbit, cow).",
        "description": "The rabbit visits the cow."
    },
    {
        "id": 740,
        "statement": "eats(cow, rabbit) :- is(X, nice), eats(X, cow).",
        "description": "If something is nice and it eats the cow then the cow eats the rabbit."
    },
    {
        "id": 741,
        "statement": "is(X, nice) :- visits(X, cat), sees(X, cat).",
        "description": "If something visits the cat and it sees the cat then it is nice."
    },
    {
        "id": 742,
        "statement": "sees(X, bald_eagle) :- eats(X, rabbit).",
        "description": "If something eats the rabbit then it sees the bald eagle."
    },
    {
        "id": 743,
        "statement": "is(X, cold) :- visits(X, bald_eagle).",
        "description": "If something visits the bald eagle then it is cold."
    },
    {
        "id": 744,
        "statement": "visits(rabbit, bald_eagle) :- sees(X, rabbit), not eats(X, rabbit).",
        "description": "If something sees the rabbit and it does not eat the rabbit then the rabbit visits the bald eagle."
    },
    {
        "id": 745,
        "statement": "sees(X, rabbit) :- visits(X, bald_eagle), is(X, cold).",
        "description": "If something visits the bald eagle and it is cold then it sees the rabbit."
    },
    {
        "id": 746,
        "statement": "eats(X, cat) :- eats(X, bald_eagle), not sees(X, bald_eagle).",
        "description": "If something eats the bald eagle and it does not see the bald eagle then it eats the cat."
    },
    {
        "id": 747,
        "statement": "eats(cat, bald_eagle) :- not is(cat, cold).",
        "description": "If the cat is not cold then the cat eats the bald eagle."
    },
    {
        "id": 748,
        "statement": "is(bald_eagle, young).",
        "description": "The bald eagle is young."
    },
    {
        "id": 749,
        "statement": "is(bear, young).",
        "description": "The bear is young."
    },
    {
        "id": 750,
        "statement": "eats(dog, bald_eagle).",
        "description": "The dog eats the bald eagle."
    },
    {
        "id": 751,
        "statement": "eats(dog, tiger).",
        "description": "The dog eats the tiger."
    },
    {
        "id": 752,
        "statement": "visits(X, bald_eagle) :- visits(X, dog).",
        "description": "If someone visits the dog then they visit the bald eagle."
    },
    {
        "id": 753,
        "statement": "eats(X, bear) :- eats(X, bald_eagle), eats(X, tiger).",
        "description": "If someone eats the bald eagle and they eat the tiger then they eat the bear."
    },
    {
        "id": 754,
        "statement": "eats(X, bear) :- visits(X, bald_eagle).",
        "description": "If someone visits the bald eagle then they eat the bear."
    },
    {
        "id": 755,
        "statement": "eats(bear, tiger) :- needs(X, bear).",
        "description": "If someone needs the bear then the bear eats the tiger."
    },
    {
        "id": 756,
        "statement": "needs(dog, tiger) :- visits(X, dog).",
        "description": "If someone visits the dog then the dog needs the tiger."
    },
    {
        "id": 757,
        "statement": "is(tiger, round) :- eats(bear, tiger).",
        "description": "If the bear eats the tiger then the tiger is round."
    },
    {
        "id": 758,
        "statement": "visits(X, dog) :- is(X, round).",
        "description": "If someone is round then they visit the dog."
    },
    {
        "id": 759,
        "statement": "visits(X, dog) :- is(X, blue), needs(X, dog).",
        "description": "If someone is blue and they need the dog then they visit the dog."
    },
    {
        "id": 760,
        "statement": "eats(X, dog) :- eats(X, bear).",
        "description": "If someone eats the bear then they eat the dog."
    },
    {
        "id": 761,
        "statement": "eats(bear, rabbit).",
        "description": "The bear eats the rabbit."
    },
    {
        "id": 762,
        "statement": "likes(bear, rabbit).",
        "description": "The bear likes the rabbit."
    },
    {
        "id": 763,
        "statement": "likes(cat, lion).",
        "description": "The cat likes the lion."
    },
    {
        "id": 764,
        "statement": "likes(lion, bear).",
        "description": "The lion likes the bear."
    },
    {
        "id": 765,
        "statement": "visits(lion, rabbit).",
        "description": "The lion visits the rabbit."
    },
    {
        "id": 766,
        "statement": "eats(rabbit, bear).",
        "description": "The rabbit eats the bear."
    },
    {
        "id": 767,
        "statement": "visits(X, cat) :- eats(X, lion), likes(X, lion).",
        "description": "If something eats the lion and it likes the lion then it visits the cat."
    },
    {
        "id": 768,
        "statement": "is(X, red) :- likes(X, cat).",
        "description": "If something likes the cat then it is red."
    },
    {
        "id": 769,
        "statement": "likes(X, rabbit) :- is(X, red).",
        "description": "If something is red then it likes the rabbit."
    },
    {
        "id": 770,
        "statement": "eats(bear, cat) :- eats(X, lion), eats(X, bear).",
        "description": "If something eats the lion and it eats the bear then the bear eats the cat."
    },
    {
        "id": 771,
        "statement": "visits(X, lion) :- is(X, blue).",
        "description": "If something is blue then it visits the lion."
    },
    {
        "id": 772,
        "statement": "visits(bear, lion) :- visits(cat, bear).",
        "description": "If the cat visits the bear then the bear visits the lion."
    },
    {
        "id": 773,
        "statement": "likes(rabbit, cat) :- visits(X, rabbit), likes(X, rabbit).",
        "description": "If something visits the rabbit and it likes the rabbit then the rabbit likes the cat."
    },
    {
        "id": 774,
        "statement": "is(cat, big) :- likes(X, cat).",
        "description": "If something likes the cat then the cat is big."
    },
    {
        "id": 775,
        "statement": "is(X, nice) :- visits(X, bear), visits(X, lion).",
        "description": "If something visits the bear and it visits the lion then it is nice."
    },
    {
        "id": 776,
        "statement": "chases(bald_eagle, cat).",
        "description": "The bald eagle chases the cat."
    },
    {
        "id": 777,
        "statement": "chases(bald_eagle, tiger).",
        "description": "The bald eagle chases the tiger."
    },
    {
        "id": 778,
        "statement": "visits(bald_eagle, cat).",
        "description": "The bald eagle visits the cat."
    },
    {
        "id": 779,
        "statement": "visits(bald_eagle, rabbit).",
        "description": "The bald eagle visits the rabbit."
    },
    {
        "id": 780,
        "statement": "likes(cat, rabbit).",
        "description": "The cat likes the rabbit."
    },
    {
        "id": 781,
        "statement": "chases(rabbit, tiger).",
        "description": "The rabbit chases the tiger."
    },
    {
        "id": 782,
        "statement": "likes(rabbit, cat).",
        "description": "The rabbit likes the cat."
    },
    {
        "id": 783,
        "statement": "visits(rabbit, bald_eagle).",
        "description": "The rabbit visits the bald eagle."
    },
    {
        "id": 784,
        "statement": "visits(rabbit, cat).",
        "description": "The rabbit visits the cat."
    },
    {
        "id": 785,
        "statement": "is(cat, kind) :- visits(X, cat).",
        "description": "If something visits the cat then the cat is kind."
    },
    {
        "id": 786,
        "statement": "is(cat, young) :- visits(X, cat), is(X, young).",
        "description": "If something visits the cat and it is young then the cat is young."
    },
    {
        "id": 787,
        "statement": "likes(rabbit, cat) :- visits(X, rabbit).",
        "description": "If something visits the rabbit then the rabbit likes the cat."
    },
    {
        "id": 788,
        "statement": "visits(X, rabbit) :- is(X, kind), is(X, round).",
        "description": "If something is kind and round then it visits the rabbit."
    },
    {
        "id": 789,
        "statement": "chases(X, cat) :- is(X, young).",
        "description": "If something is young then it chases the cat."
    },
    {
        "id": 790,
        "statement": "visits(bald_eagle, rabbit) :- chases(bald_eagle, cat), not is(cat, blue).",
        "description": "If the bald eagle chases the cat and the cat is not blue then the bald eagle visits the rabbit."
    },
    {
        "id": 791,
        "statement": "visits(X, cat) :- chases(X, cat).",
        "description": "If something chases the cat then it visits the cat."
    },
    {
        "id": 792,
        "statement": "is(cat, round) :- likes(X, cat).",
        "description": "If something likes the cat then the cat is round."
    },
    {
        "id": 793,
        "statement": "visits(X, bald_eagle) :- is(X, kind), not is(X, blue).",
        "description": "If something is kind and not blue then it visits the bald eagle."
    },
    {
        "id": 794,
        "statement": "is(fiona, blue).",
        "description": "Fiona is blue."
    },
    {
        "id": 795,
        "statement": "is(X, quiet) :- is(X, red), is(X, round).",
        "description": "If something is red and round then it is quiet."
    },
    {
        "id": 796,
        "statement": "is(X, red) :- is(X, green).",
        "description": "If something is green then it is red."
    },
    {
        "id": 797,
        "statement": "is(X, blue) :- is(X, young).",
        "description": "Young things are blue."
    },
    {
        "id": 798,
        "statement": "is(X, young) :- is(X, blue).",
        "description": "All blue things are young."
    },
    {
        "id": 799,
        "statement": "is(X, cold) :- is(X, young).",
        "description": "Young things are cold."
    },
    {
        "id": 800,
        "statement": "is(X, blue) :- is(X, red).",
        "description": "Red things are blue."
    },
    {
        "id": 801,
        "statement": "is(X, round) :- is(X, young).",
        "description": "If something is young then it is round."
    },
    {
        "id": 802,
        "statement": "is(X, cold) :- is(X, smart), is(X, red).",
        "description": "If someone is smart and red then they are cold."
    },
    {
        "id": 803,
        "statement": "is(X, red) :- is(X, smart).",
        "description": "All smart people are red."
    },
    {
        "id": 804,
        "statement": "is(X, round) :- is(X, cold).",
        "description": "Cold people are round."
    },
    {
        "id": 805,
        "statement": "is(erin, smart) :- is(erin, round), is(erin, young).",
        "description": "If Erin is round and Erin is young then Erin is smart."
    },
    {
        "id": 806,
        "statement": "is(X, smart) :- is(X, red), is(X, round).",
        "description": "If someone is red and round then they are smart."
    },
    {
        "id": 807,
        "statement": "is(X, red) :- is(X, round).",
        "description": "Round people are red."
    },
    {
        "id": 808,
        "statement": "is(X, big) :- is(X, smart), is(X, round).",
        "description": "All smart, round people are big."
    },
    {
        "id": 809,
        "statement": "is(X, cold) :- is(X, rough).",
        "description": "If someone is rough then they are cold."
    },
    {
        "id": 810,
        "statement": "is(X, smart) :- is(X, big).",
        "description": "All big things are smart."
    },
    {
        "id": 811,
        "statement": "is(anne, cold) :- is(anne, quiet).",
        "description": "If Anne is quiet then Anne is cold."
    },
    {
        "id": 812,
        "statement": "is(X, cold) :- is(X, smart), is(X, furry).",
        "description": "If something is smart and furry then it is cold."
    },
    {
        "id": 813,
        "statement": "is(fiona, big) :- is(fiona, smart).",
        "description": "If Fiona is smart then Fiona is big."
    },
    {
        "id": 814,
        "statement": "is(X, quiet) :- is(X, red).",
        "description": "If something is red then it is quiet."
    },
    {
        "id": 815,
        "statement": "is(X, white) :- is(X, smart), is(X, red).",
        "description": "All smart, red things are white."
    },
    {
        "id": 816,
        "statement": "chases(dog, squirrel).",
        "description": "The dog chases the squirrel."
    },
    {
        "id": 817,
        "statement": "is(dog, green).",
        "description": "The dog is green."
    },
    {
        "id": 818,
        "statement": "chases(lion, dog).",
        "description": "The lion chases the dog."
    },
    {
        "id": 819,
        "statement": "is(lion, green).",
        "description": "The lion is green."
    },
    {
        "id": 820,
        "statement": "needs(lion, dog).",
        "description": "The lion needs the dog."
    },
    {
        "id": 821,
        "statement": "chases(squirrel, tiger).",
        "description": "The squirrel chases the tiger."
    },
    {
        "id": 822,
        "statement": "needs(tiger, lion).",
        "description": "The tiger needs the lion."
    },
    {
        "id": 823,
        "statement": "chases(X, lion) :- eats(X, squirrel).",
        "description": "If something eats the squirrel then it chases the lion."
    },
    {
        "id": 824,
        "statement": "is(tiger, round) :- chases(lion, tiger), not chases(tiger, lion).",
        "description": "If the lion chases the tiger and the tiger does not chase the lion then the tiger is round."
    },
    {
        "id": 825,
        "statement": "is(tiger, kind) :- eats(X, tiger), eats(X, squirrel).",
        "description": "If something eats the tiger and it eats the squirrel then the tiger is kind."
    },
    {
        "id": 826,
        "statement": "eats(X, tiger) :- is(X, blue).",
        "description": "If something is blue then it eats the tiger."
    },
    {
        "id": 827,
        "statement": "eats(lion, dog) :- eats(X, lion).",
        "description": "If something eats the lion then the lion eats the dog."
    },
    {
        "id": 828,
        "statement": "eats(X, lion) :- is(X, round).",
        "description": "If something is round then it eats the lion."
    },
    {
        "id": 829,
        "statement": "is(dog, blue) :- eats(X, dog).",
        "description": "If something eats the dog then the dog is blue."
    },
    {
        "id": 830,
        "statement": "is(tiger, green) :- eats(tiger, lion), is(tiger, round).",
        "description": "If the tiger eats the lion and the tiger is round then the tiger is green."
    },
    {
        "id": 831,
        "statement": "is(cat, nice).",
        "description": "The cat is nice."
    },
    {
        "id": 832,
        "statement": "sees(cat, dog).",
        "description": "The cat sees the dog."
    },
    {
        "id": 833,
        "statement": "likes(cow, cat).",
        "description": "The cow likes the cat."
    },
    {
        "id": 834,
        "statement": "likes(dog, lion).",
        "description": "The dog likes the lion."
    },
    {
        "id": 835,
        "statement": "sees(dog, cat).",
        "description": "The dog sees the cat."
    },
    {
        "id": 836,
        "statement": "sees(dog, cow).",
        "description": "The dog sees the cow."
    },
    {
        "id": 837,
        "statement": "sees(dog, lion).",
        "description": "The dog sees the lion."
    },
    {
        "id": 838,
        "statement": "visits(dog, lion) :- likes(lion, dog), visits(dog, cat).",
        "description": "If the lion likes the dog and the dog visits the cat then the dog visits the lion."
    },
    {
        "id": 839,
        "statement": "visits(cat, cow) :- visits(X, cat).",
        "description": "If someone visits the cat then the cat visits the cow."
    },
    {
        "id": 840,
        "statement": "visits(X, cat) :- visits(X, cow).",
        "description": "If someone visits the cow then they visit the cat."
    },
    {
        "id": 841,
        "statement": "likes(X, dog) :- visits(X, dog).",
        "description": "If someone visits the dog then they like the dog."
    },
    {
        "id": 842,
        "statement": "likes(cat, cow) :- likes(lion, cat).",
        "description": "If the lion likes the cat then the cat likes the cow."
    },
    {
        "id": 843,
        "statement": "likes(X, cow) :- likes(X, dog).",
        "description": "If someone likes the dog then they like the cow."
    },
    {
        "id": 844,
        "statement": "is(X, nice) :- is(X, red).",
        "description": "If someone is red then they are nice."
    },
    {
        "id": 845,
        "statement": "visits(dog, cow) :- likes(X, dog), sees(dog, cow).",
        "description": "If someone likes the dog and the dog sees the cow then the dog visits the cow."
    },
    {
        "id": 846,
        "statement": "sees(X, dog) :- visits(X, cow).",
        "description": "If someone visits the cow then they see the dog."
    },
    {
        "id": 847,
        "statement": "likes(cow, mouse).",
        "description": "The cow likes the mouse."
    },
    {
        "id": 848,
        "statement": "visits(cow, tiger).",
        "description": "The cow visits the tiger."
    },
    {
        "id": 849,
        "statement": "visits(mouse, cow).",
        "description": "The mouse visits the cow."
    },
    {
        "id": 850,
        "statement": "visits(mouse, squirrel).",
        "description": "The mouse visits the squirrel."
    },
    {
        "id": 851,
        "statement": "needs(squirrel, cow).",
        "description": "The squirrel needs the cow."
    },
    {
        "id": 852,
        "statement": "visits(tiger, cow).",
        "description": "The tiger visits the cow."
    },
    {
        "id": 853,
        "statement": "likes(X, tiger) :- likes(X, cow).",
        "description": "If someone likes the cow then they like the tiger."
    },
    {
        "id": 854,
        "statement": "visits(X, mouse) :- is(X, young), visits(X, squirrel).",
        "description": "If someone is young and they visit the squirrel then they visit the mouse."
    },
    {
        "id": 855,
        "statement": "likes(X, cow) :- visits(X, mouse).",
        "description": "If someone visits the mouse then they like the cow."
    },
    {
        "id": 856,
        "statement": "is(mouse, nice) :- visits(X, tiger), not likes(tiger, mouse).",
        "description": "If someone visits the tiger and the tiger does not like the mouse then the mouse is nice."
    },
    {
        "id": 857,
        "statement": "likes(cow, mouse) :- needs(X, cow).",
        "description": "If someone needs the cow then the cow likes the mouse."
    },
    {
        "id": 858,
        "statement": "needs(X, mouse) :- is(X, big).",
        "description": "If someone is big then they need the mouse."
    },
    {
        "id": 859,
        "statement": "is(X, young) :- is(X, nice).",
        "description": "All nice people are young."
    },
    {
        "id": 860,
        "statement": "is(gary, big) :- is(gary, furry).",
        "description": "If Gary is furry then Gary is big."
    },
    {
        "id": 861,
        "statement": "is(X, kind) :- is(X, red).",
        "description": "If someone is red then they are kind."
    },
    {
        "id": 862,
        "statement": "is(X, green) :- is(X, big).",
        "description": "Big people are green."
    },
    {
        "id": 863,
        "statement": "is(X, young) :- is(X, red), is(X, big).",
        "description": "All red, big people are young."
    },
    {
        "id": 864,
        "statement": "is(X, kind) :- is(X, nice).",
        "description": "If someone is nice then they are kind."
    },
    {
        "id": 865,
        "statement": "is(X, big) :- is(X, young).",
        "description": "All young people are big."
    },
    {
        "id": 866,
        "statement": "is(X, young) :- is(X, green).",
        "description": "Green people are young."
    },
    {
        "id": 867,
        "statement": "is(X, furry) :- is(X, red), is(X, young).",
        "description": "All red, young people are furry."
    },
    {
        "id": 868,
        "statement": "is(X, red) :- is(X, young).",
        "description": "Young people are red."
    },
    {
        "id": 869,
        "statement": "is(bear, big).",
        "description": "The bear is big."
    },
    {
        "id": 870,
        "statement": "sees(rabbit, bear).",
        "description": "The rabbit sees the bear."
    },
    {
        "id": 871,
        "statement": "visits(X, rabbit) :- visits(X, bear).",
        "description": "If someone visits the bear then they visit the rabbit."
    },
    {
        "id": 872,
        "statement": "visits(X, bear) :- is(X, nice).",
        "description": "If someone is nice then they visit the bear."
    },
    {
        "id": 873,
        "statement": "visits(rabbit, squirrel) :- chases(X, rabbit), sees(X, bear).",
        "description": "If someone chases the rabbit and they see the bear then the rabbit visits the squirrel."
    },
    {
        "id": 874,
        "statement": "is(X, green) :- visits(X, rabbit).",
        "description": "If someone visits the rabbit then they are green."
    },
    {
        "id": 875,
        "statement": "visits(X, bear) :- sees(X, bear).",
        "description": "If someone sees the bear then they visit the bear."
    },
    {
        "id": 876,
        "statement": "is(X, round) :- chases(X, cow).",
        "description": "If someone chases the cow then they are round."
    },
    {
        "id": 877,
        "statement": "visits(bear, rabbit) :- chases(cow, bear).",
        "description": "If the cow chases the bear then the bear visits the rabbit."
    },
    {
        "id": 878,
        "statement": "visits(X, cow) :- is(X, green).",
        "description": "If someone is green then they visit the cow."
    },
    {
        "id": 879,
        "statement": "chases(X, squirrel) :- is(X, nice), visits(X, cow).",
        "description": "If someone is nice and they visit the cow then they chase the squirrel."
    },
    {
        "id": 880,
        "statement": "is(gary, big).",
        "description": "Gary is big."
    },
    {
        "id": 881,
        "statement": "is(X, quiet) :- is(X, young), is(X, round).",
        "description": "Young, round people are quiet."
    },
    {
        "id": 882,
        "statement": "is(X, white) :- is(X, green).",
        "description": "If someone is green then they are white."
    },
    {
        "id": 883,
        "statement": "is(X, young) :- is(X, cold).",
        "description": "All cold people are young."
    },
    {
        "id": 884,
        "statement": "is(X, round) :- is(X, young).",
        "description": "If someone is young then they are round."
    },
    {
        "id": 885,
        "statement": "is(X, green) :- is(X, white), is(X, quiet).",
        "description": "White, quiet people are green."
    },
    {
        "id": 886,
        "statement": "is(fiona, cold) :- is(fiona, white).",
        "description": "If Fiona is white then Fiona is cold."
    },
    {
        "id": 887,
        "statement": "is(gary, blue).",
        "description": "Gary is blue."
    },
    {
        "id": 888,
        "statement": "is(X, kind) :- is(X, quiet), is(X, young).",
        "description": "If someone is quiet and young then they are kind."
    },
    {
        "id": 889,
        "statement": "is(X, big) :- is(X, young), is(X, red).",
        "description": "Young, red people are big."
    },
    {
        "id": 890,
        "statement": "is(X, young) :- is(X, kind), is(X, red).",
        "description": "If someone is kind and red then they are young."
    },
    {
        "id": 891,
        "statement": "is(X, round) :- is(X, kind), is(X, young).",
        "description": "All kind, young people are round."
    },
    {
        "id": 892,
        "statement": "is(X, quiet) :- is(X, big).",
        "description": "Big people are quiet."
    },
    {
        "id": 893,
        "statement": "is(charlie, round) :- is(charlie, young), is(charlie, big).",
        "description": "If Charlie is young and Charlie is big then Charlie is round."
    },
    {
        "id": 894,
        "statement": "is(X, big) :- is(X, round).",
        "description": "All round things are big."
    },
    {
        "id": 895,
        "statement": "is(X, big) :- is(X, nice).",
        "description": "All nice things are big."
    },
    {
        "id": 896,
        "statement": "is(X, nice) :- is(X, big).",
        "description": "Big things are nice."
    },
    {
        "id": 897,
        "statement": "is(X, kind) :- is(X, green).",
        "description": "All green things are kind."
    },
    {
        "id": 898,
        "statement": "is(charlie, round) :- is(charlie, big), is(charlie, red).",
        "description": "If Charlie is big and Charlie is red then Charlie is round."
    },
    {
        "id": 899,
        "statement": "is(X, red) :- is(X, green), is(X, nice).",
        "description": "Green, nice things are red."
    },
    {
        "id": 900,
        "statement": "is(X, red) :- is(X, nice).",
        "description": "Nice things are red."
    },
    {
        "id": 901,
        "statement": "is(X, green) :- is(X, round).",
        "description": "All round things are green."
    },
    {
        "id": 902,
        "statement": "is(X, white) :- is(X, nice).",
        "description": "If something is nice then it is white."
    },
    {
        "id": 903,
        "statement": "is(X, white) :- is(X, nice), is(X, young).",
        "description": "All nice, young things are white."
    },
    {
        "id": 904,
        "statement": "is(X, big) :- is(X, round), is(X, white).",
        "description": "If something is round and white then it is big."
    },
    {
        "id": 905,
        "statement": "is(X, big) :- is(X, nice), is(X, rough).",
        "description": "Nice, rough things are big."
    },
    {
        "id": 906,
        "statement": "is(X, green) :- is(X, round), is(X, big).",
        "description": "Round, big things are green."
    },
    {
        "id": 907,
        "statement": "is(X, round) :- is(X, rough).",
        "description": "Rough things are round."
    },
    {
        "id": 908,
        "statement": "is(X, rough) :- is(X, green).",
        "description": "All green things are rough."
    },
    {
        "id": 909,
        "statement": "is(cat, kind).",
        "description": "The cat is kind."
    },
    {
        "id": 910,
        "statement": "visits(dog, cat).",
        "description": "The dog visits the cat."
    },
    {
        "id": 911,
        "statement": "eats(lion, cow).",
        "description": "The lion eats the cow."
    },
    {
        "id": 912,
        "statement": "eats(lion, dog).",
        "description": "The lion eats the dog."
    },
    {
        "id": 913,
        "statement": "sees(X, cow) :- is(X, rough).",
        "description": "If someone is rough then they see the cow."
    },
    {
        "id": 914,
        "statement": "eats(cat, lion) :- visits(X, cat), is(cat, rough).",
        "description": "If someone visits the cat and the cat is rough then the cat eats the lion."
    },
    {
        "id": 915,
        "statement": "visits(X, cow) :- is(X, rough).",
        "description": "If someone is rough then they visit the cow."
    },
    {
        "id": 916,
        "statement": "is(lion, kind) :- eats(X, lion), is(X, big).",
        "description": "If someone eats the lion and they are big then the lion is kind."
    },
    {
        "id": 917,
        "statement": "visits(lion, cat) :- sees(X, lion).",
        "description": "If someone sees the lion then the lion visits the cat."
    },
    {
        "id": 918,
        "statement": "visits(cow, lion) :- is(X, green), visits(X, cow).",
        "description": "If someone is green and they visit the cow then the cow visits the lion."
    },
    {
        "id": 919,
        "statement": "sees(lion, cow) :- visits(cat, lion), sees(lion, cat).",
        "description": "If the cat visits the lion and the lion sees the cat then the lion sees the cow."
    },
    {
        "id": 920,
        "statement": "visits(cow, mouse).",
        "description": "The cow visits the mouse."
    },
    {
        "id": 921,
        "statement": "likes(mouse, tiger).",
        "description": "The mouse likes the tiger."
    },
    {
        "id": 922,
        "statement": "eats(tiger, cow).",
        "description": "The tiger eats the cow."
    },
    {
        "id": 923,
        "statement": "is(X, green) :- is(X, cold).",
        "description": "Cold things are green."
    },
    {
        "id": 924,
        "statement": "is(X, young) :- likes(X, mouse).",
        "description": "If something likes the mouse then it is young."
    },
    {
        "id": 925,
        "statement": "likes(rabbit, mouse) :- eats(X, rabbit).",
        "description": "If something eats the rabbit then the rabbit likes the mouse."
    },
    {
        "id": 926,
        "statement": "eats(X, rabbit) :- is(X, green).",
        "description": "If something is green then it eats the rabbit."
    },
    {
        "id": 927,
        "statement": "likes(tiger, cow) :- visits(X, tiger), eats(X, tiger).",
        "description": "If something visits the tiger and it eats the tiger then the tiger likes the cow."
    },
    {
        "id": 928,
        "statement": "eats(rabbit, cow) :- eats(tiger, rabbit).",
        "description": "If the tiger eats the rabbit then the rabbit eats the cow."
    },
    {
        "id": 929,
        "statement": "eats(tiger, cow) :- visits(X, rabbit), eats(X, tiger).",
        "description": "If something visits the rabbit and it eats the tiger then the tiger eats the cow."
    },
    {
        "id": 930,
        "statement": "is(X, cold) :- visits(X, tiger).",
        "description": "If something visits the tiger then it is cold."
    },
    {
        "id": 931,
        "statement": "is(X, round) :- is(X, green), not visits(X, cow).",
        "description": "If something is green and it does not visit the cow then it is round."
    },
    {
        "id": 932,
        "statement": "is(X, blue) :- is(X, young), not is(X, green).",
        "description": "If someone is young and not green then they are blue."
    },
    {
        "id": 933,
        "statement": "is(X, blue) :- is(X, cold).",
        "description": "All cold people are blue."
    },
    {
        "id": 934,
        "statement": "is(gary, blue) :- is(gary, nice).",
        "description": "If Gary is nice then Gary is blue."
    },
    {
        "id": 935,
        "statement": "is(X, quiet) :- is(X, young).",
        "description": "All young people are quiet."
    },
    {
        "id": 936,
        "statement": "is(X, cold) :- is(X, quiet), is(X, kind).",
        "description": "Quiet, kind people are cold."
    },
    {
        "id": 937,
        "statement": "is(X, nice) :- is(X, cold), is(X, blue).",
        "description": "Cold, blue people are nice."
    },
    {
        "id": 938,
        "statement": "is(X, cold) :- is(X, smart), is(X, kind).",
        "description": "All smart, kind things are cold."
    },
    {
        "id": 939,
        "statement": "is(X, kind) :- is(X, quiet), is(X, nice).",
        "description": "Quiet, nice things are kind."
    },
    {
        "id": 940,
        "statement": "is(X, kind) :- is(X, cold), is(X, quiet).",
        "description": "Cold, quiet things are kind."
    },
    {
        "id": 941,
        "statement": "is(X, white) :- is(X, cold), is(X, smart).",
        "description": "If something is cold and smart then it is white."
    },
    {
        "id": 942,
        "statement": "is(X, nice) :- is(X, white), is(X, kind).",
        "description": "If something is white and kind then it is nice."
    },
    {
        "id": 943,
        "statement": "is(fiona, rough) :- is(fiona, kind), is(fiona, cold).",
        "description": "If Fiona is kind and Fiona is cold then Fiona is rough."
    },
    {
        "id": 944,
        "statement": "is(X, quiet) :- is(X, cold), is(X, white).",
        "description": "All cold, white things are quiet."
    },
    {
        "id": 945,
        "statement": "is(X, smart) :- is(X, cold).",
        "description": "All cold things are smart."
    },
    {
        "id": 946,
        "statement": "is(X, rough) :- is(X, white).",
        "description": "If something is white then it is rough."
    },
    {
        "id": 947,
        "statement": "is(X, nice) :- is(X, young), is(X, white).",
        "description": "If something is young and white then it is nice."
    },
    {
        "id": 948,
        "statement": "is(X, red) :- is(X, cold), is(X, white).",
        "description": "Cold, white things are red."
    },
    {
        "id": 949,
        "statement": "is(X, young) :- is(X, blue), is(X, rough).",
        "description": "If something is blue and rough then it is young."
    },
    {
        "id": 950,
        "statement": "is(X, white) :- is(X, young).",
        "description": "Young things are white."
    },
    {
        "id": 951,
        "statement": "is(dave, cold) :- is(dave, red), is(dave, young).",
        "description": "If Dave is red and Dave is young then Dave is cold."
    },
    {
        "id": 952,
        "statement": "is(X, cold) :- is(X, nice).",
        "description": "If something is nice then it is cold."
    },
    {
        "id": 953,
        "statement": "chases(bald_eagle, cow).",
        "description": "The bald eagle chases the cow."
    },
    {
        "id": 954,
        "statement": "likes(dog, mouse).",
        "description": "The dog likes the mouse."
    },
    {
        "id": 955,
        "statement": "needs(dog, bald_eagle).",
        "description": "The dog needs the bald eagle."
    },
    {
        "id": 956,
        "statement": "needs(dog, mouse).",
        "description": "The dog needs the mouse."
    },
    {
        "id": 957,
        "statement": "chases(mouse, cow).",
        "description": "The mouse chases the cow."
    },
    {
        "id": 958,
        "statement": "is(mouse, red).",
        "description": "The mouse is red."
    },
    {
        "id": 959,
        "statement": "likes(mouse, bald_eagle).",
        "description": "The mouse likes the bald eagle."
    },
    {
        "id": 960,
        "statement": "needs(mouse, cow).",
        "description": "The mouse needs the cow."
    },
    {
        "id": 961,
        "statement": "needs(mouse, dog).",
        "description": "The mouse needs the dog."
    },
    {
        "id": 962,
        "statement": "is(bald_eagle, blue) :- is(X, green), not needs(X, bald_eagle).",
        "description": "If something is green and it does not need the bald eagle then the bald eagle is blue."
    },
    {
        "id": 963,
        "statement": "is(X, green) :- likes(X, mouse).",
        "description": "If something likes the mouse then it is green."
    },
    {
        "id": 964,
        "statement": "is(X, red) :- is(X, big).",
        "description": "All big things are red."
    },
    {
        "id": 965,
        "statement": "chases(X, mouse) :- is(X, big).",
        "description": "If something is big then it chases the mouse."
    },
    {
        "id": 966,
        "statement": "needs(cow, mouse) :- likes(X, cow), is(X, big).",
        "description": "If something likes the cow and it is big then the cow needs the mouse."
    },
    {
        "id": 967,
        "statement": "needs(bald_eagle, cow) :- is(bald_eagle, nice), is(bald_eagle, blue).",
        "description": "If the bald eagle is nice and the bald eagle is blue then the bald eagle needs the cow."
    },
    {
        "id": 968,
        "statement": "likes(X, cow) :- is(X, red), chases(X, mouse).",
        "description": "If something is red and it chases the mouse then it likes the cow."
    },
    {
        "id": 969,
        "statement": "chases(cow, bald_eagle) :- needs(bald_eagle, cow).",
        "description": "If the bald eagle needs the cow then the cow chases the bald eagle."
    },
    {
        "id": 970,
        "statement": "likes(X, mouse) :- needs(X, mouse), not is(mouse, nice).",
        "description": "If something needs the mouse and the mouse is not nice then it likes the mouse."
    },
    {
        "id": 971,
        "statement": "is(X, quiet) :- is(X, nice), is(X, furry).",
        "description": "Nice, furry people are quiet."
    },
    {
        "id": 972,
        "statement": "is(bob, nice) :- is(bob, big).",
        "description": "If Bob is big then Bob is nice."
    },
    {
        "id": 973,
        "statement": "is(X, big) :- is(X, young), is(X, white).",
        "description": "Young, white people are big."
    },
    {
        "id": 974,
        "statement": "is(X, rough) :- is(X, quiet), is(X, young).",
        "description": "If someone is quiet and young then they are rough."
    },
    {
        "id": 975,
        "statement": "is(X, furry) :- is(X, quiet).",
        "description": "All quiet people are furry."
    },
    {
        "id": 976,
        "statement": "is(X, nice) :- is(X, young).",
        "description": "If someone is young then they are nice."
    },
    {
        "id": 977,
        "statement": "is(X, kind) :- is(X, rough).",
        "description": "Rough people are kind."
    },
    {
        "id": 978,
        "statement": "is(harry, rough) :- is(harry, red).",
        "description": "If Harry is red then Harry is rough."
    },
    {
        "id": 979,
        "statement": "is(X, red) :- is(X, white), is(X, big).",
        "description": "All white, big people are red."
    },
    {
        "id": 980,
        "statement": "is(X, white) :- is(X, big).",
        "description": "If someone is big then they are white."
    },
    {
        "id": 981,
        "statement": "is(X, quiet) :- is(X, white), is(X, red).",
        "description": "All white, red people are quiet."
    },
    {
        "id": 982,
        "statement": "is(X, big) :- is(X, kind), is(X, smart).",
        "description": "If someone is kind and smart then they are big."
    },
    {
        "id": 983,
        "statement": "is(X, kind) :- is(X, smart).",
        "description": "If someone is smart then they are kind."
    },
    {
        "id": 984,
        "statement": "is(anne, kind) :- is(anne, blue).",
        "description": "If Anne is blue then Anne is kind."
    },
    {
        "id": 985,
        "statement": "is(anne, red) :- is(anne, cold), is(anne, quiet).",
        "description": "If Anne is cold and Anne is quiet then Anne is red."
    },
    {
        "id": 986,
        "statement": "is(X, cold) :- is(X, quiet), is(X, red).",
        "description": "Quiet, red things are cold."
    },
    {
        "id": 987,
        "statement": "is(X, red) :- is(X, young).",
        "description": "All young things are red."
    },
    {
        "id": 988,
        "statement": "is(X, red) :- is(X, blue), is(X, smart).",
        "description": "If something is blue and smart then it is red."
    },
    {
        "id": 989,
        "statement": "is(X, young) :- is(X, kind).",
        "description": "Kind things are young."
    },
    {
        "id": 990,
        "statement": "is(X, young) :- is(X, quiet).",
        "description": "Quiet things are young."
    },
    {
        "id": 991,
        "statement": "is(X, blue) :- is(X, cold), is(X, young).",
        "description": "All cold, young things are blue."
    },
    {
        "id": 992,
        "statement": "is(X, quiet) :- is(X, red), is(X, kind).",
        "description": "Red, kind things are quiet."
    },
    {
        "id": 993,
        "statement": "eats(bald_eagle, tiger).",
        "description": "The bald eagle eats the tiger."
    },
    {
        "id": 994,
        "statement": "eats(cow, mouse).",
        "description": "The cow eats the mouse."
    },
    {
        "id": 995,
        "statement": "likes(cow, tiger).",
        "description": "The cow likes the tiger."
    },
    {
        "id": 996,
        "statement": "eats(mouse, bald_eagle).",
        "description": "The mouse eats the bald eagle."
    },
    {
        "id": 997,
        "statement": "eats(tiger, mouse) :- likes(cow, tiger).",
        "description": "If the cow likes the tiger then the tiger eats the mouse."
    },
    {
        "id": 998,
        "statement": "likes(cow, bald_eagle) :- is(cow, green), not visits(cow, bald_eagle).",
        "description": "If the cow is green and the cow does not visit the bald eagle then the cow likes the bald eagle."
    },
    {
        "id": 999,
        "statement": "is(X, round) :- likes(X, bald_eagle), not visits(bald_eagle, cow).",
        "description": "If something likes the bald eagle and the bald eagle does not visit the cow then it is round."
    },
    {
        "id": 1000,
        "statement": "visits(X, mouse) :- is(X, round), not is(X, red).",
        "description": "If something is round and not red then it visits the mouse."
    },
    {
        "id": 1001,
        "statement": "visits(X, mouse) :- likes(X, tiger), likes(X, cow).",
        "description": "If something likes the tiger and it likes the cow then it visits the mouse."
    },
    {
        "id": 1002,
        "statement": "eats(X, mouse) :- visits(X, bald_eagle).",
        "description": "If something visits the bald eagle then it eats the mouse."
    },
    {
        "id": 1003,
        "statement": "likes(X, bald_eagle) :- likes(X, tiger).",
        "description": "If something likes the tiger then it likes the bald eagle."
    },
    {
        "id": 1004,
        "statement": "likes(mouse, tiger) :- visits(X, mouse).",
        "description": "If something visits the mouse then the mouse likes the tiger."
    },
    {
        "id": 1005,
        "statement": "is(cow, red).",
        "description": "The cow is red."
    },
    {
        "id": 1006,
        "statement": "sees(cow, squirrel).",
        "description": "The cow sees the squirrel."
    },
    {
        "id": 1007,
        "statement": "sees(lion, squirrel).",
        "description": "The lion sees the squirrel."
    },
    {
        "id": 1008,
        "statement": "sees(lion, tiger).",
        "description": "The lion sees the tiger."
    },
    {
        "id": 1009,
        "statement": "is(squirrel, round).",
        "description": "The squirrel is round."
    },
    {
        "id": 1010,
        "statement": "sees(X, squirrel) :- is(X, red).",
        "description": "If someone is red then they see the squirrel."
    },
    {
        "id": 1011,
        "statement": "chases(lion, squirrel) :- chases(X, lion).",
        "description": "If someone chases the lion then the lion chases the squirrel."
    },
    {
        "id": 1012,
        "statement": "chases(X, tiger) :- chases(X, squirrel), not eats(X, lion).",
        "description": "If someone chases the squirrel and they do not eat the lion then they chase the tiger."
    },
    {
        "id": 1013,
        "statement": "sees(lion, cow) :- is(lion, nice).",
        "description": "If the lion is nice then the lion sees the cow."
    },
    {
        "id": 1014,
        "statement": "is(lion, nice) :- eats(cow, lion).",
        "description": "If the cow eats the lion then the lion is nice."
    },
    {
        "id": 1015,
        "statement": "is(X, nice) :- chases(X, cow), not is(X, blue).",
        "description": "If someone chases the cow and they are not blue then they are nice."
    },
    {
        "id": 1016,
        "statement": "chases(X, cow) :- chases(X, tiger).",
        "description": "If someone chases the tiger then they chase the cow."
    },
    {
        "id": 1017,
        "statement": "is(X, quiet) :- is(X, cold), is(X, green).",
        "description": "If something is cold and green then it is quiet."
    },
    {
        "id": 1018,
        "statement": "is(bob, cold) :- is(bob, smart).",
        "description": "If Bob is smart then Bob is cold."
    },
    {
        "id": 1019,
        "statement": "is(X, green) :- is(X, smart), is(X, cold).",
        "description": "Smart, cold things are green."
    },
    {
        "id": 1020,
        "statement": "is(X, nice) :- is(X, quiet), is(X, smart).",
        "description": "If something is quiet and smart then it is nice."
    },
    {
        "id": 1021,
        "statement": "is(X, rough) :- is(X, smart).",
        "description": "Smart things are rough."
    },
    {
        "id": 1022,
        "statement": "is(X, big) :- is(X, smart), is(X, quiet).",
        "description": "Smart, quiet things are big."
    },
    {
        "id": 1023,
        "statement": "is(X, smart) :- is(X, rough).",
        "description": "If something is rough then it is smart."
    },
    {
        "id": 1024,
        "statement": "is(X, rough) :- is(X, big), is(X, green).",
        "description": "If something is big and green then it is rough."
    },
    {
        "id": 1025,
        "statement": "chases(bear, tiger).",
        "description": "The bear chases the tiger."
    },
    {
        "id": 1026,
        "statement": "needs(bear, tiger).",
        "description": "The bear needs the tiger."
    },
    {
        "id": 1027,
        "statement": "needs(dog, tiger).",
        "description": "The dog needs the tiger."
    },
    {
        "id": 1028,
        "statement": "visits(dog, bear).",
        "description": "The dog visits the bear."
    },
    {
        "id": 1029,
        "statement": "is(mouse, cold).",
        "description": "The mouse is cold."
    },
    {
        "id": 1030,
        "statement": "is(mouse, nice).",
        "description": "The mouse is nice."
    },
    {
        "id": 1031,
        "statement": "visits(tiger, mouse).",
        "description": "The tiger visits the mouse."
    },
    {
        "id": 1032,
        "statement": "is(tiger, red) :- is(X, nice), visits(X, tiger).",
        "description": "If someone is nice and they visit the tiger then the tiger is red."
    },
    {
        "id": 1033,
        "statement": "chases(X, bear) :- needs(X, dog).",
        "description": "If someone needs the dog then they chase the bear."
    },
    {
        "id": 1034,
        "statement": "is(tiger, young) :- needs(X, tiger), chases(X, dog).",
        "description": "If someone needs the tiger and they chase the dog then the tiger is young."
    },
    {
        "id": 1035,
        "statement": "chases(X, dog) :- chases(X, bear).",
        "description": "If someone chases the bear then they chase the dog."
    },
    {
        "id": 1036,
        "statement": "is(X, red) :- is(X, big).",
        "description": "If someone is big then they are red."
    },
    {
        "id": 1037,
        "statement": "chases(X, dog) :- needs(X, mouse).",
        "description": "If someone needs the mouse then they chase the dog."
    },
    {
        "id": 1038,
        "statement": "needs(X, mouse) :- is(X, red).",
        "description": "If someone is red then they need the mouse."
    },
    {
        "id": 1039,
        "statement": "is(bear, big) :- needs(X, bear).",
        "description": "If someone needs the bear then the bear is big."
    },
    {
        "id": 1040,
        "statement": "chases(bear, tiger) :- visits(X, bear).",
        "description": "If someone visits the bear then the bear chases the tiger."
    },
    {
        "id": 1041,
        "statement": "is(harry, round).",
        "description": "Harry is round."
    },
    {
        "id": 1042,
        "statement": "is(X, cold) :- is(X, rough).",
        "description": "Rough things are cold."
    },
    {
        "id": 1043,
        "statement": "is(X, white) :- is(X, round), is(X, nice).",
        "description": "All round, nice things are white."
    },
    {
        "id": 1044,
        "statement": "is(X, red) :- is(X, quiet), is(X, cold).",
        "description": "Quiet, cold things are red."
    },
    {
        "id": 1045,
        "statement": "is(X, rough) :- is(X, quiet).",
        "description": "Quiet things are rough."
    },
    {
        "id": 1046,
        "statement": "is(X, quiet) :- is(X, red), is(X, rough).",
        "description": "Red, rough things are quiet."
    },
    {
        "id": 1047,
        "statement": "is(X, round) :- is(X, quiet), is(X, red).",
        "description": "If something is quiet and red then it is round."
    },
    {
        "id": 1048,
        "statement": "is(dave, red) :- is(dave, white), is(dave, nice).",
        "description": "If Dave is white and Dave is nice then Dave is red."
    },
    {
        "id": 1049,
        "statement": "needs(bald_eagle, mouse).",
        "description": "The bald eagle needs the mouse."
    },
    {
        "id": 1050,
        "statement": "visits(bald_eagle, cow).",
        "description": "The bald eagle visits the cow."
    },
    {
        "id": 1051,
        "statement": "needs(cat, bald_eagle).",
        "description": "The cat needs the bald eagle."
    },
    {
        "id": 1052,
        "statement": "needs(cow, mouse).",
        "description": "The cow needs the mouse."
    },
    {
        "id": 1053,
        "statement": "needs(mouse, bald_eagle).",
        "description": "The mouse needs the bald eagle."
    },
    {
        "id": 1054,
        "statement": "visits(mouse, cat).",
        "description": "The mouse visits the cat."
    },
    {
        "id": 1055,
        "statement": "needs(mouse, cat) :- chases(cow, mouse).",
        "description": "If the cow chases the mouse then the mouse needs the cat."
    },
    {
        "id": 1056,
        "statement": "is(bald_eagle, green) :- needs(X, mouse), chases(mouse, bald_eagle).",
        "description": "If someone needs the mouse and the mouse chases the bald eagle then the bald eagle is green."
    },
    {
        "id": 1057,
        "statement": "needs(cow, bald_eagle) :- chases(mouse, bald_eagle), visits(bald_eagle, cow).",
        "description": "If the mouse chases the bald eagle and the bald eagle visits the cow then the cow needs the bald eagle."
    },
    {
        "id": 1058,
        "statement": "chases(X, bald_eagle) :- needs(X, bald_eagle), is(bald_eagle, nice).",
        "description": "If someone needs the bald eagle and the bald eagle is nice then they chase the bald eagle."
    },
    {
        "id": 1059,
        "statement": "visits(cow, mouse) :- visits(X, cat), needs(cat, cow).",
        "description": "If someone visits the cat and the cat needs the cow then the cow visits the mouse."
    },
    {
        "id": 1060,
        "statement": "is(bald_eagle, nice) :- needs(X, bald_eagle).",
        "description": "If someone needs the bald eagle then the bald eagle is nice."
    },
    {
        "id": 1061,
        "statement": "needs(bald_eagle, cat) :- needs(cow, bald_eagle).",
        "description": "If the cow needs the bald eagle then the bald eagle needs the cat."
    },
    {
        "id": 1062,
        "statement": "chases(X, cow) :- needs(X, cat), needs(cat, bald_eagle).",
        "description": "If someone needs the cat and the cat needs the bald eagle then they chase the cow."
    },
    {
        "id": 1063,
        "statement": "sees(bald_eagle, cow).",
        "description": "The bald eagle sees the cow."
    },
    {
        "id": 1064,
        "statement": "eats(dog, mouse).",
        "description": "The dog eats the mouse."
    },
    {
        "id": 1065,
        "statement": "sees(mouse, cow).",
        "description": "The mouse sees the cow."
    },
    {
        "id": 1066,
        "statement": "sees(mouse, dog).",
        "description": "The mouse sees the dog."
    },
    {
        "id": 1067,
        "statement": "is(dog, big) :- sees(dog, mouse).",
        "description": "If the dog sees the mouse then the dog is big."
    },
    {
        "id": 1068,
        "statement": "needs(bald_eagle, cow) :- sees(X, dog), needs(dog, bald_eagle).",
        "description": "If something sees the dog and the dog needs the bald eagle then the bald eagle needs the cow."
    },
    {
        "id": 1069,
        "statement": "sees(X, cow) :- is(X, red).",
        "description": "If something is red then it sees the cow."
    },
    {
        "id": 1070,
        "statement": "eats(X, dog) :- needs(X, mouse), is(mouse, nice).",
        "description": "If something needs the mouse and the mouse is nice then it eats the dog."
    },
    {
        "id": 1071,
        "statement": "is(X, big) :- needs(X, cow).",
        "description": "If something needs the cow then it is big."
    },
    {
        "id": 1072,
        "statement": "needs(X, bald_eagle) :- eats(X, cow).",
        "description": "If something eats the cow then it needs the bald eagle."
    },
    {
        "id": 1073,
        "statement": "eats(dog, cow) :- sees(X, dog).",
        "description": "If something sees the dog then the dog eats the cow."
    },
    {
        "id": 1074,
        "statement": "needs(X, dog) :- is(X, big).",
        "description": "If something is big then it needs the dog."
    },
    {
        "id": 1075,
        "statement": "is(X, quiet) :- is(X, big).",
        "description": "If something is big then it is quiet."
    },
    {
        "id": 1076,
        "statement": "is(X, young) :- is(X, nice), is(X, quiet).",
        "description": "All nice, quiet things are young."
    },
    {
        "id": 1077,
        "statement": "is(X, nice) :- is(X, kind).",
        "description": "If something is kind then it is nice."
    },
    {
        "id": 1078,
        "statement": "is(erin, nice) :- is(erin, white).",
        "description": "If Erin is white then Erin is nice."
    },
    {
        "id": 1079,
        "statement": "is(X, green) :- is(X, young), is(X, quiet).",
        "description": "All young, quiet things are green."
    },
    {
        "id": 1080,
        "statement": "is(X, quiet) :- is(X, green), is(X, young).",
        "description": "Green, young things are quiet."
    },
    {
        "id": 1081,
        "statement": "is(X, white) :- is(X, green), is(X, nice).",
        "description": "All green, nice things are white."
    },
    {
        "id": 1082,
        "statement": "is(X, quiet) :- is(X, blue), is(X, rough).",
        "description": "All blue, rough things are quiet."
    },
    {
        "id": 1083,
        "statement": "is(X, smart) :- is(X, rough).",
        "description": "Rough things are smart."
    },
    {
        "id": 1084,
        "statement": "is(X, white) :- is(X, smart), is(X, quiet).",
        "description": "All smart, quiet things are white."
    },
    {
        "id": 1085,
        "statement": "is(X, quiet) :- is(X, cold).",
        "description": "All cold things are quiet."
    },
    {
        "id": 1086,
        "statement": "is(X, blue) :- is(X, big).",
        "description": "All big things are blue."
    },
    {
        "id": 1087,
        "statement": "is(X, cold) :- is(X, smart).",
        "description": "Smart things are cold."
    },
    {
        "id": 1088,
        "statement": "is(X, big) :- is(X, blue).",
        "description": "Blue things are big."
    },
    {
        "id": 1089,
        "statement": "is(gary, blue) :- is(gary, white).",
        "description": "If Gary is white then Gary is blue."
    },
    {
        "id": 1090,
        "statement": "is(X, kind) :- is(X, white), not is(X, red).",
        "description": "If something is white and not red then it is kind."
    },
    {
        "id": 1091,
        "statement": "is(X, kind) :- is(X, young), is(X, red).",
        "description": "Young, red things are kind."
    },
    {
        "id": 1092,
        "statement": "is(anne, rough) :- is(anne, cold).",
        "description": "If Anne is cold then Anne is rough."
    },
    {
        "id": 1093,
        "statement": "is(erin, kind) :- is(erin, round), is(erin, cold).",
        "description": "If Erin is round and Erin is cold then Erin is kind."
    },
    {
        "id": 1094,
        "statement": "is(X, round) :- is(X, white), is(X, young).",
        "description": "If something is white and young then it is round."
    },
    {
        "id": 1095,
        "statement": "is(anne, round) :- is(anne, rough), is(anne, cold).",
        "description": "If Anne is rough and Anne is cold then Anne is round."
    },
    {
        "id": 1096,
        "statement": "is(X, young) :- is(X, rough), is(X, round).",
        "description": "All rough, round things are young."
    },
    {
        "id": 1097,
        "statement": "is(X, cold) :- is(X, rough), is(X, white).",
        "description": "All rough, white things are cold."
    },
    {
        "id": 1098,
        "statement": "is(erin, furry) :- is(erin, smart).",
        "description": "If Erin is smart then Erin is furry."
    },
    {
        "id": 1099,
        "statement": "is(X, kind) :- is(X, blue), is(X, green).",
        "description": "If something is blue and green then it is kind."
    },
    {
        "id": 1100,
        "statement": "is(X, smart) :- is(X, furry).",
        "description": "Furry things are smart."
    },
    {
        "id": 1101,
        "statement": "is(X, kind) :- is(X, furry), is(X, green).",
        "description": "If something is furry and green then it is kind."
    },
    {
        "id": 1102,
        "statement": "is(X, blue) :- is(X, kind), is(X, furry).",
        "description": "All kind, furry things are blue."
    },
    {
        "id": 1103,
        "statement": "is(X, rough) :- is(X, blue).",
        "description": "All blue things are rough."
    },
    {
        "id": 1104,
        "statement": "is(X, green) :- is(X, cold), is(X, smart).",
        "description": "Cold, smart things are green."
    },
    {
        "id": 1105,
        "statement": "is(X, smart) :- is(X, rough).",
        "description": "All rough things are smart."
    },
    {
        "id": 1106,
        "statement": "is(cat, round).",
        "description": "The cat is round."
    },
    {
        "id": 1107,
        "statement": "visits(cat, lion).",
        "description": "The cat visits the lion."
    },
    {
        "id": 1108,
        "statement": "visits(cat, squirrel).",
        "description": "The cat visits the squirrel."
    },
    {
        "id": 1109,
        "statement": "chases(rabbit, cat).",
        "description": "The rabbit chases the cat."
    },
    {
        "id": 1110,
        "statement": "sees(rabbit, lion).",
        "description": "The rabbit sees the lion."
    },
    {
        "id": 1111,
        "statement": "chases(X, cat) :- visits(X, rabbit).",
        "description": "If someone visits the rabbit then they chase the cat."
    },
    {
        "id": 1112,
        "statement": "visits(lion, cat) :- visits(lion, squirrel).",
        "description": "If the lion visits the squirrel then the lion visits the cat."
    },
    {
        "id": 1113,
        "statement": "sees(cat, lion) :- chases(X, cat).",
        "description": "If someone chases the cat then the cat sees the lion."
    },
    {
        "id": 1114,
        "statement": "chases(lion, rabbit) :- chases(squirrel, lion).",
        "description": "If the squirrel chases the lion then the lion chases the rabbit."
    },
    {
        "id": 1115,
        "statement": "chases(X, squirrel) :- visits(X, rabbit).",
        "description": "If someone visits the rabbit then they chase the squirrel."
    },
    {
        "id": 1116,
        "statement": "chases(X, rabbit) :- visits(X, cat).",
        "description": "If someone visits the cat then they chase the rabbit."
    },
    {
        "id": 1117,
        "statement": "visits(squirrel, cat) :- is(X, round), chases(X, squirrel).",
        "description": "If someone is round and they chase the squirrel then the squirrel visits the cat."
    },
    {
        "id": 1118,
        "statement": "visits(X, rabbit) :- sees(X, lion).",
        "description": "If someone sees the lion then they visit the rabbit."
    },
    {
        "id": 1119,
        "statement": "is(X, furry) :- is(X, young).",
        "description": "If something is young then it is furry."
    },
    {
        "id": 1120,
        "statement": "is(X, quiet) :- is(X, kind), is(X, big).",
        "description": "If something is kind and big then it is quiet."
    },
    {
        "id": 1121,
        "statement": "is(X, big) :- is(X, young), is(X, quiet).",
        "description": "Young, quiet things are big."
    },
    {
        "id": 1122,
        "statement": "is(anne, kind) :- is(anne, big), is(anne, furry).",
        "description": "If Anne is big and Anne is furry then Anne is kind."
    },
    {
        "id": 1123,
        "statement": "is(X, big) :- is(X, furry).",
        "description": "All furry things are big."
    },
    {
        "id": 1124,
        "statement": "is(X, white) :- is(X, big).",
        "description": "If something is big then it is white."
    },
    {
        "id": 1125,
        "statement": "is(X, cold) :- is(X, kind), is(X, big).",
        "description": "All kind, big things are cold."
    },
    {
        "id": 1126,
        "statement": "visits(bald_eagle, tiger).",
        "description": "The bald eagle visits the tiger."
    },
    {
        "id": 1127,
        "statement": "visits(cow, bald_eagle).",
        "description": "The cow visits the bald eagle."
    },
    {
        "id": 1128,
        "statement": "is(dog, blue).",
        "description": "The dog is blue."
    },
    {
        "id": 1129,
        "statement": "is(dog, cold).",
        "description": "The dog is cold."
    },
    {
        "id": 1130,
        "statement": "is(dog, young).",
        "description": "The dog is young."
    },
    {
        "id": 1131,
        "statement": "likes(dog, bald_eagle).",
        "description": "The dog likes the bald eagle."
    },
    {
        "id": 1132,
        "statement": "likes(tiger, bald_eagle).",
        "description": "The tiger likes the bald eagle."
    },
    {
        "id": 1133,
        "statement": "sees(dog, cow) :- visits(X, dog).",
        "description": "If something visits the dog then the dog sees the cow."
    },
    {
        "id": 1134,
        "statement": "likes(X, cow) :- is(X, big).",
        "description": "If something is big then it likes the cow."
    },
    {
        "id": 1135,
        "statement": "likes(X, cow) :- sees(X, dog).",
        "description": "If something sees the dog then it likes the cow."
    },
    {
        "id": 1136,
        "statement": "likes(X, bald_eagle) :- is(X, cold).",
        "description": "If something is cold then it likes the bald eagle."
    },
    {
        "id": 1137,
        "statement": "sees(X, cow) :- likes(X, dog), is(dog, big).",
        "description": "If something likes the dog and the dog is big then it sees the cow."
    },
    {
        "id": 1138,
        "statement": "visits(X, dog) :- is(X, big), likes(X, cow).",
        "description": "If something is big and it likes the cow then it visits the dog."
    },
    {
        "id": 1139,
        "statement": "is(dog, big) :- visits(X, dog), visits(X, cow).",
        "description": "If something visits the dog and it visits the cow then the dog is big."
    },
    {
        "id": 1140,
        "statement": "is(X, big) :- visits(X, dog), not is(X, blue).",
        "description": "If something visits the dog and it is not blue then it is big."
    },
    {
        "id": 1141,
        "statement": "is(X, furry) :- is(X, round).",
        "description": "All round things are furry."
    },
    {
        "id": 1142,
        "statement": "is(X, young) :- is(X, nice), is(X, round).",
        "description": "If something is nice and round then it is young."
    },
    {
        "id": 1143,
        "statement": "is(X, round) :- is(X, furry).",
        "description": "If something is furry then it is round."
    },
    {
        "id": 1144,
        "statement": "is(X, green) :- is(X, quiet), is(X, cold).",
        "description": "If something is quiet and cold then it is green."
    },
    {
        "id": 1145,
        "statement": "is(X, furry) :- is(X, nice).",
        "description": "Nice things are furry."
    },
    {
        "id": 1146,
        "statement": "is(X, cold) :- is(X, furry).",
        "description": "Furry things are cold."
    },
    {
        "id": 1147,
        "statement": "is(harry, young) :- is(harry, furry), is(harry, cold).",
        "description": "If Harry is furry and Harry is cold then Harry is young."
    },
    {
        "id": 1148,
        "statement": "is(X, nice) :- is(X, quiet).",
        "description": "Quiet things are nice."
    },
    {
        "id": 1149,
        "statement": "sees(dog, rabbit).",
        "description": "The dog sees the rabbit."
    },
    {
        "id": 1150,
        "statement": "visits(lion, dog).",
        "description": "The lion visits the dog."
    },
    {
        "id": 1151,
        "statement": "visits(X, rabbit) :- is(X, red), chases(X, bear).",
        "description": "If someone is red and they chase the bear then they visit the rabbit."
    },
    {
        "id": 1152,
        "statement": "chases(X, bear) :- is(X, green).",
        "description": "If someone is green then they chase the bear."
    },
    {
        "id": 1153,
        "statement": "visits(dog, lion) :- sees(dog, lion).",
        "description": "If the dog sees the lion then the dog visits the lion."
    },
    {
        "id": 1154,
        "statement": "is(X, red) :- visits(X, lion).",
        "description": "If someone visits the lion then they are red."
    },
    {
        "id": 1155,
        "statement": "is(X, green) :- is(X, red).",
        "description": "Red people are green."
    },
    {
        "id": 1156,
        "statement": "is(X, round) :- chases(X, dog).",
        "description": "If someone chases the dog then they are round."
    },
    {
        "id": 1157,
        "statement": "is(X, cold) :- chases(X, dog).",
        "description": "If someone chases the dog then they are cold."
    },
    {
        "id": 1158,
        "statement": "sees(bear, lion) :- is(X, red), chases(X, bear).",
        "description": "If someone is red and they chase the bear then the bear sees the lion."
    },
    {
        "id": 1159,
        "statement": "chases(bear, lion).",
        "description": "The bear chases the lion."
    },
    {
        "id": 1160,
        "statement": "chases(cow, bear).",
        "description": "The cow chases the bear."
    },
    {
        "id": 1161,
        "statement": "likes(mouse, cow).",
        "description": "The mouse likes the cow."
    },
    {
        "id": 1162,
        "statement": "likes(mouse, lion) :- not chases(bear, mouse).",
        "description": "If the bear does not chase the mouse then the mouse likes the lion."
    },
    {
        "id": 1163,
        "statement": "chases(X, bear) :- chases(X, cow).",
        "description": "If something chases the cow then it chases the bear."
    },
    {
        "id": 1164,
        "statement": "is(X, big) :- is(X, cold).",
        "description": "All cold things are big."
    },
    {
        "id": 1165,
        "statement": "needs(X, mouse) :- likes(X, lion), not likes(X, bear).",
        "description": "If something likes the lion and it does not like the bear then it needs the mouse."
    },
    {
        "id": 1166,
        "statement": "needs(X, mouse) :- is(X, cold).",
        "description": "If something is cold then it needs the mouse."
    },
    {
        "id": 1167,
        "statement": "needs(X, lion) :- needs(X, bear), likes(bear, cow).",
        "description": "If something needs the bear and the bear likes the cow then it needs the lion."
    },
    {
        "id": 1168,
        "statement": "needs(cow, lion) :- likes(bear, lion), chases(bear, cow).",
        "description": "If the bear likes the lion and the bear chases the cow then the cow needs the lion."
    },
    {
        "id": 1169,
        "statement": "is(X, cold) :- likes(X, lion).",
        "description": "If something likes the lion then it is cold."
    },
    {
        "id": 1170,
        "statement": "likes(cow, lion) :- likes(X, cow), is(X, big).",
        "description": "If something likes the cow and it is big then the cow likes the lion."
    },
    {
        "id": 1171,
        "statement": "is(bald_eagle, blue).",
        "description": "The bald eagle is blue."
    },
    {
        "id": 1172,
        "statement": "is(bald_eagle, kind).",
        "description": "The bald eagle is kind."
    },
    {
        "id": 1173,
        "statement": "needs(bald_eagle, squirrel).",
        "description": "The bald eagle needs the squirrel."
    },
    {
        "id": 1174,
        "statement": "sees(bald_eagle, lion).",
        "description": "The bald eagle sees the lion."
    },
    {
        "id": 1175,
        "statement": "sees(bald_eagle, squirrel).",
        "description": "The bald eagle sees the squirrel."
    },
    {
        "id": 1176,
        "statement": "sees(bear, squirrel).",
        "description": "The bear sees the squirrel."
    },
    {
        "id": 1177,
        "statement": "sees(squirrel, bear).",
        "description": "The squirrel sees the bear."
    },
    {
        "id": 1178,
        "statement": "sees(squirrel, lion).",
        "description": "The squirrel sees the lion."
    },
    {
        "id": 1179,
        "statement": "is(lion, cold) :- is(X, kind), sees(X, lion).",
        "description": "If something is kind and it sees the lion then the lion is cold."
    },
    {
        "id": 1180,
        "statement": "is(bald_eagle, rough) :- eats(X, squirrel), needs(squirrel, bald_eagle).",
        "description": "If something eats the squirrel and the squirrel needs the bald eagle then the bald eagle is rough."
    },
    {
        "id": 1181,
        "statement": "is(X, rough) :- is(X, cold), needs(X, bear).",
        "description": "If something is cold and it needs the bear then it is rough."
    },
    {
        "id": 1182,
        "statement": "eats(X, lion) :- is(X, cold), eats(X, squirrel).",
        "description": "If something is cold and it eats the squirrel then it eats the lion."
    },
    {
        "id": 1183,
        "statement": "sees(X, bear) :- is(X, cold), is(X, rough).",
        "description": "If something is cold and rough then it sees the bear."
    },
    {
        "id": 1184,
        "statement": "needs(X, bald_eagle) :- sees(X, bear).",
        "description": "If something sees the bear then it needs the bald eagle."
    },
    {
        "id": 1185,
        "statement": "is(X, blue) :- needs(X, bald_eagle).",
        "description": "If something needs the bald eagle then it is blue."
    },
    {
        "id": 1186,
        "statement": "sees(X, bald_eagle) :- is(X, cold), sees(X, lion).",
        "description": "If something is cold and it sees the lion then it sees the bald eagle."
    },
    {
        "id": 1187,
        "statement": "sees(X, bald_eagle) :- sees(X, squirrel).",
        "description": "If something sees the squirrel then it sees the bald eagle."
    },
    {
        "id": 1188,
        "statement": "is(X, cold) :- is(X, green), is(X, kind).",
        "description": "Green, kind people are cold."
    },
    {
        "id": 1189,
        "statement": "is(X, cold) :- is(X, green), is(X, smart).",
        "description": "If someone is green and smart then they are cold."
    },
    {
        "id": 1190,
        "statement": "is(X, cold) :- is(X, blue), is(X, kind).",
        "description": "Blue, kind people are cold."
    },
    {
        "id": 1191,
        "statement": "is(X, white) :- is(X, cold).",
        "description": "If someone is cold then they are white."
    },
    {
        "id": 1192,
        "statement": "is(X, blue) :- is(X, green).",
        "description": "All green people are blue."
    },
    {
        "id": 1193,
        "statement": "is(X, smart) :- is(X, kind), is(X, cold).",
        "description": "Kind, cold people are smart."
    },
    {
        "id": 1194,
        "statement": "is(X, big) :- is(X, smart).",
        "description": "If someone is smart then they are big."
    },
    {
        "id": 1195,
        "statement": "is(X, blue) :- is(X, quiet).",
        "description": "Quiet things are blue."
    },
    {
        "id": 1196,
        "statement": "is(X, smart) :- is(X, round).",
        "description": "All round things are smart."
    },
    {
        "id": 1197,
        "statement": "is(X, quiet) :- is(X, smart).",
        "description": "Smart things are quiet."
    },
    {
        "id": 1198,
        "statement": "is(X, red) :- is(X, young).",
        "description": "If something is young then it is red."
    },
    {
        "id": 1199,
        "statement": "is(X, round) :- is(X, rough).",
        "description": "All rough things are round."
    },
    {
        "id": 1200,
        "statement": "is(X, young) :- is(X, rough), is(X, blue).",
        "description": "All rough, blue things are young."
    },
    {
        "id": 1201,
        "statement": "is(X, green) :- is(X, smart), is(X, big).",
        "description": "All smart, big things are green."
    },
    {
        "id": 1202,
        "statement": "is(X, blue) :- is(X, white), is(X, quiet).",
        "description": "All white, quiet things are blue."
    },
    {
        "id": 1203,
        "statement": "is(X, big) :- is(X, white), is(X, red).",
        "description": "If something is white and red then it is big."
    },
    {
        "id": 1204,
        "statement": "is(X, big) :- is(X, quiet), is(X, green).",
        "description": "Quiet, green things are big."
    },
    {
        "id": 1205,
        "statement": "is(X, red) :- is(X, green), is(X, blue).",
        "description": "Green, blue things are red."
    },
    {
        "id": 1206,
        "statement": "is(X, white) :- is(X, green).",
        "description": "All green things are white."
    },
    {
        "id": 1207,
        "statement": "is(X, smart) :- is(X, red), is(X, big).",
        "description": "If something is red and big then it is smart."
    },
    {
        "id": 1208,
        "statement": "is(X, rough) :- is(X, furry), not is(X, round).",
        "description": "If something is furry and not round then it is rough."
    },
    {
        "id": 1209,
        "statement": "is(X, rough) :- is(X, round).",
        "description": "If something is round then it is rough."
    },
    {
        "id": 1210,
        "statement": "is(X, rough) :- is(X, white), is(X, quiet).",
        "description": "All white, quiet things are rough."
    },
    {
        "id": 1211,
        "statement": "is(X, white) :- is(X, rough), not is(X, furry).",
        "description": "If something is rough and not furry then it is white."
    },
    {
        "id": 1212,
        "statement": "is(X, white) :- is(X, furry).",
        "description": "All furry things are white."
    },
    {
        "id": 1213,
        "statement": "is(fiona, blue) :- is(fiona, white), not is(fiona, furry).",
        "description": "If Fiona is white and Fiona is not furry then Fiona is blue."
    },
    {
        "id": 1214,
        "statement": "is(X, smart) :- is(X, round), is(X, blue).",
        "description": "Round, blue things are smart."
    },
    {
        "id": 1215,
        "statement": "is(X, blue) :- is(X, quiet).",
        "description": "If something is quiet then it is blue."
    },
    {
        "id": 1216,
        "statement": "is(X, quiet) :- is(X, white).",
        "description": "If something is white then it is quiet."
    },
    {
        "id": 1217,
        "statement": "eats(bald_eagle, cat).",
        "description": "The bald eagle eats the cat."
    },
    {
        "id": 1218,
        "statement": "sees(cat, lion).",
        "description": "The cat sees the lion."
    },
    {
        "id": 1219,
        "statement": "needs(lion, bald_eagle).",
        "description": "The lion needs the bald eagle."
    },
    {
        "id": 1220,
        "statement": "needs(rabbit, bald_eagle) :- is(X, red), needs(X, rabbit).",
        "description": "If someone is red and they need the rabbit then the rabbit needs the bald eagle."
    },
    {
        "id": 1221,
        "statement": "sees(bald_eagle, lion) :- eats(X, bald_eagle).",
        "description": "If someone eats the bald eagle then the bald eagle sees the lion."
    },
    {
        "id": 1222,
        "statement": "is(X, green) :- needs(X, lion).",
        "description": "If someone needs the lion then they are green."
    },
    {
        "id": 1223,
        "statement": "sees(X, lion) :- eats(X, bald_eagle).",
        "description": "If someone eats the bald eagle then they see the lion."
    },
    {
        "id": 1224,
        "statement": "sees(X, rabbit) :- is(X, green).",
        "description": "If someone is green then they see the rabbit."
    },
    {
        "id": 1225,
        "statement": "needs(cat, rabbit) :- is(cat, green), sees(cat, lion).",
        "description": "If the cat is green and the cat sees the lion then the cat needs the rabbit."
    },
    {
        "id": 1226,
        "statement": "needs(X, lion) :- sees(X, bald_eagle).",
        "description": "If someone sees the bald eagle then they need the lion."
    },
    {
        "id": 1227,
        "statement": "needs(X, rabbit) :- needs(X, cat).",
        "description": "If someone needs the cat then they need the rabbit."
    },
    {
        "id": 1228,
        "statement": "sees(rabbit, bald_eagle) :- sees(X, rabbit).",
        "description": "If someone sees the rabbit then the rabbit sees the bald eagle."
    },
    {
        "id": 1229,
        "statement": "is(dog, kind).",
        "description": "The dog is kind."
    },
    {
        "id": 1230,
        "statement": "needs(dog, rabbit).",
        "description": "The dog needs the rabbit."
    },
    {
        "id": 1231,
        "statement": "visits(dog, bald_eagle).",
        "description": "The dog visits the bald eagle."
    },
    {
        "id": 1232,
        "statement": "needs(rabbit, tiger).",
        "description": "The rabbit needs the tiger."
    },
    {
        "id": 1233,
        "statement": "is(tiger, nice) :- sees(X, bald_eagle), sees(bald_eagle, tiger).",
        "description": "If something sees the bald eagle and the bald eagle sees the tiger then the tiger is nice."
    },
    {
        "id": 1234,
        "statement": "needs(bald_eagle, tiger) :- is(X, kind), sees(X, bald_eagle).",
        "description": "If something is kind and it sees the bald eagle then the bald eagle needs the tiger."
    },
    {
        "id": 1235,
        "statement": "sees(X, tiger) :- is(X, kind).",
        "description": "If something is kind then it sees the tiger."
    },
    {
        "id": 1236,
        "statement": "is(rabbit, rough) :- is(X, nice), sees(X, rabbit).",
        "description": "If something is nice and it sees the rabbit then the rabbit is rough."
    },
    {
        "id": 1237,
        "statement": "sees(X, rabbit) :- is(X, nice).",
        "description": "If something is nice then it sees the rabbit."
    },
    {
        "id": 1238,
        "statement": "needs(rabbit, bald_eagle) :- is(rabbit, rough), visits(rabbit, dog).",
        "description": "If the rabbit is rough and the rabbit visits the dog then the rabbit needs the bald eagle."
    },
    {
        "id": 1239,
        "statement": "sees(X, dog) :- needs(X, bald_eagle).",
        "description": "If something needs the bald eagle then it sees the dog."
    },
    {
        "id": 1240,
        "statement": "needs(rabbit, dog) :- visits(X, rabbit), is(X, rough).",
        "description": "If something visits the rabbit and it is rough then the rabbit needs the dog."
    },
    {
        "id": 1241,
        "statement": "needs(X, rabbit) :- is(X, rough).",
        "description": "If something is rough then it needs the rabbit."
    },
    {
        "id": 1242,
        "statement": "is(X, round) :- is(X, red).",
        "description": "All red things are round."
    },
    {
        "id": 1243,
        "statement": "is(X, rough) :- is(X, kind), is(X, furry).",
        "description": "If something is kind and furry then it is rough."
    },
    {
        "id": 1244,
        "statement": "is(X, red) :- is(X, quiet).",
        "description": "Quiet things are red."
    },
    {
        "id": 1245,
        "statement": "is(X, furry) :- is(X, rough), not is(X, kind).",
        "description": "If something is rough and not kind then it is furry."
    },
    {
        "id": 1246,
        "statement": "is(X, furry) :- is(X, big), is(X, rough).",
        "description": "All big, rough things are furry."
    },
    {
        "id": 1247,
        "statement": "is(X, big) :- is(X, round), not is(X, kind).",
        "description": "If something is round and not kind then it is big."
    },
    {
        "id": 1248,
        "statement": "is(charlie, furry) :- is(charlie, round), is(charlie, big).",
        "description": "If Charlie is round and Charlie is big then Charlie is furry."
    },
    {
        "id": 1249,
        "statement": "eats(bald_eagle, cow).",
        "description": "The bald eagle eats the cow."
    },
    {
        "id": 1250,
        "statement": "eats(bald_eagle, lion).",
        "description": "The bald eagle eats the lion."
    },
    {
        "id": 1251,
        "statement": "is(bald_eagle, nice).",
        "description": "The bald eagle is nice."
    },
    {
        "id": 1252,
        "statement": "is(bald_eagle, red).",
        "description": "The bald eagle is red."
    },
    {
        "id": 1253,
        "statement": "is(bald_eagle, rough).",
        "description": "The bald eagle is rough."
    },
    {
        "id": 1254,
        "statement": "likes(bald_eagle, cow).",
        "description": "The bald eagle likes the cow."
    },
    {
        "id": 1255,
        "statement": "likes(bear, cow).",
        "description": "The bear likes the cow."
    },
    {
        "id": 1256,
        "statement": "likes(cow, bald_eagle).",
        "description": "The cow likes the bald eagle."
    },
    {
        "id": 1257,
        "statement": "eats(lion, bald_eagle).",
        "description": "The lion eats the bald eagle."
    },
    {
        "id": 1258,
        "statement": "needs(bear, cow) :- needs(X, bear), is(bear, young).",
        "description": "If someone needs the bear and the bear is young then the bear needs the cow."
    },
    {
        "id": 1259,
        "statement": "likes(bald_eagle, cow) :- eats(X, bald_eagle), is(bald_eagle, young).",
        "description": "If someone eats the bald eagle and the bald eagle is young then the bald eagle likes the cow."
    },
    {
        "id": 1260,
        "statement": "eats(lion, bear) :- needs(lion, bear).",
        "description": "If the lion needs the bear then the lion eats the bear."
    },
    {
        "id": 1261,
        "statement": "needs(X, lion) :- is(X, red).",
        "description": "If someone is red then they need the lion."
    },
    {
        "id": 1262,
        "statement": "needs(X, cow) :- is(X, green), needs(X, bear).",
        "description": "If someone is green and they need the bear then they need the cow."
    },
    {
        "id": 1263,
        "statement": "is(bear, red) :- needs(X, bear), needs(bear, cow).",
        "description": "If someone needs the bear and the bear needs the cow then the bear is red."
    },
    {
        "id": 1264,
        "statement": "needs(X, bear) :- is(X, red), needs(X, lion).",
        "description": "If someone is red and they need the lion then they need the bear."
    },
    {
        "id": 1265,
        "statement": "is(X, blue) :- is(X, red), is(X, furry).",
        "description": "If something is red and furry then it is blue."
    },
    {
        "id": 1266,
        "statement": "is(X, furry) :- is(X, rough), is(X, smart).",
        "description": "If something is rough and smart then it is furry."
    },
    {
        "id": 1267,
        "statement": "is(bob, smart) :- is(bob, blue), is(bob, furry).",
        "description": "If Bob is blue and Bob is furry then Bob is smart."
    },
    {
        "id": 1268,
        "statement": "is(X, smart) :- is(X, cold).",
        "description": "If something is cold then it is smart."
    },
    {
        "id": 1269,
        "statement": "is(X, cold) :- is(X, nice), is(X, blue).",
        "description": "If something is nice and blue then it is cold."
    },
    {
        "id": 1270,
        "statement": "is(gary, rough) :- is(gary, cold), is(gary, smart).",
        "description": "If Gary is cold and Gary is smart then Gary is rough."
    },
    {
        "id": 1271,
        "statement": "is(X, nice) :- is(X, blue).",
        "description": "All blue things are nice."
    },
    {
        "id": 1272,
        "statement": "chases(bear, bald_eagle).",
        "description": "The bear chases the bald eagle."
    },
    {
        "id": 1273,
        "statement": "needs(bear, rabbit).",
        "description": "The bear needs the rabbit."
    },
    {
        "id": 1274,
        "statement": "chases(rabbit, bald_eagle).",
        "description": "The rabbit chases the bald eagle."
    },
    {
        "id": 1275,
        "statement": "needs(rabbit, bald_eagle).",
        "description": "The rabbit needs the bald eagle."
    },
    {
        "id": 1276,
        "statement": "visits(rabbit, mouse).",
        "description": "The rabbit visits the mouse."
    },
    {
        "id": 1277,
        "statement": "visits(X, bald_eagle) :- needs(X, bald_eagle).",
        "description": "If someone needs the bald eagle then they visit the bald eagle."
    },
    {
        "id": 1278,
        "statement": "is(X, big) :- needs(X, rabbit), needs(X, mouse).",
        "description": "If someone needs the rabbit and they need the mouse then they are big."
    },
    {
        "id": 1279,
        "statement": "is(X, big) :- chases(X, mouse).",
        "description": "If someone chases the mouse then they are big."
    },
    {
        "id": 1280,
        "statement": "needs(X, bear) :- visits(X, bald_eagle).",
        "description": "If someone visits the bald eagle then they need the bear."
    },
    {
        "id": 1281,
        "statement": "needs(rabbit, bald_eagle) :- chases(bald_eagle, rabbit), needs(rabbit, bear).",
        "description": "If the bald eagle chases the rabbit and the rabbit needs the bear then the rabbit needs the bald eagle."
    },
    {
        "id": 1282,
        "statement": "is(X, red) :- needs(X, bear).",
        "description": "If someone needs the bear then they are red."
    },
    {
        "id": 1283,
        "statement": "visits(X, rabbit) :- is(X, big).",
        "description": "If someone is big then they visit the rabbit."
    },
    {
        "id": 1284,
        "statement": "chases(X, mouse) :- is(X, red).",
        "description": "If someone is red then they chase the mouse."
    },
    {
        "id": 1285,
        "statement": "is(X, round) :- chases(X, mouse).",
        "description": "If someone chases the mouse then they are round."
    },
    {
        "id": 1286,
        "statement": "is(bald_eagle, big).",
        "description": "The bald eagle is big."
    },
    {
        "id": 1287,
        "statement": "is(cat, cold).",
        "description": "The cat is cold."
    },
    {
        "id": 1288,
        "statement": "chases(mouse, bald_eagle).",
        "description": "The mouse chases the bald eagle."
    },
    {
        "id": 1289,
        "statement": "is(rabbit, rough).",
        "description": "The rabbit is rough."
    },
    {
        "id": 1290,
        "statement": "is(bald_eagle, big) :- chases(X, rabbit), chases(rabbit, bald_eagle).",
        "description": "If something chases the rabbit and the rabbit chases the bald eagle then the bald eagle is big."
    },
    {
        "id": 1291,
        "statement": "is(cat, rough) :- visits(X, cat).",
        "description": "If something visits the cat then the cat is rough."
    },
    {
        "id": 1292,
        "statement": "chases(cat, mouse) :- likes(bald_eagle, cat), not visits(bald_eagle, rabbit).",
        "description": "If the bald eagle likes the cat and the bald eagle does not visit the rabbit then the cat chases the mouse."
    },
    {
        "id": 1293,
        "statement": "likes(X, cat) :- is(X, cold), not is(X, green).",
        "description": "If something is cold and not green then it likes the cat."
    },
    {
        "id": 1294,
        "statement": "likes(rabbit, mouse) :- chases(rabbit, mouse).",
        "description": "If the rabbit chases the mouse then the rabbit likes the mouse."
    },
    {
        "id": 1295,
        "statement": "visits(mouse, rabbit) :- not is(mouse, cold).",
        "description": "If the mouse is not cold then the mouse visits the rabbit."
    },
    {
        "id": 1296,
        "statement": "is(bald_eagle, cold) :- visits(X, rabbit), visits(rabbit, bald_eagle).",
        "description": "If something visits the rabbit and the rabbit visits the bald eagle then the bald eagle is cold."
    },
    {
        "id": 1297,
        "statement": "visits(X, bald_eagle) :- likes(X, cat).",
        "description": "If something likes the cat then it visits the bald eagle."
    },
    {
        "id": 1298,
        "statement": "is(fiona, green) :- is(fiona, smart).",
        "description": "If Fiona is smart then Fiona is green."
    },
    {
        "id": 1299,
        "statement": "is(X, young) :- is(X, round), is(X, kind).",
        "description": "Round, kind people are young."
    },
    {
        "id": 1300,
        "statement": "is(X, smart) :- is(X, white).",
        "description": "All white people are smart."
    },
    {
        "id": 1301,
        "statement": "is(X, smart) :- is(X, green), is(X, round).",
        "description": "All green, round people are smart."
    },
    {
        "id": 1302,
        "statement": "is(X, green) :- is(X, kind).",
        "description": "If someone is kind then they are green."
    },
    {
        "id": 1303,
        "statement": "is(anne, white) :- is(anne, green).",
        "description": "If Anne is green then Anne is white."
    },
    {
        "id": 1304,
        "statement": "is(X, furry) :- is(X, smart), is(X, kind).",
        "description": "All smart, kind people are furry."
    },
    {
        "id": 1305,
        "statement": "is(X, kind) :- is(X, young).",
        "description": "All young people are kind."
    },
    {
        "id": 1306,
        "statement": "is(X, green) :- is(X, smart).",
        "description": "All smart people are green."
    },
    {
        "id": 1307,
        "statement": "is(X, red) :- is(X, nice), is(X, green).",
        "description": "All nice, green people are red."
    },
    {
        "id": 1308,
        "statement": "is(X, kind) :- is(X, blue).",
        "description": "If someone is blue then they are kind."
    },
    {
        "id": 1309,
        "statement": "is(X, nice) :- is(X, kind).",
        "description": "If someone is kind then they are nice."
    },
    {
        "id": 1310,
        "statement": "is(X, blue) :- is(X, green).",
        "description": "Green people are blue."
    },
    {
        "id": 1311,
        "statement": "is(fiona, cold) :- is(fiona, green), not is(fiona, red).",
        "description": "If Fiona is green and Fiona is not red then Fiona is cold."
    },
    {
        "id": 1312,
        "statement": "is(X, cold) :- is(X, red), not is(X, blue).",
        "description": "If someone is red and not blue then they are cold."
    },
    {
        "id": 1313,
        "statement": "is(X, cold) :- is(X, red).",
        "description": "All red people are cold."
    },
    {
        "id": 1314,
        "statement": "is(X, young) :- is(X, white).",
        "description": "White things are young."
    },
    {
        "id": 1315,
        "statement": "is(X, smart) :- is(X, furry), is(X, rough).",
        "description": "If something is furry and rough then it is smart."
    },
    {
        "id": 1316,
        "statement": "is(X, big) :- is(X, rough).",
        "description": "All rough things are big."
    },
    {
        "id": 1317,
        "statement": "is(erin, white) :- is(erin, rough).",
        "description": "If Erin is rough then Erin is white."
    },
    {
        "id": 1318,
        "statement": "is(X, furry) :- is(X, white).",
        "description": "White things are furry."
    },
    {
        "id": 1319,
        "statement": "is(X, round) :- is(X, rough), is(X, smart).",
        "description": "Rough, smart things are round."
    },
    {
        "id": 1320,
        "statement": "is(X, nice) :- is(X, young), is(X, big).",
        "description": "Young, big people are nice."
    },
    {
        "id": 1321,
        "statement": "is(X, big) :- is(X, red), is(X, young).",
        "description": "All red, young people are big."
    },
    {
        "id": 1322,
        "statement": "is(X, quiet) :- is(X, red).",
        "description": "If someone is red then they are quiet."
    },
    {
        "id": 1323,
        "statement": "is(X, blue) :- is(X, quiet), is(X, red).",
        "description": "Quiet, red people are blue."
    },
    {
        "id": 1324,
        "statement": "is(X, quiet) :- is(X, big), is(X, nice).",
        "description": "If someone is big and nice then they are quiet."
    },
    {
        "id": 1325,
        "statement": "is(fiona, blue) :- is(fiona, cold).",
        "description": "If Fiona is cold then Fiona is blue."
    },
    {
        "id": 1326,
        "statement": "is(fiona, cold) :- is(fiona, young), is(fiona, red).",
        "description": "If Fiona is young and Fiona is red then Fiona is cold."
    },
    {
        "id": 1327,
        "statement": "is(X, young) :- is(X, red), is(X, blue).",
        "description": "All red, blue people are young."
    },
    {
        "id": 1328,
        "statement": "is(X, red) :- is(X, smart), is(X, white).",
        "description": "If someone is smart and white then they are red."
    },
    {
        "id": 1329,
        "statement": "is(X, red) :- is(X, kind).",
        "description": "All kind people are red."
    },
    {
        "id": 1330,
        "statement": "is(X, furry) :- is(X, red), is(X, white).",
        "description": "If someone is red and white then they are furry."
    },
    {
        "id": 1331,
        "statement": "is(X, furry) :- is(X, smart), is(X, green).",
        "description": "If someone is smart and green then they are furry."
    },
    {
        "id": 1332,
        "statement": "is(X, white) :- is(X, smart).",
        "description": "All smart people are white."
    },
    {
        "id": 1333,
        "statement": "is(X, smart) :- is(X, furry).",
        "description": "All furry people are smart."
    },
    {
        "id": 1334,
        "statement": "eats(dog, rabbit).",
        "description": "The dog eats the rabbit."
    },
    {
        "id": 1335,
        "statement": "chases(mouse, dog).",
        "description": "The mouse chases the dog."
    },
    {
        "id": 1336,
        "statement": "eats(mouse, dog).",
        "description": "The mouse eats the dog."
    },
    {
        "id": 1337,
        "statement": "eats(mouse, rabbit).",
        "description": "The mouse eats the rabbit."
    },
    {
        "id": 1338,
        "statement": "chases(squirrel, rabbit).",
        "description": "The squirrel chases the rabbit."
    },
    {
        "id": 1339,
        "statement": "eats(squirrel, dog).",
        "description": "The squirrel eats the dog."
    },
    {
        "id": 1340,
        "statement": "eats(squirrel, mouse).",
        "description": "The squirrel eats the mouse."
    },
    {
        "id": 1341,
        "statement": "visits(squirrel, rabbit).",
        "description": "The squirrel visits the rabbit."
    },
    {
        "id": 1342,
        "statement": "is(X, kind) :- eats(X, dog), not chases(dog, mouse).",
        "description": "If something eats the dog and the dog does not chase the mouse then it is kind."
    },
    {
        "id": 1343,
        "statement": "is(X, red) :- is(X, cold).",
        "description": "If something is cold then it is red."
    },
    {
        "id": 1344,
        "statement": "eats(rabbit, dog) :- is(dog, cold), eats(dog, rabbit).",
        "description": "If the dog is cold and the dog eats the rabbit then the rabbit eats the dog."
    },
    {
        "id": 1345,
        "statement": "is(X, green) :- chases(X, mouse).",
        "description": "If something chases the mouse then it is green."
    },
    {
        "id": 1346,
        "statement": "visits(mouse, dog) :- eats(rabbit, mouse).",
        "description": "If the rabbit eats the mouse then the mouse visits the dog."
    },
    {
        "id": 1347,
        "statement": "eats(X, mouse) :- is(X, kind).",
        "description": "If something is kind then it eats the mouse."
    },
    {
        "id": 1348,
        "statement": "visits(squirrel, mouse) :- eats(dog, squirrel).",
        "description": "If the dog eats the squirrel then the squirrel visits the mouse."
    },
    {
        "id": 1349,
        "statement": "chases(X, squirrel) :- visits(X, dog).",
        "description": "If something visits the dog then it chases the squirrel."
    },
    {
        "id": 1350,
        "statement": "is(squirrel, green) :- chases(squirrel, rabbit), not visits(squirrel, mouse).",
        "description": "If the squirrel chases the rabbit and the squirrel does not visit the mouse then the squirrel is green."
    },
    {
        "id": 1351,
        "statement": "is(charlie, kind) :- is(charlie, cold), is(charlie, quiet).",
        "description": "If Charlie is cold and Charlie is quiet then Charlie is kind."
    },
    {
        "id": 1352,
        "statement": "is(X, green) :- is(X, big), is(X, furry).",
        "description": "If someone is big and furry then they are green."
    },
    {
        "id": 1353,
        "statement": "is(X, furry) :- is(X, cold).",
        "description": "If someone is cold then they are furry."
    },
    {
        "id": 1354,
        "statement": "is(X, furry) :- is(X, green), is(X, kind).",
        "description": "If someone is green and kind then they are furry."
    },
    {
        "id": 1355,
        "statement": "is(charlie, quiet) :- is(charlie, nice), is(charlie, furry).",
        "description": "If Charlie is nice and Charlie is furry then Charlie is quiet."
    },
    {
        "id": 1356,
        "statement": "is(X, quiet) :- is(X, kind), is(X, big).",
        "description": "All kind, big people are quiet."
    },
    {
        "id": 1357,
        "statement": "is(X, big) :- is(X, cold), is(X, furry).",
        "description": "If someone is cold and furry then they are big."
    },
    {
        "id": 1358,
        "statement": "is(X, nice) :- is(X, cold), is(X, big).",
        "description": "Cold, big people are nice."
    },
    {
        "id": 1359,
        "statement": "is(X, big) :- is(X, blue), is(X, red).",
        "description": "If something is blue and red then it is big."
    },
    {
        "id": 1360,
        "statement": "is(X, red) :- is(X, blue).",
        "description": "Blue things are red."
    },
    {
        "id": 1361,
        "statement": "is(bob, white) :- is(bob, smart), is(bob, big).",
        "description": "If Bob is smart and Bob is big then Bob is white."
    },
    {
        "id": 1362,
        "statement": "is(X, white) :- is(X, cold), is(X, blue).",
        "description": "If something is cold and blue then it is white."
    },
    {
        "id": 1363,
        "statement": "is(X, red) :- is(X, white).",
        "description": "White things are red."
    },
    {
        "id": 1364,
        "statement": "is(X, cold) :- is(X, big), is(X, red).",
        "description": "All big, red things are cold."
    },
    {
        "id": 1365,
        "statement": "is(X, quiet) :- is(X, white), is(X, smart).",
        "description": "White, smart things are quiet."
    },
    {
        "id": 1366,
        "statement": "is(X, quiet) :- is(X, white).",
        "description": "All white things are quiet."
    },
    {
        "id": 1367,
        "statement": "is(X, smart) :- is(X, green), is(X, nice).",
        "description": "Green, nice people are smart."
    },
    {
        "id": 1368,
        "statement": "is(X, young) :- is(X, green).",
        "description": "If someone is green then they are young."
    },
    {
        "id": 1369,
        "statement": "is(X, green) :- is(X, white).",
        "description": "If someone is white then they are green."
    },
    {
        "id": 1370,
        "statement": "is(X, smart) :- is(X, furry), is(X, red).",
        "description": "Furry, red people are smart."
    },
    {
        "id": 1371,
        "statement": "is(X, furry) :- is(X, young), is(X, white).",
        "description": "If someone is young and white then they are furry."
    },
    {
        "id": 1372,
        "statement": "is(X, white) :- is(X, red).",
        "description": "All red people are white."
    },
    {
        "id": 1373,
        "statement": "is(X, red) :- is(X, nice).",
        "description": "Nice people are red."
    },
    {
        "id": 1374,
        "statement": "is(X, white) :- is(X, green), is(X, nice).",
        "description": "Green, nice people are white."
    },
    {
        "id": 1375,
        "statement": "is(X, green) :- is(X, quiet).",
        "description": "All quiet people are green."
    },
    {
        "id": 1376,
        "statement": "is(X, green) :- is(X, quiet).",
        "description": "If someone is quiet then they are green."
    },
    {
        "id": 1377,
        "statement": "is(X, round) :- is(X, red).",
        "description": "All red people are round."
    },
    {
        "id": 1378,
        "statement": "is(charlie, smart) :- is(charlie, red), is(charlie, quiet).",
        "description": "If Charlie is red and Charlie is quiet then Charlie is smart."
    },
    {
        "id": 1379,
        "statement": "is(fiona, rough) :- is(fiona, quiet).",
        "description": "If Fiona is quiet then Fiona is rough."
    },
    {
        "id": 1380,
        "statement": "is(X, rough) :- is(X, smart).",
        "description": "All smart people are rough."
    },
    {
        "id": 1381,
        "statement": "is(anne, smart) :- is(anne, nice), is(anne, round).",
        "description": "If Anne is nice and Anne is round then Anne is smart."
    },
    {
        "id": 1382,
        "statement": "is(X, nice) :- is(X, round), is(X, green).",
        "description": "If someone is round and green then they are nice."
    },
    {
        "id": 1383,
        "statement": "is(X, quiet) :- is(X, red), is(X, round).",
        "description": "If someone is red and round then they are quiet."
    },
    {
        "id": 1384,
        "statement": "chases(X, lion) :- eats(X, squirrel).",
        "description": "If someone eats the squirrel then they chase the lion."
    },
    {
        "id": 1385,
        "statement": "is(X, big) :- chases(X, mouse), is(X, red).",
        "description": "If someone chases the mouse and they are red then they are big."
    },
    {
        "id": 1386,
        "statement": "chases(lion, squirrel) :- needs(X, lion).",
        "description": "If someone needs the lion then the lion chases the squirrel."
    },
    {
        "id": 1387,
        "statement": "needs(X, tiger) :- needs(X, squirrel).",
        "description": "If someone needs the squirrel then they need the tiger."
    },
    {
        "id": 1388,
        "statement": "eats(tiger, squirrel) :- chases(X, tiger).",
        "description": "If someone chases the tiger then the tiger eats the squirrel."
    },
    {
        "id": 1389,
        "statement": "chases(X, tiger) :- chases(X, lion).",
        "description": "If someone chases the lion then they chase the tiger."
    },
    {
        "id": 1390,
        "statement": "chases(mouse, tiger) :- needs(X, mouse), needs(mouse, squirrel).",
        "description": "If someone needs the mouse and the mouse needs the squirrel then the mouse chases the tiger."
    },
    {
        "id": 1391,
        "statement": "visits(dog, lion).",
        "description": "The dog visits the lion."
    },
    {
        "id": 1392,
        "statement": "chases(lion, mouse).",
        "description": "The lion chases the mouse."
    },
    {
        "id": 1393,
        "statement": "is(lion, kind).",
        "description": "The lion is kind."
    },
    {
        "id": 1394,
        "statement": "visits(lion, tiger).",
        "description": "The lion visits the tiger."
    },
    {
        "id": 1395,
        "statement": "chases(mouse, lion).",
        "description": "The mouse chases the lion."
    },
    {
        "id": 1396,
        "statement": "visits(X, mouse) :- eats(X, tiger), is(X, red).",
        "description": "If someone eats the tiger and they are red then they visit the mouse."
    },
    {
        "id": 1397,
        "statement": "visits(X, dog) :- chases(X, mouse).",
        "description": "If someone chases the mouse then they visit the dog."
    },
    {
        "id": 1398,
        "statement": "eats(tiger, mouse) :- chases(X, tiger), visits(tiger, dog).",
        "description": "If someone chases the tiger and the tiger visits the dog then the tiger eats the mouse."
    },
    {
        "id": 1399,
        "statement": "chases(dog, tiger) :- visits(mouse, dog).",
        "description": "If the mouse visits the dog then the dog chases the tiger."
    },
    {
        "id": 1400,
        "statement": "eats(mouse, tiger) :- chases(X, mouse), eats(X, mouse).",
        "description": "If someone chases the mouse and they eat the mouse then the mouse eats the tiger."
    },
    {
        "id": 1401,
        "statement": "visits(dog, lion) :- chases(X, dog).",
        "description": "If someone chases the dog then the dog visits the lion."
    },
    {
        "id": 1402,
        "statement": "chases(mouse, tiger) :- eats(mouse, lion), visits(lion, dog).",
        "description": "If the mouse eats the lion and the lion visits the dog then the mouse chases the tiger."
    },
    {
        "id": 1403,
        "statement": "is(X, red) :- eats(X, tiger).",
        "description": "If someone eats the tiger then they are red."
    },
    {
        "id": 1404,
        "statement": "is(X, blue) :- is(X, big).",
        "description": "Big people are blue."
    },
    {
        "id": 1405,
        "statement": "is(X, blue) :- is(X, quiet).",
        "description": "All quiet people are blue."
    },
    {
        "id": 1406,
        "statement": "is(X, young) :- is(X, red), is(X, cold).",
        "description": "If someone is red and cold then they are young."
    },
    {
        "id": 1407,
        "statement": "is(X, young) :- is(X, blue).",
        "description": "Blue people are young."
    },
    {
        "id": 1408,
        "statement": "is(X, cold) :- is(X, young).",
        "description": "All young people are cold."
    },
    {
        "id": 1409,
        "statement": "is(gary, big) :- is(gary, cold).",
        "description": "If Gary is cold then Gary is big."
    },
    {
        "id": 1410,
        "statement": "is(anne, green) :- is(anne, quiet), is(anne, big).",
        "description": "If Anne is quiet and Anne is big then Anne is green."
    },
    {
        "id": 1411,
        "statement": "is(X, big) :- is(X, red).",
        "description": "All red people are big."
    },
    {
        "id": 1412,
        "statement": "is(X, red) :- is(X, nice).",
        "description": "If something is nice then it is red."
    },
    {
        "id": 1413,
        "statement": "is(X, nice) :- is(X, big).",
        "description": "All big things are nice."
    },
    {
        "id": 1414,
        "statement": "is(X, furry) :- is(X, nice).",
        "description": "All nice things are furry."
    },
    {
        "id": 1415,
        "statement": "is(X, kind) :- is(X, red).",
        "description": "If something is red then it is kind."
    },
    {
        "id": 1416,
        "statement": "is(X, quiet) :- is(X, furry).",
        "description": "Furry things are quiet."
    },
    {
        "id": 1417,
        "statement": "is(X, round) :- is(X, big), is(X, furry).",
        "description": "If something is big and furry then it is round."
    },
    {
        "id": 1418,
        "statement": "is(X, big) :- is(X, quiet), is(X, kind).",
        "description": "If something is quiet and kind then it is big."
    },
    {
        "id": 1419,
        "statement": "eats(bear, dog).",
        "description": "The bear eats the dog."
    },
    {
        "id": 1420,
        "statement": "chases(cat, dog).",
        "description": "The cat chases the dog."
    },
    {
        "id": 1421,
        "statement": "chases(cat, tiger).",
        "description": "The cat chases the tiger."
    },
    {
        "id": 1422,
        "statement": "eats(cat, tiger).",
        "description": "The cat eats the tiger."
    },
    {
        "id": 1423,
        "statement": "chases(tiger, cat).",
        "description": "The tiger chases the cat."
    },
    {
        "id": 1424,
        "statement": "eats(tiger, cat).",
        "description": "The tiger eats the cat."
    },
    {
        "id": 1425,
        "statement": "chases(cat, tiger) :- chases(X, tiger), chases(tiger, cat).",
        "description": "If someone chases the tiger and the tiger chases the cat then the cat chases the tiger."
    },
    {
        "id": 1426,
        "statement": "likes(X, cat) :- is(X, green).",
        "description": "If someone is green then they like the cat."
    },
    {
        "id": 1427,
        "statement": "is(X, green) :- is(X, nice), is(X, cold).",
        "description": "Nice, cold people are green."
    },
    {
        "id": 1428,
        "statement": "is(cat, cold) :- likes(X, cat).",
        "description": "If someone likes the cat then the cat is cold."
    },
    {
        "id": 1429,
        "statement": "chases(X, tiger) :- chases(X, bear).",
        "description": "If someone chases the bear then they chase the tiger."
    },
    {
        "id": 1430,
        "statement": "is(X, round) :- is(X, big).",
        "description": "If something is big then it is round."
    },
    {
        "id": 1431,
        "statement": "is(X, round) :- is(X, quiet), is(X, big).",
        "description": "If something is quiet and big then it is round."
    },
    {
        "id": 1432,
        "statement": "is(X, smart) :- is(X, round), is(X, quiet).",
        "description": "If something is round and quiet then it is smart."
    },
    {
        "id": 1433,
        "statement": "is(X, red) :- is(X, smart), is(X, big).",
        "description": "If something is smart and big then it is red."
    },
    {
        "id": 1434,
        "statement": "is(X, blue) :- is(X, nice), is(X, quiet).",
        "description": "All nice, quiet things are blue."
    },
    {
        "id": 1435,
        "statement": "is(X, nice) :- is(X, red), is(X, smart).",
        "description": "If something is red and smart then it is nice."
    },
    {
        "id": 1436,
        "statement": "is(X, big) :- is(X, red).",
        "description": "If something is red then it is big."
    },
    {
        "id": 1437,
        "statement": "is(X, big) :- is(X, nice), is(X, blue).",
        "description": "If something is nice and blue then it is big."
    },
    {
        "id": 1438,
        "statement": "is(X, blue) :- is(X, smart), is(X, big).",
        "description": "Smart, big things are blue."
    },
    {
        "id": 1439,
        "statement": "is(bob, nice) :- is(bob, rough).",
        "description": "If Bob is rough then Bob is nice."
    },
    {
        "id": 1440,
        "statement": "is(X, nice) :- is(X, kind), is(X, round).",
        "description": "If something is kind and round then it is nice."
    },
    {
        "id": 1441,
        "statement": "is(X, blue) :- is(X, nice).",
        "description": "If something is nice then it is blue."
    },
    {
        "id": 1442,
        "statement": "is(X, rough) :- is(X, green).",
        "description": "Green things are rough."
    },
    {
        "id": 1443,
        "statement": "is(X, round) :- is(X, kind).",
        "description": "If something is kind then it is round."
    },
    {
        "id": 1444,
        "statement": "is(X, kind) :- is(X, rough), is(X, green).",
        "description": "All rough, green things are kind."
    },
    {
        "id": 1445,
        "statement": "is(X, rough) :- is(X, nice).",
        "description": "If something is nice then it is rough."
    },
    {
        "id": 1446,
        "statement": "is(X, nice) :- is(X, round), is(X, red).",
        "description": "If something is round and red then it is nice."
    },
    {
        "id": 1447,
        "statement": "is(X, nice) :- is(X, kind), is(X, blue).",
        "description": "Kind, blue things are nice."
    },
    {
        "id": 1448,
        "statement": "chases(cow, mouse).",
        "description": "The cow chases the mouse."
    },
    {
        "id": 1449,
        "statement": "sees(cow, mouse).",
        "description": "The cow sees the mouse."
    },
    {
        "id": 1450,
        "statement": "is(squirrel, blue).",
        "description": "The squirrel is blue."
    },
    {
        "id": 1451,
        "statement": "is(squirrel, nice).",
        "description": "The squirrel is nice."
    },
    {
        "id": 1452,
        "statement": "sees(squirrel, cow).",
        "description": "The squirrel sees the cow."
    },
    {
        "id": 1453,
        "statement": "sees(squirrel, mouse).",
        "description": "The squirrel sees the mouse."
    },
    {
        "id": 1454,
        "statement": "chases(X, cow) :- is(X, big).",
        "description": "If someone is big then they chase the cow."
    },
    {
        "id": 1455,
        "statement": "visits(cow, squirrel) :- sees(X, cow).",
        "description": "If someone sees the cow then the cow visits the squirrel."
    },
    {
        "id": 1456,
        "statement": "visits(cow, tiger) :- sees(cow, squirrel).",
        "description": "If the cow sees the squirrel then the cow visits the tiger."
    },
    {
        "id": 1457,
        "statement": "chases(X, cow) :- sees(X, tiger).",
        "description": "If someone sees the tiger then they chase the cow."
    },
    {
        "id": 1458,
        "statement": "is(X, big) :- is(X, cold).",
        "description": "All cold people are big."
    },
    {
        "id": 1459,
        "statement": "is(X, blue) :- is(X, nice).",
        "description": "All nice people are blue."
    },
    {
        "id": 1460,
        "statement": "is(X, cold) :- visits(X, mouse).",
        "description": "If someone visits the mouse then they are cold."
    },
    {
        "id": 1461,
        "statement": "visits(cow, mouse) :- is(X, big), sees(X, cow).",
        "description": "If someone is big and they see the cow then the cow visits the mouse."
    },
    {
        "id": 1462,
        "statement": "is(X, smart) :- is(X, green), is(X, cold).",
        "description": "All green, cold things are smart."
    },
    {
        "id": 1463,
        "statement": "is(X, nice) :- is(X, green), is(X, young).",
        "description": "All green, young things are nice."
    },
    {
        "id": 1464,
        "statement": "is(X, smart) :- is(X, young).",
        "description": "All young things are smart."
    },
    {
        "id": 1465,
        "statement": "is(X, furry) :- is(X, quiet).",
        "description": "Quiet things are furry."
    },
    {
        "id": 1466,
        "statement": "is(X, young) :- is(X, nice).",
        "description": "Nice things are young."
    },
    {
        "id": 1467,
        "statement": "is(harry, cold) :- is(harry, smart).",
        "description": "If Harry is smart then Harry is cold."
    },
    {
        "id": 1468,
        "statement": "is(X, quiet) :- is(X, smart), is(X, young).",
        "description": "Smart, young things are quiet."
    },
    {
        "id": 1469,
        "statement": "is(X, green) :- is(X, quiet), is(X, furry).",
        "description": "All quiet, furry things are green."
    },
    {
        "id": 1470,
        "statement": "is(charlie, kind) :- is(charlie, blue).",
        "description": "If Charlie is blue then Charlie is kind."
    },
    {
        "id": 1471,
        "statement": "is(X, green) :- is(X, blue), is(X, kind).",
        "description": "All blue, kind things are green."
    },
    {
        "id": 1472,
        "statement": "is(X, young) :- is(X, smart), is(X, green).",
        "description": "All smart, green things are young."
    },
    {
        "id": 1473,
        "statement": "is(X, smart) :- is(X, blue), is(X, young).",
        "description": "If something is blue and young then it is smart."
    },
    {
        "id": 1474,
        "statement": "is(X, kind) :- is(X, smart), is(X, green).",
        "description": "All smart, green things are kind."
    },
    {
        "id": 1475,
        "statement": "is(X, smart) :- is(X, young).",
        "description": "Young things are smart."
    },
    {
        "id": 1476,
        "statement": "is(X, blue) :- is(X, smart).",
        "description": "Smart things are blue."
    },
    {
        "id": 1477,
        "statement": "chases(bald_eagle, dog).",
        "description": "The bald eagle chases the dog."
    },
    {
        "id": 1478,
        "statement": "chases(cat, bald_eagle).",
        "description": "The cat chases the bald eagle."
    },
    {
        "id": 1479,
        "statement": "chases(cat, lion).",
        "description": "The cat chases the lion."
    },
    {
        "id": 1480,
        "statement": "needs(cat, lion).",
        "description": "The cat needs the lion."
    },
    {
        "id": 1481,
        "statement": "chases(dog, bald_eagle).",
        "description": "The dog chases the bald eagle."
    },
    {
        "id": 1482,
        "statement": "likes(dog, cat).",
        "description": "The dog likes the cat."
    },
    {
        "id": 1483,
        "statement": "chases(lion, dog) :- needs(lion, cat).",
        "description": "If the lion needs the cat then the lion chases the dog."
    },
    {
        "id": 1484,
        "statement": "needs(X, cat) :- likes(X, cat), likes(X, bald_eagle).",
        "description": "If something likes the cat and it likes the bald eagle then it needs the cat."
    },
    {
        "id": 1485,
        "statement": "needs(X, cat) :- is(X, rough), not chases(X, bald_eagle).",
        "description": "If something is rough and it does not chase the bald eagle then it needs the cat."
    },
    {
        "id": 1486,
        "statement": "likes(X, dog) :- is(X, young), is(X, rough).",
        "description": "If something is young and rough then it likes the dog."
    },
    {
        "id": 1487,
        "statement": "likes(cat, dog) :- likes(X, bald_eagle), needs(X, cat).",
        "description": "If something likes the bald eagle and it needs the cat then the cat likes the dog."
    },
    {
        "id": 1488,
        "statement": "is(lion, rough) :- chases(X, lion).",
        "description": "If something chases the lion then the lion is rough."
    },
    {
        "id": 1489,
        "statement": "likes(lion, dog) :- is(lion, rough).",
        "description": "If the lion is rough then the lion likes the dog."
    },
    {
        "id": 1490,
        "statement": "likes(X, bald_eagle) :- chases(X, dog).",
        "description": "If something chases the dog then it likes the bald eagle."
    },
    {
        "id": 1491,
        "statement": "likes(lion, cat) :- chases(X, lion), needs(lion, dog).",
        "description": "If something chases the lion and the lion needs the dog then the lion likes the cat."
    },
    {
        "id": 1492,
        "statement": "sees(bear, cat).",
        "description": "The bear sees the cat."
    },
    {
        "id": 1493,
        "statement": "sees(mouse, bear).",
        "description": "The mouse sees the bear."
    },
    {
        "id": 1494,
        "statement": "visits(mouse, tiger).",
        "description": "The mouse visits the tiger."
    },
    {
        "id": 1495,
        "statement": "needs(tiger, bear) :- needs(X, mouse), not visits(X, tiger).",
        "description": "If something needs the mouse and it does not visit the tiger then the tiger needs the bear."
    },
    {
        "id": 1496,
        "statement": "is(cat, kind) :- needs(X, bear), needs(bear, cat).",
        "description": "If something needs the bear and the bear needs the cat then the cat is kind."
    },
    {
        "id": 1497,
        "statement": "needs(X, mouse) :- sees(X, bear).",
        "description": "If something sees the bear then it needs the mouse."
    },
    {
        "id": 1498,
        "statement": "sees(mouse, bear) :- sees(X, mouse), sees(mouse, tiger).",
        "description": "If something sees the mouse and the mouse sees the tiger then the mouse sees the bear."
    },
    {
        "id": 1499,
        "statement": "sees(X, cat) :- needs(X, bear), not visits(bear, mouse).",
        "description": "If something needs the bear and the bear does not visit the mouse then it sees the cat."
    },
    {
        "id": 1500,
        "statement": "is(X, big) :- is(X, kind).",
        "description": "If something is kind then it is big."
    },
    {
        "id": 1501,
        "statement": "needs(bear, cat) :- needs(X, bear).",
        "description": "If something needs the bear then the bear needs the cat."
    },
    {
        "id": 1502,
        "statement": "is(X, round) :- is(X, kind), is(X, green).",
        "description": "If something is kind and green then it is round."
    },
    {
        "id": 1503,
        "statement": "is(X, cold) :- is(X, round).",
        "description": "Round things are cold."
    },
    {
        "id": 1504,
        "statement": "is(X, green) :- is(X, round), is(X, cold).",
        "description": "All round, cold things are green."
    },
    {
        "id": 1505,
        "statement": "is(fiona, furry) :- is(fiona, blue).",
        "description": "If Fiona is blue then Fiona is furry."
    },
    {
        "id": 1506,
        "statement": "is(erin, nice) :- is(erin, kind).",
        "description": "If Erin is kind then Erin is nice."
    },
    {
        "id": 1507,
        "statement": "is(X, furry) :- is(X, cold).",
        "description": "All cold things are furry."
    },
    {
        "id": 1508,
        "statement": "is(X, nice) :- is(X, round), not is(X, green).",
        "description": "If something is round and not green then it is nice."
    },
    {
        "id": 1509,
        "statement": "is(X, nice) :- is(X, furry).",
        "description": "If something is furry then it is nice."
    },
    {
        "id": 1510,
        "statement": "is(fiona, smart) :- is(fiona, red).",
        "description": "If Fiona is red then Fiona is smart."
    },
    {
        "id": 1511,
        "statement": "is(X, round) :- is(X, nice).",
        "description": "All nice things are round."
    },
    {
        "id": 1512,
        "statement": "is(X, young) :- is(X, smart), is(X, blue).",
        "description": "All smart, blue things are young."
    },
    {
        "id": 1513,
        "statement": "is(X, white) :- is(X, smart).",
        "description": "Smart things are white."
    },
    {
        "id": 1514,
        "statement": "is(X, red) :- is(X, white).",
        "description": "All white things are red."
    },
    {
        "id": 1515,
        "statement": "is(fiona, blue) :- is(fiona, nice), is(fiona, white).",
        "description": "If Fiona is nice and Fiona is white then Fiona is blue."
    },
    {
        "id": 1516,
        "statement": "is(X, round) :- is(X, young), is(X, white).",
        "description": "All young, white things are round."
    },
    {
        "id": 1517,
        "statement": "is(X, blue) :- is(X, red).",
        "description": "If something is red then it is blue."
    },
    {
        "id": 1518,
        "statement": "is(X, blue) :- is(X, young), is(X, nice).",
        "description": "All young, nice things are blue."
    },
    {
        "id": 1519,
        "statement": "is(X, nice) :- is(X, kind), is(X, red).",
        "description": "All kind, red things are nice."
    },
    {
        "id": 1520,
        "statement": "is(dave, big) :- is(dave, nice).",
        "description": "If Dave is nice then Dave is big."
    },
    {
        "id": 1521,
        "statement": "is(X, quiet) :- is(X, rough).",
        "description": "All rough things are quiet."
    },
    {
        "id": 1522,
        "statement": "is(X, quiet) :- is(X, red).",
        "description": "All red things are quiet."
    },
    {
        "id": 1523,
        "statement": "is(X, kind) :- is(X, quiet).",
        "description": "Quiet things are kind."
    },
    {
        "id": 1524,
        "statement": "is(X, red) :- is(X, young), is(X, quiet).",
        "description": "Young, quiet things are red."
    },
    {
        "id": 1525,
        "statement": "is(X, red) :- is(X, big).",
        "description": "If something is big then it is red."
    },
    {
        "id": 1526,
        "statement": "is(X, young) :- is(X, nice), is(X, big).",
        "description": "If something is nice and big then it is young."
    },
    {
        "id": 1527,
        "statement": "likes(bear, squirrel).",
        "description": "The bear likes the squirrel."
    },
    {
        "id": 1528,
        "statement": "visits(bear, mouse).",
        "description": "The bear visits the mouse."
    },
    {
        "id": 1529,
        "statement": "is(mouse, blue).",
        "description": "The mouse is blue."
    },
    {
        "id": 1530,
        "statement": "visits(mouse, bear).",
        "description": "The mouse visits the bear."
    },
    {
        "id": 1531,
        "statement": "eats(rabbit, mouse).",
        "description": "The rabbit eats the mouse."
    },
    {
        "id": 1532,
        "statement": "is(rabbit, red).",
        "description": "The rabbit is red."
    },
    {
        "id": 1533,
        "statement": "visits(rabbit, bear).",
        "description": "The rabbit visits the bear."
    },
    {
        "id": 1534,
        "statement": "likes(squirrel, bear).",
        "description": "The squirrel likes the bear."
    },
    {
        "id": 1535,
        "statement": "is(squirrel, blue) :- visits(X, squirrel).",
        "description": "If something visits the squirrel then the squirrel is blue."
    },
    {
        "id": 1536,
        "statement": "eats(bear, rabbit) :- is(X, blue), likes(X, bear).",
        "description": "If something is blue and it likes the bear then the bear eats the rabbit."
    },
    {
        "id": 1537,
        "statement": "likes(bear, rabbit) :- likes(X, bear), is(bear, red).",
        "description": "If something likes the bear and the bear is red then the bear likes the rabbit."
    },
    {
        "id": 1538,
        "statement": "is(squirrel, blue) :- visits(X, squirrel), eats(X, bear).",
        "description": "If something visits the squirrel and it eats the bear then the squirrel is blue."
    },
    {
        "id": 1539,
        "statement": "is(squirrel, red) :- likes(X, squirrel).",
        "description": "If something likes the squirrel then the squirrel is red."
    },
    {
        "id": 1540,
        "statement": "likes(squirrel, bear) :- visits(X, mouse), visits(X, squirrel).",
        "description": "If something visits the mouse and it visits the squirrel then the squirrel likes the bear."
    },
    {
        "id": 1541,
        "statement": "is(X, blue) :- likes(X, mouse).",
        "description": "If something likes the mouse then it is blue."
    },
    {
        "id": 1542,
        "statement": "visits(X, squirrel) :- visits(X, mouse).",
        "description": "If something visits the mouse then it visits the squirrel."
    },
    {
        "id": 1543,
        "statement": "visits(cow, bear).",
        "description": "The cow visits the bear."
    },
    {
        "id": 1544,
        "statement": "chases(lion, rabbit).",
        "description": "The lion chases the rabbit."
    },
    {
        "id": 1545,
        "statement": "chases(rabbit, cow).",
        "description": "The rabbit chases the cow."
    },
    {
        "id": 1546,
        "statement": "needs(X, bear) :- visits(X, cow).",
        "description": "If someone visits the cow then they need the bear."
    },
    {
        "id": 1547,
        "statement": "visits(bear, cow) :- is(bear, red).",
        "description": "If the bear is red then the bear visits the cow."
    },
    {
        "id": 1548,
        "statement": "is(cow, rough) :- visits(bear, cow), not visits(lion, bear).",
        "description": "If the bear visits the cow and the lion does not visit the bear then the cow is rough."
    },
    {
        "id": 1549,
        "statement": "is(X, big) :- is(X, rough).",
        "description": "All rough people are big."
    },
    {
        "id": 1550,
        "statement": "is(X, rough) :- is(X, cold), needs(X, bear).",
        "description": "If someone is cold and they need the bear then they are rough."
    },
    {
        "id": 1551,
        "statement": "is(X, red) :- is(X, big).",
        "description": "All big people are red."
    },
    {
        "id": 1552,
        "statement": "likes(bald_eagle, cat).",
        "description": "The bald eagle likes the cat."
    },
    {
        "id": 1553,
        "statement": "needs(bald_eagle, cat).",
        "description": "The bald eagle needs the cat."
    },
    {
        "id": 1554,
        "statement": "likes(cat, squirrel).",
        "description": "The cat likes the squirrel."
    },
    {
        "id": 1555,
        "statement": "needs(lion, cat).",
        "description": "The lion needs the cat."
    },
    {
        "id": 1556,
        "statement": "likes(squirrel, bald_eagle).",
        "description": "The squirrel likes the bald eagle."
    },
    {
        "id": 1557,
        "statement": "visits(squirrel, cat).",
        "description": "The squirrel visits the cat."
    },
    {
        "id": 1558,
        "statement": "is(X, cold) :- is(X, nice).",
        "description": "If someone is nice then they are cold."
    },
    {
        "id": 1559,
        "statement": "likes(lion, cat) :- needs(X, lion), visits(lion, cat).",
        "description": "If someone needs the lion and the lion visits the cat then the lion likes the cat."
    },
    {
        "id": 1560,
        "statement": "likes(lion, squirrel) :- visits(X, squirrel), needs(squirrel, lion).",
        "description": "If someone visits the squirrel and the squirrel needs the lion then the lion likes the squirrel."
    },
    {
        "id": 1561,
        "statement": "is(X, nice) :- visits(X, cat).",
        "description": "If someone visits the cat then they are nice."
    },
    {
        "id": 1562,
        "statement": "visits(bald_eagle, cat) :- is(X, cold), likes(X, bald_eagle).",
        "description": "If someone is cold and they like the bald eagle then the bald eagle visits the cat."
    },
    {
        "id": 1563,
        "statement": "likes(bald_eagle, cat) :- likes(lion, bald_eagle).",
        "description": "If the lion likes the bald eagle then the bald eagle likes the cat."
    },
    {
        "id": 1564,
        "statement": "is(X, quiet) :- is(X, green).",
        "description": "All green things are quiet."
    },
    {
        "id": 1565,
        "statement": "is(X, nice) :- is(X, kind), is(X, young).",
        "description": "Kind, young things are nice."
    },
    {
        "id": 1566,
        "statement": "is(X, kind) :- is(X, young).",
        "description": "All young things are kind."
    },
    {
        "id": 1567,
        "statement": "is(X, kind) :- is(X, big).",
        "description": "Big things are kind."
    },
    {
        "id": 1568,
        "statement": "is(X, young) :- is(X, green).",
        "description": "Green things are young."
    },
    {
        "id": 1569,
        "statement": "is(X, big) :- is(X, quiet), is(X, nice).",
        "description": "If something is quiet and nice then it is big."
    },
    {
        "id": 1570,
        "statement": "is(X, green) :- is(X, quiet).",
        "description": "If something is quiet then it is green."
    },
    {
        "id": 1571,
        "statement": "chases(bald_eagle, lion).",
        "description": "The bald eagle chases the lion."
    },
    {
        "id": 1572,
        "statement": "needs(bald_eagle, lion).",
        "description": "The bald eagle needs the lion."
    },
    {
        "id": 1573,
        "statement": "chases(cow, squirrel).",
        "description": "The cow chases the squirrel."
    },
    {
        "id": 1574,
        "statement": "needs(lion, cow).",
        "description": "The lion needs the cow."
    },
    {
        "id": 1575,
        "statement": "is(X, kind) :- sees(X, bald_eagle), needs(X, squirrel).",
        "description": "If something sees the bald eagle and it needs the squirrel then it is kind."
    },
    {
        "id": 1576,
        "statement": "sees(squirrel, bald_eagle) :- sees(cow, squirrel), needs(cow, bald_eagle).",
        "description": "If the cow sees the squirrel and the cow needs the bald eagle then the squirrel sees the bald eagle."
    },
    {
        "id": 1577,
        "statement": "needs(cow, lion) :- sees(cow, bald_eagle), is(bald_eagle, nice).",
        "description": "If the cow sees the bald eagle and the bald eagle is nice then the cow needs the lion."
    },
    {
        "id": 1578,
        "statement": "is(bald_eagle, nice) :- sees(X, bald_eagle).",
        "description": "If something sees the bald eagle then the bald eagle is nice."
    },
    {
        "id": 1579,
        "statement": "sees(bald_eagle, cow) :- needs(X, bald_eagle).",
        "description": "If something needs the bald eagle then the bald eagle sees the cow."
    },
    {
        "id": 1580,
        "statement": "sees(X, squirrel) :- chases(X, cow), needs(X, cow).",
        "description": "If something chases the cow and it needs the cow then it sees the squirrel."
    },
    {
        "id": 1581,
        "statement": "sees(X, lion) :- needs(X, cow), is(X, rough).",
        "description": "If something needs the cow and it is rough then it sees the lion."
    },
    {
        "id": 1582,
        "statement": "sees(cow, squirrel) :- sees(X, cow).",
        "description": "If something sees the cow then the cow sees the squirrel."
    },
    {
        "id": 1583,
        "statement": "needs(X, bald_eagle) :- is(X, blue).",
        "description": "If something is blue then it needs the bald eagle."
    },
    {
        "id": 1584,
        "statement": "visits(bald_eagle, dog).",
        "description": "The bald eagle visits the dog."
    },
    {
        "id": 1585,
        "statement": "visits(dog, rabbit).",
        "description": "The dog visits the rabbit."
    },
    {
        "id": 1586,
        "statement": "is(mouse, kind).",
        "description": "The mouse is kind."
    },
    {
        "id": 1587,
        "statement": "chases(rabbit, dog).",
        "description": "The rabbit chases the dog."
    },
    {
        "id": 1588,
        "statement": "chases(X, bald_eagle) :- is(X, green).",
        "description": "If someone is green then they chase the bald eagle."
    },
    {
        "id": 1589,
        "statement": "visits(rabbit, mouse) :- is(X, kind), visits(X, rabbit).",
        "description": "If someone is kind and they visit the rabbit then the rabbit visits the mouse."
    },
    {
        "id": 1590,
        "statement": "is(X, green) :- is(X, blue).",
        "description": "All blue people are green."
    },
    {
        "id": 1591,
        "statement": "chases(mouse, rabbit) :- is(dog, green), chases(dog, mouse).",
        "description": "If the dog is green and the dog chases the mouse then the mouse chases the rabbit."
    },
    {
        "id": 1592,
        "statement": "visits(rabbit, bald_eagle) :- is(X, kind), chases(X, rabbit).",
        "description": "If someone is kind and they chase the rabbit then the rabbit visits the bald eagle."
    },
    {
        "id": 1593,
        "statement": "chases(rabbit, mouse) :- eats(X, rabbit).",
        "description": "If someone eats the rabbit then the rabbit chases the mouse."
    },
    {
        "id": 1594,
        "statement": "chases(X, dog) :- is(X, kind).",
        "description": "If someone is kind then they chase the dog."
    },
    {
        "id": 1595,
        "statement": "eats(X, mouse) :- is(X, blue), chases(X, bald_eagle).",
        "description": "If someone is blue and they chase the bald eagle then they eat the mouse."
    },
    {
        "id": 1596,
        "statement": "chases(X, mouse) :- is(X, kind), chases(X, bald_eagle).",
        "description": "If someone is kind and they chase the bald eagle then they chase the mouse."
    },
    {
        "id": 1597,
        "statement": "chases(dog, lion).",
        "description": "The dog chases the lion."
    },
    {
        "id": 1598,
        "statement": "is(dog, big).",
        "description": "The dog is big."
    },
    {
        "id": 1599,
        "statement": "is(lion, cold).",
        "description": "The lion is cold."
    },
    {
        "id": 1600,
        "statement": "eats(X, lion) :- is(X, young).",
        "description": "If something is young then it eats the lion."
    },
    {
        "id": 1601,
        "statement": "chases(bald_eagle, lion) :- eats(X, bald_eagle).",
        "description": "If something eats the bald eagle then the bald eagle chases the lion."
    },
    {
        "id": 1602,
        "statement": "is(mouse, big) :- eats(X, mouse).",
        "description": "If something eats the mouse then the mouse is big."
    },
    {
        "id": 1603,
        "statement": "is(bald_eagle, cold) :- eats(X, bald_eagle), eats(X, dog).",
        "description": "If something eats the bald eagle and it eats the dog then the bald eagle is cold."
    },
    {
        "id": 1604,
        "statement": "is(X, young) :- chases(X, dog).",
        "description": "If something chases the dog then it is young."
    },
    {
        "id": 1605,
        "statement": "eats(X, mouse) :- eats(X, lion).",
        "description": "If something eats the lion then it eats the mouse."
    },
    {
        "id": 1606,
        "statement": "chases(lion, dog) :- is(X, cold), eats(X, lion).",
        "description": "If something is cold and it eats the lion then the lion chases the dog."
    },
    {
        "id": 1607,
        "statement": "is(X, round) :- is(X, blue), is(X, smart).",
        "description": "All blue, smart people are round."
    },
    {
        "id": 1608,
        "statement": "is(bob, rough) :- is(bob, blue).",
        "description": "If Bob is blue then Bob is rough."
    },
    {
        "id": 1609,
        "statement": "is(X, furry) :- is(X, round).",
        "description": "If someone is round then they are furry."
    },
    {
        "id": 1610,
        "statement": "is(X, blue) :- is(X, young), is(X, round).",
        "description": "Young, round people are blue."
    },
    {
        "id": 1611,
        "statement": "is(X, smart) :- is(X, blue), is(X, white).",
        "description": "Blue, white people are smart."
    },
    {
        "id": 1612,
        "statement": "is(X, white) :- is(X, blue).",
        "description": "If someone is blue then they are white."
    },
    {
        "id": 1613,
        "statement": "is(X, rough) :- is(X, furry).",
        "description": "Furry people are rough."
    },
    {
        "id": 1614,
        "statement": "is(X, blue) :- is(X, young).",
        "description": "Young people are blue."
    },
    {
        "id": 1615,
        "statement": "is(X, round) :- is(X, rough), is(X, young).",
        "description": "Rough, young people are round."
    },
    {
        "id": 1616,
        "statement": "is(X, round) :- is(X, quiet).",
        "description": "If someone is quiet then they are round."
    },
    {
        "id": 1617,
        "statement": "is(X, blue) :- is(X, young).",
        "description": "All young people are blue."
    },
    {
        "id": 1618,
        "statement": "is(X, rough) :- is(X, round), is(X, kind).",
        "description": "Round, kind people are rough."
    },
    {
        "id": 1619,
        "statement": "is(X, kind) :- is(X, blue).",
        "description": "All blue people are kind."
    },
    {
        "id": 1620,
        "statement": "is(X, kind) :- is(X, rough).",
        "description": "If someone is rough then they are kind."
    },
    {
        "id": 1621,
        "statement": "is(erin, red) :- is(erin, young).",
        "description": "If Erin is young then Erin is red."
    },
    {
        "id": 1622,
        "statement": "is(X, quiet) :- is(X, big), is(X, cold).",
        "description": "Big, cold people are quiet."
    },
    {
        "id": 1623,
        "statement": "is(X, furry) :- is(X, quiet), is(X, smart).",
        "description": "Quiet, smart people are furry."
    },
    {
        "id": 1624,
        "statement": "is(X, big) :- is(X, cold), is(X, red).",
        "description": "All cold, red people are big."
    },
    {
        "id": 1625,
        "statement": "is(dave, cold) :- is(dave, smart).",
        "description": "If Dave is smart then Dave is cold."
    },
    {
        "id": 1626,
        "statement": "is(X, furry) :- is(X, smart), is(X, cold).",
        "description": "Smart, cold people are furry."
    },
    {
        "id": 1627,
        "statement": "is(X, smart) :- is(X, young).",
        "description": "Young people are smart."
    },
    {
        "id": 1628,
        "statement": "is(X, young) :- is(X, quiet).",
        "description": "All quiet things are young."
    },
    {
        "id": 1629,
        "statement": "is(X, quiet) :- is(X, big).",
        "description": "All big things are quiet."
    },
    {
        "id": 1630,
        "statement": "is(X, kind) :- is(X, young), is(X, green).",
        "description": "All young, green things are kind."
    },
    {
        "id": 1631,
        "statement": "is(X, big) :- is(X, green).",
        "description": "If something is green then it is big."
    },
    {
        "id": 1632,
        "statement": "is(X, red) :- is(X, kind).",
        "description": "All kind things are red."
    },
    {
        "id": 1633,
        "statement": "is(harry, kind) :- is(harry, young).",
        "description": "If Harry is young then Harry is kind."
    },
    {
        "id": 1634,
        "statement": "is(X, blue) :- is(X, green), not is(X, quiet).",
        "description": "If something is green and not quiet then it is blue."
    },
    {
        "id": 1635,
        "statement": "likes(bear, dog).",
        "description": "The bear likes the dog."
    },
    {
        "id": 1636,
        "statement": "likes(cat, dog).",
        "description": "The cat likes the dog."
    },
    {
        "id": 1637,
        "statement": "likes(cat, tiger).",
        "description": "The cat likes the tiger."
    },
    {
        "id": 1638,
        "statement": "is(X, blue) :- needs(X, bear).",
        "description": "If someone needs the bear then they are blue."
    },
    {
        "id": 1639,
        "statement": "needs(X, bear) :- visits(X, tiger).",
        "description": "If someone visits the tiger then they need the bear."
    },
    {
        "id": 1640,
        "statement": "is(X, nice) :- visits(X, tiger), is(tiger, nice).",
        "description": "If someone visits the tiger and the tiger is nice then they are nice."
    },
    {
        "id": 1641,
        "statement": "is(X, nice) :- likes(X, tiger).",
        "description": "If someone likes the tiger then they are nice."
    },
    {
        "id": 1642,
        "statement": "needs(dog, bear) :- visits(X, dog).",
        "description": "If someone visits the dog then the dog needs the bear."
    },
    {
        "id": 1643,
        "statement": "needs(cat, bear) :- visits(cat, bear), likes(bear, tiger).",
        "description": "If the cat visits the bear and the bear likes the tiger then the cat needs the bear."
    },
    {
        "id": 1644,
        "statement": "visits(cat, tiger) :- is(X, blue), not needs(X, cat).",
        "description": "If someone is blue and they do not need the cat then the cat visits the tiger."
    },
    {
        "id": 1645,
        "statement": "is(X, rough) :- is(X, green).",
        "description": "Green people are rough."
    },
    {
        "id": 1646,
        "statement": "is(fiona, green) :- is(fiona, rough), is(fiona, kind).",
        "description": "If Fiona is rough and Fiona is kind then Fiona is green."
    },
    {
        "id": 1647,
        "statement": "is(X, green) :- is(X, furry), not is(X, quiet).",
        "description": "If someone is furry and not quiet then they are green."
    },
    {
        "id": 1648,
        "statement": "is(X, nice) :- is(X, kind), is(X, rough).",
        "description": "All kind, rough people are nice."
    },
    {
        "id": 1649,
        "statement": "is(X, furry) :- is(X, blue).",
        "description": "Blue people are furry."
    },
    {
        "id": 1650,
        "statement": "is(erin, kind) :- is(erin, nice).",
        "description": "If Erin is nice then Erin is kind."
    },
    {
        "id": 1651,
        "statement": "is(X, kind) :- is(X, blue), is(X, green).",
        "description": "All blue, green people are kind."
    },
    {
        "id": 1652,
        "statement": "is(X, blue) :- is(X, rough), not is(X, quiet).",
        "description": "If someone is rough and not quiet then they are blue."
    },
    {
        "id": 1653,
        "statement": "is(X, kind) :- is(X, green).",
        "description": "All green people are kind."
    },
    {
        "id": 1654,
        "statement": "is(X, smart) :- is(X, big).",
        "description": "Big people are smart."
    },
    {
        "id": 1655,
        "statement": "is(fiona, red) :- is(fiona, kind).",
        "description": "If Fiona is kind then Fiona is red."
    },
    {
        "id": 1656,
        "statement": "is(X, green) :- is(X, big), is(X, smart).",
        "description": "All big, smart people are green."
    },
    {
        "id": 1657,
        "statement": "is(X, smart) :- is(X, blue).",
        "description": "All blue people are smart."
    },
    {
        "id": 1658,
        "statement": "is(X, blue) :- is(X, kind), is(X, red).",
        "description": "If someone is kind and red then they are blue."
    },
    {
        "id": 1659,
        "statement": "visits(bear, lion).",
        "description": "The bear visits the lion."
    },
    {
        "id": 1660,
        "statement": "visits(bear, squirrel).",
        "description": "The bear visits the squirrel."
    },
    {
        "id": 1661,
        "statement": "likes(lion, rabbit).",
        "description": "The lion likes the rabbit."
    },
    {
        "id": 1662,
        "statement": "visits(rabbit, squirrel).",
        "description": "The rabbit visits the squirrel."
    },
    {
        "id": 1663,
        "statement": "visits(squirrel, lion).",
        "description": "The squirrel visits the lion."
    },
    {
        "id": 1664,
        "statement": "likes(X, squirrel) :- likes(X, lion).",
        "description": "If someone likes the lion then they like the squirrel."
    },
    {
        "id": 1665,
        "statement": "is(X, blue) :- likes(X, rabbit).",
        "description": "If someone likes the rabbit then they are blue."
    },
    {
        "id": 1666,
        "statement": "is(X, blue) :- likes(X, bear), not needs(bear, rabbit).",
        "description": "If someone likes the bear and the bear does not need the rabbit then they are blue."
    },
    {
        "id": 1667,
        "statement": "likes(X, bear) :- needs(X, squirrel).",
        "description": "If someone needs the squirrel then they like the bear."
    },
    {
        "id": 1668,
        "statement": "likes(X, bear) :- is(X, cold).",
        "description": "If someone is cold then they like the bear."
    },
    {
        "id": 1669,
        "statement": "likes(X, bear) :- is(X, round), needs(X, rabbit).",
        "description": "If someone is round and they need the rabbit then they like the bear."
    },
    {
        "id": 1670,
        "statement": "needs(X, squirrel) :- likes(X, squirrel).",
        "description": "If someone likes the squirrel then they need the squirrel."
    },
    {
        "id": 1671,
        "statement": "likes(X, rabbit) :- is(X, blue).",
        "description": "If someone is blue then they like the rabbit."
    },
    {
        "id": 1672,
        "statement": "visits(bear, lion) :- not likes(bear, squirrel).",
        "description": "If the bear does not like the squirrel then the bear visits the lion."
    },
    {
        "id": 1673,
        "statement": "is(X, young) :- is(X, green), is(X, red).",
        "description": "All green, red people are young."
    },
    {
        "id": 1674,
        "statement": "is(X, furry) :- is(X, smart), is(X, big).",
        "description": "All smart, big people are furry."
    },
    {
        "id": 1675,
        "statement": "is(dave, furry) :- is(dave, white).",
        "description": "If Dave is white then Dave is furry."
    },
    {
        "id": 1676,
        "statement": "is(X, green) :- is(X, white), is(X, red).",
        "description": "White, red people are green."
    },
    {
        "id": 1677,
        "statement": "is(X, red) :- is(X, green), is(X, smart).",
        "description": "If someone is green and smart then they are red."
    },
    {
        "id": 1678,
        "statement": "is(X, smart) :- is(X, white).",
        "description": "White people are smart."
    },
    {
        "id": 1679,
        "statement": "is(dave, white) :- is(dave, green), is(dave, kind).",
        "description": "If Dave is green and Dave is kind then Dave is white."
    },
    {
        "id": 1680,
        "statement": "is(X, kind) :- is(X, nice).",
        "description": "Nice things are kind."
    },
    {
        "id": 1681,
        "statement": "is(X, round) :- is(X, kind), is(X, cold).",
        "description": "Kind, cold things are round."
    },
    {
        "id": 1682,
        "statement": "is(X, nice) :- is(X, quiet).",
        "description": "All quiet things are nice."
    },
    {
        "id": 1683,
        "statement": "is(dave, smart) :- is(dave, big).",
        "description": "If Dave is big then Dave is smart."
    },
    {
        "id": 1684,
        "statement": "is(X, white) :- is(X, big), is(X, rough).",
        "description": "Big, rough people are white."
    },
    {
        "id": 1685,
        "statement": "is(fiona, rough) :- is(fiona, big), is(fiona, furry).",
        "description": "If Fiona is big and Fiona is furry then Fiona is rough."
    },
    {
        "id": 1686,
        "statement": "is(X, furry) :- is(X, rough), is(X, smart).",
        "description": "All rough, smart people are furry."
    },
    {
        "id": 1687,
        "statement": "is(X, red) :- is(X, white).",
        "description": "All white people are red."
    },
    {
        "id": 1688,
        "statement": "is(X, furry) :- is(X, smart).",
        "description": "If someone is smart then they are furry."
    },
    {
        "id": 1689,
        "statement": "is(X, smart) :- is(X, red), is(X, kind).",
        "description": "Red, kind people are smart."
    },
    {
        "id": 1690,
        "statement": "is(X, kind) :- is(X, red).",
        "description": "All red people are kind."
    },
    {
        "id": 1691,
        "statement": "is(fiona, big) :- is(fiona, white).",
        "description": "If Fiona is white then Fiona is big."
    },
    {
        "id": 1692,
        "statement": "eats(bald_eagle, mouse).",
        "description": "The bald eagle eats the mouse."
    },
    {
        "id": 1693,
        "statement": "eats(rabbit, bald_eagle).",
        "description": "The rabbit eats the bald eagle."
    },
    {
        "id": 1694,
        "statement": "is(X, green) :- is(X, round).",
        "description": "If something is round then it is green."
    },
    {
        "id": 1695,
        "statement": "likes(X, rabbit) :- eats(X, mouse).",
        "description": "If something eats the mouse then it likes the rabbit."
    },
    {
        "id": 1696,
        "statement": "needs(X, bear) :- needs(X, rabbit).",
        "description": "If something needs the rabbit then it needs the bear."
    },
    {
        "id": 1697,
        "statement": "likes(X, bald_eagle) :- is(X, green), likes(X, rabbit).",
        "description": "If something is green and it likes the rabbit then it likes the bald eagle."
    },
    {
        "id": 1698,
        "statement": "needs(X, rabbit) :- eats(X, bear).",
        "description": "If something eats the bear then it needs the rabbit."
    },
    {
        "id": 1699,
        "statement": "likes(X, bald_eagle) :- eats(X, bald_eagle), needs(bald_eagle, bear).",
        "description": "If something eats the bald eagle and the bald eagle needs the bear then it likes the bald eagle."
    },
    {
        "id": 1700,
        "statement": "eats(X, bear) :- likes(X, rabbit).",
        "description": "If something likes the rabbit then it eats the bear."
    },
    {
        "id": 1701,
        "statement": "is(X, white) :- is(X, young).",
        "description": "All young things are white."
    },
    {
        "id": 1702,
        "statement": "is(X, rough) :- is(X, round), is(X, blue).",
        "description": "Round, blue things are rough."
    },
    {
        "id": 1703,
        "statement": "is(X, red) :- is(X, rough).",
        "description": "All rough things are red."
    },
    {
        "id": 1704,
        "statement": "is(X, white) :- is(X, young).",
        "description": "If something is young then it is white."
    },
    {
        "id": 1705,
        "statement": "is(gary, red) :- is(gary, round), is(gary, young).",
        "description": "If Gary is round and Gary is young then Gary is red."
    },
    {
        "id": 1706,
        "statement": "is(X, cold) :- is(X, round), is(X, rough).",
        "description": "Round, rough things are cold."
    },
    {
        "id": 1707,
        "statement": "is(X, red) :- is(X, blue), is(X, white).",
        "description": "Blue, white things are red."
    },
    {
        "id": 1708,
        "statement": "is(X, round) :- is(X, red).",
        "description": "If something is red then it is round."
    },
    {
        "id": 1709,
        "statement": "is(X, red) :- is(X, white), is(X, young).",
        "description": "White, young things are red."
    },
    {
        "id": 1710,
        "statement": "likes(bald_eagle, tiger).",
        "description": "The bald eagle likes the tiger."
    },
    {
        "id": 1711,
        "statement": "sees(bald_eagle, tiger).",
        "description": "The bald eagle sees the tiger."
    },
    {
        "id": 1712,
        "statement": "sees(tiger, bear).",
        "description": "The tiger sees the bear."
    },
    {
        "id": 1713,
        "statement": "is(bear, blue) :- sees(X, bear), not likes(X, tiger).",
        "description": "If someone sees the bear and they do not like the tiger then the bear is blue."
    },
    {
        "id": 1714,
        "statement": "chases(cow, tiger) :- sees(X, cow).",
        "description": "If someone sees the cow then the cow chases the tiger."
    },
    {
        "id": 1715,
        "statement": "chases(X, tiger) :- is(X, young), sees(X, cow).",
        "description": "If someone is young and they see the cow then they chase the tiger."
    },
    {
        "id": 1716,
        "statement": "is(X, young) :- is(X, cold), chases(X, bald_eagle).",
        "description": "If someone is cold and they chase the bald eagle then they are young."
    },
    {
        "id": 1717,
        "statement": "is(X, cold) :- is(X, rough).",
        "description": "Rough people are cold."
    },
    {
        "id": 1718,
        "statement": "is(bald_eagle, rough) :- sees(X, bald_eagle), is(X, blue).",
        "description": "If someone sees the bald eagle and they are blue then the bald eagle is rough."
    },
    {
        "id": 1719,
        "statement": "is(bear, rough) :- chases(X, bear).",
        "description": "If someone chases the bear then the bear is rough."
    },
    {
        "id": 1720,
        "statement": "is(X, rough) :- chases(X, tiger).",
        "description": "If someone chases the tiger then they are rough."
    },
    {
        "id": 1721,
        "statement": "is(charlie, nice) :- is(charlie, kind), is(charlie, smart).",
        "description": "If Charlie is kind and Charlie is smart then Charlie is nice."
    },
    {
        "id": 1722,
        "statement": "is(X, nice) :- is(X, big), is(X, quiet).",
        "description": "If something is big and quiet then it is nice."
    },
    {
        "id": 1723,
        "statement": "is(X, cold) :- is(X, kind), is(X, quiet).",
        "description": "If something is kind and quiet then it is cold."
    },
    {
        "id": 1724,
        "statement": "is(X, furry) :- is(X, smart).",
        "description": "If something is smart then it is furry."
    },
    {
        "id": 1725,
        "statement": "is(X, big) :- is(X, furry).",
        "description": "If something is furry then it is big."
    },
    {
        "id": 1726,
        "statement": "is(X, kind) :- is(X, nice).",
        "description": "All nice things are kind."
    },
    {
        "id": 1727,
        "statement": "is(X, cold) :- is(X, kind).",
        "description": "Kind things are cold."
    },
    {
        "id": 1728,
        "statement": "is(X, big) :- is(X, kind), is(X, young).",
        "description": "If something is kind and young then it is big."
    },
    {
        "id": 1729,
        "statement": "is(X, furry) :- is(X, kind), is(X, cold).",
        "description": "All kind, cold things are furry."
    },
    {
        "id": 1730,
        "statement": "is(gary, young) :- is(gary, furry), is(gary, green).",
        "description": "If Gary is furry and Gary is green then Gary is young."
    },
    {
        "id": 1731,
        "statement": "is(X, green) :- is(X, young).",
        "description": "Young things are green."
    },
    {
        "id": 1732,
        "statement": "is(X, smart) :- is(X, furry), is(X, cold).",
        "description": "If something is furry and cold then it is smart."
    },
    {
        "id": 1733,
        "statement": "is(X, furry) :- is(X, green), is(X, cold).",
        "description": "If something is green and cold then it is furry."
    },
    {
        "id": 1734,
        "statement": "is(X, smart) :- is(X, kind), is(X, young).",
        "description": "Kind, young things are smart."
    },
    {
        "id": 1735,
        "statement": "is(X, young) :- is(X, smart), is(X, big).",
        "description": "If something is smart and big then it is young."
    },
    {
        "id": 1736,
        "statement": "is(X, young) :- is(X, nice), is(X, white).",
        "description": "All nice, white things are young."
    },
    {
        "id": 1737,
        "statement": "is(X, young) :- is(X, white), is(X, kind).",
        "description": "If something is white and kind then it is young."
    },
    {
        "id": 1738,
        "statement": "is(X, round) :- is(X, kind), is(X, young).",
        "description": "All kind, young things are round."
    },
    {
        "id": 1739,
        "statement": "is(X, round) :- is(X, kind), is(X, nice).",
        "description": "All kind, nice things are round."
    },
    {
        "id": 1740,
        "statement": "is(erin, young) :- is(erin, green), is(erin, white).",
        "description": "If Erin is green and Erin is white then Erin is young."
    },
    {
        "id": 1741,
        "statement": "is(X, white) :- is(X, kind).",
        "description": "If something is kind then it is white."
    },
    {
        "id": 1742,
        "statement": "is(X, green) :- is(X, smart).",
        "description": "Smart things are green."
    },
    {
        "id": 1743,
        "statement": "sees(bear, cow).",
        "description": "The bear sees the cow."
    },
    {
        "id": 1744,
        "statement": "sees(rabbit, cow).",
        "description": "The rabbit sees the cow."
    },
    {
        "id": 1745,
        "statement": "needs(X, bear) :- sees(X, cow), is(cow, nice).",
        "description": "If someone sees the cow and the cow is nice then they need the bear."
    },
    {
        "id": 1746,
        "statement": "visits(X, cow) :- is(X, blue).",
        "description": "If someone is blue then they visit the cow."
    },
    {
        "id": 1747,
        "statement": "visits(X, cow) :- needs(X, rabbit).",
        "description": "If someone needs the rabbit then they visit the cow."
    },
    {
        "id": 1748,
        "statement": "is(cow, nice) :- visits(X, bear), visits(X, cow).",
        "description": "If someone visits the bear and they visit the cow then the cow is nice."
    },
    {
        "id": 1749,
        "statement": "is(cow, blue) :- needs(X, cow).",
        "description": "If someone needs the cow then the cow is blue."
    },
    {
        "id": 1750,
        "statement": "visits(cow, dog) :- sees(X, cow).",
        "description": "If someone sees the cow then the cow visits the dog."
    },
    {
        "id": 1751,
        "statement": "visits(bear, dog) :- is(bear, cold).",
        "description": "If the bear is cold then the bear visits the dog."
    },
    {
        "id": 1752,
        "statement": "is(X, big) :- is(X, nice), is(X, round).",
        "description": "If someone is nice and round then they are big."
    },
    {
        "id": 1753,
        "statement": "is(X, smart) :- is(X, kind), is(X, round).",
        "description": "All kind, round people are smart."
    },
    {
        "id": 1754,
        "statement": "is(X, round) :- is(X, nice), is(X, white).",
        "description": "Nice, white people are round."
    },
    {
        "id": 1755,
        "statement": "is(charlie, big) :- is(charlie, nice), is(charlie, white).",
        "description": "If Charlie is nice and Charlie is white then Charlie is big."
    },
    {
        "id": 1756,
        "statement": "is(X, nice) :- is(X, white), is(X, kind).",
        "description": "White, kind people are nice."
    },
    {
        "id": 1757,
        "statement": "is(X, white) :- is(X, smart), is(X, round).",
        "description": "If someone is smart and round then they are white."
    },
    {
        "id": 1758,
        "statement": "is(X, kind) :- is(X, cold), is(X, big).",
        "description": "Cold, big people are kind."
    },
    {
        "id": 1759,
        "statement": "likes(squirrel, rabbit).",
        "description": "The squirrel likes the rabbit."
    },
    {
        "id": 1760,
        "statement": "is(X, rough) :- visits(X, mouse).",
        "description": "If something visits the mouse then it is rough."
    },
    {
        "id": 1761,
        "statement": "likes(X, lion) :- likes(X, rabbit).",
        "description": "If something likes the rabbit then it likes the lion."
    },
    {
        "id": 1762,
        "statement": "visits(squirrel, mouse) :- likes(rabbit, squirrel).",
        "description": "If the rabbit likes the squirrel then the squirrel visits the mouse."
    },
    {
        "id": 1763,
        "statement": "visits(X, mouse) :- is(X, big).",
        "description": "If something is big then it visits the mouse."
    },
    {
        "id": 1764,
        "statement": "eats(rabbit, lion) :- is(rabbit, big), likes(rabbit, lion).",
        "description": "If the rabbit is big and the rabbit likes the lion then the rabbit eats the lion."
    },
    {
        "id": 1765,
        "statement": "eats(lion, squirrel) :- eats(mouse, lion).",
        "description": "If the mouse eats the lion then the lion eats the squirrel."
    },
    {
        "id": 1766,
        "statement": "is(rabbit, big) :- visits(X, rabbit).",
        "description": "If something visits the rabbit then the rabbit is big."
    },
    {
        "id": 1767,
        "statement": "visits(X, rabbit) :- likes(X, lion).",
        "description": "If something likes the lion then it visits the rabbit."
    },
    {
        "id": 1768,
        "statement": "eats(X, rabbit) :- is(X, rough), not eats(X, squirrel).",
        "description": "If something is rough and it does not eat the squirrel then it eats the rabbit."
    },
    {
        "id": 1769,
        "statement": "eats(cat, cow).",
        "description": "The cat eats the cow."
    },
    {
        "id": 1770,
        "statement": "sees(cat, mouse).",
        "description": "The cat sees the mouse."
    },
    {
        "id": 1771,
        "statement": "sees(cow, cat).",
        "description": "The cow sees the cat."
    },
    {
        "id": 1772,
        "statement": "eats(dog, cow) :- chases(X, dog), is(dog, young).",
        "description": "If something chases the dog and the dog is young then the dog eats the cow."
    },
    {
        "id": 1773,
        "statement": "is(X, young) :- is(X, big).",
        "description": "All big things are young."
    },
    {
        "id": 1774,
        "statement": "sees(cow, mouse) :- chases(X, cow).",
        "description": "If something chases the cow then the cow sees the mouse."
    },
    {
        "id": 1775,
        "statement": "sees(X, mouse) :- eats(X, dog), is(X, kind).",
        "description": "If something eats the dog and it is kind then it sees the mouse."
    },
    {
        "id": 1776,
        "statement": "is(cat, young) :- eats(X, cat).",
        "description": "If something eats the cat then the cat is young."
    },
    {
        "id": 1777,
        "statement": "is(cow, big) :- sees(cat, cow).",
        "description": "If the cat sees the cow then the cow is big."
    },
    {
        "id": 1778,
        "statement": "sees(cat, cow) :- chases(X, cat), chases(cat, dog).",
        "description": "If something chases the cat and the cat chases the dog then the cat sees the cow."
    },
    {
        "id": 1779,
        "statement": "is(X, young) :- chases(X, cow), chases(X, cat).",
        "description": "If something chases the cow and it chases the cat then it is young."
    },
    {
        "id": 1780,
        "statement": "needs(bald_eagle, cow).",
        "description": "The bald eagle needs the cow."
    },
    {
        "id": 1781,
        "statement": "chases(squirrel, bald_eagle).",
        "description": "The squirrel chases the bald eagle."
    },
    {
        "id": 1782,
        "statement": "chases(squirrel, cat).",
        "description": "The squirrel chases the cat."
    },
    {
        "id": 1783,
        "statement": "needs(squirrel, bald_eagle).",
        "description": "The squirrel needs the bald eagle."
    },
    {
        "id": 1784,
        "statement": "is(X, rough) :- chases(X, bald_eagle).",
        "description": "If someone chases the bald eagle then they are rough."
    },
    {
        "id": 1785,
        "statement": "sees(bald_eagle, cow) :- sees(bald_eagle, squirrel).",
        "description": "If the bald eagle sees the squirrel then the bald eagle sees the cow."
    },
    {
        "id": 1786,
        "statement": "chases(X, bald_eagle) :- needs(X, bald_eagle).",
        "description": "If someone needs the bald eagle then they chase the bald eagle."
    },
    {
        "id": 1787,
        "statement": "is(X, nice) :- is(X, rough).",
        "description": "If someone is rough then they are nice."
    },
    {
        "id": 1788,
        "statement": "needs(X, bald_eagle) :- is(X, blue).",
        "description": "If someone is blue then they need the bald eagle."
    },
    {
        "id": 1789,
        "statement": "sees(X, bald_eagle) :- chases(X, cow), is(cow, green).",
        "description": "If someone chases the cow and the cow is green then they see the bald eagle."
    },
    {
        "id": 1790,
        "statement": "needs(X, squirrel) :- sees(X, cat).",
        "description": "If someone sees the cat then they need the squirrel."
    },
    {
        "id": 1791,
        "statement": "is(dave, cold) :- is(dave, kind), is(dave, furry).",
        "description": "If Dave is kind and Dave is furry then Dave is cold."
    },
    {
        "id": 1792,
        "statement": "is(bob, kind) :- is(bob, green), is(bob, furry).",
        "description": "If Bob is green and Bob is furry then Bob is kind."
    },
    {
        "id": 1793,
        "statement": "is(X, green) :- is(X, red), is(X, nice).",
        "description": "If someone is red and nice then they are green."
    },
    {
        "id": 1794,
        "statement": "is(X, green) :- is(X, cold), is(X, big).",
        "description": "Cold, big people are green."
    },
    {
        "id": 1795,
        "statement": "is(X, red) :- is(X, furry), is(X, cold).",
        "description": "If someone is furry and cold then they are red."
    },
    {
        "id": 1796,
        "statement": "is(X, red) :- is(X, big), is(X, kind).",
        "description": "If someone is big and kind then they are red."
    },
    {
        "id": 1797,
        "statement": "is(bob, furry) :- is(bob, nice).",
        "description": "If Bob is nice then Bob is furry."
    },
    {
        "id": 1798,
        "statement": "is(X, nice) :- is(X, big), is(X, kind).",
        "description": "All big, kind people are nice."
    },
    {
        "id": 1799,
        "statement": "is(X, big) :- is(X, kind).",
        "description": "Kind people are big."
    },
    {
        "id": 1800,
        "statement": "is(X, nice) :- is(X, cold).",
        "description": "Cold people are nice."
    },
    {
        "id": 1801,
        "statement": "is(X, nice) :- is(X, furry), is(X, quiet).",
        "description": "Furry, quiet people are nice."
    },
    {
        "id": 1802,
        "statement": "is(X, cold) :- is(X, round).",
        "description": "All round people are cold."
    },
    {
        "id": 1803,
        "statement": "is(X, quiet) :- is(X, round), is(X, white).",
        "description": "All round, white people are quiet."
    },
    {
        "id": 1804,
        "statement": "is(X, white) :- is(X, nice).",
        "description": "Nice people are white."
    },
    {
        "id": 1805,
        "statement": "chases(bear, cat).",
        "description": "The bear chases the cat."
    },
    {
        "id": 1806,
        "statement": "sees(cat, squirrel).",
        "description": "The cat sees the squirrel."
    },
    {
        "id": 1807,
        "statement": "visits(cat, bear).",
        "description": "The cat visits the bear."
    },
    {
        "id": 1808,
        "statement": "sees(mouse, squirrel).",
        "description": "The mouse sees the squirrel."
    },
    {
        "id": 1809,
        "statement": "visits(X, cat) :- visits(X, squirrel).",
        "description": "If something visits the squirrel then it visits the cat."
    },
    {
        "id": 1810,
        "statement": "chases(X, mouse) :- chases(X, squirrel).",
        "description": "If something chases the squirrel then it chases the mouse."
    },
    {
        "id": 1811,
        "statement": "chases(X, cat) :- sees(X, mouse).",
        "description": "If something sees the mouse then it chases the cat."
    },
    {
        "id": 1812,
        "statement": "sees(cat, bear) :- not is(cat, cold).",
        "description": "If the cat is not cold then the cat sees the bear."
    },
    {
        "id": 1813,
        "statement": "sees(X, mouse) :- visits(X, cat).",
        "description": "If something visits the cat then it sees the mouse."
    },
    {
        "id": 1814,
        "statement": "chases(X, squirrel) :- chases(X, cat).",
        "description": "If something chases the cat then it chases the squirrel."
    },
    {
        "id": 1815,
        "statement": "sees(X, bear) :- is(X, big).",
        "description": "If something is big then it sees the bear."
    },
    {
        "id": 1816,
        "statement": "likes(cow, squirrel).",
        "description": "The cow likes the squirrel."
    },
    {
        "id": 1817,
        "statement": "likes(squirrel, cat).",
        "description": "The squirrel likes the cat."
    },
    {
        "id": 1818,
        "statement": "needs(X, cat) :- likes(X, cow).",
        "description": "If someone likes the cow then they need the cat."
    },
    {
        "id": 1819,
        "statement": "needs(X, rabbit) :- likes(X, cow), is(cow, cold).",
        "description": "If someone likes the cow and the cow is cold then they need the rabbit."
    },
    {
        "id": 1820,
        "statement": "needs(X, cow) :- likes(X, cat).",
        "description": "If someone likes the cat then they need the cow."
    },
    {
        "id": 1821,
        "statement": "likes(cow, cat) :- likes(X, cow).",
        "description": "If someone likes the cow then the cow likes the cat."
    },
    {
        "id": 1822,
        "statement": "eats(X, squirrel) :- needs(X, squirrel), likes(X, squirrel).",
        "description": "If someone needs the squirrel and they like the squirrel then they eat the squirrel."
    },
    {
        "id": 1823,
        "statement": "is(rabbit, red) :- not needs(squirrel, rabbit), not is(rabbit, kind).",
        "description": "If the squirrel does not need the rabbit and the rabbit is not kind then the rabbit is red."
    },
    {
        "id": 1824,
        "statement": "is(X, big) :- is(X, nice).",
        "description": "If someone is nice then they are big."
    },
    {
        "id": 1825,
        "statement": "is(X, nice) :- is(X, quiet).",
        "description": "Quiet people are nice."
    },
    {
        "id": 1826,
        "statement": "is(X, smart) :- is(X, big), is(X, nice).",
        "description": "If someone is big and nice then they are smart."
    },
    {
        "id": 1827,
        "statement": "is(charlie, smart) :- not is(charlie, big).",
        "description": "If Charlie is not big then Charlie is smart."
    },
    {
        "id": 1828,
        "statement": "is(X, rough) :- is(X, quiet), is(X, red).",
        "description": "If someone is quiet and red then they are rough."
    },
    {
        "id": 1829,
        "statement": "is(X, rough) :- is(X, big), is(X, red).",
        "description": "If someone is big and red then they are rough."
    },
    {
        "id": 1830,
        "statement": "is(X, rough) :- is(X, nice), is(X, red).",
        "description": "If someone is nice and red then they are rough."
    },
    {
        "id": 1831,
        "statement": "is(X, rough) :- is(X, white).",
        "description": "All white people are rough."
    },
    {
        "id": 1832,
        "statement": "is(X, red) :- is(X, nice), is(X, smart).",
        "description": "If someone is nice and smart then they are red."
    },
    {
        "id": 1833,
        "statement": "is(X, cold) :- is(X, nice), is(X, red).",
        "description": "All nice, red people are cold."
    },
    {
        "id": 1834,
        "statement": "is(anne, rough) :- is(anne, nice), is(anne, red).",
        "description": "If Anne is nice and Anne is red then Anne is rough."
    },
    {
        "id": 1835,
        "statement": "is(fiona, white) :- is(fiona, nice).",
        "description": "If Fiona is nice then Fiona is white."
    },
    {
        "id": 1836,
        "statement": "is(X, nice) :- is(X, kind), is(X, white).",
        "description": "If someone is kind and white then they are nice."
    },
    {
        "id": 1837,
        "statement": "is(X, white) :- is(X, furry), is(X, kind).",
        "description": "If someone is furry and kind then they are white."
    },
    {
        "id": 1838,
        "statement": "is(X, rough) :- is(X, cold).",
        "description": "Cold people are rough."
    },
    {
        "id": 1839,
        "statement": "is(anne, white) :- is(anne, nice).",
        "description": "If Anne is nice then Anne is white."
    },
    {
        "id": 1840,
        "statement": "is(harry, furry) :- is(harry, red).",
        "description": "If Harry is red then Harry is furry."
    },
    {
        "id": 1841,
        "statement": "is(X, blue) :- is(X, red), is(X, cold).",
        "description": "Red, cold people are blue."
    },
    {
        "id": 1842,
        "statement": "is(X, furry) :- is(X, quiet).",
        "description": "If someone is quiet then they are furry."
    },
    {
        "id": 1843,
        "statement": "is(X, young) :- is(X, red), is(X, smart).",
        "description": "If someone is red and smart then they are young."
    },
    {
        "id": 1844,
        "statement": "is(X, quiet) :- is(X, cold), is(X, young).",
        "description": "All cold, young people are quiet."
    },
    {
        "id": 1845,
        "statement": "is(X, furry) :- is(X, quiet), is(X, smart).",
        "description": "If someone is quiet and smart then they are furry."
    },
    {
        "id": 1846,
        "statement": "is(X, cold) :- is(X, young), is(X, furry).",
        "description": "All young, furry people are cold."
    },
    {
        "id": 1847,
        "statement": "is(X, red) :- is(X, quiet), is(X, young).",
        "description": "All quiet, young people are red."
    },
    {
        "id": 1848,
        "statement": "is(X, furry) :- is(X, young).",
        "description": "If someone is young then they are furry."
    },
    {
        "id": 1849,
        "statement": "is(X, round) :- is(X, young), is(X, red).",
        "description": "If something is young and red then it is round."
    },
    {
        "id": 1850,
        "statement": "is(X, furry) :- is(X, nice), is(X, round).",
        "description": "Nice, round things are furry."
    },
    {
        "id": 1851,
        "statement": "is(X, round) :- is(X, furry), is(X, cold).",
        "description": "Furry, cold things are round."
    },
    {
        "id": 1852,
        "statement": "is(X, white) :- is(X, cold), is(X, nice).",
        "description": "If something is cold and nice then it is white."
    },
    {
        "id": 1853,
        "statement": "is(X, round) :- is(X, white), is(X, red).",
        "description": "If something is white and red then it is round."
    },
    {
        "id": 1854,
        "statement": "is(X, red) :- is(X, round).",
        "description": "All round things are red."
    },
    {
        "id": 1855,
        "statement": "is(X, furry) :- is(X, round), is(X, cold).",
        "description": "All round, cold things are furry."
    },
    {
        "id": 1856,
        "statement": "is(X, red) :- is(X, nice), is(X, white).",
        "description": "Nice, white things are red."
    },
    {
        "id": 1857,
        "statement": "is(X, white) :- is(X, kind), is(X, cold).",
        "description": "All kind, cold things are white."
    },
    {
        "id": 1858,
        "statement": "is(X, young) :- is(X, red).",
        "description": "Red things are young."
    },
    {
        "id": 1859,
        "statement": "is(anne, red) :- is(anne, round), is(anne, white).",
        "description": "If Anne is round and Anne is white then Anne is red."
    },
    {
        "id": 1860,
        "statement": "is(X, cold) :- is(X, kind), is(X, red).",
        "description": "Kind, red things are cold."
    },
    {
        "id": 1861,
        "statement": "is(anne, young) :- is(anne, round).",
        "description": "If Anne is round then Anne is young."
    },
    {
        "id": 1862,
        "statement": "is(X, red) :- is(X, young), is(X, quiet).",
        "description": "All young, quiet things are red."
    },
    {
        "id": 1863,
        "statement": "is(X, quiet) :- is(X, kind), is(X, red).",
        "description": "If something is kind and red then it is quiet."
    },
    {
        "id": 1864,
        "statement": "is(gary, kind) :- is(gary, young), is(gary, red).",
        "description": "If Gary is young and Gary is red then Gary is kind."
    },
    {
        "id": 1865,
        "statement": "visits(cat, mouse).",
        "description": "The cat visits the mouse."
    },
    {
        "id": 1866,
        "statement": "likes(mouse, lion).",
        "description": "The mouse likes the lion."
    },
    {
        "id": 1867,
        "statement": "sees(lion, squirrel) :- is(X, green), likes(X, lion).",
        "description": "If something is green and it likes the lion then the lion sees the squirrel."
    },
    {
        "id": 1868,
        "statement": "sees(X, squirrel) :- likes(X, lion).",
        "description": "If something likes the lion then it sees the squirrel."
    },
    {
        "id": 1869,
        "statement": "is(X, green) :- visits(X, cat), is(cat, cold).",
        "description": "If something visits the cat and the cat is cold then it is green."
    },
    {
        "id": 1870,
        "statement": "is(X, green) :- sees(X, squirrel), is(squirrel, big).",
        "description": "If something sees the squirrel and the squirrel is big then it is green."
    },
    {
        "id": 1871,
        "statement": "likes(X, squirrel) :- is(X, red).",
        "description": "If something is red then it likes the squirrel."
    },
    {
        "id": 1872,
        "statement": "is(cat, cold) :- visits(mouse, cat).",
        "description": "If the mouse visits the cat then the cat is cold."
    },
    {
        "id": 1873,
        "statement": "visits(X, cat) :- sees(X, squirrel).",
        "description": "If something sees the squirrel then it visits the cat."
    },
    {
        "id": 1874,
        "statement": "visits(cat, mouse) :- likes(X, cat), not is(X, green).",
        "description": "If something likes the cat and it is not green then the cat visits the mouse."
    },
    {
        "id": 1875,
        "statement": "eats(cow, dog).",
        "description": "The cow eats the dog."
    },
    {
        "id": 1876,
        "statement": "chases(tiger, cow).",
        "description": "The tiger chases the cow."
    },
    {
        "id": 1877,
        "statement": "chases(tiger, dog).",
        "description": "The tiger chases the dog."
    },
    {
        "id": 1878,
        "statement": "eats(tiger, rabbit).",
        "description": "The tiger eats the rabbit."
    },
    {
        "id": 1879,
        "statement": "is(cow, young) :- visits(X, cow), eats(X, rabbit).",
        "description": "If someone visits the cow and they eat the rabbit then the cow is young."
    },
    {
        "id": 1880,
        "statement": "chases(rabbit, cow) :- eats(X, rabbit), visits(X, cow).",
        "description": "If someone eats the rabbit and they visit the cow then the rabbit chases the cow."
    },
    {
        "id": 1881,
        "statement": "visits(X, cow) :- eats(X, tiger).",
        "description": "If someone eats the tiger then they visit the cow."
    },
    {
        "id": 1882,
        "statement": "chases(X, dog) :- is(X, blue).",
        "description": "If someone is blue then they chase the dog."
    },
    {
        "id": 1883,
        "statement": "eats(X, cow) :- is(X, round).",
        "description": "If someone is round then they eat the cow."
    },
    {
        "id": 1884,
        "statement": "eats(X, tiger) :- chases(X, cow).",
        "description": "If someone chases the cow then they eat the tiger."
    },
    {
        "id": 1885,
        "statement": "is(X, quiet) :- is(X, white), is(X, rough).",
        "description": "If someone is white and rough then they are quiet."
    },
    {
        "id": 1886,
        "statement": "is(X, furry) :- is(X, rough).",
        "description": "All rough people are furry."
    },
    {
        "id": 1887,
        "statement": "is(X, white) :- is(X, cold), is(X, furry).",
        "description": "If someone is cold and furry then they are white."
    },
    {
        "id": 1888,
        "statement": "is(X, cold) :- is(X, furry).",
        "description": "All furry people are cold."
    },
    {
        "id": 1889,
        "statement": "is(X, cold) :- is(X, young), is(X, rough).",
        "description": "Young, rough people are cold."
    },
    {
        "id": 1890,
        "statement": "is(cat, blue).",
        "description": "The cat is blue."
    },
    {
        "id": 1891,
        "statement": "needs(cat, mouse).",
        "description": "The cat needs the mouse."
    },
    {
        "id": 1892,
        "statement": "eats(mouse, cat).",
        "description": "The mouse eats the cat."
    },
    {
        "id": 1893,
        "statement": "sees(mouse, cat).",
        "description": "The mouse sees the cat."
    },
    {
        "id": 1894,
        "statement": "needs(cow, lion) :- eats(cow, lion).",
        "description": "If the cow eats the lion then the cow needs the lion."
    },
    {
        "id": 1895,
        "statement": "eats(cat, lion) :- needs(X, cat).",
        "description": "If someone needs the cat then the cat eats the lion."
    },
    {
        "id": 1896,
        "statement": "sees(X, cat) :- is(X, rough).",
        "description": "If someone is rough then they see the cat."
    },
    {
        "id": 1897,
        "statement": "is(mouse, big) :- eats(X, mouse).",
        "description": "If someone eats the mouse then the mouse is big."
    },
    {
        "id": 1898,
        "statement": "needs(mouse, cat) :- eats(cat, cow), needs(cat, mouse).",
        "description": "If the cat eats the cow and the cat needs the mouse then the mouse needs the cat."
    },
    {
        "id": 1899,
        "statement": "is(lion, rough) :- eats(X, lion).",
        "description": "If someone eats the lion then the lion is rough."
    },
    {
        "id": 1900,
        "statement": "needs(cow, cat) :- needs(mouse, cow), sees(mouse, cat).",
        "description": "If the mouse needs the cow and the mouse sees the cat then the cow needs the cat."
    },
    {
        "id": 1901,
        "statement": "sees(X, cow) :- is(X, nice), is(X, rough).",
        "description": "If someone is nice and rough then they see the cow."
    },
    {
        "id": 1902,
        "statement": "is(X, nice) :- sees(X, cat), is(cat, blue).",
        "description": "If someone sees the cat and the cat is blue then they are nice."
    },
    {
        "id": 1903,
        "statement": "is(X, kind) :- is(X, smart).",
        "description": "Smart people are kind."
    },
    {
        "id": 1904,
        "statement": "is(X, white) :- is(X, furry), is(X, red).",
        "description": "If someone is furry and red then they are white."
    },
    {
        "id": 1905,
        "statement": "is(X, red) :- is(X, rough).",
        "description": "If someone is rough then they are red."
    },
    {
        "id": 1906,
        "statement": "is(X, red) :- is(X, green), is(X, kind).",
        "description": "If someone is green and kind then they are red."
    },
    {
        "id": 1907,
        "statement": "is(X, smart) :- is(X, furry).",
        "description": "If someone is furry then they are smart."
    },
    {
        "id": 1908,
        "statement": "is(X, white) :- is(X, quiet).",
        "description": "All quiet things are white."
    },
    {
        "id": 1909,
        "statement": "is(X, furry) :- is(X, green), is(X, round).",
        "description": "Green, round things are furry."
    },
    {
        "id": 1910,
        "statement": "is(X, big) :- is(X, cold), is(X, round).",
        "description": "Cold, round things are big."
    },
    {
        "id": 1911,
        "statement": "is(X, cold) :- is(X, quiet), not is(X, round).",
        "description": "If something is quiet and not round then it is cold."
    },
    {
        "id": 1912,
        "statement": "is(X, cold) :- is(X, round).",
        "description": "If something is round then it is cold."
    },
    {
        "id": 1913,
        "statement": "is(X, cold) :- is(X, round), is(X, quiet).",
        "description": "If something is round and quiet then it is cold."
    },
    {
        "id": 1914,
        "statement": "is(gary, white) :- is(gary, round).",
        "description": "If Gary is round then Gary is white."
    },
    {
        "id": 1915,
        "statement": "is(X, green) :- is(X, cold).",
        "description": "If something is cold then it is green."
    },
    {
        "id": 1916,
        "statement": "is(X, nice) :- is(X, white), is(X, green).",
        "description": "White, green people are nice."
    },
    {
        "id": 1917,
        "statement": "is(fiona, green) :- is(fiona, rough).",
        "description": "If Fiona is rough then Fiona is green."
    },
    {
        "id": 1918,
        "statement": "is(X, green) :- is(X, blue), is(X, furry).",
        "description": "If someone is blue and furry then they are green."
    },
    {
        "id": 1919,
        "statement": "is(harry, blue) :- is(harry, furry).",
        "description": "If Harry is furry then Harry is blue."
    },
    {
        "id": 1920,
        "statement": "is(dave, white) :- is(dave, nice).",
        "description": "If Dave is nice then Dave is white."
    },
    {
        "id": 1921,
        "statement": "is(harry, kind) :- is(harry, furry), is(harry, rough).",
        "description": "If Harry is furry and Harry is rough then Harry is kind."
    },
    {
        "id": 1922,
        "statement": "is(X, cold) :- is(X, white).",
        "description": "White things are cold."
    },
    {
        "id": 1923,
        "statement": "is(X, quiet) :- is(X, cold), is(X, smart).",
        "description": "If something is cold and smart then it is quiet."
    },
    {
        "id": 1924,
        "statement": "is(X, rough) :- is(X, quiet).",
        "description": "If something is quiet then it is rough."
    },
    {
        "id": 1925,
        "statement": "is(fiona, smart) :- is(fiona, cold), is(fiona, red).",
        "description": "If Fiona is cold and Fiona is red then Fiona is smart."
    },
    {
        "id": 1926,
        "statement": "is(X, round) :- is(X, smart).",
        "description": "If something is smart then it is round."
    },
    {
        "id": 1927,
        "statement": "is(gary, rough) :- is(gary, smart), is(gary, cold).",
        "description": "If Gary is smart and Gary is cold then Gary is rough."
    },
    {
        "id": 1928,
        "statement": "is(X, white) :- is(X, rough).",
        "description": "If something is rough then it is white."
    },
    {
        "id": 1929,
        "statement": "is(X, red) :- is(X, cold), is(X, kind).",
        "description": "Cold, kind things are red."
    },
    {
        "id": 1930,
        "statement": "is(X, smart) :- is(X, kind), is(X, rough).",
        "description": "Kind, rough things are smart."
    },
    {
        "id": 1931,
        "statement": "is(gary, smart) :- is(gary, cold), is(gary, red).",
        "description": "If Gary is cold and Gary is red then Gary is smart."
    },
    {
        "id": 1932,
        "statement": "is(X, kind) :- is(X, red).",
        "description": "Red things are kind."
    },
    {
        "id": 1933,
        "statement": "is(X, cold) :- is(X, quiet), is(X, kind).",
        "description": "If something is quiet and kind then it is cold."
    },
    {
        "id": 1934,
        "statement": "is(X, red) :- is(X, cold), is(X, quiet).",
        "description": "If something is cold and quiet then it is red."
    },
    {
        "id": 1935,
        "statement": "is(X, rough) :- is(X, blue), is(X, cold).",
        "description": "If something is blue and cold then it is rough."
    },
    {
        "id": 1936,
        "statement": "is(X, blue) :- is(X, kind), is(X, cold).",
        "description": "If something is kind and cold then it is blue."
    },
    {
        "id": 1937,
        "statement": "is(X, young) :- is(X, green), is(X, furry).",
        "description": "If someone is green and furry then they are young."
    },
    {
        "id": 1938,
        "statement": "is(X, red) :- is(X, green).",
        "description": "If someone is green then they are red."
    },
    {
        "id": 1939,
        "statement": "is(X, red) :- is(X, cold).",
        "description": "All cold people are red."
    },
    {
        "id": 1940,
        "statement": "is(X, smart) :- is(X, furry), is(X, young).",
        "description": "If someone is furry and young then they are smart."
    },
    {
        "id": 1941,
        "statement": "is(X, furry) :- is(X, smart), is(X, red).",
        "description": "If someone is smart and red then they are furry."
    },
    {
        "id": 1942,
        "statement": "is(X, furry) :- is(X, young), is(X, smart).",
        "description": "All young, smart people are furry."
    },
    {
        "id": 1943,
        "statement": "is(X, young) :- is(X, smart).",
        "description": "Smart people are young."
    },
    {
        "id": 1944,
        "statement": "is(anne, furry) :- is(anne, red).",
        "description": "If Anne is red then Anne is furry."
    },
    {
        "id": 1945,
        "statement": "is(X, cold) :- is(X, smart).",
        "description": "All smart people are cold."
    },
    {
        "id": 1946,
        "statement": "is(dave, big) :- not is(dave, white).",
        "description": "If Dave is not white then Dave is big."
    },
    {
        "id": 1947,
        "statement": "is(X, big) :- is(X, white).",
        "description": "If something is white then it is big."
    },
    {
        "id": 1948,
        "statement": "is(X, green) :- is(X, big).",
        "description": "Big things are green."
    },
    {
        "id": 1949,
        "statement": "is(X, furry) :- is(X, young), is(X, big).",
        "description": "If something is young and big then it is furry."
    },
    {
        "id": 1950,
        "statement": "is(X, furry) :- is(X, white), not is(X, young).",
        "description": "If something is white and not young then it is furry."
    },
    {
        "id": 1951,
        "statement": "chases(bald_eagle, rabbit).",
        "description": "The bald eagle chases the rabbit."
    },
    {
        "id": 1952,
        "statement": "needs(squirrel, rabbit).",
        "description": "The squirrel needs the rabbit."
    },
    {
        "id": 1953,
        "statement": "is(bald_eagle, cold) :- needs(bald_eagle, dog), needs(dog, bald_eagle).",
        "description": "If the bald eagle needs the dog and the dog needs the bald eagle then the bald eagle is cold."
    },
    {
        "id": 1954,
        "statement": "is(X, kind) :- is(X, big).",
        "description": "All big things are kind."
    },
    {
        "id": 1955,
        "statement": "needs(X, bald_eagle) :- likes(X, bald_eagle).",
        "description": "If something likes the bald eagle then it needs the bald eagle."
    },
    {
        "id": 1956,
        "statement": "is(X, big) :- chases(X, rabbit).",
        "description": "If something chases the rabbit then it is big."
    },
    {
        "id": 1957,
        "statement": "needs(X, dog) :- needs(X, bald_eagle).",
        "description": "If something needs the bald eagle then it needs the dog."
    },
    {
        "id": 1958,
        "statement": "likes(squirrel, dog) :- is(X, kind), chases(X, squirrel).",
        "description": "If something is kind and it chases the squirrel then the squirrel likes the dog."
    },
    {
        "id": 1959,
        "statement": "chases(bald_eagle, squirrel) :- chases(X, bald_eagle).",
        "description": "If something chases the bald eagle then the bald eagle chases the squirrel."
    },
    {
        "id": 1960,
        "statement": "chases(X, bald_eagle) :- likes(X, dog).",
        "description": "If something likes the dog then it chases the bald eagle."
    },
    {
        "id": 1961,
        "statement": "is(X, red) :- is(X, rough).",
        "description": "Rough people are red."
    },
    {
        "id": 1962,
        "statement": "is(X, young) :- is(X, furry), is(X, red).",
        "description": "If someone is furry and red then they are young."
    },
    {
        "id": 1963,
        "statement": "is(X, rough) :- is(X, kind).",
        "description": "Kind people are rough."
    },
    {
        "id": 1964,
        "statement": "is(gary, furry) :- is(gary, red).",
        "description": "If Gary is red then Gary is furry."
    },
    {
        "id": 1965,
        "statement": "is(X, kind) :- is(X, big).",
        "description": "If someone is big then they are kind."
    },
    {
        "id": 1966,
        "statement": "is(charlie, furry) :- is(charlie, rough).",
        "description": "If Charlie is rough then Charlie is furry."
    },
    {
        "id": 1967,
        "statement": "is(X, red) :- is(X, young), is(X, big).",
        "description": "If someone is young and big then they are red."
    },
    {
        "id": 1968,
        "statement": "eats(dog, lion).",
        "description": "The dog eats the lion."
    },
    {
        "id": 1969,
        "statement": "needs(dog, lion).",
        "description": "The dog needs the lion."
    },
    {
        "id": 1970,
        "statement": "is(lion, nice).",
        "description": "The lion is nice."
    },
    {
        "id": 1971,
        "statement": "needs(mouse, lion).",
        "description": "The mouse needs the lion."
    },
    {
        "id": 1972,
        "statement": "is(X, big) :- eats(X, mouse), is(X, nice).",
        "description": "If something eats the mouse and it is nice then it is big."
    },
    {
        "id": 1973,
        "statement": "eats(X, lion) :- sees(X, dog).",
        "description": "If something sees the dog then it eats the lion."
    },
    {
        "id": 1974,
        "statement": "sees(mouse, bald_eagle) :- needs(bald_eagle, mouse).",
        "description": "If the bald eagle needs the mouse then the mouse sees the bald eagle."
    },
    {
        "id": 1975,
        "statement": "needs(bald_eagle, dog) :- is(X, nice), eats(X, bald_eagle).",
        "description": "If something is nice and it eats the bald eagle then the bald eagle needs the dog."
    },
    {
        "id": 1976,
        "statement": "eats(X, lion) :- is(X, red), is(X, big).",
        "description": "If something is red and big then it eats the lion."
    },
    {
        "id": 1977,
        "statement": "needs(X, lion) :- eats(X, lion).",
        "description": "If something eats the lion then it needs the lion."
    },
    {
        "id": 1978,
        "statement": "is(X, cold) :- is(X, nice), needs(X, lion).",
        "description": "If something is nice and it needs the lion then it is cold."
    },
    {
        "id": 1979,
        "statement": "needs(X, bald_eagle) :- sees(X, dog).",
        "description": "If something sees the dog then it needs the bald eagle."
    },
    {
        "id": 1980,
        "statement": "visits(mouse, rabbit).",
        "description": "The mouse visits the rabbit."
    },
    {
        "id": 1981,
        "statement": "likes(X, cat) :- is(X, kind).",
        "description": "If someone is kind then they like the cat."
    },
    {
        "id": 1982,
        "statement": "is(rabbit, big) :- needs(X, rabbit), is(X, kind).",
        "description": "If someone needs the rabbit and they are kind then the rabbit is big."
    },
    {
        "id": 1983,
        "statement": "is(X, young) :- visits(X, mouse).",
        "description": "If someone visits the mouse then they are young."
    },
    {
        "id": 1984,
        "statement": "visits(X, tiger) :- likes(X, cat).",
        "description": "If someone likes the cat then they visit the tiger."
    },
    {
        "id": 1985,
        "statement": "is(tiger, kind) :- visits(rabbit, tiger).",
        "description": "If the rabbit visits the tiger then the tiger is kind."
    },
    {
        "id": 1986,
        "statement": "needs(X, mouse) :- needs(X, tiger).",
        "description": "If someone needs the tiger then they need the mouse."
    },
    {
        "id": 1987,
        "statement": "is(X, young) :- needs(X, tiger).",
        "description": "If someone needs the tiger then they are young."
    },
    {
        "id": 1988,
        "statement": "is(X, cold) :- is(X, young), likes(X, tiger).",
        "description": "If someone is young and they like the tiger then they are cold."
    },
    {
        "id": 1989,
        "statement": "is(X, blue) :- is(X, kind), is(X, big).",
        "description": "All kind, big things are blue."
    },
    {
        "id": 1990,
        "statement": "is(X, blue) :- is(X, kind), not is(X, red).",
        "description": "If something is kind and not red then it is blue."
    },
    {
        "id": 1991,
        "statement": "is(erin, quiet) :- is(erin, cold).",
        "description": "If Erin is cold then Erin is quiet."
    },
    {
        "id": 1992,
        "statement": "is(X, quiet) :- is(X, kind).",
        "description": "All kind things are quiet."
    },
    {
        "id": 1993,
        "statement": "is(X, big) :- is(X, white), is(X, cold).",
        "description": "If something is white and cold then it is big."
    },
    {
        "id": 1994,
        "statement": "is(X, kind) :- is(X, big).",
        "description": "If something is big then it is kind."
    },
    {
        "id": 1995,
        "statement": "is(harry, big) :- is(harry, red).",
        "description": "If Harry is red then Harry is big."
    },
    {
        "id": 1996,
        "statement": "is(X, kind) :- is(X, young).",
        "description": "If something is young then it is kind."
    },
    {
        "id": 1997,
        "statement": "is(X, young) :- is(X, kind).",
        "description": "All kind things are young."
    },
    {
        "id": 1998,
        "statement": "is(X, furry) :- is(X, nice), is(X, rough).",
        "description": "If something is nice and rough then it is furry."
    },
    {
        "id": 1999,
        "statement": "is(X, young) :- is(X, nice).",
        "description": "If something is nice then it is young."
    },
    {
        "id": 2000,
        "statement": "is(X, furry) :- is(X, rough), is(X, kind).",
        "description": "Rough, kind things are furry."
    },
    {
        "id": 2001,
        "statement": "is(X, round) :- is(X, young), is(X, kind).",
        "description": "If something is young and kind then it is round."
    },
    {
        "id": 2002,
        "statement": "is(X, red) :- is(X, furry).",
        "description": "All furry people are red."
    },
    {
        "id": 2003,
        "statement": "is(X, red) :- is(X, furry), is(X, smart).",
        "description": "All furry, smart people are red."
    },
    {
        "id": 2004,
        "statement": "is(X, smart) :- is(X, red).",
        "description": "If someone is red then they are smart."
    },
    {
        "id": 2005,
        "statement": "is(X, smart) :- is(X, white), is(X, green).",
        "description": "All white, green people are smart."
    },
    {
        "id": 2006,
        "statement": "is(X, furry) :- is(X, rough).",
        "description": "Rough people are furry."
    },
    {
        "id": 2007,
        "statement": "is(X, green) :- is(X, white), is(X, furry).",
        "description": "All white, furry people are green."
    },
    {
        "id": 2008,
        "statement": "is(X, white) :- is(X, rough), is(X, smart).",
        "description": "Rough, smart people are white."
    },
    {
        "id": 2009,
        "statement": "is(X, big) :- is(X, white), is(X, smart).",
        "description": "White, smart people are big."
    },
    {
        "id": 2010,
        "statement": "is(X, rough) :- is(X, red).",
        "description": "All red things are rough."
    },
    {
        "id": 2011,
        "statement": "is(dave, kind) :- is(dave, white), is(dave, blue).",
        "description": "If Dave is white and Dave is blue then Dave is kind."
    },
    {
        "id": 2012,
        "statement": "is(X, kind) :- is(X, smart), not is(X, rough).",
        "description": "If something is smart and not rough then it is kind."
    },
    {
        "id": 2013,
        "statement": "is(X, smart) :- is(X, rough), is(X, white).",
        "description": "Rough, white things are smart."
    },
    {
        "id": 2014,
        "statement": "is(X, smart) :- is(X, kind), is(X, cold).",
        "description": "Kind, cold things are smart."
    },
    {
        "id": 2015,
        "statement": "visits(cat, dog).",
        "description": "The cat visits the dog."
    },
    {
        "id": 2016,
        "statement": "visits(rabbit, dog).",
        "description": "The rabbit visits the dog."
    },
    {
        "id": 2017,
        "statement": "is(cat, young) :- visits(X, cat).",
        "description": "If someone visits the cat then the cat is young."
    },
    {
        "id": 2018,
        "statement": "likes(dog, cat) :- chases(X, dog).",
        "description": "If someone chases the dog then the dog likes the cat."
    },
    {
        "id": 2019,
        "statement": "likes(X, cat) :- visits(X, dog), is(X, young).",
        "description": "If someone visits the dog and they are young then they like the cat."
    },
    {
        "id": 2020,
        "statement": "is(cat, nice) :- likes(X, cat), likes(X, rabbit).",
        "description": "If someone likes the cat and they like the rabbit then the cat is nice."
    },
    {
        "id": 2021,
        "statement": "chases(X, bear) :- is(X, round), chases(X, rabbit).",
        "description": "If someone is round and they chase the rabbit then they chase the bear."
    },
    {
        "id": 2022,
        "statement": "likes(bear, rabbit) :- chases(cat, bear).",
        "description": "If the cat chases the bear then the bear likes the rabbit."
    },
    {
        "id": 2023,
        "statement": "is(rabbit, red) :- chases(X, rabbit).",
        "description": "If someone chases the rabbit then the rabbit is red."
    },
    {
        "id": 2024,
        "statement": "chases(bear, cat) :- likes(cat, rabbit), visits(cat, bear).",
        "description": "If the cat likes the rabbit and the cat visits the bear then the bear chases the cat."
    },
    {
        "id": 2025,
        "statement": "chases(X, dog) :- is(X, nice).",
        "description": "If someone is nice then they chase the dog."
    },
    {
        "id": 2026,
        "statement": "is(X, red) :- is(X, furry), is(X, blue).",
        "description": "If something is furry and blue then it is red."
    },
    {
        "id": 2027,
        "statement": "is(X, round) :- is(X, furry), is(X, blue).",
        "description": "Furry, blue things are round."
    },
    {
        "id": 2028,
        "statement": "is(gary, quiet) :- is(gary, nice), is(gary, furry).",
        "description": "If Gary is nice and Gary is furry then Gary is quiet."
    },
    {
        "id": 2029,
        "statement": "is(X, nice) :- is(X, furry), is(X, red).",
        "description": "If something is furry and red then it is nice."
    },
    {
        "id": 2030,
        "statement": "is(X, round) :- is(X, quiet), is(X, furry).",
        "description": "Quiet, furry things are round."
    },
    {
        "id": 2031,
        "statement": "is(X, smart) :- is(X, furry), is(X, round).",
        "description": "If someone is furry and round then they are smart."
    },
    {
        "id": 2032,
        "statement": "is(X, round) :- is(X, smart), is(X, blue).",
        "description": "All smart, blue people are round."
    },
    {
        "id": 2033,
        "statement": "is(X, round) :- is(X, quiet).",
        "description": "All quiet people are round."
    },
    {
        "id": 2034,
        "statement": "is(X, smart) :- is(X, round).",
        "description": "All round people are smart."
    },
    {
        "id": 2035,
        "statement": "is(bob, furry) :- is(bob, kind).",
        "description": "If Bob is kind then Bob is furry."
    },
    {
        "id": 2036,
        "statement": "is(X, blue) :- is(X, kind).",
        "description": "If someone is kind then they are blue."
    },
    {
        "id": 2037,
        "statement": "is(X, quiet) :- is(X, kind), is(X, blue).",
        "description": "All kind, blue people are quiet."
    },
    {
        "id": 2038,
        "statement": "is(X, quiet) :- is(X, rough), is(X, blue).",
        "description": "All rough, blue people are quiet."
    },
    {
        "id": 2039,
        "statement": "is(X, furry) :- is(X, smart).",
        "description": "All smart people are furry."
    },
    {
        "id": 2040,
        "statement": "sees(bald_eagle, mouse).",
        "description": "The bald eagle sees the mouse."
    },
    {
        "id": 2041,
        "statement": "sees(mouse, tiger).",
        "description": "The mouse sees the tiger."
    },
    {
        "id": 2042,
        "statement": "sees(squirrel, bald_eagle).",
        "description": "The squirrel sees the bald eagle."
    },
    {
        "id": 2043,
        "statement": "is(tiger, green).",
        "description": "The tiger is green."
    },
    {
        "id": 2044,
        "statement": "is(X, nice) :- is(X, green).",
        "description": "Green things are nice."
    },
    {
        "id": 2045,
        "statement": "is(X, nice) :- visits(X, squirrel).",
        "description": "If something visits the squirrel then it is nice."
    },
    {
        "id": 2046,
        "statement": "needs(X, bald_eagle) :- is(X, nice).",
        "description": "If something is nice then it needs the bald eagle."
    },
    {
        "id": 2047,
        "statement": "sees(squirrel, mouse) :- visits(bald_eagle, squirrel).",
        "description": "If the bald eagle visits the squirrel then the squirrel sees the mouse."
    },
    {
        "id": 2048,
        "statement": "visits(X, squirrel) :- needs(X, bald_eagle).",
        "description": "If something needs the bald eagle then it visits the squirrel."
    },
    {
        "id": 2049,
        "statement": "is(squirrel, green) :- needs(tiger, mouse), visits(tiger, squirrel).",
        "description": "If the tiger needs the mouse and the tiger visits the squirrel then the squirrel is green."
    },
    {
        "id": 2050,
        "statement": "is(X, green) :- sees(X, mouse).",
        "description": "If something sees the mouse then it is green."
    },
    {
        "id": 2051,
        "statement": "needs(squirrel, bald_eagle) :- needs(X, squirrel), visits(squirrel, tiger).",
        "description": "If something needs the squirrel and the squirrel visits the tiger then the squirrel needs the bald eagle."
    },
    {
        "id": 2052,
        "statement": "likes(bald_eagle, dog).",
        "description": "The bald eagle likes the dog."
    },
    {
        "id": 2053,
        "statement": "is(dog, rough).",
        "description": "The dog is rough."
    },
    {
        "id": 2054,
        "statement": "likes(dog, tiger).",
        "description": "The dog likes the tiger."
    },
    {
        "id": 2055,
        "statement": "likes(tiger, dog).",
        "description": "The tiger likes the dog."
    },
    {
        "id": 2056,
        "statement": "is(X, rough) :- visits(X, rabbit), visits(rabbit, tiger).",
        "description": "If someone visits the rabbit and the rabbit visits the tiger then they are rough."
    },
    {
        "id": 2057,
        "statement": "needs(tiger, rabbit) :- likes(X, tiger).",
        "description": "If someone likes the tiger then the tiger needs the rabbit."
    },
    {
        "id": 2058,
        "statement": "is(X, nice) :- is(X, blue).",
        "description": "If someone is blue then they are nice."
    },
    {
        "id": 2059,
        "statement": "is(X, nice) :- needs(X, dog).",
        "description": "If someone needs the dog then they are nice."
    },
    {
        "id": 2060,
        "statement": "likes(X, rabbit) :- is(X, nice), likes(X, bald_eagle).",
        "description": "If someone is nice and they like the bald eagle then they like the rabbit."
    },
    {
        "id": 2061,
        "statement": "needs(X, bald_eagle) :- needs(X, dog).",
        "description": "If someone needs the dog then they need the bald eagle."
    },
    {
        "id": 2062,
        "statement": "is(rabbit, blue) :- likes(X, rabbit).",
        "description": "If someone likes the rabbit then the rabbit is blue."
    },
    {
        "id": 2063,
        "statement": "is(bald_eagle, nice) :- visits(bald_eagle, dog), likes(dog, tiger).",
        "description": "If the bald eagle visits the dog and the dog likes the tiger then the bald eagle is nice."
    },
    {
        "id": 2064,
        "statement": "likes(tiger, bald_eagle) :- visits(tiger, rabbit), not visits(rabbit, tiger).",
        "description": "If the tiger visits the rabbit and the rabbit does not visit the tiger then the tiger likes the bald eagle."
    },
    {
        "id": 2065,
        "statement": "sees(bear, dog).",
        "description": "The bear sees the dog."
    },
    {
        "id": 2066,
        "statement": "visits(bear, dog).",
        "description": "The bear visits the dog."
    },
    {
        "id": 2067,
        "statement": "likes(cat, bear).",
        "description": "The cat likes the bear."
    },
    {
        "id": 2068,
        "statement": "visits(dog, cow).",
        "description": "The dog visits the cow."
    },
    {
        "id": 2069,
        "statement": "is(X, green) :- visits(X, cow).",
        "description": "If someone visits the cow then they are green."
    },
    {
        "id": 2070,
        "statement": "is(bear, green) :- likes(X, bear), sees(X, dog).",
        "description": "If someone likes the bear and they see the dog then the bear is green."
    },
    {
        "id": 2071,
        "statement": "visits(cat, cow) :- is(X, cold), not likes(X, cat).",
        "description": "If someone is cold and they do not like the cat then the cat visits the cow."
    },
    {
        "id": 2072,
        "statement": "sees(X, dog) :- is(X, cold), is(X, big).",
        "description": "If someone is cold and big then they see the dog."
    },
    {
        "id": 2073,
        "statement": "is(dog, big) :- is(cat, blue), visits(cat, dog).",
        "description": "If the cat is blue and the cat visits the dog then the dog is big."
    },
    {
        "id": 2074,
        "statement": "is(dog, big) :- sees(cat, dog).",
        "description": "If the cat sees the dog then the dog is big."
    },
    {
        "id": 2075,
        "statement": "sees(dog, bear) :- is(dog, green), visits(dog, cow).",
        "description": "If the dog is green and the dog visits the cow then the dog sees the bear."
    },
    {
        "id": 2076,
        "statement": "is(X, cold) :- is(X, green), likes(X, dog).",
        "description": "If someone is green and they like the dog then they are cold."
    },
    {
        "id": 2077,
        "statement": "is(X, white) :- is(X, blue).",
        "description": "Blue people are white."
    },
    {
        "id": 2078,
        "statement": "is(X, white) :- is(X, cold), is(X, round).",
        "description": "All cold, round people are white."
    },
    {
        "id": 2079,
        "statement": "is(X, blue) :- is(X, kind).",
        "description": "Kind people are blue."
    },
    {
        "id": 2080,
        "statement": "is(X, furry) :- is(X, young).",
        "description": "All young people are furry."
    },
    {
        "id": 2081,
        "statement": "is(X, young) :- is(X, furry).",
        "description": "Furry people are young."
    },
    {
        "id": 2082,
        "statement": "is(X, furry) :- is(X, blue), is(X, white).",
        "description": "All blue, white people are furry."
    },
    {
        "id": 2083,
        "statement": "is(X, blue) :- is(X, round).",
        "description": "If someone is round then they are blue."
    },
    {
        "id": 2084,
        "statement": "is(X, round) :- is(X, white), is(X, young).",
        "description": "White, young people are round."
    },
    {
        "id": 2085,
        "statement": "is(X, green) :- is(X, smart), is(X, quiet).",
        "description": "All smart, quiet things are green."
    },
    {
        "id": 2086,
        "statement": "is(gary, rough) :- is(gary, smart).",
        "description": "If Gary is smart then Gary is rough."
    },
    {
        "id": 2087,
        "statement": "is(X, cold) :- is(X, quiet), is(X, green).",
        "description": "If something is quiet and green then it is cold."
    },
    {
        "id": 2088,
        "statement": "is(X, young) :- is(X, quiet), is(X, green).",
        "description": "All quiet, green things are young."
    },
    {
        "id": 2089,
        "statement": "is(X, green) :- is(X, young), is(X, smart).",
        "description": "Young, smart things are green."
    },
    {
        "id": 2090,
        "statement": "is(anne, young) :- is(anne, rough), is(anne, kind).",
        "description": "If Anne is rough and Anne is kind then Anne is young."
    },
    {
        "id": 2091,
        "statement": "is(X, kind) :- is(X, young), is(X, quiet).",
        "description": "Young, quiet things are kind."
    },
    {
        "id": 2092,
        "statement": "is(X, quiet) :- is(X, rough).",
        "description": "If something is rough then it is quiet."
    },
    {
        "id": 2093,
        "statement": "eats(bald_eagle, dog).",
        "description": "The bald eagle eats the dog."
    },
    {
        "id": 2094,
        "statement": "likes(lion, dog).",
        "description": "The lion likes the dog."
    },
    {
        "id": 2095,
        "statement": "likes(dog, squirrel) :- needs(dog, lion), is(lion, green).",
        "description": "If the dog needs the lion and the lion is green then the dog likes the squirrel."
    },
    {
        "id": 2096,
        "statement": "is(X, nice) :- likes(X, lion), eats(X, lion).",
        "description": "If something likes the lion and it eats the lion then it is nice."
    },
    {
        "id": 2097,
        "statement": "likes(X, squirrel) :- likes(X, bald_eagle), needs(X, dog).",
        "description": "If something likes the bald eagle and it needs the dog then it likes the squirrel."
    },
    {
        "id": 2098,
        "statement": "likes(X, bald_eagle) :- is(X, nice), likes(X, dog).",
        "description": "If something is nice and it likes the dog then it likes the bald eagle."
    },
    {
        "id": 2099,
        "statement": "eats(bald_eagle, lion) :- is(bald_eagle, red).",
        "description": "If the bald eagle is red then the bald eagle eats the lion."
    },
    {
        "id": 2100,
        "statement": "is(bald_eagle, red) :- needs(X, bald_eagle).",
        "description": "If something needs the bald eagle then the bald eagle is red."
    },
    {
        "id": 2101,
        "statement": "is(X, green) :- needs(X, squirrel).",
        "description": "If something needs the squirrel then it is green."
    },
    {
        "id": 2102,
        "statement": "needs(X, bald_eagle) :- needs(X, dog).",
        "description": "If something needs the dog then it needs the bald eagle."
    },
    {
        "id": 2103,
        "statement": "needs(X, dog) :- is(X, red).",
        "description": "If something is red then it needs the dog."
    },
    {
        "id": 2104,
        "statement": "likes(squirrel, cow).",
        "description": "The squirrel likes the cow."
    },
    {
        "id": 2105,
        "statement": "likes(squirrel, cow) :- needs(X, squirrel), visits(X, squirrel).",
        "description": "If someone needs the squirrel and they visit the squirrel then the squirrel likes the cow."
    },
    {
        "id": 2106,
        "statement": "needs(X, squirrel) :- needs(X, bear).",
        "description": "If someone needs the bear then they need the squirrel."
    },
    {
        "id": 2107,
        "statement": "likes(cow, bear) :- visits(X, cow), visits(X, dog).",
        "description": "If someone visits the cow and they visit the dog then the cow likes the bear."
    },
    {
        "id": 2108,
        "statement": "is(X, young) :- needs(X, cow), likes(X, cow).",
        "description": "If someone needs the cow and they like the cow then they are young."
    },
    {
        "id": 2109,
        "statement": "is(X, young) :- is(X, blue).",
        "description": "All blue people are young."
    },
    {
        "id": 2110,
        "statement": "is(cow, young) :- likes(X, cow).",
        "description": "If someone likes the cow then the cow is young."
    },
    {
        "id": 2111,
        "statement": "likes(X, squirrel) :- visits(X, bear).",
        "description": "If someone visits the bear then they like the squirrel."
    },
    {
        "id": 2112,
        "statement": "likes(X, dog) :- is(X, young).",
        "description": "If someone is young then they like the dog."
    },
    {
        "id": 2113,
        "statement": "is(squirrel, blue) :- likes(X, dog), needs(X, squirrel).",
        "description": "If someone likes the dog and they need the squirrel then the squirrel is blue."
    },
    {
        "id": 2114,
        "statement": "chases(cat, squirrel).",
        "description": "The cat chases the squirrel."
    },
    {
        "id": 2115,
        "statement": "is(cat, round) :- likes(X, cat), chases(cat, dog).",
        "description": "If someone likes the cat and the cat chases the dog then the cat is round."
    },
    {
        "id": 2116,
        "statement": "is(X, green) :- needs(X, squirrel).",
        "description": "If someone needs the squirrel then they are green."
    },
    {
        "id": 2117,
        "statement": "needs(X, squirrel) :- likes(X, cat), likes(cat, squirrel).",
        "description": "If someone likes the cat and the cat likes the squirrel then they need the squirrel."
    },
    {
        "id": 2118,
        "statement": "needs(X, cat) :- is(X, red), is(X, green).",
        "description": "If someone is red and green then they need the cat."
    },
    {
        "id": 2119,
        "statement": "likes(X, squirrel) :- likes(X, dog), chases(X, squirrel).",
        "description": "If someone likes the dog and they chase the squirrel then they like the squirrel."
    },
    {
        "id": 2120,
        "statement": "likes(X, squirrel) :- chases(X, dog).",
        "description": "If someone chases the dog then they like the squirrel."
    },
    {
        "id": 2121,
        "statement": "is(squirrel, green) :- needs(X, squirrel).",
        "description": "If someone needs the squirrel then the squirrel is green."
    },
    {
        "id": 2122,
        "statement": "chases(X, squirrel) :- chases(X, tiger).",
        "description": "If someone chases the tiger then they chase the squirrel."
    },
    {
        "id": 2123,
        "statement": "likes(dog, squirrel) :- needs(dog, cat), not is(dog, cold).",
        "description": "If the dog needs the cat and the dog is not cold then the dog likes the squirrel."
    },
    {
        "id": 2124,
        "statement": "is(rabbit, blue).",
        "description": "The rabbit is blue."
    },
    {
        "id": 2125,
        "statement": "visits(X, cat) :- eats(X, cat).",
        "description": "If something eats the cat then it visits the cat."
    },
    {
        "id": 2126,
        "statement": "eats(X, cat) :- is(X, young).",
        "description": "If something is young then it eats the cat."
    },
    {
        "id": 2127,
        "statement": "eats(cat, rabbit) :- eats(X, cat).",
        "description": "If something eats the cat then the cat eats the rabbit."
    },
    {
        "id": 2128,
        "statement": "eats(cat, bald_eagle) :- eats(rabbit, cat), not chases(rabbit, cat).",
        "description": "If the rabbit eats the cat and the rabbit does not chase the cat then the cat eats the bald eagle."
    },
    {
        "id": 2129,
        "statement": "chases(bald_eagle, cat) :- chases(X, bald_eagle), chases(bald_eagle, dog).",
        "description": "If something chases the bald eagle and the bald eagle chases the dog then the bald eagle chases the cat."
    },
    {
        "id": 2130,
        "statement": "is(bald_eagle, green) :- chases(X, bald_eagle).",
        "description": "If something chases the bald eagle then the bald eagle is green."
    },
    {
        "id": 2131,
        "statement": "is(cat, young) :- visits(X, cat).",
        "description": "If something visits the cat then the cat is young."
    },
    {
        "id": 2132,
        "statement": "is(X, cold) :- visits(X, rabbit), is(rabbit, young).",
        "description": "If something visits the rabbit and the rabbit is young then it is cold."
    },
    {
        "id": 2133,
        "statement": "is(X, rough) :- is(X, nice), not is(X, round).",
        "description": "If someone is nice and not round then they are rough."
    },
    {
        "id": 2134,
        "statement": "is(X, young) :- is(X, round).",
        "description": "All round people are young."
    },
    {
        "id": 2135,
        "statement": "is(X, cold) :- is(X, young).",
        "description": "Young people are cold."
    },
    {
        "id": 2136,
        "statement": "is(X, smart) :- is(X, rough), not is(X, round).",
        "description": "If someone is rough and not round then they are smart."
    },
    {
        "id": 2137,
        "statement": "is(harry, nice) :- is(harry, round), is(harry, young).",
        "description": "If Harry is round and Harry is young then Harry is nice."
    },
    {
        "id": 2138,
        "statement": "is(X, blue) :- is(X, cold).",
        "description": "Cold people are blue."
    },
    {
        "id": 2139,
        "statement": "is(X, nice) :- is(X, young), not is(X, round).",
        "description": "If someone is young and not round then they are nice."
    },
    {
        "id": 2140,
        "statement": "is(erin, smart) :- is(erin, rough), is(erin, cold).",
        "description": "If Erin is rough and Erin is cold then Erin is smart."
    },
    {
        "id": 2141,
        "statement": "needs(lion, rabbit).",
        "description": "The lion needs the rabbit."
    },
    {
        "id": 2142,
        "statement": "sees(lion, rabbit).",
        "description": "The lion sees the rabbit."
    },
    {
        "id": 2143,
        "statement": "needs(rabbit, lion).",
        "description": "The rabbit needs the lion."
    },
    {
        "id": 2144,
        "statement": "is(X, green) :- visits(X, mouse), is(mouse, round).",
        "description": "If something visits the mouse and the mouse is round then it is green."
    },
    {
        "id": 2145,
        "statement": "is(rabbit, kind) :- sees(X, rabbit).",
        "description": "If something sees the rabbit then the rabbit is kind."
    },
    {
        "id": 2146,
        "statement": "sees(X, mouse) :- is(X, young), is(X, cold).",
        "description": "If something is young and cold then it sees the mouse."
    },
    {
        "id": 2147,
        "statement": "is(X, young) :- needs(X, bear), is(X, cold).",
        "description": "If something needs the bear and it is cold then it is young."
    },
    {
        "id": 2148,
        "statement": "needs(X, lion) :- sees(X, bear).",
        "description": "If something sees the bear then it needs the lion."
    },
    {
        "id": 2149,
        "statement": "is(bear, round) :- is(lion, kind), sees(lion, bear).",
        "description": "If the lion is kind and the lion sees the bear then the bear is round."
    },
    {
        "id": 2150,
        "statement": "is(lion, round) :- is(X, kind), sees(X, lion).",
        "description": "If something is kind and it sees the lion then the lion is round."
    },
    {
        "id": 2151,
        "statement": "needs(X, bear) :- is(X, round), is(X, cold).",
        "description": "If something is round and cold then it needs the bear."
    },
    {
        "id": 2152,
        "statement": "is(X, young) :- is(X, rough).",
        "description": "If something is rough then it is young."
    },
    {
        "id": 2153,
        "statement": "is(X, cold) :- is(X, quiet).",
        "description": "Quiet things are cold."
    },
    {
        "id": 2154,
        "statement": "is(X, quiet) :- is(X, young), is(X, rough).",
        "description": "If something is young and rough then it is quiet."
    },
    {
        "id": 2155,
        "statement": "is(X, kind) :- is(X, quiet), is(X, cold).",
        "description": "Quiet, cold things are kind."
    },
    {
        "id": 2156,
        "statement": "is(X, red) :- is(X, smart).",
        "description": "Smart things are red."
    },
    {
        "id": 2157,
        "statement": "is(X, young) :- is(X, kind), is(X, quiet).",
        "description": "Kind, quiet things are young."
    },
    {
        "id": 2158,
        "statement": "is(fiona, rough) :- is(fiona, red), is(fiona, young).",
        "description": "If Fiona is red and Fiona is young then Fiona is rough."
    },
    {
        "id": 2159,
        "statement": "is(X, white) :- is(X, smart).",
        "description": "If someone is smart then they are white."
    },
    {
        "id": 2160,
        "statement": "is(X, red) :- is(X, nice), is(X, white).",
        "description": "If someone is nice and white then they are red."
    },
    {
        "id": 2161,
        "statement": "is(X, nice) :- is(X, smart), is(X, white).",
        "description": "All smart, white people are nice."
    },
    {
        "id": 2162,
        "statement": "is(X, blue) :- is(X, nice), not is(X, smart).",
        "description": "If someone is nice and not smart then they are blue."
    },
    {
        "id": 2163,
        "statement": "is(X, kind) :- is(X, rough), is(X, red).",
        "description": "All rough, red people are kind."
    },
    {
        "id": 2164,
        "statement": "is(X, rough) :- is(X, red).",
        "description": "Red people are rough."
    },
    {
        "id": 2165,
        "statement": "needs(X, dog) :- is(X, big), is(X, green).",
        "description": "If someone is big and green then they need the dog."
    },
    {
        "id": 2166,
        "statement": "chases(X, lion) :- eats(X, dog), needs(dog, bald_eagle).",
        "description": "If someone eats the dog and the dog needs the bald eagle then they chase the lion."
    },
    {
        "id": 2167,
        "statement": "eats(X, dog) :- is(X, big).",
        "description": "If someone is big then they eat the dog."
    },
    {
        "id": 2168,
        "statement": "is(X, kind) :- chases(X, cow), not is(X, green).",
        "description": "If someone chases the cow and they are not green then they are kind."
    },
    {
        "id": 2169,
        "statement": "needs(dog, bald_eagle) :- eats(X, dog).",
        "description": "If someone eats the dog then the dog needs the bald eagle."
    },
    {
        "id": 2170,
        "statement": "eats(lion, dog) :- chases(dog, lion).",
        "description": "If the dog chases the lion then the lion eats the dog."
    },
    {
        "id": 2171,
        "statement": "chases(dog, lion) :- chases(X, dog).",
        "description": "If someone chases the dog then the dog chases the lion."
    },
    {
        "id": 2172,
        "statement": "is(bald_eagle, blue) :- chases(X, bald_eagle), not eats(X, dog).",
        "description": "If someone chases the bald eagle and they do not eat the dog then the bald eagle is blue."
    },
    {
        "id": 2173,
        "statement": "eats(bald_eagle, rabbit).",
        "description": "The bald eagle eats the rabbit."
    },
    {
        "id": 2174,
        "statement": "needs(bald_eagle, tiger).",
        "description": "The bald eagle needs the tiger."
    },
    {
        "id": 2175,
        "statement": "needs(rabbit, bear) :- chases(X, rabbit), is(rabbit, kind).",
        "description": "If something chases the rabbit and the rabbit is kind then the rabbit needs the bear."
    },
    {
        "id": 2176,
        "statement": "is(rabbit, kind) :- eats(X, bald_eagle), needs(bald_eagle, rabbit).",
        "description": "If something eats the bald eagle and the bald eagle needs the rabbit then the rabbit is kind."
    },
    {
        "id": 2177,
        "statement": "is(X, rough) :- chases(X, rabbit), chases(rabbit, tiger).",
        "description": "If something chases the rabbit and the rabbit chases the tiger then it is rough."
    },
    {
        "id": 2178,
        "statement": "is(X, young) :- eats(X, rabbit).",
        "description": "If something eats the rabbit then it is young."
    },
    {
        "id": 2179,
        "statement": "needs(X, rabbit) :- is(X, kind).",
        "description": "If something is kind then it needs the rabbit."
    },
    {
        "id": 2180,
        "statement": "is(X, quiet) :- is(X, young).",
        "description": "Young people are quiet."
    },
    {
        "id": 2181,
        "statement": "is(X, rough) :- is(X, cold).",
        "description": "If someone is cold then they are rough."
    },
    {
        "id": 2182,
        "statement": "is(X, cold) :- is(X, young), is(X, kind).",
        "description": "Young, kind people are cold."
    },
    {
        "id": 2183,
        "statement": "is(X, white) :- is(X, round), is(X, rough).",
        "description": "All round, rough people are white."
    },
    {
        "id": 2184,
        "statement": "is(X, young) :- is(X, rough).",
        "description": "All rough people are young."
    },
    {
        "id": 2185,
        "statement": "eats(bear, cow).",
        "description": "The bear eats the cow."
    },
    {
        "id": 2186,
        "statement": "likes(cat, cow).",
        "description": "The cat likes the cow."
    },
    {
        "id": 2187,
        "statement": "eats(cow, squirrel).",
        "description": "The cow eats the squirrel."
    },
    {
        "id": 2188,
        "statement": "visits(squirrel, bear).",
        "description": "The squirrel visits the bear."
    },
    {
        "id": 2189,
        "statement": "visits(X, cow) :- eats(X, squirrel), not likes(X, squirrel).",
        "description": "If something eats the squirrel and it does not like the squirrel then it visits the cow."
    },
    {
        "id": 2190,
        "statement": "visits(cat, squirrel) :- eats(X, cat).",
        "description": "If something eats the cat then the cat visits the squirrel."
    },
    {
        "id": 2191,
        "statement": "visits(X, squirrel) :- visits(X, cat).",
        "description": "If something visits the cat then it visits the squirrel."
    },
    {
        "id": 2192,
        "statement": "visits(X, squirrel) :- is(X, blue).",
        "description": "If something is blue then it visits the squirrel."
    },
    {
        "id": 2193,
        "statement": "is(X, rough) :- is(X, young), not likes(X, cat).",
        "description": "If something is young and it does not like the cat then it is rough."
    },
    {
        "id": 2194,
        "statement": "is(X, blue) :- is(X, rough).",
        "description": "Rough things are blue."
    },
    {
        "id": 2195,
        "statement": "eats(squirrel, cow) :- visits(X, squirrel).",
        "description": "If something visits the squirrel then the squirrel eats the cow."
    },
    {
        "id": 2196,
        "statement": "is(cow, young) :- visits(X, squirrel), not visits(X, cow).",
        "description": "If something visits the squirrel and it does not visit the cow then the cow is young."
    },
    {
        "id": 2197,
        "statement": "chases(bald_eagle, squirrel).",
        "description": "The bald eagle chases the squirrel."
    },
    {
        "id": 2198,
        "statement": "likes(bald_eagle, mouse).",
        "description": "The bald eagle likes the mouse."
    },
    {
        "id": 2199,
        "statement": "likes(bear, bald_eagle).",
        "description": "The bear likes the bald eagle."
    },
    {
        "id": 2200,
        "statement": "needs(bear, mouse).",
        "description": "The bear needs the mouse."
    },
    {
        "id": 2201,
        "statement": "chases(mouse, squirrel).",
        "description": "The mouse chases the squirrel."
    },
    {
        "id": 2202,
        "statement": "is(bald_eagle, big) :- chases(X, bald_eagle), chases(X, squirrel).",
        "description": "If someone chases the bald eagle and they chase the squirrel then the bald eagle is big."
    },
    {
        "id": 2203,
        "statement": "chases(X, mouse) :- is(X, kind), needs(X, mouse).",
        "description": "If someone is kind and they need the mouse then they chase the mouse."
    },
    {
        "id": 2204,
        "statement": "chases(mouse, bear) :- chases(X, mouse).",
        "description": "If someone chases the mouse then the mouse chases the bear."
    },
    {
        "id": 2205,
        "statement": "needs(squirrel, bear) :- needs(X, squirrel).",
        "description": "If someone needs the squirrel then the squirrel needs the bear."
    },
    {
        "id": 2206,
        "statement": "is(squirrel, young) :- likes(X, squirrel), chases(X, mouse).",
        "description": "If someone likes the squirrel and they chase the mouse then the squirrel is young."
    },
    {
        "id": 2207,
        "statement": "likes(X, bald_eagle) :- chases(X, bear).",
        "description": "If someone chases the bear then they like the bald eagle."
    },
    {
        "id": 2208,
        "statement": "needs(X, mouse) :- likes(X, bald_eagle).",
        "description": "If someone likes the bald eagle then they need the mouse."
    },
    {
        "id": 2209,
        "statement": "likes(bald_eagle, squirrel) :- needs(squirrel, bald_eagle), is(squirrel, big).",
        "description": "If the squirrel needs the bald eagle and the squirrel is big then the bald eagle likes the squirrel."
    },
    {
        "id": 2210,
        "statement": "needs(bald_eagle, dog).",
        "description": "The bald eagle needs the dog."
    },
    {
        "id": 2211,
        "statement": "visits(bear, bald_eagle).",
        "description": "The bear visits the bald eagle."
    },
    {
        "id": 2212,
        "statement": "needs(mouse, bear).",
        "description": "The mouse needs the bear."
    },
    {
        "id": 2213,
        "statement": "is(bald_eagle, big) :- is(dog, big), visits(dog, bald_eagle).",
        "description": "If the dog is big and the dog visits the bald eagle then the bald eagle is big."
    },
    {
        "id": 2214,
        "statement": "needs(bald_eagle, dog) :- sees(bald_eagle, mouse), needs(mouse, bald_eagle).",
        "description": "If the bald eagle sees the mouse and the mouse needs the bald eagle then the bald eagle needs the dog."
    },
    {
        "id": 2215,
        "statement": "is(X, nice) :- visits(X, dog).",
        "description": "If something visits the dog then it is nice."
    },
    {
        "id": 2216,
        "statement": "visits(X, mouse) :- needs(X, bald_eagle).",
        "description": "If something needs the bald eagle then it visits the mouse."
    },
    {
        "id": 2217,
        "statement": "sees(bald_eagle, dog) :- visits(bald_eagle, bear), is(bear, big).",
        "description": "If the bald eagle visits the bear and the bear is big then the bald eagle sees the dog."
    },
    {
        "id": 2218,
        "statement": "is(bald_eagle, young) :- is(bald_eagle, cold).",
        "description": "If the bald eagle is cold then the bald eagle is young."
    },
    {
        "id": 2219,
        "statement": "needs(X, bald_eagle) :- is(X, green).",
        "description": "If something is green then it needs the bald eagle."
    },
    {
        "id": 2220,
        "statement": "is(X, green) :- needs(X, dog), visits(dog, mouse).",
        "description": "If something needs the dog and the dog visits the mouse then it is green."
    },
    {
        "id": 2221,
        "statement": "is(mouse, cold) :- is(X, cold), sees(X, mouse).",
        "description": "If something is cold and it sees the mouse then the mouse is cold."
    },
    {
        "id": 2222,
        "statement": "is(X, smart) :- is(X, kind).",
        "description": "Kind things are smart."
    },
    {
        "id": 2223,
        "statement": "is(dave, green) :- is(dave, cold), is(dave, quiet).",
        "description": "If Dave is cold and Dave is quiet then Dave is green."
    },
    {
        "id": 2224,
        "statement": "is(harry, furry) :- is(harry, cold), is(harry, smart).",
        "description": "If Harry is cold and Harry is smart then Harry is furry."
    },
    {
        "id": 2225,
        "statement": "is(harry, cold) :- is(harry, big), is(harry, quiet).",
        "description": "If Harry is big and Harry is quiet then Harry is cold."
    },
    {
        "id": 2226,
        "statement": "is(X, smart) :- is(X, furry), is(X, big).",
        "description": "Furry, big things are smart."
    },
    {
        "id": 2227,
        "statement": "is(X, quiet) :- is(X, green).",
        "description": "If something is green then it is quiet."
    },
    {
        "id": 2228,
        "statement": "is(X, kind) :- is(X, cold).",
        "description": "All cold things are kind."
    },
    {
        "id": 2229,
        "statement": "is(X, green) :- is(X, furry).",
        "description": "If something is furry then it is green."
    },
    {
        "id": 2230,
        "statement": "chases(cat, bear).",
        "description": "The cat chases the bear."
    },
    {
        "id": 2231,
        "statement": "eats(X, cat) :- chases(X, cow).",
        "description": "If something chases the cow then it eats the cat."
    },
    {
        "id": 2232,
        "statement": "eats(dog, bear) :- visits(X, dog).",
        "description": "If something visits the dog then the dog eats the bear."
    },
    {
        "id": 2233,
        "statement": "chases(dog, cow) :- eats(cat, dog).",
        "description": "If the cat eats the dog then the dog chases the cow."
    },
    {
        "id": 2234,
        "statement": "eats(X, dog) :- eats(X, cat).",
        "description": "If something eats the cat then it eats the dog."
    },
    {
        "id": 2235,
        "statement": "eats(cow, bear) :- chases(X, cow).",
        "description": "If something chases the cow then the cow eats the bear."
    },
    {
        "id": 2236,
        "statement": "chases(cow, bear) :- eats(X, cow).",
        "description": "If something eats the cow then the cow chases the bear."
    },
    {
        "id": 2237,
        "statement": "is(X, green) :- is(X, kind).",
        "description": "Kind things are green."
    },
    {
        "id": 2238,
        "statement": "is(X, kind) :- is(X, red), is(X, nice).",
        "description": "Red, nice things are kind."
    },
    {
        "id": 2239,
        "statement": "is(X, smart) :- is(X, kind), is(X, green).",
        "description": "All kind, green things are smart."
    },
    {
        "id": 2240,
        "statement": "is(X, quiet) :- is(X, red), is(X, smart).",
        "description": "Red, smart things are quiet."
    },
    {
        "id": 2241,
        "statement": "needs(squirrel, lion) :- sees(rabbit, squirrel).",
        "description": "If the rabbit sees the squirrel then the squirrel needs the lion."
    },
    {
        "id": 2242,
        "statement": "visits(X, lion) :- visits(X, squirrel), sees(squirrel, rabbit).",
        "description": "If someone visits the squirrel and the squirrel sees the rabbit then they visit the lion."
    },
    {
        "id": 2243,
        "statement": "sees(X, squirrel) :- is(X, green).",
        "description": "If someone is green then they see the squirrel."
    },
    {
        "id": 2244,
        "statement": "needs(X, lion) :- is(X, green), needs(X, rabbit).",
        "description": "If someone is green and they need the rabbit then they need the lion."
    },
    {
        "id": 2245,
        "statement": "is(rabbit, blue) :- visits(X, rabbit).",
        "description": "If someone visits the rabbit then the rabbit is blue."
    },
    {
        "id": 2246,
        "statement": "sees(X, cat) :- is(X, young).",
        "description": "If someone is young then they see the cat."
    },
    {
        "id": 2247,
        "statement": "likes(bear, cat).",
        "description": "The bear likes the cat."
    },
    {
        "id": 2248,
        "statement": "likes(tiger, cat).",
        "description": "The tiger likes the cat."
    },
    {
        "id": 2249,
        "statement": "likes(X, bear) :- is(X, red).",
        "description": "If someone is red then they like the bear."
    },
    {
        "id": 2250,
        "statement": "likes(cat, bear) :- likes(X, cat).",
        "description": "If someone likes the cat then the cat likes the bear."
    },
    {
        "id": 2251,
        "statement": "sees(bear, tiger) :- is(X, nice), likes(X, bear).",
        "description": "If someone is nice and they like the bear then the bear sees the tiger."
    },
    {
        "id": 2252,
        "statement": "sees(X, cat) :- likes(X, bear).",
        "description": "If someone likes the bear then they see the cat."
    },
    {
        "id": 2253,
        "statement": "is(X, nice) :- is(X, red), sees(X, cat).",
        "description": "If someone is red and they see the cat then they are nice."
    },
    {
        "id": 2254,
        "statement": "sees(X, bear) :- likes(X, lion).",
        "description": "If someone likes the lion then they see the bear."
    },
    {
        "id": 2255,
        "statement": "sees(bear, mouse).",
        "description": "The bear sees the mouse."
    },
    {
        "id": 2256,
        "statement": "likes(cow, bear).",
        "description": "The cow likes the bear."
    },
    {
        "id": 2257,
        "statement": "eats(mouse, bear).",
        "description": "The mouse eats the bear."
    },
    {
        "id": 2258,
        "statement": "sees(X, dog) :- is(X, cold).",
        "description": "If someone is cold then they see the dog."
    },
    {
        "id": 2259,
        "statement": "sees(X, bear) :- is(X, young).",
        "description": "If someone is young then they see the bear."
    },
    {
        "id": 2260,
        "statement": "is(X, cold) :- likes(X, bear).",
        "description": "If someone likes the bear then they are cold."
    },
    {
        "id": 2261,
        "statement": "eats(cow, mouse) :- sees(X, cow).",
        "description": "If someone sees the cow then the cow eats the mouse."
    },
    {
        "id": 2262,
        "statement": "is(X, big) :- is(X, young), sees(X, mouse).",
        "description": "If someone is young and they see the mouse then they are big."
    },
    {
        "id": 2263,
        "statement": "likes(dog, bear) :- is(X, cold), sees(X, dog).",
        "description": "If someone is cold and they see the dog then the dog likes the bear."
    },
    {
        "id": 2264,
        "statement": "sees(dog, bear) :- likes(X, dog).",
        "description": "If someone likes the dog then the dog sees the bear."
    },
    {
        "id": 2265,
        "statement": "sees(bear, dog) :- is(bear, cold).",
        "description": "If the bear is cold then the bear sees the dog."
    },
    {
        "id": 2266,
        "statement": "sees(mouse, lion).",
        "description": "The mouse sees the lion."
    },
    {
        "id": 2267,
        "statement": "sees(rabbit, mouse).",
        "description": "The rabbit sees the mouse."
    },
    {
        "id": 2268,
        "statement": "sees(rabbit, squirrel).",
        "description": "The rabbit sees the squirrel."
    },
    {
        "id": 2269,
        "statement": "sees(squirrel, rabbit).",
        "description": "The squirrel sees the rabbit."
    },
    {
        "id": 2270,
        "statement": "sees(X, squirrel) :- eats(X, squirrel).",
        "description": "If something eats the squirrel then it sees the squirrel."
    },
    {
        "id": 2271,
        "statement": "eats(X, mouse) :- sees(X, mouse).",
        "description": "If something sees the mouse then it eats the mouse."
    },
    {
        "id": 2272,
        "statement": "is(X, green) :- sees(X, lion).",
        "description": "If something sees the lion then it is green."
    },
    {
        "id": 2273,
        "statement": "eats(squirrel, rabbit) :- eats(X, squirrel), is(squirrel, nice).",
        "description": "If something eats the squirrel and the squirrel is nice then the squirrel eats the rabbit."
    },
    {
        "id": 2274,
        "statement": "eats(squirrel, lion) :- visits(lion, squirrel).",
        "description": "If the lion visits the squirrel then the squirrel eats the lion."
    },
    {
        "id": 2275,
        "statement": "is(lion, nice) :- is(lion, green), eats(lion, squirrel).",
        "description": "If the lion is green and the lion eats the squirrel then the lion is nice."
    },
    {
        "id": 2276,
        "statement": "is(lion, green) :- sees(X, mouse), visits(X, lion).",
        "description": "If something sees the mouse and it visits the lion then the lion is green."
    },
    {
        "id": 2277,
        "statement": "sees(X, mouse) :- is(X, nice), is(X, young).",
        "description": "If something is nice and young then it sees the mouse."
    },
    {
        "id": 2278,
        "statement": "is(X, kind) :- is(X, cold), is(X, blue).",
        "description": "Cold, blue things are kind."
    },
    {
        "id": 2279,
        "statement": "is(X, blue) :- is(X, young), is(X, cold).",
        "description": "All young, cold things are blue."
    },
    {
        "id": 2280,
        "statement": "is(X, young) :- is(X, red).",
        "description": "All red things are young."
    },
    {
        "id": 2281,
        "statement": "is(X, round) :- is(X, cold), is(X, kind).",
        "description": "If something is cold and kind then it is round."
    },
    {
        "id": 2282,
        "statement": "is(X, round) :- is(X, white), is(X, young).",
        "description": "All white, young things are round."
    },
    {
        "id": 2283,
        "statement": "is(bob, white) :- is(bob, cold), not is(bob, kind).",
        "description": "If Bob is cold and Bob is not kind then Bob is white."
    },
    {
        "id": 2284,
        "statement": "is(X, blue) :- is(X, nice).",
        "description": "Nice people are blue."
    },
    {
        "id": 2285,
        "statement": "is(X, young) :- is(X, white), is(X, rough).",
        "description": "White, rough people are young."
    },
    {
        "id": 2286,
        "statement": "is(X, white) :- is(X, blue).",
        "description": "All blue people are white."
    },
    {
        "id": 2287,
        "statement": "is(gary, white) :- is(gary, young).",
        "description": "If Gary is young then Gary is white."
    },
    {
        "id": 2288,
        "statement": "is(X, big) :- is(X, white), is(X, young).",
        "description": "If someone is white and young then they are big."
    },
    {
        "id": 2289,
        "statement": "is(X, big) :- is(X, red).",
        "description": "If someone is red then they are big."
    },
    {
        "id": 2290,
        "statement": "is(X, big) :- is(X, red).",
        "description": "Red people are big."
    },
    {
        "id": 2291,
        "statement": "is(X, nice) :- is(X, big).",
        "description": "If someone is big then they are nice."
    },
    {
        "id": 2292,
        "statement": "chases(dog, bear).",
        "description": "The dog chases the bear."
    },
    {
        "id": 2293,
        "statement": "eats(squirrel, bear).",
        "description": "The squirrel eats the bear."
    },
    {
        "id": 2294,
        "statement": "is(X, big) :- is(X, cold).",
        "description": "Cold things are big."
    },
    {
        "id": 2295,
        "statement": "is(mouse, cold) :- chases(X, mouse).",
        "description": "If something chases the mouse then the mouse is cold."
    },
    {
        "id": 2296,
        "statement": "eats(dog, mouse) :- eats(X, dog), chases(X, dog).",
        "description": "If something eats the dog and it chases the dog then the dog eats the mouse."
    },
    {
        "id": 2297,
        "statement": "needs(X, squirrel) :- is(X, nice).",
        "description": "If something is nice then it needs the squirrel."
    },
    {
        "id": 2298,
        "statement": "eats(X, bear) :- is(X, kind).",
        "description": "If something is kind then it eats the bear."
    },
    {
        "id": 2299,
        "statement": "chases(cow, bald_eagle).",
        "description": "The cow chases the bald eagle."
    },
    {
        "id": 2300,
        "statement": "chases(cow, bald_eagle) :- likes(X, cow), is(X, green).",
        "description": "If someone likes the cow and they are green then the cow chases the bald eagle."
    },
    {
        "id": 2301,
        "statement": "is(X, young) :- likes(X, bald_eagle).",
        "description": "If someone likes the bald eagle then they are young."
    },
    {
        "id": 2302,
        "statement": "is(X, kind) :- chases(X, bear).",
        "description": "If someone chases the bear then they are kind."
    },
    {
        "id": 2303,
        "statement": "likes(X, rabbit) :- likes(X, bear).",
        "description": "If someone likes the bear then they like the rabbit."
    },
    {
        "id": 2304,
        "statement": "likes(rabbit, bald_eagle) :- needs(X, rabbit).",
        "description": "If someone needs the rabbit then the rabbit likes the bald eagle."
    },
    {
        "id": 2305,
        "statement": "needs(X, bald_eagle) :- is(X, young).",
        "description": "If someone is young then they need the bald eagle."
    },
    {
        "id": 2306,
        "statement": "chases(X, bald_eagle) :- is(X, nice).",
        "description": "If someone is nice then they chase the bald eagle."
    },
    {
        "id": 2307,
        "statement": "needs(bald_eagle, rabbit) :- needs(cow, bald_eagle).",
        "description": "If the cow needs the bald eagle then the bald eagle needs the rabbit."
    },
    {
        "id": 2308,
        "statement": "needs(X, bald_eagle) :- is(X, nice), is(X, young).",
        "description": "If someone is nice and young then they need the bald eagle."
    },
    {
        "id": 2309,
        "statement": "visits(bald_eagle, squirrel).",
        "description": "The bald eagle visits the squirrel."
    },
    {
        "id": 2310,
        "statement": "eats(cat, bald_eagle).",
        "description": "The cat eats the bald eagle."
    },
    {
        "id": 2311,
        "statement": "likes(cat, bald_eagle).",
        "description": "The cat likes the bald eagle."
    },
    {
        "id": 2312,
        "statement": "likes(dog, squirrel).",
        "description": "The dog likes the squirrel."
    },
    {
        "id": 2313,
        "statement": "likes(X, cat) :- visits(X, squirrel).",
        "description": "If someone visits the squirrel then they like the cat."
    },
    {
        "id": 2314,
        "statement": "likes(X, dog) :- visits(X, cat).",
        "description": "If someone visits the cat then they like the dog."
    },
    {
        "id": 2315,
        "statement": "is(X, kind) :- likes(X, dog), not eats(dog, bald_eagle).",
        "description": "If someone likes the dog and the dog does not eat the bald eagle then they are kind."
    },
    {
        "id": 2316,
        "statement": "eats(X, squirrel) :- likes(X, bald_eagle), is(X, big).",
        "description": "If someone likes the bald eagle and they are big then they eat the squirrel."
    },
    {
        "id": 2317,
        "statement": "visits(dog, cat) :- visits(cat, dog).",
        "description": "If the cat visits the dog then the dog visits the cat."
    },
    {
        "id": 2318,
        "statement": "eats(bald_eagle, cat) :- likes(X, bald_eagle).",
        "description": "If someone likes the bald eagle then the bald eagle eats the cat."
    },
    {
        "id": 2319,
        "statement": "eats(X, dog) :- is(X, nice), is(X, kind).",
        "description": "If someone is nice and kind then they eat the dog."
    },
    {
        "id": 2320,
        "statement": "is(X, big) :- is(X, kind).",
        "description": "All kind people are big."
    },
    {
        "id": 2321,
        "statement": "likes(squirrel, cat) :- eats(X, squirrel), eats(squirrel, dog).",
        "description": "If someone eats the squirrel and the squirrel eats the dog then the squirrel likes the cat."
    },
    {
        "id": 2322,
        "statement": "likes(lion, bald_eagle).",
        "description": "The lion likes the bald eagle."
    },
    {
        "id": 2323,
        "statement": "sees(lion, bald_eagle).",
        "description": "The lion sees the bald eagle."
    },
    {
        "id": 2324,
        "statement": "needs(squirrel, lion).",
        "description": "The squirrel needs the lion."
    },
    {
        "id": 2325,
        "statement": "sees(X, tiger) :- likes(X, bald_eagle), needs(X, bald_eagle).",
        "description": "If someone likes the bald eagle and they need the bald eagle then they see the tiger."
    },
    {
        "id": 2326,
        "statement": "is(X, red) :- sees(X, tiger), is(tiger, cold).",
        "description": "If someone sees the tiger and the tiger is cold then they are red."
    },
    {
        "id": 2327,
        "statement": "likes(X, bald_eagle) :- likes(X, lion).",
        "description": "If someone likes the lion then they like the bald eagle."
    },
    {
        "id": 2328,
        "statement": "is(bald_eagle, cold) :- likes(tiger, squirrel), likes(tiger, bald_eagle).",
        "description": "If the tiger likes the squirrel and the tiger likes the bald eagle then the bald eagle is cold."
    },
    {
        "id": 2329,
        "statement": "likes(X, squirrel) :- sees(X, tiger).",
        "description": "If someone sees the tiger then they like the squirrel."
    },
    {
        "id": 2330,
        "statement": "sees(X, tiger) :- sees(X, bald_eagle).",
        "description": "If someone sees the bald eagle then they see the tiger."
    },
    {
        "id": 2331,
        "statement": "is(tiger, big) :- needs(bald_eagle, tiger), sees(tiger, bald_eagle).",
        "description": "If the bald eagle needs the tiger and the tiger sees the bald eagle then the tiger is big."
    },
    {
        "id": 2332,
        "statement": "likes(X, lion) :- likes(X, squirrel).",
        "description": "If someone likes the squirrel then they like the lion."
    },
    {
        "id": 2333,
        "statement": "is(tiger, cold) :- sees(squirrel, bald_eagle), sees(bald_eagle, tiger).",
        "description": "If the squirrel sees the bald eagle and the bald eagle sees the tiger then the tiger is cold."
    },
    {
        "id": 2334,
        "statement": "is(X, round) :- is(X, green), is(X, big).",
        "description": "All green, big things are round."
    },
    {
        "id": 2335,
        "statement": "is(X, cold) :- is(X, nice).",
        "description": "All nice things are cold."
    },
    {
        "id": 2336,
        "statement": "is(X, cold) :- is(X, rough), is(X, red).",
        "description": "Rough, red things are cold."
    },
    {
        "id": 2337,
        "statement": "is(X, cold) :- is(X, red).",
        "description": "If something is red then it is cold."
    },
    {
        "id": 2338,
        "statement": "is(X, red) :- is(X, round), is(X, rough).",
        "description": "Round, rough things are red."
    },
    {
        "id": 2339,
        "statement": "is(X, rough) :- is(X, round), is(X, big).",
        "description": "All round, big things are rough."
    },
    {
        "id": 2340,
        "statement": "visits(bald_eagle, lion).",
        "description": "The bald eagle visits the lion."
    },
    {
        "id": 2341,
        "statement": "visits(cow, lion).",
        "description": "The cow visits the lion."
    },
    {
        "id": 2342,
        "statement": "sees(tiger, lion) :- visits(lion, tiger).",
        "description": "If the lion visits the tiger then the tiger sees the lion."
    },
    {
        "id": 2343,
        "statement": "chases(X, cow) :- sees(X, cow), sees(cow, tiger).",
        "description": "If someone sees the cow and the cow sees the tiger then they chase the cow."
    },
    {
        "id": 2344,
        "statement": "sees(X, tiger) :- is(X, young).",
        "description": "If someone is young then they see the tiger."
    },
    {
        "id": 2345,
        "statement": "sees(tiger, cow) :- sees(X, tiger).",
        "description": "If someone sees the tiger then the tiger sees the cow."
    },
    {
        "id": 2346,
        "statement": "visits(cow, lion) :- chases(X, cow).",
        "description": "If someone chases the cow then the cow visits the lion."
    },
    {
        "id": 2347,
        "statement": "chases(tiger, cow) :- sees(X, bald_eagle), chases(bald_eagle, tiger).",
        "description": "If someone sees the bald eagle and the bald eagle chases the tiger then the tiger chases the cow."
    },
    {
        "id": 2348,
        "statement": "is(cow, nice) :- chases(X, cow).",
        "description": "If someone chases the cow then the cow is nice."
    },
    {
        "id": 2349,
        "statement": "visits(lion, tiger) :- chases(X, lion), is(lion, big).",
        "description": "If someone chases the lion and the lion is big then the lion visits the tiger."
    },
    {
        "id": 2350,
        "statement": "is(X, big) :- is(X, furry).",
        "description": "Furry things are big."
    },
    {
        "id": 2351,
        "statement": "is(X, furry) :- is(X, big).",
        "description": "Big things are furry."
    },
    {
        "id": 2352,
        "statement": "is(X, red) :- is(X, big), is(X, furry).",
        "description": "All big, furry things are red."
    },
    {
        "id": 2353,
        "statement": "is(X, rough) :- is(X, smart).",
        "description": "If something is smart then it is rough."
    },
    {
        "id": 2354,
        "statement": "is(X, big) :- is(X, furry), is(X, kind).",
        "description": "All furry, kind things are big."
    },
    {
        "id": 2355,
        "statement": "is(X, furry) :- is(X, young).",
        "description": "All young things are furry."
    },
    {
        "id": 2356,
        "statement": "likes(rabbit, dog).",
        "description": "The rabbit likes the dog."
    },
    {
        "id": 2357,
        "statement": "likes(rabbit, squirrel).",
        "description": "The rabbit likes the squirrel."
    },
    {
        "id": 2358,
        "statement": "is(squirrel, big).",
        "description": "The squirrel is big."
    },
    {
        "id": 2359,
        "statement": "visits(squirrel, bald_eagle).",
        "description": "The squirrel visits the bald eagle."
    },
    {
        "id": 2360,
        "statement": "is(bald_eagle, red) :- chases(X, bald_eagle).",
        "description": "If someone chases the bald eagle then the bald eagle is red."
    },
    {
        "id": 2361,
        "statement": "is(dog, nice) :- visits(X, dog), visits(X, squirrel).",
        "description": "If someone visits the dog and they visit the squirrel then the dog is nice."
    },
    {
        "id": 2362,
        "statement": "visits(X, squirrel) :- is(X, nice), not is(X, kind).",
        "description": "If someone is nice and not kind then they visit the squirrel."
    },
    {
        "id": 2363,
        "statement": "chases(X, rabbit) :- likes(X, dog), visits(dog, squirrel).",
        "description": "If someone likes the dog and the dog visits the squirrel then they chase the rabbit."
    },
    {
        "id": 2364,
        "statement": "is(rabbit, nice) :- chases(X, rabbit).",
        "description": "If someone chases the rabbit then the rabbit is nice."
    },
    {
        "id": 2365,
        "statement": "likes(dog, bald_eagle) :- chases(X, dog), not is(X, red).",
        "description": "If someone chases the dog and they are not red then the dog likes the bald eagle."
    },
    {
        "id": 2366,
        "statement": "visits(X, rabbit) :- likes(X, bald_eagle), not visits(X, dog).",
        "description": "If someone likes the bald eagle and they do not visit the dog then they visit the rabbit."
    },
    {
        "id": 2367,
        "statement": "is(X, furry) :- is(X, red), is(X, round).",
        "description": "If something is red and round then it is furry."
    },
    {
        "id": 2368,
        "statement": "is(X, kind) :- is(X, furry), is(X, blue).",
        "description": "All furry, blue things are kind."
    },
    {
        "id": 2369,
        "statement": "is(bob, white) :- is(bob, round).",
        "description": "If Bob is round then Bob is white."
    },
    {
        "id": 2370,
        "statement": "is(X, blue) :- is(X, kind), is(X, red).",
        "description": "If something is kind and red then it is blue."
    },
    {
        "id": 2371,
        "statement": "is(X, white) :- is(X, red).",
        "description": "Red things are white."
    },
    {
        "id": 2372,
        "statement": "is(X, round) :- is(X, white), is(X, red).",
        "description": "White, red things are round."
    },
    {
        "id": 2373,
        "statement": "is(X, round) :- is(X, quiet), is(X, young).",
        "description": "Quiet, young things are round."
    },
    {
        "id": 2374,
        "statement": "is(X, white) :- is(X, nice).",
        "description": "All nice things are white."
    },
    {
        "id": 2375,
        "statement": "is(X, cold) :- is(X, young).",
        "description": "All young things are cold."
    },
    {
        "id": 2376,
        "statement": "is(X, nice) :- is(X, young), is(X, red).",
        "description": "All young, red things are nice."
    },
    {
        "id": 2377,
        "statement": "is(erin, nice) :- is(erin, young).",
        "description": "If Erin is young then Erin is nice."
    },
    {
        "id": 2378,
        "statement": "is(charlie, red) :- is(charlie, cold).",
        "description": "If Charlie is cold then Charlie is red."
    },
    {
        "id": 2379,
        "statement": "needs(dog, squirrel).",
        "description": "The dog needs the squirrel."
    },
    {
        "id": 2380,
        "statement": "likes(squirrel, dog).",
        "description": "The squirrel likes the dog."
    },
    {
        "id": 2381,
        "statement": "needs(squirrel, bear).",
        "description": "The squirrel needs the bear."
    },
    {
        "id": 2382,
        "statement": "needs(squirrel, dog) :- eats(squirrel, dog).",
        "description": "If the squirrel eats the dog then the squirrel needs the dog."
    },
    {
        "id": 2383,
        "statement": "needs(X, squirrel) :- is(X, green), not is(X, kind).",
        "description": "If something is green and not kind then it needs the squirrel."
    },
    {
        "id": 2384,
        "statement": "needs(X, squirrel) :- eats(X, squirrel).",
        "description": "If something eats the squirrel then it needs the squirrel."
    },
    {
        "id": 2385,
        "statement": "eats(lion, squirrel) :- is(dog, blue), needs(dog, lion).",
        "description": "If the dog is blue and the dog needs the lion then the lion eats the squirrel."
    },
    {
        "id": 2386,
        "statement": "likes(bear, squirrel) :- is(X, nice), needs(X, bear).",
        "description": "If something is nice and it needs the bear then the bear likes the squirrel."
    },
    {
        "id": 2387,
        "statement": "eats(dog, bear) :- eats(X, dog).",
        "description": "If something eats the dog then the dog eats the bear."
    },
    {
        "id": 2388,
        "statement": "is(X, nice) :- likes(X, lion), is(X, green).",
        "description": "If something likes the lion and it is green then it is nice."
    },
    {
        "id": 2389,
        "statement": "eats(X, dog) :- likes(X, squirrel).",
        "description": "If something likes the squirrel then it eats the dog."
    },
    {
        "id": 2390,
        "statement": "likes(X, squirrel) :- eats(X, bear).",
        "description": "If something eats the bear then it likes the squirrel."
    },
    {
        "id": 2391,
        "statement": "needs(bear, cat).",
        "description": "The bear needs the cat."
    },
    {
        "id": 2392,
        "statement": "needs(cat, bear).",
        "description": "The cat needs the bear."
    },
    {
        "id": 2393,
        "statement": "sees(cow, bear).",
        "description": "The cow sees the bear."
    },
    {
        "id": 2394,
        "statement": "sees(cat, squirrel) :- sees(X, bear), eats(bear, cat).",
        "description": "If someone sees the bear and the bear eats the cat then the cat sees the squirrel."
    },
    {
        "id": 2395,
        "statement": "eats(cat, cow) :- not needs(squirrel, cat).",
        "description": "If the squirrel does not need the cat then the cat eats the cow."
    },
    {
        "id": 2396,
        "statement": "is(X, cold) :- needs(X, cow).",
        "description": "If someone needs the cow then they are cold."
    },
    {
        "id": 2397,
        "statement": "needs(X, bear) :- eats(X, squirrel), sees(X, bear).",
        "description": "If someone eats the squirrel and they see the bear then they need the bear."
    },
    {
        "id": 2398,
        "statement": "eats(cow, squirrel) :- needs(X, cow), needs(cow, cat).",
        "description": "If someone needs the cow and the cow needs the cat then the cow eats the squirrel."
    },
    {
        "id": 2399,
        "statement": "needs(X, squirrel) :- sees(X, cat), not sees(cat, squirrel).",
        "description": "If someone sees the cat and the cat does not see the squirrel then they need the squirrel."
    },
    {
        "id": 2400,
        "statement": "needs(X, cow) :- sees(X, bear), needs(bear, squirrel).",
        "description": "If someone sees the bear and the bear needs the squirrel then they need the cow."
    },
    {
        "id": 2401,
        "statement": "is(cow, green) :- is(X, nice), not needs(X, cow).",
        "description": "If someone is nice and they do not need the cow then the cow is green."
    },
    {
        "id": 2402,
        "statement": "eats(cow, rabbit).",
        "description": "The cow eats the rabbit."
    },
    {
        "id": 2403,
        "statement": "sees(cow, tiger).",
        "description": "The cow sees the tiger."
    },
    {
        "id": 2404,
        "statement": "likes(tiger, squirrel).",
        "description": "The tiger likes the squirrel."
    },
    {
        "id": 2405,
        "statement": "likes(X, rabbit) :- is(X, kind).",
        "description": "If something is kind then it likes the rabbit."
    },
    {
        "id": 2406,
        "statement": "is(X, rough) :- likes(X, rabbit), not is(X, cold).",
        "description": "If something likes the rabbit and it is not cold then it is rough."
    },
    {
        "id": 2407,
        "statement": "is(X, nice) :- sees(X, rabbit).",
        "description": "If something sees the rabbit then it is nice."
    },
    {
        "id": 2408,
        "statement": "sees(squirrel, cow) :- sees(X, squirrel), sees(X, rabbit).",
        "description": "If something sees the squirrel and it sees the rabbit then the squirrel sees the cow."
    },
    {
        "id": 2409,
        "statement": "likes(X, cow) :- is(X, rough), likes(X, rabbit).",
        "description": "If something is rough and it likes the rabbit then it likes the cow."
    },
    {
        "id": 2410,
        "statement": "sees(tiger, rabbit) :- eats(X, tiger).",
        "description": "If something eats the tiger then the tiger sees the rabbit."
    },
    {
        "id": 2411,
        "statement": "is(X, kind) :- sees(X, rabbit).",
        "description": "If something sees the rabbit then it is kind."
    },
    {
        "id": 2412,
        "statement": "is(X, kind) :- is(X, cold).",
        "description": "Cold things are kind."
    },
    {
        "id": 2413,
        "statement": "sees(bald_eagle, cat).",
        "description": "The bald eagle sees the cat."
    },
    {
        "id": 2414,
        "statement": "visits(cat, tiger).",
        "description": "The cat visits the tiger."
    },
    {
        "id": 2415,
        "statement": "visits(dog, cat) :- eats(X, dog), is(dog, blue).",
        "description": "If something eats the dog and the dog is blue then the dog visits the cat."
    },
    {
        "id": 2416,
        "statement": "visits(bald_eagle, dog) :- eats(tiger, bald_eagle), visits(tiger, bald_eagle).",
        "description": "If the tiger eats the bald eagle and the tiger visits the bald eagle then the bald eagle visits the dog."
    },
    {
        "id": 2417,
        "statement": "is(dog, rough) :- visits(X, dog), is(X, green).",
        "description": "If something visits the dog and it is green then the dog is rough."
    },
    {
        "id": 2418,
        "statement": "visits(tiger, dog) :- eats(X, tiger).",
        "description": "If something eats the tiger then the tiger visits the dog."
    },
    {
        "id": 2419,
        "statement": "visits(bald_eagle, tiger) :- is(bald_eagle, young).",
        "description": "If the bald eagle is young then the bald eagle visits the tiger."
    },
    {
        "id": 2420,
        "statement": "visits(X, dog) :- sees(X, tiger), visits(X, cat).",
        "description": "If something sees the tiger and it visits the cat then it visits the dog."
    },
    {
        "id": 2421,
        "statement": "eats(X, tiger) :- visits(X, dog).",
        "description": "If something visits the dog then it eats the tiger."
    },
    {
        "id": 2422,
        "statement": "eats(cat, tiger) :- eats(X, cat).",
        "description": "If something eats the cat then the cat eats the tiger."
    },
    {
        "id": 2423,
        "statement": "is(X, green) :- eats(X, tiger).",
        "description": "If something eats the tiger then it is green."
    },
    {
        "id": 2424,
        "statement": "is(bob, green) :- is(bob, cold), is(bob, young).",
        "description": "If Bob is cold and Bob is young then Bob is green."
    },
    {
        "id": 2425,
        "statement": "is(X, kind) :- is(X, young).",
        "description": "Young things are kind."
    },
    {
        "id": 2426,
        "statement": "is(harry, big) :- is(harry, green).",
        "description": "If Harry is green then Harry is big."
    },
    {
        "id": 2427,
        "statement": "is(X, young) :- is(X, big), is(X, cold).",
        "description": "Big, cold things are young."
    },
    {
        "id": 2428,
        "statement": "is(erin, green) :- is(erin, big), is(erin, kind).",
        "description": "If Erin is big and Erin is kind then Erin is green."
    },
    {
        "id": 2429,
        "statement": "is(X, quiet) :- is(X, red).",
        "description": "Red things are quiet."
    },
    {
        "id": 2430,
        "statement": "is(X, cold) :- is(X, quiet), is(X, kind).",
        "description": "Quiet, kind things are cold."
    },
    {
        "id": 2431,
        "statement": "is(X, red) :- is(X, green), is(X, quiet).",
        "description": "If something is green and quiet then it is red."
    },
    {
        "id": 2432,
        "statement": "is(X, red) :- is(X, kind), is(X, green).",
        "description": "If something is kind and green then it is red."
    },
    {
        "id": 2433,
        "statement": "is(X, big) :- is(X, young), is(X, round).",
        "description": "If someone is young and round then they are big."
    },
    {
        "id": 2434,
        "statement": "is(X, young) :- is(X, big), is(X, furry).",
        "description": "All big, furry people are young."
    },
    {
        "id": 2435,
        "statement": "is(X, big) :- is(X, furry).",
        "description": "All furry people are big."
    },
    {
        "id": 2436,
        "statement": "is(X, red) :- is(X, kind), is(X, young).",
        "description": "If someone is kind and young then they are red."
    },
    {
        "id": 2437,
        "statement": "is(X, quiet) :- is(X, red), is(X, round).",
        "description": "Red, round people are quiet."
    },
    {
        "id": 2438,
        "statement": "is(X, red) :- is(X, young), is(X, big).",
        "description": "Young, big people are red."
    },
    {
        "id": 2439,
        "statement": "is(X, round) :- is(X, big), is(X, red).",
        "description": "If someone is big and red then they are round."
    },
    {
        "id": 2440,
        "statement": "is(X, blue) :- is(X, big).",
        "description": "All big people are blue."
    },
    {
        "id": 2441,
        "statement": "is(X, furry) :- is(X, cold).",
        "description": "Cold people are furry."
    },
    {
        "id": 2442,
        "statement": "is(X, big) :- is(X, white).",
        "description": "White people are big."
    },
    {
        "id": 2443,
        "statement": "is(X, cold) :- is(X, kind).",
        "description": "Kind people are cold."
    },
    {
        "id": 2444,
        "statement": "is(charlie, white) :- is(charlie, furry), is(charlie, big).",
        "description": "If Charlie is furry and Charlie is big then Charlie is white."
    },
    {
        "id": 2445,
        "statement": "is(X, kind) :- is(X, white).",
        "description": "If someone is white then they are kind."
    },
    {
        "id": 2446,
        "statement": "is(X, white) :- is(X, smart), is(X, kind).",
        "description": "All smart, kind people are white."
    },
    {
        "id": 2447,
        "statement": "is(X, white) :- is(X, red).",
        "description": "If someone is red then they are white."
    },
    {
        "id": 2448,
        "statement": "is(X, red) :- is(X, kind).",
        "description": "Kind people are red."
    },
    {
        "id": 2449,
        "statement": "is(X, furry) :- is(X, red), is(X, kind).",
        "description": "All red, kind people are furry."
    },
    {
        "id": 2450,
        "statement": "is(X, smart) :- is(X, green).",
        "description": "If someone is green then they are smart."
    },
    {
        "id": 2451,
        "statement": "is(X, green) :- is(X, red), is(X, furry).",
        "description": "All red, furry people are green."
    },
    {
        "id": 2452,
        "statement": "is(X, young) :- is(X, blue).",
        "description": "Blue things are young."
    },
    {
        "id": 2453,
        "statement": "is(X, cold) :- is(X, furry), is(X, kind).",
        "description": "Furry, kind things are cold."
    },
    {
        "id": 2454,
        "statement": "is(X, blue) :- is(X, cold).",
        "description": "Cold things are blue."
    },
    {
        "id": 2455,
        "statement": "is(X, big) :- is(X, young).",
        "description": "All young things are big."
    },
    {
        "id": 2456,
        "statement": "visits(bear, cat).",
        "description": "The bear visits the cat."
    },
    {
        "id": 2457,
        "statement": "eats(bald_eagle, lion) :- visits(bear, bald_eagle).",
        "description": "If the bear visits the bald eagle then the bald eagle eats the lion."
    },
    {
        "id": 2458,
        "statement": "visits(X, bald_eagle) :- is(X, rough), visits(X, cat).",
        "description": "If someone is rough and they visit the cat then they visit the bald eagle."
    },
    {
        "id": 2459,
        "statement": "visits(X, bald_eagle) :- is(X, cold).",
        "description": "If someone is cold then they visit the bald eagle."
    },
    {
        "id": 2460,
        "statement": "is(bear, red) :- is(X, rough), not eats(X, bear).",
        "description": "If someone is rough and they do not eat the bear then the bear is red."
    },
    {
        "id": 2461,
        "statement": "is(bear, rough) :- eats(X, bear).",
        "description": "If someone eats the bear then the bear is rough."
    },
    {
        "id": 2462,
        "statement": "is(X, red) :- eats(X, lion).",
        "description": "If someone eats the lion then they are red."
    },
    {
        "id": 2463,
        "statement": "visits(bald_eagle, bear) :- eats(X, cat), eats(X, bald_eagle).",
        "description": "If someone eats the cat and they eat the bald eagle then the bald eagle visits the bear."
    },
    {
        "id": 2464,
        "statement": "is(X, cold) :- is(X, red), visits(X, cat).",
        "description": "If someone is red and they visit the cat then they are cold."
    },
    {
        "id": 2465,
        "statement": "is(X, quiet) :- is(X, furry).",
        "description": "If something is furry then it is quiet."
    },
    {
        "id": 2466,
        "statement": "is(X, nice) :- is(X, round), is(X, blue).",
        "description": "All round, blue things are nice."
    },
    {
        "id": 2467,
        "statement": "is(X, blue) :- is(X, smart).",
        "description": "If something is smart then it is blue."
    },
    {
        "id": 2468,
        "statement": "is(erin, blue) :- is(erin, furry), is(erin, smart).",
        "description": "If Erin is furry and Erin is smart then Erin is blue."
    },
    {
        "id": 2469,
        "statement": "is(X, round) :- is(X, green).",
        "description": "Green things are round."
    },
    {
        "id": 2470,
        "statement": "is(X, furry) :- is(X, quiet), is(X, smart).",
        "description": "Quiet, smart things are furry."
    },
    {
        "id": 2471,
        "statement": "is(X, smart) :- is(X, quiet).",
        "description": "Quiet things are smart."
    },
    {
        "id": 2472,
        "statement": "chases(bald_eagle, bear).",
        "description": "The bald eagle chases the bear."
    },
    {
        "id": 2473,
        "statement": "chases(X, bear) :- is(X, kind), is(X, nice).",
        "description": "If someone is kind and nice then they chase the bear."
    },
    {
        "id": 2474,
        "statement": "is(X, nice) :- is(X, round).",
        "description": "All round people are nice."
    },
    {
        "id": 2475,
        "statement": "eats(X, bald_eagle) :- sees(X, tiger).",
        "description": "If someone sees the tiger then they eat the bald eagle."
    },
    {
        "id": 2476,
        "statement": "chases(bear, cow) :- is(bear, kind).",
        "description": "If the bear is kind then the bear chases the cow."
    },
    {
        "id": 2477,
        "statement": "sees(tiger, cow) :- is(X, red), eats(X, tiger).",
        "description": "If someone is red and they eat the tiger then the tiger sees the cow."
    },
    {
        "id": 2478,
        "statement": "eats(bear, tiger) :- sees(X, bear), chases(X, bear).",
        "description": "If someone sees the bear and they chase the bear then the bear eats the tiger."
    },
    {
        "id": 2479,
        "statement": "is(cow, red) :- chases(cow, bear).",
        "description": "If the cow chases the bear then the cow is red."
    },
    {
        "id": 2480,
        "statement": "eats(X, bear) :- is(X, round), eats(X, tiger).",
        "description": "If someone is round and they eat the tiger then they eat the bear."
    },
    {
        "id": 2481,
        "statement": "is(X, smart) :- is(X, big), is(X, cold).",
        "description": "Big, cold things are smart."
    },
    {
        "id": 2482,
        "statement": "is(X, smart) :- is(X, nice).",
        "description": "Nice things are smart."
    },
    {
        "id": 2483,
        "statement": "is(X, furry) :- is(X, smart), is(X, nice).",
        "description": "All smart, nice things are furry."
    },
    {
        "id": 2484,
        "statement": "is(X, furry) :- is(X, big), not is(X, kind).",
        "description": "If something is big and not kind then it is furry."
    },
    {
        "id": 2485,
        "statement": "is(X, round) :- is(X, big).",
        "description": "Big things are round."
    },
    {
        "id": 2486,
        "statement": "is(charlie, round) :- not is(charlie, kind).",
        "description": "If Charlie is not kind then Charlie is round."
    },
    {
        "id": 2487,
        "statement": "sees(bald_eagle, rabbit).",
        "description": "The bald eagle sees the rabbit."
    },
    {
        "id": 2488,
        "statement": "sees(rabbit, tiger).",
        "description": "The rabbit sees the tiger."
    },
    {
        "id": 2489,
        "statement": "visits(dog, rabbit) :- is(X, blue), likes(X, dog).",
        "description": "If someone is blue and they like the dog then the dog visits the rabbit."
    },
    {
        "id": 2490,
        "statement": "visits(dog, bald_eagle) :- visits(X, dog), is(dog, nice).",
        "description": "If someone visits the dog and the dog is nice then the dog visits the bald eagle."
    },
    {
        "id": 2491,
        "statement": "likes(tiger, dog) :- is(tiger, blue).",
        "description": "If the tiger is blue then the tiger likes the dog."
    },
    {
        "id": 2492,
        "statement": "sees(X, dog) :- sees(X, bald_eagle).",
        "description": "If someone sees the bald eagle then they see the dog."
    },
    {
        "id": 2493,
        "statement": "is(X, blue) :- is(X, red).",
        "description": "If someone is red then they are blue."
    },
    {
        "id": 2494,
        "statement": "visits(dog, rabbit) :- sees(rabbit, dog), visits(rabbit, bald_eagle).",
        "description": "If the rabbit sees the dog and the rabbit visits the bald eagle then the dog visits the rabbit."
    },
    {
        "id": 2495,
        "statement": "is(X, red) :- visits(X, rabbit).",
        "description": "If someone visits the rabbit then they are red."
    },
    {
        "id": 2496,
        "statement": "likes(X, tiger) :- is(X, blue).",
        "description": "If someone is blue then they like the tiger."
    },
    {
        "id": 2497,
        "statement": "likes(squirrel, mouse).",
        "description": "The squirrel likes the mouse."
    },
    {
        "id": 2498,
        "statement": "likes(squirrel, tiger).",
        "description": "The squirrel likes the tiger."
    },
    {
        "id": 2499,
        "statement": "needs(tiger, mouse).",
        "description": "The tiger needs the mouse."
    },
    {
        "id": 2500,
        "statement": "chases(X, rabbit) :- is(X, nice).",
        "description": "If something is nice then it chases the rabbit."
    },
    {
        "id": 2501,
        "statement": "chases(mouse, rabbit) :- chases(X, mouse).",
        "description": "If something chases the mouse then the mouse chases the rabbit."
    },
    {
        "id": 2502,
        "statement": "needs(rabbit, tiger) :- likes(X, squirrel), needs(squirrel, rabbit).",
        "description": "If something likes the squirrel and the squirrel needs the rabbit then the rabbit needs the tiger."
    },
    {
        "id": 2503,
        "statement": "needs(X, rabbit) :- is(X, nice).",
        "description": "If something is nice then it needs the rabbit."
    },
    {
        "id": 2504,
        "statement": "is(X, nice) :- likes(X, squirrel), chases(X, squirrel).",
        "description": "If something likes the squirrel and it chases the squirrel then it is nice."
    },
    {
        "id": 2505,
        "statement": "needs(rabbit, mouse) :- likes(X, rabbit), likes(rabbit, mouse).",
        "description": "If something likes the rabbit and the rabbit likes the mouse then the rabbit needs the mouse."
    },
    {
        "id": 2506,
        "statement": "needs(rabbit, cow).",
        "description": "The rabbit needs the cow."
    },
    {
        "id": 2507,
        "statement": "eats(X, bear) :- chases(X, cow).",
        "description": "If someone chases the cow then they eat the bear."
    },
    {
        "id": 2508,
        "statement": "is(rabbit, red) :- chases(bear, rabbit).",
        "description": "If the bear chases the rabbit then the rabbit is red."
    },
    {
        "id": 2509,
        "statement": "chases(X, bear) :- is(X, red).",
        "description": "If someone is red then they chase the bear."
    },
    {
        "id": 2510,
        "statement": "chases(tiger, bear) :- chases(X, tiger), eats(tiger, bear).",
        "description": "If someone chases the tiger and the tiger eats the bear then the tiger chases the bear."
    },
    {
        "id": 2511,
        "statement": "needs(X, bear) :- eats(X, bear).",
        "description": "If someone eats the bear then they need the bear."
    },
    {
        "id": 2512,
        "statement": "is(bear, kind) :- needs(X, bear).",
        "description": "If someone needs the bear then the bear is kind."
    },
    {
        "id": 2513,
        "statement": "needs(X, cow) :- is(X, big).",
        "description": "If someone is big then they need the cow."
    },
    {
        "id": 2514,
        "statement": "chases(X, cow) :- is(X, kind).",
        "description": "If someone is kind then they chase the cow."
    },
    {
        "id": 2515,
        "statement": "needs(cow, bald_eagle).",
        "description": "The cow needs the bald eagle."
    },
    {
        "id": 2516,
        "statement": "likes(X, squirrel) :- visits(X, bald_eagle).",
        "description": "If something visits the bald eagle then it likes the squirrel."
    },
    {
        "id": 2517,
        "statement": "is(squirrel, nice) :- likes(X, squirrel).",
        "description": "If something likes the squirrel then the squirrel is nice."
    },
    {
        "id": 2518,
        "statement": "visits(squirrel, bald_eagle) :- needs(X, squirrel), visits(X, cow).",
        "description": "If something needs the squirrel and it visits the cow then the squirrel visits the bald eagle."
    },
    {
        "id": 2519,
        "statement": "needs(X, squirrel) :- likes(X, cat).",
        "description": "If something likes the cat then it needs the squirrel."
    },
    {
        "id": 2520,
        "statement": "is(bald_eagle, blue) :- visits(X, bald_eagle).",
        "description": "If something visits the bald eagle then the bald eagle is blue."
    },
    {
        "id": 2521,
        "statement": "likes(squirrel, cat) :- is(X, kind), likes(X, squirrel).",
        "description": "If something is kind and it likes the squirrel then the squirrel likes the cat."
    },
    {
        "id": 2522,
        "statement": "is(bald_eagle, kind) :- needs(bald_eagle, squirrel), is(squirrel, rough).",
        "description": "If the bald eagle needs the squirrel and the squirrel is rough then the bald eagle is kind."
    },
    {
        "id": 2523,
        "statement": "is(erin, white) :- is(erin, big), is(erin, red).",
        "description": "If Erin is big and Erin is red then Erin is white."
    },
    {
        "id": 2524,
        "statement": "is(X, young) :- is(X, big), is(X, blue).",
        "description": "Big, blue things are young."
    },
    {
        "id": 2525,
        "statement": "is(X, green) :- is(X, big).",
        "description": "If something is big then it is green."
    },
    {
        "id": 2526,
        "statement": "is(X, big) :- is(X, white), is(X, young).",
        "description": "If something is white and young then it is big."
    },
    {
        "id": 2527,
        "statement": "is(X, kind) :- is(X, green), is(X, white).",
        "description": "If something is green and white then it is kind."
    },
    {
        "id": 2528,
        "statement": "is(X, kind) :- is(X, blue).",
        "description": "Blue things are kind."
    },
    {
        "id": 2529,
        "statement": "is(fiona, big) :- is(fiona, young), is(fiona, blue).",
        "description": "If Fiona is young and Fiona is blue then Fiona is big."
    },
    {
        "id": 2530,
        "statement": "is(X, red) :- is(X, kind), is(X, green).",
        "description": "All kind, green things are red."
    },
    {
        "id": 2531,
        "statement": "is(anne, big) :- is(anne, red).",
        "description": "If Anne is red then Anne is big."
    },
    {
        "id": 2532,
        "statement": "is(X, furry) :- is(X, green), is(X, red).",
        "description": "If something is green and red then it is furry."
    },
    {
        "id": 2533,
        "statement": "is(X, green) :- is(X, young).",
        "description": "If something is young then it is green."
    },
    {
        "id": 2534,
        "statement": "is(X, blue) :- is(X, furry).",
        "description": "Furry things are blue."
    },
    {
        "id": 2535,
        "statement": "is(X, green) :- is(X, kind), is(X, red).",
        "description": "Kind, red things are green."
    },
    {
        "id": 2536,
        "statement": "is(X, green) :- is(X, kind).",
        "description": "If something is kind then it is green."
    },
    {
        "id": 2537,
        "statement": "is(X, furry) :- is(X, blue), is(X, red).",
        "description": "Blue, red things are furry."
    },
    {
        "id": 2538,
        "statement": "is(harry, red) :- is(harry, rough).",
        "description": "If Harry is rough then Harry is red."
    },
    {
        "id": 2539,
        "statement": "is(gary, kind) :- is(gary, green), is(gary, rough).",
        "description": "If Gary is green and Gary is rough then Gary is kind."
    },
    {
        "id": 2540,
        "statement": "is(dave, green) :- is(dave, nice), is(dave, kind).",
        "description": "If Dave is nice and Dave is kind then Dave is green."
    },
    {
        "id": 2541,
        "statement": "is(X, red) :- is(X, rough), is(X, nice).",
        "description": "Rough, nice things are red."
    },
    {
        "id": 2542,
        "statement": "is(X, green) :- is(X, nice), is(X, cold).",
        "description": "All nice, cold things are green."
    },
    {
        "id": 2543,
        "statement": "is(X, kind) :- is(X, cold), is(X, red).",
        "description": "Cold, red things are kind."
    },
    {
        "id": 2544,
        "statement": "is(X, nice) :- is(X, kind), is(X, big).",
        "description": "If something is kind and big then it is nice."
    },
    {
        "id": 2545,
        "statement": "is(X, nice) :- is(X, green), is(X, big).",
        "description": "All green, big things are nice."
    },
    {
        "id": 2546,
        "statement": "needs(cat, tiger).",
        "description": "The cat needs the tiger."
    },
    {
        "id": 2547,
        "statement": "chases(tiger, squirrel).",
        "description": "The tiger chases the squirrel."
    },
    {
        "id": 2548,
        "statement": "needs(X, tiger) :- is(X, kind).",
        "description": "If something is kind then it needs the tiger."
    },
    {
        "id": 2549,
        "statement": "chases(X, squirrel) :- is(X, kind).",
        "description": "If something is kind then it chases the squirrel."
    },
    {
        "id": 2550,
        "statement": "is(squirrel, cold) :- chases(X, squirrel).",
        "description": "If something chases the squirrel then the squirrel is cold."
    },
    {
        "id": 2551,
        "statement": "likes(X, bear) :- chases(X, bear).",
        "description": "If something chases the bear then it likes the bear."
    },
    {
        "id": 2552,
        "statement": "likes(bear, tiger) :- chases(X, bear), chases(bear, tiger).",
        "description": "If something chases the bear and the bear chases the tiger then the bear likes the tiger."
    },
    {
        "id": 2553,
        "statement": "chases(X, cat) :- needs(X, tiger).",
        "description": "If something needs the tiger then it chases the cat."
    },
    {
        "id": 2554,
        "statement": "likes(X, squirrel) :- chases(X, squirrel).",
        "description": "If something chases the squirrel then it likes the squirrel."
    },
    {
        "id": 2555,
        "statement": "is(tiger, kind) :- likes(X, squirrel), needs(X, tiger).",
        "description": "If something likes the squirrel and it needs the tiger then the tiger is kind."
    },
    {
        "id": 2556,
        "statement": "is(X, young) :- is(X, kind), is(X, round).",
        "description": "Kind, round things are young."
    },
    {
        "id": 2557,
        "statement": "is(X, young) :- is(X, round).",
        "description": "If something is round then it is young."
    },
    {
        "id": 2558,
        "statement": "is(X, furry) :- is(X, round), is(X, young).",
        "description": "Round, young things are furry."
    },
    {
        "id": 2559,
        "statement": "is(anne, cold) :- is(anne, young).",
        "description": "If Anne is young then Anne is cold."
    },
    {
        "id": 2560,
        "statement": "is(X, kind) :- is(X, quiet), is(X, cold).",
        "description": "If something is quiet and cold then it is kind."
    },
    {
        "id": 2561,
        "statement": "is(X, round) :- is(X, kind), not is(X, green).",
        "description": "If something is kind and not green then it is round."
    },
    {
        "id": 2562,
        "statement": "is(X, quiet) :- is(X, cold).",
        "description": "If something is cold then it is quiet."
    },
    {
        "id": 2563,
        "statement": "is(X, furry) :- is(X, big), not is(X, kind).",
        "description": "If someone is big and not kind then they are furry."
    },
    {
        "id": 2564,
        "statement": "is(X, big) :- is(X, round).",
        "description": "Round people are big."
    },
    {
        "id": 2565,
        "statement": "is(X, round) :- is(X, red).",
        "description": "Red people are round."
    },
    {
        "id": 2566,
        "statement": "is(X, red) :- is(X, kind), not is(X, nice).",
        "description": "If someone is kind and not nice then they are red."
    },
    {
        "id": 2567,
        "statement": "is(X, young) :- is(X, red), not is(X, round).",
        "description": "If someone is red and not round then they are young."
    },
    {
        "id": 2568,
        "statement": "is(X, young) :- is(X, big), is(X, furry).",
        "description": "If someone is big and furry then they are young."
    },
    {
        "id": 2569,
        "statement": "is(mouse, rough).",
        "description": "The mouse is rough."
    },
    {
        "id": 2570,
        "statement": "likes(mouse, cat).",
        "description": "The mouse likes the cat."
    },
    {
        "id": 2571,
        "statement": "eats(X, mouse) :- is(X, red), visits(X, rabbit).",
        "description": "If someone is red and they visit the rabbit then they eat the mouse."
    },
    {
        "id": 2572,
        "statement": "likes(squirrel, mouse) :- visits(X, squirrel).",
        "description": "If someone visits the squirrel then the squirrel likes the mouse."
    },
    {
        "id": 2573,
        "statement": "is(squirrel, red) :- visits(rabbit, squirrel), likes(rabbit, mouse).",
        "description": "If the rabbit visits the squirrel and the rabbit likes the mouse then the squirrel is red."
    },
    {
        "id": 2574,
        "statement": "is(X, red) :- eats(X, rabbit), eats(rabbit, mouse).",
        "description": "If someone eats the rabbit and the rabbit eats the mouse then they are red."
    },
    {
        "id": 2575,
        "statement": "eats(X, rabbit) :- likes(X, squirrel).",
        "description": "If someone likes the squirrel then they eat the rabbit."
    },
    {
        "id": 2576,
        "statement": "likes(X, squirrel) :- is(X, rough).",
        "description": "If someone is rough then they like the squirrel."
    },
    {
        "id": 2577,
        "statement": "is(squirrel, rough) :- visits(X, rabbit), eats(X, squirrel).",
        "description": "If someone visits the rabbit and they eat the squirrel then the squirrel is rough."
    },
    {
        "id": 2578,
        "statement": "is(X, kind) :- likes(X, squirrel).",
        "description": "If someone likes the squirrel then they are kind."
    },
    {
        "id": 2579,
        "statement": "visits(X, rabbit) :- is(X, kind).",
        "description": "If someone is kind then they visit the rabbit."
    },
    {
        "id": 2580,
        "statement": "is(X, rough) :- is(X, big), is(X, furry).",
        "description": "If something is big and furry then it is rough."
    },
    {
        "id": 2581,
        "statement": "is(X, furry) :- is(X, red).",
        "description": "All red things are furry."
    },
    {
        "id": 2582,
        "statement": "is(X, nice) :- is(X, furry), is(X, big).",
        "description": "If something is furry and big then it is nice."
    },
    {
        "id": 2583,
        "statement": "is(X, red) :- is(X, white), is(X, round).",
        "description": "All white, round things are red."
    },
    {
        "id": 2584,
        "statement": "is(gary, furry) :- is(gary, round), is(gary, red).",
        "description": "If Gary is round and Gary is red then Gary is furry."
    },
    {
        "id": 2585,
        "statement": "is(bob, white) :- is(bob, round), is(bob, nice).",
        "description": "If Bob is round and Bob is nice then Bob is white."
    },
    {
        "id": 2586,
        "statement": "is(X, nice) :- is(X, quiet).",
        "description": "If someone is quiet then they are nice."
    },
    {
        "id": 2587,
        "statement": "is(X, nice) :- is(X, furry).",
        "description": "All furry people are nice."
    },
    {
        "id": 2588,
        "statement": "is(X, quiet) :- is(X, big).",
        "description": "If someone is big then they are quiet."
    },
    {
        "id": 2589,
        "statement": "is(X, smart) :- is(X, kind).",
        "description": "All kind people are smart."
    },
    {
        "id": 2590,
        "statement": "is(X, big) :- is(X, white).",
        "description": "If someone is white then they are big."
    },
    {
        "id": 2591,
        "statement": "is(X, round) :- is(X, quiet).",
        "description": "Quiet things are round."
    },
    {
        "id": 2592,
        "statement": "is(X, furry) :- is(X, big).",
        "description": "All big things are furry."
    },
    {
        "id": 2593,
        "statement": "is(X, quiet) :- is(X, round).",
        "description": "All round things are quiet."
    },
    {
        "id": 2594,
        "statement": "is(X, rough) :- is(X, cold).",
        "description": "If something is cold then it is rough."
    },
    {
        "id": 2595,
        "statement": "is(harry, big) :- is(harry, cold), is(harry, furry).",
        "description": "If Harry is cold and Harry is furry then Harry is big."
    },
    {
        "id": 2596,
        "statement": "is(X, cold) :- is(X, big), is(X, white).",
        "description": "Big, white things are cold."
    },
    {
        "id": 2597,
        "statement": "is(X, big) :- is(X, rough), is(X, round).",
        "description": "All rough, round things are big."
    },
    {
        "id": 2598,
        "statement": "is(X, quiet) :- is(X, cold), is(X, furry).",
        "description": "If something is cold and furry then it is quiet."
    },
    {
        "id": 2599,
        "statement": "is(X, blue) :- is(X, rough).",
        "description": "If something is rough then it is blue."
    },
    {
        "id": 2600,
        "statement": "is(X, nice) :- is(X, cold), is(X, quiet).",
        "description": "All cold, quiet things are nice."
    },
    {
        "id": 2601,
        "statement": "is(X, rough) :- is(X, round).",
        "description": "Round things are rough."
    },
    {
        "id": 2602,
        "statement": "is(X, rough) :- is(X, quiet), is(X, cold).",
        "description": "Quiet, cold things are rough."
    },
    {
        "id": 2603,
        "statement": "is(X, round) :- is(X, rough), is(X, nice).",
        "description": "Rough, nice things are round."
    },
    {
        "id": 2604,
        "statement": "is(X, round) :- is(X, cold).",
        "description": "All cold things are round."
    },
    {
        "id": 2605,
        "statement": "is(X, round) :- is(X, smart), is(X, blue).",
        "description": "Smart, blue things are round."
    },
    {
        "id": 2606,
        "statement": "likes(rabbit, cow).",
        "description": "The rabbit likes the cow."
    },
    {
        "id": 2607,
        "statement": "is(mouse, blue) :- likes(cow, tiger), not visits(tiger, mouse).",
        "description": "If the cow likes the tiger and the tiger does not visit the mouse then the mouse is blue."
    },
    {
        "id": 2608,
        "statement": "likes(X, mouse) :- is(X, blue), chases(X, cow).",
        "description": "If something is blue and it chases the cow then it likes the mouse."
    },
    {
        "id": 2609,
        "statement": "is(X, big) :- chases(X, mouse), not is(X, blue).",
        "description": "If something chases the mouse and it is not blue then it is big."
    },
    {
        "id": 2610,
        "statement": "visits(X, tiger) :- is(X, big), not is(X, young).",
        "description": "If something is big and not young then it visits the tiger."
    },
    {
        "id": 2611,
        "statement": "likes(mouse, rabbit) :- is(mouse, big).",
        "description": "If the mouse is big then the mouse likes the rabbit."
    },
    {
        "id": 2612,
        "statement": "is(X, green) :- visits(X, tiger), likes(X, mouse).",
        "description": "If something visits the tiger and it likes the mouse then it is green."
    },
    {
        "id": 2613,
        "statement": "chases(tiger, mouse) :- visits(X, tiger), not visits(X, mouse).",
        "description": "If something visits the tiger and it does not visit the mouse then the tiger chases the mouse."
    },
    {
        "id": 2614,
        "statement": "likes(rabbit, mouse) :- likes(X, rabbit), is(X, green).",
        "description": "If something likes the rabbit and it is green then the rabbit likes the mouse."
    },
    {
        "id": 2615,
        "statement": "is(X, blue) :- is(X, green).",
        "description": "If someone is green then they are blue."
    },
    {
        "id": 2616,
        "statement": "is(X, blue) :- is(X, rough).",
        "description": "If someone is rough then they are blue."
    },
    {
        "id": 2617,
        "statement": "is(X, green) :- is(X, blue).",
        "description": "Blue people are green."
    },
    {
        "id": 2618,
        "statement": "is(X, rough) :- is(X, cold), is(X, big).",
        "description": "All cold, big people are rough."
    },
    {
        "id": 2619,
        "statement": "is(X, rough) :- is(X, furry).",
        "description": "All furry people are rough."
    },
    {
        "id": 2620,
        "statement": "is(X, nice) :- is(X, green).",
        "description": "All green people are nice."
    },
    {
        "id": 2621,
        "statement": "is(X, red) :- is(X, young), is(X, rough).",
        "description": "Young, rough people are red."
    },
    {
        "id": 2622,
        "statement": "is(dave, rough) :- is(dave, blue).",
        "description": "If Dave is blue then Dave is rough."
    },
    {
        "id": 2623,
        "statement": "is(X, cold) :- is(X, quiet), is(X, green).",
        "description": "All quiet, green people are cold."
    },
    {
        "id": 2624,
        "statement": "is(bob, cold) :- is(bob, red), is(bob, young).",
        "description": "If Bob is red and Bob is young then Bob is cold."
    },
    {
        "id": 2625,
        "statement": "is(X, young) :- is(X, rough).",
        "description": "Rough people are young."
    },
    {
        "id": 2626,
        "statement": "is(X, young) :- is(X, rough), is(X, green).",
        "description": "Rough, green people are young."
    },
    {
        "id": 2627,
        "statement": "is(X, quiet) :- is(X, green), is(X, young).",
        "description": "If someone is green and young then they are quiet."
    },
    {
        "id": 2628,
        "statement": "is(X, big) :- is(X, nice), is(X, rough).",
        "description": "If something is nice and rough then it is big."
    },
    {
        "id": 2629,
        "statement": "is(X, rough) :- is(X, furry).",
        "description": "Furry things are rough."
    },
    {
        "id": 2630,
        "statement": "is(X, rough) :- is(X, young), is(X, kind).",
        "description": "Young, kind things are rough."
    },
    {
        "id": 2631,
        "statement": "is(X, kind) :- is(X, big), is(X, furry).",
        "description": "If something is big and furry then it is kind."
    },
    {
        "id": 2632,
        "statement": "is(X, rough) :- is(X, young), is(X, kind).",
        "description": "All young, kind things are rough."
    },
    {
        "id": 2633,
        "statement": "is(X, nice) :- is(X, blue), is(X, rough).",
        "description": "If something is blue and rough then it is nice."
    },
    {
        "id": 2634,
        "statement": "sees(rabbit, cat).",
        "description": "The rabbit sees the cat."
    },
    {
        "id": 2635,
        "statement": "is(rabbit, blue) :- sees(X, rabbit).",
        "description": "If someone sees the rabbit then the rabbit is blue."
    },
    {
        "id": 2636,
        "statement": "is(X, blue) :- sees(X, rabbit).",
        "description": "If someone sees the rabbit then they are blue."
    },
    {
        "id": 2637,
        "statement": "eats(X, rabbit) :- needs(X, lion).",
        "description": "If someone needs the lion then they eat the rabbit."
    },
    {
        "id": 2638,
        "statement": "needs(X, lion) :- is(X, blue).",
        "description": "If someone is blue then they need the lion."
    },
    {
        "id": 2639,
        "statement": "needs(X, lion) :- eats(X, lion).",
        "description": "If someone eats the lion then they need the lion."
    },
    {
        "id": 2640,
        "statement": "eats(X, rabbit) :- sees(X, squirrel).",
        "description": "If someone sees the squirrel then they eat the rabbit."
    },
    {
        "id": 2641,
        "statement": "sees(cat, rabbit) :- needs(X, cat), needs(cat, lion).",
        "description": "If someone needs the cat and the cat needs the lion then the cat sees the rabbit."
    },
    {
        "id": 2642,
        "statement": "is(X, nice) :- is(X, green), needs(X, rabbit).",
        "description": "If someone is green and they need the rabbit then they are nice."
    },
    {
        "id": 2643,
        "statement": "is(cat, green) :- needs(lion, cat).",
        "description": "If the lion needs the cat then the cat is green."
    },
    {
        "id": 2644,
        "statement": "is(dog, young) :- sees(X, cow), sees(cow, dog).",
        "description": "If someone sees the cow and the cow sees the dog then the dog is young."
    },
    {
        "id": 2645,
        "statement": "is(cat, rough) :- visits(dog, mouse), visits(dog, cat).",
        "description": "If the dog visits the mouse and the dog visits the cat then the cat is rough."
    },
    {
        "id": 2646,
        "statement": "visits(X, cow) :- visits(X, dog).",
        "description": "If someone visits the dog then they visit the cow."
    },
    {
        "id": 2647,
        "statement": "is(cat, kind) :- visits(mouse, cat), is(cat, young).",
        "description": "If the mouse visits the cat and the cat is young then the cat is kind."
    },
    {
        "id": 2648,
        "statement": "chases(dog, cow) :- visits(dog, cow), is(dog, young).",
        "description": "If the dog visits the cow and the dog is young then the dog chases the cow."
    },
    {
        "id": 2649,
        "statement": "is(X, red) :- visits(X, cow).",
        "description": "If someone visits the cow then they are red."
    },
    {
        "id": 2650,
        "statement": "visits(mouse, cow) :- sees(X, mouse).",
        "description": "If someone sees the mouse then the mouse visits the cow."
    },
    {
        "id": 2651,
        "statement": "sees(X, mouse) :- is(X, red).",
        "description": "If someone is red then they see the mouse."
    },
    {
        "id": 2652,
        "statement": "sees(X, cow) :- sees(X, dog), sees(X, cat).",
        "description": "If someone sees the dog and they see the cat then they see the cow."
    },
    {
        "id": 2653,
        "statement": "is(X, big) :- is(X, quiet).",
        "description": "All quiet things are big."
    },
    {
        "id": 2654,
        "statement": "is(X, big) :- is(X, red), is(X, young).",
        "description": "All red, young things are big."
    },
    {
        "id": 2655,
        "statement": "is(X, kind) :- is(X, blue), is(X, cold).",
        "description": "Blue, cold things are kind."
    },
    {
        "id": 2656,
        "statement": "is(X, quiet) :- is(X, young), is(X, cold).",
        "description": "All young, cold things are quiet."
    },
    {
        "id": 2657,
        "statement": "is(X, blue) :- is(X, red), is(X, cold).",
        "description": "Red, cold things are blue."
    },
    {
        "id": 2658,
        "statement": "is(X, cold) :- is(X, quiet).",
        "description": "If something is quiet then it is cold."
    },
    {
        "id": 2659,
        "statement": "is(X, cold) :- is(X, big).",
        "description": "If something is big then it is cold."
    },
    {
        "id": 2660,
        "statement": "is(X, nice) :- is(X, blue).",
        "description": "All blue people are nice."
    },
    {
        "id": 2661,
        "statement": "is(X, green) :- is(X, white), is(X, nice).",
        "description": "All white, nice people are green."
    },
    {
        "id": 2662,
        "statement": "is(X, cold) :- is(X, big), is(X, white).",
        "description": "All big, white people are cold."
    },
    {
        "id": 2663,
        "statement": "is(X, cold) :- is(X, blue), is(X, red).",
        "description": "If someone is blue and red then they are cold."
    },
    {
        "id": 2664,
        "statement": "is(X, big) :- is(X, white), is(X, red).",
        "description": "White, red people are big."
    },
    {
        "id": 2665,
        "statement": "is(harry, young) :- is(harry, smart).",
        "description": "If Harry is smart then Harry is young."
    },
    {
        "id": 2666,
        "statement": "is(X, cold) :- is(X, quiet).",
        "description": "All quiet people are cold."
    },
    {
        "id": 2667,
        "statement": "is(X, quiet) :- is(X, round), is(X, big).",
        "description": "If someone is round and big then they are quiet."
    },
    {
        "id": 2668,
        "statement": "is(X, young) :- is(X, round), is(X, big).",
        "description": "If someone is round and big then they are young."
    },
    {
        "id": 2669,
        "statement": "is(X, blue) :- chases(X, bear).",
        "description": "If someone chases the bear then they are blue."
    },
    {
        "id": 2670,
        "statement": "is(X, rough) :- chases(X, mouse).",
        "description": "If someone chases the mouse then they are rough."
    },
    {
        "id": 2671,
        "statement": "chases(cat, bear) :- visits(X, cat).",
        "description": "If someone visits the cat then the cat chases the bear."
    },
    {
        "id": 2672,
        "statement": "is(cat, blue) :- chases(mouse, cat), is(cat, rough).",
        "description": "If the mouse chases the cat and the cat is rough then the cat is blue."
    },
    {
        "id": 2673,
        "statement": "sees(cat, mouse) :- chases(cat, bear).",
        "description": "If the cat chases the bear then the cat sees the mouse."
    },
    {
        "id": 2674,
        "statement": "sees(mouse, cat) :- is(X, rough), sees(X, mouse).",
        "description": "If someone is rough and they see the mouse then the mouse sees the cat."
    },
    {
        "id": 2675,
        "statement": "is(X, red) :- sees(X, mouse).",
        "description": "If someone sees the mouse then they are red."
    },
    {
        "id": 2676,
        "statement": "chases(X, cow) :- is(X, rough), is(X, blue).",
        "description": "If someone is rough and blue then they chase the cow."
    },
    {
        "id": 2677,
        "statement": "needs(mouse, squirrel).",
        "description": "The mouse needs the squirrel."
    },
    {
        "id": 2678,
        "statement": "sees(squirrel, mouse) :- is(X, young), sees(X, squirrel).",
        "description": "If something is young and it sees the squirrel then the squirrel sees the mouse."
    },
    {
        "id": 2679,
        "statement": "is(X, young) :- needs(X, squirrel), sees(squirrel, bear).",
        "description": "If something needs the squirrel and the squirrel sees the bear then it is young."
    },
    {
        "id": 2680,
        "statement": "sees(dog, mouse) :- needs(dog, squirrel).",
        "description": "If the dog needs the squirrel then the dog sees the mouse."
    },
    {
        "id": 2681,
        "statement": "needs(mouse, dog) :- chases(X, mouse), needs(X, mouse).",
        "description": "If something chases the mouse and it needs the mouse then the mouse needs the dog."
    },
    {
        "id": 2682,
        "statement": "sees(X, bear) :- needs(X, mouse).",
        "description": "If something needs the mouse then it sees the bear."
    },
    {
        "id": 2683,
        "statement": "needs(X, bear) :- is(X, green).",
        "description": "If something is green then it needs the bear."
    },
    {
        "id": 2684,
        "statement": "needs(X, squirrel) :- sees(X, mouse).",
        "description": "If something sees the mouse then it needs the squirrel."
    },
    {
        "id": 2685,
        "statement": "needs(squirrel, bear) :- is(X, round), needs(X, squirrel).",
        "description": "If something is round and it needs the squirrel then the squirrel needs the bear."
    },
    {
        "id": 2686,
        "statement": "is(lion, red).",
        "description": "The lion is red."
    },
    {
        "id": 2687,
        "statement": "is(X, blue) :- sees(X, tiger).",
        "description": "If someone sees the tiger then they are blue."
    },
    {
        "id": 2688,
        "statement": "sees(bear, lion) :- sees(X, bear).",
        "description": "If someone sees the bear then the bear sees the lion."
    },
    {
        "id": 2689,
        "statement": "is(X, red) :- sees(X, mouse), is(mouse, blue).",
        "description": "If someone sees the mouse and the mouse is blue then they are red."
    },
    {
        "id": 2690,
        "statement": "sees(X, mouse) :- is(X, blue).",
        "description": "If someone is blue then they see the mouse."
    },
    {
        "id": 2691,
        "statement": "needs(X, tiger) :- is(X, big), is(X, kind).",
        "description": "If someone is big and kind then they need the tiger."
    },
    {
        "id": 2692,
        "statement": "sees(X, bear) :- needs(X, tiger).",
        "description": "If someone needs the tiger then they see the bear."
    },
    {
        "id": 2693,
        "statement": "needs(bear, tiger) :- sees(X, bear), visits(bear, lion).",
        "description": "If someone sees the bear and the bear visits the lion then the bear needs the tiger."
    },
    {
        "id": 2694,
        "statement": "visits(tiger, mouse) :- visits(X, tiger), is(tiger, kind).",
        "description": "If someone visits the tiger and the tiger is kind then the tiger visits the mouse."
    },
    {
        "id": 2695,
        "statement": "sees(mouse, tiger) :- sees(X, mouse).",
        "description": "If someone sees the mouse then the mouse sees the tiger."
    },
    {
        "id": 2696,
        "statement": "is(X, smart) :- is(X, green).",
        "description": "If something is green then it is smart."
    },
    {
        "id": 2697,
        "statement": "is(X, big) :- is(X, quiet), is(X, round).",
        "description": "Quiet, round things are big."
    },
    {
        "id": 2698,
        "statement": "is(X, cold) :- is(X, big), is(X, white).",
        "description": "All big, white things are cold."
    },
    {
        "id": 2699,
        "statement": "is(X, big) :- is(X, round).",
        "description": "Round things are big."
    },
    {
        "id": 2700,
        "statement": "is(X, white) :- is(X, big).",
        "description": "Big things are white."
    },
    {
        "id": 2701,
        "statement": "is(charlie, smart) :- is(charlie, round), is(charlie, green).",
        "description": "If Charlie is round and Charlie is green then Charlie is smart."
    },
    {
        "id": 2702,
        "statement": "is(X, quiet) :- is(X, cold), is(X, kind).",
        "description": "Cold, kind people are quiet."
    },
    {
        "id": 2703,
        "statement": "is(X, cold) :- is(X, kind), is(X, white).",
        "description": "All kind, white people are cold."
    },
    {
        "id": 2704,
        "statement": "is(X, kind) :- is(X, cold), is(X, quiet).",
        "description": "If someone is cold and quiet then they are kind."
    },
    {
        "id": 2705,
        "statement": "is(gary, white) :- is(gary, quiet), is(gary, nice).",
        "description": "If Gary is quiet and Gary is nice then Gary is white."
    },
    {
        "id": 2706,
        "statement": "is(charlie, white) :- is(charlie, nice).",
        "description": "If Charlie is nice then Charlie is white."
    },
    {
        "id": 2707,
        "statement": "is(X, nice) :- is(X, smart), is(X, kind).",
        "description": "Smart, kind people are nice."
    },
    {
        "id": 2708,
        "statement": "is(X, cold) :- is(X, smart), is(X, big).",
        "description": "Smart, big people are cold."
    },
    {
        "id": 2709,
        "statement": "is(X, kind) :- is(X, white), is(X, smart).",
        "description": "If someone is white and smart then they are kind."
    },
    {
        "id": 2710,
        "statement": "is(bald_eagle, blue) :- needs(cow, bald_eagle).",
        "description": "If the cow needs the bald eagle then the bald eagle is blue."
    },
    {
        "id": 2711,
        "statement": "chases(X, bald_eagle) :- is(X, green), is(X, rough).",
        "description": "If someone is green and rough then they chase the bald eagle."
    },
    {
        "id": 2712,
        "statement": "visits(dog, cat) :- is(dog, kind).",
        "description": "If the dog is kind then the dog visits the cat."
    },
    {
        "id": 2713,
        "statement": "visits(bald_eagle, cat) :- chases(dog, cow), visits(dog, bald_eagle).",
        "description": "If the dog chases the cow and the dog visits the bald eagle then the bald eagle visits the cat."
    },
    {
        "id": 2714,
        "statement": "is(dog, green) :- needs(X, dog).",
        "description": "If someone needs the dog then the dog is green."
    },
    {
        "id": 2715,
        "statement": "needs(X, dog) :- chases(X, cow).",
        "description": "If someone chases the cow then they need the dog."
    },
    {
        "id": 2716,
        "statement": "is(X, green) :- visits(X, cat).",
        "description": "If someone visits the cat then they are green."
    },
    {
        "id": 2717,
        "statement": "chases(dog, cow) :- is(dog, green).",
        "description": "If the dog is green then the dog chases the cow."
    },
    {
        "id": 2718,
        "statement": "needs(cow, cat) :- chases(X, cow).",
        "description": "If someone chases the cow then the cow needs the cat."
    },
    {
        "id": 2719,
        "statement": "eats(cow, bear).",
        "description": "The cow eats the bear."
    },
    {
        "id": 2720,
        "statement": "visits(bear, cow) :- visits(X, bear).",
        "description": "If someone visits the bear then the bear visits the cow."
    },
    {
        "id": 2721,
        "statement": "visits(bald_eagle, bear) :- eats(X, bald_eagle).",
        "description": "If someone eats the bald eagle then the bald eagle visits the bear."
    },
    {
        "id": 2722,
        "statement": "eats(bear, bald_eagle) :- visits(bear, bald_eagle).",
        "description": "If the bear visits the bald eagle then the bear eats the bald eagle."
    },
    {
        "id": 2723,
        "statement": "visits(bear, lion) :- visits(X, bear).",
        "description": "If someone visits the bear then the bear visits the lion."
    },
    {
        "id": 2724,
        "statement": "is(X, kind) :- visits(X, cow).",
        "description": "If someone visits the cow then they are kind."
    },
    {
        "id": 2725,
        "statement": "eats(lion, bald_eagle) :- needs(X, lion).",
        "description": "If someone needs the lion then the lion eats the bald eagle."
    },
    {
        "id": 2726,
        "statement": "needs(cow, lion) :- visits(X, cow), is(X, kind).",
        "description": "If someone visits the cow and they are kind then the cow needs the lion."
    },
    {
        "id": 2727,
        "statement": "eats(X, bald_eagle) :- is(X, green).",
        "description": "If someone is green then they eat the bald eagle."
    },
    {
        "id": 2728,
        "statement": "is(bear, big) :- visits(X, lion), eats(lion, bear).",
        "description": "If someone visits the lion and the lion eats the bear then the bear is big."
    },
    {
        "id": 2729,
        "statement": "chases(bear, cow).",
        "description": "The bear chases the cow."
    },
    {
        "id": 2730,
        "statement": "needs(cow, bear).",
        "description": "The cow needs the bear."
    },
    {
        "id": 2731,
        "statement": "visits(bear, lion) :- needs(lion, bear).",
        "description": "If the lion needs the bear then the bear visits the lion."
    },
    {
        "id": 2732,
        "statement": "chases(X, cow) :- visits(X, lion).",
        "description": "If someone visits the lion then they chase the cow."
    },
    {
        "id": 2733,
        "statement": "chases(X, cow) :- visits(X, lion), chases(X, mouse).",
        "description": "If someone visits the lion and they chase the mouse then they chase the cow."
    },
    {
        "id": 2734,
        "statement": "needs(X, bear) :- chases(X, bear).",
        "description": "If someone chases the bear then they need the bear."
    },
    {
        "id": 2735,
        "statement": "is(X, rough) :- is(X, big).",
        "description": "Big people are rough."
    },
    {
        "id": 2736,
        "statement": "chases(bear, cow) :- is(X, cold), chases(X, bear).",
        "description": "If someone is cold and they chase the bear then the bear chases the cow."
    },
    {
        "id": 2737,
        "statement": "chases(X, bear) :- is(X, nice).",
        "description": "If someone is nice then they chase the bear."
    },
    {
        "id": 2738,
        "statement": "chases(X, mouse) :- visits(X, lion).",
        "description": "If someone visits the lion then they chase the mouse."
    },
    {
        "id": 2739,
        "statement": "is(X, young) :- is(X, big).",
        "description": "Big people are young."
    },
    {
        "id": 2740,
        "statement": "is(X, young) :- is(X, green), is(X, big).",
        "description": "If someone is green and big then they are young."
    },
    {
        "id": 2741,
        "statement": "is(X, big) :- is(X, green).",
        "description": "All green people are big."
    },
    {
        "id": 2742,
        "statement": "is(X, round) :- is(X, green), is(X, big).",
        "description": "All green, big people are round."
    },
    {
        "id": 2743,
        "statement": "is(X, round) :- is(X, cold), is(X, red).",
        "description": "Cold, red people are round."
    },
    {
        "id": 2744,
        "statement": "is(X, green) :- is(X, round).",
        "description": "All round people are green."
    },
    {
        "id": 2745,
        "statement": "is(X, blue) :- is(X, cold), is(X, young).",
        "description": "Cold, young people are blue."
    },
    {
        "id": 2746,
        "statement": "is(X, big) :- is(X, red), is(X, blue).",
        "description": "All red, blue people are big."
    },
    {
        "id": 2747,
        "statement": "is(X, rough) :- is(X, green), is(X, kind).",
        "description": "If something is green and kind then it is rough."
    },
    {
        "id": 2748,
        "statement": "is(bob, kind) :- is(bob, furry), is(bob, green).",
        "description": "If Bob is furry and Bob is green then Bob is kind."
    },
    {
        "id": 2749,
        "statement": "is(X, big) :- is(X, quiet).",
        "description": "Quiet things are big."
    },
    {
        "id": 2750,
        "statement": "is(dave, big) :- is(dave, rough).",
        "description": "If Dave is rough then Dave is big."
    },
    {
        "id": 2751,
        "statement": "is(X, kind) :- is(X, white).",
        "description": "All white things are kind."
    },
    {
        "id": 2752,
        "statement": "is(X, quiet) :- is(X, kind), is(X, rough).",
        "description": "Kind, rough things are quiet."
    },
    {
        "id": 2753,
        "statement": "visits(dog, squirrel).",
        "description": "The dog visits the squirrel."
    },
    {
        "id": 2754,
        "statement": "visits(squirrel, dog).",
        "description": "The squirrel visits the dog."
    },
    {
        "id": 2755,
        "statement": "is(X, cold) :- is(X, round).",
        "description": "If someone is round then they are cold."
    },
    {
        "id": 2756,
        "statement": "is(squirrel, kind) :- likes(X, squirrel), visits(X, squirrel).",
        "description": "If someone likes the squirrel and they visit the squirrel then the squirrel is kind."
    },
    {
        "id": 2757,
        "statement": "needs(X, lion) :- is(X, cold).",
        "description": "If someone is cold then they need the lion."
    },
    {
        "id": 2758,
        "statement": "needs(dog, lion) :- visits(lion, dog).",
        "description": "If the lion visits the dog then the dog needs the lion."
    },
    {
        "id": 2759,
        "statement": "is(X, green) :- likes(X, lion).",
        "description": "If someone likes the lion then they are green."
    },
    {
        "id": 2760,
        "statement": "likes(cat, lion) :- needs(X, cat).",
        "description": "If someone needs the cat then the cat likes the lion."
    },
    {
        "id": 2761,
        "statement": "is(dog, green) :- needs(X, dog), not is(X, red).",
        "description": "If someone needs the dog and they are not red then the dog is green."
    },
    {
        "id": 2762,
        "statement": "visits(X, dog) :- needs(X, lion), not likes(X, dog).",
        "description": "If someone needs the lion and they do not like the dog then they visit the dog."
    },
    {
        "id": 2763,
        "statement": "visits(lion, dog) :- visits(squirrel, lion), likes(squirrel, lion).",
        "description": "If the squirrel visits the lion and the squirrel likes the lion then the lion visits the dog."
    },
    {
        "id": 2764,
        "statement": "is(X, quiet) :- is(X, nice), is(X, cold).",
        "description": "Nice, cold things are quiet."
    },
    {
        "id": 2765,
        "statement": "is(X, nice) :- is(X, cold), is(X, rough).",
        "description": "If something is cold and rough then it is nice."
    },
    {
        "id": 2766,
        "statement": "is(X, cold) :- is(X, kind), is(X, rough).",
        "description": "If something is kind and rough then it is cold."
    },
    {
        "id": 2767,
        "statement": "sees(cat, bear) :- eats(cat, squirrel).",
        "description": "If the cat eats the squirrel then the cat sees the bear."
    },
    {
        "id": 2768,
        "statement": "eats(squirrel, cat) :- sees(X, squirrel), sees(squirrel, cat).",
        "description": "If someone sees the squirrel and the squirrel sees the cat then the squirrel eats the cat."
    },
    {
        "id": 2769,
        "statement": "is(X, green) :- eats(X, cat).",
        "description": "If someone eats the cat then they are green."
    },
    {
        "id": 2770,
        "statement": "eats(X, bear) :- is(X, green), eats(X, cat).",
        "description": "If someone is green and they eat the cat then they eat the bear."
    },
    {
        "id": 2771,
        "statement": "is(squirrel, young) :- is(X, blue), eats(X, squirrel).",
        "description": "If someone is blue and they eat the squirrel then the squirrel is young."
    },
    {
        "id": 2772,
        "statement": "eats(X, squirrel) :- is(X, young).",
        "description": "If someone is young then they eat the squirrel."
    },
    {
        "id": 2773,
        "statement": "eats(bear, cat) :- sees(X, bear).",
        "description": "If someone sees the bear then the bear eats the cat."
    },
    {
        "id": 2774,
        "statement": "sees(X, cow) :- eats(X, cow).",
        "description": "If someone eats the cow then they see the cow."
    },
    {
        "id": 2775,
        "statement": "is(X, kind) :- is(X, nice), is(X, big).",
        "description": "If something is nice and big then it is kind."
    },
    {
        "id": 2776,
        "statement": "is(X, big) :- is(X, smart).",
        "description": "Smart things are big."
    },
    {
        "id": 2777,
        "statement": "is(X, nice) :- is(X, round), is(X, big).",
        "description": "If something is round and big then it is nice."
    },
    {
        "id": 2778,
        "statement": "is(erin, nice) :- is(erin, round).",
        "description": "If Erin is round then Erin is nice."
    },
    {
        "id": 2779,
        "statement": "is(X, smart) :- is(X, quiet).",
        "description": "All quiet things are smart."
    },
    {
        "id": 2780,
        "statement": "is(X, cold) :- is(X, big), not is(X, nice).",
        "description": "If something is big and not nice then it is cold."
    },
    {
        "id": 2781,
        "statement": "is(erin, kind) :- is(erin, cold).",
        "description": "If Erin is cold then Erin is kind."
    },
    {
        "id": 2782,
        "statement": "is(X, white) :- is(X, furry).",
        "description": "Furry things are white."
    },
    {
        "id": 2783,
        "statement": "is(X, smart) :- is(X, kind), is(X, rough).",
        "description": "All kind, rough things are smart."
    },
    {
        "id": 2784,
        "statement": "is(fiona, furry) :- is(fiona, kind).",
        "description": "If Fiona is kind then Fiona is furry."
    },
    {
        "id": 2785,
        "statement": "is(erin, kind) :- is(erin, quiet), is(erin, white).",
        "description": "If Erin is quiet and Erin is white then Erin is kind."
    },
    {
        "id": 2786,
        "statement": "is(erin, young) :- is(erin, white), is(erin, kind).",
        "description": "If Erin is white and Erin is kind then Erin is young."
    },
    {
        "id": 2787,
        "statement": "is(X, rough) :- is(X, kind).",
        "description": "Kind things are rough."
    },
    {
        "id": 2788,
        "statement": "chases(tiger, bald_eagle).",
        "description": "The tiger chases the bald eagle."
    },
    {
        "id": 2789,
        "statement": "likes(bald_eagle, mouse) :- likes(tiger, bear), not chases(tiger, bald_eagle).",
        "description": "If the tiger likes the bear and the tiger does not chase the bald eagle then the bald eagle likes the mouse."
    },
    {
        "id": 2790,
        "statement": "visits(X, tiger) :- is(X, blue).",
        "description": "If someone is blue then they visit the tiger."
    },
    {
        "id": 2791,
        "statement": "likes(X, tiger) :- likes(X, bald_eagle).",
        "description": "If someone likes the bald eagle then they like the tiger."
    },
    {
        "id": 2792,
        "statement": "chases(mouse, tiger) :- likes(X, bald_eagle), not chases(bald_eagle, mouse).",
        "description": "If someone likes the bald eagle and the bald eagle does not chase the mouse then the mouse chases the tiger."
    },
    {
        "id": 2793,
        "statement": "likes(X, mouse) :- chases(X, bald_eagle).",
        "description": "If someone chases the bald eagle then they like the mouse."
    },
    {
        "id": 2794,
        "statement": "likes(X, bald_eagle) :- visits(X, tiger), not chases(tiger, bear).",
        "description": "If someone visits the tiger and the tiger does not chase the bear then they like the bald eagle."
    },
    {
        "id": 2795,
        "statement": "visits(bald_eagle, tiger) :- likes(mouse, bald_eagle).",
        "description": "If the mouse likes the bald eagle then the bald eagle visits the tiger."
    },
    {
        "id": 2796,
        "statement": "visits(bear, bald_eagle) :- visits(X, bear), visits(X, bald_eagle).",
        "description": "If someone visits the bear and they visit the bald eagle then the bear visits the bald eagle."
    },
    {
        "id": 2797,
        "statement": "visits(X, bald_eagle) :- is(X, round), not chases(X, tiger).",
        "description": "If someone is round and they do not chase the tiger then they visit the bald eagle."
    },
    {
        "id": 2798,
        "statement": "sees(bear, lion).",
        "description": "The bear sees the lion."
    },
    {
        "id": 2799,
        "statement": "needs(dog, cat).",
        "description": "The dog needs the cat."
    },
    {
        "id": 2800,
        "statement": "sees(lion, bear).",
        "description": "The lion sees the bear."
    },
    {
        "id": 2801,
        "statement": "is(bear, cold) :- eats(X, bear).",
        "description": "If someone eats the bear then the bear is cold."
    },
    {
        "id": 2802,
        "statement": "eats(cat, dog) :- needs(X, cat), is(cat, young).",
        "description": "If someone needs the cat and the cat is young then the cat eats the dog."
    },
    {
        "id": 2803,
        "statement": "needs(lion, cat) :- is(lion, nice).",
        "description": "If the lion is nice then the lion needs the cat."
    },
    {
        "id": 2804,
        "statement": "is(dog, big) :- needs(X, dog), needs(X, bear).",
        "description": "If someone needs the dog and they need the bear then the dog is big."
    },
    {
        "id": 2805,
        "statement": "eats(X, bear) :- needs(X, cat).",
        "description": "If someone needs the cat then they eat the bear."
    },
    {
        "id": 2806,
        "statement": "sees(X, lion) :- is(X, young), eats(X, bear).",
        "description": "If someone is young and they eat the bear then they see the lion."
    },
    {
        "id": 2807,
        "statement": "needs(X, cat) :- is(X, cold).",
        "description": "If someone is cold then they need the cat."
    },
    {
        "id": 2808,
        "statement": "needs(X, bear) :- eats(X, bear), not needs(bear, dog).",
        "description": "If someone eats the bear and the bear does not need the dog then they need the bear."
    },
    {
        "id": 2809,
        "statement": "likes(bald_eagle, rabbit).",
        "description": "The bald eagle likes the rabbit."
    },
    {
        "id": 2810,
        "statement": "sees(mouse, rabbit).",
        "description": "The mouse sees the rabbit."
    },
    {
        "id": 2811,
        "statement": "is(bald_eagle, blue) :- sees(rabbit, bald_eagle), not visits(mouse, rabbit).",
        "description": "If the rabbit sees the bald eagle and the mouse does not visit the rabbit then the bald eagle is blue."
    },
    {
        "id": 2812,
        "statement": "visits(bald_eagle, rabbit) :- visits(X, bald_eagle), likes(X, bald_eagle).",
        "description": "If someone visits the bald eagle and they like the bald eagle then the bald eagle visits the rabbit."
    },
    {
        "id": 2813,
        "statement": "likes(X, mouse) :- is(X, nice), likes(X, squirrel).",
        "description": "If someone is nice and they like the squirrel then they like the mouse."
    },
    {
        "id": 2814,
        "statement": "visits(squirrel, rabbit) :- sees(rabbit, squirrel).",
        "description": "If the rabbit sees the squirrel then the squirrel visits the rabbit."
    },
    {
        "id": 2815,
        "statement": "sees(squirrel, mouse) :- likes(mouse, squirrel), not likes(squirrel, bald_eagle).",
        "description": "If the mouse likes the squirrel and the squirrel does not like the bald eagle then the squirrel sees the mouse."
    },
    {
        "id": 2816,
        "statement": "is(X, cold) :- visits(X, rabbit).",
        "description": "If someone visits the rabbit then they are cold."
    },
    {
        "id": 2817,
        "statement": "eats(bear, mouse).",
        "description": "The bear eats the mouse."
    },
    {
        "id": 2818,
        "statement": "eats(lion, bear).",
        "description": "The lion eats the bear."
    },
    {
        "id": 2819,
        "statement": "visits(lion, cow).",
        "description": "The lion visits the cow."
    },
    {
        "id": 2820,
        "statement": "eats(X, lion) :- is(X, blue).",
        "description": "If something is blue then it eats the lion."
    },
    {
        "id": 2821,
        "statement": "eats(cow, bear) :- visits(X, cow).",
        "description": "If something visits the cow then the cow eats the bear."
    },
    {
        "id": 2822,
        "statement": "visits(X, cow) :- eats(X, lion).",
        "description": "If something eats the lion then it visits the cow."
    },
    {
        "id": 2823,
        "statement": "visits(X, lion) :- visits(X, cow).",
        "description": "If something visits the cow then it visits the lion."
    },
    {
        "id": 2824,
        "statement": "eats(bear, cow) :- is(bear, red).",
        "description": "If the bear is red then the bear eats the cow."
    },
    {
        "id": 2825,
        "statement": "needs(X, mouse) :- visits(X, bear).",
        "description": "If something visits the bear then it needs the mouse."
    },
    {
        "id": 2826,
        "statement": "is(X, blue) :- is(X, big).",
        "description": "Big things are blue."
    },
    {
        "id": 2827,
        "statement": "is(cow, big) :- eats(X, cow).",
        "description": "If something eats the cow then the cow is big."
    },
    {
        "id": 2828,
        "statement": "chases(lion, bald_eagle).",
        "description": "The lion chases the bald eagle."
    },
    {
        "id": 2829,
        "statement": "needs(tiger, bald_eagle).",
        "description": "The tiger needs the bald eagle."
    },
    {
        "id": 2830,
        "statement": "visits(X, bald_eagle) :- needs(X, tiger).",
        "description": "If something needs the tiger then it visits the bald eagle."
    },
    {
        "id": 2831,
        "statement": "needs(X, cow) :- needs(X, lion).",
        "description": "If something needs the lion then it needs the cow."
    },
    {
        "id": 2832,
        "statement": "is(X, cold) :- visits(X, bald_eagle), not visits(bald_eagle, cow).",
        "description": "If something visits the bald eagle and the bald eagle does not visit the cow then it is cold."
    },
    {
        "id": 2833,
        "statement": "needs(X, lion) :- is(X, big).",
        "description": "If something is big then it needs the lion."
    },
    {
        "id": 2834,
        "statement": "is(bald_eagle, big) :- visits(bald_eagle, cow), is(bald_eagle, red).",
        "description": "If the bald eagle visits the cow and the bald eagle is red then the bald eagle is big."
    },
    {
        "id": 2835,
        "statement": "chases(cow, bald_eagle) :- needs(X, cow).",
        "description": "If something needs the cow then the cow chases the bald eagle."
    },
    {
        "id": 2836,
        "statement": "is(X, big) :- chases(X, bald_eagle).",
        "description": "If something chases the bald eagle then it is big."
    },
    {
        "id": 2837,
        "statement": "visits(tiger, lion) :- visits(cow, tiger), chases(cow, tiger).",
        "description": "If the cow visits the tiger and the cow chases the tiger then the tiger visits the lion."
    },
    {
        "id": 2838,
        "statement": "is(cow, big) :- needs(lion, cow).",
        "description": "If the lion needs the cow then the cow is big."
    },
    {
        "id": 2839,
        "statement": "is(X, white) :- is(X, round).",
        "description": "Round people are white."
    },
    {
        "id": 2840,
        "statement": "is(X, round) :- is(X, white), is(X, red).",
        "description": "White, red people are round."
    },
    {
        "id": 2841,
        "statement": "is(X, kind) :- is(X, quiet), is(X, white).",
        "description": "If someone is quiet and white then they are kind."
    },
    {
        "id": 2842,
        "statement": "is(X, kind) :- is(X, white).",
        "description": "All white people are kind."
    },
    {
        "id": 2843,
        "statement": "is(X, quiet) :- is(X, kind), is(X, white).",
        "description": "Kind, white people are quiet."
    },
    {
        "id": 2844,
        "statement": "is(X, red) :- is(X, kind), is(X, quiet).",
        "description": "Kind, quiet people are red."
    },
    {
        "id": 2845,
        "statement": "is(X, young) :- is(X, red).",
        "description": "Red people are young."
    },
    {
        "id": 2846,
        "statement": "is(charlie, quiet) :- is(charlie, red), is(charlie, green).",
        "description": "If Charlie is red and Charlie is green then Charlie is quiet."
    },
    {
        "id": 2847,
        "statement": "is(bald_eagle, round).",
        "description": "The bald eagle is round."
    },
    {
        "id": 2848,
        "statement": "needs(X, dog) :- visits(X, squirrel).",
        "description": "If something visits the squirrel then it needs the dog."
    },
    {
        "id": 2849,
        "statement": "is(X, nice) :- needs(X, dog).",
        "description": "If something needs the dog then it is nice."
    },
    {
        "id": 2850,
        "statement": "chases(squirrel, dog) :- visits(X, squirrel), is(X, green).",
        "description": "If something visits the squirrel and it is green then the squirrel chases the dog."
    },
    {
        "id": 2851,
        "statement": "visits(bald_eagle, squirrel) :- is(X, nice), not chases(X, bald_eagle).",
        "description": "If something is nice and it does not chase the bald eagle then the bald eagle visits the squirrel."
    },
    {
        "id": 2852,
        "statement": "needs(dog, squirrel) :- chases(X, dog), chases(dog, rabbit).",
        "description": "If something chases the dog and the dog chases the rabbit then the dog needs the squirrel."
    },
    {
        "id": 2853,
        "statement": "needs(bald_eagle, rabbit) :- chases(X, bald_eagle), not is(X, nice).",
        "description": "If something chases the bald eagle and it is not nice then the bald eagle needs the rabbit."
    },
    {
        "id": 2854,
        "statement": "visits(rabbit, dog) :- chases(X, rabbit), not is(X, nice).",
        "description": "If something chases the rabbit and it is not nice then the rabbit visits the dog."
    },
    {
        "id": 2855,
        "statement": "is(X, blue) :- is(X, nice).",
        "description": "If someone is nice then they are blue."
    },
    {
        "id": 2856,
        "statement": "is(X, young) :- is(X, green), is(X, nice).",
        "description": "All green, nice people are young."
    },
    {
        "id": 2857,
        "statement": "is(X, young) :- is(X, furry).",
        "description": "If someone is furry then they are young."
    },
    {
        "id": 2858,
        "statement": "is(X, rough) :- is(X, green), not is(X, nice).",
        "description": "If someone is green and not nice then they are rough."
    },
    {
        "id": 2859,
        "statement": "is(X, furry) :- is(X, red).",
        "description": "If someone is red then they are furry."
    },
    {
        "id": 2860,
        "statement": "is(bob, smart) :- is(bob, green).",
        "description": "If Bob is green then Bob is smart."
    },
    {
        "id": 2861,
        "statement": "is(X, green) :- is(X, smart).",
        "description": "Smart people are green."
    },
    {
        "id": 2862,
        "statement": "is(X, big) :- is(X, nice), is(X, blue).",
        "description": "If someone is nice and blue then they are big."
    },
    {
        "id": 2863,
        "statement": "is(X, nice) :- is(X, green), is(X, smart).",
        "description": "All green, smart people are nice."
    },
    {
        "id": 2864,
        "statement": "is(X, nice) :- is(X, blue).",
        "description": "Blue people are nice."
    },
    {
        "id": 2865,
        "statement": "likes(bald_eagle, lion).",
        "description": "The bald eagle likes the lion."
    },
    {
        "id": 2866,
        "statement": "chases(lion, cat).",
        "description": "The lion chases the cat."
    },
    {
        "id": 2867,
        "statement": "chases(X, rabbit) :- likes(X, lion), is(lion, nice).",
        "description": "If someone likes the lion and the lion is nice then they chase the rabbit."
    },
    {
        "id": 2868,
        "statement": "is(rabbit, big) :- likes(rabbit, cat), chases(rabbit, bald_eagle).",
        "description": "If the rabbit likes the cat and the rabbit chases the bald eagle then the rabbit is big."
    },
    {
        "id": 2869,
        "statement": "likes(X, rabbit) :- is(X, nice), is(X, rough).",
        "description": "If someone is nice and rough then they like the rabbit."
    },
    {
        "id": 2870,
        "statement": "chases(lion, rabbit) :- visits(X, lion), is(lion, green).",
        "description": "If someone visits the lion and the lion is green then the lion chases the rabbit."
    },
    {
        "id": 2871,
        "statement": "is(X, nice) :- chases(X, rabbit).",
        "description": "If someone chases the rabbit then they are nice."
    },
    {
        "id": 2872,
        "statement": "likes(lion, bald_eagle) :- chases(bald_eagle, lion).",
        "description": "If the bald eagle chases the lion then the lion likes the bald eagle."
    },
    {
        "id": 2873,
        "statement": "likes(rabbit, bald_eagle) :- chases(X, rabbit), not is(X, nice).",
        "description": "If someone chases the rabbit and they are not nice then the rabbit likes the bald eagle."
    },
    {
        "id": 2874,
        "statement": "is(anne, green) :- is(anne, furry), not is(anne, round).",
        "description": "If Anne is furry and Anne is not round then Anne is green."
    },
    {
        "id": 2875,
        "statement": "is(X, red) :- is(X, young), is(X, green).",
        "description": "All young, green things are red."
    },
    {
        "id": 2876,
        "statement": "is(X, big) :- is(X, rough), is(X, round).",
        "description": "Rough, round things are big."
    },
    {
        "id": 2877,
        "statement": "is(X, rough) :- is(X, green).",
        "description": "If something is green then it is rough."
    },
    {
        "id": 2878,
        "statement": "is(X, green) :- is(X, furry), is(X, red).",
        "description": "All furry, red things are green."
    },
    {
        "id": 2879,
        "statement": "is(X, round) :- is(X, cold).",
        "description": "All cold people are round."
    },
    {
        "id": 2880,
        "statement": "is(X, smart) :- is(X, cold).",
        "description": "Cold people are smart."
    },
    {
        "id": 2881,
        "statement": "is(X, cold) :- is(X, kind), is(X, quiet).",
        "description": "Kind, quiet people are cold."
    },
    {
        "id": 2882,
        "statement": "is(X, quiet) :- is(X, round).",
        "description": "If someone is round then they are quiet."
    },
    {
        "id": 2883,
        "statement": "is(X, kind) :- is(X, cold), is(X, big).",
        "description": "All cold, big people are kind."
    },
    {
        "id": 2884,
        "statement": "is(gary, quiet) :- is(gary, cold), is(gary, round).",
        "description": "If Gary is cold and Gary is round then Gary is quiet."
    },
    {
        "id": 2885,
        "statement": "is(X, big) :- is(X, smart).",
        "description": "Smart people are big."
    },
    {
        "id": 2886,
        "statement": "is(X, quiet) :- is(X, kind).",
        "description": "Kind people are quiet."
    },
    {
        "id": 2887,
        "statement": "is(dave, big) :- is(dave, round), is(dave, quiet).",
        "description": "If Dave is round and Dave is quiet then Dave is big."
    },
    {
        "id": 2888,
        "statement": "is(harry, big) :- is(harry, quiet).",
        "description": "If Harry is quiet then Harry is big."
    },
    {
        "id": 2889,
        "statement": "is(X, young) :- is(X, kind), is(X, furry).",
        "description": "If someone is kind and furry then they are young."
    },
    {
        "id": 2890,
        "statement": "is(X, kind) :- is(X, big), is(X, furry).",
        "description": "Big, furry people are kind."
    },
    {
        "id": 2891,
        "statement": "is(X, round) :- is(X, furry).",
        "description": "If someone is furry then they are round."
    },
    {
        "id": 2892,
        "statement": "is(dave, round) :- is(dave, kind).",
        "description": "If Dave is kind then Dave is round."
    },
    {
        "id": 2893,
        "statement": "is(X, kind) :- is(X, round), is(X, blue).",
        "description": "All round, blue things are kind."
    },
    {
        "id": 2894,
        "statement": "is(X, big) :- is(X, blue).",
        "description": "All blue things are big."
    },
    {
        "id": 2895,
        "statement": "is(X, red) :- is(X, round).",
        "description": "If something is round then it is red."
    },
    {
        "id": 2896,
        "statement": "is(X, smart) :- is(X, cold).",
        "description": "Cold things are smart."
    },
    {
        "id": 2897,
        "statement": "is(gary, cold) :- is(gary, red).",
        "description": "If Gary is red then Gary is cold."
    },
    {
        "id": 2898,
        "statement": "is(X, quiet) :- is(X, round), is(X, blue).",
        "description": "If someone is round and blue then they are quiet."
    },
    {
        "id": 2899,
        "statement": "is(X, quiet) :- is(X, white).",
        "description": "If someone is white then they are quiet."
    },
    {
        "id": 2900,
        "statement": "is(X, blue) :- is(X, quiet).",
        "description": "If someone is quiet then they are blue."
    },
    {
        "id": 2901,
        "statement": "is(X, red) :- is(X, blue).",
        "description": "All blue people are red."
    },
    {
        "id": 2902,
        "statement": "is(X, white) :- is(X, cold).",
        "description": "Cold people are white."
    },
    {
        "id": 2903,
        "statement": "is(fiona, nice) :- is(fiona, red).",
        "description": "If Fiona is red then Fiona is nice."
    },
    {
        "id": 2904,
        "statement": "is(charlie, cold) :- is(charlie, round), is(charlie, red).",
        "description": "If Charlie is round and Charlie is red then Charlie is cold."
    },
    {
        "id": 2905,
        "statement": "is(bob, white) :- is(bob, red).",
        "description": "If Bob is red then Bob is white."
    },
    {
        "id": 2906,
        "statement": "is(X, blue) :- is(X, round), is(X, kind).",
        "description": "If something is round and kind then it is blue."
    },
    {
        "id": 2907,
        "statement": "is(erin, kind) :- is(erin, white).",
        "description": "If Erin is white then Erin is kind."
    },
    {
        "id": 2908,
        "statement": "is(X, round) :- is(X, furry), is(X, red).",
        "description": "If something is furry and red then it is round."
    },
    {
        "id": 2909,
        "statement": "is(X, green) :- is(X, blue).",
        "description": "If something is blue then it is green."
    },
    {
        "id": 2910,
        "statement": "is(harry, kind) :- is(harry, white).",
        "description": "If Harry is white then Harry is kind."
    },
    {
        "id": 2911,
        "statement": "is(X, round) :- is(X, white), is(X, kind).",
        "description": "All white, kind things are round."
    },
    {
        "id": 2912,
        "statement": "is(X, blue) :- is(X, round).",
        "description": "All round things are blue."
    },
    {
        "id": 2913,
        "statement": "is(X, blue) :- is(X, cold), is(X, nice).",
        "description": "All cold, nice things are blue."
    },
    {
        "id": 2914,
        "statement": "is(X, cold) :- is(X, blue), is(X, round).",
        "description": "Blue, round things are cold."
    },
    {
        "id": 2915,
        "statement": "is(fiona, rough) :- is(fiona, nice).",
        "description": "If Fiona is nice then Fiona is rough."
    },
    {
        "id": 2916,
        "statement": "is(X, green) :- is(X, rough).",
        "description": "All rough things are green."
    },
    {
        "id": 2917,
        "statement": "is(X, nice) :- is(X, green).",
        "description": "Green people are nice."
    },
    {
        "id": 2918,
        "statement": "is(X, green) :- is(X, red), is(X, blue).",
        "description": "All red, blue people are green."
    },
    {
        "id": 2919,
        "statement": "is(X, red) :- is(X, nice).",
        "description": "All nice people are red."
    },
    {
        "id": 2920,
        "statement": "is(X, round) :- is(X, red).",
        "description": "If someone is red then they are round."
    },
    {
        "id": 2921,
        "statement": "is(X, furry) :- is(X, round), is(X, red).",
        "description": "All round, red people are furry."
    },
    {
        "id": 2922,
        "statement": "is(X, furry) :- is(X, blue).",
        "description": "If someone is blue then they are furry."
    },
    {
        "id": 2923,
        "statement": "is(bob, green) :- is(bob, round), is(bob, nice).",
        "description": "If Bob is round and Bob is nice then Bob is green."
    },
    {
        "id": 2924,
        "statement": "likes(bear, mouse).",
        "description": "The bear likes the mouse."
    },
    {
        "id": 2925,
        "statement": "likes(tiger, bear) :- needs(X, tiger), is(X, cold).",
        "description": "If someone needs the tiger and they are cold then the tiger likes the bear."
    },
    {
        "id": 2926,
        "statement": "needs(X, bald_eagle) :- is(X, nice).",
        "description": "If someone is nice then they need the bald eagle."
    },
    {
        "id": 2927,
        "statement": "chases(tiger, bald_eagle) :- chases(X, tiger).",
        "description": "If someone chases the tiger then the tiger chases the bald eagle."
    },
    {
        "id": 2928,
        "statement": "is(X, cold) :- is(X, rough).",
        "description": "All rough people are cold."
    },
    {
        "id": 2929,
        "statement": "is(X, cold) :- likes(X, bear), is(bear, red).",
        "description": "If someone likes the bear and the bear is red then they are cold."
    },
    {
        "id": 2930,
        "statement": "is(mouse, blue) :- chases(X, mouse), chases(mouse, bear).",
        "description": "If someone chases the mouse and the mouse chases the bear then the mouse is blue."
    },
    {
        "id": 2931,
        "statement": "is(bald_eagle, nice) :- likes(X, bald_eagle).",
        "description": "If someone likes the bald eagle then the bald eagle is nice."
    },
    {
        "id": 2932,
        "statement": "likes(bald_eagle, bear) :- needs(X, bald_eagle).",
        "description": "If someone needs the bald eagle then the bald eagle likes the bear."
    },
    {
        "id": 2933,
        "statement": "is(bear, red) :- chases(X, bear).",
        "description": "If someone chases the bear then the bear is red."
    },
    {
        "id": 2934,
        "statement": "chases(bear, dog).",
        "description": "The bear chases the dog."
    },
    {
        "id": 2935,
        "statement": "needs(cow, dog).",
        "description": "The cow needs the dog."
    },
    {
        "id": 2936,
        "statement": "likes(dog, bear).",
        "description": "The dog likes the bear."
    },
    {
        "id": 2937,
        "statement": "chases(squirrel, bear).",
        "description": "The squirrel chases the bear."
    },
    {
        "id": 2938,
        "statement": "chases(cow, dog) :- likes(X, cow), chases(X, cow).",
        "description": "If something likes the cow and it chases the cow then the cow chases the dog."
    },
    {
        "id": 2939,
        "statement": "is(X, round) :- is(X, green), needs(X, dog).",
        "description": "If something is green and it needs the dog then it is round."
    },
    {
        "id": 2940,
        "statement": "is(squirrel, big) :- likes(X, squirrel).",
        "description": "If something likes the squirrel then the squirrel is big."
    },
    {
        "id": 2941,
        "statement": "is(cow, blue) :- is(X, green), likes(X, cow).",
        "description": "If something is green and it likes the cow then the cow is blue."
    },
    {
        "id": 2942,
        "statement": "is(X, kind) :- is(X, blue).",
        "description": "If something is blue then it is kind."
    },
    {
        "id": 2943,
        "statement": "likes(squirrel, dog) :- likes(dog, squirrel), is(squirrel, green).",
        "description": "If the dog likes the squirrel and the squirrel is green then the squirrel likes the dog."
    },
    {
        "id": 2944,
        "statement": "likes(squirrel, cow) :- chases(X, squirrel), not needs(X, cow).",
        "description": "If something chases the squirrel and it does not need the cow then the squirrel likes the cow."
    },
    {
        "id": 2945,
        "statement": "needs(cow, bear) :- chases(cow, bear), not is(cow, round).",
        "description": "If the cow chases the bear and the cow is not round then the cow needs the bear."
    },
    {
        "id": 2946,
        "statement": "is(bob, blue) :- is(bob, smart).",
        "description": "If Bob is smart then Bob is blue."
    },
    {
        "id": 2947,
        "statement": "is(X, young) :- is(X, smart).",
        "description": "Smart things are young."
    },
    {
        "id": 2948,
        "statement": "is(fiona, nice) :- is(fiona, smart), not is(fiona, young).",
        "description": "If Fiona is smart and Fiona is not young then Fiona is nice."
    },
    {
        "id": 2949,
        "statement": "is(X, red) :- is(X, green), not is(X, young).",
        "description": "If something is green and not young then it is red."
    },
    {
        "id": 2950,
        "statement": "is(X, nice) :- is(X, young).",
        "description": "If something is young then it is nice."
    },
    {
        "id": 2951,
        "statement": "is(X, nice) :- is(X, blue), is(X, smart).",
        "description": "All blue, smart things are nice."
    },
    {
        "id": 2952,
        "statement": "is(X, green) :- is(X, quiet), is(X, white).",
        "description": "All quiet, white things are green."
    },
    {
        "id": 2953,
        "statement": "is(X, white) :- is(X, quiet), is(X, rough).",
        "description": "All quiet, rough things are white."
    },
    {
        "id": 2954,
        "statement": "is(charlie, round) :- is(charlie, white), is(charlie, green).",
        "description": "If Charlie is white and Charlie is green then Charlie is round."
    },
    {
        "id": 2955,
        "statement": "is(gary, round) :- is(gary, young).",
        "description": "If Gary is young then Gary is round."
    },
    {
        "id": 2956,
        "statement": "is(X, rough) :- is(X, young), is(X, green).",
        "description": "Young, green things are rough."
    },
    {
        "id": 2957,
        "statement": "is(X, big) :- is(X, green), is(X, young).",
        "description": "All green, young things are big."
    },
    {
        "id": 2958,
        "statement": "is(X, rough) :- is(X, quiet), is(X, young).",
        "description": "Quiet, young things are rough."
    },
    {
        "id": 2959,
        "statement": "is(X, cold) :- is(X, blue).",
        "description": "Blue people are cold."
    },
    {
        "id": 2960,
        "statement": "is(X, red) :- is(X, cold).",
        "description": "Cold people are red."
    },
    {
        "id": 2961,
        "statement": "is(X, big) :- is(X, young), is(X, kind).",
        "description": "Young, kind people are big."
    },
    {
        "id": 2962,
        "statement": "is(X, kind) :- is(X, cold).",
        "description": "All cold people are kind."
    },
    {
        "id": 2963,
        "statement": "is(X, quiet) :- is(X, red), is(X, nice).",
        "description": "All red, nice things are quiet."
    },
    {
        "id": 2964,
        "statement": "is(X, nice) :- is(X, green).",
        "description": "All green things are nice."
    },
    {
        "id": 2965,
        "statement": "is(X, green) :- is(X, blue), is(X, smart).",
        "description": "Blue, smart things are green."
    },
    {
        "id": 2966,
        "statement": "is(X, kind) :- is(X, smart).",
        "description": "All smart things are kind."
    },
    {
        "id": 2967,
        "statement": "is(X, kind) :- is(X, smart).",
        "description": "Smart things are kind."
    },
    {
        "id": 2968,
        "statement": "is(X, nice) :- is(X, green), is(X, red).",
        "description": "All green, red things are nice."
    },
    {
        "id": 2969,
        "statement": "is(X, red) :- is(X, green), is(X, blue).",
        "description": "If something is green and blue then it is red."
    },
    {
        "id": 2970,
        "statement": "is(X, young) :- is(X, nice), is(X, red).",
        "description": "Nice, red things are young."
    },
    {
        "id": 2971,
        "statement": "is(X, green) :- is(X, smart), is(X, nice).",
        "description": "If something is smart and nice then it is green."
    },
    {
        "id": 2972,
        "statement": "is(X, blue) :- is(X, green).",
        "description": "All green things are blue."
    },
    {
        "id": 2973,
        "statement": "is(X, smart) :- is(X, furry), is(X, round).",
        "description": "Furry, round people are smart."
    },
    {
        "id": 2974,
        "statement": "is(gary, quiet) :- is(gary, furry).",
        "description": "If Gary is furry then Gary is quiet."
    },
    {
        "id": 2975,
        "statement": "is(X, young) :- is(X, quiet).",
        "description": "All quiet people are young."
    },
    {
        "id": 2976,
        "statement": "is(X, quiet) :- is(X, red).",
        "description": "Red people are quiet."
    },
    {
        "id": 2977,
        "statement": "is(X, quiet) :- is(X, smart), is(X, furry).",
        "description": "Smart, furry people are quiet."
    },
    {
        "id": 2978,
        "statement": "is(X, round) :- is(X, young).",
        "description": "Young people are round."
    },
    {
        "id": 2979,
        "statement": "is(X, cold) :- is(X, young), is(X, quiet).",
        "description": "If someone is young and quiet then they are cold."
    },
    {
        "id": 2980,
        "statement": "is(X, furry) :- is(X, cold), is(X, quiet).",
        "description": "If someone is cold and quiet then they are furry."
    },
    {
        "id": 2981,
        "statement": "is(dave, red) :- is(dave, round), is(dave, cold).",
        "description": "If Dave is round and Dave is cold then Dave is red."
    },
    {
        "id": 2982,
        "statement": "sees(squirrel, rabbit) :- likes(squirrel, rabbit), sees(rabbit, lion).",
        "description": "If the squirrel likes the rabbit and the rabbit sees the lion then the squirrel sees the rabbit."
    },
    {
        "id": 2983,
        "statement": "likes(lion, rabbit) :- sees(X, squirrel), sees(squirrel, lion).",
        "description": "If someone sees the squirrel and the squirrel sees the lion then the lion likes the rabbit."
    },
    {
        "id": 2984,
        "statement": "is(bald_eagle, big) :- sees(X, bald_eagle).",
        "description": "If someone sees the bald eagle then the bald eagle is big."
    },
    {
        "id": 2985,
        "statement": "sees(X, squirrel) :- sees(X, bald_eagle).",
        "description": "If someone sees the bald eagle then they see the squirrel."
    },
    {
        "id": 2986,
        "statement": "sees(X, bald_eagle) :- is(X, big).",
        "description": "If someone is big then they see the bald eagle."
    },
    {
        "id": 2987,
        "statement": "eats(X, bald_eagle) :- sees(X, bald_eagle), not is(X, rough).",
        "description": "If someone sees the bald eagle and they are not rough then they eat the bald eagle."
    },
    {
        "id": 2988,
        "statement": "eats(X, bald_eagle) :- sees(X, squirrel).",
        "description": "If someone sees the squirrel then they eat the bald eagle."
    },
    {
        "id": 2989,
        "statement": "eats(X, lion) :- is(X, blue).",
        "description": "If someone is blue then they eat the lion."
    },
    {
        "id": 2990,
        "statement": "sees(X, rabbit) :- likes(X, rabbit).",
        "description": "If someone likes the rabbit then they see the rabbit."
    },
    {
        "id": 2991,
        "statement": "sees(bald_eagle, tiger) :- sees(X, bald_eagle).",
        "description": "If someone sees the bald eagle then the bald eagle sees the tiger."
    },
    {
        "id": 2992,
        "statement": "is(bald_eagle, red) :- likes(X, bald_eagle), is(X, red).",
        "description": "If someone likes the bald eagle and they are red then the bald eagle is red."
    },
    {
        "id": 2993,
        "statement": "is(rabbit, blue) :- not sees(rabbit, tiger).",
        "description": "If the rabbit does not see the tiger then the rabbit is blue."
    },
    {
        "id": 2994,
        "statement": "sees(bear, bald_eagle) :- eats(X, bear).",
        "description": "If someone eats the bear then the bear sees the bald eagle."
    },
    {
        "id": 2995,
        "statement": "likes(X, tiger) :- sees(X, rabbit).",
        "description": "If someone sees the rabbit then they like the tiger."
    },
    {
        "id": 2996,
        "statement": "sees(bear, tiger) :- eats(X, bear), sees(X, bear).",
        "description": "If someone eats the bear and they see the bear then the bear sees the tiger."
    },
    {
        "id": 2997,
        "statement": "sees(X, bald_eagle) :- likes(X, tiger).",
        "description": "If someone likes the tiger then they see the bald eagle."
    },
    {
        "id": 2998,
        "statement": "is(X, blue) :- is(X, young), is(X, rough).",
        "description": "All young, rough people are blue."
    },
    {
        "id": 2999,
        "statement": "is(X, young) :- is(X, big), is(X, blue).",
        "description": "All big, blue people are young."
    },
    {
        "id": 3000,
        "statement": "is(erin, big) :- is(erin, rough), is(erin, white).",
        "description": "If Erin is rough and Erin is white then Erin is big."
    },
    {
        "id": 3001,
        "statement": "is(X, big) :- is(X, quiet).",
        "description": "All quiet people are big."
    },
    {
        "id": 3002,
        "statement": "is(X, rough) :- is(X, young), is(X, smart).",
        "description": "If someone is young and smart then they are rough."
    },
    {
        "id": 3003,
        "statement": "is(X, young) :- is(X, smart), is(X, big).",
        "description": "If someone is smart and big then they are young."
    },
    {
        "id": 3004,
        "statement": "is(X, white) :- is(X, blue), is(X, rough).",
        "description": "All blue, rough people are white."
    },
    {
        "id": 3005,
        "statement": "is(X, white) :- is(X, round).",
        "description": "If something is round then it is white."
    },
    {
        "id": 3006,
        "statement": "is(X, nice) :- is(X, cold).",
        "description": "All cold things are nice."
    },
    {
        "id": 3007,
        "statement": "is(X, red) :- is(X, white), is(X, cold).",
        "description": "White, cold things are red."
    },
    {
        "id": 3008,
        "statement": "is(X, red) :- is(X, white).",
        "description": "If something is white then it is red."
    },
    {
        "id": 3009,
        "statement": "is(X, blue) :- is(X, green), is(X, nice).",
        "description": "All green, nice things are blue."
    },
    {
        "id": 3010,
        "statement": "is(X, round) :- is(X, nice).",
        "description": "Nice things are round."
    },
    {
        "id": 3011,
        "statement": "is(X, green) :- is(X, nice), is(X, white).",
        "description": "If something is nice and white then it is green."
    },
    {
        "id": 3012,
        "statement": "is(anne, nice) :- is(anne, cold).",
        "description": "If Anne is cold then Anne is nice."
    },
    {
        "id": 3013,
        "statement": "is(X, cold) :- is(X, blue).",
        "description": "Blue things are cold."
    },
    {
        "id": 3014,
        "statement": "is(X, blue) :- is(X, red), is(X, furry).",
        "description": "Red, furry things are blue."
    },
    {
        "id": 3015,
        "statement": "is(X, big) :- is(X, red), is(X, cold).",
        "description": "Red, cold things are big."
    },
    {
        "id": 3016,
        "statement": "is(X, big) :- is(X, kind).",
        "description": "All kind things are big."
    },
    {
        "id": 3017,
        "statement": "is(X, furry) :- is(X, cold), is(X, blue).",
        "description": "All cold, blue things are furry."
    },
    {
        "id": 3018,
        "statement": "is(harry, quiet) :- is(harry, blue), is(harry, big).",
        "description": "If Harry is blue and Harry is big then Harry is quiet."
    },
    {
        "id": 3019,
        "statement": "is(X, blue) :- is(X, quiet), is(X, big).",
        "description": "All quiet, big things are blue."
    },
    {
        "id": 3020,
        "statement": "is(erin, big) :- is(erin, furry), is(erin, blue).",
        "description": "If Erin is furry and Erin is blue then Erin is big."
    },
    {
        "id": 3021,
        "statement": "is(X, red) :- is(X, cold), is(X, furry).",
        "description": "Cold, furry things are red."
    },
    {
        "id": 3022,
        "statement": "chases(X, bear) :- visits(X, bear), chases(bear, rabbit).",
        "description": "If something visits the bear and the bear chases the rabbit then it chases the bear."
    },
    {
        "id": 3023,
        "statement": "is(mouse, cold) :- visits(mouse, rabbit).",
        "description": "If the mouse visits the rabbit then the mouse is cold."
    },
    {
        "id": 3024,
        "statement": "visits(X, lion) :- visits(X, rabbit).",
        "description": "If something visits the rabbit then it visits the lion."
    },
    {
        "id": 3025,
        "statement": "visits(X, rabbit) :- chases(X, bear).",
        "description": "If something chases the bear then it visits the rabbit."
    },
    {
        "id": 3026,
        "statement": "likes(X, lion) :- is(X, young).",
        "description": "If something is young then it likes the lion."
    },
    {
        "id": 3027,
        "statement": "visits(X, bear) :- visits(X, rabbit).",
        "description": "If something visits the rabbit then it visits the bear."
    },
    {
        "id": 3028,
        "statement": "chases(X, mouse) :- visits(X, lion), likes(X, lion).",
        "description": "If something visits the lion and it likes the lion then it chases the mouse."
    },
    {
        "id": 3029,
        "statement": "chases(lion, bear) :- is(X, rough), visits(X, lion).",
        "description": "If something is rough and it visits the lion then the lion chases the bear."
    },
    {
        "id": 3030,
        "statement": "is(bob, white) :- is(bob, big).",
        "description": "If Bob is big then Bob is white."
    },
    {
        "id": 3031,
        "statement": "is(X, white) :- is(X, smart), is(X, kind).",
        "description": "If something is smart and kind then it is white."
    },
    {
        "id": 3032,
        "statement": "is(X, blue) :- is(X, big), is(X, nice).",
        "description": "If something is big and nice then it is blue."
    },
    {
        "id": 3033,
        "statement": "is(X, green) :- is(X, blue).",
        "description": "Blue things are green."
    },
    {
        "id": 3034,
        "statement": "is(X, kind) :- is(X, quiet), is(X, green).",
        "description": "All quiet, green things are kind."
    },
    {
        "id": 3035,
        "statement": "is(X, kind) :- is(X, green), is(X, big).",
        "description": "If something is green and big then it is kind."
    },
    {
        "id": 3036,
        "statement": "is(X, big) :- is(X, quiet).",
        "description": "If something is quiet then it is big."
    },
    {
        "id": 3037,
        "statement": "is(X, blue) :- is(X, young), is(X, green).",
        "description": "All young, green things are blue."
    },
    {
        "id": 3038,
        "statement": "is(X, blue) :- is(X, big).",
        "description": "If something is big then it is blue."
    },
    {
        "id": 3039,
        "statement": "sees(dog, bear).",
        "description": "The dog sees the bear."
    },
    {
        "id": 3040,
        "statement": "is(X, young) :- is(X, kind), is(X, green).",
        "description": "Kind, green things are young."
    },
    {
        "id": 3041,
        "statement": "is(X, young) :- sees(X, bald_eagle), sees(X, lion).",
        "description": "If something sees the bald eagle and it sees the lion then it is young."
    },
    {
        "id": 3042,
        "statement": "is(bald_eagle, green) :- likes(X, bald_eagle).",
        "description": "If something likes the bald eagle then the bald eagle is green."
    },
    {
        "id": 3043,
        "statement": "sees(X, dog) :- sees(X, bald_eagle), visits(bald_eagle, dog).",
        "description": "If something sees the bald eagle and the bald eagle visits the dog then it sees the dog."
    },
    {
        "id": 3044,
        "statement": "sees(X, dog) :- sees(X, bear).",
        "description": "If something sees the bear then it sees the dog."
    },
    {
        "id": 3045,
        "statement": "sees(X, bear) :- is(X, cold).",
        "description": "If something is cold then it sees the bear."
    },
    {
        "id": 3046,
        "statement": "visits(bear, bald_eagle) :- sees(X, bear).",
        "description": "If something sees the bear then the bear visits the bald eagle."
    },
    {
        "id": 3047,
        "statement": "visits(X, dog) :- is(X, young).",
        "description": "If something is young then it visits the dog."
    },
    {
        "id": 3048,
        "statement": "is(X, kind) :- sees(X, dog), is(X, green).",
        "description": "If something sees the dog and it is green then it is kind."
    },
    {
        "id": 3049,
        "statement": "is(X, nice) :- chases(X, cat).",
        "description": "If something chases the cat then it is nice."
    },
    {
        "id": 3050,
        "statement": "eats(X, bald_eagle) :- is(X, nice).",
        "description": "If something is nice then it eats the bald eagle."
    },
    {
        "id": 3051,
        "statement": "chases(bald_eagle, cat) :- eats(X, bald_eagle).",
        "description": "If something eats the bald eagle then the bald eagle chases the cat."
    },
    {
        "id": 3052,
        "statement": "is(rabbit, blue) :- chases(X, bald_eagle), eats(bald_eagle, rabbit).",
        "description": "If something chases the bald eagle and the bald eagle eats the rabbit then the rabbit is blue."
    },
    {
        "id": 3053,
        "statement": "is(X, red) :- chases(X, bald_eagle).",
        "description": "If something chases the bald eagle then it is red."
    },
    {
        "id": 3054,
        "statement": "eats(tiger, bald_eagle) :- is(X, green), eats(X, tiger).",
        "description": "If something is green and it eats the tiger then the tiger eats the bald eagle."
    },
    {
        "id": 3055,
        "statement": "chases(bald_eagle, cat) :- likes(bald_eagle, tiger).",
        "description": "If the bald eagle likes the tiger then the bald eagle chases the cat."
    },
    {
        "id": 3056,
        "statement": "eats(X, rabbit) :- chases(X, rabbit), likes(X, tiger).",
        "description": "If something chases the rabbit and it likes the tiger then it eats the rabbit."
    },
    {
        "id": 3057,
        "statement": "needs(bald_eagle, rabbit).",
        "description": "The bald eagle needs the rabbit."
    },
    {
        "id": 3058,
        "statement": "visits(X, rabbit) :- is(X, nice), not chases(X, squirrel).",
        "description": "If something is nice and it does not chase the squirrel then it visits the rabbit."
    },
    {
        "id": 3059,
        "statement": "is(bald_eagle, nice) :- visits(squirrel, bald_eagle).",
        "description": "If the squirrel visits the bald eagle then the bald eagle is nice."
    },
    {
        "id": 3060,
        "statement": "visits(squirrel, rabbit) :- needs(X, squirrel).",
        "description": "If something needs the squirrel then the squirrel visits the rabbit."
    },
    {
        "id": 3061,
        "statement": "visits(rabbit, bald_eagle) :- is(X, rough), not needs(X, rabbit).",
        "description": "If something is rough and it does not need the rabbit then the rabbit visits the bald eagle."
    },
    {
        "id": 3062,
        "statement": "needs(bald_eagle, squirrel) :- visits(rabbit, bald_eagle), visits(bald_eagle, rabbit).",
        "description": "If the rabbit visits the bald eagle and the bald eagle visits the rabbit then the bald eagle needs the squirrel."
    },
    {
        "id": 3063,
        "statement": "needs(squirrel, bald_eagle) :- visits(X, squirrel).",
        "description": "If something visits the squirrel then the squirrel needs the bald eagle."
    },
    {
        "id": 3064,
        "statement": "is(rabbit, green) :- not chases(cow, rabbit), not needs(rabbit, cow).",
        "description": "If the cow does not chase the rabbit and the rabbit does not need the cow then the rabbit is green."
    },
    {
        "id": 3065,
        "statement": "chases(bald_eagle, cow) :- visits(X, rabbit), visits(rabbit, bald_eagle).",
        "description": "If something visits the rabbit and the rabbit visits the bald eagle then the bald eagle chases the cow."
    },
    {
        "id": 3066,
        "statement": "visits(squirrel, bald_eagle) :- is(squirrel, rough).",
        "description": "If the squirrel is rough then the squirrel visits the bald eagle."
    },
    {
        "id": 3067,
        "statement": "needs(bear, cow).",
        "description": "The bear needs the cow."
    },
    {
        "id": 3068,
        "statement": "needs(X, rabbit) :- eats(X, mouse), not eats(X, bear).",
        "description": "If someone eats the mouse and they do not eat the bear then they need the rabbit."
    },
    {
        "id": 3069,
        "statement": "needs(X, rabbit) :- eats(X, cow), needs(cow, bear).",
        "description": "If someone eats the cow and the cow needs the bear then they need the rabbit."
    },
    {
        "id": 3070,
        "statement": "chases(bear, mouse) :- chases(X, rabbit), not eats(X, bear).",
        "description": "If someone chases the rabbit and they do not eat the bear then the bear chases the mouse."
    },
    {
        "id": 3071,
        "statement": "is(mouse, blue) :- needs(X, rabbit), eats(rabbit, mouse).",
        "description": "If someone needs the rabbit and the rabbit eats the mouse then the mouse is blue."
    },
    {
        "id": 3072,
        "statement": "chases(X, rabbit) :- is(X, blue).",
        "description": "If someone is blue then they chase the rabbit."
    },
    {
        "id": 3073,
        "statement": "is(X, blue) :- chases(X, mouse), eats(X, mouse).",
        "description": "If someone chases the mouse and they eat the mouse then they are blue."
    },
    {
        "id": 3074,
        "statement": "needs(rabbit, cow) :- needs(X, rabbit).",
        "description": "If someone needs the rabbit then the rabbit needs the cow."
    },
    {
        "id": 3075,
        "statement": "needs(mouse, rabbit) :- is(X, cold), eats(X, mouse).",
        "description": "If someone is cold and they eat the mouse then the mouse needs the rabbit."
    },
    {
        "id": 3076,
        "statement": "is(X, nice) :- is(X, round), is(X, red).",
        "description": "All round, red things are nice."
    },
    {
        "id": 3077,
        "statement": "is(X, red) :- is(X, nice), is(X, kind).",
        "description": "Nice, kind things are red."
    },
    {
        "id": 3078,
        "statement": "is(X, kind) :- is(X, round).",
        "description": "If something is round then it is kind."
    },
    {
        "id": 3079,
        "statement": "is(X, young) :- is(X, rough), is(X, red).",
        "description": "If something is rough and red then it is young."
    },
    {
        "id": 3080,
        "statement": "is(X, round) :- is(X, white).",
        "description": "If something is white then it is round."
    },
    {
        "id": 3081,
        "statement": "is(X, round) :- is(X, young), is(X, white).",
        "description": "Young, white things are round."
    },
    {
        "id": 3082,
        "statement": "is(dave, blue) :- is(dave, red).",
        "description": "If Dave is red then Dave is blue."
    },
    {
        "id": 3083,
        "statement": "is(X, green) :- is(X, round), is(X, nice).",
        "description": "Round, nice things are green."
    },
    {
        "id": 3084,
        "statement": "is(harry, green) :- is(harry, blue), is(harry, round).",
        "description": "If Harry is blue and Harry is round then Harry is green."
    },
    {
        "id": 3085,
        "statement": "is(X, round) :- is(X, young), is(X, nice).",
        "description": "If something is young and nice then it is round."
    },
    {
        "id": 3086,
        "statement": "is(X, green) :- is(X, young), is(X, round).",
        "description": "Young, round things are green."
    },
    {
        "id": 3087,
        "statement": "sees(rabbit, dog).",
        "description": "The rabbit sees the dog."
    },
    {
        "id": 3088,
        "statement": "is(X, round) :- visits(X, mouse).",
        "description": "If someone visits the mouse then they are round."
    },
    {
        "id": 3089,
        "statement": "sees(dog, rabbit) :- eats(X, dog).",
        "description": "If someone eats the dog then the dog sees the rabbit."
    },
    {
        "id": 3090,
        "statement": "visits(X, mouse) :- eats(X, cat).",
        "description": "If someone eats the cat then they visit the mouse."
    },
    {
        "id": 3091,
        "statement": "is(X, green) :- eats(X, rabbit), visits(X, mouse).",
        "description": "If someone eats the rabbit and they visit the mouse then they are green."
    },
    {
        "id": 3092,
        "statement": "eats(X, rabbit) :- is(X, round).",
        "description": "If someone is round then they eat the rabbit."
    },
    {
        "id": 3093,
        "statement": "eats(mouse, cat) :- sees(X, mouse).",
        "description": "If someone sees the mouse then the mouse eats the cat."
    },
    {
        "id": 3094,
        "statement": "eats(dog, cat) :- eats(X, dog), is(dog, green).",
        "description": "If someone eats the dog and the dog is green then the dog eats the cat."
    },
    {
        "id": 3095,
        "statement": "sees(X, mouse) :- is(X, green).",
        "description": "If someone is green then they see the mouse."
    },
    {
        "id": 3096,
        "statement": "eats(X, dog) :- sees(X, mouse).",
        "description": "If someone sees the mouse then they eat the dog."
    },
    {
        "id": 3097,
        "statement": "is(X, nice) :- is(X, smart).",
        "description": "All smart things are nice."
    },
    {
        "id": 3098,
        "statement": "is(X, nice) :- is(X, big), is(X, smart).",
        "description": "Big, smart things are nice."
    },
    {
        "id": 3099,
        "statement": "is(X, big) :- is(X, red), is(X, white).",
        "description": "All red, white things are big."
    },
    {
        "id": 3100,
        "statement": "is(X, red) :- is(X, nice), is(X, white).",
        "description": "If something is nice and white then it is red."
    },
    {
        "id": 3101,
        "statement": "is(harry, young) :- is(harry, big).",
        "description": "If Harry is big then Harry is young."
    },
    {
        "id": 3102,
        "statement": "is(X, smart) :- is(X, big), is(X, red).",
        "description": "Big, red things are smart."
    },
    {
        "id": 3103,
        "statement": "is(X, blue) :- is(X, red), is(X, young).",
        "description": "Red, young things are blue."
    },
    {
        "id": 3104,
        "statement": "is(X, nice) :- is(X, round).",
        "description": "Round people are nice."
    },
    {
        "id": 3105,
        "statement": "is(X, green) :- is(X, round).",
        "description": "If someone is round then they are green."
    },
    {
        "id": 3106,
        "statement": "is(X, rough) :- is(X, red).",
        "description": "All red people are rough."
    },
    {
        "id": 3107,
        "statement": "is(X, white) :- is(X, nice).",
        "description": "All nice people are white."
    },
    {
        "id": 3108,
        "statement": "is(X, white) :- is(X, red), is(X, green).",
        "description": "Red, green people are white."
    },
    {
        "id": 3109,
        "statement": "is(X, quiet) :- is(X, nice), is(X, rough).",
        "description": "If someone is nice and rough then they are quiet."
    },
    {
        "id": 3110,
        "statement": "is(X, round) :- is(X, quiet).",
        "description": "Quiet people are round."
    },
    {
        "id": 3111,
        "statement": "is(X, quiet) :- is(X, rough).",
        "description": "If someone is rough then they are quiet."
    },
    {
        "id": 3112,
        "statement": "is(gary, kind) :- is(gary, quiet), is(gary, rough).",
        "description": "If Gary is quiet and Gary is rough then Gary is kind."
    },
    {
        "id": 3113,
        "statement": "is(X, kind) :- is(X, furry), is(X, rough).",
        "description": "If someone is furry and rough then they are kind."
    },
    {
        "id": 3114,
        "statement": "is(X, rough) :- is(X, quiet), is(X, furry).",
        "description": "If someone is quiet and furry then they are rough."
    },
    {
        "id": 3115,
        "statement": "is(erin, cold) :- is(erin, blue), is(erin, kind).",
        "description": "If Erin is blue and Erin is kind then Erin is cold."
    },
    {
        "id": 3116,
        "statement": "is(X, blue) :- is(X, young), is(X, quiet).",
        "description": "All young, quiet people are blue."
    },
    {
        "id": 3117,
        "statement": "is(X, furry) :- is(X, quiet), is(X, cold).",
        "description": "All quiet, cold people are furry."
    },
    {
        "id": 3118,
        "statement": "is(X, young) :- is(X, kind).",
        "description": "All kind people are young."
    },
    {
        "id": 3119,
        "statement": "eats(dog, cow).",
        "description": "The dog eats the cow."
    },
    {
        "id": 3120,
        "statement": "needs(squirrel, cow) :- needs(X, squirrel).",
        "description": "If someone needs the squirrel then the squirrel needs the cow."
    },
    {
        "id": 3121,
        "statement": "sees(dog, mouse) :- needs(X, dog).",
        "description": "If someone needs the dog then the dog sees the mouse."
    },
    {
        "id": 3122,
        "statement": "sees(cow, mouse) :- needs(X, cow).",
        "description": "If someone needs the cow then the cow sees the mouse."
    },
    {
        "id": 3123,
        "statement": "is(X, kind) :- is(X, red), eats(X, squirrel).",
        "description": "If someone is red and they eat the squirrel then they are kind."
    },
    {
        "id": 3124,
        "statement": "is(dog, rough) :- eats(X, dog), is(X, rough).",
        "description": "If someone eats the dog and they are rough then the dog is rough."
    },
    {
        "id": 3125,
        "statement": "needs(X, dog) :- is(X, young).",
        "description": "If someone is young then they need the dog."
    },
    {
        "id": 3126,
        "statement": "is(X, kind) :- sees(X, mouse), needs(X, mouse).",
        "description": "If someone sees the mouse and they need the mouse then they are kind."
    },
    {
        "id": 3127,
        "statement": "needs(X, squirrel) :- sees(X, mouse).",
        "description": "If someone sees the mouse then they need the squirrel."
    },
    {
        "id": 3128,
        "statement": "is(cow, young) :- is(X, big), likes(X, cow).",
        "description": "If something is big and it likes the cow then the cow is young."
    },
    {
        "id": 3129,
        "statement": "eats(squirrel, cat) :- needs(X, squirrel), eats(X, cat).",
        "description": "If something needs the squirrel and it eats the cat then the squirrel eats the cat."
    },
    {
        "id": 3130,
        "statement": "likes(X, cat) :- needs(X, cat).",
        "description": "If something needs the cat then it likes the cat."
    },
    {
        "id": 3131,
        "statement": "eats(X, cat) :- needs(X, cat).",
        "description": "If something needs the cat then it eats the cat."
    },
    {
        "id": 3132,
        "statement": "is(X, nice) :- is(X, big).",
        "description": "If something is big then it is nice."
    },
    {
        "id": 3133,
        "statement": "likes(X, squirrel) :- is(X, nice), is(X, young).",
        "description": "If something is nice and young then it likes the squirrel."
    },
    {
        "id": 3134,
        "statement": "is(X, nice) :- likes(X, squirrel).",
        "description": "If something likes the squirrel then it is nice."
    },
    {
        "id": 3135,
        "statement": "eats(tiger, cat) :- sees(X, cat), needs(cat, tiger).",
        "description": "If someone sees the cat and the cat needs the tiger then the tiger eats the cat."
    },
    {
        "id": 3136,
        "statement": "is(squirrel, cold) :- eats(X, squirrel), is(X, red).",
        "description": "If someone eats the squirrel and they are red then the squirrel is cold."
    },
    {
        "id": 3137,
        "statement": "is(X, round) :- sees(X, rabbit).",
        "description": "If someone sees the rabbit then they are round."
    },
    {
        "id": 3138,
        "statement": "sees(X, tiger) :- is(X, cold).",
        "description": "If someone is cold then they see the tiger."
    },
    {
        "id": 3139,
        "statement": "eats(cat, rabbit) :- needs(X, squirrel), sees(X, cat).",
        "description": "If someone needs the squirrel and they see the cat then the cat eats the rabbit."
    },
    {
        "id": 3140,
        "statement": "sees(cat, tiger) :- sees(X, rabbit), sees(rabbit, cat).",
        "description": "If someone sees the rabbit and the rabbit sees the cat then the cat sees the tiger."
    },
    {
        "id": 3141,
        "statement": "is(X, red) :- sees(X, tiger).",
        "description": "If someone sees the tiger then they are red."
    },
    {
        "id": 3142,
        "statement": "is(cat, green) :- is(cat, cold).",
        "description": "If the cat is cold then the cat is green."
    },
    {
        "id": 3143,
        "statement": "sees(X, tiger) :- is(X, green), is(X, cold).",
        "description": "If someone is green and cold then they see the tiger."
    },
    {
        "id": 3144,
        "statement": "eats(tiger, squirrel).",
        "description": "The tiger eats the squirrel."
    },
    {
        "id": 3145,
        "statement": "sees(tiger, cat).",
        "description": "The tiger sees the cat."
    },
    {
        "id": 3146,
        "statement": "is(squirrel, rough) :- sees(X, squirrel).",
        "description": "If someone sees the squirrel then the squirrel is rough."
    },
    {
        "id": 3147,
        "statement": "sees(tiger, squirrel) :- needs(X, tiger), eats(tiger, cat).",
        "description": "If someone needs the tiger and the tiger eats the cat then the tiger sees the squirrel."
    },
    {
        "id": 3148,
        "statement": "needs(X, tiger) :- is(X, red).",
        "description": "If someone is red then they need the tiger."
    },
    {
        "id": 3149,
        "statement": "sees(X, bear) :- is(X, rough).",
        "description": "If someone is rough then they see the bear."
    },
    {
        "id": 3150,
        "statement": "is(X, red) :- eats(X, squirrel).",
        "description": "If someone eats the squirrel then they are red."
    },
    {
        "id": 3151,
        "statement": "eats(X, cat) :- needs(X, bear).",
        "description": "If someone needs the bear then they eat the cat."
    },
    {
        "id": 3152,
        "statement": "eats(X, bear) :- sees(X, cat), is(X, nice).",
        "description": "If something sees the cat and it is nice then it eats the bear."
    },
    {
        "id": 3153,
        "statement": "eats(X, bear) :- is(X, young).",
        "description": "If something is young then it eats the bear."
    },
    {
        "id": 3154,
        "statement": "sees(squirrel, bear) :- eats(X, squirrel), is(X, young).",
        "description": "If something eats the squirrel and it is young then the squirrel sees the bear."
    },
    {
        "id": 3155,
        "statement": "visits(X, bald_eagle) :- eats(X, cat).",
        "description": "If something eats the cat then it visits the bald eagle."
    },
    {
        "id": 3156,
        "statement": "is(bear, rough) :- eats(X, bear), visits(X, cat).",
        "description": "If something eats the bear and it visits the cat then the bear is rough."
    },
    {
        "id": 3157,
        "statement": "visits(X, bear) :- is(X, young), is(X, rough).",
        "description": "If something is young and rough then it visits the bear."
    },
    {
        "id": 3158,
        "statement": "visits(bear, bald_eagle) :- visits(bear, cat), eats(bear, bald_eagle).",
        "description": "If the bear visits the cat and the bear eats the bald eagle then the bear visits the bald eagle."
    },
    {
        "id": 3159,
        "statement": "is(X, quiet) :- is(X, smart), is(X, furry).",
        "description": "All smart, furry things are quiet."
    },
    {
        "id": 3160,
        "statement": "is(X, furry) :- is(X, kind).",
        "description": "Kind things are furry."
    },
    {
        "id": 3161,
        "statement": "is(X, blue) :- is(X, rough), not is(X, cold).",
        "description": "If something is rough and not cold then it is blue."
    },
    {
        "id": 3162,
        "statement": "is(X, big) :- needs(X, bald_eagle).",
        "description": "If something needs the bald eagle then it is big."
    },
    {
        "id": 3163,
        "statement": "needs(X, bald_eagle) :- chases(X, bald_eagle).",
        "description": "If something chases the bald eagle then it needs the bald eagle."
    },
    {
        "id": 3164,
        "statement": "needs(X, lion) :- is(X, round).",
        "description": "If something is round then it needs the lion."
    },
    {
        "id": 3165,
        "statement": "is(X, round) :- is(X, red).",
        "description": "Red things are round."
    },
    {
        "id": 3166,
        "statement": "chases(bald_eagle, lion) :- visits(X, bald_eagle), chases(bald_eagle, squirrel).",
        "description": "If something visits the bald eagle and the bald eagle chases the squirrel then the bald eagle chases the lion."
    },
    {
        "id": 3167,
        "statement": "is(X, nice) :- chases(X, lion), needs(lion, bald_eagle).",
        "description": "If something chases the lion and the lion needs the bald eagle then it is nice."
    },
    {
        "id": 3168,
        "statement": "is(lion, red) :- chases(X, lion), is(lion, round).",
        "description": "If something chases the lion and the lion is round then the lion is red."
    },
    {
        "id": 3169,
        "statement": "eats(bear, squirrel) :- is(X, rough), eats(X, bear).",
        "description": "If something is rough and it eats the bear then the bear eats the squirrel."
    },
    {
        "id": 3170,
        "statement": "needs(X, bear) :- is(X, big).",
        "description": "If something is big then it needs the bear."
    },
    {
        "id": 3171,
        "statement": "is(tiger, kind) :- needs(X, squirrel), needs(squirrel, tiger).",
        "description": "If something needs the squirrel and the squirrel needs the tiger then the tiger is kind."
    },
    {
        "id": 3172,
        "statement": "eats(X, bear) :- is(X, nice).",
        "description": "If something is nice then it eats the bear."
    },
    {
        "id": 3173,
        "statement": "visits(tiger, bear) :- eats(X, tiger).",
        "description": "If something eats the tiger then the tiger visits the bear."
    },
    {
        "id": 3174,
        "statement": "visits(X, cow) :- eats(X, bear).",
        "description": "If something eats the bear then it visits the cow."
    },
    {
        "id": 3175,
        "statement": "visits(bear, squirrel) :- visits(X, bear).",
        "description": "If something visits the bear then the bear visits the squirrel."
    },
    {
        "id": 3176,
        "statement": "is(tiger, kind) :- eats(X, tiger), is(X, kind).",
        "description": "If something eats the tiger and it is kind then the tiger is kind."
    },
    {
        "id": 3177,
        "statement": "is(fiona, smart) :- is(fiona, white).",
        "description": "If Fiona is white then Fiona is smart."
    },
    {
        "id": 3178,
        "statement": "is(X, big) :- is(X, green), is(X, rough).",
        "description": "All green, rough people are big."
    },
    {
        "id": 3179,
        "statement": "is(X, quiet) :- is(X, rough), is(X, white).",
        "description": "Rough, white people are quiet."
    },
    {
        "id": 3180,
        "statement": "is(X, rough) :- is(X, smart), is(X, white).",
        "description": "If someone is smart and white then they are rough."
    },
    {
        "id": 3181,
        "statement": "is(X, big) :- is(X, rough), is(X, smart).",
        "description": "If someone is rough and smart then they are big."
    },
    {
        "id": 3182,
        "statement": "is(X, green) :- is(X, white), is(X, smart).",
        "description": "If someone is white and smart then they are green."
    },
    {
        "id": 3183,
        "statement": "is(X, smart) :- is(X, quiet).",
        "description": "If someone is quiet then they are smart."
    },
    {
        "id": 3184,
        "statement": "likes(lion, bald_eagle) :- sees(X, lion).",
        "description": "If someone sees the lion then the lion likes the bald eagle."
    },
    {
        "id": 3185,
        "statement": "is(lion, round) :- visits(X, cow), visits(X, lion).",
        "description": "If someone visits the cow and they visit the lion then the lion is round."
    },
    {
        "id": 3186,
        "statement": "visits(X, bald_eagle) :- is(X, round).",
        "description": "If someone is round then they visit the bald eagle."
    },
    {
        "id": 3187,
        "statement": "likes(cow, tiger) :- sees(X, cow).",
        "description": "If someone sees the cow then the cow likes the tiger."
    },
    {
        "id": 3188,
        "statement": "is(X, big) :- sees(X, tiger).",
        "description": "If someone sees the tiger then they are big."
    },
    {
        "id": 3189,
        "statement": "likes(X, cow) :- visits(X, bald_eagle), is(X, nice).",
        "description": "If someone visits the bald eagle and they are nice then they like the cow."
    },
    {
        "id": 3190,
        "statement": "is(cow, round) :- likes(X, cow).",
        "description": "If someone likes the cow then the cow is round."
    },
    {
        "id": 3191,
        "statement": "visits(X, cow) :- likes(X, bald_eagle), is(X, round).",
        "description": "If someone likes the bald eagle and they are round then they visit the cow."
    },
    {
        "id": 3192,
        "statement": "is(X, round) :- visits(X, bald_eagle).",
        "description": "If someone visits the bald eagle then they are round."
    },
    {
        "id": 3193,
        "statement": "is(X, nice) :- is(X, furry), is(X, round).",
        "description": "If something is furry and round then it is nice."
    },
    {
        "id": 3194,
        "statement": "is(X, kind) :- is(X, furry), is(X, white).",
        "description": "If something is furry and white then it is kind."
    },
    {
        "id": 3195,
        "statement": "is(X, kind) :- is(X, blue).",
        "description": "All blue things are kind."
    },
    {
        "id": 3196,
        "statement": "is(X, blue) :- is(X, nice).",
        "description": "Nice things are blue."
    },
    {
        "id": 3197,
        "statement": "is(X, young) :- is(X, kind), is(X, red).",
        "description": "Kind, red people are young."
    },
    {
        "id": 3198,
        "statement": "is(bob, red) :- is(bob, nice).",
        "description": "If Bob is nice then Bob is red."
    },
    {
        "id": 3199,
        "statement": "is(gary, nice) :- is(gary, young), is(gary, blue).",
        "description": "If Gary is young and Gary is blue then Gary is nice."
    },
    {
        "id": 3200,
        "statement": "is(X, white) :- is(X, nice), is(X, kind).",
        "description": "Nice, kind people are white."
    },
    {
        "id": 3201,
        "statement": "is(X, rough) :- is(X, young), is(X, kind).",
        "description": "If someone is young and kind then they are rough."
    },
    {
        "id": 3202,
        "statement": "is(X, kind) :- is(X, red).",
        "description": "Red people are kind."
    },
    {
        "id": 3203,
        "statement": "is(X, blue) :- is(X, rough), is(X, white).",
        "description": "If someone is rough and white then they are blue."
    },
    {
        "id": 3204,
        "statement": "is(X, nice) :- is(X, blue), is(X, rough).",
        "description": "All blue, rough people are nice."
    },
    {
        "id": 3205,
        "statement": "is(erin, young) :- is(erin, green).",
        "description": "If Erin is green then Erin is young."
    },
    {
        "id": 3206,
        "statement": "is(X, furry) :- is(X, blue).",
        "description": "All blue people are furry."
    },
    {
        "id": 3207,
        "statement": "is(X, young) :- is(X, blue), is(X, round).",
        "description": "Blue, round people are young."
    },
    {
        "id": 3208,
        "statement": "is(X, young) :- is(X, round), is(X, green).",
        "description": "If someone is round and green then they are young."
    },
    {
        "id": 3209,
        "statement": "is(X, round) :- is(X, blue).",
        "description": "If someone is blue then they are round."
    },
    {
        "id": 3210,
        "statement": "eats(X, cat) :- needs(X, squirrel), is(X, young).",
        "description": "If something needs the squirrel and it is young then it eats the cat."
    },
    {
        "id": 3211,
        "statement": "needs(lion, cat) :- is(cat, green), needs(cat, lion).",
        "description": "If the cat is green and the cat needs the lion then the lion needs the cat."
    },
    {
        "id": 3212,
        "statement": "needs(X, cat) :- is(X, blue).",
        "description": "If something is blue then it needs the cat."
    },
    {
        "id": 3213,
        "statement": "chases(X, cat) :- is(X, red).",
        "description": "If something is red then it chases the cat."
    },
    {
        "id": 3214,
        "statement": "eats(lion, cat) :- needs(X, cat), chases(cat, lion).",
        "description": "If something needs the cat and the cat chases the lion then the lion eats the cat."
    },
    {
        "id": 3215,
        "statement": "is(X, red) :- eats(X, dog), chases(dog, squirrel).",
        "description": "If something eats the dog and the dog chases the squirrel then it is red."
    },
    {
        "id": 3216,
        "statement": "chases(X, cat) :- is(X, green).",
        "description": "If something is green then it chases the cat."
    },
    {
        "id": 3217,
        "statement": "needs(cat, squirrel) :- is(X, young), chases(X, cat).",
        "description": "If something is young and it chases the cat then the cat needs the squirrel."
    },
    {
        "id": 3218,
        "statement": "is(X, rough) :- is(X, nice), is(X, kind).",
        "description": "If someone is nice and kind then they are rough."
    },
    {
        "id": 3219,
        "statement": "is(X, smart) :- is(X, round), is(X, rough).",
        "description": "If someone is round and rough then they are smart."
    },
    {
        "id": 3220,
        "statement": "is(X, round) :- is(X, rough), is(X, kind).",
        "description": "If someone is rough and kind then they are round."
    },
    {
        "id": 3221,
        "statement": "is(X, rough) :- is(X, round).",
        "description": "Round people are rough."
    },
    {
        "id": 3222,
        "statement": "is(X, red) :- is(X, smart).",
        "description": "Smart people are red."
    },
    {
        "id": 3223,
        "statement": "chases(dog, rabbit).",
        "description": "The dog chases the rabbit."
    },
    {
        "id": 3224,
        "statement": "visits(X, lion) :- is(X, rough).",
        "description": "If someone is rough then they visit the lion."
    },
    {
        "id": 3225,
        "statement": "chases(X, cat) :- is(X, round).",
        "description": "If someone is round then they chase the cat."
    },
    {
        "id": 3226,
        "statement": "sees(X, lion) :- is(X, rough).",
        "description": "If someone is rough then they see the lion."
    },
    {
        "id": 3227,
        "statement": "visits(rabbit, lion) :- visits(X, rabbit), sees(X, rabbit).",
        "description": "If someone visits the rabbit and they see the rabbit then the rabbit visits the lion."
    },
    {
        "id": 3228,
        "statement": "chases(lion, rabbit) :- sees(cat, lion), is(cat, cold).",
        "description": "If the cat sees the lion and the cat is cold then the lion chases the rabbit."
    },
    {
        "id": 3229,
        "statement": "is(X, rough) :- visits(X, dog), sees(dog, cat).",
        "description": "If someone visits the dog and the dog sees the cat then they are rough."
    },
    {
        "id": 3230,
        "statement": "is(X, kind) :- visits(X, lion), is(lion, kind).",
        "description": "If someone visits the lion and the lion is kind then they are kind."
    },
    {
        "id": 3231,
        "statement": "is(X, red) :- is(X, smart), is(X, kind).",
        "description": "If something is smart and kind then it is red."
    },
    {
        "id": 3232,
        "statement": "is(X, blue) :- is(X, white), is(X, cold).",
        "description": "White, cold things are blue."
    },
    {
        "id": 3233,
        "statement": "is(X, white) :- is(X, smart).",
        "description": "If something is smart then it is white."
    },
    {
        "id": 3234,
        "statement": "is(X, smart) :- is(X, blue).",
        "description": "Blue things are smart."
    },
    {
        "id": 3235,
        "statement": "is(X, white) :- is(X, cold).",
        "description": "If something is cold then it is white."
    },
    {
        "id": 3236,
        "statement": "is(fiona, kind) :- is(fiona, smart), is(fiona, blue).",
        "description": "If Fiona is smart and Fiona is blue then Fiona is kind."
    },
    {
        "id": 3237,
        "statement": "is(X, cold) :- is(X, nice), is(X, smart).",
        "description": "If someone is nice and smart then they are cold."
    },
    {
        "id": 3238,
        "statement": "is(X, white) :- is(X, cold).",
        "description": "All cold people are white."
    },
    {
        "id": 3239,
        "statement": "is(X, nice) :- is(X, white), is(X, green).",
        "description": "If someone is white and green then they are nice."
    },
    {
        "id": 3240,
        "statement": "is(X, smart) :- is(X, blue).",
        "description": "If someone is blue then they are smart."
    },
    {
        "id": 3241,
        "statement": "is(X, rough) :- is(X, cold), not is(X, green).",
        "description": "If someone is cold and not green then they are rough."
    },
    {
        "id": 3242,
        "statement": "is(X, rough) :- is(X, white), is(X, smart).",
        "description": "All white, smart people are rough."
    },
    {
        "id": 3243,
        "statement": "is(X, green) :- is(X, red).",
        "description": "All red people are green."
    },
    {
        "id": 3244,
        "statement": "is(X, red) :- is(X, smart), is(X, green).",
        "description": "Smart, green people are red."
    },
    {
        "id": 3245,
        "statement": "is(X, kind) :- is(X, rough), is(X, smart).",
        "description": "All rough, smart people are kind."
    },
    {
        "id": 3246,
        "statement": "is(X, rough) :- is(X, red), not is(X, green).",
        "description": "If someone is red and not green then they are rough."
    },
    {
        "id": 3247,
        "statement": "is(X, rough) :- is(X, red), is(X, smart).",
        "description": "Red, smart people are rough."
    },
    {
        "id": 3248,
        "statement": "is(X, quiet) :- is(X, kind).",
        "description": "If someone is kind then they are quiet."
    },
    {
        "id": 3249,
        "statement": "visits(X, mouse) :- is(X, red).",
        "description": "If something is red then it visits the mouse."
    },
    {
        "id": 3250,
        "statement": "visits(mouse, bald_eagle) :- eats(X, dog), visits(X, mouse).",
        "description": "If something eats the dog and it visits the mouse then the mouse visits the bald eagle."
    },
    {
        "id": 3251,
        "statement": "needs(bald_eagle, mouse) :- visits(X, bald_eagle).",
        "description": "If something visits the bald eagle then the bald eagle needs the mouse."
    },
    {
        "id": 3252,
        "statement": "eats(X, bald_eagle) :- eats(X, mouse).",
        "description": "If something eats the mouse then it eats the bald eagle."
    },
    {
        "id": 3253,
        "statement": "is(dog, nice) :- is(X, rough), visits(X, dog).",
        "description": "If something is rough and it visits the dog then the dog is nice."
    },
    {
        "id": 3254,
        "statement": "is(cat, nice) :- is(X, young), eats(X, cat).",
        "description": "If something is young and it eats the cat then the cat is nice."
    },
    {
        "id": 3255,
        "statement": "needs(X, dog) :- visits(X, mouse).",
        "description": "If something visits the mouse then it needs the dog."
    },
    {
        "id": 3256,
        "statement": "is(dog, red) :- needs(X, dog).",
        "description": "If something needs the dog then the dog is red."
    },
    {
        "id": 3257,
        "statement": "eats(cow, lion).",
        "description": "The cow eats the lion."
    },
    {
        "id": 3258,
        "statement": "sees(lion, cow).",
        "description": "The lion sees the cow."
    },
    {
        "id": 3259,
        "statement": "sees(lion, dog).",
        "description": "The lion sees the dog."
    },
    {
        "id": 3260,
        "statement": "sees(dog, cow) :- chases(X, dog).",
        "description": "If someone chases the dog then the dog sees the cow."
    },
    {
        "id": 3261,
        "statement": "is(cat, young) :- is(X, round), sees(X, cat).",
        "description": "If someone is round and they see the cat then the cat is young."
    },
    {
        "id": 3262,
        "statement": "chases(cat, dog) :- sees(X, cat).",
        "description": "If someone sees the cat then the cat chases the dog."
    },
    {
        "id": 3263,
        "statement": "is(cat, nice) :- is(X, young), not chases(X, cat).",
        "description": "If someone is young and they do not chase the cat then the cat is nice."
    },
    {
        "id": 3264,
        "statement": "sees(X, cow) :- is(X, young), not chases(X, lion).",
        "description": "If someone is young and they do not chase the lion then they see the cow."
    },
    {
        "id": 3265,
        "statement": "is(X, round) :- sees(X, cow).",
        "description": "If someone sees the cow then they are round."
    },
    {
        "id": 3266,
        "statement": "sees(cow, lion) :- chases(X, cow), chases(cow, dog).",
        "description": "If someone chases the cow and the cow chases the dog then the cow sees the lion."
    },
    {
        "id": 3267,
        "statement": "is(bob, furry) :- is(bob, smart), is(bob, quiet).",
        "description": "If Bob is smart and Bob is quiet then Bob is furry."
    },
    {
        "id": 3268,
        "statement": "is(X, rough) :- is(X, smart), is(X, furry).",
        "description": "All smart, furry things are rough."
    },
    {
        "id": 3269,
        "statement": "is(harry, rough) :- not is(harry, smart).",
        "description": "If Harry is not smart then Harry is rough."
    },
    {
        "id": 3270,
        "statement": "is(X, blue) :- is(X, rough).",
        "description": "All rough things are blue."
    },
    {
        "id": 3271,
        "statement": "is(X, blue) :- is(X, quiet), is(X, rough).",
        "description": "If something is quiet and rough then it is blue."
    },
    {
        "id": 3272,
        "statement": "is(X, quiet) :- is(X, blue), not is(X, kind).",
        "description": "If something is blue and not kind then it is quiet."
    },
    {
        "id": 3273,
        "statement": "is(X, white) :- is(X, rough).",
        "description": "Rough people are white."
    },
    {
        "id": 3274,
        "statement": "is(X, green) :- is(X, white), is(X, cold).",
        "description": "If someone is white and cold then they are green."
    },
    {
        "id": 3275,
        "statement": "is(X, cold) :- is(X, green).",
        "description": "All green people are cold."
    },
    {
        "id": 3276,
        "statement": "is(X, rough) :- is(X, cold), is(X, red).",
        "description": "All cold, red people are rough."
    },
    {
        "id": 3277,
        "statement": "is(X, big) :- is(X, cold).",
        "description": "If someone is cold then they are big."
    },
    {
        "id": 3278,
        "statement": "is(X, red) :- is(X, rough), is(X, green).",
        "description": "All rough, green people are red."
    },
    {
        "id": 3279,
        "statement": "is(X, kind) :- is(X, red).",
        "description": "All red things are kind."
    },
    {
        "id": 3280,
        "statement": "is(X, rough) :- is(X, white).",
        "description": "White things are rough."
    },
    {
        "id": 3281,
        "statement": "is(X, green) :- is(X, kind), is(X, round).",
        "description": "Kind, round things are green."
    },
    {
        "id": 3282,
        "statement": "is(X, blue) :- is(X, rough), is(X, round).",
        "description": "If something is rough and round then it is blue."
    },
    {
        "id": 3283,
        "statement": "is(X, red) :- is(X, blue), is(X, rough).",
        "description": "All blue, rough things are red."
    },
    {
        "id": 3284,
        "statement": "is(X, white) :- is(X, red).",
        "description": "If something is red then it is white."
    },
    {
        "id": 3285,
        "statement": "is(gary, red) :- is(gary, rough), is(gary, kind).",
        "description": "If Gary is rough and Gary is kind then Gary is red."
    },
    {
        "id": 3286,
        "statement": "is(X, nice) :- is(X, young).",
        "description": "Young people are nice."
    },
    {
        "id": 3287,
        "statement": "is(X, nice) :- is(X, furry), is(X, young).",
        "description": "If someone is furry and young then they are nice."
    },
    {
        "id": 3288,
        "statement": "is(dave, furry) :- is(dave, red).",
        "description": "If Dave is red then Dave is furry."
    },
    {
        "id": 3289,
        "statement": "is(X, kind) :- is(X, furry).",
        "description": "Furry people are kind."
    },
    {
        "id": 3290,
        "statement": "is(X, young) :- is(X, cold), is(X, nice).",
        "description": "If someone is cold and nice then they are young."
    },
    {
        "id": 3291,
        "statement": "is(harry, kind) :- is(harry, green).",
        "description": "If Harry is green then Harry is kind."
    },
    {
        "id": 3292,
        "statement": "is(X, cold) :- is(X, kind), is(X, furry).",
        "description": "Kind, furry people are cold."
    },
    {
        "id": 3293,
        "statement": "is(anne, cold) :- is(anne, furry).",
        "description": "If Anne is furry then Anne is cold."
    },
    {
        "id": 3294,
        "statement": "is(X, red) :- is(X, kind), is(X, cold).",
        "description": "If someone is kind and cold then they are red."
    },
    {
        "id": 3295,
        "statement": "is(X, kind) :- is(X, furry), is(X, cold).",
        "description": "If someone is furry and cold then they are kind."
    },
    {
        "id": 3296,
        "statement": "is(X, kind) :- is(X, cold), is(X, young).",
        "description": "Cold, young people are kind."
    },
    {
        "id": 3297,
        "statement": "is(X, young) :- is(X, kind), is(X, blue).",
        "description": "If someone is kind and blue then they are young."
    },
    {
        "id": 3298,
        "statement": "is(X, blue) :- is(X, red).",
        "description": "Red people are blue."
    },
    {
        "id": 3299,
        "statement": "is(X, furry) :- is(X, green).",
        "description": "Green people are furry."
    },
    {
        "id": 3300,
        "statement": "is(X, cold) :- is(X, furry), is(X, green).",
        "description": "Furry, green people are cold."
    },
    {
        "id": 3301,
        "statement": "is(X, blue) :- is(X, kind), is(X, nice).",
        "description": "Kind, nice people are blue."
    },
    {
        "id": 3302,
        "statement": "is(erin, young) :- is(erin, kind).",
        "description": "If Erin is kind then Erin is young."
    },
    {
        "id": 3303,
        "statement": "is(erin, smart) :- not is(erin, quiet).",
        "description": "If Erin is not quiet then Erin is smart."
    },
    {
        "id": 3304,
        "statement": "is(X, kind) :- is(X, young), is(X, smart).",
        "description": "All young, smart people are kind."
    },
    {
        "id": 3305,
        "statement": "is(X, round) :- is(X, blue), not is(X, kind).",
        "description": "If someone is blue and not kind then they are round."
    },
    {
        "id": 3306,
        "statement": "is(X, red) :- chases(X, rabbit).",
        "description": "If someone chases the rabbit then they are red."
    },
    {
        "id": 3307,
        "statement": "visits(X, squirrel) :- is(X, red), is(X, green).",
        "description": "If someone is red and green then they visit the squirrel."
    },
    {
        "id": 3308,
        "statement": "visits(tiger, squirrel) :- is(squirrel, blue), chases(squirrel, tiger).",
        "description": "If the squirrel is blue and the squirrel chases the tiger then the tiger visits the squirrel."
    },
    {
        "id": 3309,
        "statement": "sees(X, lion) :- sees(X, rabbit).",
        "description": "If someone sees the rabbit then they see the lion."
    },
    {
        "id": 3310,
        "statement": "chases(X, squirrel) :- sees(X, lion).",
        "description": "If someone sees the lion then they chase the squirrel."
    },
    {
        "id": 3311,
        "statement": "is(rabbit, blue) :- is(X, nice), visits(X, rabbit).",
        "description": "If someone is nice and they visit the rabbit then the rabbit is blue."
    },
    {
        "id": 3312,
        "statement": "visits(X, tiger) :- chases(X, lion), chases(X, squirrel).",
        "description": "If someone chases the lion and they chase the squirrel then they visit the tiger."
    },
    {
        "id": 3313,
        "statement": "chases(tiger, lion) :- visits(X, tiger).",
        "description": "If someone visits the tiger then the tiger chases the lion."
    },
    {
        "id": 3314,
        "statement": "is(X, nice) :- is(X, smart), is(X, white).",
        "description": "If someone is smart and white then they are nice."
    },
    {
        "id": 3315,
        "statement": "is(bob, rough) :- is(bob, smart).",
        "description": "If Bob is smart then Bob is rough."
    },
    {
        "id": 3316,
        "statement": "is(X, young) :- is(X, rough), is(X, white).",
        "description": "Rough, white people are young."
    },
    {
        "id": 3317,
        "statement": "is(X, green) :- is(X, rough), is(X, smart).",
        "description": "All rough, smart people are green."
    },
    {
        "id": 3318,
        "statement": "is(X, green) :- is(X, blue).",
        "description": "If someone is blue then they are green."
    },
    {
        "id": 3319,
        "statement": "is(X, white) :- is(X, smart), is(X, nice).",
        "description": "If someone is smart and nice then they are white."
    },
    {
        "id": 3320,
        "statement": "is(X, rough) :- is(X, white), is(X, young).",
        "description": "White, young people are rough."
    },
    {
        "id": 3321,
        "statement": "is(dog, nice).",
        "description": "The dog is nice."
    },
    {
        "id": 3322,
        "statement": "is(bald_eagle, kind) :- eats(dog, bald_eagle), eats(bald_eagle, dog).",
        "description": "If the dog eats the bald eagle and the bald eagle eats the dog then the bald eagle is kind."
    },
    {
        "id": 3323,
        "statement": "eats(bald_eagle, dog) :- eats(X, lion), visits(X, bald_eagle).",
        "description": "If something eats the lion and it visits the bald eagle then the bald eagle eats the dog."
    },
    {
        "id": 3324,
        "statement": "is(X, rough) :- eats(X, bald_eagle).",
        "description": "If something eats the bald eagle then it is rough."
    },
    {
        "id": 3325,
        "statement": "visits(X, bald_eagle) :- sees(X, lion), eats(X, dog).",
        "description": "If something sees the lion and it eats the dog then it visits the bald eagle."
    },
    {
        "id": 3326,
        "statement": "eats(X, dog) :- visits(X, bear).",
        "description": "If something visits the bear then it eats the dog."
    },
    {
        "id": 3327,
        "statement": "eats(X, lion) :- eats(X, bear).",
        "description": "If something eats the bear then it eats the lion."
    },
    {
        "id": 3328,
        "statement": "visits(X, bear) :- eats(X, lion).",
        "description": "If something eats the lion then it visits the bear."
    },
    {
        "id": 3329,
        "statement": "is(X, green) :- sees(X, bear), eats(X, lion).",
        "description": "If something sees the bear and it eats the lion then it is green."
    },
    {
        "id": 3330,
        "statement": "sees(X, bear) :- eats(X, dog).",
        "description": "If something eats the dog then it sees the bear."
    },
    {
        "id": 3331,
        "statement": "chases(X, cow) :- is(X, red).",
        "description": "If someone is red then they chase the cow."
    },
    {
        "id": 3332,
        "statement": "chases(X, tiger) :- is(X, young), chases(X, cow).",
        "description": "If someone is young and they chase the cow then they chase the tiger."
    },
    {
        "id": 3333,
        "statement": "chases(X, cow) :- chases(X, cat).",
        "description": "If someone chases the cat then they chase the cow."
    },
    {
        "id": 3334,
        "statement": "is(bear, young) :- chases(bear, tiger), is(tiger, red).",
        "description": "If the bear chases the tiger and the tiger is red then the bear is young."
    },
    {
        "id": 3335,
        "statement": "eats(cat, bear) :- chases(cow, cat), is(cat, round).",
        "description": "If the cow chases the cat and the cat is round then the cat eats the bear."
    },
    {
        "id": 3336,
        "statement": "is(X, big) :- is(X, rough).",
        "description": "If someone is rough then they are big."
    },
    {
        "id": 3337,
        "statement": "likes(X, dog) :- is(X, cold), needs(X, cat).",
        "description": "If someone is cold and they need the cat then they like the dog."
    },
    {
        "id": 3338,
        "statement": "likes(X, dog) :- needs(X, bald_eagle).",
        "description": "If someone needs the bald eagle then they like the dog."
    },
    {
        "id": 3339,
        "statement": "needs(X, bald_eagle) :- is(X, big).",
        "description": "If someone is big then they need the bald eagle."
    },
    {
        "id": 3340,
        "statement": "is(dog, cold) :- needs(dog, lion).",
        "description": "If the dog needs the lion then the dog is cold."
    },
    {
        "id": 3341,
        "statement": "is(bald_eagle, big) :- likes(cat, dog), likes(dog, bald_eagle).",
        "description": "If the cat likes the dog and the dog likes the bald eagle then the bald eagle is big."
    },
    {
        "id": 3342,
        "statement": "eats(cat, lion) :- is(cat, cold), not eats(dog, cat).",
        "description": "If the cat is cold and the dog does not eat the cat then the cat eats the lion."
    },
    {
        "id": 3343,
        "statement": "is(X, cold) :- is(X, quiet), is(X, red).",
        "description": "If someone is quiet and red then they are cold."
    },
    {
        "id": 3344,
        "statement": "is(X, smart) :- is(X, nice).",
        "description": "All nice people are smart."
    },
    {
        "id": 3345,
        "statement": "is(X, nice) :- is(X, red), is(X, big).",
        "description": "If someone is red and big then they are nice."
    },
    {
        "id": 3346,
        "statement": "is(X, red) :- is(X, quiet).",
        "description": "Quiet people are red."
    },
    {
        "id": 3347,
        "statement": "is(X, quiet) :- is(X, nice).",
        "description": "Nice people are quiet."
    },
    {
        "id": 3348,
        "statement": "is(X, nice) :- is(X, cold), is(X, quiet).",
        "description": "All cold, quiet people are nice."
    },
    {
        "id": 3349,
        "statement": "is(X, smart) :- is(X, cold), is(X, big).",
        "description": "If someone is cold and big then they are smart."
    },
    {
        "id": 3350,
        "statement": "is(X, red) :- is(X, cold), is(X, nice).",
        "description": "If someone is cold and nice then they are red."
    },
    {
        "id": 3351,
        "statement": "is(X, blue) :- is(X, red), is(X, green).",
        "description": "All red, green people are blue."
    },
    {
        "id": 3352,
        "statement": "is(X, green) :- is(X, cold), is(X, young).",
        "description": "All cold, young people are green."
    },
    {
        "id": 3353,
        "statement": "is(anne, cold) :- is(anne, green).",
        "description": "If Anne is green then Anne is cold."
    },
    {
        "id": 3354,
        "statement": "is(X, cold) :- is(X, big), is(X, blue).",
        "description": "All big, blue people are cold."
    },
    {
        "id": 3355,
        "statement": "is(X, young) :- is(X, big).",
        "description": "All big people are young."
    },
    {
        "id": 3356,
        "statement": "is(X, nice) :- is(X, red).",
        "description": "Red people are nice."
    },
    {
        "id": 3357,
        "statement": "is(X, big) :- is(X, cold), is(X, blue).",
        "description": "If someone is cold and blue then they are big."
    },
    {
        "id": 3358,
        "statement": "is(X, blue) :- is(X, nice), is(X, cold).",
        "description": "Nice, cold people are blue."
    },
    {
        "id": 3359,
        "statement": "is(X, smart) :- is(X, cold).",
        "description": "All cold people are smart."
    },
    {
        "id": 3360,
        "statement": "is(X, cold) :- is(X, white).",
        "description": "If someone is white then they are cold."
    },
    {
        "id": 3361,
        "statement": "is(dave, kind) :- is(dave, smart).",
        "description": "If Dave is smart then Dave is kind."
    },
    {
        "id": 3362,
        "statement": "is(bob, red) :- is(bob, furry), not is(bob, cold).",
        "description": "If Bob is furry and Bob is not cold then Bob is red."
    },
    {
        "id": 3363,
        "statement": "is(X, furry) :- is(X, white), is(X, smart).",
        "description": "All white, smart people are furry."
    },
    {
        "id": 3364,
        "statement": "is(X, furry) :- is(X, big), is(X, white).",
        "description": "All big, white people are furry."
    },
    {
        "id": 3365,
        "statement": "is(X, nice) :- is(X, young), likes(X, bald_eagle).",
        "description": "If something is young and it likes the bald eagle then it is nice."
    },
    {
        "id": 3366,
        "statement": "is(X, nice) :- likes(X, cat).",
        "description": "If something likes the cat then it is nice."
    },
    {
        "id": 3367,
        "statement": "sees(bald_eagle, lion) :- chases(X, bald_eagle).",
        "description": "If something chases the bald eagle then the bald eagle sees the lion."
    },
    {
        "id": 3368,
        "statement": "is(cat, red) :- sees(X, cat).",
        "description": "If something sees the cat then the cat is red."
    },
    {
        "id": 3369,
        "statement": "likes(lion, bald_eagle) :- is(X, young), sees(X, lion).",
        "description": "If something is young and it sees the lion then the lion likes the bald eagle."
    },
    {
        "id": 3370,
        "statement": "is(X, blue) :- chases(X, cat).",
        "description": "If something chases the cat then it is blue."
    },
    {
        "id": 3371,
        "statement": "chases(X, lion) :- sees(X, squirrel).",
        "description": "If something sees the squirrel then it chases the lion."
    },
    {
        "id": 3372,
        "statement": "sees(X, squirrel) :- is(X, red), is(X, nice).",
        "description": "If something is red and nice then it sees the squirrel."
    },
    {
        "id": 3373,
        "statement": "is(X, quiet) :- is(X, blue).",
        "description": "If something is blue then it is quiet."
    },
    {
        "id": 3374,
        "statement": "is(X, blue) :- is(X, round), is(X, cold).",
        "description": "If something is round and cold then it is blue."
    },
    {
        "id": 3375,
        "statement": "is(X, blue) :- is(X, big), is(X, red).",
        "description": "Big, red things are blue."
    },
    {
        "id": 3376,
        "statement": "is(X, cold) :- is(X, blue), is(X, quiet).",
        "description": "All blue, quiet things are cold."
    },
    {
        "id": 3377,
        "statement": "is(X, cold) :- is(X, round).",
        "description": "All round things are cold."
    },
    {
        "id": 3378,
        "statement": "is(X, red) :- is(X, cold), not is(X, kind).",
        "description": "If something is cold and not kind then it is red."
    },
    {
        "id": 3379,
        "statement": "is(X, round) :- is(X, quiet).",
        "description": "All quiet things are round."
    },
    {
        "id": 3380,
        "statement": "is(anne, cold) :- is(anne, red), is(anne, quiet).",
        "description": "If Anne is red and Anne is quiet then Anne is cold."
    },
    {
        "id": 3381,
        "statement": "is(X, kind) :- is(X, nice).",
        "description": "Nice people are kind."
    },
    {
        "id": 3382,
        "statement": "visits(lion, cat) :- likes(X, cat), visits(X, lion).",
        "description": "If someone likes the cat and they visit the lion then the lion visits the cat."
    },
    {
        "id": 3383,
        "statement": "is(X, nice) :- is(X, round).",
        "description": "If someone is round then they are nice."
    },
    {
        "id": 3384,
        "statement": "eats(X, cat) :- is(X, round).",
        "description": "If someone is round then they eat the cat."
    },
    {
        "id": 3385,
        "statement": "eats(tiger, rabbit) :- visits(tiger, cat), visits(cat, lion).",
        "description": "If the tiger visits the cat and the cat visits the lion then the tiger eats the rabbit."
    },
    {
        "id": 3386,
        "statement": "is(lion, round) :- is(cat, kind), visits(cat, lion).",
        "description": "If the cat is kind and the cat visits the lion then the lion is round."
    },
    {
        "id": 3387,
        "statement": "sees(X, lion) :- is(X, kind), visits(X, dog).",
        "description": "If someone is kind and they visit the dog then they see the lion."
    },
    {
        "id": 3388,
        "statement": "needs(dog, tiger) :- sees(X, dog), visits(X, bear).",
        "description": "If someone sees the dog and they visit the bear then the dog needs the tiger."
    },
    {
        "id": 3389,
        "statement": "is(X, green) :- is(X, cold).",
        "description": "Cold people are green."
    },
    {
        "id": 3390,
        "statement": "is(bear, nice) :- visits(tiger, bear).",
        "description": "If the tiger visits the bear then the bear is nice."
    },
    {
        "id": 3391,
        "statement": "is(lion, kind) :- sees(lion, tiger).",
        "description": "If the lion sees the tiger then the lion is kind."
    },
    {
        "id": 3392,
        "statement": "visits(X, lion) :- needs(X, tiger).",
        "description": "If someone needs the tiger then they visit the lion."
    },
    {
        "id": 3393,
        "statement": "is(fiona, kind) :- is(fiona, cold).",
        "description": "If Fiona is cold then Fiona is kind."
    },
    {
        "id": 3394,
        "statement": "is(X, cold) :- is(X, rough), is(X, blue).",
        "description": "If something is rough and blue then it is cold."
    },
    {
        "id": 3395,
        "statement": "is(X, blue) :- is(X, smart), is(X, kind).",
        "description": "If something is smart and kind then it is blue."
    },
    {
        "id": 3396,
        "statement": "is(charlie, rough) :- is(charlie, kind), is(charlie, blue).",
        "description": "If Charlie is kind and Charlie is blue then Charlie is rough."
    },
    {
        "id": 3397,
        "statement": "is(X, furry) :- is(X, cold).",
        "description": "Cold things are furry."
    },
    {
        "id": 3398,
        "statement": "needs(cat, squirrel).",
        "description": "The cat needs the squirrel."
    },
    {
        "id": 3399,
        "statement": "needs(X, cow) :- likes(X, cow).",
        "description": "If someone likes the cow then they need the cow."
    },
    {
        "id": 3400,
        "statement": "likes(cat, dog) :- needs(X, cat), likes(cat, squirrel).",
        "description": "If someone needs the cat and the cat likes the squirrel then the cat likes the dog."
    },
    {
        "id": 3401,
        "statement": "eats(X, cow) :- likes(X, squirrel), is(X, blue).",
        "description": "If someone likes the squirrel and they are blue then they eat the cow."
    },
    {
        "id": 3402,
        "statement": "likes(X, cow) :- needs(X, squirrel).",
        "description": "If someone needs the squirrel then they like the cow."
    },
    {
        "id": 3403,
        "statement": "likes(X, squirrel) :- is(X, blue).",
        "description": "If someone is blue then they like the squirrel."
    },
    {
        "id": 3404,
        "statement": "is(cow, blue) :- eats(X, cow).",
        "description": "If someone eats the cow then the cow is blue."
    },
    {
        "id": 3405,
        "statement": "is(cat, green) :- needs(X, cat).",
        "description": "If someone needs the cat then the cat is green."
    },
    {
        "id": 3406,
        "statement": "needs(cat, rabbit).",
        "description": "The cat needs the rabbit."
    },
    {
        "id": 3407,
        "statement": "likes(cat, rabbit) :- needs(X, cat).",
        "description": "If something needs the cat then the cat likes the rabbit."
    },
    {
        "id": 3408,
        "statement": "is(X, red) :- is(X, rough).",
        "description": "Rough things are red."
    },
    {
        "id": 3409,
        "statement": "is(rabbit, rough) :- needs(X, rabbit).",
        "description": "If something needs the rabbit then the rabbit is rough."
    },
    {
        "id": 3410,
        "statement": "visits(rabbit, cow) :- is(rabbit, red).",
        "description": "If the rabbit is red then the rabbit visits the cow."
    },
    {
        "id": 3411,
        "statement": "likes(X, cow) :- likes(X, bald_eagle), visits(X, bald_eagle).",
        "description": "If something likes the bald eagle and it visits the bald eagle then it likes the cow."
    },
    {
        "id": 3412,
        "statement": "likes(X, bald_eagle) :- visits(X, cow).",
        "description": "If something visits the cow then it likes the bald eagle."
    },
    {
        "id": 3413,
        "statement": "is(X, young) :- visits(X, cow), not needs(X, bald_eagle).",
        "description": "If something visits the cow and it does not need the bald eagle then it is young."
    },
    {
        "id": 3414,
        "statement": "likes(rabbit, cat) :- is(X, red), visits(X, rabbit).",
        "description": "If something is red and it visits the rabbit then the rabbit likes the cat."
    },
    {
        "id": 3415,
        "statement": "likes(bald_eagle, cow) :- not is(bald_eagle, red), not likes(bald_eagle, rabbit).",
        "description": "If the bald eagle is not red and the bald eagle does not like the rabbit then the bald eagle likes the cow."
    },
    {
        "id": 3416,
        "statement": "needs(cat, dog).",
        "description": "The cat needs the dog."
    },
    {
        "id": 3417,
        "statement": "likes(bear, cat) :- likes(X, bear).",
        "description": "If someone likes the bear then the bear likes the cat."
    },
    {
        "id": 3418,
        "statement": "visits(X, dog) :- is(X, green).",
        "description": "If someone is green then they visit the dog."
    },
    {
        "id": 3419,
        "statement": "visits(X, dog) :- is(X, young), visits(X, lion).",
        "description": "If someone is young and they visit the lion then they visit the dog."
    },
    {
        "id": 3420,
        "statement": "likes(X, bear) :- needs(X, cat).",
        "description": "If someone needs the cat then they like the bear."
    },
    {
        "id": 3421,
        "statement": "likes(X, bear) :- visits(X, cat).",
        "description": "If someone visits the cat then they like the bear."
    },
    {
        "id": 3422,
        "statement": "visits(bear, lion) :- likes(X, bear).",
        "description": "If someone likes the bear then the bear visits the lion."
    },
    {
        "id": 3423,
        "statement": "needs(X, cat) :- is(X, young).",
        "description": "If someone is young then they need the cat."
    },
    {
        "id": 3424,
        "statement": "is(cat, young) :- is(X, green), likes(X, cat).",
        "description": "If someone is green and they like the cat then the cat is young."
    },
    {
        "id": 3425,
        "statement": "is(bear, young) :- needs(X, bear).",
        "description": "If someone needs the bear then the bear is young."
    },
    {
        "id": 3426,
        "statement": "chases(squirrel, dog).",
        "description": "The squirrel chases the dog."
    },
    {
        "id": 3427,
        "statement": "is(X, blue) :- visits(X, dog), visits(X, lion).",
        "description": "If something visits the dog and it visits the lion then it is blue."
    },
    {
        "id": 3428,
        "statement": "is(lion, rough) :- visits(X, lion), is(X, blue).",
        "description": "If something visits the lion and it is blue then the lion is rough."
    },
    {
        "id": 3429,
        "statement": "is(cat, rough) :- visits(squirrel, cat), needs(squirrel, cat).",
        "description": "If the squirrel visits the cat and the squirrel needs the cat then the cat is rough."
    },
    {
        "id": 3430,
        "statement": "chases(X, cat) :- chases(X, lion).",
        "description": "If something chases the lion then it chases the cat."
    },
    {
        "id": 3431,
        "statement": "chases(dog, lion) :- needs(X, dog), chases(dog, cat).",
        "description": "If something needs the dog and the dog chases the cat then the dog chases the lion."
    },
    {
        "id": 3432,
        "statement": "chases(X, squirrel) :- needs(X, lion), needs(lion, dog).",
        "description": "If something needs the lion and the lion needs the dog then it chases the squirrel."
    },
    {
        "id": 3433,
        "statement": "visits(cat, lion) :- chases(cat, squirrel).",
        "description": "If the cat chases the squirrel then the cat visits the lion."
    },
    {
        "id": 3434,
        "statement": "visits(X, squirrel) :- is(X, rough), needs(X, dog).",
        "description": "If something is rough and it needs the dog then it visits the squirrel."
    },
    {
        "id": 3435,
        "statement": "is(anne, cold) :- is(anne, nice).",
        "description": "If Anne is nice then Anne is cold."
    },
    {
        "id": 3436,
        "statement": "is(X, white) :- is(X, nice), is(X, rough).",
        "description": "If someone is nice and rough then they are white."
    },
    {
        "id": 3437,
        "statement": "is(X, smart) :- is(X, round), is(X, rough).",
        "description": "All round, rough people are smart."
    },
    {
        "id": 3438,
        "statement": "is(charlie, round) :- is(charlie, smart).",
        "description": "If Charlie is smart then Charlie is round."
    },
    {
        "id": 3439,
        "statement": "is(X, cold) :- is(X, white).",
        "description": "All white people are cold."
    },
    {
        "id": 3440,
        "statement": "is(anne, white) :- is(anne, rough).",
        "description": "If Anne is rough then Anne is white."
    },
    {
        "id": 3441,
        "statement": "eats(rabbit, dog).",
        "description": "The rabbit eats the dog."
    },
    {
        "id": 3442,
        "statement": "needs(X, dog) :- is(X, rough), needs(X, rabbit).",
        "description": "If something is rough and it needs the rabbit then it needs the dog."
    },
    {
        "id": 3443,
        "statement": "chases(X, rabbit) :- is(X, round), is(X, big).",
        "description": "If something is round and big then it chases the rabbit."
    },
    {
        "id": 3444,
        "statement": "needs(X, tiger) :- is(X, rough).",
        "description": "If something is rough then it needs the tiger."
    },
    {
        "id": 3445,
        "statement": "is(bear, big) :- chases(X, bear), is(X, round).",
        "description": "If something chases the bear and it is round then the bear is big."
    },
    {
        "id": 3446,
        "statement": "is(dog, rough) :- chases(dog, rabbit), eats(rabbit, dog).",
        "description": "If the dog chases the rabbit and the rabbit eats the dog then the dog is rough."
    },
    {
        "id": 3447,
        "statement": "is(dog, blue) :- chases(X, dog).",
        "description": "If something chases the dog then the dog is blue."
    },
    {
        "id": 3448,
        "statement": "is(X, big) :- eats(X, bear), eats(bear, dog).",
        "description": "If something eats the bear and the bear eats the dog then it is big."
    },
    {
        "id": 3449,
        "statement": "chases(X, bear) :- is(X, big), needs(X, tiger).",
        "description": "If something is big and it needs the tiger then it chases the bear."
    },
    {
        "id": 3450,
        "statement": "is(erin, rough) :- is(erin, nice), is(erin, furry).",
        "description": "If Erin is nice and Erin is furry then Erin is rough."
    },
    {
        "id": 3451,
        "statement": "is(X, round) :- is(X, young), is(X, kind).",
        "description": "Young, kind things are round."
    },
    {
        "id": 3452,
        "statement": "is(X, kind) :- is(X, quiet).",
        "description": "All quiet things are kind."
    },
    {
        "id": 3453,
        "statement": "is(X, furry) :- is(X, kind), is(X, round).",
        "description": "All kind, round things are furry."
    },
    {
        "id": 3454,
        "statement": "is(X, round) :- is(X, kind), is(X, rough).",
        "description": "Kind, rough things are round."
    },
    {
        "id": 3455,
        "statement": "is(X, young) :- is(X, nice), is(X, rough).",
        "description": "If something is nice and rough then it is young."
    },
    {
        "id": 3456,
        "statement": "is(erin, furry) :- is(erin, nice), is(erin, rough).",
        "description": "If Erin is nice and Erin is rough then Erin is furry."
    },
    {
        "id": 3457,
        "statement": "chases(rabbit, mouse) :- chases(mouse, rabbit).",
        "description": "If the mouse chases the rabbit then the rabbit chases the mouse."
    },
    {
        "id": 3458,
        "statement": "likes(mouse, dog) :- is(X, big), visits(X, mouse).",
        "description": "If something is big and it visits the mouse then the mouse likes the dog."
    },
    {
        "id": 3459,
        "statement": "likes(X, rabbit) :- visits(X, mouse).",
        "description": "If something visits the mouse then it likes the rabbit."
    },
    {
        "id": 3460,
        "statement": "is(rabbit, red) :- visits(X, rabbit), visits(X, bear).",
        "description": "If something visits the rabbit and it visits the bear then the rabbit is red."
    },
    {
        "id": 3461,
        "statement": "visits(bear, mouse) :- likes(rabbit, bear).",
        "description": "If the rabbit likes the bear then the bear visits the mouse."
    },
    {
        "id": 3462,
        "statement": "likes(X, mouse) :- visits(X, mouse).",
        "description": "If something visits the mouse then it likes the mouse."
    },
    {
        "id": 3463,
        "statement": "chases(bear, dog) :- visits(X, bear).",
        "description": "If something visits the bear then the bear chases the dog."
    },
    {
        "id": 3464,
        "statement": "visits(rabbit, mouse) :- likes(X, rabbit).",
        "description": "If something likes the rabbit then the rabbit visits the mouse."
    },
    {
        "id": 3465,
        "statement": "visits(X, dog) :- likes(X, mouse).",
        "description": "If something likes the mouse then it visits the dog."
    },
    {
        "id": 3466,
        "statement": "sees(squirrel, cat).",
        "description": "The squirrel sees the cat."
    },
    {
        "id": 3467,
        "statement": "is(tiger, kind) :- visits(X, tiger).",
        "description": "If something visits the tiger then the tiger is kind."
    },
    {
        "id": 3468,
        "statement": "likes(tiger, dog) :- visits(tiger, cat), is(tiger, big).",
        "description": "If the tiger visits the cat and the tiger is big then the tiger likes the dog."
    },
    {
        "id": 3469,
        "statement": "sees(X, dog) :- is(X, kind), sees(X, squirrel).",
        "description": "If something is kind and it sees the squirrel then it sees the dog."
    },
    {
        "id": 3470,
        "statement": "is(cat, kind) :- sees(X, cat).",
        "description": "If something sees the cat then the cat is kind."
    },
    {
        "id": 3471,
        "statement": "sees(tiger, squirrel) :- is(X, kind), visits(X, tiger).",
        "description": "If something is kind and it visits the tiger then the tiger sees the squirrel."
    },
    {
        "id": 3472,
        "statement": "visits(X, dog) :- is(X, blue).",
        "description": "If something is blue then it visits the dog."
    },
    {
        "id": 3473,
        "statement": "sees(tiger, dog) :- sees(cat, tiger).",
        "description": "If the cat sees the tiger then the tiger sees the dog."
    },
    {
        "id": 3474,
        "statement": "visits(X, tiger) :- is(X, big).",
        "description": "If something is big then it visits the tiger."
    },
    {
        "id": 3475,
        "statement": "is(erin, round) :- is(erin, big), is(erin, quiet).",
        "description": "If Erin is big and Erin is quiet then Erin is round."
    },
    {
        "id": 3476,
        "statement": "is(X, nice) :- is(X, big), is(X, smart).",
        "description": "All big, smart people are nice."
    },
    {
        "id": 3477,
        "statement": "is(X, nice) :- is(X, round), is(X, big).",
        "description": "All round, big people are nice."
    },
    {
        "id": 3478,
        "statement": "is(X, quiet) :- is(X, round), not is(X, white).",
        "description": "If someone is round and not white then they are quiet."
    },
    {
        "id": 3479,
        "statement": "is(X, young) :- is(X, quiet), is(X, nice).",
        "description": "Quiet, nice people are young."
    },
    {
        "id": 3480,
        "statement": "is(erin, quiet) :- is(erin, big).",
        "description": "If Erin is big then Erin is quiet."
    },
    {
        "id": 3481,
        "statement": "chases(X, rabbit) :- visits(X, bear), sees(X, rabbit).",
        "description": "If something visits the bear and it sees the rabbit then it chases the rabbit."
    },
    {
        "id": 3482,
        "statement": "is(bear, round) :- visits(X, bear).",
        "description": "If something visits the bear then the bear is round."
    },
    {
        "id": 3483,
        "statement": "is(bear, round) :- chases(X, bear), visits(X, bear).",
        "description": "If something chases the bear and it visits the bear then the bear is round."
    },
    {
        "id": 3484,
        "statement": "sees(dog, squirrel) :- not is(dog, nice).",
        "description": "If the dog is not nice then the dog sees the squirrel."
    },
    {
        "id": 3485,
        "statement": "visits(rabbit, bear) :- chases(X, rabbit), not visits(rabbit, squirrel).",
        "description": "If something chases the rabbit and the rabbit does not visit the squirrel then the rabbit visits the bear."
    },
    {
        "id": 3486,
        "statement": "chases(bear, squirrel) :- sees(X, bear), sees(X, rabbit).",
        "description": "If something sees the bear and it sees the rabbit then the bear chases the squirrel."
    },
    {
        "id": 3487,
        "statement": "sees(X, rabbit) :- visits(X, bear), not sees(X, bear).",
        "description": "If something visits the bear and it does not see the bear then it sees the rabbit."
    },
    {
        "id": 3488,
        "statement": "is(X, round) :- visits(X, dog), visits(X, rabbit).",
        "description": "If something visits the dog and it visits the rabbit then it is round."
    },
    {
        "id": 3489,
        "statement": "chases(X, dog) :- chases(X, rabbit), not is(X, kind).",
        "description": "If something chases the rabbit and it is not kind then it chases the dog."
    },
    {
        "id": 3490,
        "statement": "is(X, green) :- is(X, smart).",
        "description": "If someone is smart then they are green."
    },
    {
        "id": 3491,
        "statement": "is(X, smart) :- is(X, white).",
        "description": "If someone is white then they are smart."
    },
    {
        "id": 3492,
        "statement": "is(X, big) :- is(X, green).",
        "description": "If someone is green then they are big."
    },
    {
        "id": 3493,
        "statement": "is(bob, big) :- is(bob, cold).",
        "description": "If Bob is cold then Bob is big."
    },
    {
        "id": 3494,
        "statement": "is(X, big) :- is(X, blue).",
        "description": "All blue people are big."
    },
    {
        "id": 3495,
        "statement": "is(X, red) :- is(X, cold), not is(X, nice).",
        "description": "If someone is cold and not nice then they are red."
    },
    {
        "id": 3496,
        "statement": "is(X, red) :- is(X, green).",
        "description": "All green people are red."
    },
    {
        "id": 3497,
        "statement": "is(X, quiet) :- is(X, red), is(X, green).",
        "description": "All red, green people are quiet."
    },
    {
        "id": 3498,
        "statement": "is(X, green) :- is(X, nice).",
        "description": "Nice people are green."
    },
    {
        "id": 3499,
        "statement": "is(X, cold) :- is(X, green), is(X, quiet).",
        "description": "If someone is green and quiet then they are cold."
    },
    {
        "id": 3500,
        "statement": "is(charlie, big) :- is(charlie, cold).",
        "description": "If Charlie is cold then Charlie is big."
    },
    {
        "id": 3501,
        "statement": "is(charlie, blue) :- is(charlie, cold).",
        "description": "If Charlie is cold then Charlie is blue."
    },
    {
        "id": 3502,
        "statement": "is(X, blue) :- is(X, cold), is(X, quiet).",
        "description": "All cold, quiet people are blue."
    },
    {
        "id": 3503,
        "statement": "is(X, kind) :- is(X, quiet), is(X, green).",
        "description": "Quiet, green things are kind."
    },
    {
        "id": 3504,
        "statement": "is(X, quiet) :- is(X, cold), is(X, kind).",
        "description": "Cold, kind things are quiet."
    },
    {
        "id": 3505,
        "statement": "is(X, quiet) :- is(X, green).",
        "description": "Green things are quiet."
    },
    {
        "id": 3506,
        "statement": "is(X, big) :- is(X, kind), is(X, green).",
        "description": "If something is kind and green then it is big."
    },
    {
        "id": 3507,
        "statement": "is(harry, quiet) :- is(harry, green).",
        "description": "If Harry is green then Harry is quiet."
    },
    {
        "id": 3508,
        "statement": "is(X, cold) :- is(X, big).",
        "description": "Big things are cold."
    },
    {
        "id": 3509,
        "statement": "is(X, rough) :- is(X, young), is(X, nice).",
        "description": "All young, nice things are rough."
    },
    {
        "id": 3510,
        "statement": "is(X, green) :- is(X, young), is(X, cold).",
        "description": "Young, cold things are green."
    },
    {
        "id": 3511,
        "statement": "is(X, blue) :- is(X, nice), is(X, green).",
        "description": "All nice, green things are blue."
    },
    {
        "id": 3512,
        "statement": "is(X, cold) :- is(X, green), is(X, rough).",
        "description": "All green, rough things are cold."
    },
    {
        "id": 3513,
        "statement": "eats(cow, bald_eagle).",
        "description": "The cow eats the bald eagle."
    },
    {
        "id": 3514,
        "statement": "is(bald_eagle, rough) :- is(rabbit, rough), not eats(bald_eagle, rabbit).",
        "description": "If the rabbit is rough and the bald eagle does not eat the rabbit then the bald eagle is rough."
    },
    {
        "id": 3515,
        "statement": "sees(X, lion) :- eats(X, bald_eagle).",
        "description": "If something eats the bald eagle then it sees the lion."
    },
    {
        "id": 3516,
        "statement": "sees(lion, cow) :- eats(X, lion).",
        "description": "If something eats the lion then the lion sees the cow."
    },
    {
        "id": 3517,
        "statement": "eats(X, bald_eagle) :- sees(X, cow), is(X, rough).",
        "description": "If something sees the cow and it is rough then it eats the bald eagle."
    },
    {
        "id": 3518,
        "statement": "is(X, rough) :- sees(X, rabbit).",
        "description": "If something sees the rabbit then it is rough."
    },
    {
        "id": 3519,
        "statement": "is(bald_eagle, nice) :- sees(bald_eagle, cow), likes(bald_eagle, rabbit).",
        "description": "If the bald eagle sees the cow and the bald eagle likes the rabbit then the bald eagle is nice."
    },
    {
        "id": 3520,
        "statement": "sees(lion, rabbit) :- sees(X, lion), sees(lion, cow).",
        "description": "If something sees the lion and the lion sees the cow then the lion sees the rabbit."
    },
    {
        "id": 3521,
        "statement": "eats(cow, rabbit) :- is(cow, green).",
        "description": "If the cow is green then the cow eats the rabbit."
    },
    {
        "id": 3522,
        "statement": "sees(lion, bald_eagle) :- likes(X, lion).",
        "description": "If something likes the lion then the lion sees the bald eagle."
    },
    {
        "id": 3523,
        "statement": "needs(cow, squirrel) :- needs(X, cow).",
        "description": "If something needs the cow then the cow needs the squirrel."
    },
    {
        "id": 3524,
        "statement": "needs(X, cow) :- is(X, big).",
        "description": "If something is big then it needs the cow."
    },
    {
        "id": 3525,
        "statement": "is(X, nice) :- needs(X, squirrel).",
        "description": "If something needs the squirrel then it is nice."
    },
    {
        "id": 3526,
        "statement": "is(X, blue) :- likes(X, squirrel).",
        "description": "If something likes the squirrel then it is blue."
    },
    {
        "id": 3527,
        "statement": "is(dog, nice) :- likes(X, dog).",
        "description": "If something likes the dog then the dog is nice."
    },
    {
        "id": 3528,
        "statement": "likes(cow, squirrel) :- likes(X, cow), needs(cow, rabbit).",
        "description": "If something likes the cow and the cow needs the rabbit then the cow likes the squirrel."
    },
    {
        "id": 3529,
        "statement": "is(X, blue) :- is(X, smart), is(X, nice).",
        "description": "If something is smart and nice then it is blue."
    },
    {
        "id": 3530,
        "statement": "is(X, smart) :- is(X, nice).",
        "description": "All nice things are smart."
    },
    {
        "id": 3531,
        "statement": "is(erin, smart) :- is(erin, blue).",
        "description": "If Erin is blue then Erin is smart."
    },
    {
        "id": 3532,
        "statement": "is(X, rough) :- is(X, quiet).",
        "description": "All quiet things are rough."
    },
    {
        "id": 3533,
        "statement": "is(X, smart) :- is(X, big), is(X, nice).",
        "description": "If something is big and nice then it is smart."
    },
    {
        "id": 3534,
        "statement": "is(X, smart) :- is(X, big), is(X, nice).",
        "description": "All big, nice things are smart."
    },
    {
        "id": 3535,
        "statement": "is(X, blue) :- is(X, smart).",
        "description": "All smart things are blue."
    },
    {
        "id": 3536,
        "statement": "is(X, big) :- is(X, nice), is(X, blue).",
        "description": "All nice, blue things are big."
    },
    {
        "id": 3537,
        "statement": "likes(bald_eagle, bear) :- is(bald_eagle, blue), eats(bald_eagle, bear).",
        "description": "If the bald eagle is blue and the bald eagle eats the bear then the bald eagle likes the bear."
    },
    {
        "id": 3538,
        "statement": "is(bear, blue) :- needs(bald_eagle, bear).",
        "description": "If the bald eagle needs the bear then the bear is blue."
    },
    {
        "id": 3539,
        "statement": "needs(X, cat) :- likes(X, mouse).",
        "description": "If someone likes the mouse then they need the cat."
    },
    {
        "id": 3540,
        "statement": "is(cat, kind) :- needs(bald_eagle, cat).",
        "description": "If the bald eagle needs the cat then the cat is kind."
    },
    {
        "id": 3541,
        "statement": "is(cat, young) :- needs(X, bald_eagle), likes(X, cat).",
        "description": "If someone needs the bald eagle and they like the cat then the cat is young."
    },
    {
        "id": 3542,
        "statement": "needs(bear, cat) :- likes(cat, mouse), eats(cat, bear).",
        "description": "If the cat likes the mouse and the cat eats the bear then the bear needs the cat."
    },
    {
        "id": 3543,
        "statement": "needs(bald_eagle, cat) :- is(bald_eagle, round), is(bald_eagle, young).",
        "description": "If the bald eagle is round and the bald eagle is young then the bald eagle needs the cat."
    },
    {
        "id": 3544,
        "statement": "likes(X, mouse) :- is(X, kind).",
        "description": "If someone is kind then they like the mouse."
    },
    {
        "id": 3545,
        "statement": "visits(mouse, lion).",
        "description": "The mouse visits the lion."
    },
    {
        "id": 3546,
        "statement": "likes(X, lion) :- sees(X, mouse), sees(X, lion).",
        "description": "If something sees the mouse and it sees the lion then it likes the lion."
    },
    {
        "id": 3547,
        "statement": "is(mouse, red) :- visits(X, bald_eagle), sees(bald_eagle, mouse).",
        "description": "If something visits the bald eagle and the bald eagle sees the mouse then the mouse is red."
    },
    {
        "id": 3548,
        "statement": "visits(X, bear) :- visits(X, bald_eagle), sees(bald_eagle, bear).",
        "description": "If something visits the bald eagle and the bald eagle sees the bear then it visits the bear."
    },
    {
        "id": 3549,
        "statement": "sees(lion, mouse) :- visits(X, lion), is(X, big).",
        "description": "If something visits the lion and it is big then the lion sees the mouse."
    },
    {
        "id": 3550,
        "statement": "sees(bald_eagle, lion) :- sees(bear, mouse), likes(mouse, bald_eagle).",
        "description": "If the bear sees the mouse and the mouse likes the bald eagle then the bald eagle sees the lion."
    },
    {
        "id": 3551,
        "statement": "is(lion, nice) :- sees(X, mouse), sees(X, lion).",
        "description": "If something sees the mouse and it sees the lion then the lion is nice."
    },
    {
        "id": 3552,
        "statement": "sees(X, mouse) :- likes(X, mouse), sees(mouse, bear).",
        "description": "If something likes the mouse and the mouse sees the bear then it sees the mouse."
    },
    {
        "id": 3553,
        "statement": "sees(lion, bald_eagle) :- visits(lion, mouse).",
        "description": "If the lion visits the mouse then the lion sees the bald eagle."
    },
    {
        "id": 3554,
        "statement": "sees(X, bear) :- likes(X, lion).",
        "description": "If something likes the lion then it sees the bear."
    },
    {
        "id": 3555,
        "statement": "is(X, quiet) :- is(X, big), is(X, smart).",
        "description": "All big, smart things are quiet."
    },
    {
        "id": 3556,
        "statement": "is(X, smart) :- is(X, cold), is(X, quiet).",
        "description": "Cold, quiet things are smart."
    },
    {
        "id": 3557,
        "statement": "is(X, kind) :- is(X, smart), is(X, blue).",
        "description": "If something is smart and blue then it is kind."
    },
    {
        "id": 3558,
        "statement": "is(dave, cold) :- is(dave, blue), is(dave, furry).",
        "description": "If Dave is blue and Dave is furry then Dave is cold."
    },
    {
        "id": 3559,
        "statement": "sees(X, cat) :- is(X, nice).",
        "description": "If someone is nice then they see the cat."
    },
    {
        "id": 3560,
        "statement": "needs(cat, dog) :- needs(X, mouse), visits(mouse, cat).",
        "description": "If someone needs the mouse and the mouse visits the cat then the cat needs the dog."
    },
    {
        "id": 3561,
        "statement": "is(X, nice) :- sees(X, dog).",
        "description": "If someone sees the dog then they are nice."
    },
    {
        "id": 3562,
        "statement": "needs(dog, mouse) :- visits(dog, cat), is(dog, rough).",
        "description": "If the dog visits the cat and the dog is rough then the dog needs the mouse."
    },
    {
        "id": 3563,
        "statement": "visits(X, cat) :- sees(X, cat), is(X, green).",
        "description": "If someone sees the cat and they are green then they visit the cat."
    },
    {
        "id": 3564,
        "statement": "needs(X, dog) :- is(X, rough).",
        "description": "If someone is rough then they need the dog."
    },
    {
        "id": 3565,
        "statement": "sees(mouse, dog) :- visits(X, mouse).",
        "description": "If someone visits the mouse then the mouse sees the dog."
    },
    {
        "id": 3566,
        "statement": "is(X, rough) :- is(X, big), is(X, cold).",
        "description": "All big, cold things are rough."
    },
    {
        "id": 3567,
        "statement": "is(X, rough) :- is(X, big).",
        "description": "Big things are rough."
    },
    {
        "id": 3568,
        "statement": "is(X, young) :- is(X, furry).",
        "description": "If something is furry then it is young."
    },
    {
        "id": 3569,
        "statement": "is(X, blue) :- is(X, big), is(X, rough).",
        "description": "Big, rough things are blue."
    },
    {
        "id": 3570,
        "statement": "is(X, furry) :- is(X, blue), is(X, big).",
        "description": "All blue, big things are furry."
    },
    {
        "id": 3571,
        "statement": "is(X, big) :- is(X, rough).",
        "description": "If something is rough then it is big."
    },
    {
        "id": 3572,
        "statement": "is(X, big) :- is(X, rough), is(X, cold).",
        "description": "Rough, cold things are big."
    },
    {
        "id": 3573,
        "statement": "is(X, cold) :- is(X, young), is(X, blue).",
        "description": "Young, blue things are cold."
    },
    {
        "id": 3574,
        "statement": "is(X, nice) :- is(X, furry), not is(X, big).",
        "description": "If something is furry and not big then it is nice."
    },
    {
        "id": 3575,
        "statement": "is(X, cold) :- is(X, nice), is(X, round).",
        "description": "If someone is nice and round then they are cold."
    },
    {
        "id": 3576,
        "statement": "is(X, cold) :- is(X, smart).",
        "description": "If someone is smart then they are cold."
    },
    {
        "id": 3577,
        "statement": "is(X, blue) :- is(X, smart), is(X, red).",
        "description": "Smart, red people are blue."
    },
    {
        "id": 3578,
        "statement": "is(X, big) :- is(X, furry), is(X, kind).",
        "description": "All furry, kind people are big."
    },
    {
        "id": 3579,
        "statement": "is(X, white) :- is(X, furry).",
        "description": "If someone is furry then they are white."
    },
    {
        "id": 3580,
        "statement": "is(X, kind) :- is(X, white), is(X, smart).",
        "description": "White, smart people are kind."
    },
    {
        "id": 3581,
        "statement": "is(X, kind) :- is(X, big).",
        "description": "All big people are kind."
    },
    {
        "id": 3582,
        "statement": "is(dave, kind) :- is(dave, blue).",
        "description": "If Dave is blue then Dave is kind."
    },
    {
        "id": 3583,
        "statement": "is(X, furry) :- is(X, green).",
        "description": "If someone is green then they are furry."
    },
    {
        "id": 3584,
        "statement": "is(X, big) :- is(X, kind).",
        "description": "If someone is kind then they are big."
    },
    {
        "id": 3585,
        "statement": "is(X, blue) :- is(X, white).",
        "description": "If someone is white then they are blue."
    },
    {
        "id": 3586,
        "statement": "likes(X, rabbit) :- eats(X, dog).",
        "description": "If someone eats the dog then they like the rabbit."
    },
    {
        "id": 3587,
        "statement": "is(rabbit, red) :- is(X, round), likes(X, rabbit).",
        "description": "If someone is round and they like the rabbit then the rabbit is red."
    },
    {
        "id": 3588,
        "statement": "needs(X, bear) :- is(X, red).",
        "description": "If someone is red then they need the bear."
    },
    {
        "id": 3589,
        "statement": "needs(X, dog) :- is(X, round).",
        "description": "If someone is round then they need the dog."
    },
    {
        "id": 3590,
        "statement": "eats(X, dog) :- is(X, round).",
        "description": "If someone is round then they eat the dog."
    },
    {
        "id": 3591,
        "statement": "needs(mouse, rabbit).",
        "description": "The mouse needs the rabbit."
    },
    {
        "id": 3592,
        "statement": "sees(bear, cow) :- eats(X, bear).",
        "description": "If someone eats the bear then the bear sees the cow."
    },
    {
        "id": 3593,
        "statement": "needs(X, mouse) :- sees(X, rabbit).",
        "description": "If someone sees the rabbit then they need the mouse."
    },
    {
        "id": 3594,
        "statement": "sees(bear, rabbit) :- eats(X, bear).",
        "description": "If someone eats the bear then the bear sees the rabbit."
    },
    {
        "id": 3595,
        "statement": "sees(mouse, rabbit) :- needs(X, rabbit), needs(X, mouse).",
        "description": "If someone needs the rabbit and they need the mouse then the mouse sees the rabbit."
    },
    {
        "id": 3596,
        "statement": "is(cow, cold) :- sees(bear, rabbit), eats(bear, cow).",
        "description": "If the bear sees the rabbit and the bear eats the cow then the cow is cold."
    },
    {
        "id": 3597,
        "statement": "is(X, kind) :- is(X, cold).",
        "description": "If someone is cold then they are kind."
    },
    {
        "id": 3598,
        "statement": "eats(X, bear) :- is(X, young).",
        "description": "If someone is young then they eat the bear."
    },
    {
        "id": 3599,
        "statement": "likes(dog, mouse) :- needs(dog, lion), is(lion, nice).",
        "description": "If the dog needs the lion and the lion is nice then the dog likes the mouse."
    },
    {
        "id": 3600,
        "statement": "likes(X, tiger) :- likes(X, mouse).",
        "description": "If something likes the mouse then it likes the tiger."
    },
    {
        "id": 3601,
        "statement": "chases(mouse, lion) :- likes(X, mouse).",
        "description": "If something likes the mouse then the mouse chases the lion."
    },
    {
        "id": 3602,
        "statement": "likes(tiger, dog) :- is(X, green), likes(X, tiger).",
        "description": "If something is green and it likes the tiger then the tiger likes the dog."
    },
    {
        "id": 3603,
        "statement": "likes(X, lion) :- likes(X, dog).",
        "description": "If something likes the dog then it likes the lion."
    },
    {
        "id": 3604,
        "statement": "is(dog, green) :- is(dog, nice), not likes(dog, mouse).",
        "description": "If the dog is nice and the dog does not like the mouse then the dog is green."
    },
    {
        "id": 3605,
        "statement": "is(tiger, round) :- chases(X, tiger), not likes(tiger, lion).",
        "description": "If something chases the tiger and the tiger does not like the lion then the tiger is round."
    },
    {
        "id": 3606,
        "statement": "sees(rabbit, bald_eagle).",
        "description": "The rabbit sees the bald eagle."
    },
    {
        "id": 3607,
        "statement": "eats(X, dog) :- chases(X, dog).",
        "description": "If something chases the dog then it eats the dog."
    },
    {
        "id": 3608,
        "statement": "eats(X, dog) :- sees(X, dog), chases(X, rabbit).",
        "description": "If something sees the dog and it chases the rabbit then it eats the dog."
    },
    {
        "id": 3609,
        "statement": "is(X, rough) :- sees(X, dog), not is(X, cold).",
        "description": "If something sees the dog and it is not cold then it is rough."
    },
    {
        "id": 3610,
        "statement": "chases(dog, rabbit) :- chases(X, dog), sees(dog, rabbit).",
        "description": "If something chases the dog and the dog sees the rabbit then the dog chases the rabbit."
    },
    {
        "id": 3611,
        "statement": "is(X, green) :- eats(X, dog).",
        "description": "If something eats the dog then it is green."
    },
    {
        "id": 3612,
        "statement": "sees(X, dog) :- is(X, green).",
        "description": "If something is green then it sees the dog."
    },
    {
        "id": 3613,
        "statement": "chases(bald_eagle, rabbit) :- sees(X, bald_eagle), is(bald_eagle, green).",
        "description": "If something sees the bald eagle and the bald eagle is green then the bald eagle chases the rabbit."
    },
    {
        "id": 3614,
        "statement": "is(X, kind) :- is(X, rough), not is(X, big).",
        "description": "If something is rough and not big then it is kind."
    },
    {
        "id": 3615,
        "statement": "is(gary, green) :- is(gary, kind), is(gary, blue).",
        "description": "If Gary is kind and Gary is blue then Gary is green."
    },
    {
        "id": 3616,
        "statement": "is(X, young) :- is(X, smart).",
        "description": "If someone is smart then they are young."
    },
    {
        "id": 3617,
        "statement": "is(X, kind) :- is(X, smart).",
        "description": "All smart people are kind."
    },
    {
        "id": 3618,
        "statement": "is(X, smart) :- is(X, quiet).",
        "description": "Quiet people are smart."
    },
    {
        "id": 3619,
        "statement": "is(X, quiet) :- is(X, green).",
        "description": "All green people are quiet."
    },
    {
        "id": 3620,
        "statement": "is(X, quiet) :- is(X, smart).",
        "description": "If someone is smart then they are quiet."
    },
    {
        "id": 3621,
        "statement": "is(X, round) :- is(X, kind).",
        "description": "If someone is kind then they are round."
    },
    {
        "id": 3622,
        "statement": "eats(squirrel, bald_eagle).",
        "description": "The squirrel eats the bald eagle."
    },
    {
        "id": 3623,
        "statement": "visits(squirrel, tiger).",
        "description": "The squirrel visits the tiger."
    },
    {
        "id": 3624,
        "statement": "visits(cat, squirrel) :- needs(X, cat).",
        "description": "If someone needs the cat then the cat visits the squirrel."
    },
    {
        "id": 3625,
        "statement": "visits(tiger, cat) :- is(X, cold), eats(X, tiger).",
        "description": "If someone is cold and they eat the tiger then the tiger visits the cat."
    },
    {
        "id": 3626,
        "statement": "needs(cat, bald_eagle) :- visits(cat, bald_eagle).",
        "description": "If the cat visits the bald eagle then the cat needs the bald eagle."
    },
    {
        "id": 3627,
        "statement": "eats(X, tiger) :- visits(X, cat), is(cat, cold).",
        "description": "If someone visits the cat and the cat is cold then they eat the tiger."
    },
    {
        "id": 3628,
        "statement": "visits(cat, bald_eagle) :- eats(X, cat), visits(cat, tiger).",
        "description": "If someone eats the cat and the cat visits the tiger then the cat visits the bald eagle."
    },
    {
        "id": 3629,
        "statement": "needs(tiger, bald_eagle) :- visits(X, tiger).",
        "description": "If someone visits the tiger then the tiger needs the bald eagle."
    },
    {
        "id": 3630,
        "statement": "needs(bald_eagle, cat) :- visits(bald_eagle, squirrel), needs(squirrel, bald_eagle).",
        "description": "If the bald eagle visits the squirrel and the squirrel needs the bald eagle then the bald eagle needs the cat."
    },
    {
        "id": 3631,
        "statement": "visits(X, cat) :- visits(X, bald_eagle), eats(bald_eagle, cat).",
        "description": "If someone visits the bald eagle and the bald eagle eats the cat then they visit the cat."
    },
    {
        "id": 3632,
        "statement": "needs(X, tiger) :- is(X, young), is(X, cold).",
        "description": "If someone is young and cold then they need the tiger."
    },
    {
        "id": 3633,
        "statement": "needs(X, dog) :- is(X, kind).",
        "description": "If something is kind then it needs the dog."
    },
    {
        "id": 3634,
        "statement": "is(X, cold) :- eats(X, bald_eagle).",
        "description": "If something eats the bald eagle then it is cold."
    },
    {
        "id": 3635,
        "statement": "is(X, kind) :- needs(X, dog), eats(X, bald_eagle).",
        "description": "If something needs the dog and it eats the bald eagle then it is kind."
    },
    {
        "id": 3636,
        "statement": "needs(bald_eagle, mouse) :- likes(bald_eagle, dog), needs(dog, bald_eagle).",
        "description": "If the bald eagle likes the dog and the dog needs the bald eagle then the bald eagle needs the mouse."
    },
    {
        "id": 3637,
        "statement": "likes(mouse, dog) :- eats(squirrel, dog), not eats(squirrel, mouse).",
        "description": "If the squirrel eats the dog and the squirrel does not eat the mouse then the mouse likes the dog."
    },
    {
        "id": 3638,
        "statement": "eats(X, dog) :- eats(X, squirrel).",
        "description": "If something eats the squirrel then it eats the dog."
    },
    {
        "id": 3639,
        "statement": "eats(X, squirrel) :- likes(X, dog).",
        "description": "If something likes the dog then it eats the squirrel."
    },
    {
        "id": 3640,
        "statement": "eats(cat, bear).",
        "description": "The cat eats the bear."
    },
    {
        "id": 3641,
        "statement": "is(X, blue) :- chases(X, lion), is(lion, round).",
        "description": "If something chases the lion and the lion is round then it is blue."
    },
    {
        "id": 3642,
        "statement": "visits(X, rabbit) :- is(X, blue).",
        "description": "If something is blue then it visits the rabbit."
    },
    {
        "id": 3643,
        "statement": "is(lion, round) :- is(X, blue), visits(X, lion).",
        "description": "If something is blue and it visits the lion then the lion is round."
    },
    {
        "id": 3644,
        "statement": "chases(X, cat) :- chases(X, lion), visits(lion, rabbit).",
        "description": "If something chases the lion and the lion visits the rabbit then it chases the cat."
    },
    {
        "id": 3645,
        "statement": "eats(lion, cat) :- is(X, kind), chases(X, lion).",
        "description": "If something is kind and it chases the lion then the lion eats the cat."
    },
    {
        "id": 3646,
        "statement": "chases(rabbit, bear) :- chases(bear, rabbit), not chases(cat, bear).",
        "description": "If the bear chases the rabbit and the cat does not chase the bear then the rabbit chases the bear."
    },
    {
        "id": 3647,
        "statement": "chases(X, lion) :- is(X, kind).",
        "description": "If something is kind then it chases the lion."
    },
    {
        "id": 3648,
        "statement": "chases(X, lion) :- is(X, cold).",
        "description": "If something is cold then it chases the lion."
    },
    {
        "id": 3649,
        "statement": "is(X, round) :- visits(X, rabbit).",
        "description": "If something visits the rabbit then it is round."
    },
    {
        "id": 3650,
        "statement": "visits(mouse, bald_eagle).",
        "description": "The mouse visits the bald eagle."
    },
    {
        "id": 3651,
        "statement": "likes(bald_eagle, tiger) :- needs(X, bald_eagle), likes(X, tiger).",
        "description": "If something needs the bald eagle and it likes the tiger then the bald eagle likes the tiger."
    },
    {
        "id": 3652,
        "statement": "visits(X, squirrel) :- visits(X, bald_eagle).",
        "description": "If something visits the bald eagle then it visits the squirrel."
    },
    {
        "id": 3653,
        "statement": "needs(squirrel, bald_eagle) :- needs(X, squirrel).",
        "description": "If something needs the squirrel then the squirrel needs the bald eagle."
    },
    {
        "id": 3654,
        "statement": "needs(X, tiger) :- is(X, green).",
        "description": "If something is green then it needs the tiger."
    },
    {
        "id": 3655,
        "statement": "likes(X, tiger) :- visits(X, mouse).",
        "description": "If something visits the mouse then it likes the tiger."
    },
    {
        "id": 3656,
        "statement": "visits(tiger, mouse) :- needs(squirrel, tiger).",
        "description": "If the squirrel needs the tiger then the tiger visits the mouse."
    },
    {
        "id": 3657,
        "statement": "is(X, blue) :- visits(X, squirrel).",
        "description": "If something visits the squirrel then it is blue."
    },
    {
        "id": 3658,
        "statement": "visits(squirrel, bald_eagle) :- visits(squirrel, mouse).",
        "description": "If the squirrel visits the mouse then the squirrel visits the bald eagle."
    },
    {
        "id": 3659,
        "statement": "is(X, round) :- is(X, big).",
        "description": "All big things are round."
    },
    {
        "id": 3660,
        "statement": "is(X, furry) :- is(X, white).",
        "description": "If something is white then it is furry."
    },
    {
        "id": 3661,
        "statement": "is(anne, young) :- is(anne, round), is(anne, white).",
        "description": "If Anne is round and Anne is white then Anne is young."
    },
    {
        "id": 3662,
        "statement": "is(X, green) :- is(X, kind), is(X, round).",
        "description": "All kind, round things are green."
    },
    {
        "id": 3663,
        "statement": "is(X, white) :- is(X, kind), is(X, furry).",
        "description": "Kind, furry things are white."
    },
    {
        "id": 3664,
        "statement": "is(anne, big) :- is(anne, white), is(anne, green).",
        "description": "If Anne is white and Anne is green then Anne is big."
    },
    {
        "id": 3665,
        "statement": "is(X, furry) :- is(X, round), is(X, big).",
        "description": "If something is round and big then it is furry."
    },
    {
        "id": 3666,
        "statement": "likes(cat, mouse).",
        "description": "The cat likes the mouse."
    },
    {
        "id": 3667,
        "statement": "needs(X, cat) :- sees(X, bald_eagle).",
        "description": "If someone sees the bald eagle then they need the cat."
    },
    {
        "id": 3668,
        "statement": "likes(X, dog) :- needs(X, cat).",
        "description": "If someone needs the cat then they like the dog."
    },
    {
        "id": 3669,
        "statement": "sees(X, mouse) :- likes(X, mouse).",
        "description": "If someone likes the mouse then they see the mouse."
    },
    {
        "id": 3670,
        "statement": "is(X, kind) :- likes(X, cat).",
        "description": "If someone likes the cat then they are kind."
    },
    {
        "id": 3671,
        "statement": "sees(X, bald_eagle) :- needs(X, mouse).",
        "description": "If someone needs the mouse then they see the bald eagle."
    },
    {
        "id": 3672,
        "statement": "is(cat, big) :- likes(X, cat), needs(X, cat).",
        "description": "If someone likes the cat and they need the cat then the cat is big."
    },
    {
        "id": 3673,
        "statement": "needs(X, mouse) :- is(X, kind).",
        "description": "If someone is kind then they need the mouse."
    },
    {
        "id": 3674,
        "statement": "is(X, smart) :- is(X, young).",
        "description": "If someone is young then they are smart."
    },
    {
        "id": 3675,
        "statement": "is(X, smart) :- is(X, white), is(X, quiet).",
        "description": "If someone is white and quiet then they are smart."
    },
    {
        "id": 3676,
        "statement": "is(X, round) :- is(X, blue), not is(X, white).",
        "description": "If someone is blue and not white then they are round."
    },
    {
        "id": 3677,
        "statement": "eats(lion, mouse).",
        "description": "The lion eats the mouse."
    },
    {
        "id": 3678,
        "statement": "chases(X, cow) :- is(X, young).",
        "description": "If something is young then it chases the cow."
    },
    {
        "id": 3679,
        "statement": "eats(mouse, cat) :- eats(mouse, lion).",
        "description": "If the mouse eats the lion then the mouse eats the cat."
    },
    {
        "id": 3680,
        "statement": "is(X, young) :- sees(X, cat).",
        "description": "If something sees the cat then it is young."
    },
    {
        "id": 3681,
        "statement": "sees(X, cat) :- eats(X, lion).",
        "description": "If something eats the lion then it sees the cat."
    },
    {
        "id": 3682,
        "statement": "eats(cat, cow) :- chases(lion, cat).",
        "description": "If the lion chases the cat then the cat eats the cow."
    },
    {
        "id": 3683,
        "statement": "sees(mouse, cat) :- chases(mouse, cat), not sees(cow, mouse).",
        "description": "If the mouse chases the cat and the cow does not see the mouse then the mouse sees the cat."
    },
    {
        "id": 3684,
        "statement": "eats(lion, cat) :- is(lion, blue), sees(lion, cow).",
        "description": "If the lion is blue and the lion sees the cow then the lion eats the cat."
    },
    {
        "id": 3685,
        "statement": "chases(mouse, cat) :- is(X, blue), sees(X, mouse).",
        "description": "If something is blue and it sees the mouse then the mouse chases the cat."
    },
    {
        "id": 3686,
        "statement": "is(cow, blue) :- chases(X, cow).",
        "description": "If something chases the cow then the cow is blue."
    },
    {
        "id": 3687,
        "statement": "eats(X, mouse) :- sees(X, cow).",
        "description": "If something sees the cow then it eats the mouse."
    },
    {
        "id": 3688,
        "statement": "sees(X, cow) :- eats(X, dog).",
        "description": "If something eats the dog then it sees the cow."
    },
    {
        "id": 3689,
        "statement": "is(dog, kind) :- is(X, blue), sees(X, dog).",
        "description": "If something is blue and it sees the dog then the dog is kind."
    },
    {
        "id": 3690,
        "statement": "eats(X, dog) :- is(X, kind).",
        "description": "If something is kind then it eats the dog."
    },
    {
        "id": 3691,
        "statement": "visits(X, lion) :- visits(X, squirrel).",
        "description": "If someone visits the squirrel then they visit the lion."
    },
    {
        "id": 3692,
        "statement": "is(X, red) :- likes(X, lion).",
        "description": "If someone likes the lion then they are red."
    },
    {
        "id": 3693,
        "statement": "needs(tiger, bear) :- not needs(tiger, squirrel).",
        "description": "If the tiger does not need the squirrel then the tiger needs the bear."
    },
    {
        "id": 3694,
        "statement": "likes(X, squirrel) :- visits(X, squirrel).",
        "description": "If someone visits the squirrel then they like the squirrel."
    },
    {
        "id": 3695,
        "statement": "likes(X, tiger) :- visits(X, bear).",
        "description": "If someone visits the bear then they like the tiger."
    },
    {
        "id": 3696,
        "statement": "visits(tiger, lion) :- is(X, young), visits(X, tiger).",
        "description": "If someone is young and they visit the tiger then the tiger visits the lion."
    },
    {
        "id": 3697,
        "statement": "likes(bear, lion) :- is(X, big), needs(X, bear).",
        "description": "If someone is big and they need the bear then the bear likes the lion."
    },
    {
        "id": 3698,
        "statement": "needs(bear, lion) :- visits(squirrel, bear), needs(squirrel, tiger).",
        "description": "If the squirrel visits the bear and the squirrel needs the tiger then the bear needs the lion."
    },
    {
        "id": 3699,
        "statement": "visits(X, tiger) :- is(X, red).",
        "description": "If someone is red then they visit the tiger."
    },
    {
        "id": 3700,
        "statement": "is(harry, young) :- is(harry, green), is(harry, quiet).",
        "description": "If Harry is green and Harry is quiet then Harry is young."
    },
    {
        "id": 3701,
        "statement": "is(X, white) :- is(X, rough).",
        "description": "Rough things are white."
    },
    {
        "id": 3702,
        "statement": "is(X, white) :- is(X, round), is(X, rough).",
        "description": "All round, rough things are white."
    },
    {
        "id": 3703,
        "statement": "is(X, round) :- is(X, blue).",
        "description": "Blue things are round."
    },
    {
        "id": 3704,
        "statement": "is(X, green) :- is(X, white), is(X, rough).",
        "description": "White, rough things are green."
    },
    {
        "id": 3705,
        "statement": "is(X, rough) :- is(X, red), is(X, round).",
        "description": "If something is red and round then it is rough."
    },
    {
        "id": 3706,
        "statement": "is(X, rough) :- is(X, young).",
        "description": "If something is young then it is rough."
    },
    {
        "id": 3707,
        "statement": "is(X, blue) :- is(X, rough), is(X, young).",
        "description": "Rough, young things are blue."
    },
    {
        "id": 3708,
        "statement": "is(X, round) :- is(X, furry).",
        "description": "Furry things are round."
    },
    {
        "id": 3709,
        "statement": "is(charlie, young) :- is(charlie, furry), not is(charlie, red).",
        "description": "If Charlie is furry and Charlie is not red then Charlie is young."
    },
    {
        "id": 3710,
        "statement": "is(X, furry) :- is(X, young), is(X, blue).",
        "description": "If something is young and blue then it is furry."
    },
    {
        "id": 3711,
        "statement": "is(X, blue) :- needs(X, lion), chases(X, lion).",
        "description": "If someone needs the lion and they chase the lion then they are blue."
    },
    {
        "id": 3712,
        "statement": "likes(X, lion) :- needs(X, tiger), is(X, red).",
        "description": "If someone needs the tiger and they are red then they like the lion."
    },
    {
        "id": 3713,
        "statement": "is(X, red) :- needs(X, cat).",
        "description": "If someone needs the cat then they are red."
    },
    {
        "id": 3714,
        "statement": "likes(cat, tiger) :- needs(cat, tiger), is(tiger, blue).",
        "description": "If the cat needs the tiger and the tiger is blue then the cat likes the tiger."
    },
    {
        "id": 3715,
        "statement": "needs(squirrel, tiger) :- likes(cat, tiger), needs(cat, squirrel).",
        "description": "If the cat likes the tiger and the cat needs the squirrel then the squirrel needs the tiger."
    },
    {
        "id": 3716,
        "statement": "needs(X, cat) :- is(X, blue).",
        "description": "If someone is blue then they need the cat."
    },
    {
        "id": 3717,
        "statement": "chases(X, cat) :- needs(X, lion), is(X, kind).",
        "description": "If someone needs the lion and they are kind then they chase the cat."
    },
    {
        "id": 3718,
        "statement": "is(X, round) :- likes(X, lion).",
        "description": "If someone likes the lion then they are round."
    },
    {
        "id": 3719,
        "statement": "is(X, white) :- is(X, quiet), is(X, nice).",
        "description": "If something is quiet and nice then it is white."
    },
    {
        "id": 3720,
        "statement": "is(anne, quiet) :- is(anne, round).",
        "description": "If Anne is round then Anne is quiet."
    },
    {
        "id": 3721,
        "statement": "is(X, kind) :- is(X, round).",
        "description": "All round things are kind."
    },
    {
        "id": 3722,
        "statement": "is(X, smart) :- is(X, round), is(X, kind).",
        "description": "All round, kind things are smart."
    },
    {
        "id": 3723,
        "statement": "is(X, quiet) :- is(X, round), is(X, kind).",
        "description": "If something is round and kind then it is quiet."
    },
    {
        "id": 3724,
        "statement": "is(erin, smart) :- is(erin, nice), is(erin, round).",
        "description": "If Erin is nice and Erin is round then Erin is smart."
    },
    {
        "id": 3725,
        "statement": "is(X, nice) :- is(X, young), is(X, white).",
        "description": "Young, white things are nice."
    },
    {
        "id": 3726,
        "statement": "is(X, green) :- is(X, red), is(X, white).",
        "description": "Red, white things are green."
    },
    {
        "id": 3727,
        "statement": "is(X, green) :- is(X, smart).",
        "description": "If something is smart then it is green."
    },
    {
        "id": 3728,
        "statement": "is(X, smart) :- is(X, blue).",
        "description": "If something is blue then it is smart."
    },
    {
        "id": 3729,
        "statement": "is(X, blue) :- is(X, young), is(X, green).",
        "description": "Young, green things are blue."
    },
    {
        "id": 3730,
        "statement": "visits(X, cat) :- sees(X, cat).",
        "description": "If something sees the cat then it visits the cat."
    },
    {
        "id": 3731,
        "statement": "is(mouse, round) :- visits(X, mouse), visits(mouse, bald_eagle).",
        "description": "If something visits the mouse and the mouse visits the bald eagle then the mouse is round."
    },
    {
        "id": 3732,
        "statement": "visits(X, mouse) :- eats(X, cat), is(X, red).",
        "description": "If something eats the cat and it is red then it visits the mouse."
    },
    {
        "id": 3733,
        "statement": "sees(X, cat) :- sees(X, lion).",
        "description": "If something sees the lion then it sees the cat."
    },
    {
        "id": 3734,
        "statement": "eats(X, mouse) :- sees(X, bald_eagle), eats(bald_eagle, cat).",
        "description": "If something sees the bald eagle and the bald eagle eats the cat then it eats the mouse."
    },
    {
        "id": 3735,
        "statement": "sees(lion, bald_eagle) :- sees(X, lion).",
        "description": "If something sees the lion then the lion sees the bald eagle."
    },
    {
        "id": 3736,
        "statement": "sees(X, lion) :- eats(X, lion), sees(X, bald_eagle).",
        "description": "If something eats the lion and it sees the bald eagle then it sees the lion."
    },
    {
        "id": 3737,
        "statement": "visits(X, lion) :- is(X, rough), is(X, round).",
        "description": "If something is rough and round then it visits the lion."
    },
    {
        "id": 3738,
        "statement": "eats(X, lion) :- visits(X, lion).",
        "description": "If something visits the lion then it eats the lion."
    },
    {
        "id": 3739,
        "statement": "is(X, red) :- is(X, furry), is(X, blue).",
        "description": "Furry, blue people are red."
    },
    {
        "id": 3740,
        "statement": "is(X, red) :- is(X, round), is(X, blue).",
        "description": "Round, blue people are red."
    },
    {
        "id": 3741,
        "statement": "is(dave, nice) :- is(dave, smart).",
        "description": "If Dave is smart then Dave is nice."
    },
    {
        "id": 3742,
        "statement": "is(fiona, round) :- is(fiona, nice), is(fiona, furry).",
        "description": "If Fiona is nice and Fiona is furry then Fiona is round."
    },
    {
        "id": 3743,
        "statement": "is(X, green) :- is(X, red), is(X, smart).",
        "description": "All red, smart people are green."
    },
    {
        "id": 3744,
        "statement": "is(gary, green) :- is(gary, nice), is(gary, furry).",
        "description": "If Gary is nice and Gary is furry then Gary is green."
    },
    {
        "id": 3745,
        "statement": "is(X, smart) :- is(X, red).",
        "description": "Red people are smart."
    },
    {
        "id": 3746,
        "statement": "is(X, blue) :- is(X, round).",
        "description": "Round people are blue."
    },
    {
        "id": 3747,
        "statement": "is(X, big) :- is(X, cold), is(X, quiet).",
        "description": "All cold, quiet things are big."
    },
    {
        "id": 3748,
        "statement": "is(X, rough) :- is(X, smart), is(X, cold).",
        "description": "Smart, cold things are rough."
    },
    {
        "id": 3749,
        "statement": "is(X, smart) :- is(X, big), is(X, cold).",
        "description": "If something is big and cold then it is smart."
    },
    {
        "id": 3750,
        "statement": "is(erin, cold) :- is(erin, rough).",
        "description": "If Erin is rough then Erin is cold."
    },
    {
        "id": 3751,
        "statement": "is(X, smart) :- is(X, big), is(X, red).",
        "description": "If something is big and red then it is smart."
    },
    {
        "id": 3752,
        "statement": "is(X, red) :- is(X, big).",
        "description": "Big things are red."
    },
    {
        "id": 3753,
        "statement": "is(X, green) :- is(X, kind), is(X, white).",
        "description": "All kind, white things are green."
    },
    {
        "id": 3754,
        "statement": "is(X, blue) :- is(X, green), is(X, rough).",
        "description": "Green, rough things are blue."
    },
    {
        "id": 3755,
        "statement": "is(X, nice) :- is(X, kind), is(X, blue).",
        "description": "All kind, blue things are nice."
    },
    {
        "id": 3756,
        "statement": "is(gary, green) :- is(gary, rough).",
        "description": "If Gary is rough then Gary is green."
    },
    {
        "id": 3757,
        "statement": "is(X, rough) :- is(X, green), is(X, white).",
        "description": "If something is green and white then it is rough."
    },
    {
        "id": 3758,
        "statement": "is(charlie, green) :- is(charlie, rough).",
        "description": "If Charlie is rough then Charlie is green."
    },
    {
        "id": 3759,
        "statement": "eats(squirrel, cow).",
        "description": "The squirrel eats the cow."
    },
    {
        "id": 3760,
        "statement": "eats(X, dog) :- sees(X, squirrel).",
        "description": "If something sees the squirrel then it eats the dog."
    },
    {
        "id": 3761,
        "statement": "is(bear, rough) :- sees(X, bear).",
        "description": "If something sees the bear then the bear is rough."
    },
    {
        "id": 3762,
        "statement": "sees(cow, dog) :- likes(cow, dog).",
        "description": "If the cow likes the dog then the cow sees the dog."
    },
    {
        "id": 3763,
        "statement": "is(bear, kind) :- likes(X, bear).",
        "description": "If something likes the bear then the bear is kind."
    },
    {
        "id": 3764,
        "statement": "sees(bear, cow) :- eats(cow, bear).",
        "description": "If the cow eats the bear then the bear sees the cow."
    },
    {
        "id": 3765,
        "statement": "eats(X, dog) :- likes(X, bear), eats(X, bear).",
        "description": "If something likes the bear and it eats the bear then it eats the dog."
    },
    {
        "id": 3766,
        "statement": "likes(X, bear) :- eats(X, bear), eats(bear, cow).",
        "description": "If something eats the bear and the bear eats the cow then it likes the bear."
    },
    {
        "id": 3767,
        "statement": "is(X, red) :- is(X, rough), is(X, young).",
        "description": "If something is rough and young then it is red."
    },
    {
        "id": 3768,
        "statement": "is(X, cold) :- is(X, rough).",
        "description": "All rough things are cold."
    },
    {
        "id": 3769,
        "statement": "is(X, smart) :- is(X, green).",
        "description": "All green things are smart."
    },
    {
        "id": 3770,
        "statement": "is(erin, green) :- is(erin, young).",
        "description": "If Erin is young then Erin is green."
    },
    {
        "id": 3771,
        "statement": "is(X, kind) :- is(X, red), is(X, green).",
        "description": "All red, green things are kind."
    },
    {
        "id": 3772,
        "statement": "is(gary, cold) :- is(gary, young).",
        "description": "If Gary is young then Gary is cold."
    },
    {
        "id": 3773,
        "statement": "likes(mouse, bald_eagle) :- visits(X, mouse), is(X, kind).",
        "description": "If something visits the mouse and it is kind then the mouse likes the bald eagle."
    },
    {
        "id": 3774,
        "statement": "is(X, young) :- is(X, kind), chases(X, cow).",
        "description": "If something is kind and it chases the cow then it is young."
    },
    {
        "id": 3775,
        "statement": "visits(X, cow) :- is(X, green), is(X, round).",
        "description": "If something is green and round then it visits the cow."
    },
    {
        "id": 3776,
        "statement": "chases(X, cow) :- is(X, kind).",
        "description": "If something is kind then it chases the cow."
    },
    {
        "id": 3777,
        "statement": "is(cow, green) :- is(X, kind), visits(X, cow).",
        "description": "If something is kind and it visits the cow then the cow is green."
    },
    {
        "id": 3778,
        "statement": "sees(X, cow) :- is(X, green).",
        "description": "If someone is green then they see the cow."
    },
    {
        "id": 3779,
        "statement": "is(dog, green) :- sees(dog, bald_eagle).",
        "description": "If the dog sees the bald eagle then the dog is green."
    },
    {
        "id": 3780,
        "statement": "sees(dog, bald_eagle) :- likes(X, dog), is(X, nice).",
        "description": "If someone likes the dog and they are nice then the dog sees the bald eagle."
    },
    {
        "id": 3781,
        "statement": "likes(X, bald_eagle) :- sees(X, dog).",
        "description": "If someone sees the dog then they like the bald eagle."
    },
    {
        "id": 3782,
        "statement": "is(tiger, green) :- chases(X, tiger).",
        "description": "If someone chases the tiger then the tiger is green."
    },
    {
        "id": 3783,
        "statement": "is(X, nice) :- is(X, rough).",
        "description": "All rough people are nice."
    },
    {
        "id": 3784,
        "statement": "chases(X, tiger) :- likes(X, dog), is(X, green).",
        "description": "If someone likes the dog and they are green then they chase the tiger."
    },
    {
        "id": 3785,
        "statement": "is(tiger, rough) :- chases(X, tiger).",
        "description": "If someone chases the tiger then the tiger is rough."
    },
    {
        "id": 3786,
        "statement": "likes(X, cow) :- is(X, rough), not is(X, nice).",
        "description": "If someone is rough and not nice then they like the cow."
    },
    {
        "id": 3787,
        "statement": "is(dave, green) :- is(dave, nice).",
        "description": "If Dave is nice then Dave is green."
    },
    {
        "id": 3788,
        "statement": "is(X, nice) :- is(X, green), is(X, quiet).",
        "description": "If something is green and quiet then it is nice."
    },
    {
        "id": 3789,
        "statement": "is(X, round) :- is(X, rough), is(X, big).",
        "description": "Rough, big things are round."
    },
    {
        "id": 3790,
        "statement": "is(X, rough) :- is(X, quiet), is(X, nice).",
        "description": "Quiet, nice things are rough."
    },
    {
        "id": 3791,
        "statement": "is(X, green) :- is(X, quiet), is(X, smart).",
        "description": "All quiet, smart things are green."
    },
    {
        "id": 3792,
        "statement": "is(X, nice) :- is(X, quiet), is(X, smart).",
        "description": "Quiet, smart things are nice."
    },
    {
        "id": 3793,
        "statement": "is(X, kind) :- visits(X, rabbit).",
        "description": "If someone visits the rabbit then they are kind."
    },
    {
        "id": 3794,
        "statement": "eats(rabbit, cow) :- is(X, kind), visits(X, rabbit).",
        "description": "If someone is kind and they visit the rabbit then the rabbit eats the cow."
    },
    {
        "id": 3795,
        "statement": "visits(X, rabbit) :- eats(X, cow), sees(cow, rabbit).",
        "description": "If someone eats the cow and the cow sees the rabbit then they visit the rabbit."
    },
    {
        "id": 3796,
        "statement": "eats(tiger, cow) :- visits(tiger, rabbit).",
        "description": "If the tiger visits the rabbit then the tiger eats the cow."
    },
    {
        "id": 3797,
        "statement": "is(bear, red) :- eats(bear, tiger).",
        "description": "If the bear eats the tiger then the bear is red."
    },
    {
        "id": 3798,
        "statement": "sees(X, cow) :- eats(X, cow), not is(X, kind).",
        "description": "If someone eats the cow and they are not kind then they see the cow."
    },
    {
        "id": 3799,
        "statement": "visits(rabbit, cow) :- visits(X, rabbit), sees(rabbit, cow).",
        "description": "If someone visits the rabbit and the rabbit sees the cow then the rabbit visits the cow."
    },
    {
        "id": 3800,
        "statement": "likes(X, tiger) :- is(X, nice).",
        "description": "If something is nice then it likes the tiger."
    },
    {
        "id": 3801,
        "statement": "is(tiger, big) :- is(tiger, green).",
        "description": "If the tiger is green then the tiger is big."
    },
    {
        "id": 3802,
        "statement": "is(X, nice) :- likes(X, cow), not sees(cow, mouse).",
        "description": "If something likes the cow and the cow does not see the mouse then it is nice."
    },
    {
        "id": 3803,
        "statement": "is(bear, big) :- is(bear, round), is(bear, kind).",
        "description": "If the bear is round and the bear is kind then the bear is big."
    },
    {
        "id": 3804,
        "statement": "likes(X, mouse) :- sees(X, bear).",
        "description": "If something sees the bear then it likes the mouse."
    },
    {
        "id": 3805,
        "statement": "sees(X, bear) :- likes(X, tiger).",
        "description": "If something likes the tiger then it sees the bear."
    },
    {
        "id": 3806,
        "statement": "visits(X, bear) :- likes(X, mouse), likes(mouse, cow).",
        "description": "If something likes the mouse and the mouse likes the cow then it visits the bear."
    },
    {
        "id": 3807,
        "statement": "likes(tiger, mouse) :- not is(bear, round), not likes(bear, tiger).",
        "description": "If the bear is not round and the bear does not like the tiger then the tiger likes the mouse."
    },
    {
        "id": 3808,
        "statement": "is(cow, nice) :- likes(X, cat), needs(X, cow).",
        "description": "If someone likes the cat and they need the cow then the cow is nice."
    },
    {
        "id": 3809,
        "statement": "is(mouse, green) :- likes(X, mouse).",
        "description": "If someone likes the mouse then the mouse is green."
    },
    {
        "id": 3810,
        "statement": "likes(X, mouse) :- is(X, cold).",
        "description": "If someone is cold then they like the mouse."
    },
    {
        "id": 3811,
        "statement": "needs(cat, mouse) :- sees(X, cat).",
        "description": "If someone sees the cat then the cat needs the mouse."
    },
    {
        "id": 3812,
        "statement": "is(X, cold) :- likes(X, mouse), sees(X, cow).",
        "description": "If someone likes the mouse and they see the cow then they are cold."
    },
    {
        "id": 3813,
        "statement": "is(anne, kind) :- is(anne, rough), is(anne, smart).",
        "description": "If Anne is rough and Anne is smart then Anne is kind."
    },
    {
        "id": 3814,
        "statement": "is(X, rough) :- is(X, quiet).",
        "description": "Quiet people are rough."
    },
    {
        "id": 3815,
        "statement": "is(X, furry) :- is(X, smart).",
        "description": "Smart people are furry."
    },
    {
        "id": 3816,
        "statement": "is(X, furry) :- is(X, blue), is(X, kind).",
        "description": "If someone is blue and kind then they are furry."
    },
    {
        "id": 3817,
        "statement": "is(X, big) :- is(X, furry), is(X, smart).",
        "description": "If someone is furry and smart then they are big."
    },
    {
        "id": 3818,
        "statement": "is(X, quiet) :- is(X, kind), is(X, furry).",
        "description": "If someone is kind and furry then they are quiet."
    },
    {
        "id": 3819,
        "statement": "is(X, blue) :- sees(X, cat).",
        "description": "If someone sees the cat then they are blue."
    },
    {
        "id": 3820,
        "statement": "is(X, blue) :- is(X, round), needs(X, cat).",
        "description": "If someone is round and they need the cat then they are blue."
    },
    {
        "id": 3821,
        "statement": "needs(X, cat) :- is(X, green).",
        "description": "If someone is green then they need the cat."
    },
    {
        "id": 3822,
        "statement": "needs(X, bear) :- is(X, round).",
        "description": "If someone is round then they need the bear."
    },
    {
        "id": 3823,
        "statement": "is(X, green) :- needs(X, bear).",
        "description": "If someone needs the bear then they are green."
    },
    {
        "id": 3824,
        "statement": "is(bear, young) :- is(X, green), eats(X, bear).",
        "description": "If someone is green and they eat the bear then the bear is young."
    },
    {
        "id": 3825,
        "statement": "is(X, round) :- sees(X, cat).",
        "description": "If someone sees the cat then they are round."
    },
    {
        "id": 3826,
        "statement": "is(X, round) :- needs(X, lion), not sees(lion, bear).",
        "description": "If someone needs the lion and the lion does not see the bear then they are round."
    },
    {
        "id": 3827,
        "statement": "is(X, quiet) :- is(X, kind).",
        "description": "Kind things are quiet."
    },
    {
        "id": 3828,
        "statement": "is(dave, kind) :- is(dave, green), not is(dave, nice).",
        "description": "If Dave is green and Dave is not nice then Dave is kind."
    },
    {
        "id": 3829,
        "statement": "is(harry, white) :- is(harry, kind), is(harry, cold).",
        "description": "If Harry is kind and Harry is cold then Harry is white."
    },
    {
        "id": 3830,
        "statement": "is(X, green) :- is(X, cold), is(X, quiet).",
        "description": "All cold, quiet things are green."
    },
    {
        "id": 3831,
        "statement": "is(X, green) :- is(X, nice).",
        "description": "If something is nice then it is green."
    },
    {
        "id": 3832,
        "statement": "is(X, cold) :- is(X, round), is(X, white).",
        "description": "Round, white things are cold."
    },
    {
        "id": 3833,
        "statement": "is(X, round) :- is(X, cold), is(X, nice).",
        "description": "All cold, nice things are round."
    },
    {
        "id": 3834,
        "statement": "chases(mouse, cat).",
        "description": "The mouse chases the cat."
    },
    {
        "id": 3835,
        "statement": "is(mouse, kind) :- eats(X, cow), not eats(X, mouse).",
        "description": "If something eats the cow and it does not eat the mouse then the mouse is kind."
    },
    {
        "id": 3836,
        "statement": "is(cow, nice) :- needs(X, cow).",
        "description": "If something needs the cow then the cow is nice."
    },
    {
        "id": 3837,
        "statement": "eats(X, cat) :- is(X, green).",
        "description": "If something is green then it eats the cat."
    },
    {
        "id": 3838,
        "statement": "eats(X, cow) :- is(X, nice).",
        "description": "If something is nice then it eats the cow."
    },
    {
        "id": 3839,
        "statement": "is(X, quiet) :- is(X, young), is(X, round).",
        "description": "If someone is young and round then they are quiet."
    },
    {
        "id": 3840,
        "statement": "is(X, kind) :- is(X, young), is(X, cold).",
        "description": "If someone is young and cold then they are kind."
    },
    {
        "id": 3841,
        "statement": "is(X, kind) :- is(X, young), is(X, green).",
        "description": "If someone is young and green then they are kind."
    },
    {
        "id": 3842,
        "statement": "is(X, quiet) :- is(X, kind), is(X, cold).",
        "description": "All kind, cold people are quiet."
    },
    {
        "id": 3843,
        "statement": "is(X, cold) :- is(X, kind), is(X, green).",
        "description": "All kind, green people are cold."
    },
    {
        "id": 3844,
        "statement": "is(X, cold) :- eats(X, bear).",
        "description": "If someone eats the bear then they are cold."
    },
    {
        "id": 3845,
        "statement": "likes(tiger, bald_eagle) :- needs(tiger, bald_eagle).",
        "description": "If the tiger needs the bald eagle then the tiger likes the bald eagle."
    },
    {
        "id": 3846,
        "statement": "eats(X, bear) :- eats(X, tiger), is(tiger, round).",
        "description": "If someone eats the tiger and the tiger is round then they eat the bear."
    },
    {
        "id": 3847,
        "statement": "likes(X, tiger) :- is(X, green).",
        "description": "If someone is green then they like the tiger."
    },
    {
        "id": 3848,
        "statement": "chases(X, bald_eagle) :- is(X, red).",
        "description": "If something is red then it chases the bald eagle."
    },
    {
        "id": 3849,
        "statement": "sees(squirrel, lion) :- chases(bald_eagle, lion), chases(bald_eagle, squirrel).",
        "description": "If the bald eagle chases the lion and the bald eagle chases the squirrel then the squirrel sees the lion."
    },
    {
        "id": 3850,
        "statement": "sees(X, bald_eagle) :- chases(X, dog).",
        "description": "If something chases the dog then it sees the bald eagle."
    },
    {
        "id": 3851,
        "statement": "chases(bald_eagle, lion) :- needs(X, bald_eagle).",
        "description": "If something needs the bald eagle then the bald eagle chases the lion."
    },
    {
        "id": 3852,
        "statement": "chases(X, squirrel) :- chases(X, bald_eagle), sees(bald_eagle, dog).",
        "description": "If something chases the bald eagle and the bald eagle sees the dog then it chases the squirrel."
    },
    {
        "id": 3853,
        "statement": "chases(dog, bald_eagle) :- chases(X, dog).",
        "description": "If something chases the dog then the dog chases the bald eagle."
    },
    {
        "id": 3854,
        "statement": "sees(squirrel, dog) :- sees(X, squirrel).",
        "description": "If something sees the squirrel then the squirrel sees the dog."
    },
    {
        "id": 3855,
        "statement": "sees(X, squirrel) :- sees(X, lion).",
        "description": "If something sees the lion then it sees the squirrel."
    },
    {
        "id": 3856,
        "statement": "sees(X, lion) :- sees(X, dog).",
        "description": "If something sees the dog then it sees the lion."
    },
    {
        "id": 3857,
        "statement": "is(X, white) :- is(X, round), is(X, rough).",
        "description": "If something is round and rough then it is white."
    },
    {
        "id": 3858,
        "statement": "is(X, green) :- is(X, round).",
        "description": "Round things are green."
    },
    {
        "id": 3859,
        "statement": "is(X, blue) :- is(X, nice), is(X, round).",
        "description": "If something is nice and round then it is blue."
    },
    {
        "id": 3860,
        "statement": "is(bob, nice) :- is(bob, white), is(bob, rough).",
        "description": "If Bob is white and Bob is rough then Bob is nice."
    },
    {
        "id": 3861,
        "statement": "is(X, nice) :- is(X, furry), is(X, green).",
        "description": "If something is furry and green then it is nice."
    },
    {
        "id": 3862,
        "statement": "is(X, blue) :- is(X, furry), is(X, nice).",
        "description": "If something is furry and nice then it is blue."
    },
    {
        "id": 3863,
        "statement": "is(lion, young) :- visits(X, lion), is(X, rough).",
        "description": "If something visits the lion and it is rough then the lion is young."
    },
    {
        "id": 3864,
        "statement": "sees(X, lion) :- is(X, kind).",
        "description": "If something is kind then it sees the lion."
    },
    {
        "id": 3865,
        "statement": "is(X, rough) :- eats(X, mouse).",
        "description": "If something eats the mouse then it is rough."
    },
    {
        "id": 3866,
        "statement": "eats(squirrel, dog) :- sees(X, squirrel), visits(X, lion).",
        "description": "If something sees the squirrel and it visits the lion then the squirrel eats the dog."
    },
    {
        "id": 3867,
        "statement": "eats(lion, squirrel) :- is(lion, big), eats(lion, mouse).",
        "description": "If the lion is big and the lion eats the mouse then the lion eats the squirrel."
    },
    {
        "id": 3868,
        "statement": "eats(X, mouse) :- is(X, young).",
        "description": "If something is young then it eats the mouse."
    },
    {
        "id": 3869,
        "statement": "eats(dog, squirrel) :- visits(X, dog), visits(dog, lion).",
        "description": "If something visits the dog and the dog visits the lion then the dog eats the squirrel."
    },
    {
        "id": 3870,
        "statement": "is(mouse, big) :- chases(X, mouse), not chases(X, bald_eagle).",
        "description": "If something chases the mouse and it does not chase the bald eagle then the mouse is big."
    },
    {
        "id": 3871,
        "statement": "needs(bald_eagle, lion) :- is(X, nice), not sees(X, bald_eagle).",
        "description": "If something is nice and it does not see the bald eagle then the bald eagle needs the lion."
    },
    {
        "id": 3872,
        "statement": "chases(X, mouse) :- chases(X, lion), needs(X, bald_eagle).",
        "description": "If something chases the lion and it needs the bald eagle then it chases the mouse."
    },
    {
        "id": 3873,
        "statement": "chases(X, lion) :- is(X, red).",
        "description": "If something is red then it chases the lion."
    },
    {
        "id": 3874,
        "statement": "sees(lion, mouse) :- chases(lion, bald_eagle), sees(bald_eagle, rabbit).",
        "description": "If the lion chases the bald eagle and the bald eagle sees the rabbit then the lion sees the mouse."
    },
    {
        "id": 3875,
        "statement": "sees(X, mouse) :- is(X, round).",
        "description": "If something is round then it sees the mouse."
    },
    {
        "id": 3876,
        "statement": "needs(X, rabbit) :- is(X, big), not chases(X, lion).",
        "description": "If something is big and it does not chase the lion then it needs the rabbit."
    },
    {
        "id": 3877,
        "statement": "sees(X, tiger) :- sees(X, squirrel), is(squirrel, kind).",
        "description": "If someone sees the squirrel and the squirrel is kind then they see the tiger."
    },
    {
        "id": 3878,
        "statement": "is(X, round) :- sees(X, tiger).",
        "description": "If someone sees the tiger then they are round."
    },
    {
        "id": 3879,
        "statement": "sees(squirrel, bald_eagle) :- visits(X, tiger), visits(X, squirrel).",
        "description": "If someone visits the tiger and they visit the squirrel then the squirrel sees the bald eagle."
    },
    {
        "id": 3880,
        "statement": "is(X, round) :- is(X, big).",
        "description": "All big people are round."
    },
    {
        "id": 3881,
        "statement": "sees(squirrel, bald_eagle) :- sees(X, squirrel), is(X, round).",
        "description": "If someone sees the squirrel and they are round then the squirrel sees the bald eagle."
    },
    {
        "id": 3882,
        "statement": "visits(X, tiger) :- is(X, round).",
        "description": "If someone is round then they visit the tiger."
    },
    {
        "id": 3883,
        "statement": "is(X, kind) :- sees(X, squirrel).",
        "description": "If someone sees the squirrel then they are kind."
    },
    {
        "id": 3884,
        "statement": "sees(rabbit, bald_eagle) :- sees(X, rabbit), is(X, blue).",
        "description": "If someone sees the rabbit and they are blue then the rabbit sees the bald eagle."
    },
    {
        "id": 3885,
        "statement": "sees(X, squirrel) :- is(X, red), sees(X, bald_eagle).",
        "description": "If someone is red and they see the bald eagle then they see the squirrel."
    },
    {
        "id": 3886,
        "statement": "is(X, red) :- is(X, cold), is(X, big).",
        "description": "If someone is cold and big then they are red."
    },
    {
        "id": 3887,
        "statement": "is(X, big) :- is(X, blue), is(X, cold).",
        "description": "If someone is blue and cold then they are big."
    },
    {
        "id": 3888,
        "statement": "is(X, blue) :- is(X, round), is(X, green).",
        "description": "If someone is round and green then they are blue."
    },
    {
        "id": 3889,
        "statement": "is(X, cold) :- is(X, white), is(X, blue).",
        "description": "All white, blue people are cold."
    },
    {
        "id": 3890,
        "statement": "is(X, round) :- is(X, blue).",
        "description": "Blue people are round."
    },
    {
        "id": 3891,
        "statement": "is(X, young) :- is(X, green), is(X, cold).",
        "description": "All green, cold people are young."
    },
    {
        "id": 3892,
        "statement": "is(X, young) :- is(X, furry).",
        "description": "All furry people are young."
    },
    {
        "id": 3893,
        "statement": "is(X, young) :- is(X, nice), not is(X, rough).",
        "description": "If someone is nice and not rough then they are young."
    },
    {
        "id": 3894,
        "statement": "is(X, furry) :- is(X, green), is(X, rough).",
        "description": "If someone is green and rough then they are furry."
    },
    {
        "id": 3895,
        "statement": "is(X, green) :- is(X, rough).",
        "description": "Rough people are green."
    },
    {
        "id": 3896,
        "statement": "is(X, round) :- is(X, young).",
        "description": "All young people are round."
    },
    {
        "id": 3897,
        "statement": "visits(X, tiger) :- is(X, round), likes(X, tiger).",
        "description": "If someone is round and they like the tiger then they visit the tiger."
    },
    {
        "id": 3898,
        "statement": "is(cow, cold) :- needs(X, cow).",
        "description": "If someone needs the cow then the cow is cold."
    },
    {
        "id": 3899,
        "statement": "needs(X, squirrel) :- visits(X, tiger), is(X, blue).",
        "description": "If someone visits the tiger and they are blue then they need the squirrel."
    },
    {
        "id": 3900,
        "statement": "needs(X, cow) :- visits(X, mouse).",
        "description": "If someone visits the mouse then they need the cow."
    },
    {
        "id": 3901,
        "statement": "likes(X, tiger) :- is(X, round).",
        "description": "If someone is round then they like the tiger."
    },
    {
        "id": 3902,
        "statement": "needs(X, squirrel) :- likes(X, mouse).",
        "description": "If someone likes the mouse then they need the squirrel."
    },
    {
        "id": 3903,
        "statement": "likes(X, cow) :- is(X, round).",
        "description": "If someone is round then they like the cow."
    },
    {
        "id": 3904,
        "statement": "needs(mouse, tiger) :- visits(X, mouse).",
        "description": "If someone visits the mouse then the mouse needs the tiger."
    },
    {
        "id": 3905,
        "statement": "is(X, round) :- needs(X, cow), visits(X, cow).",
        "description": "If someone needs the cow and they visit the cow then they are round."
    },
    {
        "id": 3906,
        "statement": "is(erin, quiet) :- is(erin, nice), is(erin, rough).",
        "description": "If Erin is nice and Erin is rough then Erin is quiet."
    },
    {
        "id": 3907,
        "statement": "is(X, quiet) :- is(X, young), is(X, red).",
        "description": "If something is young and red then it is quiet."
    },
    {
        "id": 3908,
        "statement": "is(bob, rough) :- is(bob, red), is(bob, big).",
        "description": "If Bob is red and Bob is big then Bob is rough."
    },
    {
        "id": 3909,
        "statement": "is(charlie, young) :- is(charlie, smart).",
        "description": "If Charlie is smart then Charlie is young."
    },
    {
        "id": 3910,
        "statement": "is(X, white) :- is(X, smart), is(X, kind).",
        "description": "If someone is smart and kind then they are white."
    },
    {
        "id": 3911,
        "statement": "is(dave, green) :- is(dave, kind), is(dave, smart).",
        "description": "If Dave is kind and Dave is smart then Dave is green."
    },
    {
        "id": 3912,
        "statement": "is(X, kind) :- is(X, young).",
        "description": "Young people are kind."
    },
    {
        "id": 3913,
        "statement": "is(X, furry) :- is(X, kind).",
        "description": "All kind people are furry."
    },
    {
        "id": 3914,
        "statement": "is(X, cold) :- is(X, smart).",
        "description": "Smart people are cold."
    },
    {
        "id": 3915,
        "statement": "is(X, blue) :- is(X, furry).",
        "description": "Furry people are blue."
    },
    {
        "id": 3916,
        "statement": "is(X, furry) :- is(X, cold), is(X, smart).",
        "description": "If someone is cold and smart then they are furry."
    },
    {
        "id": 3917,
        "statement": "is(X, rough) :- is(X, cold), is(X, blue).",
        "description": "If someone is cold and blue then they are rough."
    },
    {
        "id": 3918,
        "statement": "is(X, blue) :- is(X, white).",
        "description": "White people are blue."
    },
    {
        "id": 3919,
        "statement": "visits(lion, bear) :- is(squirrel, round), visits(squirrel, lion).",
        "description": "If the squirrel is round and the squirrel visits the lion then the lion visits the bear."
    },
    {
        "id": 3920,
        "statement": "needs(X, bear) :- visits(X, squirrel), sees(squirrel, bear).",
        "description": "If someone visits the squirrel and the squirrel sees the bear then they need the bear."
    },
    {
        "id": 3921,
        "statement": "visits(cow, squirrel) :- sees(X, cow), sees(cow, lion).",
        "description": "If someone sees the cow and the cow sees the lion then the cow visits the squirrel."
    },
    {
        "id": 3922,
        "statement": "is(squirrel, rough) :- is(squirrel, round), visits(squirrel, cow).",
        "description": "If the squirrel is round and the squirrel visits the cow then the squirrel is rough."
    },
    {
        "id": 3923,
        "statement": "needs(X, lion) :- is(X, blue), is(X, round).",
        "description": "If someone is blue and round then they need the lion."
    },
    {
        "id": 3924,
        "statement": "is(X, red) :- sees(X, lion), needs(lion, squirrel).",
        "description": "If someone sees the lion and the lion needs the squirrel then they are red."
    },
    {
        "id": 3925,
        "statement": "is(lion, blue) :- is(X, red), needs(X, lion).",
        "description": "If someone is red and they need the lion then the lion is blue."
    },
    {
        "id": 3926,
        "statement": "is(X, red) :- sees(X, squirrel), is(X, round).",
        "description": "If someone sees the squirrel and they are round then they are red."
    },
    {
        "id": 3927,
        "statement": "sees(mouse, cat) :- is(X, red), eats(X, mouse).",
        "description": "If something is red and it eats the mouse then the mouse sees the cat."
    },
    {
        "id": 3928,
        "statement": "eats(mouse, cat) :- eats(X, mouse), is(X, red).",
        "description": "If something eats the mouse and it is red then the mouse eats the cat."
    },
    {
        "id": 3929,
        "statement": "needs(X, lion) :- sees(X, mouse).",
        "description": "If something sees the mouse then it needs the lion."
    },
    {
        "id": 3930,
        "statement": "sees(cat, cow) :- sees(X, cat).",
        "description": "If something sees the cat then the cat sees the cow."
    },
    {
        "id": 3931,
        "statement": "sees(cow, mouse) :- sees(X, cow).",
        "description": "If something sees the cow then the cow sees the mouse."
    },
    {
        "id": 3932,
        "statement": "sees(X, cat) :- needs(X, lion).",
        "description": "If something needs the lion then it sees the cat."
    },
    {
        "id": 3933,
        "statement": "is(cat, kind) :- is(lion, round), needs(lion, cat).",
        "description": "If the lion is round and the lion needs the cat then the cat is kind."
    },
    {
        "id": 3934,
        "statement": "sees(X, lion) :- needs(X, cow).",
        "description": "If something needs the cow then it sees the lion."
    },
    {
        "id": 3935,
        "statement": "is(X, big) :- is(X, blue).",
        "description": "If something is blue then it is big."
    },
    {
        "id": 3936,
        "statement": "is(X, green) :- is(X, furry), is(X, rough).",
        "description": "All furry, rough things are green."
    },
    {
        "id": 3937,
        "statement": "is(erin, rough) :- is(erin, furry).",
        "description": "If Erin is furry then Erin is rough."
    },
    {
        "id": 3938,
        "statement": "is(fiona, big) :- is(fiona, quiet), is(fiona, green).",
        "description": "If Fiona is quiet and Fiona is green then Fiona is big."
    },
    {
        "id": 3939,
        "statement": "is(X, young) :- is(X, blue).",
        "description": "If someone is blue then they are young."
    },
    {
        "id": 3940,
        "statement": "needs(X, cat) :- chases(X, rabbit).",
        "description": "If someone chases the rabbit then they need the cat."
    },
    {
        "id": 3941,
        "statement": "needs(X, rabbit) :- visits(X, cat), is(X, blue).",
        "description": "If someone visits the cat and they are blue then they need the rabbit."
    },
    {
        "id": 3942,
        "statement": "chases(X, cat) :- needs(X, squirrel), chases(squirrel, rabbit).",
        "description": "If someone needs the squirrel and the squirrel chases the rabbit then they chase the cat."
    },
    {
        "id": 3943,
        "statement": "is(X, young) :- chases(X, squirrel), chases(squirrel, rabbit).",
        "description": "If someone chases the squirrel and the squirrel chases the rabbit then they are young."
    },
    {
        "id": 3944,
        "statement": "is(X, young) :- is(X, green).",
        "description": "All green people are young."
    },
    {
        "id": 3945,
        "statement": "is(cat, blue) :- visits(cat, squirrel), needs(squirrel, cat).",
        "description": "If the cat visits the squirrel and the squirrel needs the cat then the cat is blue."
    },
    {
        "id": 3946,
        "statement": "chases(X, rabbit) :- is(X, green).",
        "description": "If someone is green then they chase the rabbit."
    },
    {
        "id": 3947,
        "statement": "is(X, green) :- is(X, blue), visits(X, squirrel).",
        "description": "If someone is blue and they visit the squirrel then they are green."
    },
    {
        "id": 3948,
        "statement": "likes(X, dog) :- is(X, rough), visits(X, dog).",
        "description": "If someone is rough and they visit the dog then they like the dog."
    },
    {
        "id": 3949,
        "statement": "sees(dog, cow) :- likes(X, dog), likes(dog, cow).",
        "description": "If someone likes the dog and the dog likes the cow then the dog sees the cow."
    },
    {
        "id": 3950,
        "statement": "visits(X, mouse) :- visits(X, dog).",
        "description": "If someone visits the dog then they visit the mouse."
    },
    {
        "id": 3951,
        "statement": "likes(X, dog) :- likes(X, cow), visits(X, mouse).",
        "description": "If someone likes the cow and they visit the mouse then they like the dog."
    },
    {
        "id": 3952,
        "statement": "is(X, blue) :- likes(X, dog), visits(X, cow).",
        "description": "If someone likes the dog and they visit the cow then they are blue."
    },
    {
        "id": 3953,
        "statement": "is(mouse, young) :- sees(X, mouse).",
        "description": "If someone sees the mouse then the mouse is young."
    },
    {
        "id": 3954,
        "statement": "visits(X, dog) :- sees(X, cow).",
        "description": "If someone sees the cow then they visit the dog."
    },
    {
        "id": 3955,
        "statement": "chases(X, tiger) :- needs(X, cat).",
        "description": "If something needs the cat then it chases the tiger."
    },
    {
        "id": 3956,
        "statement": "eats(squirrel, cat) :- eats(X, bald_eagle), needs(bald_eagle, squirrel).",
        "description": "If something eats the bald eagle and the bald eagle needs the squirrel then the squirrel eats the cat."
    },
    {
        "id": 3957,
        "statement": "eats(X, squirrel) :- eats(X, cat).",
        "description": "If something eats the cat then it eats the squirrel."
    },
    {
        "id": 3958,
        "statement": "is(bald_eagle, round) :- needs(X, bald_eagle), is(X, nice).",
        "description": "If something needs the bald eagle and it is nice then the bald eagle is round."
    },
    {
        "id": 3959,
        "statement": "eats(tiger, bald_eagle) :- chases(X, tiger), needs(X, tiger).",
        "description": "If something chases the tiger and it needs the tiger then the tiger eats the bald eagle."
    },
    {
        "id": 3960,
        "statement": "needs(tiger, bald_eagle) :- needs(X, tiger), eats(X, tiger).",
        "description": "If something needs the tiger and it eats the tiger then the tiger needs the bald eagle."
    },
    {
        "id": 3961,
        "statement": "needs(tiger, cat) :- needs(X, tiger), eats(X, squirrel).",
        "description": "If something needs the tiger and it eats the squirrel then the tiger needs the cat."
    },
    {
        "id": 3962,
        "statement": "needs(X, tiger) :- chases(X, tiger).",
        "description": "If something chases the tiger then it needs the tiger."
    },
    {
        "id": 3963,
        "statement": "eats(squirrel, tiger) :- chases(squirrel, cat), eats(squirrel, cat).",
        "description": "If the squirrel chases the cat and the squirrel eats the cat then the squirrel eats the tiger."
    },
    {
        "id": 3964,
        "statement": "is(X, furry) :- is(X, kind).",
        "description": "If someone is kind then they are furry."
    },
    {
        "id": 3965,
        "statement": "is(X, furry) :- is(X, nice), is(X, kind).",
        "description": "Nice, kind people are furry."
    },
    {
        "id": 3966,
        "statement": "is(bob, round) :- is(bob, nice).",
        "description": "If Bob is nice then Bob is round."
    },
    {
        "id": 3967,
        "statement": "is(fiona, round) :- is(fiona, smart), is(fiona, kind).",
        "description": "If Fiona is smart and Fiona is kind then Fiona is round."
    },
    {
        "id": 3968,
        "statement": "is(X, blue) :- is(X, furry).",
        "description": "If someone is furry then they are blue."
    },
    {
        "id": 3969,
        "statement": "is(X, nice) :- is(X, round), is(X, smart).",
        "description": "If someone is round and smart then they are nice."
    },
    {
        "id": 3970,
        "statement": "is(X, smart) :- is(X, red), is(X, green).",
        "description": "All red, green things are smart."
    },
    {
        "id": 3971,
        "statement": "is(X, red) :- is(X, smart), is(X, blue).",
        "description": "Smart, blue things are red."
    },
    {
        "id": 3972,
        "statement": "is(erin, smart) :- is(erin, nice).",
        "description": "If Erin is nice then Erin is smart."
    },
    {
        "id": 3973,
        "statement": "is(X, red) :- is(X, green), is(X, blue).",
        "description": "All green, blue things are red."
    },
    {
        "id": 3974,
        "statement": "is(X, nice) :- is(X, round).",
        "description": "All round things are nice."
    },
    {
        "id": 3975,
        "statement": "is(X, nice) :- is(X, round), is(X, blue).",
        "description": "If someone is round and blue then they are nice."
    },
    {
        "id": 3976,
        "statement": "is(erin, round) :- is(erin, green), is(erin, young).",
        "description": "If Erin is green and Erin is young then Erin is round."
    },
    {
        "id": 3977,
        "statement": "is(X, blue) :- is(X, nice), is(X, green).",
        "description": "If someone is nice and green then they are blue."
    },
    {
        "id": 3978,
        "statement": "is(X, big) :- is(X, smart).",
        "description": "All smart people are big."
    },
    {
        "id": 3979,
        "statement": "is(X, big) :- is(X, smart), not is(X, young).",
        "description": "If someone is smart and not young then they are big."
    },
    {
        "id": 3980,
        "statement": "is(X, big) :- is(X, blue), is(X, round).",
        "description": "Blue, round people are big."
    },
    {
        "id": 3981,
        "statement": "is(X, rough) :- is(X, nice), is(X, cold).",
        "description": "Nice, cold people are rough."
    },
    {
        "id": 3982,
        "statement": "is(X, big) :- is(X, kind), is(X, nice).",
        "description": "Kind, nice people are big."
    },
    {
        "id": 3983,
        "statement": "is(X, furry) :- is(X, nice).",
        "description": "Nice people are furry."
    },
    {
        "id": 3984,
        "statement": "is(X, kind) :- is(X, nice).",
        "description": "All nice people are kind."
    },
    {
        "id": 3985,
        "statement": "is(X, cold) :- is(X, furry), is(X, big).",
        "description": "Furry, big people are cold."
    },
    {
        "id": 3986,
        "statement": "is(X, cold) :- is(X, furry).",
        "description": "If someone is furry then they are cold."
    },
    {
        "id": 3987,
        "statement": "likes(bald_eagle, squirrel) :- visits(cow, bald_eagle).",
        "description": "If the cow visits the bald eagle then the bald eagle likes the squirrel."
    },
    {
        "id": 3988,
        "statement": "visits(X, bald_eagle) :- is(X, rough).",
        "description": "If someone is rough then they visit the bald eagle."
    },
    {
        "id": 3989,
        "statement": "likes(X, cow) :- sees(X, tiger), is(tiger, green).",
        "description": "If someone sees the tiger and the tiger is green then they like the cow."
    },
    {
        "id": 3990,
        "statement": "is(tiger, blue) :- visits(X, tiger), is(tiger, green).",
        "description": "If someone visits the tiger and the tiger is green then the tiger is blue."
    },
    {
        "id": 3991,
        "statement": "visits(cow, squirrel) :- likes(X, cow).",
        "description": "If someone likes the cow then the cow visits the squirrel."
    },
    {
        "id": 3992,
        "statement": "is(tiger, blue) :- sees(squirrel, bald_eagle), visits(squirrel, tiger).",
        "description": "If the squirrel sees the bald eagle and the squirrel visits the tiger then the tiger is blue."
    },
    {
        "id": 3993,
        "statement": "likes(bald_eagle, cow) :- likes(X, bald_eagle).",
        "description": "If someone likes the bald eagle then the bald eagle likes the cow."
    },
    {
        "id": 3994,
        "statement": "is(X, rough) :- visits(X, squirrel).",
        "description": "If someone visits the squirrel then they are rough."
    },
    {
        "id": 3995,
        "statement": "is(X, white) :- is(X, quiet), is(X, blue).",
        "description": "Quiet, blue things are white."
    },
    {
        "id": 3996,
        "statement": "is(X, red) :- is(X, white), is(X, big).",
        "description": "If something is white and big then it is red."
    },
    {
        "id": 3997,
        "statement": "is(X, cold) :- is(X, blue).",
        "description": "All blue things are cold."
    },
    {
        "id": 3998,
        "statement": "is(X, smart) :- is(X, white).",
        "description": "White things are smart."
    },
    {
        "id": 3999,
        "statement": "is(X, blue) :- is(X, cold).",
        "description": "All cold things are blue."
    },
    {
        "id": 4000,
        "statement": "is(X, big) :- is(X, red).",
        "description": "All red things are big."
    },
    {
        "id": 4001,
        "statement": "is(X, smart) :- is(X, cold), is(X, quiet).",
        "description": "All cold, quiet things are smart."
    },
    {
        "id": 4002,
        "statement": "is(X, big) :- is(X, white), is(X, smart).",
        "description": "All white, smart things are big."
    },
    {
        "id": 4003,
        "statement": "is(X, blue) :- is(X, cold).",
        "description": "If something is cold then it is blue."
    },
    {
        "id": 4004,
        "statement": "is(X, furry) :- is(X, kind).",
        "description": "All kind things are furry."
    },
    {
        "id": 4005,
        "statement": "is(X, smart) :- is(X, kind), is(X, blue).",
        "description": "Kind, blue things are smart."
    },
    {
        "id": 4006,
        "statement": "is(harry, cold) :- is(harry, furry), is(harry, smart).",
        "description": "If Harry is furry and Harry is smart then Harry is cold."
    },
    {
        "id": 4007,
        "statement": "is(X, cold) :- is(X, nice), is(X, kind).",
        "description": "All nice, kind things are cold."
    },
    {
        "id": 4008,
        "statement": "is(X, nice) :- is(X, furry).",
        "description": "Furry things are nice."
    },
    {
        "id": 4009,
        "statement": "is(X, rough) :- is(X, cold), is(X, blue).",
        "description": "Cold, blue things are rough."
    },
    {
        "id": 4010,
        "statement": "is(X, rough) :- is(X, blue), is(X, round).",
        "description": "If someone is blue and round then they are rough."
    },
    {
        "id": 4011,
        "statement": "is(X, green) :- is(X, young).",
        "description": "Young people are green."
    },
    {
        "id": 4012,
        "statement": "is(X, rough) :- is(X, blue), is(X, cold).",
        "description": "All blue, cold people are rough."
    },
    {
        "id": 4013,
        "statement": "is(X, blue) :- is(X, furry), is(X, green).",
        "description": "Furry, green people are blue."
    },
    {
        "id": 4014,
        "statement": "is(X, blue) :- is(X, cold), is(X, green).",
        "description": "Cold, green people are blue."
    },
    {
        "id": 4015,
        "statement": "is(X, round) :- is(X, furry), is(X, young).",
        "description": "If someone is furry and young then they are round."
    },
    {
        "id": 4016,
        "statement": "sees(tiger, dog).",
        "description": "The tiger sees the dog."
    },
    {
        "id": 4017,
        "statement": "visits(X, tiger) :- likes(X, mouse), visits(X, dog).",
        "description": "If something likes the mouse and it visits the dog then it visits the tiger."
    },
    {
        "id": 4018,
        "statement": "is(tiger, round) :- sees(mouse, tiger), not sees(rabbit, mouse).",
        "description": "If the mouse sees the tiger and the rabbit does not see the mouse then the tiger is round."
    },
    {
        "id": 4019,
        "statement": "visits(rabbit, tiger) :- likes(X, rabbit).",
        "description": "If something likes the rabbit then the rabbit visits the tiger."
    },
    {
        "id": 4020,
        "statement": "likes(X, rabbit) :- visits(X, dog).",
        "description": "If something visits the dog then it likes the rabbit."
    },
    {
        "id": 4021,
        "statement": "visits(mouse, dog) :- visits(rabbit, mouse).",
        "description": "If the rabbit visits the mouse then the mouse visits the dog."
    },
    {
        "id": 4022,
        "statement": "is(mouse, red) :- visits(X, dog), not visits(X, mouse).",
        "description": "If something visits the dog and it does not visit the mouse then the mouse is red."
    },
    {
        "id": 4023,
        "statement": "visits(X, dog) :- is(X, round).",
        "description": "If something is round then it visits the dog."
    },
    {
        "id": 4024,
        "statement": "visits(X, squirrel) :- needs(X, dog), not chases(X, dog).",
        "description": "If someone needs the dog and they do not chase the dog then they visit the squirrel."
    },
    {
        "id": 4025,
        "statement": "needs(squirrel, dog) :- needs(dog, squirrel).",
        "description": "If the dog needs the squirrel then the squirrel needs the dog."
    },
    {
        "id": 4026,
        "statement": "is(dog, blue) :- chases(X, dog).",
        "description": "If someone chases the dog then the dog is blue."
    },
    {
        "id": 4027,
        "statement": "is(tiger, round) :- visits(tiger, dog).",
        "description": "If the tiger visits the dog then the tiger is round."
    },
    {
        "id": 4028,
        "statement": "visits(dog, tiger) :- needs(X, dog).",
        "description": "If someone needs the dog then the dog visits the tiger."
    },
    {
        "id": 4029,
        "statement": "visits(dog, squirrel) :- visits(dog, tiger), chases(dog, tiger).",
        "description": "If the dog visits the tiger and the dog chases the tiger then the dog visits the squirrel."
    },
    {
        "id": 4030,
        "statement": "is(dog, round) :- chases(X, tiger), not needs(X, dog).",
        "description": "If someone chases the tiger and they do not need the dog then the dog is round."
    },
    {
        "id": 4031,
        "statement": "chases(X, tiger) :- is(X, round), is(X, blue).",
        "description": "If someone is round and blue then they chase the tiger."
    },
    {
        "id": 4032,
        "statement": "is(dave, smart) :- is(dave, green).",
        "description": "If Dave is green then Dave is smart."
    },
    {
        "id": 4033,
        "statement": "is(charlie, rough) :- is(charlie, blue).",
        "description": "If Charlie is blue then Charlie is rough."
    },
    {
        "id": 4034,
        "statement": "is(X, round) :- is(X, rough), is(X, furry).",
        "description": "Rough, furry people are round."
    },
    {
        "id": 4035,
        "statement": "is(X, quiet) :- is(X, rough), is(X, green).",
        "description": "If someone is rough and green then they are quiet."
    },
    {
        "id": 4036,
        "statement": "is(X, furry) :- is(X, smart), is(X, green).",
        "description": "Smart, green people are furry."
    },
    {
        "id": 4037,
        "statement": "is(X, round) :- is(X, quiet), is(X, furry).",
        "description": "All quiet, furry people are round."
    },
    {
        "id": 4038,
        "statement": "is(X, green) :- is(X, rough).",
        "description": "If someone is rough then they are green."
    },
    {
        "id": 4039,
        "statement": "is(X, smart) :- is(X, green), is(X, quiet).",
        "description": "All green, quiet people are smart."
    },
    {
        "id": 4040,
        "statement": "is(X, nice) :- is(X, green), is(X, smart).",
        "description": "If something is green and smart then it is nice."
    },
    {
        "id": 4041,
        "statement": "is(X, smart) :- is(X, furry), is(X, young).",
        "description": "If something is furry and young then it is smart."
    },
    {
        "id": 4042,
        "statement": "is(X, green) :- is(X, smart), is(X, quiet).",
        "description": "Smart, quiet things are green."
    },
    {
        "id": 4043,
        "statement": "is(X, quiet) :- is(X, smart).",
        "description": "If something is smart then it is quiet."
    },
    {
        "id": 4044,
        "statement": "is(bob, smart) :- is(bob, round), is(bob, furry).",
        "description": "If Bob is round and Bob is furry then Bob is smart."
    },
    {
        "id": 4045,
        "statement": "is(X, round) :- is(X, furry).",
        "description": "All furry things are round."
    },
    {
        "id": 4046,
        "statement": "is(harry, round) :- is(harry, green), is(harry, smart).",
        "description": "If Harry is green and Harry is smart then Harry is round."
    },
    {
        "id": 4047,
        "statement": "is(X, smart) :- is(X, quiet), not is(X, green).",
        "description": "If someone is quiet and not green then they are smart."
    },
    {
        "id": 4048,
        "statement": "is(X, smart) :- is(X, white), is(X, green).",
        "description": "If someone is white and green then they are smart."
    },
    {
        "id": 4049,
        "statement": "is(X, furry) :- is(X, big), is(X, kind).",
        "description": "All big, kind people are furry."
    },
    {
        "id": 4050,
        "statement": "is(charlie, big) :- is(charlie, furry), is(charlie, kind).",
        "description": "If Charlie is furry and Charlie is kind then Charlie is big."
    },
    {
        "id": 4051,
        "statement": "is(X, kind) :- is(X, smart), is(X, big).",
        "description": "If someone is smart and big then they are kind."
    },
    {
        "id": 4052,
        "statement": "is(X, quiet) :- is(X, furry), is(X, big).",
        "description": "Furry, big people are quiet."
    },
    {
        "id": 4053,
        "statement": "is(X, red) :- is(X, young).",
        "description": "All young people are red."
    },
    {
        "id": 4054,
        "statement": "is(X, kind) :- is(X, white), is(X, young).",
        "description": "White, young people are kind."
    },
    {
        "id": 4055,
        "statement": "is(X, green) :- is(X, red), is(X, quiet).",
        "description": "Red, quiet people are green."
    },
    {
        "id": 4056,
        "statement": "is(X, quiet) :- is(X, green), is(X, kind).",
        "description": "All green, kind people are quiet."
    },
    {
        "id": 4057,
        "statement": "is(X, white) :- is(X, blue), is(X, green).",
        "description": "Blue, green people are white."
    },
    {
        "id": 4058,
        "statement": "is(X, rough) :- is(X, nice), is(X, green).",
        "description": "All nice, green people are rough."
    },
    {
        "id": 4059,
        "statement": "is(X, round) :- is(X, rough), is(X, quiet).",
        "description": "All rough, quiet people are round."
    },
    {
        "id": 4060,
        "statement": "is(X, round) :- is(X, quiet), is(X, blue).",
        "description": "All quiet, blue people are round."
    },
    {
        "id": 4061,
        "statement": "is(erin, quiet) :- is(erin, blue).",
        "description": "If Erin is blue then Erin is quiet."
    },
    {
        "id": 4062,
        "statement": "is(harry, kind) :- is(harry, rough), is(harry, blue).",
        "description": "If Harry is rough and Harry is blue then Harry is kind."
    },
    {
        "id": 4063,
        "statement": "is(X, blue) :- is(X, kind).",
        "description": "All kind people are blue."
    },
    {
        "id": 4064,
        "statement": "is(fiona, kind) :- is(fiona, furry), is(fiona, red).",
        "description": "If Fiona is furry and Fiona is red then Fiona is kind."
    },
    {
        "id": 4065,
        "statement": "is(X, quiet) :- is(X, furry), is(X, kind).",
        "description": "Furry, kind things are quiet."
    },
    {
        "id": 4066,
        "statement": "is(X, red) :- is(X, quiet), is(X, furry).",
        "description": "All quiet, furry things are red."
    },
    {
        "id": 4067,
        "statement": "is(X, red) :- is(X, quiet), is(X, kind).",
        "description": "If something is quiet and kind then it is red."
    },
    {
        "id": 4068,
        "statement": "is(X, furry) :- is(X, red), is(X, big).",
        "description": "All red, big things are furry."
    },
    {
        "id": 4069,
        "statement": "is(X, furry) :- is(X, round).",
        "description": "If something is round then it is furry."
    },
    {
        "id": 4070,
        "statement": "is(X, big) :- is(X, kind), is(X, furry).",
        "description": "If something is kind and furry then it is big."
    },
    {
        "id": 4071,
        "statement": "is(cow, round) :- not chases(cow, dog).",
        "description": "If the cow does not chase the dog then the cow is round."
    },
    {
        "id": 4072,
        "statement": "is(X, rough) :- likes(X, cat).",
        "description": "If someone likes the cat then they are rough."
    },
    {
        "id": 4073,
        "statement": "is(dog, cold) :- sees(X, dog), likes(X, dog).",
        "description": "If someone sees the dog and they like the dog then the dog is cold."
    },
    {
        "id": 4074,
        "statement": "likes(X, cow) :- chases(X, cow).",
        "description": "If someone chases the cow then they like the cow."
    },
    {
        "id": 4075,
        "statement": "is(cow, red) :- likes(lion, cow).",
        "description": "If the lion likes the cow then the cow is red."
    },
    {
        "id": 4076,
        "statement": "chases(X, cow) :- is(X, big), chases(X, dog).",
        "description": "If someone is big and they chase the dog then they chase the cow."
    },
    {
        "id": 4077,
        "statement": "is(dog, big) :- sees(X, dog), sees(dog, lion).",
        "description": "If someone sees the dog and the dog sees the lion then the dog is big."
    },
    {
        "id": 4078,
        "statement": "sees(X, cat) :- chases(X, cow), not is(X, cold).",
        "description": "If someone chases the cow and they are not cold then they see the cat."
    },
    {
        "id": 4079,
        "statement": "is(harry, round) :- is(harry, big).",
        "description": "If Harry is big then Harry is round."
    },
    {
        "id": 4080,
        "statement": "is(X, big) :- is(X, round).",
        "description": "All round people are big."
    },
    {
        "id": 4081,
        "statement": "is(X, green) :- is(X, furry).",
        "description": "If someone is furry then they are green."
    },
    {
        "id": 4082,
        "statement": "is(X, round) :- is(X, furry), is(X, cold).",
        "description": "Furry, cold people are round."
    },
    {
        "id": 4083,
        "statement": "is(X, furry) :- is(X, blue), is(X, cold).",
        "description": "Blue, cold people are furry."
    },
    {
        "id": 4084,
        "statement": "is(X, cold) :- is(X, green).",
        "description": "Green people are cold."
    },
    {
        "id": 4085,
        "statement": "is(dave, quiet) :- is(dave, nice), is(dave, rough).",
        "description": "If Dave is nice and Dave is rough then Dave is quiet."
    },
    {
        "id": 4086,
        "statement": "is(X, white) :- is(X, red), is(X, nice).",
        "description": "Red, nice people are white."
    },
    {
        "id": 4087,
        "statement": "is(X, red) :- is(X, young).",
        "description": "If someone is young then they are red."
    },
    {
        "id": 4088,
        "statement": "is(X, big) :- is(X, red), is(X, white).",
        "description": "All red, white people are big."
    },
    {
        "id": 4089,
        "statement": "is(X, nice) :- is(X, red).",
        "description": "All red people are nice."
    },
    {
        "id": 4090,
        "statement": "is(harry, furry) :- is(harry, red), is(harry, nice).",
        "description": "If Harry is red and Harry is nice then Harry is furry."
    },
    {
        "id": 4091,
        "statement": "is(X, red) :- is(X, nice), is(X, young).",
        "description": "All nice, young people are red."
    },
    {
        "id": 4092,
        "statement": "is(fiona, young) :- is(fiona, quiet).",
        "description": "If Fiona is quiet then Fiona is young."
    },
    {
        "id": 4093,
        "statement": "is(X, big) :- is(X, nice), is(X, red).",
        "description": "Nice, red people are big."
    },
    {
        "id": 4094,
        "statement": "is(X, green) :- is(X, rough).",
        "description": "Rough things are green."
    },
    {
        "id": 4095,
        "statement": "is(X, round) :- is(X, cold).",
        "description": "Cold things are round."
    },
    {
        "id": 4096,
        "statement": "is(X, smart) :- is(X, white), is(X, green).",
        "description": "All white, green things are smart."
    },
    {
        "id": 4097,
        "statement": "is(X, white) :- is(X, round), is(X, green).",
        "description": "Round, green things are white."
    },
    {
        "id": 4098,
        "statement": "eats(lion, cat).",
        "description": "The lion eats the cat."
    },
    {
        "id": 4099,
        "statement": "needs(rabbit, dog) :- visits(X, cat), visits(cat, rabbit).",
        "description": "If someone visits the cat and the cat visits the rabbit then the rabbit needs the dog."
    },
    {
        "id": 4100,
        "statement": "is(cat, red) :- visits(X, cat), is(X, young).",
        "description": "If someone visits the cat and they are young then the cat is red."
    },
    {
        "id": 4101,
        "statement": "is(X, young) :- eats(X, cat).",
        "description": "If someone eats the cat then they are young."
    },
    {
        "id": 4102,
        "statement": "needs(X, dog) :- is(X, nice).",
        "description": "If someone is nice then they need the dog."
    },
    {
        "id": 4103,
        "statement": "eats(cat, lion) :- is(cat, red).",
        "description": "If the cat is red then the cat eats the lion."
    },
    {
        "id": 4104,
        "statement": "is(lion, cold) :- needs(lion, rabbit), eats(rabbit, cat).",
        "description": "If the lion needs the rabbit and the rabbit eats the cat then the lion is cold."
    },
    {
        "id": 4105,
        "statement": "needs(X, dog) :- eats(X, lion), visits(X, lion).",
        "description": "If someone eats the lion and they visit the lion then they need the dog."
    },
    {
        "id": 4106,
        "statement": "visits(X, lion) :- eats(X, lion).",
        "description": "If someone eats the lion then they visit the lion."
    },
    {
        "id": 4107,
        "statement": "likes(dog, rabbit).",
        "description": "The dog likes the rabbit."
    },
    {
        "id": 4108,
        "statement": "visits(X, dog) :- visits(X, rabbit).",
        "description": "If someone visits the rabbit then they visit the dog."
    },
    {
        "id": 4109,
        "statement": "visits(X, dog) :- is(X, big).",
        "description": "If someone is big then they visit the dog."
    },
    {
        "id": 4110,
        "statement": "likes(X, cat) :- visits(X, cat), likes(cat, dog).",
        "description": "If someone visits the cat and the cat likes the dog then they like the cat."
    },
    {
        "id": 4111,
        "statement": "likes(X, rabbit) :- visits(X, bear).",
        "description": "If someone visits the bear then they like the rabbit."
    },
    {
        "id": 4112,
        "statement": "sees(X, cat) :- sees(X, bear).",
        "description": "If someone sees the bear then they see the cat."
    },
    {
        "id": 4113,
        "statement": "is(cat, rough) :- sees(X, cat).",
        "description": "If someone sees the cat then the cat is rough."
    },
    {
        "id": 4114,
        "statement": "is(bear, round) :- is(X, big), sees(X, bear).",
        "description": "If someone is big and they see the bear then the bear is round."
    },
    {
        "id": 4115,
        "statement": "sees(rabbit, bear) :- is(X, round), likes(X, rabbit).",
        "description": "If someone is round and they like the rabbit then the rabbit sees the bear."
    },
    {
        "id": 4116,
        "statement": "is(X, round) :- is(X, rough), not likes(X, cat).",
        "description": "If someone is rough and they do not like the cat then they are round."
    },
    {
        "id": 4117,
        "statement": "sees(bald_eagle, bear).",
        "description": "The bald eagle sees the bear."
    },
    {
        "id": 4118,
        "statement": "sees(mouse, bald_eagle).",
        "description": "The mouse sees the bald eagle."
    },
    {
        "id": 4119,
        "statement": "is(bear, kind) :- sees(X, bear), sees(bear, bald_eagle).",
        "description": "If something sees the bear and the bear sees the bald eagle then the bear is kind."
    },
    {
        "id": 4120,
        "statement": "eats(X, mouse) :- eats(X, bald_eagle), is(X, kind).",
        "description": "If something eats the bald eagle and it is kind then it eats the mouse."
    },
    {
        "id": 4121,
        "statement": "chases(squirrel, bear) :- chases(X, squirrel), sees(X, mouse).",
        "description": "If something chases the squirrel and it sees the mouse then the squirrel chases the bear."
    },
    {
        "id": 4122,
        "statement": "chases(mouse, bald_eagle) :- eats(X, mouse).",
        "description": "If something eats the mouse then the mouse chases the bald eagle."
    },
    {
        "id": 4123,
        "statement": "sees(X, mouse) :- is(X, kind).",
        "description": "If something is kind then it sees the mouse."
    },
    {
        "id": 4124,
        "statement": "chases(X, bald_eagle) :- is(X, kind).",
        "description": "If something is kind then it chases the bald eagle."
    },
    {
        "id": 4125,
        "statement": "eats(X, bear) :- chases(X, squirrel), is(X, cold).",
        "description": "If something chases the squirrel and it is cold then it eats the bear."
    },
    {
        "id": 4126,
        "statement": "chases(X, squirrel) :- eats(X, squirrel), eats(X, mouse).",
        "description": "If something eats the squirrel and it eats the mouse then it chases the squirrel."
    },
    {
        "id": 4127,
        "statement": "sees(bear, bald_eagle) :- chases(X, bear).",
        "description": "If something chases the bear then the bear sees the bald eagle."
    },
    {
        "id": 4128,
        "statement": "is(X, cold) :- is(X, furry), is(X, nice).",
        "description": "Furry, nice people are cold."
    },
    {
        "id": 4129,
        "statement": "is(X, white) :- is(X, kind).",
        "description": "If someone is kind then they are white."
    },
    {
        "id": 4130,
        "statement": "is(X, nice) :- is(X, white), is(X, quiet).",
        "description": "White, quiet people are nice."
    },
    {
        "id": 4131,
        "statement": "is(erin, quiet) :- is(erin, kind), is(erin, nice).",
        "description": "If Erin is kind and Erin is nice then Erin is quiet."
    },
    {
        "id": 4132,
        "statement": "is(X, furry) :- is(X, white), is(X, quiet).",
        "description": "All white, quiet people are furry."
    },
    {
        "id": 4133,
        "statement": "sees(X, mouse) :- sees(X, rabbit), is(X, kind).",
        "description": "If something sees the rabbit and it is kind then it sees the mouse."
    },
    {
        "id": 4134,
        "statement": "sees(X, rabbit) :- is(X, kind), is(X, cold).",
        "description": "If something is kind and cold then it sees the rabbit."
    },
    {
        "id": 4135,
        "statement": "is(X, kind) :- visits(X, tiger), sees(tiger, rabbit).",
        "description": "If something visits the tiger and the tiger sees the rabbit then it is kind."
    },
    {
        "id": 4136,
        "statement": "visits(X, tiger) :- sees(X, mouse).",
        "description": "If something sees the mouse then it visits the tiger."
    },
    {
        "id": 4137,
        "statement": "visits(X, mouse) :- is(X, kind).",
        "description": "If something is kind then it visits the mouse."
    },
    {
        "id": 4138,
        "statement": "visits(X, mouse) :- is(X, young).",
        "description": "If something is young then it visits the mouse."
    },
    {
        "id": 4139,
        "statement": "visits(mouse, cat) :- visits(X, mouse).",
        "description": "If something visits the mouse then the mouse visits the cat."
    },
    {
        "id": 4140,
        "statement": "is(X, cold) :- visits(X, mouse), is(mouse, rough).",
        "description": "If something visits the mouse and the mouse is rough then it is cold."
    },
    {
        "id": 4141,
        "statement": "likes(lion, cow).",
        "description": "The lion likes the cow."
    },
    {
        "id": 4142,
        "statement": "sees(X, dog) :- is(X, kind).",
        "description": "If someone is kind then they see the dog."
    },
    {
        "id": 4143,
        "statement": "sees(X, dog) :- is(X, blue).",
        "description": "If someone is blue then they see the dog."
    },
    {
        "id": 4144,
        "statement": "needs(X, lion) :- is(X, kind).",
        "description": "If someone is kind then they need the lion."
    },
    {
        "id": 4145,
        "statement": "is(lion, round) :- needs(squirrel, lion).",
        "description": "If the squirrel needs the lion then the lion is round."
    },
    {
        "id": 4146,
        "statement": "sees(X, cow) :- sees(X, dog).",
        "description": "If someone sees the dog then they see the cow."
    },
    {
        "id": 4147,
        "statement": "is(X, kind) :- is(X, round).",
        "description": "Round people are kind."
    },
    {
        "id": 4148,
        "statement": "needs(cow, dog) :- needs(cow, squirrel).",
        "description": "If the cow needs the squirrel then the cow needs the dog."
    },
    {
        "id": 4149,
        "statement": "likes(X, dog) :- is(X, kind), not is(X, round).",
        "description": "If someone is kind and not round then they like the dog."
    },
    {
        "id": 4150,
        "statement": "is(X, red) :- is(X, quiet), is(X, green).",
        "description": "Quiet, green things are red."
    },
    {
        "id": 4151,
        "statement": "is(X, blue) :- is(X, quiet), is(X, green).",
        "description": "All quiet, green things are blue."
    },
    {
        "id": 4152,
        "statement": "is(X, green) :- is(X, red), is(X, blue).",
        "description": "All red, blue things are green."
    },
    {
        "id": 4153,
        "statement": "is(X, green) :- is(X, quiet).",
        "description": "All quiet things are green."
    },
    {
        "id": 4154,
        "statement": "is(X, smart) :- is(X, green), is(X, red).",
        "description": "All green, red things are smart."
    },
    {
        "id": 4155,
        "statement": "is(anne, young) :- is(anne, quiet), is(anne, red).",
        "description": "If Anne is quiet and Anne is red then Anne is young."
    },
    {
        "id": 4156,
        "statement": "is(fiona, young) :- is(fiona, smart), is(fiona, big).",
        "description": "If Fiona is smart and Fiona is big then Fiona is young."
    },
    {
        "id": 4157,
        "statement": "is(X, quiet) :- is(X, young).",
        "description": "All young things are quiet."
    },
    {
        "id": 4158,
        "statement": "needs(X, dog) :- is(X, kind), not chases(X, dog).",
        "description": "If someone is kind and they do not chase the dog then they need the dog."
    },
    {
        "id": 4159,
        "statement": "eats(bear, squirrel) :- is(X, red), chases(X, bear).",
        "description": "If someone is red and they chase the bear then the bear eats the squirrel."
    },
    {
        "id": 4160,
        "statement": "is(X, young) :- chases(X, squirrel).",
        "description": "If someone chases the squirrel then they are young."
    },
    {
        "id": 4161,
        "statement": "is(lion, red) :- is(lion, young).",
        "description": "If the lion is young then the lion is red."
    },
    {
        "id": 4162,
        "statement": "chases(dog, squirrel) :- chases(dog, lion), not eats(lion, dog).",
        "description": "If the dog chases the lion and the lion does not eat the dog then the dog chases the squirrel."
    },
    {
        "id": 4163,
        "statement": "is(squirrel, kind) :- needs(X, squirrel).",
        "description": "If someone needs the squirrel then the squirrel is kind."
    },
    {
        "id": 4164,
        "statement": "needs(lion, squirrel) :- is(lion, red).",
        "description": "If the lion is red then the lion needs the squirrel."
    },
    {
        "id": 4165,
        "statement": "eats(lion, squirrel) :- needs(lion, squirrel).",
        "description": "If the lion needs the squirrel then the lion eats the squirrel."
    },
    {
        "id": 4166,
        "statement": "eats(bear, dog) :- not needs(bear, dog).",
        "description": "If the bear does not need the dog then the bear eats the dog."
    },
    {
        "id": 4167,
        "statement": "sees(tiger, mouse).",
        "description": "The tiger sees the mouse."
    },
    {
        "id": 4168,
        "statement": "visits(mouse, tiger) :- sees(X, mouse), is(X, round).",
        "description": "If someone sees the mouse and they are round then the mouse visits the tiger."
    },
    {
        "id": 4169,
        "statement": "visits(X, bald_eagle) :- is(X, red).",
        "description": "If someone is red then they visit the bald eagle."
    },
    {
        "id": 4170,
        "statement": "likes(X, bear) :- is(X, big), sees(X, mouse).",
        "description": "If someone is big and they see the mouse then they like the bear."
    },
    {
        "id": 4171,
        "statement": "is(X, red) :- likes(X, bear).",
        "description": "If someone likes the bear then they are red."
    },
    {
        "id": 4172,
        "statement": "is(bald_eagle, round) :- visits(X, bald_eagle).",
        "description": "If someone visits the bald eagle then the bald eagle is round."
    },
    {
        "id": 4173,
        "statement": "is(bald_eagle, round) :- sees(bear, bald_eagle), likes(bald_eagle, tiger).",
        "description": "If the bear sees the bald eagle and the bald eagle likes the tiger then the bald eagle is round."
    },
    {
        "id": 4174,
        "statement": "sees(bald_eagle, mouse) :- likes(X, bald_eagle).",
        "description": "If someone likes the bald eagle then the bald eagle sees the mouse."
    },
    {
        "id": 4175,
        "statement": "likes(X, mouse) :- sees(X, bald_eagle).",
        "description": "If someone sees the bald eagle then they like the mouse."
    },
    {
        "id": 4176,
        "statement": "is(X, nice) :- is(X, big), is(X, round).",
        "description": "All big, round people are nice."
    },
    {
        "id": 4177,
        "statement": "is(X, quiet) :- is(X, red).",
        "description": "All red people are quiet."
    },
    {
        "id": 4178,
        "statement": "is(X, quiet) :- is(X, nice), is(X, red).",
        "description": "All nice, red people are quiet."
    },
    {
        "id": 4179,
        "statement": "is(X, big) :- is(X, quiet), is(X, nice).",
        "description": "If someone is quiet and nice then they are big."
    },
    {
        "id": 4180,
        "statement": "is(X, big) :- is(X, red), is(X, nice).",
        "description": "Red, nice people are big."
    },
    {
        "id": 4181,
        "statement": "is(X, round) :- is(X, smart).",
        "description": "If someone is smart then they are round."
    },
    {
        "id": 4182,
        "statement": "is(X, red) :- is(X, round), is(X, nice).",
        "description": "All round, nice people are red."
    },
    {
        "id": 4183,
        "statement": "is(X, smart) :- is(X, furry), is(X, cold).",
        "description": "If someone is furry and cold then they are smart."
    },
    {
        "id": 4184,
        "statement": "is(X, round) :- is(X, kind), is(X, furry).",
        "description": "Kind, furry people are round."
    },
    {
        "id": 4185,
        "statement": "is(X, smart) :- is(X, round), is(X, kind).",
        "description": "Round, kind people are smart."
    },
    {
        "id": 4186,
        "statement": "is(X, kind) :- is(X, furry).",
        "description": "All furry people are kind."
    },
    {
        "id": 4187,
        "statement": "is(bob, furry) :- is(bob, kind), is(bob, green).",
        "description": "If Bob is kind and Bob is green then Bob is furry."
    },
    {
        "id": 4188,
        "statement": "is(X, quiet) :- is(X, green), is(X, smart).",
        "description": "Green, smart people are quiet."
    },
    {
        "id": 4189,
        "statement": "is(gary, kind) :- is(gary, green), is(gary, cold).",
        "description": "If Gary is green and Gary is cold then Gary is kind."
    },
    {
        "id": 4190,
        "statement": "needs(cat, lion) :- is(cat, blue), not visits(cat, dog).",
        "description": "If the cat is blue and the cat does not visit the dog then the cat needs the lion."
    },
    {
        "id": 4191,
        "statement": "is(X, round) :- visits(X, cow).",
        "description": "If something visits the cow then it is round."
    },
    {
        "id": 4192,
        "statement": "needs(cow, lion) :- visits(cat, cow).",
        "description": "If the cat visits the cow then the cow needs the lion."
    },
    {
        "id": 4193,
        "statement": "visits(X, cow) :- is(X, green).",
        "description": "If something is green then it visits the cow."
    },
    {
        "id": 4194,
        "statement": "needs(cow, dog) :- chases(X, dog), chases(dog, cow).",
        "description": "If something chases the dog and the dog chases the cow then the cow needs the dog."
    },
    {
        "id": 4195,
        "statement": "visits(X, cat) :- is(X, round).",
        "description": "If something is round then it visits the cat."
    },
    {
        "id": 4196,
        "statement": "is(lion, green) :- visits(X, lion).",
        "description": "If something visits the lion then the lion is green."
    },
    {
        "id": 4197,
        "statement": "visits(cat, lion) :- needs(X, lion), not needs(X, cat).",
        "description": "If something needs the lion and it does not need the cat then the cat visits the lion."
    },
    {
        "id": 4198,
        "statement": "is(X, big) :- is(X, young).",
        "description": "If something is young then it is big."
    },
    {
        "id": 4199,
        "statement": "is(X, nice) :- is(X, rough).",
        "description": "If something is rough then it is nice."
    },
    {
        "id": 4200,
        "statement": "is(X, nice) :- is(X, big), not is(X, blue).",
        "description": "If something is big and not blue then it is nice."
    },
    {
        "id": 4201,
        "statement": "is(X, rough) :- is(X, nice), not is(X, blue).",
        "description": "If something is nice and not blue then it is rough."
    },
    {
        "id": 4202,
        "statement": "is(X, smart) :- is(X, cold), is(X, rough).",
        "description": "Cold, rough things are smart."
    },
    {
        "id": 4203,
        "statement": "is(X, cold) :- is(X, smart), not is(X, big).",
        "description": "If something is smart and not big then it is cold."
    },
    {
        "id": 4204,
        "statement": "is(X, cold) :- is(X, nice), is(X, rough).",
        "description": "If something is nice and rough then it is cold."
    },
    {
        "id": 4205,
        "statement": "is(X, furry) :- is(X, rough), is(X, quiet).",
        "description": "Rough, quiet things are furry."
    },
    {
        "id": 4206,
        "statement": "is(dave, cold) :- is(dave, round), is(dave, green).",
        "description": "If Dave is round and Dave is green then Dave is cold."
    },
    {
        "id": 4207,
        "statement": "is(fiona, cold) :- is(fiona, round).",
        "description": "If Fiona is round then Fiona is cold."
    },
    {
        "id": 4208,
        "statement": "is(X, quiet) :- is(X, rough), is(X, cold).",
        "description": "If something is rough and cold then it is quiet."
    },
    {
        "id": 4209,
        "statement": "is(fiona, cold) :- is(fiona, quiet).",
        "description": "If Fiona is quiet then Fiona is cold."
    },
    {
        "id": 4210,
        "statement": "is(X, rough) :- is(X, furry), is(X, cold).",
        "description": "All furry, cold things are rough."
    },
    {
        "id": 4211,
        "statement": "is(X, big) :- is(X, quiet), is(X, rough).",
        "description": "Quiet, rough things are big."
    },
    {
        "id": 4212,
        "statement": "is(X, green) :- is(X, big), is(X, rough).",
        "description": "Big, rough things are green."
    },
    {
        "id": 4213,
        "statement": "is(X, big) :- is(X, round), is(X, furry).",
        "description": "All round, furry things are big."
    },
    {
        "id": 4214,
        "statement": "is(X, smart) :- is(X, kind), is(X, furry).",
        "description": "If something is kind and furry then it is smart."
    },
    {
        "id": 4215,
        "statement": "is(X, big) :- is(X, kind).",
        "description": "Kind things are big."
    },
    {
        "id": 4216,
        "statement": "is(X, furry) :- is(X, blue), is(X, smart).",
        "description": "If something is blue and smart then it is furry."
    },
    {
        "id": 4217,
        "statement": "is(bob, nice) :- is(bob, furry), is(bob, big).",
        "description": "If Bob is furry and Bob is big then Bob is nice."
    },
    {
        "id": 4218,
        "statement": "is(X, kind) :- is(X, nice), is(X, smart).",
        "description": "Nice, smart things are kind."
    },
    {
        "id": 4219,
        "statement": "is(bob, smart) :- is(bob, furry).",
        "description": "If Bob is furry then Bob is smart."
    },
    {
        "id": 4220,
        "statement": "is(X, round) :- is(X, nice), is(X, big).",
        "description": "All nice, big things are round."
    },
    {
        "id": 4221,
        "statement": "eats(mouse, rabbit) :- chases(X, lion), not eats(X, mouse).",
        "description": "If someone chases the lion and they do not eat the mouse then the mouse eats the rabbit."
    },
    {
        "id": 4222,
        "statement": "eats(mouse, rabbit) :- eats(lion, mouse), not eats(mouse, lion).",
        "description": "If the lion eats the mouse and the mouse does not eat the lion then the mouse eats the rabbit."
    },
    {
        "id": 4223,
        "statement": "chases(X, lion) :- sees(X, rabbit).",
        "description": "If someone sees the rabbit then they chase the lion."
    },
    {
        "id": 4224,
        "statement": "chases(rabbit, lion) :- sees(dog, rabbit), is(dog, big).",
        "description": "If the dog sees the rabbit and the dog is big then the rabbit chases the lion."
    },
    {
        "id": 4225,
        "statement": "chases(dog, mouse) :- sees(X, dog).",
        "description": "If someone sees the dog then the dog chases the mouse."
    },
    {
        "id": 4226,
        "statement": "chases(dog, mouse) :- eats(X, dog), sees(dog, mouse).",
        "description": "If someone eats the dog and the dog sees the mouse then the dog chases the mouse."
    },
    {
        "id": 4227,
        "statement": "eats(X, dog) :- sees(X, rabbit), is(rabbit, big).",
        "description": "If someone sees the rabbit and the rabbit is big then they eat the dog."
    },
    {
        "id": 4228,
        "statement": "is(X, big) :- chases(X, lion).",
        "description": "If someone chases the lion then they are big."
    },
    {
        "id": 4229,
        "statement": "chases(X, rabbit) :- chases(X, dog).",
        "description": "If someone chases the dog then they chase the rabbit."
    },
    {
        "id": 4230,
        "statement": "is(X, big) :- needs(X, squirrel).",
        "description": "If someone needs the squirrel then they are big."
    },
    {
        "id": 4231,
        "statement": "is(squirrel, big) :- likes(tiger, squirrel), likes(squirrel, tiger).",
        "description": "If the tiger likes the squirrel and the squirrel likes the tiger then the squirrel is big."
    },
    {
        "id": 4232,
        "statement": "likes(tiger, squirrel) :- eats(X, tiger).",
        "description": "If someone eats the tiger then the tiger likes the squirrel."
    },
    {
        "id": 4233,
        "statement": "likes(X, lion) :- needs(X, squirrel), is(X, big).",
        "description": "If someone needs the squirrel and they are big then they like the lion."
    },
    {
        "id": 4234,
        "statement": "likes(cat, squirrel) :- eats(X, cat).",
        "description": "If someone eats the cat then the cat likes the squirrel."
    },
    {
        "id": 4235,
        "statement": "is(tiger, round) :- likes(X, tiger).",
        "description": "If someone likes the tiger then the tiger is round."
    },
    {
        "id": 4236,
        "statement": "needs(lion, squirrel) :- likes(X, lion).",
        "description": "If someone likes the lion then the lion needs the squirrel."
    },
    {
        "id": 4237,
        "statement": "is(squirrel, red) :- needs(X, squirrel), is(squirrel, kind).",
        "description": "If someone needs the squirrel and the squirrel is kind then the squirrel is red."
    },
    {
        "id": 4238,
        "statement": "is(squirrel, round) :- eats(X, squirrel).",
        "description": "If someone eats the squirrel then the squirrel is round."
    },
    {
        "id": 4239,
        "statement": "is(X, nice) :- is(X, smart).",
        "description": "Smart things are nice."
    },
    {
        "id": 4240,
        "statement": "is(X, big) :- is(X, cold), is(X, smart).",
        "description": "All cold, smart things are big."
    },
    {
        "id": 4241,
        "statement": "is(X, big) :- is(X, nice).",
        "description": "Nice things are big."
    },
    {
        "id": 4242,
        "statement": "is(X, big) :- is(X, nice), is(X, white).",
        "description": "All nice, white things are big."
    },
    {
        "id": 4243,
        "statement": "is(X, blue) :- is(X, smart), is(X, white).",
        "description": "Smart, white things are blue."
    },
    {
        "id": 4244,
        "statement": "is(X, blue) :- is(X, cold), is(X, young).",
        "description": "If something is cold and young then it is blue."
    },
    {
        "id": 4245,
        "statement": "is(X, white) :- is(X, nice).",
        "description": "Nice things are white."
    },
    {
        "id": 4246,
        "statement": "is(X, smart) :- is(X, cold), not is(X, young).",
        "description": "If something is cold and not young then it is smart."
    },
    {
        "id": 4247,
        "statement": "needs(bear, mouse) :- is(bear, cold).",
        "description": "If the bear is cold then the bear needs the mouse."
    },
    {
        "id": 4248,
        "statement": "visits(X, squirrel) :- needs(X, mouse), needs(X, bear).",
        "description": "If something needs the mouse and it needs the bear then it visits the squirrel."
    },
    {
        "id": 4249,
        "statement": "eats(X, bear) :- eats(X, mouse), is(mouse, kind).",
        "description": "If something eats the mouse and the mouse is kind then it eats the bear."
    },
    {
        "id": 4250,
        "statement": "is(rabbit, cold) :- eats(X, rabbit).",
        "description": "If something eats the rabbit then the rabbit is cold."
    },
    {
        "id": 4251,
        "statement": "needs(X, bear) :- is(X, cold).",
        "description": "If something is cold then it needs the bear."
    },
    {
        "id": 4252,
        "statement": "eats(mouse, rabbit) :- needs(bear, mouse), visits(bear, squirrel).",
        "description": "If the bear needs the mouse and the bear visits the squirrel then the mouse eats the rabbit."
    },
    {
        "id": 4253,
        "statement": "is(mouse, red) :- visits(bear, rabbit), needs(rabbit, mouse).",
        "description": "If the bear visits the rabbit and the rabbit needs the mouse then the mouse is red."
    },
    {
        "id": 4254,
        "statement": "eats(mouse, squirrel) :- needs(rabbit, mouse).",
        "description": "If the rabbit needs the mouse then the mouse eats the squirrel."
    },
    {
        "id": 4255,
        "statement": "is(X, quiet) :- is(X, kind), is(X, furry).",
        "description": "All kind, furry people are quiet."
    },
    {
        "id": 4256,
        "statement": "is(X, young) :- is(X, quiet), is(X, furry).",
        "description": "Quiet, furry people are young."
    },
    {
        "id": 4257,
        "statement": "is(X, young) :- is(X, big), is(X, kind).",
        "description": "If someone is big and kind then they are young."
    },
    {
        "id": 4258,
        "statement": "is(X, red) :- is(X, young), is(X, rough).",
        "description": "All young, rough people are red."
    },
    {
        "id": 4259,
        "statement": "is(X, furry) :- is(X, rough), is(X, quiet).",
        "description": "Rough, quiet people are furry."
    },
    {
        "id": 4260,
        "statement": "is(X, furry) :- is(X, rough), is(X, red).",
        "description": "All rough, red people are furry."
    },
    {
        "id": 4261,
        "statement": "is(X, rough) :- is(X, young).",
        "description": "Young people are rough."
    },
    {
        "id": 4262,
        "statement": "is(X, rough) :- is(X, cold), is(X, young).",
        "description": "If someone is cold and young then they are rough."
    },
    {
        "id": 4263,
        "statement": "is(charlie, cold) :- is(charlie, young), is(charlie, quiet).",
        "description": "If Charlie is young and Charlie is quiet then Charlie is cold."
    },
    {
        "id": 4264,
        "statement": "is(X, quiet) :- is(X, nice).",
        "description": "All nice people are quiet."
    },
    {
        "id": 4265,
        "statement": "is(X, quiet) :- is(X, green).",
        "description": "Green people are quiet."
    },
    {
        "id": 4266,
        "statement": "is(X, green) :- is(X, rough), is(X, cold).",
        "description": "All rough, cold people are green."
    },
    {
        "id": 4267,
        "statement": "is(X, nice) :- is(X, rough), is(X, quiet).",
        "description": "Rough, quiet people are nice."
    },
    {
        "id": 4268,
        "statement": "is(X, smart) :- is(X, quiet), is(X, nice).",
        "description": "If someone is quiet and nice then they are smart."
    },
    {
        "id": 4269,
        "statement": "is(X, young) :- is(X, furry), is(X, rough).",
        "description": "If someone is furry and rough then they are young."
    },
    {
        "id": 4270,
        "statement": "is(X, rough) :- is(X, young).",
        "description": "If someone is young then they are rough."
    },
    {
        "id": 4271,
        "statement": "is(X, blue) :- is(X, big), is(X, rough).",
        "description": "If someone is big and rough then they are blue."
    },
    {
        "id": 4272,
        "statement": "is(gary, nice) :- is(gary, big).",
        "description": "If Gary is big then Gary is nice."
    },
    {
        "id": 4273,
        "statement": "sees(cat, rabbit).",
        "description": "The cat sees the rabbit."
    },
    {
        "id": 4274,
        "statement": "sees(bald_eagle, rabbit) :- visits(X, bald_eagle), visits(bald_eagle, bear).",
        "description": "If someone visits the bald eagle and the bald eagle visits the bear then the bald eagle sees the rabbit."
    },
    {
        "id": 4275,
        "statement": "is(X, rough) :- visits(X, cat).",
        "description": "If someone visits the cat then they are rough."
    },
    {
        "id": 4276,
        "statement": "eats(X, rabbit) :- visits(X, bald_eagle).",
        "description": "If someone visits the bald eagle then they eat the rabbit."
    },
    {
        "id": 4277,
        "statement": "is(X, rough) :- visits(X, bald_eagle).",
        "description": "If someone visits the bald eagle then they are rough."
    },
    {
        "id": 4278,
        "statement": "sees(X, bear) :- is(X, green).",
        "description": "If someone is green then they see the bear."
    },
    {
        "id": 4279,
        "statement": "is(X, green) :- sees(X, cat).",
        "description": "If someone sees the cat then they are green."
    },
    {
        "id": 4280,
        "statement": "visits(X, bald_eagle) :- is(X, nice), is(X, round).",
        "description": "If someone is nice and round then they visit the bald eagle."
    },
    {
        "id": 4281,
        "statement": "sees(bear, cat) :- sees(X, bear).",
        "description": "If someone sees the bear then the bear sees the cat."
    },
    {
        "id": 4282,
        "statement": "eats(X, rabbit) :- is(X, round), sees(X, bear).",
        "description": "If someone is round and they see the bear then they eat the rabbit."
    },
    {
        "id": 4283,
        "statement": "is(X, furry) :- is(X, smart), is(X, rough).",
        "description": "All smart, rough people are furry."
    },
    {
        "id": 4284,
        "statement": "is(X, smart) :- is(X, kind), is(X, blue).",
        "description": "If someone is kind and blue then they are smart."
    },
    {
        "id": 4285,
        "statement": "is(X, cold) :- is(X, smart), is(X, rough).",
        "description": "All smart, rough people are cold."
    },
    {
        "id": 4286,
        "statement": "is(X, rough) :- is(X, smart), is(X, furry).",
        "description": "If someone is smart and furry then they are rough."
    },
    {
        "id": 4287,
        "statement": "is(X, blue) :- is(X, kind), is(X, big).",
        "description": "All kind, big people are blue."
    },
    {
        "id": 4288,
        "statement": "is(X, smart) :- is(X, rough), is(X, cold).",
        "description": "All rough, cold people are smart."
    },
    {
        "id": 4289,
        "statement": "is(X, cold) :- is(X, quiet), is(X, rough).",
        "description": "All quiet, rough things are cold."
    },
    {
        "id": 4290,
        "statement": "is(X, cold) :- is(X, quiet), is(X, furry).",
        "description": "All quiet, furry things are cold."
    },
    {
        "id": 4291,
        "statement": "is(X, young) :- is(X, white), is(X, furry).",
        "description": "White, furry things are young."
    },
    {
        "id": 4292,
        "statement": "is(X, quiet) :- is(X, young), is(X, furry).",
        "description": "Young, furry things are quiet."
    },
    {
        "id": 4293,
        "statement": "is(X, furry) :- is(X, cold).",
        "description": "If something is cold then it is furry."
    },
    {
        "id": 4294,
        "statement": "is(bear, cold) :- likes(X, bear).",
        "description": "If something likes the bear then the bear is cold."
    },
    {
        "id": 4295,
        "statement": "likes(X, bear) :- sees(X, bald_eagle).",
        "description": "If something sees the bald eagle then it likes the bear."
    },
    {
        "id": 4296,
        "statement": "sees(X, bald_eagle) :- likes(X, bald_eagle), is(X, red).",
        "description": "If something likes the bald eagle and it is red then it sees the bald eagle."
    },
    {
        "id": 4297,
        "statement": "needs(bald_eagle, tiger) :- is(X, green), sees(X, bald_eagle).",
        "description": "If something is green and it sees the bald eagle then the bald eagle needs the tiger."
    },
    {
        "id": 4298,
        "statement": "needs(bald_eagle, dog) :- sees(X, bald_eagle), needs(bald_eagle, bear).",
        "description": "If something sees the bald eagle and the bald eagle needs the bear then the bald eagle needs the dog."
    },
    {
        "id": 4299,
        "statement": "is(erin, smart) :- is(erin, rough).",
        "description": "If Erin is rough then Erin is smart."
    },
    {
        "id": 4300,
        "statement": "is(erin, smart) :- is(erin, rough), is(erin, furry).",
        "description": "If Erin is rough and Erin is furry then Erin is smart."
    },
    {
        "id": 4301,
        "statement": "is(X, furry) :- is(X, blue), is(X, nice).",
        "description": "All blue, nice things are furry."
    },
    {
        "id": 4302,
        "statement": "is(X, smart) :- is(X, red), is(X, furry).",
        "description": "All red, furry things are smart."
    },
    {
        "id": 4303,
        "statement": "is(X, smart) :- is(X, white), not is(X, rough).",
        "description": "If something is white and not rough then it is smart."
    },
    {
        "id": 4304,
        "statement": "is(X, white) :- is(X, blue).",
        "description": "Blue things are white."
    },
    {
        "id": 4305,
        "statement": "is(X, nice) :- is(X, blue).",
        "description": "Blue things are nice."
    },
    {
        "id": 4306,
        "statement": "visits(cat, cow) :- visits(cat, bald_eagle), is(cat, rough).",
        "description": "If the cat visits the bald eagle and the cat is rough then the cat visits the cow."
    },
    {
        "id": 4307,
        "statement": "visits(X, lion) :- visits(X, cat).",
        "description": "If someone visits the cat then they visit the lion."
    },
    {
        "id": 4308,
        "statement": "is(cat, young) :- sees(lion, cow), sees(lion, cat).",
        "description": "If the lion sees the cow and the lion sees the cat then the cat is young."
    },
    {
        "id": 4309,
        "statement": "visits(lion, cat) :- sees(X, lion), visits(X, lion).",
        "description": "If someone sees the lion and they visit the lion then the lion visits the cat."
    },
    {
        "id": 4310,
        "statement": "visits(X, cow) :- visits(X, lion).",
        "description": "If someone visits the lion then they visit the cow."
    },
    {
        "id": 4311,
        "statement": "chases(cat, cow) :- chases(X, cat).",
        "description": "If someone chases the cat then the cat chases the cow."
    },
    {
        "id": 4312,
        "statement": "is(dave, green) :- is(dave, young), is(dave, quiet).",
        "description": "If Dave is young and Dave is quiet then Dave is green."
    },
    {
        "id": 4313,
        "statement": "is(X, quiet) :- is(X, white), not is(X, smart).",
        "description": "If someone is white and not smart then they are quiet."
    },
    {
        "id": 4314,
        "statement": "is(X, quiet) :- is(X, green), not is(X, round).",
        "description": "If someone is green and not round then they are quiet."
    },
    {
        "id": 4315,
        "statement": "is(X, green) :- is(X, young), is(X, quiet).",
        "description": "Young, quiet people are green."
    },
    {
        "id": 4316,
        "statement": "is(bob, quiet) :- is(bob, white), is(bob, young).",
        "description": "If Bob is white and Bob is young then Bob is quiet."
    },
    {
        "id": 4317,
        "statement": "is(X, white) :- is(X, quiet), is(X, green).",
        "description": "Quiet, green people are white."
    },
    {
        "id": 4318,
        "statement": "is(X, white) :- is(X, young), is(X, kind).",
        "description": "All young, kind people are white."
    },
    {
        "id": 4319,
        "statement": "is(X, kind) :- is(X, young).",
        "description": "If someone is young then they are kind."
    },
    {
        "id": 4320,
        "statement": "is(X, quiet) :- is(X, cold), is(X, nice).",
        "description": "All cold, nice things are quiet."
    },
    {
        "id": 4321,
        "statement": "is(X, nice) :- is(X, white), is(X, blue).",
        "description": "White, blue things are nice."
    },
    {
        "id": 4322,
        "statement": "is(X, cold) :- is(X, green), is(X, quiet).",
        "description": "All green, quiet things are cold."
    },
    {
        "id": 4323,
        "statement": "is(X, blue) :- is(X, white), is(X, cold).",
        "description": "All white, cold things are blue."
    },
    {
        "id": 4324,
        "statement": "is(X, quiet) :- is(X, white), is(X, blue).",
        "description": "White, blue things are quiet."
    },
    {
        "id": 4325,
        "statement": "is(X, green) :- is(X, blue), is(X, furry).",
        "description": "If something is blue and furry then it is green."
    },
    {
        "id": 4326,
        "statement": "is(bob, cold) :- is(bob, quiet), is(bob, nice).",
        "description": "If Bob is quiet and Bob is nice then Bob is cold."
    },
    {
        "id": 4327,
        "statement": "is(X, white) :- is(X, blue), is(X, kind).",
        "description": "All blue, kind people are white."
    },
    {
        "id": 4328,
        "statement": "is(X, nice) :- is(X, kind), is(X, green).",
        "description": "Kind, green people are nice."
    },
    {
        "id": 4329,
        "statement": "is(harry, red) :- is(harry, kind).",
        "description": "If Harry is kind then Harry is red."
    },
    {
        "id": 4330,
        "statement": "is(X, rough) :- is(X, white).",
        "description": "If someone is white then they are rough."
    },
    {
        "id": 4331,
        "statement": "is(gary, nice) :- is(gary, blue).",
        "description": "If Gary is blue then Gary is nice."
    },
    {
        "id": 4332,
        "statement": "is(X, kind) :- is(X, nice), is(X, rough).",
        "description": "Nice, rough people are kind."
    },
    {
        "id": 4333,
        "statement": "is(X, kind) :- is(X, round).",
        "description": "Round things are kind."
    },
    {
        "id": 4334,
        "statement": "is(X, kind) :- is(X, green), is(X, white).",
        "description": "Green, white things are kind."
    },
    {
        "id": 4335,
        "statement": "is(X, big) :- is(X, white).",
        "description": "All white things are big."
    },
    {
        "id": 4336,
        "statement": "is(X, green) :- is(X, quiet), is(X, white).",
        "description": "If something is quiet and white then it is green."
    },
    {
        "id": 4337,
        "statement": "is(X, big) :- is(X, nice), is(X, green).",
        "description": "If someone is nice and green then they are big."
    },
    {
        "id": 4338,
        "statement": "is(harry, blue) :- is(harry, young).",
        "description": "If Harry is young then Harry is blue."
    },
    {
        "id": 4339,
        "statement": "is(X, rough) :- is(X, green), is(X, big).",
        "description": "Green, big people are rough."
    },
    {
        "id": 4340,
        "statement": "eats(mouse, tiger).",
        "description": "The mouse eats the tiger."
    },
    {
        "id": 4341,
        "statement": "sees(squirrel, tiger).",
        "description": "The squirrel sees the tiger."
    },
    {
        "id": 4342,
        "statement": "is(X, nice) :- needs(X, mouse), sees(mouse, tiger).",
        "description": "If someone needs the mouse and the mouse sees the tiger then they are nice."
    },
    {
        "id": 4343,
        "statement": "sees(X, squirrel) :- sees(X, tiger), eats(X, tiger).",
        "description": "If someone sees the tiger and they eat the tiger then they see the squirrel."
    },
    {
        "id": 4344,
        "statement": "eats(tiger, cat) :- is(mouse, green), needs(mouse, tiger).",
        "description": "If the mouse is green and the mouse needs the tiger then the tiger eats the cat."
    },
    {
        "id": 4345,
        "statement": "sees(cat, squirrel) :- needs(X, cat).",
        "description": "If someone needs the cat then the cat sees the squirrel."
    },
    {
        "id": 4346,
        "statement": "sees(X, mouse) :- sees(X, squirrel).",
        "description": "If someone sees the squirrel then they see the mouse."
    },
    {
        "id": 4347,
        "statement": "sees(cat, tiger) :- sees(X, mouse), sees(X, cat).",
        "description": "If someone sees the mouse and they see the cat then the cat sees the tiger."
    },
    {
        "id": 4348,
        "statement": "eats(tiger, mouse) :- eats(X, tiger).",
        "description": "If someone eats the tiger then the tiger eats the mouse."
    },
    {
        "id": 4349,
        "statement": "is(X, rough) :- is(X, furry), not is(X, young).",
        "description": "If someone is furry and not young then they are rough."
    },
    {
        "id": 4350,
        "statement": "is(X, quiet) :- is(X, red), is(X, furry).",
        "description": "If someone is red and furry then they are quiet."
    },
    {
        "id": 4351,
        "statement": "is(X, young) :- is(X, red).",
        "description": "If someone is red then they are young."
    },
    {
        "id": 4352,
        "statement": "is(X, nice) :- is(X, green), is(X, rough).",
        "description": "If someone is green and rough then they are nice."
    },
    {
        "id": 4353,
        "statement": "is(X, nice) :- is(X, red), is(X, round).",
        "description": "If someone is red and round then they are nice."
    },
    {
        "id": 4354,
        "statement": "is(X, round) :- is(X, young), is(X, furry).",
        "description": "If someone is young and furry then they are round."
    },
    {
        "id": 4355,
        "statement": "is(X, round) :- is(X, furry), not is(X, red).",
        "description": "If someone is furry and not red then they are round."
    },
    {
        "id": 4356,
        "statement": "is(X, furry) :- is(X, rough), not is(X, red).",
        "description": "If someone is rough and not red then they are furry."
    },
    {
        "id": 4357,
        "statement": "is(X, rough) :- is(X, young), is(X, green).",
        "description": "Young, green people are rough."
    },
    {
        "id": 4358,
        "statement": "is(X, big) :- is(X, rough).",
        "description": "Rough people are big."
    },
    {
        "id": 4359,
        "statement": "is(X, round) :- is(X, white).",
        "description": "If someone is white then they are round."
    },
    {
        "id": 4360,
        "statement": "is(dave, round) :- is(dave, young), is(dave, big).",
        "description": "If Dave is young and Dave is big then Dave is round."
    },
    {
        "id": 4361,
        "statement": "is(X, nice) :- is(X, white), is(X, round).",
        "description": "White, round people are nice."
    },
    {
        "id": 4362,
        "statement": "is(anne, rough) :- is(anne, round), is(anne, white).",
        "description": "If Anne is round and Anne is white then Anne is rough."
    },
    {
        "id": 4363,
        "statement": "is(X, young) :- is(X, big), is(X, rough).",
        "description": "Big, rough people are young."
    },
    {
        "id": 4364,
        "statement": "sees(dog, squirrel) :- chases(dog, cow).",
        "description": "If the dog chases the cow then the dog sees the squirrel."
    },
    {
        "id": 4365,
        "statement": "is(squirrel, young) :- sees(squirrel, dog).",
        "description": "If the squirrel sees the dog then the squirrel is young."
    },
    {
        "id": 4366,
        "statement": "is(cow, rough) :- chases(X, cow), likes(X, cat).",
        "description": "If something chases the cow and it likes the cat then the cow is rough."
    },
    {
        "id": 4367,
        "statement": "chases(X, cow) :- is(X, kind), is(X, blue).",
        "description": "If something is kind and blue then it chases the cow."
    },
    {
        "id": 4368,
        "statement": "is(bear, round) :- is(bear, cold).",
        "description": "If the bear is cold then the bear is round."
    },
    {
        "id": 4369,
        "statement": "is(cat, nice) :- visits(X, cat).",
        "description": "If someone visits the cat then the cat is nice."
    },
    {
        "id": 4370,
        "statement": "likes(X, cat) :- is(X, red).",
        "description": "If someone is red then they like the cat."
    },
    {
        "id": 4371,
        "statement": "needs(X, cat) :- is(X, round).",
        "description": "If someone is round then they need the cat."
    },
    {
        "id": 4372,
        "statement": "is(X, round) :- is(X, nice).",
        "description": "Nice people are round."
    },
    {
        "id": 4373,
        "statement": "is(X, red) :- likes(X, bear), needs(X, cat).",
        "description": "If someone likes the bear and they need the cat then they are red."
    },
    {
        "id": 4374,
        "statement": "visits(X, cow) :- is(X, red).",
        "description": "If someone is red then they visit the cow."
    },
    {
        "id": 4375,
        "statement": "is(X, green) :- is(X, big).",
        "description": "All big things are green."
    },
    {
        "id": 4376,
        "statement": "is(X, nice) :- is(X, green).",
        "description": "If something is green then it is nice."
    },
    {
        "id": 4377,
        "statement": "is(X, young) :- is(X, big), is(X, smart).",
        "description": "All big, smart things are young."
    },
    {
        "id": 4378,
        "statement": "is(X, smart) :- is(X, kind).",
        "description": "If something is kind then it is smart."
    },
    {
        "id": 4379,
        "statement": "is(X, smart) :- is(X, young), not is(X, green).",
        "description": "If something is young and not green then it is smart."
    },
    {
        "id": 4380,
        "statement": "is(X, rough) :- is(X, nice), not is(X, kind).",
        "description": "If something is nice and not kind then it is rough."
    },
    {
        "id": 4381,
        "statement": "is(X, green) :- is(X, cold), is(X, red).",
        "description": "If someone is cold and red then they are green."
    },
    {
        "id": 4382,
        "statement": "is(X, red) :- is(X, green), is(X, nice).",
        "description": "Green, nice people are red."
    },
    {
        "id": 4383,
        "statement": "is(X, blue) :- is(X, red), is(X, quiet).",
        "description": "All red, quiet people are blue."
    },
    {
        "id": 4384,
        "statement": "is(X, quiet) :- is(X, rough), is(X, green).",
        "description": "Rough, green people are quiet."
    },
    {
        "id": 4385,
        "statement": "is(X, rough) :- is(X, green).",
        "description": "If someone is green then they are rough."
    },
    {
        "id": 4386,
        "statement": "is(harry, cold) :- is(harry, red).",
        "description": "If Harry is red then Harry is cold."
    },
    {
        "id": 4387,
        "statement": "is(X, quiet) :- is(X, blue).",
        "description": "Blue people are quiet."
    },
    {
        "id": 4388,
        "statement": "is(X, cold) :- is(X, red).",
        "description": "Red people are cold."
    },
    {
        "id": 4389,
        "statement": "is(X, rough) :- is(X, green), is(X, white).",
        "description": "All green, white things are rough."
    },
    {
        "id": 4390,
        "statement": "is(X, green) :- is(X, red).",
        "description": "All red things are green."
    },
    {
        "id": 4391,
        "statement": "is(X, kind) :- is(X, green).",
        "description": "Green things are kind."
    },
    {
        "id": 4392,
        "statement": "is(X, white) :- is(X, big), is(X, kind).",
        "description": "Big, kind things are white."
    },
    {
        "id": 4393,
        "statement": "is(X, rough) :- is(X, cold).",
        "description": "All cold people are rough."
    },
    {
        "id": 4394,
        "statement": "is(X, cold) :- is(X, rough), is(X, red).",
        "description": "If someone is rough and red then they are cold."
    },
    {
        "id": 4395,
        "statement": "is(X, cold) :- is(X, furry), is(X, smart).",
        "description": "Furry, smart people are cold."
    },
    {
        "id": 4396,
        "statement": "is(anne, smart) :- is(anne, furry), is(anne, rough).",
        "description": "If Anne is furry and Anne is rough then Anne is smart."
    },
    {
        "id": 4397,
        "statement": "is(harry, red) :- is(harry, smart), is(harry, round).",
        "description": "If Harry is smart and Harry is round then Harry is red."
    },
    {
        "id": 4398,
        "statement": "is(gary, rough) :- is(gary, smart), is(gary, red).",
        "description": "If Gary is smart and Gary is red then Gary is rough."
    },
    {
        "id": 4399,
        "statement": "is(X, quiet) :- is(X, nice), is(X, cold).",
        "description": "If someone is nice and cold then they are quiet."
    },
    {
        "id": 4400,
        "statement": "is(X, smart) :- is(X, quiet).",
        "description": "All quiet people are smart."
    },
    {
        "id": 4401,
        "statement": "needs(bear, tiger) :- likes(X, bear).",
        "description": "If something likes the bear then the bear needs the tiger."
    },
    {
        "id": 4402,
        "statement": "likes(X, bear) :- is(X, red).",
        "description": "If something is red then it likes the bear."
    },
    {
        "id": 4403,
        "statement": "visits(squirrel, tiger) :- is(squirrel, nice), visits(squirrel, cat).",
        "description": "If the squirrel is nice and the squirrel visits the cat then the squirrel visits the tiger."
    },
    {
        "id": 4404,
        "statement": "is(X, red) :- is(X, young).",
        "description": "Young things are red."
    },
    {
        "id": 4405,
        "statement": "is(squirrel, nice) :- likes(squirrel, cat), needs(cat, squirrel).",
        "description": "If the squirrel likes the cat and the cat needs the squirrel then the squirrel is nice."
    },
    {
        "id": 4406,
        "statement": "is(cat, nice) :- visits(X, cat).",
        "description": "If something visits the cat then the cat is nice."
    },
    {
        "id": 4407,
        "statement": "is(X, young) :- needs(X, tiger).",
        "description": "If something needs the tiger then it is young."
    },
    {
        "id": 4408,
        "statement": "needs(X, tiger) :- likes(X, squirrel), needs(X, bear).",
        "description": "If something likes the squirrel and it needs the bear then it needs the tiger."
    },
    {
        "id": 4409,
        "statement": "likes(dog, cow) :- likes(X, lion), not likes(X, dog).",
        "description": "If someone likes the lion and they do not like the dog then the dog likes the cow."
    },
    {
        "id": 4410,
        "statement": "eats(X, rabbit) :- likes(X, lion).",
        "description": "If someone likes the lion then they eat the rabbit."
    },
    {
        "id": 4411,
        "statement": "is(lion, cold) :- likes(X, cow), eats(X, lion).",
        "description": "If someone likes the cow and they eat the lion then the lion is cold."
    },
    {
        "id": 4412,
        "statement": "is(X, cold) :- likes(X, cow).",
        "description": "If someone likes the cow then they are cold."
    },
    {
        "id": 4413,
        "statement": "likes(X, lion) :- is(X, cold), likes(X, cow).",
        "description": "If someone is cold and they like the cow then they like the lion."
    },
    {
        "id": 4414,
        "statement": "likes(dog, lion) :- is(dog, red).",
        "description": "If the dog is red then the dog likes the lion."
    },
    {
        "id": 4415,
        "statement": "visits(rabbit, lion) :- is(X, young), visits(X, rabbit).",
        "description": "If someone is young and they visit the rabbit then the rabbit visits the lion."
    },
    {
        "id": 4416,
        "statement": "eats(X, cow) :- is(X, kind).",
        "description": "If someone is kind then they eat the cow."
    },
    {
        "id": 4417,
        "statement": "sees(tiger, bear) :- needs(bear, tiger), not needs(bear, cow).",
        "description": "If the bear needs the tiger and the bear does not need the cow then the tiger sees the bear."
    },
    {
        "id": 4418,
        "statement": "is(cow, kind) :- eats(X, cow).",
        "description": "If someone eats the cow then the cow is kind."
    },
    {
        "id": 4419,
        "statement": "needs(X, squirrel) :- is(X, cold).",
        "description": "If someone is cold then they need the squirrel."
    },
    {
        "id": 4420,
        "statement": "needs(cow, squirrel) :- is(X, kind), needs(X, cow).",
        "description": "If someone is kind and they need the cow then the cow needs the squirrel."
    },
    {
        "id": 4421,
        "statement": "needs(squirrel, bear) :- is(squirrel, cold).",
        "description": "If the squirrel is cold then the squirrel needs the bear."
    },
    {
        "id": 4422,
        "statement": "is(squirrel, nice) :- is(cow, red), sees(cow, squirrel).",
        "description": "If the cow is red and the cow sees the squirrel then the squirrel is nice."
    },
    {
        "id": 4423,
        "statement": "is(cow, cold) :- eats(X, tiger), eats(X, cow).",
        "description": "If someone eats the tiger and they eat the cow then the cow is cold."
    },
    {
        "id": 4424,
        "statement": "eats(X, bear) :- eats(X, tiger).",
        "description": "If someone eats the tiger then they eat the bear."
    },
    {
        "id": 4425,
        "statement": "is(X, furry) :- is(X, round).",
        "description": "Round people are furry."
    },
    {
        "id": 4426,
        "statement": "is(X, cold) :- is(X, round), is(X, furry).",
        "description": "If someone is round and furry then they are cold."
    },
    {
        "id": 4427,
        "statement": "is(X, round) :- is(X, green), is(X, nice).",
        "description": "All green, nice people are round."
    },
    {
        "id": 4428,
        "statement": "is(X, rough) :- is(X, blue), is(X, furry).",
        "description": "All blue, furry people are rough."
    },
    {
        "id": 4429,
        "statement": "is(X, rough) :- is(X, blue).",
        "description": "All blue people are rough."
    },
    {
        "id": 4430,
        "statement": "is(anne, furry) :- is(anne, blue), is(anne, rough).",
        "description": "If Anne is blue and Anne is rough then Anne is furry."
    },
    {
        "id": 4431,
        "statement": "is(X, green) :- is(X, rough), is(X, cold).",
        "description": "Rough, cold people are green."
    },
    {
        "id": 4432,
        "statement": "is(X, nice) :- eats(X, cow).",
        "description": "If something eats the cow then it is nice."
    },
    {
        "id": 4433,
        "statement": "eats(rabbit, squirrel) :- is(rabbit, young), eats(rabbit, bear).",
        "description": "If the rabbit is young and the rabbit eats the bear then the rabbit eats the squirrel."
    },
    {
        "id": 4434,
        "statement": "needs(squirrel, bear) :- likes(X, squirrel), is(X, big).",
        "description": "If something likes the squirrel and it is big then the squirrel needs the bear."
    },
    {
        "id": 4435,
        "statement": "needs(X, squirrel) :- eats(X, squirrel), needs(squirrel, cow).",
        "description": "If something eats the squirrel and the squirrel needs the cow then it needs the squirrel."
    },
    {
        "id": 4436,
        "statement": "eats(squirrel, cow) :- likes(X, squirrel), is(squirrel, blue).",
        "description": "If something likes the squirrel and the squirrel is blue then the squirrel eats the cow."
    },
    {
        "id": 4437,
        "statement": "eats(X, cow) :- is(X, blue), likes(X, squirrel).",
        "description": "If something is blue and it likes the squirrel then it eats the cow."
    },
    {
        "id": 4438,
        "statement": "needs(X, cow) :- is(X, nice).",
        "description": "If something is nice then it needs the cow."
    },
    {
        "id": 4439,
        "statement": "is(X, blue) :- likes(X, bear).",
        "description": "If something likes the bear then it is blue."
    },
    {
        "id": 4440,
        "statement": "is(X, white) :- is(X, green), is(X, nice).",
        "description": "All green, nice people are white."
    },
    {
        "id": 4441,
        "statement": "is(X, cold) :- is(X, big), is(X, nice).",
        "description": "All big, nice people are cold."
    },
    {
        "id": 4442,
        "statement": "is(X, red) :- is(X, cold).",
        "description": "If someone is cold then they are red."
    },
    {
        "id": 4443,
        "statement": "is(X, red) :- is(X, white), is(X, cold).",
        "description": "If someone is white and cold then they are red."
    },
    {
        "id": 4444,
        "statement": "likes(cow, dog).",
        "description": "The cow likes the dog."
    },
    {
        "id": 4445,
        "statement": "is(cat, blue) :- visits(X, cat).",
        "description": "If something visits the cat then the cat is blue."
    },
    {
        "id": 4446,
        "statement": "is(X, young) :- likes(X, dog), is(dog, young).",
        "description": "If something likes the dog and the dog is young then it is young."
    },
    {
        "id": 4447,
        "statement": "is(cow, cold) :- likes(X, cow).",
        "description": "If something likes the cow then the cow is cold."
    },
    {
        "id": 4448,
        "statement": "visits(lion, dog) :- needs(X, dog), needs(X, lion).",
        "description": "If something needs the dog and it needs the lion then the lion visits the dog."
    },
    {
        "id": 4449,
        "statement": "likes(X, cow) :- is(X, big), needs(X, cat).",
        "description": "If something is big and it needs the cat then it likes the cow."
    },
    {
        "id": 4450,
        "statement": "is(X, big) :- is(X, nice), is(X, blue).",
        "description": "All nice, blue people are big."
    },
    {
        "id": 4451,
        "statement": "is(X, nice) :- is(X, white), is(X, blue).",
        "description": "White, blue people are nice."
    },
    {
        "id": 4452,
        "statement": "is(X, young) :- is(X, nice).",
        "description": "If someone is nice then they are young."
    },
    {
        "id": 4453,
        "statement": "is(X, white) :- is(X, young).",
        "description": "If someone is young then they are white."
    },
    {
        "id": 4454,
        "statement": "is(X, young) :- is(X, nice), is(X, quiet).",
        "description": "Nice, quiet people are young."
    },
    {
        "id": 4455,
        "statement": "is(X, blue) :- is(X, white), is(X, nice).",
        "description": "All white, nice people are blue."
    },
    {
        "id": 4456,
        "statement": "likes(bald_eagle, squirrel).",
        "description": "The bald eagle likes the squirrel."
    },
    {
        "id": 4457,
        "statement": "is(X, nice) :- is(X, young).",
        "description": "All young people are nice."
    },
    {
        "id": 4458,
        "statement": "is(X, blue) :- sees(X, mouse), is(X, red).",
        "description": "If someone sees the mouse and they are red then they are blue."
    },
    {
        "id": 4459,
        "statement": "likes(rabbit, squirrel) :- sees(X, mouse), likes(mouse, rabbit).",
        "description": "If someone sees the mouse and the mouse likes the rabbit then the rabbit likes the squirrel."
    },
    {
        "id": 4460,
        "statement": "is(mouse, red) :- likes(bald_eagle, mouse).",
        "description": "If the bald eagle likes the mouse then the mouse is red."
    },
    {
        "id": 4461,
        "statement": "eats(X, mouse) :- is(X, blue).",
        "description": "If someone is blue then they eat the mouse."
    },
    {
        "id": 4462,
        "statement": "eats(X, squirrel) :- is(X, nice), likes(X, squirrel).",
        "description": "If someone is nice and they like the squirrel then they eat the squirrel."
    },
    {
        "id": 4463,
        "statement": "likes(mouse, squirrel) :- likes(X, mouse).",
        "description": "If someone likes the mouse then the mouse likes the squirrel."
    },
    {
        "id": 4464,
        "statement": "likes(X, mouse) :- eats(X, squirrel).",
        "description": "If someone eats the squirrel then they like the mouse."
    },
    {
        "id": 4465,
        "statement": "eats(X, cow) :- chases(X, lion), chases(X, bear).",
        "description": "If something chases the lion and it chases the bear then it eats the cow."
    },
    {
        "id": 4466,
        "statement": "eats(X, cow) :- eats(X, bear).",
        "description": "If something eats the bear then it eats the cow."
    },
    {
        "id": 4467,
        "statement": "is(X, cold) :- chases(X, rabbit), chases(X, cow).",
        "description": "If something chases the rabbit and it chases the cow then it is cold."
    },
    {
        "id": 4468,
        "statement": "is(X, red) :- chases(X, lion).",
        "description": "If something chases the lion then it is red."
    },
    {
        "id": 4469,
        "statement": "chases(rabbit, lion) :- visits(X, rabbit), is(rabbit, big).",
        "description": "If something visits the rabbit and the rabbit is big then the rabbit chases the lion."
    },
    {
        "id": 4470,
        "statement": "chases(X, bear) :- chases(X, lion), is(lion, young).",
        "description": "If something chases the lion and the lion is young then it chases the bear."
    },
    {
        "id": 4471,
        "statement": "is(X, young) :- eats(X, cow).",
        "description": "If something eats the cow then it is young."
    },
    {
        "id": 4472,
        "statement": "is(X, rough) :- is(X, nice).",
        "description": "All nice things are rough."
    },
    {
        "id": 4473,
        "statement": "is(X, rough) :- is(X, white).",
        "description": "All white things are rough."
    },
    {
        "id": 4474,
        "statement": "is(X, white) :- is(X, cold), is(X, blue).",
        "description": "All cold, blue things are white."
    },
    {
        "id": 4475,
        "statement": "is(gary, green) :- is(gary, nice).",
        "description": "If Gary is nice then Gary is green."
    },
    {
        "id": 4476,
        "statement": "is(X, blue) :- is(X, white).",
        "description": "White things are blue."
    },
    {
        "id": 4477,
        "statement": "is(X, green) :- is(X, white), is(X, cold).",
        "description": "If something is white and cold then it is green."
    },
    {
        "id": 4478,
        "statement": "is(X, smart) :- is(X, blue), is(X, round).",
        "description": "All blue, round things are smart."
    },
    {
        "id": 4479,
        "statement": "is(X, furry) :- is(X, smart).",
        "description": "All smart things are furry."
    },
    {
        "id": 4480,
        "statement": "is(X, blue) :- is(X, white), is(X, big).",
        "description": "All white, big things are blue."
    },
    {
        "id": 4481,
        "statement": "is(X, quiet) :- is(X, round), is(X, white).",
        "description": "If something is round and white then it is quiet."
    },
    {
        "id": 4482,
        "statement": "likes(X, cat) :- visits(X, mouse).",
        "description": "If someone visits the mouse then they like the cat."
    },
    {
        "id": 4483,
        "statement": "likes(X, cat) :- eats(X, bald_eagle), is(X, nice).",
        "description": "If someone eats the bald eagle and they are nice then they like the cat."
    },
    {
        "id": 4484,
        "statement": "eats(X, bald_eagle) :- visits(X, mouse), eats(mouse, lion).",
        "description": "If someone visits the mouse and the mouse eats the lion then they eat the bald eagle."
    },
    {
        "id": 4485,
        "statement": "eats(X, lion) :- likes(X, lion).",
        "description": "If someone likes the lion then they eat the lion."
    },
    {
        "id": 4486,
        "statement": "is(mouse, kind) :- visits(X, mouse).",
        "description": "If someone visits the mouse then the mouse is kind."
    },
    {
        "id": 4487,
        "statement": "likes(X, lion) :- is(X, round).",
        "description": "If someone is round then they like the lion."
    },
    {
        "id": 4488,
        "statement": "likes(mouse, lion) :- likes(X, mouse).",
        "description": "If someone likes the mouse then the mouse likes the lion."
    },
    {
        "id": 4489,
        "statement": "visits(lion, mouse) :- eats(X, lion).",
        "description": "If someone eats the lion then the lion visits the mouse."
    },
    {
        "id": 4490,
        "statement": "likes(X, mouse) :- visits(X, lion), eats(X, mouse).",
        "description": "If someone visits the lion and they eat the mouse then they like the mouse."
    },
    {
        "id": 4491,
        "statement": "is(X, red) :- likes(X, mouse).",
        "description": "If something likes the mouse then it is red."
    },
    {
        "id": 4492,
        "statement": "is(dog, kind) :- visits(X, dog), not is(dog, green).",
        "description": "If something visits the dog and the dog is not green then the dog is kind."
    },
    {
        "id": 4493,
        "statement": "is(bear, cold) :- sees(X, bear), visits(bear, mouse).",
        "description": "If something sees the bear and the bear visits the mouse then the bear is cold."
    },
    {
        "id": 4494,
        "statement": "likes(X, mouse) :- is(X, green).",
        "description": "If something is green then it likes the mouse."
    },
    {
        "id": 4495,
        "statement": "visits(bear, dog) :- sees(X, bear).",
        "description": "If something sees the bear then the bear visits the dog."
    },
    {
        "id": 4496,
        "statement": "likes(X, bald_eagle) :- is(X, kind).",
        "description": "If something is kind then it likes the bald eagle."
    },
    {
        "id": 4497,
        "statement": "visits(X, bear) :- visits(X, dog), visits(dog, mouse).",
        "description": "If something visits the dog and the dog visits the mouse then it visits the bear."
    },
    {
        "id": 4498,
        "statement": "sees(X, bald_eagle) :- likes(X, bear), not is(X, green).",
        "description": "If something likes the bear and it is not green then it sees the bald eagle."
    },
    {
        "id": 4499,
        "statement": "is(X, young) :- is(X, rough), is(X, quiet).",
        "description": "Rough, quiet things are young."
    },
    {
        "id": 4500,
        "statement": "is(X, furry) :- is(X, young), is(X, cold).",
        "description": "If something is young and cold then it is furry."
    },
    {
        "id": 4501,
        "statement": "is(X, young) :- is(X, round), is(X, smart).",
        "description": "Round, smart things are young."
    },
    {
        "id": 4502,
        "statement": "is(erin, rough) :- is(erin, young), is(erin, smart).",
        "description": "If Erin is young and Erin is smart then Erin is rough."
    },
    {
        "id": 4503,
        "statement": "is(X, smart) :- is(X, rough), is(X, cold).",
        "description": "Rough, cold things are smart."
    },
    {
        "id": 4504,
        "statement": "is(X, red) :- is(X, rough).",
        "description": "If something is rough then it is red."
    },
    {
        "id": 4505,
        "statement": "is(X, blue) :- is(X, red), is(X, smart).",
        "description": "All red, smart things are blue."
    },
    {
        "id": 4506,
        "statement": "is(X, smart) :- is(X, furry).",
        "description": "All furry things are smart."
    },
    {
        "id": 4507,
        "statement": "is(X, smart) :- is(X, furry), is(X, quiet).",
        "description": "Furry, quiet things are smart."
    },
    {
        "id": 4508,
        "statement": "is(X, rough) :- is(X, blue).",
        "description": "If something is blue then it is rough."
    },
    {
        "id": 4509,
        "statement": "is(bob, smart) :- is(bob, quiet), is(bob, kind).",
        "description": "If Bob is quiet and Bob is kind then Bob is smart."
    },
    {
        "id": 4510,
        "statement": "is(X, kind) :- is(X, quiet), is(X, red).",
        "description": "Quiet, red things are kind."
    },
    {
        "id": 4511,
        "statement": "is(bob, kind) :- is(bob, blue).",
        "description": "If Bob is blue then Bob is kind."
    },
    {
        "id": 4512,
        "statement": "is(X, young) :- is(X, blue).",
        "description": "If something is blue then it is young."
    },
    {
        "id": 4513,
        "statement": "is(X, blue) :- is(X, smart), is(X, green).",
        "description": "If something is smart and green then it is blue."
    },
    {
        "id": 4514,
        "statement": "is(X, red) :- is(X, kind), is(X, smart).",
        "description": "All kind, smart things are red."
    },
    {
        "id": 4515,
        "statement": "is(X, white) :- is(X, rough).",
        "description": "All rough people are white."
    },
    {
        "id": 4516,
        "statement": "is(X, white) :- is(X, blue), is(X, smart).",
        "description": "If something is blue and smart then it is white."
    },
    {
        "id": 4517,
        "statement": "is(X, blue) :- is(X, kind).",
        "description": "All kind things are blue."
    },
    {
        "id": 4518,
        "statement": "is(X, kind) :- is(X, smart).",
        "description": "If something is smart then it is kind."
    },
    {
        "id": 4519,
        "statement": "is(X, big) :- is(X, nice), is(X, cold).",
        "description": "Nice, cold things are big."
    },
    {
        "id": 4520,
        "statement": "is(X, furry) :- is(X, green), is(X, round).",
        "description": "If someone is green and round then they are furry."
    },
    {
        "id": 4521,
        "statement": "is(gary, quiet) :- is(gary, nice).",
        "description": "If Gary is nice then Gary is quiet."
    },
    {
        "id": 4522,
        "statement": "is(X, round) :- is(X, quiet), is(X, rough).",
        "description": "All quiet, rough people are round."
    },
    {
        "id": 4523,
        "statement": "is(X, green) :- is(X, cold), is(X, quiet).",
        "description": "Cold, quiet people are green."
    },
    {
        "id": 4524,
        "statement": "is(X, kind) :- is(X, nice), is(X, white).",
        "description": "Nice, white things are kind."
    },
    {
        "id": 4525,
        "statement": "is(harry, kind) :- is(harry, big), is(harry, white).",
        "description": "If Harry is big and Harry is white then Harry is kind."
    },
    {
        "id": 4526,
        "statement": "is(X, young) :- is(X, white), is(X, smart).",
        "description": "If something is white and smart then it is young."
    },
    {
        "id": 4527,
        "statement": "is(charlie, red) :- is(charlie, nice).",
        "description": "If Charlie is nice then Charlie is red."
    },
    {
        "id": 4528,
        "statement": "is(X, big) :- is(X, kind), not is(X, smart).",
        "description": "If something is kind and not smart then it is big."
    },
    {
        "id": 4529,
        "statement": "is(X, quiet) :- is(X, furry), is(X, young).",
        "description": "All furry, young people are quiet."
    },
    {
        "id": 4530,
        "statement": "is(X, young) :- is(X, furry), is(X, white).",
        "description": "If someone is furry and white then they are young."
    },
    {
        "id": 4531,
        "statement": "is(X, blue) :- is(X, furry), is(X, green).",
        "description": "All furry, green people are blue."
    },
    {
        "id": 4532,
        "statement": "is(harry, blue) :- is(harry, quiet), is(harry, furry).",
        "description": "If Harry is quiet and Harry is furry then Harry is blue."
    },
    {
        "id": 4533,
        "statement": "is(X, quiet) :- is(X, young), is(X, furry).",
        "description": "Young, furry people are quiet."
    },
    {
        "id": 4534,
        "statement": "is(X, white) :- is(X, furry).",
        "description": "Furry people are white."
    },
    {
        "id": 4535,
        "statement": "is(X, furry) :- is(X, blue), is(X, green).",
        "description": "Blue, green people are furry."
    },
    {
        "id": 4536,
        "statement": "needs(cow, tiger).",
        "description": "The cow needs the tiger."
    },
    {
        "id": 4537,
        "statement": "needs(bear, cow) :- eats(X, bear), likes(X, tiger).",
        "description": "If someone eats the bear and they like the tiger then the bear needs the cow."
    },
    {
        "id": 4538,
        "statement": "needs(X, cow) :- eats(X, bear).",
        "description": "If someone eats the bear then they need the cow."
    },
    {
        "id": 4539,
        "statement": "needs(X, tiger) :- needs(X, cow).",
        "description": "If someone needs the cow then they need the tiger."
    },
    {
        "id": 4540,
        "statement": "needs(cow, dog) :- needs(X, cow), is(cow, cold).",
        "description": "If someone needs the cow and the cow is cold then the cow needs the dog."
    },
    {
        "id": 4541,
        "statement": "likes(X, tiger) :- needs(X, tiger), is(X, big).",
        "description": "If someone needs the tiger and they are big then they like the tiger."
    },
    {
        "id": 4542,
        "statement": "needs(rabbit, bear) :- is(rabbit, green), needs(rabbit, lion).",
        "description": "If the rabbit is green and the rabbit needs the lion then the rabbit needs the bear."
    },
    {
        "id": 4543,
        "statement": "sees(X, lion) :- is(X, kind).",
        "description": "If someone is kind then they see the lion."
    },
    {
        "id": 4544,
        "statement": "sees(X, lion) :- chases(X, rabbit), needs(X, rabbit).",
        "description": "If someone chases the rabbit and they need the rabbit then they see the lion."
    },
    {
        "id": 4545,
        "statement": "is(X, kind) :- is(X, green).",
        "description": "Green people are kind."
    },
    {
        "id": 4546,
        "statement": "sees(bear, lion) :- needs(X, bear).",
        "description": "If someone needs the bear then the bear sees the lion."
    },
    {
        "id": 4547,
        "statement": "sees(rabbit, lion) :- not is(rabbit, blue).",
        "description": "If the rabbit is not blue then the rabbit sees the lion."
    },
    {
        "id": 4548,
        "statement": "is(X, green) :- chases(X, bear).",
        "description": "If someone chases the bear then they are green."
    },
    {
        "id": 4549,
        "statement": "chases(lion, bear) :- is(X, kind), chases(X, lion).",
        "description": "If someone is kind and they chase the lion then the lion chases the bear."
    },
    {
        "id": 4550,
        "statement": "chases(bear, lion) :- is(bear, round).",
        "description": "If the bear is round then the bear chases the lion."
    },
    {
        "id": 4551,
        "statement": "is(dave, quiet) :- is(dave, nice), not is(dave, blue).",
        "description": "If Dave is nice and Dave is not blue then Dave is quiet."
    },
    {
        "id": 4552,
        "statement": "is(X, big) :- is(X, quiet), is(X, green).",
        "description": "If someone is quiet and green then they are big."
    },
    {
        "id": 4553,
        "statement": "is(X, big) :- is(X, quiet), is(X, furry).",
        "description": "Quiet, furry people are big."
    },
    {
        "id": 4554,
        "statement": "is(X, nice) :- is(X, big), is(X, quiet).",
        "description": "If someone is big and quiet then they are nice."
    },
    {
        "id": 4555,
        "statement": "is(X, smart) :- is(X, quiet), is(X, furry).",
        "description": "All quiet, furry people are smart."
    },
    {
        "id": 4556,
        "statement": "is(bob, white) :- is(bob, big), is(bob, kind).",
        "description": "If Bob is big and Bob is kind then Bob is white."
    },
    {
        "id": 4557,
        "statement": "is(X, quiet) :- is(X, furry), is(X, white).",
        "description": "Furry, white people are quiet."
    },
    {
        "id": 4558,
        "statement": "is(X, big) :- is(X, young).",
        "description": "Young people are big."
    },
    {
        "id": 4559,
        "statement": "is(X, young) :- is(X, quiet), is(X, furry).",
        "description": "All quiet, furry people are young."
    },
    {
        "id": 4560,
        "statement": "is(X, white) :- is(X, quiet), is(X, big).",
        "description": "Quiet, big people are white."
    },
    {
        "id": 4561,
        "statement": "is(X, young) :- is(X, quiet), is(X, kind).",
        "description": "If someone is quiet and kind then they are young."
    },
    {
        "id": 4562,
        "statement": "is(X, furry) :- is(X, quiet), is(X, white).",
        "description": "All quiet, white people are furry."
    },
    {
        "id": 4563,
        "statement": "is(X, blue) :- is(X, young), is(X, kind).",
        "description": "All young, kind people are blue."
    },
    {
        "id": 4564,
        "statement": "is(X, white) :- is(X, quiet).",
        "description": "All quiet people are white."
    },
    {
        "id": 4565,
        "statement": "likes(lion, tiger) :- likes(X, lion).",
        "description": "If someone likes the lion then the lion likes the tiger."
    },
    {
        "id": 4566,
        "statement": "eats(X, tiger) :- likes(X, cow).",
        "description": "If someone likes the cow then they eat the tiger."
    },
    {
        "id": 4567,
        "statement": "is(X, green) :- chases(X, tiger).",
        "description": "If someone chases the tiger then they are green."
    },
    {
        "id": 4568,
        "statement": "likes(tiger, bald_eagle) :- likes(tiger, lion).",
        "description": "If the tiger likes the lion then the tiger likes the bald eagle."
    },
    {
        "id": 4569,
        "statement": "is(lion, big) :- chases(lion, bald_eagle).",
        "description": "If the lion chases the bald eagle then the lion is big."
    },
    {
        "id": 4570,
        "statement": "chases(X, tiger) :- likes(X, tiger).",
        "description": "If someone likes the tiger then they chase the tiger."
    },
    {
        "id": 4571,
        "statement": "chases(X, cow) :- is(X, cold), eats(X, tiger).",
        "description": "If someone is cold and they eat the tiger then they chase the cow."
    },
    {
        "id": 4572,
        "statement": "sees(X, cow) :- sees(X, tiger).",
        "description": "If someone sees the tiger then they see the cow."
    },
    {
        "id": 4573,
        "statement": "sees(X, cat) :- is(X, kind), not is(X, round).",
        "description": "If someone is kind and not round then they see the cat."
    },
    {
        "id": 4574,
        "statement": "sees(X, cat) :- is(X, kind).",
        "description": "If someone is kind then they see the cat."
    },
    {
        "id": 4575,
        "statement": "eats(X, tiger) :- sees(X, cow).",
        "description": "If someone sees the cow then they eat the tiger."
    },
    {
        "id": 4576,
        "statement": "is(cat, kind) :- sees(X, cat), eats(X, tiger).",
        "description": "If someone sees the cat and they eat the tiger then the cat is kind."
    },
    {
        "id": 4577,
        "statement": "is(X, kind) :- visits(X, cow), is(X, green).",
        "description": "If someone visits the cow and they are green then they are kind."
    },
    {
        "id": 4578,
        "statement": "sees(X, tiger) :- sees(X, cat).",
        "description": "If someone sees the cat then they see the tiger."
    },
    {
        "id": 4579,
        "statement": "eats(bear, cow) :- eats(X, bear).",
        "description": "If someone eats the bear then the bear eats the cow."
    },
    {
        "id": 4580,
        "statement": "visits(cow, cat) :- sees(cat, cow).",
        "description": "If the cat sees the cow then the cow visits the cat."
    },
    {
        "id": 4581,
        "statement": "is(X, young) :- is(X, green), is(X, white).",
        "description": "All green, white people are young."
    },
    {
        "id": 4582,
        "statement": "is(dave, round) :- is(dave, smart), is(dave, young).",
        "description": "If Dave is smart and Dave is young then Dave is round."
    },
    {
        "id": 4583,
        "statement": "is(X, cold) :- is(X, young), is(X, smart).",
        "description": "Young, smart people are cold."
    },
    {
        "id": 4584,
        "statement": "is(X, smart) :- is(X, young).",
        "description": "All young people are smart."
    },
    {
        "id": 4585,
        "statement": "is(X, white) :- is(X, green).",
        "description": "Green people are white."
    },
    {
        "id": 4586,
        "statement": "is(X, green) :- is(X, young), is(X, rough).",
        "description": "If someone is young and rough then they are green."
    },
    {
        "id": 4587,
        "statement": "is(X, rough) :- is(X, round), is(X, green).",
        "description": "If someone is round and green then they are rough."
    },
    {
        "id": 4588,
        "statement": "needs(rabbit, tiger) :- visits(X, rabbit).",
        "description": "If someone visits the rabbit then the rabbit needs the tiger."
    },
    {
        "id": 4589,
        "statement": "needs(X, rabbit) :- visits(X, cat).",
        "description": "If someone visits the cat then they need the rabbit."
    },
    {
        "id": 4590,
        "statement": "chases(X, rabbit) :- is(X, nice).",
        "description": "If someone is nice then they chase the rabbit."
    },
    {
        "id": 4591,
        "statement": "needs(X, rabbit) :- is(X, kind).",
        "description": "If someone is kind then they need the rabbit."
    },
    {
        "id": 4592,
        "statement": "is(rabbit, green) :- is(X, round), chases(X, rabbit).",
        "description": "If someone is round and they chase the rabbit then the rabbit is green."
    },
    {
        "id": 4593,
        "statement": "is(X, kind) :- visits(X, rabbit), is(rabbit, green).",
        "description": "If someone visits the rabbit and the rabbit is green then they are kind."
    },
    {
        "id": 4594,
        "statement": "is(X, round) :- needs(X, rabbit).",
        "description": "If someone needs the rabbit then they are round."
    },
    {
        "id": 4595,
        "statement": "needs(X, cow) :- is(X, rough).",
        "description": "If someone is rough then they need the cow."
    },
    {
        "id": 4596,
        "statement": "chases(rabbit, cat) :- visits(X, rabbit), visits(rabbit, cat).",
        "description": "If someone visits the rabbit and the rabbit visits the cat then the rabbit chases the cat."
    },
    {
        "id": 4597,
        "statement": "is(dave, round) :- is(dave, furry).",
        "description": "If Dave is furry then Dave is round."
    },
    {
        "id": 4598,
        "statement": "is(dave, kind) :- is(dave, green).",
        "description": "If Dave is green then Dave is kind."
    },
    {
        "id": 4599,
        "statement": "is(dave, white) :- is(dave, smart).",
        "description": "If Dave is smart then Dave is white."
    },
    {
        "id": 4600,
        "statement": "is(X, white) :- is(X, kind), not is(X, big).",
        "description": "If something is kind and not big then it is white."
    },
    {
        "id": 4601,
        "statement": "is(charlie, round) :- is(charlie, furry), is(charlie, big).",
        "description": "If Charlie is furry and Charlie is big then Charlie is round."
    },
    {
        "id": 4602,
        "statement": "is(charlie, furry) :- is(charlie, smart), not is(charlie, white).",
        "description": "If Charlie is smart and Charlie is not white then Charlie is furry."
    },
    {
        "id": 4603,
        "statement": "is(X, round) :- is(X, nice), is(X, big).",
        "description": "If something is nice and big then it is round."
    },
    {
        "id": 4604,
        "statement": "is(X, cold) :- is(X, round), is(X, smart).",
        "description": "All round, smart things are cold."
    },
    {
        "id": 4605,
        "statement": "is(dave, blue) :- is(dave, red), is(dave, round).",
        "description": "If Dave is red and Dave is round then Dave is blue."
    },
    {
        "id": 4606,
        "statement": "is(X, blue) :- is(X, nice), is(X, round).",
        "description": "All nice, round things are blue."
    },
    {
        "id": 4607,
        "statement": "is(X, red) :- is(X, blue).",
        "description": "If something is blue then it is red."
    },
    {
        "id": 4608,
        "statement": "is(X, furry) :- is(X, kind), is(X, cold).",
        "description": "Kind, cold things are furry."
    },
    {
        "id": 4609,
        "statement": "is(X, young) :- is(X, blue), is(X, furry).",
        "description": "All blue, furry things are young."
    },
    {
        "id": 4610,
        "statement": "is(X, smart) :- is(X, young), is(X, kind).",
        "description": "All young, kind things are smart."
    },
    {
        "id": 4611,
        "statement": "is(X, young) :- is(X, cold), is(X, blue).",
        "description": "Cold, blue things are young."
    },
    {
        "id": 4612,
        "statement": "is(X, cold) :- is(X, young), is(X, big).",
        "description": "If something is young and big then it is cold."
    },
    {
        "id": 4613,
        "statement": "is(erin, furry) :- is(erin, young).",
        "description": "If Erin is young then Erin is furry."
    },
    {
        "id": 4614,
        "statement": "is(X, big) :- is(X, smart), is(X, young).",
        "description": "All smart, young things are big."
    },
    {
        "id": 4615,
        "statement": "is(X, rough) :- is(X, quiet), is(X, round).",
        "description": "All quiet, round things are rough."
    },
    {
        "id": 4616,
        "statement": "is(gary, blue) :- is(gary, rough).",
        "description": "If Gary is rough then Gary is blue."
    },
    {
        "id": 4617,
        "statement": "is(X, quiet) :- is(X, smart), is(X, nice).",
        "description": "All smart, nice things are quiet."
    },
    {
        "id": 4618,
        "statement": "is(gary, smart) :- is(gary, rough), is(gary, quiet).",
        "description": "If Gary is rough and Gary is quiet then Gary is smart."
    },
    {
        "id": 4619,
        "statement": "is(X, round) :- is(X, nice), is(X, blue).",
        "description": "If something is nice and blue then it is round."
    },
    {
        "id": 4620,
        "statement": "is(bear, cold) :- visits(X, bear).",
        "description": "If someone visits the bear then the bear is cold."
    },
    {
        "id": 4621,
        "statement": "visits(rabbit, dog) :- eats(lion, bear), sees(lion, rabbit).",
        "description": "If the lion eats the bear and the lion sees the rabbit then the rabbit visits the dog."
    },
    {
        "id": 4622,
        "statement": "sees(X, dog) :- sees(X, bear).",
        "description": "If someone sees the bear then they see the dog."
    },
    {
        "id": 4623,
        "statement": "eats(rabbit, lion) :- is(rabbit, rough), sees(rabbit, lion).",
        "description": "If the rabbit is rough and the rabbit sees the lion then the rabbit eats the lion."
    },
    {
        "id": 4624,
        "statement": "sees(rabbit, lion) :- visits(X, rabbit), visits(rabbit, dog).",
        "description": "If someone visits the rabbit and the rabbit visits the dog then the rabbit sees the lion."
    },
    {
        "id": 4625,
        "statement": "visits(dog, rabbit) :- eats(bear, lion), not visits(bear, dog).",
        "description": "If the bear eats the lion and the bear does not visit the dog then the dog visits the rabbit."
    },
    {
        "id": 4626,
        "statement": "sees(rabbit, bear) :- eats(rabbit, lion).",
        "description": "If the rabbit eats the lion then the rabbit sees the bear."
    },
    {
        "id": 4627,
        "statement": "is(X, nice) :- is(X, round).",
        "description": "Round things are nice."
    },
    {
        "id": 4628,
        "statement": "visits(X, squirrel) :- sees(X, squirrel), visits(X, mouse).",
        "description": "If something sees the squirrel and it visits the mouse then it visits the squirrel."
    },
    {
        "id": 4629,
        "statement": "visits(X, mouse) :- likes(X, tiger).",
        "description": "If something likes the tiger then it visits the mouse."
    },
    {
        "id": 4630,
        "statement": "likes(X, squirrel) :- is(X, nice).",
        "description": "If something is nice then it likes the squirrel."
    },
    {
        "id": 4631,
        "statement": "sees(bald_eagle, squirrel) :- visits(X, bald_eagle), is(X, round).",
        "description": "If something visits the bald eagle and it is round then the bald eagle sees the squirrel."
    },
    {
        "id": 4632,
        "statement": "is(squirrel, young) :- is(X, rough), likes(X, squirrel).",
        "description": "If something is rough and it likes the squirrel then the squirrel is young."
    },
    {
        "id": 4633,
        "statement": "likes(X, bald_eagle) :- likes(X, mouse).",
        "description": "If something likes the mouse then it likes the bald eagle."
    },
    {
        "id": 4634,
        "statement": "visits(cow, rabbit) :- eats(X, cow).",
        "description": "If someone eats the cow then the cow visits the rabbit."
    },
    {
        "id": 4635,
        "statement": "visits(bear, rabbit) :- likes(X, bear).",
        "description": "If someone likes the bear then the bear visits the rabbit."
    },
    {
        "id": 4636,
        "statement": "eats(rabbit, cow) :- visits(bear, rabbit).",
        "description": "If the bear visits the rabbit then the rabbit eats the cow."
    },
    {
        "id": 4637,
        "statement": "eats(X, rabbit) :- visits(X, rabbit), is(rabbit, round).",
        "description": "If someone visits the rabbit and the rabbit is round then they eat the rabbit."
    },
    {
        "id": 4638,
        "statement": "is(X, rough) :- visits(X, rabbit).",
        "description": "If someone visits the rabbit then they are rough."
    },
    {
        "id": 4639,
        "statement": "eats(X, rabbit) :- is(X, rough).",
        "description": "If someone is rough then they eat the rabbit."
    },
    {
        "id": 4640,
        "statement": "visits(lion, cow) :- visits(rabbit, lion), is(rabbit, young).",
        "description": "If the rabbit visits the lion and the rabbit is young then the lion visits the cow."
    },
    {
        "id": 4641,
        "statement": "visits(X, cow) :- is(X, young).",
        "description": "If someone is young then they visit the cow."
    },
    {
        "id": 4642,
        "statement": "is(bear, blue) :- eats(X, bear).",
        "description": "If someone eats the bear then the bear is blue."
    },
    {
        "id": 4643,
        "statement": "is(X, smart) :- is(X, kind), is(X, green).",
        "description": "If someone is kind and green then they are smart."
    },
    {
        "id": 4644,
        "statement": "is(X, smart) :- is(X, rough).",
        "description": "If someone is rough then they are smart."
    },
    {
        "id": 4645,
        "statement": "is(X, white) :- is(X, green), is(X, rough).",
        "description": "Green, rough people are white."
    },
    {
        "id": 4646,
        "statement": "is(X, big) :- is(X, round), is(X, smart).",
        "description": "Round, smart people are big."
    },
    {
        "id": 4647,
        "statement": "is(anne, green) :- is(anne, kind).",
        "description": "If Anne is kind then Anne is green."
    },
    {
        "id": 4648,
        "statement": "is(X, green) :- is(X, big).",
        "description": "All big people are green."
    },
    {
        "id": 4649,
        "statement": "is(X, white) :- is(X, young), is(X, blue).",
        "description": "All young, blue people are white."
    },
    {
        "id": 4650,
        "statement": "is(X, big) :- is(X, green), is(X, round).",
        "description": "Green, round people are big."
    },
    {
        "id": 4651,
        "statement": "is(X, round) :- is(X, white), is(X, young).",
        "description": "If someone is white and young then they are round."
    },
    {
        "id": 4652,
        "statement": "is(X, green) :- is(X, young), is(X, round).",
        "description": "If someone is young and round then they are green."
    },
    {
        "id": 4653,
        "statement": "is(fiona, kind) :- is(fiona, rough), is(fiona, young).",
        "description": "If Fiona is rough and Fiona is young then Fiona is kind."
    },
    {
        "id": 4654,
        "statement": "is(X, kind) :- is(X, blue), is(X, rough).",
        "description": "All blue, rough things are kind."
    },
    {
        "id": 4655,
        "statement": "is(X, rough) :- is(X, blue), is(X, quiet).",
        "description": "Blue, quiet things are rough."
    },
    {
        "id": 4656,
        "statement": "is(fiona, blue) :- is(fiona, kind).",
        "description": "If Fiona is kind then Fiona is blue."
    },
    {
        "id": 4657,
        "statement": "is(X, green) :- is(X, young), is(X, blue).",
        "description": "If something is young and blue then it is green."
    },
    {
        "id": 4658,
        "statement": "is(X, nice) :- is(X, kind).",
        "description": "All kind things are nice."
    },
    {
        "id": 4659,
        "statement": "is(bob, young) :- is(bob, nice).",
        "description": "If Bob is nice then Bob is young."
    },
    {
        "id": 4660,
        "statement": "is(X, kind) :- is(X, red), is(X, smart).",
        "description": "All red, smart people are kind."
    },
    {
        "id": 4661,
        "statement": "is(X, kind) :- is(X, round), is(X, green).",
        "description": "Round, green people are kind."
    },
    {
        "id": 4662,
        "statement": "is(fiona, kind) :- is(fiona, smart).",
        "description": "If Fiona is smart then Fiona is kind."
    },
    {
        "id": 4663,
        "statement": "is(bob, red) :- is(bob, kind).",
        "description": "If Bob is kind then Bob is red."
    },
    {
        "id": 4664,
        "statement": "is(X, kind) :- is(X, round).",
        "description": "If someone is round then they are kind."
    },
    {
        "id": 4665,
        "statement": "is(X, smart) :- is(X, red).",
        "description": "All red people are smart."
    },
    {
        "id": 4666,
        "statement": "is(X, round) :- is(X, green).",
        "description": "Green people are round."
    },
    {
        "id": 4667,
        "statement": "is(X, red) :- eats(X, tiger).",
        "description": "If something eats the tiger then it is red."
    },
    {
        "id": 4668,
        "statement": "eats(rabbit, tiger) :- chases(X, rabbit).",
        "description": "If something chases the rabbit then the rabbit eats the tiger."
    },
    {
        "id": 4669,
        "statement": "chases(cat, bald_eagle) :- eats(cat, tiger).",
        "description": "If the cat eats the tiger then the cat chases the bald eagle."
    },
    {
        "id": 4670,
        "statement": "eats(X, cat) :- is(X, red).",
        "description": "If something is red then it eats the cat."
    },
    {
        "id": 4671,
        "statement": "eats(bald_eagle, tiger) :- chases(X, bald_eagle).",
        "description": "If something chases the bald eagle then the bald eagle eats the tiger."
    },
    {
        "id": 4672,
        "statement": "chases(cat, bald_eagle) :- eats(X, cat).",
        "description": "If something eats the cat then the cat chases the bald eagle."
    },
    {
        "id": 4673,
        "statement": "eats(bald_eagle, rabbit) :- eats(X, bald_eagle), is(X, round).",
        "description": "If something eats the bald eagle and it is round then the bald eagle eats the rabbit."
    },
    {
        "id": 4674,
        "statement": "is(X, furry) :- is(X, white), is(X, smart).",
        "description": "White, smart things are furry."
    },
    {
        "id": 4675,
        "statement": "is(X, nice) :- is(X, blue), is(X, big).",
        "description": "Blue, big things are nice."
    },
    {
        "id": 4676,
        "statement": "is(X, smart) :- is(X, big).",
        "description": "Big things are smart."
    },
    {
        "id": 4677,
        "statement": "is(X, nice) :- is(X, blue), is(X, white).",
        "description": "Blue, white things are nice."
    },
    {
        "id": 4678,
        "statement": "is(X, blue) :- is(X, furry).",
        "description": "All furry things are blue."
    },
    {
        "id": 4679,
        "statement": "is(X, kind) :- is(X, furry), is(X, nice).",
        "description": "All furry, nice things are kind."
    },
    {
        "id": 4680,
        "statement": "is(X, white) :- is(X, big), is(X, cold).",
        "description": "All big, cold people are white."
    },
    {
        "id": 4681,
        "statement": "is(X, kind) :- is(X, big), is(X, green).",
        "description": "If someone is big and green then they are kind."
    },
    {
        "id": 4682,
        "statement": "is(X, green) :- is(X, white), is(X, kind).",
        "description": "If someone is white and kind then they are green."
    },
    {
        "id": 4683,
        "statement": "visits(X, dog) :- sees(X, mouse).",
        "description": "If something sees the mouse then it visits the dog."
    },
    {
        "id": 4684,
        "statement": "is(X, nice) :- visits(X, rabbit).",
        "description": "If something visits the rabbit then it is nice."
    },
    {
        "id": 4685,
        "statement": "is(rabbit, nice) :- visits(cat, rabbit).",
        "description": "If the cat visits the rabbit then the rabbit is nice."
    },
    {
        "id": 4686,
        "statement": "is(X, blue) :- is(X, nice), eats(X, dog).",
        "description": "If something is nice and it eats the dog then it is blue."
    },
    {
        "id": 4687,
        "statement": "sees(rabbit, cat) :- eats(X, rabbit).",
        "description": "If something eats the rabbit then the rabbit sees the cat."
    },
    {
        "id": 4688,
        "statement": "visits(X, mouse) :- is(X, blue).",
        "description": "If something is blue then it visits the mouse."
    },
    {
        "id": 4689,
        "statement": "visits(dog, mouse) :- sees(X, dog).",
        "description": "If something sees the dog then the dog visits the mouse."
    },
    {
        "id": 4690,
        "statement": "is(mouse, blue) :- visits(rabbit, mouse).",
        "description": "If the rabbit visits the mouse then the mouse is blue."
    },
    {
        "id": 4691,
        "statement": "is(mouse, blue) :- visits(X, mouse), visits(mouse, cat).",
        "description": "If something visits the mouse and the mouse visits the cat then the mouse is blue."
    },
    {
        "id": 4692,
        "statement": "is(X, young) :- is(X, furry), is(X, rough).",
        "description": "Furry, rough things are young."
    },
    {
        "id": 4693,
        "statement": "is(X, blue) :- is(X, cold), not is(X, kind).",
        "description": "If something is cold and not kind then it is blue."
    },
    {
        "id": 4694,
        "statement": "is(X, rough) :- is(X, kind), is(X, furry).",
        "description": "Kind, furry things are rough."
    },
    {
        "id": 4695,
        "statement": "is(anne, blue) :- is(anne, young).",
        "description": "If Anne is young then Anne is blue."
    },
    {
        "id": 4696,
        "statement": "is(X, smart) :- is(X, cold), is(X, young).",
        "description": "All cold, young things are smart."
    },
    {
        "id": 4697,
        "statement": "is(fiona, rough) :- is(fiona, blue).",
        "description": "If Fiona is blue then Fiona is rough."
    },
    {
        "id": 4698,
        "statement": "is(bob, cold) :- is(bob, young).",
        "description": "If Bob is young then Bob is cold."
    },
    {
        "id": 4699,
        "statement": "is(rabbit, red) :- needs(X, mouse), eats(mouse, rabbit).",
        "description": "If someone needs the mouse and the mouse eats the rabbit then the rabbit is red."
    },
    {
        "id": 4700,
        "statement": "is(X, red) :- needs(X, mouse).",
        "description": "If someone needs the mouse then they are red."
    },
    {
        "id": 4701,
        "statement": "is(cat, young) :- needs(X, cat).",
        "description": "If someone needs the cat then the cat is young."
    },
    {
        "id": 4702,
        "statement": "needs(X, mouse) :- is(X, kind), is(X, green).",
        "description": "If someone is kind and green then they need the mouse."
    },
    {
        "id": 4703,
        "statement": "needs(X, cat) :- is(X, red).",
        "description": "If someone is red then they need the cat."
    },
    {
        "id": 4704,
        "statement": "needs(rabbit, mouse) :- needs(X, rabbit).",
        "description": "If someone needs the rabbit then the rabbit needs the mouse."
    },
    {
        "id": 4705,
        "statement": "eats(bald_eagle, cat) :- likes(rabbit, bald_eagle), likes(rabbit, cat).",
        "description": "If the rabbit likes the bald eagle and the rabbit likes the cat then the bald eagle eats the cat."
    },
    {
        "id": 4706,
        "statement": "is(X, red) :- is(X, smart).",
        "description": "All smart things are red."
    },
    {
        "id": 4707,
        "statement": "is(X, young) :- is(X, quiet), is(X, nice).",
        "description": "If something is quiet and nice then it is young."
    },
    {
        "id": 4708,
        "statement": "is(X, young) :- is(X, quiet), is(X, smart).",
        "description": "If something is quiet and smart then it is young."
    },
    {
        "id": 4709,
        "statement": "is(X, blue) :- is(X, red), is(X, quiet).",
        "description": "Red, quiet things are blue."
    },
    {
        "id": 4710,
        "statement": "is(X, blue) :- is(X, smart), is(X, red).",
        "description": "Smart, red things are blue."
    },
    {
        "id": 4711,
        "statement": "is(fiona, red) :- is(fiona, nice).",
        "description": "If Fiona is nice then Fiona is red."
    },
    {
        "id": 4712,
        "statement": "is(X, kind) :- is(X, young), is(X, red).",
        "description": "All young, red things are kind."
    },
    {
        "id": 4713,
        "statement": "is(X, quiet) :- is(X, blue).",
        "description": "All blue things are quiet."
    },
    {
        "id": 4714,
        "statement": "eats(mouse, cow).",
        "description": "The mouse eats the cow."
    },
    {
        "id": 4715,
        "statement": "likes(X, lion) :- needs(X, lion).",
        "description": "If someone needs the lion then they like the lion."
    },
    {
        "id": 4716,
        "statement": "likes(lion, mouse) :- eats(X, bear), eats(X, lion).",
        "description": "If someone eats the bear and they eat the lion then the lion likes the mouse."
    },
    {
        "id": 4717,
        "statement": "needs(X, lion) :- eats(X, cow).",
        "description": "If someone eats the cow then they need the lion."
    },
    {
        "id": 4718,
        "statement": "eats(X, mouse) :- eats(X, bear).",
        "description": "If someone eats the bear then they eat the mouse."
    },
    {
        "id": 4719,
        "statement": "is(X, blue) :- eats(X, lion).",
        "description": "If someone eats the lion then they are blue."
    },
    {
        "id": 4720,
        "statement": "needs(bear, lion) :- eats(X, bear), not is(bear, rough).",
        "description": "If someone eats the bear and the bear is not rough then the bear needs the lion."
    },
    {
        "id": 4721,
        "statement": "eats(X, bear) :- eats(X, lion).",
        "description": "If someone eats the lion then they eat the bear."
    },
    {
        "id": 4722,
        "statement": "eats(mouse, lion) :- likes(X, mouse), is(mouse, young).",
        "description": "If someone likes the mouse and the mouse is young then the mouse eats the lion."
    },
    {
        "id": 4723,
        "statement": "is(X, young) :- likes(X, lion).",
        "description": "If someone likes the lion then they are young."
    },
    {
        "id": 4724,
        "statement": "is(X, blue) :- sees(X, lion).",
        "description": "If someone sees the lion then they are blue."
    },
    {
        "id": 4725,
        "statement": "is(X, round) :- visits(X, squirrel).",
        "description": "If someone visits the squirrel then they are round."
    },
    {
        "id": 4726,
        "statement": "visits(X, squirrel) :- is(X, cold).",
        "description": "If someone is cold then they visit the squirrel."
    },
    {
        "id": 4727,
        "statement": "chases(X, bald_eagle) :- visits(X, cow).",
        "description": "If someone visits the cow then they chase the bald eagle."
    },
    {
        "id": 4728,
        "statement": "visits(X, cow) :- is(X, round).",
        "description": "If someone is round then they visit the cow."
    },
    {
        "id": 4729,
        "statement": "is(cow, round) :- chases(X, cow), chases(X, squirrel).",
        "description": "If someone chases the cow and they chase the squirrel then the cow is round."
    },
    {
        "id": 4730,
        "statement": "sees(X, cow) :- chases(X, bald_eagle).",
        "description": "If someone chases the bald eagle then they see the cow."
    },
    {
        "id": 4731,
        "statement": "visits(lion, bald_eagle) :- is(lion, young).",
        "description": "If the lion is young then the lion visits the bald eagle."
    },
    {
        "id": 4732,
        "statement": "is(X, green) :- is(X, blue).",
        "description": "All blue things are green."
    },
    {
        "id": 4733,
        "statement": "is(X, green) :- is(X, smart), is(X, young).",
        "description": "If something is smart and young then it is green."
    },
    {
        "id": 4734,
        "statement": "is(harry, red) :- is(harry, rough), is(harry, green).",
        "description": "If Harry is rough and Harry is green then Harry is red."
    },
    {
        "id": 4735,
        "statement": "is(X, big) :- is(X, smart), is(X, rough).",
        "description": "All smart, rough things are big."
    },
    {
        "id": 4736,
        "statement": "is(X, young) :- is(X, red), is(X, green).",
        "description": "All red, green things are young."
    },
    {
        "id": 4737,
        "statement": "is(X, red) :- is(X, green).",
        "description": "Green things are red."
    },
    {
        "id": 4738,
        "statement": "is(X, young) :- is(X, white).",
        "description": "If something is white then it is young."
    },
    {
        "id": 4739,
        "statement": "is(X, round) :- is(X, young), is(X, green).",
        "description": "If something is young and green then it is round."
    },
    {
        "id": 4740,
        "statement": "is(X, cold) :- is(X, white), not is(X, blue).",
        "description": "If something is white and not blue then it is cold."
    },
    {
        "id": 4741,
        "statement": "is(X, cold) :- is(X, red).",
        "description": "All red things are cold."
    },
    {
        "id": 4742,
        "statement": "is(X, white) :- is(X, cold), is(X, round).",
        "description": "If something is cold and round then it is white."
    },
    {
        "id": 4743,
        "statement": "is(X, green) :- is(X, furry), is(X, cold).",
        "description": "Furry, cold people are green."
    },
    {
        "id": 4744,
        "statement": "is(X, furry) :- is(X, white).",
        "description": "All white people are furry."
    },
    {
        "id": 4745,
        "statement": "is(X, smart) :- is(X, green), is(X, furry).",
        "description": "If someone is green and furry then they are smart."
    },
    {
        "id": 4746,
        "statement": "is(charlie, smart) :- is(charlie, blue).",
        "description": "If Charlie is blue then Charlie is smart."
    },
    {
        "id": 4747,
        "statement": "is(X, cold) :- is(X, nice), is(X, green).",
        "description": "If someone is nice and green then they are cold."
    },
    {
        "id": 4748,
        "statement": "is(X, young) :- is(X, nice), is(X, blue).",
        "description": "All nice, blue people are young."
    },
    {
        "id": 4749,
        "statement": "is(X, young) :- is(X, nice), is(X, big).",
        "description": "If someone is nice and big then they are young."
    },
    {
        "id": 4750,
        "statement": "is(X, rough) :- is(X, nice), is(X, young).",
        "description": "Nice, young people are rough."
    },
    {
        "id": 4751,
        "statement": "is(X, quiet) :- is(X, rough), is(X, furry).",
        "description": "If someone is rough and furry then they are quiet."
    },
    {
        "id": 4752,
        "statement": "is(X, quiet) :- is(X, big), is(X, furry).",
        "description": "Big, furry people are quiet."
    },
    {
        "id": 4753,
        "statement": "is(X, furry) :- is(X, rough).",
        "description": "If someone is rough then they are furry."
    },
    {
        "id": 4754,
        "statement": "is(X, nice) :- is(X, blue), not is(X, big).",
        "description": "If someone is blue and not big then they are nice."
    },
    {
        "id": 4755,
        "statement": "is(X, blue) :- is(X, round), is(X, quiet).",
        "description": "If someone is round and quiet then they are blue."
    },
    {
        "id": 4756,
        "statement": "is(X, round) :- is(X, blue), is(X, quiet).",
        "description": "If someone is blue and quiet then they are round."
    },
    {
        "id": 4757,
        "statement": "is(anne, round) :- is(anne, big), is(anne, green).",
        "description": "If Anne is big and Anne is green then Anne is round."
    },
    {
        "id": 4758,
        "statement": "is(X, rough) :- is(X, quiet), is(X, big).",
        "description": "If someone is quiet and big then they are rough."
    },
    {
        "id": 4759,
        "statement": "eats(X, rabbit) :- eats(X, tiger).",
        "description": "If something eats the tiger then it eats the rabbit."
    },
    {
        "id": 4760,
        "statement": "eats(X, rabbit) :- is(X, kind), is(X, nice).",
        "description": "If something is kind and nice then it eats the rabbit."
    },
    {
        "id": 4761,
        "statement": "is(bear, round) :- is(X, kind), eats(X, bear).",
        "description": "If something is kind and it eats the bear then the bear is round."
    },
    {
        "id": 4762,
        "statement": "eats(X, tiger) :- visits(X, rabbit).",
        "description": "If something visits the rabbit then it eats the tiger."
    },
    {
        "id": 4763,
        "statement": "is(rabbit, kind) :- eats(tiger, rabbit), not visits(tiger, mouse).",
        "description": "If the tiger eats the rabbit and the tiger does not visit the mouse then the rabbit is kind."
    },
    {
        "id": 4764,
        "statement": "is(rabbit, cold) :- visits(X, rabbit), visits(rabbit, mouse).",
        "description": "If something visits the rabbit and the rabbit visits the mouse then the rabbit is cold."
    },
    {
        "id": 4765,
        "statement": "eats(X, bear) :- is(X, round).",
        "description": "If something is round then it eats the bear."
    },
    {
        "id": 4766,
        "statement": "sees(X, dog) :- is(X, kind), needs(X, cow).",
        "description": "If someone is kind and they need the cow then they see the dog."
    },
    {
        "id": 4767,
        "statement": "is(cow, blue) :- sees(X, cow).",
        "description": "If someone sees the cow then the cow is blue."
    },
    {
        "id": 4768,
        "statement": "eats(X, dog) :- needs(X, cow).",
        "description": "If someone needs the cow then they eat the dog."
    },
    {
        "id": 4769,
        "statement": "eats(cow, lion) :- sees(X, cow), is(X, green).",
        "description": "If someone sees the cow and they are green then the cow eats the lion."
    },
    {
        "id": 4770,
        "statement": "eats(lion, bear) :- needs(cow, lion).",
        "description": "If the cow needs the lion then the lion eats the bear."
    },
    {
        "id": 4771,
        "statement": "eats(X, lion) :- needs(X, bear).",
        "description": "If someone needs the bear then they eat the lion."
    },
    {
        "id": 4772,
        "statement": "is(X, green) :- eats(X, lion).",
        "description": "If someone eats the lion then they are green."
    },
    {
        "id": 4773,
        "statement": "needs(X, lion) :- eats(X, lion), eats(lion, dog).",
        "description": "If someone eats the lion and the lion eats the dog then they need the lion."
    },
    {
        "id": 4774,
        "statement": "sees(X, squirrel) :- is(X, big).",
        "description": "If someone is big then they see the squirrel."
    },
    {
        "id": 4775,
        "statement": "visits(bald_eagle, squirrel) :- visits(X, bald_eagle).",
        "description": "If someone visits the bald eagle then the bald eagle visits the squirrel."
    },
    {
        "id": 4776,
        "statement": "is(X, big) :- likes(X, squirrel), visits(X, lion).",
        "description": "If someone likes the squirrel and they visit the lion then they are big."
    },
    {
        "id": 4777,
        "statement": "visits(bald_eagle, squirrel) :- likes(X, bald_eagle).",
        "description": "If someone likes the bald eagle then the bald eagle visits the squirrel."
    },
    {
        "id": 4778,
        "statement": "visits(squirrel, lion) :- sees(X, squirrel).",
        "description": "If someone sees the squirrel then the squirrel visits the lion."
    },
    {
        "id": 4779,
        "statement": "likes(X, squirrel) :- is(X, cold).",
        "description": "If someone is cold then they like the squirrel."
    },
    {
        "id": 4780,
        "statement": "visits(tiger, lion) :- likes(squirrel, tiger).",
        "description": "If the squirrel likes the tiger then the tiger visits the lion."
    },
    {
        "id": 4781,
        "statement": "is(tiger, big) :- visits(tiger, squirrel).",
        "description": "If the tiger visits the squirrel then the tiger is big."
    },
    {
        "id": 4782,
        "statement": "likes(X, lion) :- is(X, kind).",
        "description": "If someone is kind then they like the lion."
    },
    {
        "id": 4783,
        "statement": "is(X, green) :- is(X, blue), is(X, furry).",
        "description": "Blue, furry people are green."
    },
    {
        "id": 4784,
        "statement": "is(X, white) :- is(X, round), is(X, green).",
        "description": "Round, green people are white."
    },
    {
        "id": 4785,
        "statement": "is(X, rough) :- is(X, round).",
        "description": "All round people are rough."
    },
    {
        "id": 4786,
        "statement": "is(anne, white) :- is(anne, young).",
        "description": "If Anne is young then Anne is white."
    },
    {
        "id": 4787,
        "statement": "is(X, white) :- is(X, young).",
        "description": "Young people are white."
    },
    {
        "id": 4788,
        "statement": "is(X, blue) :- is(X, white), is(X, rough).",
        "description": "White, rough people are blue."
    },
    {
        "id": 4789,
        "statement": "is(X, round) :- is(X, furry), is(X, big).",
        "description": "If something is furry and big then it is round."
    },
    {
        "id": 4790,
        "statement": "is(X, furry) :- is(X, big), is(X, kind).",
        "description": "Big, kind things are furry."
    },
    {
        "id": 4791,
        "statement": "is(X, big) :- is(X, furry), is(X, rough).",
        "description": "Furry, rough things are big."
    },
    {
        "id": 4792,
        "statement": "is(X, green) :- is(X, furry).",
        "description": "Furry things are green."
    },
    {
        "id": 4793,
        "statement": "is(X, cold) :- is(X, green).",
        "description": "Green things are cold."
    },
    {
        "id": 4794,
        "statement": "is(X, nice) :- is(X, cold), is(X, red).",
        "description": "Cold, red things are nice."
    },
    {
        "id": 4795,
        "statement": "is(X, blue) :- is(X, nice), is(X, quiet).",
        "description": "If something is nice and quiet then it is blue."
    },
    {
        "id": 4796,
        "statement": "is(X, blue) :- is(X, green), is(X, cold).",
        "description": "Green, cold things are blue."
    },
    {
        "id": 4797,
        "statement": "is(X, furry) :- is(X, green).",
        "description": "If something is green then it is furry."
    },
    {
        "id": 4798,
        "statement": "eats(cow, tiger) :- needs(X, bear), needs(bear, cow).",
        "description": "If someone needs the bear and the bear needs the cow then the cow eats the tiger."
    },
    {
        "id": 4799,
        "statement": "eats(X, dog) :- is(X, kind).",
        "description": "If someone is kind then they eat the dog."
    },
    {
        "id": 4800,
        "statement": "is(X, big) :- needs(X, tiger).",
        "description": "If someone needs the tiger then they are big."
    },
    {
        "id": 4801,
        "statement": "likes(X, tiger) :- eats(X, dog).",
        "description": "If someone eats the dog then they like the tiger."
    },
    {
        "id": 4802,
        "statement": "likes(X, cow) :- is(X, blue).",
        "description": "If someone is blue then they like the cow."
    },
    {
        "id": 4803,
        "statement": "needs(X, bear) :- likes(X, cow), likes(X, dog).",
        "description": "If someone likes the cow and they like the dog then they need the bear."
    },
    {
        "id": 4804,
        "statement": "eats(X, cow) :- eats(X, tiger), is(X, big).",
        "description": "If someone eats the tiger and they are big then they eat the cow."
    },
    {
        "id": 4805,
        "statement": "needs(bear, tiger) :- needs(X, bear).",
        "description": "If someone needs the bear then the bear needs the tiger."
    },
    {
        "id": 4806,
        "statement": "is(cow, blue) :- needs(X, cow), is(X, young).",
        "description": "If someone needs the cow and they are young then the cow is blue."
    },
    {
        "id": 4807,
        "statement": "is(X, quiet) :- is(X, nice), is(X, round).",
        "description": "Nice, round things are quiet."
    },
    {
        "id": 4808,
        "statement": "is(X, kind) :- is(X, nice), is(X, quiet).",
        "description": "Nice, quiet things are kind."
    },
    {
        "id": 4809,
        "statement": "is(fiona, nice) :- is(fiona, quiet).",
        "description": "If Fiona is quiet then Fiona is nice."
    },
    {
        "id": 4810,
        "statement": "is(X, cold) :- is(X, big), not is(X, rough).",
        "description": "If something is big and not rough then it is cold."
    },
    {
        "id": 4811,
        "statement": "is(X, red) :- is(X, furry).",
        "description": "Furry people are red."
    },
    {
        "id": 4812,
        "statement": "is(X, red) :- is(X, white).",
        "description": "If someone is white then they are red."
    },
    {
        "id": 4813,
        "statement": "is(X, furry) :- is(X, quiet), not is(X, cold).",
        "description": "If someone is quiet and not cold then they are furry."
    },
    {
        "id": 4814,
        "statement": "is(X, young) :- is(X, round), is(X, nice).",
        "description": "Round, nice things are young."
    },
    {
        "id": 4815,
        "statement": "is(X, young) :- is(X, furry), is(X, smart).",
        "description": "Furry, smart things are young."
    },
    {
        "id": 4816,
        "statement": "is(X, round) :- is(X, red), is(X, smart).",
        "description": "Red, smart things are round."
    },
    {
        "id": 4817,
        "statement": "is(X, smart) :- is(X, round), is(X, young).",
        "description": "All round, young things are smart."
    },
    {
        "id": 4818,
        "statement": "is(X, red) :- is(X, blue), is(X, young).",
        "description": "If something is blue and young then it is red."
    },
    {
        "id": 4819,
        "statement": "is(X, smart) :- is(X, furry).",
        "description": "If something is furry then it is smart."
    },
    {
        "id": 4820,
        "statement": "is(X, blue) :- is(X, young).",
        "description": "All young things are blue."
    },
    {
        "id": 4821,
        "statement": "is(X, white) :- is(X, kind), is(X, blue).",
        "description": "All kind, blue things are white."
    },
    {
        "id": 4822,
        "statement": "is(X, green) :- is(X, red).",
        "description": "Red things are green."
    },
    {
        "id": 4823,
        "statement": "is(X, nice) :- is(X, kind).",
        "description": "Kind things are nice."
    },
    {
        "id": 4824,
        "statement": "is(X, nice) :- is(X, red), not is(X, kind).",
        "description": "If something is red and not kind then it is nice."
    },
    {
        "id": 4825,
        "statement": "is(fiona, furry) :- is(fiona, rough).",
        "description": "If Fiona is rough then Fiona is furry."
    },
    {
        "id": 4826,
        "statement": "is(X, rough) :- is(X, round), is(X, blue).",
        "description": "All round, blue things are rough."
    },
    {
        "id": 4827,
        "statement": "is(erin, young) :- is(erin, big).",
        "description": "If Erin is big then Erin is young."
    },
    {
        "id": 4828,
        "statement": "is(X, round) :- is(X, big), is(X, young).",
        "description": "If something is big and young then it is round."
    },
    {
        "id": 4829,
        "statement": "is(X, young) :- is(X, big), is(X, smart).",
        "description": "Big, smart things are young."
    },
    {
        "id": 4830,
        "statement": "is(dog, green) :- needs(X, lion), chases(lion, dog).",
        "description": "If someone needs the lion and the lion chases the dog then the dog is green."
    },
    {
        "id": 4831,
        "statement": "needs(mouse, bald_eagle) :- chases(X, dog), not likes(X, mouse).",
        "description": "If someone chases the dog and they do not like the mouse then the mouse needs the bald eagle."
    },
    {
        "id": 4832,
        "statement": "is(dog, round) :- is(X, green), likes(X, dog).",
        "description": "If someone is green and they like the dog then the dog is round."
    },
    {
        "id": 4833,
        "statement": "needs(mouse, lion) :- needs(X, mouse).",
        "description": "If someone needs the mouse then the mouse needs the lion."
    },
    {
        "id": 4834,
        "statement": "is(X, green) :- likes(X, bald_eagle).",
        "description": "If someone likes the bald eagle then they are green."
    },
    {
        "id": 4835,
        "statement": "likes(X, dog) :- chases(X, mouse).",
        "description": "If someone chases the mouse then they like the dog."
    },
    {
        "id": 4836,
        "statement": "likes(mouse, dog) :- needs(X, mouse).",
        "description": "If someone needs the mouse then the mouse likes the dog."
    },
    {
        "id": 4837,
        "statement": "likes(X, bald_eagle) :- is(X, round).",
        "description": "If someone is round then they like the bald eagle."
    },
    {
        "id": 4838,
        "statement": "is(X, young) :- needs(X, dog), is(dog, green).",
        "description": "If someone needs the dog and the dog is green then they are young."
    },
    {
        "id": 4839,
        "statement": "is(X, quiet) :- is(X, blue), is(X, furry).",
        "description": "All blue, furry things are quiet."
    },
    {
        "id": 4840,
        "statement": "is(X, rough) :- is(X, young), is(X, quiet).",
        "description": "All young, quiet things are rough."
    },
    {
        "id": 4841,
        "statement": "is(X, young) :- is(X, quiet), is(X, red).",
        "description": "If something is quiet and red then it is young."
    },
    {
        "id": 4842,
        "statement": "is(fiona, red) :- is(fiona, furry).",
        "description": "If Fiona is furry then Fiona is red."
    },
    {
        "id": 4843,
        "statement": "is(X, young) :- is(X, quiet).",
        "description": "If something is quiet then it is young."
    },
    {
        "id": 4844,
        "statement": "is(X, quiet) :- is(X, red), is(X, furry).",
        "description": "If something is red and furry then it is quiet."
    },
    {
        "id": 4845,
        "statement": "is(X, young) :- is(X, red), is(X, blue).",
        "description": "If something is red and blue then it is young."
    },
    {
        "id": 4846,
        "statement": "is(X, big) :- is(X, quiet), is(X, kind).",
        "description": "Quiet, kind things are big."
    },
    {
        "id": 4847,
        "statement": "is(X, blue) :- is(X, quiet), is(X, big).",
        "description": "Quiet, big things are blue."
    },
    {
        "id": 4848,
        "statement": "is(X, nice) :- is(X, kind), is(X, furry).",
        "description": "Kind, furry things are nice."
    },
    {
        "id": 4849,
        "statement": "is(charlie, furry) :- is(charlie, nice), is(charlie, blue).",
        "description": "If Charlie is nice and Charlie is blue then Charlie is furry."
    },
    {
        "id": 4850,
        "statement": "is(X, big) :- is(X, round), is(X, cold).",
        "description": "If someone is round and cold then they are big."
    },
    {
        "id": 4851,
        "statement": "is(X, blue) :- is(X, round), is(X, young).",
        "description": "Round, young people are blue."
    },
    {
        "id": 4852,
        "statement": "is(X, round) :- is(X, big), is(X, nice).",
        "description": "All big, nice people are round."
    },
    {
        "id": 4853,
        "statement": "is(anne, round) :- is(anne, big).",
        "description": "If Anne is big then Anne is round."
    },
    {
        "id": 4854,
        "statement": "is(X, cold) :- is(X, blue).",
        "description": "All blue people are cold."
    },
    {
        "id": 4855,
        "statement": "is(X, young) :- is(X, big), is(X, green).",
        "description": "All big, green people are young."
    },
    {
        "id": 4856,
        "statement": "is(bob, nice) :- is(bob, green), is(bob, cold).",
        "description": "If Bob is green and Bob is cold then Bob is nice."
    },
    {
        "id": 4857,
        "statement": "is(X, furry) :- is(X, smart), is(X, nice).",
        "description": "Smart, nice people are furry."
    },
    {
        "id": 4858,
        "statement": "is(X, furry) :- is(X, nice), is(X, young).",
        "description": "Nice, young people are furry."
    },
    {
        "id": 4859,
        "statement": "is(X, cold) :- is(X, furry).",
        "description": "Furry people are cold."
    },
    {
        "id": 4860,
        "statement": "is(X, cold) :- is(X, green), is(X, nice).",
        "description": "If someone is green and nice then they are cold."
    },
    {
        "id": 4861,
        "statement": "is(X, green) :- is(X, smart), is(X, young).",
        "description": "If someone is smart and young then they are green."
    },
    {
        "id": 4862,
        "statement": "is(X, rough) :- is(X, white), is(X, furry).",
        "description": "If someone is white and furry then they are rough."
    },
    {
        "id": 4863,
        "statement": "is(X, furry) :- is(X, white), is(X, round).",
        "description": "White, round people are furry."
    },
    {
        "id": 4864,
        "statement": "is(X, round) :- is(X, furry), is(X, rough).",
        "description": "If someone is furry and rough then they are round."
    },
    {
        "id": 4865,
        "statement": "is(X, blue) :- is(X, furry), is(X, round).",
        "description": "All furry, round people are blue."
    },
    {
        "id": 4866,
        "statement": "is(X, white) :- is(X, furry).",
        "description": "All furry people are white."
    },
    {
        "id": 4867,
        "statement": "is(X, quiet) :- is(X, rough), is(X, round).",
        "description": "All rough, round people are quiet."
    },
    {
        "id": 4868,
        "statement": "is(X, rough) :- is(X, white), is(X, furry).",
        "description": "White, furry people are rough."
    },
    {
        "id": 4869,
        "statement": "is(X, furry) :- is(X, quiet), is(X, green).",
        "description": "All quiet, green people are furry."
    },
    {
        "id": 4870,
        "statement": "is(X, green) :- is(X, quiet), is(X, rough).",
        "description": "All quiet, rough people are green."
    },
    {
        "id": 4871,
        "statement": "is(X, young) :- is(X, round).",
        "description": "All round things are young."
    },
    {
        "id": 4872,
        "statement": "is(anne, rough) :- is(anne, round), is(anne, red).",
        "description": "If Anne is round and Anne is red then Anne is rough."
    },
    {
        "id": 4873,
        "statement": "is(X, smart) :- is(X, quiet).",
        "description": "If something is quiet then it is smart."
    },
    {
        "id": 4874,
        "statement": "is(X, rough) :- is(X, smart).",
        "description": "All smart things are rough."
    },
    {
        "id": 4875,
        "statement": "is(anne, young) :- is(anne, red), is(anne, furry).",
        "description": "If Anne is red and Anne is furry then Anne is young."
    },
    {
        "id": 4876,
        "statement": "eats(bear, cat).",
        "description": "The bear eats the cat."
    },
    {
        "id": 4877,
        "statement": "eats(bear, lion) :- sees(X, bear).",
        "description": "If something sees the bear then the bear eats the lion."
    },
    {
        "id": 4878,
        "statement": "eats(bear, lion) :- eats(X, lion), not eats(X, bear).",
        "description": "If something eats the lion and it does not eat the bear then the bear eats the lion."
    },
    {
        "id": 4879,
        "statement": "eats(bear, cat) :- sees(X, bear).",
        "description": "If something sees the bear then the bear eats the cat."
    },
    {
        "id": 4880,
        "statement": "is(X, young) :- is(X, red), eats(X, rabbit).",
        "description": "If something is red and it eats the rabbit then it is young."
    },
    {
        "id": 4881,
        "statement": "is(cat, red) :- needs(X, cat).",
        "description": "If something needs the cat then the cat is red."
    },
    {
        "id": 4882,
        "statement": "needs(X, cat) :- is(X, young).",
        "description": "If something is young then it needs the cat."
    },
    {
        "id": 4883,
        "statement": "sees(rabbit, bear) :- sees(rabbit, cat).",
        "description": "If the rabbit sees the cat then the rabbit sees the bear."
    },
    {
        "id": 4884,
        "statement": "is(X, nice) :- is(X, cold), is(X, white).",
        "description": "All cold, white things are nice."
    },
    {
        "id": 4885,
        "statement": "is(X, nice) :- is(X, furry), is(X, white).",
        "description": "Furry, white things are nice."
    },
    {
        "id": 4886,
        "statement": "is(charlie, cold) :- is(charlie, big), is(charlie, kind).",
        "description": "If Charlie is big and Charlie is kind then Charlie is cold."
    },
    {
        "id": 4887,
        "statement": "is(X, furry) :- is(X, young), is(X, nice).",
        "description": "If something is young and nice then it is furry."
    },
    {
        "id": 4888,
        "statement": "is(X, young) :- is(X, nice), is(X, white).",
        "description": "Nice, white things are young."
    },
    {
        "id": 4889,
        "statement": "is(X, kind) :- is(X, nice).",
        "description": "If something is nice then it is kind."
    },
    {
        "id": 4890,
        "statement": "is(charlie, blue) :- is(charlie, rough), is(charlie, green).",
        "description": "If Charlie is rough and Charlie is green then Charlie is blue."
    },
    {
        "id": 4891,
        "statement": "is(X, cold) :- is(X, big), is(X, kind).",
        "description": "All big, kind things are cold."
    },
    {
        "id": 4892,
        "statement": "is(X, big) :- is(X, green), is(X, rough).",
        "description": "Green, rough things are big."
    },
    {
        "id": 4893,
        "statement": "is(X, big) :- is(X, blue), is(X, cold).",
        "description": "All blue, cold things are big."
    },
    {
        "id": 4894,
        "statement": "is(harry, cold) :- is(harry, young).",
        "description": "If Harry is young then Harry is cold."
    },
    {
        "id": 4895,
        "statement": "is(X, smart) :- is(X, round), is(X, quiet).",
        "description": "Round, quiet people are smart."
    },
    {
        "id": 4896,
        "statement": "is(X, quiet) :- is(X, furry).",
        "description": "If someone is furry then they are quiet."
    },
    {
        "id": 4897,
        "statement": "is(X, green) :- is(X, smart), is(X, kind).",
        "description": "If someone is smart and kind then they are green."
    },
    {
        "id": 4898,
        "statement": "is(harry, furry) :- not is(harry, white).",
        "description": "If Harry is not white then Harry is furry."
    },
    {
        "id": 4899,
        "statement": "is(X, white) :- is(X, round).",
        "description": "All round people are white."
    },
    {
        "id": 4900,
        "statement": "is(anne, green) :- is(anne, nice), is(anne, round).",
        "description": "If Anne is nice and Anne is round then Anne is green."
    },
    {
        "id": 4901,
        "statement": "is(bob, nice) :- is(bob, round).",
        "description": "If Bob is round then Bob is nice."
    },
    {
        "id": 4902,
        "statement": "is(X, cold) :- is(X, white).",
        "description": "White people are cold."
    },
    {
        "id": 4903,
        "statement": "is(gary, green) :- is(gary, kind), is(gary, white).",
        "description": "If Gary is kind and Gary is white then Gary is green."
    },
    {
        "id": 4904,
        "statement": "is(X, blue) :- is(X, smart).",
        "description": "Smart people are blue."
    },
    {
        "id": 4905,
        "statement": "is(X, smart) :- is(X, red), is(X, furry).",
        "description": "Red, furry people are smart."
    },
    {
        "id": 4906,
        "statement": "is(X, big) :- is(X, red), is(X, smart).",
        "description": "All red, smart people are big."
    },
    {
        "id": 4907,
        "statement": "is(charlie, blue) :- is(charlie, smart), not is(charlie, furry).",
        "description": "If Charlie is smart and Charlie is not furry then Charlie is blue."
    },
    {
        "id": 4908,
        "statement": "needs(squirrel, cat) :- is(squirrel, red), sees(squirrel, cat).",
        "description": "If the squirrel is red and the squirrel sees the cat then the squirrel needs the cat."
    },
    {
        "id": 4909,
        "statement": "is(squirrel, red) :- likes(X, squirrel), is(squirrel, rough).",
        "description": "If something likes the squirrel and the squirrel is rough then the squirrel is red."
    },
    {
        "id": 4910,
        "statement": "sees(squirrel, cat) :- is(X, big), needs(X, squirrel).",
        "description": "If something is big and it needs the squirrel then the squirrel sees the cat."
    },
    {
        "id": 4911,
        "statement": "is(X, rough) :- needs(X, rabbit).",
        "description": "If something needs the rabbit then it is rough."
    },
    {
        "id": 4912,
        "statement": "needs(squirrel, rabbit) :- likes(X, squirrel).",
        "description": "If something likes the squirrel then the squirrel needs the rabbit."
    },
    {
        "id": 4913,
        "statement": "is(X, green) :- needs(X, cow), not sees(X, cat).",
        "description": "If something needs the cow and it does not see the cat then it is green."
    },
    {
        "id": 4914,
        "statement": "chases(mouse, cat) :- visits(X, mouse), not is(X, big).",
        "description": "If something visits the mouse and it is not big then the mouse chases the cat."
    },
    {
        "id": 4915,
        "statement": "visits(X, mouse) :- chases(X, mouse).",
        "description": "If something chases the mouse then it visits the mouse."
    },
    {
        "id": 4916,
        "statement": "is(X, red) :- eats(X, bald_eagle).",
        "description": "If something eats the bald eagle then it is red."
    },
    {
        "id": 4917,
        "statement": "eats(bald_eagle, mouse) :- eats(X, bald_eagle).",
        "description": "If something eats the bald eagle then the bald eagle eats the mouse."
    },
    {
        "id": 4918,
        "statement": "eats(cat, bald_eagle) :- chases(mouse, cat).",
        "description": "If the mouse chases the cat then the cat eats the bald eagle."
    },
    {
        "id": 4919,
        "statement": "is(X, cold) :- is(X, young), chases(X, cat).",
        "description": "If something is young and it chases the cat then it is cold."
    },
    {
        "id": 4920,
        "statement": "visits(X, cat) :- is(X, cold).",
        "description": "If something is cold then it visits the cat."
    },
    {
        "id": 4921,
        "statement": "is(X, smart) :- is(X, big), is(X, young).",
        "description": "If someone is big and young then they are smart."
    },
    {
        "id": 4922,
        "statement": "is(X, big) :- is(X, red), is(X, kind).",
        "description": "If someone is red and kind then they are big."
    },
    {
        "id": 4923,
        "statement": "is(fiona, kind) :- is(fiona, red).",
        "description": "If Fiona is red then Fiona is kind."
    },
    {
        "id": 4924,
        "statement": "is(X, big) :- is(X, green).",
        "description": "All green things are big."
    },
    {
        "id": 4925,
        "statement": "is(X, quiet) :- is(X, furry), is(X, nice).",
        "description": "If something is furry and nice then it is quiet."
    },
    {
        "id": 4926,
        "statement": "is(anne, red) :- is(anne, nice).",
        "description": "If Anne is nice then Anne is red."
    },
    {
        "id": 4927,
        "statement": "is(X, red) :- is(X, big), is(X, quiet).",
        "description": "All big, quiet things are red."
    },
    {
        "id": 4928,
        "statement": "is(X, nice) :- is(X, round).",
        "description": "If something is round then it is nice."
    },
    {
        "id": 4929,
        "statement": "needs(rabbit, mouse).",
        "description": "The rabbit needs the mouse."
    },
    {
        "id": 4930,
        "statement": "is(X, kind) :- needs(X, mouse), eats(X, mouse).",
        "description": "If something needs the mouse and it eats the mouse then it is kind."
    },
    {
        "id": 4931,
        "statement": "sees(X, mouse) :- needs(X, tiger).",
        "description": "If something needs the tiger then it sees the mouse."
    },
    {
        "id": 4932,
        "statement": "sees(X, tiger) :- is(X, kind), is(X, nice).",
        "description": "If something is kind and nice then it sees the tiger."
    },
    {
        "id": 4933,
        "statement": "needs(X, tiger) :- sees(X, tiger).",
        "description": "If something sees the tiger then it needs the tiger."
    },
    {
        "id": 4934,
        "statement": "is(anne, quiet) :- is(anne, furry), is(anne, big).",
        "description": "If Anne is furry and Anne is big then Anne is quiet."
    },
    {
        "id": 4935,
        "statement": "is(X, blue) :- is(X, rough), is(X, nice).",
        "description": "All rough, nice people are blue."
    },
    {
        "id": 4936,
        "statement": "is(X, blue) :- is(X, furry), is(X, nice).",
        "description": "If someone is furry and nice then they are blue."
    },
    {
        "id": 4937,
        "statement": "is(bob, quiet) :- is(bob, nice).",
        "description": "If Bob is nice then Bob is quiet."
    },
    {
        "id": 4938,
        "statement": "is(X, furry) :- is(X, quiet), is(X, blue).",
        "description": "All quiet, blue people are furry."
    },
    {
        "id": 4939,
        "statement": "is(X, blue) :- sees(X, rabbit).",
        "description": "If something sees the rabbit then it is blue."
    },
    {
        "id": 4940,
        "statement": "chases(rabbit, dog) :- likes(X, rabbit).",
        "description": "If something likes the rabbit then the rabbit chases the dog."
    },
    {
        "id": 4941,
        "statement": "likes(X, squirrel) :- chases(X, lion).",
        "description": "If something chases the lion then it likes the squirrel."
    },
    {
        "id": 4942,
        "statement": "likes(X, squirrel) :- is(X, blue), sees(X, squirrel).",
        "description": "If something is blue and it sees the squirrel then it likes the squirrel."
    },
    {
        "id": 4943,
        "statement": "likes(squirrel, lion) :- likes(X, dog), not sees(X, squirrel).",
        "description": "If something likes the dog and it does not see the squirrel then the squirrel likes the lion."
    },
    {
        "id": 4944,
        "statement": "likes(lion, rabbit) :- likes(X, lion).",
        "description": "If something likes the lion then the lion likes the rabbit."
    },
    {
        "id": 4945,
        "statement": "likes(X, dog) :- is(X, blue), not is(X, round).",
        "description": "If something is blue and not round then it likes the dog."
    },
    {
        "id": 4946,
        "statement": "sees(X, lion) :- is(X, blue).",
        "description": "If something is blue then it sees the lion."
    },
    {
        "id": 4947,
        "statement": "is(cat, nice) :- sees(cat, tiger).",
        "description": "If the cat sees the tiger then the cat is nice."
    },
    {
        "id": 4948,
        "statement": "needs(X, tiger) :- is(X, rough), likes(X, rabbit).",
        "description": "If something is rough and it likes the rabbit then it needs the tiger."
    },
    {
        "id": 4949,
        "statement": "needs(X, cat) :- is(X, nice).",
        "description": "If something is nice then it needs the cat."
    },
    {
        "id": 4950,
        "statement": "sees(cat, tiger) :- needs(rabbit, cat).",
        "description": "If the rabbit needs the cat then the cat sees the tiger."
    },
    {
        "id": 4951,
        "statement": "is(X, nice) :- sees(X, tiger).",
        "description": "If something sees the tiger then it is nice."
    },
    {
        "id": 4952,
        "statement": "is(cat, red) :- is(cat, kind).",
        "description": "If the cat is kind then the cat is red."
    },
    {
        "id": 4953,
        "statement": "is(cat, red) :- is(X, rough), sees(X, cat).",
        "description": "If something is rough and it sees the cat then the cat is red."
    },
    {
        "id": 4954,
        "statement": "is(X, smart) :- is(X, blue), is(X, furry).",
        "description": "All blue, furry people are smart."
    },
    {
        "id": 4955,
        "statement": "is(dave, white) :- is(dave, smart), is(dave, big).",
        "description": "If Dave is smart and Dave is big then Dave is white."
    },
    {
        "id": 4956,
        "statement": "is(X, round) :- is(X, smart), is(X, rough).",
        "description": "All smart, rough people are round."
    },
    {
        "id": 4957,
        "statement": "is(X, rough) :- is(X, furry), is(X, white).",
        "description": "Furry, white people are rough."
    },
    {
        "id": 4958,
        "statement": "is(X, white) :- is(X, blue), is(X, rough).",
        "description": "Blue, rough people are white."
    },
    {
        "id": 4959,
        "statement": "is(X, green) :- is(X, round).",
        "description": "Round people are green."
    },
    {
        "id": 4960,
        "statement": "is(X, young) :- is(X, red), is(X, round).",
        "description": "All red, round people are young."
    },
    {
        "id": 4961,
        "statement": "is(anne, quiet) :- is(anne, young).",
        "description": "If Anne is young then Anne is quiet."
    },
    {
        "id": 4962,
        "statement": "is(X, quiet) :- is(X, cold), is(X, white).",
        "description": "Cold, white people are quiet."
    },
    {
        "id": 4963,
        "statement": "is(X, cold) :- is(X, young), is(X, quiet).",
        "description": "All young, quiet people are cold."
    },
    {
        "id": 4964,
        "statement": "is(X, red) :- is(X, young), is(X, blue).",
        "description": "If someone is young and blue then they are red."
    },
    {
        "id": 4965,
        "statement": "is(X, white) :- is(X, smart), is(X, blue).",
        "description": "Smart, blue things are white."
    },
    {
        "id": 4966,
        "statement": "is(X, round) :- is(X, white), is(X, rough).",
        "description": "All white, rough things are round."
    },
    {
        "id": 4967,
        "statement": "is(X, blue) :- is(X, rough), is(X, quiet).",
        "description": "Rough, quiet things are blue."
    },
    {
        "id": 4968,
        "statement": "needs(X, cow) :- is(X, kind).",
        "description": "If someone is kind then they need the cow."
    },
    {
        "id": 4969,
        "statement": "is(bear, cold) :- visits(X, bear), visits(X, mouse).",
        "description": "If someone visits the bear and they visit the mouse then the bear is cold."
    },
    {
        "id": 4970,
        "statement": "is(cow, round) :- needs(X, cow), visits(X, mouse).",
        "description": "If someone needs the cow and they visit the mouse then the cow is round."
    },
    {
        "id": 4971,
        "statement": "needs(bear, cow) :- needs(X, bear), is(X, round).",
        "description": "If someone needs the bear and they are round then the bear needs the cow."
    },
    {
        "id": 4972,
        "statement": "needs(X, squirrel) :- is(X, round), needs(X, cow).",
        "description": "If someone is round and they need the cow then they need the squirrel."
    },
    {
        "id": 4973,
        "statement": "needs(X, cow) :- is(X, cold), needs(X, bear).",
        "description": "If someone is cold and they need the bear then they need the cow."
    },
    {
        "id": 4974,
        "statement": "is(mouse, young) :- visits(X, mouse).",
        "description": "If someone visits the mouse then the mouse is young."
    },
    {
        "id": 4975,
        "statement": "is(X, blue) :- is(X, rough).",
        "description": "Rough people are blue."
    },
    {
        "id": 4976,
        "statement": "is(charlie, young) :- is(charlie, big), is(charlie, green).",
        "description": "If Charlie is big and Charlie is green then Charlie is young."
    },
    {
        "id": 4977,
        "statement": "is(X, rough) :- is(X, red), is(X, green).",
        "description": "All red, green people are rough."
    },
    {
        "id": 4978,
        "statement": "is(X, rough) :- is(X, young), is(X, blue).",
        "description": "All young, blue people are rough."
    },
    {
        "id": 4979,
        "statement": "is(X, furry) :- is(X, red).",
        "description": "Red people are furry."
    },
    {
        "id": 4980,
        "statement": "needs(dog, bald_eagle) :- chases(dog, bald_eagle).",
        "description": "If the dog chases the bald eagle then the dog needs the bald eagle."
    },
    {
        "id": 4981,
        "statement": "likes(X, dog) :- is(X, cold).",
        "description": "If something is cold then it likes the dog."
    },
    {
        "id": 4982,
        "statement": "chases(X, dog) :- likes(X, bald_eagle).",
        "description": "If something likes the bald eagle then it chases the dog."
    },
    {
        "id": 4983,
        "statement": "is(dog, red) :- chases(dog, tiger).",
        "description": "If the dog chases the tiger then the dog is red."
    },
    {
        "id": 4984,
        "statement": "is(X, cold) :- needs(X, tiger).",
        "description": "If something needs the tiger then it is cold."
    },
    {
        "id": 4985,
        "statement": "chases(squirrel, bald_eagle) :- chases(X, tiger), needs(X, squirrel).",
        "description": "If something chases the tiger and it needs the squirrel then the squirrel chases the bald eagle."
    },
    {
        "id": 4986,
        "statement": "needs(bald_eagle, tiger) :- needs(X, bald_eagle).",
        "description": "If something needs the bald eagle then the bald eagle needs the tiger."
    },
    {
        "id": 4987,
        "statement": "chases(X, squirrel) :- is(X, blue).",
        "description": "If something is blue then it chases the squirrel."
    },
    {
        "id": 4988,
        "statement": "is(squirrel, nice) :- likes(X, bald_eagle), sees(bald_eagle, squirrel).",
        "description": "If something likes the bald eagle and the bald eagle sees the squirrel then the squirrel is nice."
    },
    {
        "id": 4989,
        "statement": "sees(X, bald_eagle) :- sees(X, rabbit).",
        "description": "If something sees the rabbit then it sees the bald eagle."
    },
    {
        "id": 4990,
        "statement": "sees(X, bald_eagle) :- is(X, round).",
        "description": "If something is round then it sees the bald eagle."
    },
    {
        "id": 4991,
        "statement": "sees(X, squirrel) :- sees(X, bald_eagle).",
        "description": "If something sees the bald eagle then it sees the squirrel."
    },
    {
        "id": 4992,
        "statement": "is(squirrel, round) :- sees(rabbit, squirrel).",
        "description": "If the rabbit sees the squirrel then the squirrel is round."
    },
    {
        "id": 4993,
        "statement": "is(X, kind) :- is(X, rough), is(X, green).",
        "description": "Rough, green things are kind."
    },
    {
        "id": 4994,
        "statement": "is(harry, kind) :- is(harry, green), is(harry, white).",
        "description": "If Harry is green and Harry is white then Harry is kind."
    },
    {
        "id": 4995,
        "statement": "is(X, green) :- is(X, nice), is(X, big).",
        "description": "Nice, big things are green."
    },
    {
        "id": 4996,
        "statement": "is(dave, big) :- is(dave, round).",
        "description": "If Dave is round then Dave is big."
    },
    {
        "id": 4997,
        "statement": "likes(X, mouse) :- is(X, kind).",
        "description": "If something is kind then it likes the mouse."
    },
    {
        "id": 4998,
        "statement": "visits(lion, mouse) :- likes(X, mouse), needs(X, lion).",
        "description": "If something likes the mouse and it needs the lion then the lion visits the mouse."
    },
    {
        "id": 4999,
        "statement": "needs(dog, lion) :- likes(X, dog), is(X, big).",
        "description": "If something likes the dog and it is big then the dog needs the lion."
    },
    {
        "id": 5000,
        "statement": "likes(dog, lion) :- is(X, kind), needs(X, dog).",
        "description": "If something is kind and it needs the dog then the dog likes the lion."
    },
    {
        "id": 5001,
        "statement": "likes(dog, lion) :- visits(cow, dog), visits(dog, cow).",
        "description": "If the cow visits the dog and the dog visits the cow then the dog likes the lion."
    },
    {
        "id": 5002,
        "statement": "is(X, nice) :- is(X, big), needs(X, mouse).",
        "description": "If something is big and it needs the mouse then it is nice."
    },
    {
        "id": 5003,
        "statement": "is(cow, big) :- needs(X, cow), likes(X, mouse).",
        "description": "If something needs the cow and it likes the mouse then the cow is big."
    },
    {
        "id": 5004,
        "statement": "is(lion, big) :- likes(X, lion).",
        "description": "If something likes the lion then the lion is big."
    },
    {
        "id": 5005,
        "statement": "needs(lion, dog) :- visits(X, lion).",
        "description": "If something visits the lion then the lion needs the dog."
    },
    {
        "id": 5006,
        "statement": "is(X, smart) :- is(X, rough).",
        "description": "Rough people are smart."
    },
    {
        "id": 5007,
        "statement": "is(X, rough) :- is(X, smart), is(X, furry).",
        "description": "Smart, furry people are rough."
    },
    {
        "id": 5008,
        "statement": "is(X, smart) :- is(X, furry).",
        "description": "Furry people are smart."
    },
    {
        "id": 5009,
        "statement": "is(erin, green) :- is(erin, blue).",
        "description": "If Erin is blue then Erin is green."
    },
    {
        "id": 5010,
        "statement": "is(X, green) :- is(X, red), is(X, blue).",
        "description": "Red, blue people are green."
    },
    {
        "id": 5011,
        "statement": "eats(bald_eagle, squirrel).",
        "description": "The bald eagle eats the squirrel."
    },
    {
        "id": 5012,
        "statement": "likes(X, cow) :- likes(X, bald_eagle), not visits(X, bald_eagle).",
        "description": "If something likes the bald eagle and it does not visit the bald eagle then it likes the cow."
    },
    {
        "id": 5013,
        "statement": "visits(X, squirrel) :- visits(X, cow).",
        "description": "If something visits the cow then it visits the squirrel."
    },
    {
        "id": 5014,
        "statement": "visits(X, squirrel) :- likes(X, cow).",
        "description": "If something likes the cow then it visits the squirrel."
    },
    {
        "id": 5015,
        "statement": "eats(X, cat) :- visits(X, squirrel), not is(X, cold).",
        "description": "If something visits the squirrel and it is not cold then it eats the cat."
    },
    {
        "id": 5016,
        "statement": "visits(X, cat) :- is(X, red), not eats(X, bald_eagle).",
        "description": "If something is red and it does not eat the bald eagle then it visits the cat."
    },
    {
        "id": 5017,
        "statement": "visits(X, cat) :- is(X, blue), not likes(X, bald_eagle).",
        "description": "If something is blue and it does not like the bald eagle then it visits the cat."
    },
    {
        "id": 5018,
        "statement": "visits(squirrel, cow) :- visits(X, squirrel).",
        "description": "If something visits the squirrel then the squirrel visits the cow."
    },
    {
        "id": 5019,
        "statement": "likes(cat, cow) :- eats(X, cat), likes(cat, squirrel).",
        "description": "If something eats the cat and the cat likes the squirrel then the cat likes the cow."
    },
    {
        "id": 5020,
        "statement": "is(X, young) :- is(X, quiet), is(X, round).",
        "description": "Quiet, round things are young."
    },
    {
        "id": 5021,
        "statement": "is(X, quiet) :- is(X, round), is(X, big).",
        "description": "All round, big things are quiet."
    },
    {
        "id": 5022,
        "statement": "is(X, quiet) :- is(X, cold), is(X, round).",
        "description": "If something is cold and round then it is quiet."
    },
    {
        "id": 5023,
        "statement": "is(X, big) :- is(X, young), is(X, round).",
        "description": "If something is young and round then it is big."
    },
    {
        "id": 5024,
        "statement": "is(X, cold) :- is(X, young), is(X, red).",
        "description": "All young, red things are cold."
    },
    {
        "id": 5025,
        "statement": "is(X, young) :- is(X, big), is(X, rough).",
        "description": "If something is big and rough then it is young."
    },
    {
        "id": 5026,
        "statement": "is(rabbit, blue) :- is(cow, red), not needs(cow, rabbit).",
        "description": "If the cow is red and the cow does not need the rabbit then the rabbit is blue."
    },
    {
        "id": 5027,
        "statement": "sees(X, cat) :- is(X, red).",
        "description": "If something is red then it sees the cat."
    },
    {
        "id": 5028,
        "statement": "is(cow, red) :- is(X, red), likes(X, cow).",
        "description": "If something is red and it likes the cow then the cow is red."
    },
    {
        "id": 5029,
        "statement": "is(cat, red) :- likes(X, cat).",
        "description": "If something likes the cat then the cat is red."
    },
    {
        "id": 5030,
        "statement": "is(X, red) :- is(X, kind).",
        "description": "If something is kind then it is red."
    },
    {
        "id": 5031,
        "statement": "likes(rabbit, bear) :- is(X, blue), not sees(X, rabbit).",
        "description": "If something is blue and it does not see the rabbit then the rabbit likes the bear."
    },
    {
        "id": 5032,
        "statement": "likes(cow, rabbit) :- sees(X, bear), sees(X, cow).",
        "description": "If something sees the bear and it sees the cow then the cow likes the rabbit."
    },
    {
        "id": 5033,
        "statement": "needs(X, cow) :- likes(X, bear), not likes(bear, rabbit).",
        "description": "If something likes the bear and the bear does not like the rabbit then it needs the cow."
    },
    {
        "id": 5034,
        "statement": "sees(X, cow) :- likes(X, bear).",
        "description": "If something likes the bear then it sees the cow."
    },
    {
        "id": 5035,
        "statement": "is(X, red) :- is(X, blue), is(X, furry).",
        "description": "Blue, furry things are red."
    },
    {
        "id": 5036,
        "statement": "is(X, green) :- is(X, blue), is(X, red).",
        "description": "All blue, red things are green."
    },
    {
        "id": 5037,
        "statement": "is(X, big) :- is(X, round).",
        "description": "If something is round then it is big."
    },
    {
        "id": 5038,
        "statement": "is(X, furry) :- is(X, green), is(X, blue).",
        "description": "Green, blue things are furry."
    },
    {
        "id": 5039,
        "statement": "is(X, young) :- is(X, blue), is(X, cold).",
        "description": "Blue, cold people are young."
    },
    {
        "id": 5040,
        "statement": "is(X, white) :- is(X, kind), is(X, rough).",
        "description": "If someone is kind and rough then they are white."
    },
    {
        "id": 5041,
        "statement": "is(anne, rough) :- is(anne, white).",
        "description": "If Anne is white then Anne is rough."
    },
    {
        "id": 5042,
        "statement": "is(X, big) :- is(X, white).",
        "description": "White things are big."
    },
    {
        "id": 5043,
        "statement": "is(harry, rough) :- is(harry, quiet).",
        "description": "If Harry is quiet then Harry is rough."
    },
    {
        "id": 5044,
        "statement": "is(X, rough) :- is(X, young), is(X, kind).",
        "description": "If something is young and kind then it is rough."
    },
    {
        "id": 5045,
        "statement": "is(X, white) :- is(X, kind).",
        "description": "All kind things are white."
    },
    {
        "id": 5046,
        "statement": "is(X, young) :- is(X, quiet), is(X, rough).",
        "description": "All quiet, rough things are young."
    },
    {
        "id": 5047,
        "statement": "is(lion, red) :- sees(X, lion).",
        "description": "If something sees the lion then the lion is red."
    },
    {
        "id": 5048,
        "statement": "needs(rabbit, lion) :- sees(X, rabbit), eats(X, rabbit).",
        "description": "If something sees the rabbit and it eats the rabbit then the rabbit needs the lion."
    },
    {
        "id": 5049,
        "statement": "eats(X, lion) :- needs(X, lion).",
        "description": "If something needs the lion then it eats the lion."
    },
    {
        "id": 5050,
        "statement": "is(X, green) :- is(X, red).",
        "description": "If something is red then it is green."
    },
    {
        "id": 5051,
        "statement": "is(rabbit, green) :- needs(X, lion), eats(lion, rabbit).",
        "description": "If something needs the lion and the lion eats the rabbit then the rabbit is green."
    },
    {
        "id": 5052,
        "statement": "is(gary, young) :- is(gary, cold), is(gary, kind).",
        "description": "If Gary is cold and Gary is kind then Gary is young."
    },
    {
        "id": 5053,
        "statement": "is(X, cold) :- is(X, red).",
        "description": "If someone is red then they are cold."
    },
    {
        "id": 5054,
        "statement": "is(harry, rough) :- not is(harry, quiet).",
        "description": "If Harry is not quiet then Harry is rough."
    },
    {
        "id": 5055,
        "statement": "sees(cow, rabbit) :- needs(cow, tiger).",
        "description": "If the cow needs the tiger then the cow sees the rabbit."
    },
    {
        "id": 5056,
        "statement": "is(tiger, red) :- needs(X, tiger).",
        "description": "If something needs the tiger then the tiger is red."
    },
    {
        "id": 5057,
        "statement": "needs(X, tiger) :- is(X, red).",
        "description": "If something is red then it needs the tiger."
    },
    {
        "id": 5058,
        "statement": "sees(X, tiger) :- chases(X, tiger), is(X, big).",
        "description": "If something chases the tiger and it is big then it sees the tiger."
    },
    {
        "id": 5059,
        "statement": "chases(X, cow) :- sees(X, rabbit), is(X, red).",
        "description": "If something sees the rabbit and it is red then it chases the cow."
    },
    {
        "id": 5060,
        "statement": "needs(X, tiger) :- sees(X, rabbit), is(rabbit, big).",
        "description": "If something sees the rabbit and the rabbit is big then it needs the tiger."
    },
    {
        "id": 5061,
        "statement": "is(rabbit, cold) :- sees(X, rabbit), needs(X, cow).",
        "description": "If something sees the rabbit and it needs the cow then the rabbit is cold."
    },
    {
        "id": 5062,
        "statement": "needs(X, cow) :- chases(X, cow).",
        "description": "If something chases the cow then it needs the cow."
    },
    {
        "id": 5063,
        "statement": "is(fiona, big) :- is(fiona, kind).",
        "description": "If Fiona is kind then Fiona is big."
    },
    {
        "id": 5064,
        "statement": "is(fiona, big) :- is(fiona, young), is(fiona, red).",
        "description": "If Fiona is young and Fiona is red then Fiona is big."
    },
    {
        "id": 5065,
        "statement": "is(X, furry) :- is(X, big), is(X, kind).",
        "description": "Big, kind people are furry."
    },
    {
        "id": 5066,
        "statement": "is(X, furry) :- is(X, green), is(X, young).",
        "description": "Green, young people are furry."
    },
    {
        "id": 5067,
        "statement": "is(harry, young) :- is(harry, green).",
        "description": "If Harry is green then Harry is young."
    },
    {
        "id": 5068,
        "statement": "is(tiger, red) :- needs(X, tiger), likes(X, cat).",
        "description": "If someone needs the tiger and they like the cat then the tiger is red."
    },
    {
        "id": 5069,
        "statement": "likes(X, tiger) :- is(X, red).",
        "description": "If someone is red then they like the tiger."
    },
    {
        "id": 5070,
        "statement": "likes(bear, cat) :- chases(X, bear).",
        "description": "If someone chases the bear then the bear likes the cat."
    },
    {
        "id": 5071,
        "statement": "needs(squirrel, cat) :- chases(X, tiger), likes(tiger, squirrel).",
        "description": "If someone chases the tiger and the tiger likes the squirrel then the squirrel needs the cat."
    },
    {
        "id": 5072,
        "statement": "chases(tiger, bear) :- is(X, rough), likes(X, tiger).",
        "description": "If someone is rough and they like the tiger then the tiger chases the bear."
    },
    {
        "id": 5073,
        "statement": "needs(X, bear) :- is(X, rough).",
        "description": "If someone is rough then they need the bear."
    },
    {
        "id": 5074,
        "statement": "is(X, furry) :- is(X, white).",
        "description": "All white things are furry."
    },
    {
        "id": 5075,
        "statement": "is(X, white) :- is(X, big), is(X, round).",
        "description": "If something is big and round then it is white."
    },
    {
        "id": 5076,
        "statement": "is(X, round) :- is(X, furry), is(X, red).",
        "description": "Furry, red things are round."
    },
    {
        "id": 5077,
        "statement": "is(harry, cold) :- is(harry, round).",
        "description": "If Harry is round then Harry is cold."
    },
    {
        "id": 5078,
        "statement": "is(X, red) :- is(X, white), is(X, furry).",
        "description": "If something is white and furry then it is red."
    },
    {
        "id": 5079,
        "statement": "visits(bald_eagle, lion) :- visits(X, dog), likes(dog, bald_eagle).",
        "description": "If something visits the dog and the dog likes the bald eagle then the bald eagle visits the lion."
    },
    {
        "id": 5080,
        "statement": "is(squirrel, rough) :- is(X, round), visits(X, squirrel).",
        "description": "If something is round and it visits the squirrel then the squirrel is rough."
    },
    {
        "id": 5081,
        "statement": "chases(X, lion) :- visits(X, lion).",
        "description": "If something visits the lion then it chases the lion."
    },
    {
        "id": 5082,
        "statement": "is(X, round) :- visits(X, squirrel).",
        "description": "If something visits the squirrel then it is round."
    },
    {
        "id": 5083,
        "statement": "is(X, big) :- chases(X, lion), visits(X, lion).",
        "description": "If something chases the lion and it visits the lion then it is big."
    },
    {
        "id": 5084,
        "statement": "visits(dog, squirrel) :- visits(X, dog).",
        "description": "If something visits the dog then the dog visits the squirrel."
    },
    {
        "id": 5085,
        "statement": "is(X, round) :- chases(X, bald_eagle), is(bald_eagle, green).",
        "description": "If something chases the bald eagle and the bald eagle is green then it is round."
    },
    {
        "id": 5086,
        "statement": "chases(bald_eagle, squirrel) :- likes(bald_eagle, squirrel).",
        "description": "If the bald eagle likes the squirrel then the bald eagle chases the squirrel."
    },
    {
        "id": 5087,
        "statement": "is(bob, furry) :- is(bob, young).",
        "description": "If Bob is young then Bob is furry."
    },
    {
        "id": 5088,
        "statement": "is(X, kind) :- is(X, furry).",
        "description": "If something is furry then it is kind."
    },
    {
        "id": 5089,
        "statement": "is(anne, furry) :- not is(anne, blue).",
        "description": "If Anne is not blue then Anne is furry."
    },
    {
        "id": 5090,
        "statement": "is(anne, furry) :- is(anne, kind).",
        "description": "If Anne is kind then Anne is furry."
    },
    {
        "id": 5091,
        "statement": "is(bob, rough) :- is(bob, green).",
        "description": "If Bob is green then Bob is rough."
    },
    {
        "id": 5092,
        "statement": "is(harry, blue) :- is(harry, big).",
        "description": "If Harry is big then Harry is blue."
    },
    {
        "id": 5093,
        "statement": "is(gary, blue) :- is(gary, red), is(gary, nice).",
        "description": "If Gary is red and Gary is nice then Gary is blue."
    },
    {
        "id": 5094,
        "statement": "is(X, quiet) :- is(X, round).",
        "description": "All round people are quiet."
    },
    {
        "id": 5095,
        "statement": "is(X, round) :- is(X, quiet), is(X, red).",
        "description": "All quiet, red people are round."
    },
    {
        "id": 5096,
        "statement": "is(X, quiet) :- is(X, blue), is(X, round).",
        "description": "All blue, round people are quiet."
    },
    {
        "id": 5097,
        "statement": "is(X, smart) :- is(X, blue).",
        "description": "Blue people are smart."
    },
    {
        "id": 5098,
        "statement": "is(X, quiet) :- is(X, white), is(X, smart).",
        "description": "If someone is white and smart then they are quiet."
    },
    {
        "id": 5099,
        "statement": "is(dave, red) :- is(dave, kind), is(dave, young).",
        "description": "If Dave is kind and Dave is young then Dave is red."
    },
    {
        "id": 5100,
        "statement": "is(X, kind) :- is(X, green), is(X, furry).",
        "description": "All green, furry things are kind."
    },
    {
        "id": 5101,
        "statement": "is(X, smart) :- is(X, furry), is(X, red).",
        "description": "If something is furry and red then it is smart."
    },
    {
        "id": 5102,
        "statement": "is(X, white) :- is(X, green), is(X, quiet).",
        "description": "All green, quiet people are white."
    },
    {
        "id": 5103,
        "statement": "is(X, rough) :- is(X, smart), is(X, round).",
        "description": "All smart, round people are rough."
    },
    {
        "id": 5104,
        "statement": "is(X, quiet) :- is(X, green), is(X, round).",
        "description": "If someone is green and round then they are quiet."
    },
    {
        "id": 5105,
        "statement": "is(harry, blue) :- is(harry, rough).",
        "description": "If Harry is rough then Harry is blue."
    },
    {
        "id": 5106,
        "statement": "is(X, smart) :- is(X, round).",
        "description": "Round people are smart."
    },
    {
        "id": 5107,
        "statement": "is(X, round) :- is(X, rough).",
        "description": "If someone is rough then they are round."
    },
    {
        "id": 5108,
        "statement": "is(cat, round) :- visits(X, cat).",
        "description": "If something visits the cat then the cat is round."
    },
    {
        "id": 5109,
        "statement": "sees(X, bear) :- is(X, round), not is(X, big).",
        "description": "If something is round and not big then it sees the bear."
    },
    {
        "id": 5110,
        "statement": "visits(X, bear) :- is(X, big).",
        "description": "If something is big then it visits the bear."
    },
    {
        "id": 5111,
        "statement": "visits(bear, cat) :- is(X, kind), likes(X, bear).",
        "description": "If something is kind and it likes the bear then the bear visits the cat."
    },
    {
        "id": 5112,
        "statement": "is(bald_eagle, kind) :- likes(X, cat), not visits(cat, bald_eagle).",
        "description": "If something likes the cat and the cat does not visit the bald eagle then the bald eagle is kind."
    },
    {
        "id": 5113,
        "statement": "sees(bald_eagle, cat) :- likes(bald_eagle, bear).",
        "description": "If the bald eagle likes the bear then the bald eagle sees the cat."
    },
    {
        "id": 5114,
        "statement": "is(X, young) :- likes(X, bear).",
        "description": "If something likes the bear then it is young."
    },
    {
        "id": 5115,
        "statement": "visits(bald_eagle, cat) :- sees(X, bald_eagle).",
        "description": "If something sees the bald eagle then the bald eagle visits the cat."
    },
    {
        "id": 5116,
        "statement": "likes(X, bear) :- sees(X, bear).",
        "description": "If something sees the bear then it likes the bear."
    },
    {
        "id": 5117,
        "statement": "visits(lion, bald_eagle).",
        "description": "The lion visits the bald eagle."
    },
    {
        "id": 5118,
        "statement": "is(lion, green) :- visits(X, lion), not chases(X, bald_eagle).",
        "description": "If something visits the lion and it does not chase the bald eagle then the lion is green."
    },
    {
        "id": 5119,
        "statement": "is(X, rough) :- visits(X, bald_eagle).",
        "description": "If something visits the bald eagle then it is rough."
    },
    {
        "id": 5120,
        "statement": "sees(X, bear) :- chases(X, bear), is(bear, round).",
        "description": "If something chases the bear and the bear is round then it sees the bear."
    },
    {
        "id": 5121,
        "statement": "chases(X, bear) :- is(X, green).",
        "description": "If something is green then it chases the bear."
    },
    {
        "id": 5122,
        "statement": "visits(X, lion) :- is(X, green).",
        "description": "If something is green then it visits the lion."
    },
    {
        "id": 5123,
        "statement": "chases(squirrel, bear) :- visits(squirrel, bald_eagle), is(bald_eagle, rough).",
        "description": "If the squirrel visits the bald eagle and the bald eagle is rough then the squirrel chases the bear."
    },
    {
        "id": 5124,
        "statement": "chases(X, squirrel) :- is(X, green).",
        "description": "If something is green then it chases the squirrel."
    },
    {
        "id": 5125,
        "statement": "is(X, big) :- sees(X, bear).",
        "description": "If something sees the bear then it is big."
    },
    {
        "id": 5126,
        "statement": "is(X, white) :- is(X, nice).",
        "description": "If someone is nice then they are white."
    },
    {
        "id": 5127,
        "statement": "is(X, round) :- is(X, nice), is(X, rough).",
        "description": "All nice, rough people are round."
    },
    {
        "id": 5128,
        "statement": "is(fiona, green) :- is(fiona, quiet).",
        "description": "If Fiona is quiet then Fiona is green."
    },
    {
        "id": 5129,
        "statement": "is(X, nice) :- is(X, quiet), is(X, round).",
        "description": "If someone is quiet and round then they are nice."
    },
    {
        "id": 5130,
        "statement": "is(X, quiet) :- is(X, rough).",
        "description": "All rough people are quiet."
    },
    {
        "id": 5131,
        "statement": "is(X, rough) :- is(X, furry).",
        "description": "If someone is furry then they are rough."
    },
    {
        "id": 5132,
        "statement": "is(X, round) :- is(X, quiet), is(X, green).",
        "description": "All quiet, green people are round."
    },
    {
        "id": 5133,
        "statement": "is(anne, rough) :- is(anne, round), is(anne, green).",
        "description": "If Anne is round and Anne is green then Anne is rough."
    },
    {
        "id": 5134,
        "statement": "chases(lion, dog) :- sees(X, lion).",
        "description": "If something sees the lion then the lion chases the dog."
    },
    {
        "id": 5135,
        "statement": "is(bald_eagle, rough) :- likes(X, bald_eagle), chases(bald_eagle, mouse).",
        "description": "If something likes the bald eagle and the bald eagle chases the mouse then the bald eagle is rough."
    },
    {
        "id": 5136,
        "statement": "likes(dog, bald_eagle) :- is(X, young), likes(X, dog).",
        "description": "If something is young and it likes the dog then the dog likes the bald eagle."
    },
    {
        "id": 5137,
        "statement": "chases(bald_eagle, lion) :- sees(X, bald_eagle).",
        "description": "If something sees the bald eagle then the bald eagle chases the lion."
    },
    {
        "id": 5138,
        "statement": "is(X, round) :- is(X, cold), likes(X, dog).",
        "description": "If something is cold and it likes the dog then it is round."
    },
    {
        "id": 5139,
        "statement": "sees(bald_eagle, mouse) :- is(X, cold), sees(X, bald_eagle).",
        "description": "If something is cold and it sees the bald eagle then the bald eagle sees the mouse."
    },
    {
        "id": 5140,
        "statement": "sees(lion, mouse) :- chases(X, lion), is(X, round).",
        "description": "If something chases the lion and it is round then the lion sees the mouse."
    },
    {
        "id": 5141,
        "statement": "chases(X, dog) :- likes(X, lion), is(X, round).",
        "description": "If something likes the lion and it is round then it chases the dog."
    },
    {
        "id": 5142,
        "statement": "is(X, cold) :- sees(X, mouse).",
        "description": "If something sees the mouse then it is cold."
    },
    {
        "id": 5143,
        "statement": "is(harry, cold) :- is(harry, green).",
        "description": "If Harry is green then Harry is cold."
    },
    {
        "id": 5144,
        "statement": "is(harry, blue) :- is(harry, young), is(harry, green).",
        "description": "If Harry is young and Harry is green then Harry is blue."
    },
    {
        "id": 5145,
        "statement": "is(X, green) :- is(X, furry).",
        "description": "Furry people are green."
    },
    {
        "id": 5146,
        "statement": "is(X, young) :- is(X, kind), is(X, furry).",
        "description": "Kind, furry people are young."
    },
    {
        "id": 5147,
        "statement": "is(dave, big) :- is(dave, smart).",
        "description": "If Dave is smart then Dave is big."
    },
    {
        "id": 5148,
        "statement": "is(X, white) :- is(X, big).",
        "description": "All big things are white."
    },
    {
        "id": 5149,
        "statement": "is(X, cold) :- is(X, nice), is(X, smart).",
        "description": "If something is nice and smart then it is cold."
    },
    {
        "id": 5150,
        "statement": "is(X, nice) :- is(X, white), is(X, big).",
        "description": "All white, big things are nice."
    },
    {
        "id": 5151,
        "statement": "chases(bear, tiger) :- chases(bear, dog).",
        "description": "If the bear chases the dog then the bear chases the tiger."
    },
    {
        "id": 5152,
        "statement": "sees(X, dog) :- is(X, red).",
        "description": "If someone is red then they see the dog."
    },
    {
        "id": 5153,
        "statement": "is(dog, red) :- likes(X, dog), is(dog, young).",
        "description": "If someone likes the dog and the dog is young then the dog is red."
    },
    {
        "id": 5154,
        "statement": "is(dog, young) :- chases(X, cat), likes(cat, dog).",
        "description": "If someone chases the cat and the cat likes the dog then the dog is young."
    },
    {
        "id": 5155,
        "statement": "likes(tiger, dog) :- chases(tiger, bear).",
        "description": "If the tiger chases the bear then the tiger likes the dog."
    },
    {
        "id": 5156,
        "statement": "chases(tiger, cat) :- chases(bear, tiger).",
        "description": "If the bear chases the tiger then the tiger chases the cat."
    },
    {
        "id": 5157,
        "statement": "sees(tiger, dog) :- chases(cat, tiger).",
        "description": "If the cat chases the tiger then the tiger sees the dog."
    },
    {
        "id": 5158,
        "statement": "is(X, round) :- is(X, rough), is(X, young).",
        "description": "Rough, young things are round."
    },
    {
        "id": 5159,
        "statement": "is(X, quiet) :- is(X, big), is(X, round).",
        "description": "Big, round things are quiet."
    },
    {
        "id": 5160,
        "statement": "is(X, cold) :- is(X, furry), is(X, young).",
        "description": "Furry, young things are cold."
    },
    {
        "id": 5161,
        "statement": "is(bob, quiet) :- is(bob, round).",
        "description": "If Bob is round then Bob is quiet."
    },
    {
        "id": 5162,
        "statement": "is(X, big) :- is(X, round), is(X, rough).",
        "description": "Round, rough things are big."
    },
    {
        "id": 5163,
        "statement": "is(X, kind) :- eats(X, squirrel).",
        "description": "If someone eats the squirrel then they are kind."
    },
    {
        "id": 5164,
        "statement": "eats(X, bald_eagle) :- chases(X, squirrel).",
        "description": "If someone chases the squirrel then they eat the bald eagle."
    },
    {
        "id": 5165,
        "statement": "eats(cow, squirrel) :- eats(X, cow), eats(X, squirrel).",
        "description": "If someone eats the cow and they eat the squirrel then the cow eats the squirrel."
    },
    {
        "id": 5166,
        "statement": "chases(X, squirrel) :- is(X, kind).",
        "description": "If someone is kind then they chase the squirrel."
    },
    {
        "id": 5167,
        "statement": "eats(bald_eagle, squirrel) :- eats(X, bald_eagle).",
        "description": "If someone eats the bald eagle then the bald eagle eats the squirrel."
    },
    {
        "id": 5168,
        "statement": "sees(X, cow) :- is(X, young), not needs(X, tiger).",
        "description": "If someone is young and they do not need the tiger then they see the cow."
    },
    {
        "id": 5169,
        "statement": "sees(tiger, cow) :- needs(X, tiger), visits(X, cat).",
        "description": "If someone needs the tiger and they visit the cat then the tiger sees the cow."
    },
    {
        "id": 5170,
        "statement": "visits(X, cat) :- visits(X, tiger), not is(X, young).",
        "description": "If someone visits the tiger and they are not young then they visit the cat."
    },
    {
        "id": 5171,
        "statement": "visits(X, cat) :- needs(X, cow), is(cow, young).",
        "description": "If someone needs the cow and the cow is young then they visit the cat."
    },
    {
        "id": 5172,
        "statement": "visits(X, tiger) :- sees(X, cow).",
        "description": "If someone sees the cow then they visit the tiger."
    },
    {
        "id": 5173,
        "statement": "needs(rabbit, cat) :- sees(X, cat), needs(cat, rabbit).",
        "description": "If someone sees the cat and the cat needs the rabbit then the rabbit needs the cat."
    },
    {
        "id": 5174,
        "statement": "sees(tiger, cat) :- visits(X, tiger).",
        "description": "If someone visits the tiger then the tiger sees the cat."
    },
    {
        "id": 5175,
        "statement": "needs(X, cow) :- is(X, big), sees(X, tiger).",
        "description": "If someone is big and they see the tiger then they need the cow."
    },
    {
        "id": 5176,
        "statement": "chases(mouse, cat) :- sees(dog, mouse).",
        "description": "If the dog sees the mouse then the mouse chases the cat."
    },
    {
        "id": 5177,
        "statement": "sees(X, cat) :- is(X, round).",
        "description": "If something is round then it sees the cat."
    },
    {
        "id": 5178,
        "statement": "visits(mouse, cat) :- sees(mouse, dog).",
        "description": "If the mouse sees the dog then the mouse visits the cat."
    },
    {
        "id": 5179,
        "statement": "chases(X, cat) :- visits(X, cat), sees(cat, mouse).",
        "description": "If something visits the cat and the cat sees the mouse then it chases the cat."
    },
    {
        "id": 5180,
        "statement": "visits(lion, dog) :- sees(dog, mouse), chases(mouse, lion).",
        "description": "If the dog sees the mouse and the mouse chases the lion then the lion visits the dog."
    },
    {
        "id": 5181,
        "statement": "is(X, cold) :- sees(X, cat).",
        "description": "If something sees the cat then it is cold."
    },
    {
        "id": 5182,
        "statement": "is(X, round) :- chases(X, cat).",
        "description": "If something chases the cat then it is round."
    },
    {
        "id": 5183,
        "statement": "is(X, cold) :- is(X, quiet).",
        "description": "If someone is quiet then they are cold."
    },
    {
        "id": 5184,
        "statement": "is(X, cold) :- is(X, smart), is(X, kind).",
        "description": "All smart, kind people are cold."
    },
    {
        "id": 5185,
        "statement": "is(X, round) :- is(X, kind).",
        "description": "All kind people are round."
    },
    {
        "id": 5186,
        "statement": "is(charlie, smart) :- is(charlie, white), is(charlie, round).",
        "description": "If Charlie is white and Charlie is round then Charlie is smart."
    },
    {
        "id": 5187,
        "statement": "is(X, white) :- is(X, quiet), is(X, smart).",
        "description": "If someone is quiet and smart then they are white."
    },
    {
        "id": 5188,
        "statement": "is(gary, white) :- is(gary, smart).",
        "description": "If Gary is smart then Gary is white."
    },
    {
        "id": 5189,
        "statement": "is(X, furry) :- is(X, young).",
        "description": "Young people are furry."
    },
    {
        "id": 5190,
        "statement": "is(X, furry) :- is(X, white), is(X, young).",
        "description": "If someone is white and young then they are furry."
    },
    {
        "id": 5191,
        "statement": "is(X, furry) :- is(X, round), not is(X, blue).",
        "description": "If someone is round and not blue then they are furry."
    },
    {
        "id": 5192,
        "statement": "is(X, kind) :- is(X, round), is(X, furry).",
        "description": "Round, furry people are kind."
    },
    {
        "id": 5193,
        "statement": "is(X, cold) :- is(X, kind).",
        "description": "If someone is kind then they are cold."
    },
    {
        "id": 5194,
        "statement": "is(harry, round) :- is(harry, big), is(harry, red).",
        "description": "If Harry is big and Harry is red then Harry is round."
    },
    {
        "id": 5195,
        "statement": "is(X, red) :- is(X, rough), is(X, young).",
        "description": "Rough, young things are red."
    },
    {
        "id": 5196,
        "statement": "is(X, round) :- is(X, big), is(X, cold).",
        "description": "All big, cold things are round."
    },
    {
        "id": 5197,
        "statement": "is(charlie, round) :- is(charlie, rough).",
        "description": "If Charlie is rough then Charlie is round."
    },
    {
        "id": 5198,
        "statement": "is(X, rough) :- is(X, big), is(X, round).",
        "description": "Big, round things are rough."
    },
    {
        "id": 5199,
        "statement": "is(X, cold) :- is(X, big), is(X, young).",
        "description": "Big, young things are cold."
    },
    {
        "id": 5200,
        "statement": "is(X, round) :- is(X, blue), is(X, smart).",
        "description": "Blue, smart things are round."
    },
    {
        "id": 5201,
        "statement": "is(X, round) :- is(X, young), is(X, blue).",
        "description": "Young, blue things are round."
    },
    {
        "id": 5202,
        "statement": "is(X, rough) :- is(X, smart), is(X, young).",
        "description": "All smart, young things are rough."
    },
    {
        "id": 5203,
        "statement": "is(X, smart) :- is(X, rough), not is(X, blue).",
        "description": "If something is rough and not blue then it is smart."
    },
    {
        "id": 5204,
        "statement": "is(X, smart) :- is(X, young), is(X, round).",
        "description": "All young, round things are smart."
    },
    {
        "id": 5205,
        "statement": "is(X, red) :- is(X, blue), is(X, rough).",
        "description": "If something is blue and rough then it is red."
    },
    {
        "id": 5206,
        "statement": "is(X, cold) :- is(X, young), is(X, white).",
        "description": "If someone is young and white then they are cold."
    },
    {
        "id": 5207,
        "statement": "is(X, nice) :- is(X, furry), is(X, white).",
        "description": "All furry, white people are nice."
    },
    {
        "id": 5208,
        "statement": "is(anne, furry) :- is(anne, nice).",
        "description": "If Anne is nice then Anne is furry."
    },
    {
        "id": 5209,
        "statement": "is(X, white) :- is(X, smart), is(X, nice).",
        "description": "All smart, nice people are white."
    },
    {
        "id": 5210,
        "statement": "is(harry, big) :- is(harry, young).",
        "description": "If Harry is young then Harry is big."
    },
    {
        "id": 5211,
        "statement": "is(X, nice) :- is(X, smart).",
        "description": "All smart people are nice."
    },
    {
        "id": 5212,
        "statement": "is(X, round) :- eats(X, rabbit), is(X, rough).",
        "description": "If someone eats the rabbit and they are rough then they are round."
    },
    {
        "id": 5213,
        "statement": "likes(rabbit, squirrel) :- likes(X, rabbit).",
        "description": "If someone likes the rabbit then the rabbit likes the squirrel."
    },
    {
        "id": 5214,
        "statement": "likes(lion, bald_eagle) :- eats(rabbit, lion), likes(lion, rabbit).",
        "description": "If the rabbit eats the lion and the lion likes the rabbit then the lion likes the bald eagle."
    },
    {
        "id": 5215,
        "statement": "likes(X, bald_eagle) :- eats(X, rabbit), chases(X, squirrel).",
        "description": "If someone eats the rabbit and they chase the squirrel then they like the bald eagle."
    },
    {
        "id": 5216,
        "statement": "likes(lion, bald_eagle) :- likes(rabbit, lion), chases(rabbit, squirrel).",
        "description": "If the rabbit likes the lion and the rabbit chases the squirrel then the lion likes the bald eagle."
    },
    {
        "id": 5217,
        "statement": "likes(bald_eagle, squirrel) :- chases(X, bald_eagle), eats(bald_eagle, lion).",
        "description": "If someone chases the bald eagle and the bald eagle eats the lion then the bald eagle likes the squirrel."
    },
    {
        "id": 5218,
        "statement": "likes(X, rabbit) :- likes(X, bald_eagle).",
        "description": "If someone likes the bald eagle then they like the rabbit."
    },
    {
        "id": 5219,
        "statement": "sees(X, tiger) :- likes(X, dog), sees(X, dog).",
        "description": "If someone likes the dog and they see the dog then they see the tiger."
    },
    {
        "id": 5220,
        "statement": "sees(X, tiger) :- is(X, round).",
        "description": "If someone is round then they see the tiger."
    },
    {
        "id": 5221,
        "statement": "is(tiger, nice) :- is(tiger, cold), is(tiger, blue).",
        "description": "If the tiger is cold and the tiger is blue then the tiger is nice."
    },
    {
        "id": 5222,
        "statement": "likes(X, dog) :- sees(X, tiger), not is(X, blue).",
        "description": "If someone sees the tiger and they are not blue then they like the dog."
    },
    {
        "id": 5223,
        "statement": "likes(X, tiger) :- sees(X, squirrel).",
        "description": "If someone sees the squirrel then they like the tiger."
    },
    {
        "id": 5224,
        "statement": "is(X, round) :- likes(X, tiger).",
        "description": "If someone likes the tiger then they are round."
    },
    {
        "id": 5225,
        "statement": "sees(dog, cow) :- likes(X, tiger), not likes(X, dog).",
        "description": "If someone likes the tiger and they do not like the dog then the dog sees the cow."
    },
    {
        "id": 5226,
        "statement": "likes(X, cow) :- likes(X, dog), sees(X, cow).",
        "description": "If someone likes the dog and they see the cow then they like the cow."
    },
    {
        "id": 5227,
        "statement": "likes(X, cow) :- is(X, cold).",
        "description": "If someone is cold then they like the cow."
    },
    {
        "id": 5228,
        "statement": "is(X, rough) :- is(X, cold).",
        "description": "Cold things are rough."
    },
    {
        "id": 5229,
        "statement": "is(X, round) :- is(X, red), is(X, smart).",
        "description": "All red, smart things are round."
    },
    {
        "id": 5230,
        "statement": "is(X, young) :- is(X, red).",
        "description": "If something is red then it is young."
    },
    {
        "id": 5231,
        "statement": "is(X, cold) :- is(X, red), is(X, young).",
        "description": "Red, young things are cold."
    },
    {
        "id": 5232,
        "statement": "is(X, green) :- is(X, cold), is(X, young).",
        "description": "If something is cold and young then it is green."
    },
    {
        "id": 5233,
        "statement": "likes(X, tiger) :- is(X, cold), is(X, red).",
        "description": "If something is cold and red then it likes the tiger."
    },
    {
        "id": 5234,
        "statement": "likes(X, rabbit) :- is(X, young), sees(X, lion).",
        "description": "If something is young and it sees the lion then it likes the rabbit."
    },
    {
        "id": 5235,
        "statement": "eats(dog, lion) :- eats(X, dog).",
        "description": "If something eats the dog then the dog eats the lion."
    },
    {
        "id": 5236,
        "statement": "eats(X, dog) :- eats(X, tiger), likes(X, tiger).",
        "description": "If something eats the tiger and it likes the tiger then it eats the dog."
    },
    {
        "id": 5237,
        "statement": "likes(X, tiger) :- is(X, round).",
        "description": "If something is round then it likes the tiger."
    },
    {
        "id": 5238,
        "statement": "is(lion, red) :- eats(X, lion).",
        "description": "If something eats the lion then the lion is red."
    },
    {
        "id": 5239,
        "statement": "is(X, cold) :- is(X, blue), is(X, big).",
        "description": "All blue, big things are cold."
    },
    {
        "id": 5240,
        "statement": "is(erin, cold) :- is(erin, blue).",
        "description": "If Erin is blue then Erin is cold."
    },
    {
        "id": 5241,
        "statement": "is(X, red) :- is(X, big), is(X, round).",
        "description": "All big, round things are red."
    },
    {
        "id": 5242,
        "statement": "is(X, red) :- is(X, rough), not is(X, cold).",
        "description": "If something is rough and not cold then it is red."
    },
    {
        "id": 5243,
        "statement": "is(gary, round) :- is(gary, red), is(gary, rough).",
        "description": "If Gary is red and Gary is rough then Gary is round."
    },
    {
        "id": 5244,
        "statement": "is(bald_eagle, rough) :- sees(X, bear), chases(bear, bald_eagle).",
        "description": "If someone sees the bear and the bear chases the bald eagle then the bald eagle is rough."
    },
    {
        "id": 5245,
        "statement": "is(bald_eagle, rough) :- sees(bear, bald_eagle).",
        "description": "If the bear sees the bald eagle then the bald eagle is rough."
    },
    {
        "id": 5246,
        "statement": "chases(X, bald_eagle) :- sees(X, squirrel), is(squirrel, rough).",
        "description": "If someone sees the squirrel and the squirrel is rough then they chase the bald eagle."
    },
    {
        "id": 5247,
        "statement": "chases(X, bald_eagle) :- is(X, big), is(X, green).",
        "description": "If someone is big and green then they chase the bald eagle."
    },
    {
        "id": 5248,
        "statement": "is(squirrel, big) :- is(squirrel, rough), is(squirrel, blue).",
        "description": "If the squirrel is rough and the squirrel is blue then the squirrel is big."
    },
    {
        "id": 5249,
        "statement": "is(X, blue) :- eats(X, cow).",
        "description": "If someone eats the cow then they are blue."
    },
    {
        "id": 5250,
        "statement": "is(squirrel, green) :- eats(squirrel, mouse).",
        "description": "If the squirrel eats the mouse then the squirrel is green."
    },
    {
        "id": 5251,
        "statement": "sees(bald_eagle, mouse) :- is(squirrel, nice), chases(squirrel, bald_eagle).",
        "description": "If the squirrel is nice and the squirrel chases the bald eagle then the bald eagle sees the mouse."
    },
    {
        "id": 5252,
        "statement": "sees(bald_eagle, tiger) :- eats(X, bald_eagle), eats(bald_eagle, mouse).",
        "description": "If someone eats the bald eagle and the bald eagle eats the mouse then the bald eagle sees the tiger."
    },
    {
        "id": 5253,
        "statement": "sees(squirrel, bald_eagle) :- sees(tiger, squirrel), chases(tiger, bald_eagle).",
        "description": "If the tiger sees the squirrel and the tiger chases the bald eagle then the squirrel sees the bald eagle."
    },
    {
        "id": 5254,
        "statement": "is(X, green) :- sees(X, tiger).",
        "description": "If someone sees the tiger then they are green."
    },
    {
        "id": 5255,
        "statement": "is(X, cold) :- eats(X, mouse), not sees(X, mouse).",
        "description": "If someone eats the mouse and they do not see the mouse then they are cold."
    },
    {
        "id": 5256,
        "statement": "eats(X, squirrel) :- is(X, cold).",
        "description": "If someone is cold then they eat the squirrel."
    },
    {
        "id": 5257,
        "statement": "is(X, big) :- is(X, green), is(X, blue).",
        "description": "If someone is green and blue then they are big."
    },
    {
        "id": 5258,
        "statement": "is(X, smart) :- is(X, white), is(X, furry).",
        "description": "If someone is white and furry then they are smart."
    },
    {
        "id": 5259,
        "statement": "is(X, blue) :- is(X, green), is(X, furry).",
        "description": "All green, furry people are blue."
    },
    {
        "id": 5260,
        "statement": "is(X, blue) :- is(X, rough), is(X, round).",
        "description": "All rough, round things are blue."
    },
    {
        "id": 5261,
        "statement": "is(X, green) :- is(X, nice), is(X, round).",
        "description": "All nice, round things are green."
    },
    {
        "id": 5262,
        "statement": "is(X, nice) :- is(X, quiet), is(X, blue).",
        "description": "If something is quiet and blue then it is nice."
    },
    {
        "id": 5263,
        "statement": "is(X, cold) :- is(X, nice), not is(X, quiet).",
        "description": "If something is nice and not quiet then it is cold."
    },
    {
        "id": 5264,
        "statement": "is(X, quiet) :- is(X, big), not is(X, white).",
        "description": "If someone is big and not white then they are quiet."
    },
    {
        "id": 5265,
        "statement": "is(X, young) :- is(X, round).",
        "description": "Round people are young."
    },
    {
        "id": 5266,
        "statement": "is(charlie, young) :- is(charlie, big), is(charlie, round).",
        "description": "If Charlie is big and Charlie is round then Charlie is young."
    },
    {
        "id": 5267,
        "statement": "is(X, round) :- is(X, white).",
        "description": "White people are round."
    },
    {
        "id": 5268,
        "statement": "is(X, cold) :- is(X, quiet), is(X, white).",
        "description": "All quiet, white people are cold."
    },
    {
        "id": 5269,
        "statement": "is(X, cold) :- is(X, quiet), is(X, young).",
        "description": "All quiet, young people are cold."
    },
    {
        "id": 5270,
        "statement": "is(X, young) :- is(X, big).",
        "description": "Big things are young."
    },
    {
        "id": 5271,
        "statement": "is(X, young) :- is(X, red), is(X, round).",
        "description": "All red, round things are young."
    },
    {
        "id": 5272,
        "statement": "is(anne, red) :- is(anne, big), is(anne, round).",
        "description": "If Anne is big and Anne is round then Anne is red."
    },
    {
        "id": 5273,
        "statement": "is(X, round) :- is(X, white), is(X, cold).",
        "description": "All white, cold things are round."
    },
    {
        "id": 5274,
        "statement": "is(rabbit, cold) :- is(rabbit, red), likes(rabbit, cow).",
        "description": "If the rabbit is red and the rabbit likes the cow then the rabbit is cold."
    },
    {
        "id": 5275,
        "statement": "likes(cow, rabbit) :- chases(cow, rabbit).",
        "description": "If the cow chases the rabbit then the cow likes the rabbit."
    },
    {
        "id": 5276,
        "statement": "likes(bear, rabbit) :- visits(X, bear).",
        "description": "If someone visits the bear then the bear likes the rabbit."
    },
    {
        "id": 5277,
        "statement": "is(cow, red) :- likes(X, cow).",
        "description": "If someone likes the cow then the cow is red."
    },
    {
        "id": 5278,
        "statement": "chases(rabbit, bear) :- likes(X, cow), likes(cow, rabbit).",
        "description": "If someone likes the cow and the cow likes the rabbit then the rabbit chases the bear."
    },
    {
        "id": 5279,
        "statement": "likes(X, cow) :- chases(X, mouse).",
        "description": "If someone chases the mouse then they like the cow."
    },
    {
        "id": 5280,
        "statement": "sees(X, lion) :- sees(X, rabbit).",
        "description": "If something sees the rabbit then it sees the lion."
    },
    {
        "id": 5281,
        "statement": "sees(X, rabbit) :- is(X, green).",
        "description": "If something is green then it sees the rabbit."
    },
    {
        "id": 5282,
        "statement": "sees(cat, lion) :- sees(X, lion), visits(lion, cat).",
        "description": "If something sees the lion and the lion visits the cat then the cat sees the lion."
    },
    {
        "id": 5283,
        "statement": "sees(X, cat) :- needs(X, squirrel).",
        "description": "If something needs the squirrel then it sees the cat."
    },
    {
        "id": 5284,
        "statement": "visits(X, rabbit) :- needs(X, cat).",
        "description": "If something needs the cat then it visits the rabbit."
    },
    {
        "id": 5285,
        "statement": "visits(X, cat) :- sees(X, lion), visits(X, lion).",
        "description": "If something sees the lion and it visits the lion then it visits the cat."
    },
    {
        "id": 5286,
        "statement": "needs(cat, squirrel) :- is(X, red), visits(X, cat).",
        "description": "If something is red and it visits the cat then the cat needs the squirrel."
    },
    {
        "id": 5287,
        "statement": "sees(squirrel, cat) :- visits(X, rabbit), not needs(rabbit, squirrel).",
        "description": "If something visits the rabbit and the rabbit does not need the squirrel then the squirrel sees the cat."
    },
    {
        "id": 5288,
        "statement": "is(X, kind) :- is(X, round), is(X, nice).",
        "description": "If something is round and nice then it is kind."
    },
    {
        "id": 5289,
        "statement": "is(X, furry) :- is(X, round), is(X, nice).",
        "description": "If something is round and nice then it is furry."
    },
    {
        "id": 5290,
        "statement": "is(X, furry) :- is(X, big), is(X, young).",
        "description": "All big, young things are furry."
    },
    {
        "id": 5291,
        "statement": "is(X, big) :- is(X, blue), is(X, round).",
        "description": "All blue, round things are big."
    },
    {
        "id": 5292,
        "statement": "is(X, blue) :- is(X, furry), is(X, big).",
        "description": "If something is furry and big then it is blue."
    },
    {
        "id": 5293,
        "statement": "is(X, nice) :- is(X, big), is(X, young).",
        "description": "If something is big and young then it is nice."
    },
    {
        "id": 5294,
        "statement": "is(bob, cold) :- is(bob, big), is(bob, furry).",
        "description": "If Bob is big and Bob is furry then Bob is cold."
    },
    {
        "id": 5295,
        "statement": "is(X, big) :- is(X, cold).",
        "description": "Cold people are big."
    },
    {
        "id": 5296,
        "statement": "is(X, big) :- is(X, cold), is(X, young).",
        "description": "All cold, young people are big."
    },
    {
        "id": 5297,
        "statement": "is(X, furry) :- is(X, cold), is(X, big).",
        "description": "All cold, big people are furry."
    },
    {
        "id": 5298,
        "statement": "is(X, smart) :- is(X, green).",
        "description": "All green people are smart."
    },
    {
        "id": 5299,
        "statement": "is(dave, big) :- is(dave, furry), is(dave, cold).",
        "description": "If Dave is furry and Dave is cold then Dave is big."
    },
    {
        "id": 5300,
        "statement": "is(X, young) :- is(X, smart), is(X, furry).",
        "description": "All smart, furry people are young."
    },
    {
        "id": 5301,
        "statement": "is(X, cold) :- is(X, big).",
        "description": "If someone is big then they are cold."
    },
    {
        "id": 5302,
        "statement": "is(charlie, white) :- is(charlie, round).",
        "description": "If Charlie is round then Charlie is white."
    },
    {
        "id": 5303,
        "statement": "is(X, white) :- is(X, furry), is(X, blue).",
        "description": "All furry, blue things are white."
    },
    {
        "id": 5304,
        "statement": "is(bob, blue) :- is(bob, green).",
        "description": "If Bob is green then Bob is blue."
    },
    {
        "id": 5305,
        "statement": "is(X, round) :- is(X, white), is(X, green).",
        "description": "If something is white and green then it is round."
    },
    {
        "id": 5306,
        "statement": "is(X, furry) :- is(X, round), is(X, blue).",
        "description": "If something is round and blue then it is furry."
    },
    {
        "id": 5307,
        "statement": "is(X, blue) :- is(X, green).",
        "description": "If something is green then it is blue."
    },
    {
        "id": 5308,
        "statement": "is(X, big) :- is(X, white), is(X, green).",
        "description": "If something is white and green then it is big."
    },
    {
        "id": 5309,
        "statement": "is(fiona, nice) :- is(fiona, big).",
        "description": "If Fiona is big then Fiona is nice."
    },
    {
        "id": 5310,
        "statement": "is(X, quiet) :- is(X, furry), is(X, big).",
        "description": "All furry, big things are quiet."
    },
    {
        "id": 5311,
        "statement": "is(X, furry) :- is(X, quiet).",
        "description": "If something is quiet then it is furry."
    },
    {
        "id": 5312,
        "statement": "is(X, nice) :- is(X, quiet), not is(X, big).",
        "description": "If something is quiet and not big then it is nice."
    },
    {
        "id": 5313,
        "statement": "is(X, nice) :- is(X, big), is(X, white).",
        "description": "Big, white things are nice."
    },
    {
        "id": 5314,
        "statement": "is(X, white) :- is(X, furry).",
        "description": "If something is furry then it is white."
    },
    {
        "id": 5315,
        "statement": "is(dave, cold) :- is(dave, big), not is(dave, quiet).",
        "description": "If Dave is big and Dave is not quiet then Dave is cold."
    },
    {
        "id": 5316,
        "statement": "is(X, young) :- is(X, big).",
        "description": "If someone is big then they are young."
    },
    {
        "id": 5317,
        "statement": "is(X, red) :- is(X, furry), is(X, big).",
        "description": "If someone is furry and big then they are red."
    },
    {
        "id": 5318,
        "statement": "is(X, green) :- is(X, cold), is(X, furry).",
        "description": "Cold, furry people are green."
    },
    {
        "id": 5319,
        "statement": "is(X, furry) :- is(X, red), is(X, big).",
        "description": "If someone is red and big then they are furry."
    },
    {
        "id": 5320,
        "statement": "is(X, furry) :- is(X, big).",
        "description": "If someone is big then they are furry."
    },
    {
        "id": 5321,
        "statement": "needs(dog, cat) :- is(dog, green).",
        "description": "If the dog is green then the dog needs the cat."
    },
    {
        "id": 5322,
        "statement": "needs(cow, dog) :- needs(X, cow).",
        "description": "If something needs the cow then the cow needs the dog."
    },
    {
        "id": 5323,
        "statement": "is(X, blue) :- sees(X, cow), is(cow, blue).",
        "description": "If something sees the cow and the cow is blue then it is blue."
    },
    {
        "id": 5324,
        "statement": "is(cat, rough) :- sees(X, dog), needs(dog, cat).",
        "description": "If something sees the dog and the dog needs the cat then the cat is rough."
    },
    {
        "id": 5325,
        "statement": "needs(X, cow) :- is(X, blue), is(X, rough).",
        "description": "If something is blue and rough then it needs the cow."
    },
    {
        "id": 5326,
        "statement": "needs(cow, lion) :- needs(cat, cow), likes(cat, cow).",
        "description": "If the cat needs the cow and the cat likes the cow then the cow needs the lion."
    },
    {
        "id": 5327,
        "statement": "sees(X, dog) :- needs(X, cow), needs(cow, lion).",
        "description": "If something needs the cow and the cow needs the lion then it sees the dog."
    },
    {
        "id": 5328,
        "statement": "likes(cow, cat) :- likes(cat, lion), sees(cat, cow).",
        "description": "If the cat likes the lion and the cat sees the cow then the cow likes the cat."
    },
    {
        "id": 5329,
        "statement": "eats(cow, bald_eagle) :- sees(cow, bald_eagle).",
        "description": "If the cow sees the bald eagle then the cow eats the bald eagle."
    },
    {
        "id": 5330,
        "statement": "sees(cow, bald_eagle) :- sees(X, cow).",
        "description": "If someone sees the cow then the cow sees the bald eagle."
    },
    {
        "id": 5331,
        "statement": "sees(X, bald_eagle) :- is(X, young), visits(X, cat).",
        "description": "If someone is young and they visit the cat then they see the bald eagle."
    },
    {
        "id": 5332,
        "statement": "sees(X, cat) :- eats(X, bald_eagle).",
        "description": "If someone eats the bald eagle then they see the cat."
    },
    {
        "id": 5333,
        "statement": "is(X, cold) :- sees(X, cat).",
        "description": "If someone sees the cat then they are cold."
    },
    {
        "id": 5334,
        "statement": "is(X, cold) :- is(X, big), is(X, blue).",
        "description": "All big, blue things are cold."
    },
    {
        "id": 5335,
        "statement": "is(X, cold) :- is(X, rough), is(X, big).",
        "description": "If something is rough and big then it is cold."
    },
    {
        "id": 5336,
        "statement": "is(X, big) :- is(X, rough), is(X, white).",
        "description": "Rough, white things are big."
    },
    {
        "id": 5337,
        "statement": "is(X, white) :- is(X, blue).",
        "description": "All blue things are white."
    },
    {
        "id": 5338,
        "statement": "is(anne, kind) :- is(anne, furry).",
        "description": "If Anne is furry then Anne is kind."
    },
    {
        "id": 5339,
        "statement": "is(X, furry) :- is(X, rough), is(X, nice).",
        "description": "Rough, nice things are furry."
    },
    {
        "id": 5340,
        "statement": "is(anne, cold) :- is(anne, kind).",
        "description": "If Anne is kind then Anne is cold."
    },
    {
        "id": 5341,
        "statement": "is(X, nice) :- is(X, furry), is(X, kind).",
        "description": "If something is furry and kind then it is nice."
    },
    {
        "id": 5342,
        "statement": "is(X, rough) :- is(X, kind), is(X, smart).",
        "description": "Kind, smart things are rough."
    },
    {
        "id": 5343,
        "statement": "is(X, white) :- is(X, rough), is(X, kind).",
        "description": "If something is rough and kind then it is white."
    },
    {
        "id": 5344,
        "statement": "is(X, blue) :- is(X, smart), is(X, rough).",
        "description": "Smart, rough things are blue."
    },
    {
        "id": 5345,
        "statement": "is(X, green) :- is(X, rough), is(X, cold).",
        "description": "If something is rough and cold then it is green."
    },
    {
        "id": 5346,
        "statement": "is(X, green) :- is(X, cold), is(X, rough).",
        "description": "All cold, rough things are green."
    },
    {
        "id": 5347,
        "statement": "is(X, furry) :- is(X, cold), is(X, green).",
        "description": "If something is cold and green then it is furry."
    },
    {
        "id": 5348,
        "statement": "is(X, smart) :- is(X, blue), is(X, rough).",
        "description": "Blue, rough things are smart."
    },
    {
        "id": 5349,
        "statement": "is(X, rough) :- is(X, nice), is(X, round).",
        "description": "If someone is nice and round then they are rough."
    },
    {
        "id": 5350,
        "statement": "is(X, cold) :- is(X, nice), is(X, rough).",
        "description": "Nice, rough people are cold."
    },
    {
        "id": 5351,
        "statement": "is(X, cold) :- is(X, rough), not is(X, round).",
        "description": "If someone is rough and not round then they are cold."
    },
    {
        "id": 5352,
        "statement": "is(anne, red) :- is(anne, rough), is(anne, cold).",
        "description": "If Anne is rough and Anne is cold then Anne is red."
    },
    {
        "id": 5353,
        "statement": "is(X, blue) :- is(X, red), is(X, cold).",
        "description": "If someone is red and cold then they are blue."
    },
    {
        "id": 5354,
        "statement": "is(X, blue) :- is(X, round), is(X, cold).",
        "description": "All round, cold people are blue."
    },
    {
        "id": 5355,
        "statement": "is(X, round) :- is(X, big).",
        "description": "If someone is big then they are round."
    },
    {
        "id": 5356,
        "statement": "is(X, big) :- is(X, red), is(X, nice).",
        "description": "All red, nice people are big."
    },
    {
        "id": 5357,
        "statement": "is(X, blue) :- is(X, smart), is(X, green).",
        "description": "All smart, green people are blue."
    },
    {
        "id": 5358,
        "statement": "is(X, round) :- is(X, nice).",
        "description": "If someone is nice then they are round."
    },
    {
        "id": 5359,
        "statement": "is(X, big) :- is(X, red), is(X, blue).",
        "description": "Red, blue people are big."
    },
    {
        "id": 5360,
        "statement": "is(X, red) :- is(X, round).",
        "description": "If someone is round then they are red."
    },
    {
        "id": 5361,
        "statement": "is(X, smart) :- is(X, green), is(X, red).",
        "description": "Green, red people are smart."
    },
    {
        "id": 5362,
        "statement": "chases(cat, bear) :- eats(X, cat), is(X, kind).",
        "description": "If something eats the cat and it is kind then the cat chases the bear."
    },
    {
        "id": 5363,
        "statement": "is(X, kind) :- needs(X, bear).",
        "description": "If something needs the bear then it is kind."
    },
    {
        "id": 5364,
        "statement": "chases(X, cat) :- needs(X, cat), is(cat, nice).",
        "description": "If something needs the cat and the cat is nice then it chases the cat."
    },
    {
        "id": 5365,
        "statement": "needs(X, mouse) :- is(X, big).",
        "description": "If something is big then it needs the mouse."
    },
    {
        "id": 5366,
        "statement": "is(rabbit, kind) :- chases(X, cat), needs(X, rabbit).",
        "description": "If something chases the cat and it needs the rabbit then the rabbit is kind."
    },
    {
        "id": 5367,
        "statement": "eats(cat, rabbit) :- chases(cat, bear), is(cat, big).",
        "description": "If the cat chases the bear and the cat is big then the cat eats the rabbit."
    },
    {
        "id": 5368,
        "statement": "eats(X, cat) :- needs(X, mouse).",
        "description": "If something needs the mouse then it eats the cat."
    },
    {
        "id": 5369,
        "statement": "is(X, big) :- chases(X, bear).",
        "description": "If something chases the bear then it is big."
    },
    {
        "id": 5370,
        "statement": "chases(X, bear) :- is(X, kind).",
        "description": "If something is kind then it chases the bear."
    },
    {
        "id": 5371,
        "statement": "is(charlie, young) :- is(charlie, red), is(charlie, white).",
        "description": "If Charlie is red and Charlie is white then Charlie is young."
    },
    {
        "id": 5372,
        "statement": "is(X, smart) :- is(X, young), is(X, quiet).",
        "description": "All young, quiet things are smart."
    },
    {
        "id": 5373,
        "statement": "is(X, red) :- is(X, white), is(X, round).",
        "description": "White, round things are red."
    },
    {
        "id": 5374,
        "statement": "is(X, red) :- is(X, quiet), is(X, round).",
        "description": "All quiet, round things are red."
    },
    {
        "id": 5375,
        "statement": "is(X, round) :- is(X, nice), is(X, smart).",
        "description": "All nice, smart things are round."
    },
    {
        "id": 5376,
        "statement": "is(X, round) :- is(X, quiet), is(X, white).",
        "description": "All quiet, white things are round."
    },
    {
        "id": 5377,
        "statement": "is(X, round) :- is(X, quiet).",
        "description": "If something is quiet then it is round."
    },
    {
        "id": 5378,
        "statement": "is(X, smart) :- is(X, big).",
        "description": "All big people are smart."
    },
    {
        "id": 5379,
        "statement": "is(dave, quiet) :- is(dave, smart), is(dave, green).",
        "description": "If Dave is smart and Dave is green then Dave is quiet."
    },
    {
        "id": 5380,
        "statement": "is(X, blue) :- is(X, green), is(X, red).",
        "description": "Green, red people are blue."
    },
    {
        "id": 5381,
        "statement": "is(X, quiet) :- is(X, smart).",
        "description": "Smart people are quiet."
    },
    {
        "id": 5382,
        "statement": "is(anne, green) :- is(anne, furry), is(anne, smart).",
        "description": "If Anne is furry and Anne is smart then Anne is green."
    },
    {
        "id": 5383,
        "statement": "visits(tiger, cat).",
        "description": "The tiger visits the cat."
    },
    {
        "id": 5384,
        "statement": "visits(tiger, cow) :- sees(cat, tiger), likes(tiger, cat).",
        "description": "If the cat sees the tiger and the tiger likes the cat then the tiger visits the cow."
    },
    {
        "id": 5385,
        "statement": "is(cow, big) :- sees(squirrel, tiger), visits(squirrel, cow).",
        "description": "If the squirrel sees the tiger and the squirrel visits the cow then the cow is big."
    },
    {
        "id": 5386,
        "statement": "visits(X, tiger) :- is(X, young).",
        "description": "If something is young then it visits the tiger."
    },
    {
        "id": 5387,
        "statement": "visits(squirrel, cat) :- sees(X, squirrel).",
        "description": "If something sees the squirrel then the squirrel visits the cat."
    },
    {
        "id": 5388,
        "statement": "sees(X, tiger) :- is(X, round).",
        "description": "If something is round then it sees the tiger."
    },
    {
        "id": 5389,
        "statement": "visits(X, cow) :- is(X, big).",
        "description": "If something is big then it visits the cow."
    },
    {
        "id": 5390,
        "statement": "is(X, blue) :- sees(X, squirrel), likes(X, tiger).",
        "description": "If something sees the squirrel and it likes the tiger then it is blue."
    },
    {
        "id": 5391,
        "statement": "likes(cow, squirrel) :- is(cow, green).",
        "description": "If the cow is green then the cow likes the squirrel."
    },
    {
        "id": 5392,
        "statement": "needs(X, squirrel) :- is(X, cold).",
        "description": "If something is cold then it needs the squirrel."
    },
    {
        "id": 5393,
        "statement": "eats(X, cow) :- eats(X, bear), is(bear, green).",
        "description": "If something eats the bear and the bear is green then it eats the cow."
    },
    {
        "id": 5394,
        "statement": "visits(X, bear) :- eats(X, cow).",
        "description": "If something eats the cow then it visits the bear."
    },
    {
        "id": 5395,
        "statement": "visits(X, tiger) :- visits(X, bear).",
        "description": "If something visits the bear then it visits the tiger."
    },
    {
        "id": 5396,
        "statement": "eats(tiger, cow) :- visits(X, tiger).",
        "description": "If something visits the tiger then the tiger eats the cow."
    },
    {
        "id": 5397,
        "statement": "needs(bear, squirrel) :- is(X, big), eats(X, bear).",
        "description": "If something is big and it eats the bear then the bear needs the squirrel."
    },
    {
        "id": 5398,
        "statement": "needs(squirrel, cow) :- eats(X, squirrel).",
        "description": "If something eats the squirrel then the squirrel needs the cow."
    },
    {
        "id": 5399,
        "statement": "is(X, white) :- is(X, kind), is(X, nice).",
        "description": "Kind, nice things are white."
    },
    {
        "id": 5400,
        "statement": "is(X, nice) :- is(X, red), is(X, white).",
        "description": "Red, white things are nice."
    },
    {
        "id": 5401,
        "statement": "is(dave, red) :- is(dave, nice), is(dave, big).",
        "description": "If Dave is nice and Dave is big then Dave is red."
    },
    {
        "id": 5402,
        "statement": "is(X, nice) :- is(X, white).",
        "description": "White things are nice."
    },
    {
        "id": 5403,
        "statement": "is(X, red) :- is(X, white), is(X, furry).",
        "description": "All white, furry things are red."
    },
    {
        "id": 5404,
        "statement": "is(X, round) :- is(X, kind), is(X, red).",
        "description": "If something is kind and red then it is round."
    },
    {
        "id": 5405,
        "statement": "is(anne, red) :- is(anne, rough), is(anne, round).",
        "description": "If Anne is rough and Anne is round then Anne is red."
    },
    {
        "id": 5406,
        "statement": "is(bob, kind) :- is(bob, round), is(bob, red).",
        "description": "If Bob is round and Bob is red then Bob is kind."
    },
    {
        "id": 5407,
        "statement": "is(X, round) :- is(X, kind), is(X, rough).",
        "description": "All kind, rough people are round."
    },
    {
        "id": 5408,
        "statement": "is(X, red) :- is(X, furry), is(X, kind).",
        "description": "Furry, kind people are red."
    },
    {
        "id": 5409,
        "statement": "is(X, smart) :- is(X, kind), is(X, quiet).",
        "description": "If someone is kind and quiet then they are smart."
    },
    {
        "id": 5410,
        "statement": "is(X, quiet) :- is(X, smart).",
        "description": "All smart people are quiet."
    },
    {
        "id": 5411,
        "statement": "is(X, smart) :- is(X, rough), is(X, round).",
        "description": "All rough, round people are smart."
    },
    {
        "id": 5412,
        "statement": "is(erin, big) :- is(erin, white).",
        "description": "If Erin is white then Erin is big."
    },
    {
        "id": 5413,
        "statement": "is(X, quiet) :- is(X, furry), is(X, big).",
        "description": "All furry, big people are quiet."
    },
    {
        "id": 5414,
        "statement": "is(X, kind) :- is(X, big), is(X, white).",
        "description": "All big, white people are kind."
    },
    {
        "id": 5415,
        "statement": "is(erin, white) :- is(erin, big).",
        "description": "If Erin is big then Erin is white."
    },
    {
        "id": 5416,
        "statement": "is(X, red) :- is(X, quiet), is(X, kind).",
        "description": "If someone is quiet and kind then they are red."
    },
    {
        "id": 5417,
        "statement": "is(X, rough) :- is(X, big), is(X, smart).",
        "description": "All big, smart people are rough."
    },
    {
        "id": 5418,
        "statement": "is(X, young) :- is(X, big), is(X, nice).",
        "description": "All big, nice things are young."
    },
    {
        "id": 5419,
        "statement": "is(X, nice) :- is(X, rough), is(X, blue).",
        "description": "Rough, blue things are nice."
    },
    {
        "id": 5420,
        "statement": "is(X, rough) :- is(X, big), is(X, red).",
        "description": "All big, red things are rough."
    },
    {
        "id": 5421,
        "statement": "is(X, red) :- is(X, young), is(X, green).",
        "description": "Young, green things are red."
    },
    {
        "id": 5422,
        "statement": "is(X, red) :- is(X, cold), is(X, young).",
        "description": "If something is cold and young then it is red."
    },
    {
        "id": 5423,
        "statement": "is(X, green) :- is(X, red), is(X, big).",
        "description": "All red, big things are green."
    },
    {
        "id": 5424,
        "statement": "is(X, white) :- is(X, young), not is(X, nice).",
        "description": "If something is young and not nice then it is white."
    },
    {
        "id": 5425,
        "statement": "is(X, blue) :- is(X, furry), is(X, red).",
        "description": "If someone is furry and red then they are blue."
    },
    {
        "id": 5426,
        "statement": "is(X, round) :- is(X, furry), is(X, red).",
        "description": "If someone is furry and red then they are round."
    },
    {
        "id": 5427,
        "statement": "is(X, quiet) :- is(X, kind).",
        "description": "All kind people are quiet."
    },
    {
        "id": 5428,
        "statement": "is(gary, kind) :- is(gary, quiet), is(gary, red).",
        "description": "If Gary is quiet and Gary is red then Gary is kind."
    },
    {
        "id": 5429,
        "statement": "is(X, cold) :- is(X, kind).",
        "description": "If something is kind then it is cold."
    },
    {
        "id": 5430,
        "statement": "is(X, white) :- is(X, smart).",
        "description": "All smart things are white."
    },
    {
        "id": 5431,
        "statement": "is(X, kind) :- is(X, smart), is(X, round).",
        "description": "All smart, round things are kind."
    },
    {
        "id": 5432,
        "statement": "is(X, kind) :- is(X, cold), is(X, smart).",
        "description": "Cold, smart things are kind."
    },
    {
        "id": 5433,
        "statement": "eats(X, cat) :- is(X, nice), eats(X, bald_eagle).",
        "description": "If someone is nice and they eat the bald eagle then they eat the cat."
    },
    {
        "id": 5434,
        "statement": "is(bald_eagle, round) :- is(X, nice), chases(X, bald_eagle).",
        "description": "If someone is nice and they chase the bald eagle then the bald eagle is round."
    },
    {
        "id": 5435,
        "statement": "is(cat, nice) :- is(cat, green), likes(cat, lion).",
        "description": "If the cat is green and the cat likes the lion then the cat is nice."
    },
    {
        "id": 5436,
        "statement": "likes(bald_eagle, cat) :- likes(X, cat), chases(cat, bald_eagle).",
        "description": "If someone likes the cat and the cat chases the bald eagle then the bald eagle likes the cat."
    },
    {
        "id": 5437,
        "statement": "is(X, cold) :- is(X, quiet), is(X, young).",
        "description": "Quiet, young people are cold."
    },
    {
        "id": 5438,
        "statement": "is(X, kind) :- is(X, green).",
        "description": "If someone is green then they are kind."
    },
    {
        "id": 5439,
        "statement": "is(X, kind) :- is(X, blue).",
        "description": "Blue people are kind."
    },
    {
        "id": 5440,
        "statement": "is(X, young) :- is(X, quiet), is(X, blue).",
        "description": "All quiet, blue people are young."
    },
    {
        "id": 5441,
        "statement": "is(gary, cold) :- is(gary, blue).",
        "description": "If Gary is blue then Gary is cold."
    },
    {
        "id": 5442,
        "statement": "is(gary, quiet) :- is(gary, cold).",
        "description": "If Gary is cold then Gary is quiet."
    },
    {
        "id": 5443,
        "statement": "is(X, young) :- is(X, kind), is(X, big).",
        "description": "Kind, big people are young."
    },
    {
        "id": 5444,
        "statement": "is(harry, nice) :- is(harry, blue), is(harry, kind).",
        "description": "If Harry is blue and Harry is kind then Harry is nice."
    },
    {
        "id": 5445,
        "statement": "is(X, kind) :- is(X, big), is(X, rough).",
        "description": "If someone is big and rough then they are kind."
    },
    {
        "id": 5446,
        "statement": "is(X, red) :- is(X, furry), is(X, blue).",
        "description": "Furry, blue things are red."
    },
    {
        "id": 5447,
        "statement": "is(X, blue) :- is(X, quiet).",
        "description": "All quiet things are blue."
    },
    {
        "id": 5448,
        "statement": "is(X, young) :- is(X, blue), is(X, quiet).",
        "description": "If someone is blue and quiet then they are young."
    },
    {
        "id": 5449,
        "statement": "is(X, young) :- is(X, kind).",
        "description": "If someone is kind then they are young."
    },
    {
        "id": 5450,
        "statement": "is(X, rough) :- is(X, cold), is(X, kind).",
        "description": "All cold, kind people are rough."
    },
    {
        "id": 5451,
        "statement": "is(X, quiet) :- is(X, cold).",
        "description": "Cold people are quiet."
    },
    {
        "id": 5452,
        "statement": "is(X, green) :- is(X, rough), is(X, kind).",
        "description": "Rough, kind people are green."
    },
    {
        "id": 5453,
        "statement": "is(X, kind) :- is(X, big).",
        "description": "Big people are kind."
    },
    {
        "id": 5454,
        "statement": "is(X, cold) :- is(X, furry), is(X, green).",
        "description": "If someone is furry and green then they are cold."
    },
    {
        "id": 5455,
        "statement": "is(X, furry) :- is(X, cold).",
        "description": "All cold people are furry."
    },
    {
        "id": 5456,
        "statement": "is(anne, big) :- is(anne, furry).",
        "description": "If Anne is furry then Anne is big."
    },
    {
        "id": 5457,
        "statement": "is(bob, nice) :- is(bob, cold), is(bob, white).",
        "description": "If Bob is cold and Bob is white then Bob is nice."
    },
    {
        "id": 5458,
        "statement": "is(X, round) :- is(X, green).",
        "description": "All green things are round."
    },
    {
        "id": 5459,
        "statement": "is(X, cold) :- is(X, nice), is(X, big).",
        "description": "Nice, big things are cold."
    },
    {
        "id": 5460,
        "statement": "is(X, kind) :- is(X, young), is(X, big).",
        "description": "All young, big things are kind."
    },
    {
        "id": 5461,
        "statement": "is(X, red) :- is(X, smart).",
        "description": "If someone is smart then they are red."
    },
    {
        "id": 5462,
        "statement": "is(X, furry) :- is(X, kind), is(X, young).",
        "description": "Kind, young people are furry."
    },
    {
        "id": 5463,
        "statement": "is(X, kind) :- is(X, red), is(X, young).",
        "description": "All red, young people are kind."
    },
    {
        "id": 5464,
        "statement": "is(X, round) :- is(X, furry), is(X, red).",
        "description": "Furry, red people are round."
    },
    {
        "id": 5465,
        "statement": "is(X, rough) :- is(X, quiet), is(X, big).",
        "description": "Quiet, big people are rough."
    },
    {
        "id": 5466,
        "statement": "is(X, cold) :- is(X, big).",
        "description": "Big people are cold."
    },
    {
        "id": 5467,
        "statement": "is(X, red) :- is(X, blue), is(X, cold).",
        "description": "All blue, cold people are red."
    },
    {
        "id": 5468,
        "statement": "is(X, smart) :- is(X, green), is(X, rough).",
        "description": "Green, rough people are smart."
    },
    {
        "id": 5469,
        "statement": "is(X, quiet) :- is(X, big).",
        "description": "All big people are quiet."
    },
    {
        "id": 5470,
        "statement": "is(X, green) :- is(X, quiet).",
        "description": "Quiet people are green."
    },
    {
        "id": 5471,
        "statement": "is(X, round) :- is(X, green).",
        "description": "All green people are round."
    },
    {
        "id": 5472,
        "statement": "is(X, furry) :- is(X, round), not is(X, big).",
        "description": "If someone is round and not big then they are furry."
    },
    {
        "id": 5473,
        "statement": "is(X, furry) :- is(X, quiet), not is(X, green).",
        "description": "If someone is quiet and not green then they are furry."
    },
    {
        "id": 5474,
        "statement": "is(X, furry) :- is(X, smart), is(X, round).",
        "description": "All smart, round people are furry."
    },
    {
        "id": 5475,
        "statement": "is(X, young) :- is(X, white).",
        "description": "White people are young."
    },
    {
        "id": 5476,
        "statement": "is(X, cold) :- is(X, nice).",
        "description": "Nice people are cold."
    },
    {
        "id": 5477,
        "statement": "is(gary, young) :- is(gary, cold).",
        "description": "If Gary is cold then Gary is young."
    },
    {
        "id": 5478,
        "statement": "is(X, furry) :- is(X, nice), is(X, big).",
        "description": "If someone is nice and big then they are furry."
    },
    {
        "id": 5479,
        "statement": "is(charlie, furry) :- is(charlie, white).",
        "description": "If Charlie is white then Charlie is furry."
    },
    {
        "id": 5480,
        "statement": "is(X, kind) :- is(X, young), is(X, rough).",
        "description": "Young, rough people are kind."
    },
    {
        "id": 5481,
        "statement": "is(harry, white) :- is(harry, kind).",
        "description": "If Harry is kind then Harry is white."
    },
    {
        "id": 5482,
        "statement": "is(X, cold) :- is(X, kind), is(X, white).",
        "description": "Kind, white people are cold."
    },
    {
        "id": 5483,
        "statement": "is(gary, young) :- is(gary, round).",
        "description": "If Gary is round then Gary is young."
    },
    {
        "id": 5484,
        "statement": "is(X, young) :- is(X, cold), is(X, kind).",
        "description": "All cold, kind people are young."
    },
    {
        "id": 5485,
        "statement": "is(X, white) :- is(X, kind), is(X, rough).",
        "description": "All kind, rough people are white."
    },
    {
        "id": 5486,
        "statement": "is(erin, big) :- is(erin, kind), is(erin, smart).",
        "description": "If Erin is kind and Erin is smart then Erin is big."
    },
    {
        "id": 5487,
        "statement": "is(erin, rough) :- is(erin, round).",
        "description": "If Erin is round then Erin is rough."
    },
    {
        "id": 5488,
        "statement": "is(X, rough) :- is(X, quiet), is(X, big).",
        "description": "Quiet, big things are rough."
    },
    {
        "id": 5489,
        "statement": "is(X, round) :- is(X, rough).",
        "description": "If something is rough then it is round."
    },
    {
        "id": 5490,
        "statement": "is(X, smart) :- is(X, furry), is(X, round).",
        "description": "All furry, round things are smart."
    },
    {
        "id": 5491,
        "statement": "is(anne, smart) :- is(anne, cold).",
        "description": "If Anne is cold then Anne is smart."
    },
    {
        "id": 5492,
        "statement": "is(X, smart) :- is(X, nice), is(X, furry).",
        "description": "If someone is nice and furry then they are smart."
    },
    {
        "id": 5493,
        "statement": "is(X, young) :- is(X, smart).",
        "description": "All smart people are young."
    },
    {
        "id": 5494,
        "statement": "is(X, round) :- is(X, blue).",
        "description": "All blue people are round."
    },
    {
        "id": 5495,
        "statement": "is(X, cold) :- is(X, young).",
        "description": "If someone is young then they are cold."
    },
    {
        "id": 5496,
        "statement": "is(X, round) :- is(X, young), is(X, blue).",
        "description": "Young, blue people are round."
    },
    {
        "id": 5497,
        "statement": "is(X, smart) :- is(X, rough), is(X, white).",
        "description": "If something is rough and white then it is smart."
    },
    {
        "id": 5498,
        "statement": "is(X, round) :- is(X, rough), is(X, smart).",
        "description": "All rough, smart things are round."
    },
    {
        "id": 5499,
        "statement": "is(X, white) :- is(X, green), is(X, round).",
        "description": "Green, round things are white."
    },
    {
        "id": 5500,
        "statement": "is(X, smart) :- is(X, white), is(X, round).",
        "description": "If something is white and round then it is smart."
    },
    {
        "id": 5501,
        "statement": "is(X, round) :- is(X, red), is(X, rough).",
        "description": "Red, rough things are round."
    },
    {
        "id": 5502,
        "statement": "likes(X, dog) :- is(X, red).",
        "description": "If someone is red then they like the dog."
    },
    {
        "id": 5503,
        "statement": "visits(bald_eagle, dog) :- likes(bear, lion), visits(lion, bald_eagle).",
        "description": "If the bear likes the lion and the lion visits the bald eagle then the bald eagle visits the dog."
    },
    {
        "id": 5504,
        "statement": "sees(bear, bald_eagle) :- is(bear, big), visits(bear, dog).",
        "description": "If the bear is big and the bear visits the dog then the bear sees the bald eagle."
    },
    {
        "id": 5505,
        "statement": "is(lion, big) :- likes(dog, lion), not is(dog, red).",
        "description": "If the dog likes the lion and the dog is not red then the lion is big."
    },
    {
        "id": 5506,
        "statement": "visits(X, bald_eagle) :- is(X, big).",
        "description": "If someone is big then they visit the bald eagle."
    },
    {
        "id": 5507,
        "statement": "sees(X, bear) :- visits(X, dog).",
        "description": "If someone visits the dog then they see the bear."
    },
    {
        "id": 5508,
        "statement": "is(lion, red) :- visits(X, lion), likes(X, bear).",
        "description": "If someone visits the lion and they like the bear then the lion is red."
    },
    {
        "id": 5509,
        "statement": "likes(X, bear) :- likes(X, dog).",
        "description": "If someone likes the dog then they like the bear."
    },
    {
        "id": 5510,
        "statement": "is(gary, white) :- is(gary, young), is(gary, nice).",
        "description": "If Gary is young and Gary is nice then Gary is white."
    },
    {
        "id": 5511,
        "statement": "is(X, cold) :- is(X, kind), is(X, nice).",
        "description": "If something is kind and nice then it is cold."
    },
    {
        "id": 5512,
        "statement": "is(gary, kind) :- is(gary, white).",
        "description": "If Gary is white then Gary is kind."
    },
    {
        "id": 5513,
        "statement": "is(X, smart) :- is(X, cold), not is(X, kind).",
        "description": "If something is cold and not kind then it is smart."
    },
    {
        "id": 5514,
        "statement": "is(X, smart) :- is(X, cold), is(X, young).",
        "description": "Cold, young things are smart."
    },
    {
        "id": 5515,
        "statement": "likes(X, lion) :- likes(X, cow), is(X, rough).",
        "description": "If something likes the cow and it is rough then it likes the lion."
    },
    {
        "id": 5516,
        "statement": "visits(cow, lion) :- likes(lion, cow), likes(cow, lion).",
        "description": "If the lion likes the cow and the cow likes the lion then the cow visits the lion."
    },
    {
        "id": 5517,
        "statement": "visits(cow, lion) :- likes(X, bald_eagle), not sees(X, cow).",
        "description": "If something likes the bald eagle and it does not see the cow then the cow visits the lion."
    },
    {
        "id": 5518,
        "statement": "is(lion, round) :- is(X, rough), visits(X, lion).",
        "description": "If something is rough and it visits the lion then the lion is round."
    },
    {
        "id": 5519,
        "statement": "sees(cow, dog) :- sees(lion, cow).",
        "description": "If the lion sees the cow then the cow sees the dog."
    },
    {
        "id": 5520,
        "statement": "is(lion, blue) :- sees(lion, bald_eagle).",
        "description": "If the lion sees the bald eagle then the lion is blue."
    },
    {
        "id": 5521,
        "statement": "is(X, blue) :- likes(X, lion), not visits(lion, bald_eagle).",
        "description": "If something likes the lion and the lion does not visit the bald eagle then it is blue."
    },
    {
        "id": 5522,
        "statement": "likes(lion, bald_eagle) :- sees(X, lion).",
        "description": "If something sees the lion then the lion likes the bald eagle."
    },
    {
        "id": 5523,
        "statement": "is(X, young) :- is(X, furry).",
        "description": "Furry things are young."
    },
    {
        "id": 5524,
        "statement": "is(X, young) :- is(X, furry), is(X, kind).",
        "description": "All furry, kind things are young."
    },
    {
        "id": 5525,
        "statement": "is(X, kind) :- is(X, young), is(X, furry).",
        "description": "Young, furry things are kind."
    },
    {
        "id": 5526,
        "statement": "is(charlie, white) :- is(charlie, red), is(charlie, round).",
        "description": "If Charlie is red and Charlie is round then Charlie is white."
    },
    {
        "id": 5527,
        "statement": "is(X, white) :- is(X, round), is(X, blue).",
        "description": "Round, blue things are white."
    },
    {
        "id": 5528,
        "statement": "is(X, furry) :- is(X, young), is(X, green).",
        "description": "All young, green things are furry."
    },
    {
        "id": 5529,
        "statement": "is(dave, young) :- is(dave, cold).",
        "description": "If Dave is cold then Dave is young."
    },
    {
        "id": 5530,
        "statement": "is(X, young) :- is(X, big), is(X, white).",
        "description": "Big, white things are young."
    },
    {
        "id": 5531,
        "statement": "is(X, green) :- is(X, white).",
        "description": "White things are green."
    },
    {
        "id": 5532,
        "statement": "is(X, white) :- is(X, round).",
        "description": "All round things are white."
    },
    {
        "id": 5533,
        "statement": "is(X, white) :- is(X, green), is(X, round).",
        "description": "If something is green and round then it is white."
    },
    {
        "id": 5534,
        "statement": "is(X, cold) :- is(X, white), is(X, big).",
        "description": "If something is white and big then it is cold."
    },
    {
        "id": 5535,
        "statement": "is(X, round) :- is(X, green).",
        "description": "If something is green then it is round."
    },
    {
        "id": 5536,
        "statement": "is(X, white) :- is(X, cold), is(X, young).",
        "description": "All cold, young things are white."
    },
    {
        "id": 5537,
        "statement": "is(X, young) :- is(X, smart), is(X, cold).",
        "description": "All smart, cold things are young."
    },
    {
        "id": 5538,
        "statement": "is(X, cold) :- is(X, quiet), is(X, rough).",
        "description": "If someone is quiet and rough then they are cold."
    },
    {
        "id": 5539,
        "statement": "is(X, white) :- is(X, young), is(X, cold).",
        "description": "Young, cold people are white."
    },
    {
        "id": 5540,
        "statement": "is(X, quiet) :- is(X, young), is(X, rough).",
        "description": "All young, rough people are quiet."
    },
    {
        "id": 5541,
        "statement": "is(X, young) :- is(X, furry), is(X, cold).",
        "description": "Furry, cold people are young."
    },
    {
        "id": 5542,
        "statement": "is(X, young) :- is(X, white), is(X, nice).",
        "description": "If someone is white and nice then they are young."
    },
    {
        "id": 5543,
        "statement": "is(X, rough) :- is(X, nice).",
        "description": "Nice people are rough."
    },
    {
        "id": 5544,
        "statement": "is(X, nice) :- is(X, furry).",
        "description": "If someone is furry then they are nice."
    },
    {
        "id": 5545,
        "statement": "is(fiona, white) :- is(fiona, young).",
        "description": "If Fiona is young then Fiona is white."
    },
    {
        "id": 5546,
        "statement": "visits(squirrel, cow).",
        "description": "The squirrel visits the cow."
    },
    {
        "id": 5547,
        "statement": "likes(X, squirrel) :- is(X, nice).",
        "description": "If someone is nice then they like the squirrel."
    },
    {
        "id": 5548,
        "statement": "likes(X, rabbit) :- sees(X, lion).",
        "description": "If someone sees the lion then they like the rabbit."
    },
    {
        "id": 5549,
        "statement": "sees(X, squirrel) :- is(X, young).",
        "description": "If someone is young then they see the squirrel."
    },
    {
        "id": 5550,
        "statement": "sees(X, cow) :- visits(X, lion), likes(lion, rabbit).",
        "description": "If someone visits the lion and the lion likes the rabbit then they see the cow."
    },
    {
        "id": 5551,
        "statement": "is(X, nice) :- sees(X, cow).",
        "description": "If someone sees the cow then they are nice."
    },
    {
        "id": 5552,
        "statement": "is(rabbit, cold) :- likes(X, rabbit).",
        "description": "If someone likes the rabbit then the rabbit is cold."
    },
    {
        "id": 5553,
        "statement": "likes(lion, rabbit) :- is(X, cold), sees(X, lion).",
        "description": "If someone is cold and they see the lion then the lion likes the rabbit."
    },
    {
        "id": 5554,
        "statement": "likes(squirrel, cow) :- likes(rabbit, cow), visits(cow, squirrel).",
        "description": "If the rabbit likes the cow and the cow visits the squirrel then the squirrel likes the cow."
    },
    {
        "id": 5555,
        "statement": "is(X, red) :- is(X, rough), is(X, quiet).",
        "description": "Rough, quiet things are red."
    },
    {
        "id": 5556,
        "statement": "is(X, rough) :- is(X, green), is(X, quiet).",
        "description": "If something is green and quiet then it is rough."
    },
    {
        "id": 5557,
        "statement": "is(X, quiet) :- is(X, rough), is(X, green).",
        "description": "Rough, green things are quiet."
    },
    {
        "id": 5558,
        "statement": "is(X, rough) :- is(X, quiet), is(X, cold).",
        "description": "All quiet, cold things are rough."
    },
    {
        "id": 5559,
        "statement": "is(X, blue) :- is(X, red), is(X, rough).",
        "description": "Red, rough things are blue."
    },
    {
        "id": 5560,
        "statement": "visits(X, lion) :- eats(X, cow).",
        "description": "If something eats the cow then it visits the lion."
    },
    {
        "id": 5561,
        "statement": "likes(X, cat) :- visits(X, cow).",
        "description": "If something visits the cow then it likes the cat."
    },
    {
        "id": 5562,
        "statement": "is(X, blue) :- likes(X, cat).",
        "description": "If something likes the cat then it is blue."
    },
    {
        "id": 5563,
        "statement": "is(lion, blue) :- visits(X, lion), eats(X, cat).",
        "description": "If something visits the lion and it eats the cat then the lion is blue."
    },
    {
        "id": 5564,
        "statement": "eats(X, cat) :- is(X, blue).",
        "description": "If something is blue then it eats the cat."
    },
    {
        "id": 5565,
        "statement": "visits(X, cat) :- likes(X, lion), is(X, round).",
        "description": "If something likes the lion and it is round then it visits the cat."
    },
    {
        "id": 5566,
        "statement": "likes(lion, bald_eagle) :- likes(cat, lion).",
        "description": "If the cat likes the lion then the lion likes the bald eagle."
    },
    {
        "id": 5567,
        "statement": "likes(X, lion) :- visits(X, lion), is(lion, blue).",
        "description": "If something visits the lion and the lion is blue then it likes the lion."
    },
    {
        "id": 5568,
        "statement": "visits(X, lion) :- visits(X, cow), eats(X, cat).",
        "description": "If something visits the cow and it eats the cat then it visits the lion."
    },
    {
        "id": 5569,
        "statement": "is(X, nice) :- needs(X, lion), not is(X, cold).",
        "description": "If something needs the lion and it is not cold then it is nice."
    },
    {
        "id": 5570,
        "statement": "visits(squirrel, rabbit) :- likes(bald_eagle, squirrel), is(squirrel, kind).",
        "description": "If the bald eagle likes the squirrel and the squirrel is kind then the squirrel visits the rabbit."
    },
    {
        "id": 5571,
        "statement": "needs(bald_eagle, lion) :- needs(X, bald_eagle), needs(bald_eagle, squirrel).",
        "description": "If something needs the bald eagle and the bald eagle needs the squirrel then the bald eagle needs the lion."
    },
    {
        "id": 5572,
        "statement": "needs(lion, rabbit) :- likes(bald_eagle, lion).",
        "description": "If the bald eagle likes the lion then the lion needs the rabbit."
    },
    {
        "id": 5573,
        "statement": "needs(bald_eagle, squirrel) :- needs(X, bald_eagle).",
        "description": "If something needs the bald eagle then the bald eagle needs the squirrel."
    },
    {
        "id": 5574,
        "statement": "visits(squirrel, bald_eagle) :- likes(X, squirrel).",
        "description": "If something likes the squirrel then the squirrel visits the bald eagle."
    },
    {
        "id": 5575,
        "statement": "needs(X, lion) :- likes(X, bald_eagle), likes(X, lion).",
        "description": "If something likes the bald eagle and it likes the lion then it needs the lion."
    },
    {
        "id": 5576,
        "statement": "needs(rabbit, bald_eagle) :- needs(X, rabbit).",
        "description": "If something needs the rabbit then the rabbit needs the bald eagle."
    },
    {
        "id": 5577,
        "statement": "is(gary, blue) :- is(gary, smart), is(gary, green).",
        "description": "If Gary is smart and Gary is green then Gary is blue."
    },
    {
        "id": 5578,
        "statement": "is(X, green) :- is(X, red), is(X, round).",
        "description": "Red, round people are green."
    },
    {
        "id": 5579,
        "statement": "is(dave, green) :- is(dave, young).",
        "description": "If Dave is young then Dave is green."
    },
    {
        "id": 5580,
        "statement": "is(X, big) :- is(X, cold), is(X, rough).",
        "description": "All cold, rough people are big."
    },
    {
        "id": 5581,
        "statement": "is(X, big) :- is(X, rough), is(X, young).",
        "description": "All rough, young people are big."
    },
    {
        "id": 5582,
        "statement": "is(X, young) :- is(X, nice).",
        "description": "Nice people are young."
    },
    {
        "id": 5583,
        "statement": "is(X, furry) :- is(X, cold), is(X, blue).",
        "description": "All cold, blue people are furry."
    },
    {
        "id": 5584,
        "statement": "is(X, nice) :- is(X, furry), is(X, big).",
        "description": "If someone is furry and big then they are nice."
    },
    {
        "id": 5585,
        "statement": "is(X, young) :- is(X, cold), is(X, quiet).",
        "description": "All cold, quiet people are young."
    },
    {
        "id": 5586,
        "statement": "is(X, cold) :- is(X, big), is(X, smart).",
        "description": "If someone is big and smart then they are cold."
    },
    {
        "id": 5587,
        "statement": "is(fiona, kind) :- is(fiona, quiet), is(fiona, cold).",
        "description": "If Fiona is quiet and Fiona is cold then Fiona is kind."
    },
    {
        "id": 5588,
        "statement": "is(X, quiet) :- is(X, cold).",
        "description": "All cold people are quiet."
    },
    {
        "id": 5589,
        "statement": "is(X, cold) :- is(X, quiet), is(X, furry).",
        "description": "If someone is quiet and furry then they are cold."
    },
    {
        "id": 5590,
        "statement": "sees(X, tiger) :- is(X, round), is(X, nice).",
        "description": "If someone is round and nice then they see the tiger."
    },
    {
        "id": 5591,
        "statement": "likes(squirrel, tiger) :- likes(X, squirrel).",
        "description": "If someone likes the squirrel then the squirrel likes the tiger."
    },
    {
        "id": 5592,
        "statement": "needs(X, tiger) :- likes(X, tiger), is(X, cold).",
        "description": "If someone likes the tiger and they are cold then they need the tiger."
    },
    {
        "id": 5593,
        "statement": "likes(tiger, rabbit) :- likes(X, squirrel), sees(squirrel, tiger).",
        "description": "If someone likes the squirrel and the squirrel sees the tiger then the tiger likes the rabbit."
    },
    {
        "id": 5594,
        "statement": "is(X, cold) :- sees(X, bear).",
        "description": "If someone sees the bear then they are cold."
    },
    {
        "id": 5595,
        "statement": "is(rabbit, round) :- needs(rabbit, squirrel), needs(rabbit, bear).",
        "description": "If the rabbit needs the squirrel and the rabbit needs the bear then the rabbit is round."
    },
    {
        "id": 5596,
        "statement": "is(tiger, nice) :- likes(X, rabbit), sees(X, tiger).",
        "description": "If someone likes the rabbit and they see the tiger then the tiger is nice."
    },
    {
        "id": 5597,
        "statement": "sees(bear, tiger) :- sees(X, bear), sees(X, tiger).",
        "description": "If someone sees the bear and they see the tiger then the bear sees the tiger."
    },
    {
        "id": 5598,
        "statement": "likes(X, rabbit) :- needs(X, tiger).",
        "description": "If someone needs the tiger then they like the rabbit."
    },
    {
        "id": 5599,
        "statement": "is(mouse, green) :- is(mouse, big), is(mouse, rough).",
        "description": "If the mouse is big and the mouse is rough then the mouse is green."
    },
    {
        "id": 5600,
        "statement": "is(bald_eagle, green) :- chases(X, dog), visits(X, bald_eagle).",
        "description": "If something chases the dog and it visits the bald eagle then the bald eagle is green."
    },
    {
        "id": 5601,
        "statement": "is(dog, big) :- likes(X, dog), is(X, green).",
        "description": "If something likes the dog and it is green then the dog is big."
    },
    {
        "id": 5602,
        "statement": "visits(mouse, bald_eagle) :- likes(bald_eagle, mouse).",
        "description": "If the bald eagle likes the mouse then the mouse visits the bald eagle."
    },
    {
        "id": 5603,
        "statement": "is(dog, rough) :- is(dog, big).",
        "description": "If the dog is big then the dog is rough."
    },
    {
        "id": 5604,
        "statement": "visits(lion, bald_eagle) :- visits(X, bald_eagle), chases(bald_eagle, lion).",
        "description": "If something visits the bald eagle and the bald eagle chases the lion then the lion visits the bald eagle."
    },
    {
        "id": 5605,
        "statement": "likes(X, dog) :- likes(X, lion).",
        "description": "If something likes the lion then it likes the dog."
    },
    {
        "id": 5606,
        "statement": "likes(bald_eagle, mouse) :- likes(X, bald_eagle).",
        "description": "If something likes the bald eagle then the bald eagle likes the mouse."
    },
    {
        "id": 5607,
        "statement": "sees(X, bald_eagle) :- chases(X, lion), likes(X, bald_eagle).",
        "description": "If something chases the lion and it likes the bald eagle then it sees the bald eagle."
    },
    {
        "id": 5608,
        "statement": "is(bald_eagle, green) :- chases(X, bald_eagle), is(X, rough).",
        "description": "If something chases the bald eagle and it is rough then the bald eagle is green."
    },
    {
        "id": 5609,
        "statement": "sees(bald_eagle, lion) :- chases(X, bald_eagle), likes(bald_eagle, cat).",
        "description": "If something chases the bald eagle and the bald eagle likes the cat then the bald eagle sees the lion."
    },
    {
        "id": 5610,
        "statement": "is(rabbit, big) :- is(lion, rough), chases(lion, rabbit).",
        "description": "If the lion is rough and the lion chases the rabbit then the rabbit is big."
    },
    {
        "id": 5611,
        "statement": "chases(X, bald_eagle) :- is(X, red), is(X, green).",
        "description": "If something is red and green then it chases the bald eagle."
    },
    {
        "id": 5612,
        "statement": "sees(X, bald_eagle) :- chases(X, rabbit).",
        "description": "If something chases the rabbit then it sees the bald eagle."
    },
    {
        "id": 5613,
        "statement": "needs(bear, mouse) :- visits(X, bear), needs(X, lion).",
        "description": "If something visits the bear and it needs the lion then the bear needs the mouse."
    },
    {
        "id": 5614,
        "statement": "sees(mouse, cat) :- sees(X, mouse).",
        "description": "If something sees the mouse then the mouse sees the cat."
    },
    {
        "id": 5615,
        "statement": "sees(mouse, cat) :- is(X, blue), sees(X, mouse).",
        "description": "If something is blue and it sees the mouse then the mouse sees the cat."
    },
    {
        "id": 5616,
        "statement": "visits(cat, mouse) :- needs(X, cat), not needs(cat, mouse).",
        "description": "If something needs the cat and the cat does not need the mouse then the cat visits the mouse."
    },
    {
        "id": 5617,
        "statement": "needs(X, bear) :- sees(X, bear).",
        "description": "If something sees the bear then it needs the bear."
    },
    {
        "id": 5618,
        "statement": "sees(cat, mouse) :- visits(X, cat), visits(cat, mouse).",
        "description": "If something visits the cat and the cat visits the mouse then the cat sees the mouse."
    },
    {
        "id": 5619,
        "statement": "needs(X, lion) :- visits(X, cat), is(X, blue).",
        "description": "If something visits the cat and it is blue then it needs the lion."
    },
    {
        "id": 5620,
        "statement": "needs(cat, bear) :- visits(X, cat).",
        "description": "If something visits the cat then the cat needs the bear."
    },
    {
        "id": 5621,
        "statement": "is(X, white) :- is(X, quiet), is(X, kind).",
        "description": "If something is quiet and kind then it is white."
    },
    {
        "id": 5622,
        "statement": "is(X, furry) :- is(X, kind), is(X, big).",
        "description": "All kind, big things are furry."
    },
    {
        "id": 5623,
        "statement": "is(X, white) :- is(X, red), is(X, kind).",
        "description": "Red, kind things are white."
    },
    {
        "id": 5624,
        "statement": "is(gary, kind) :- is(gary, big).",
        "description": "If Gary is big then Gary is kind."
    },
    {
        "id": 5625,
        "statement": "is(fiona, quiet) :- is(fiona, round).",
        "description": "If Fiona is round then Fiona is quiet."
    },
    {
        "id": 5626,
        "statement": "is(X, furry) :- is(X, quiet), is(X, kind).",
        "description": "If something is quiet and kind then it is furry."
    },
    {
        "id": 5627,
        "statement": "is(X, round) :- is(X, white), is(X, kind).",
        "description": "If something is white and kind then it is round."
    },
    {
        "id": 5628,
        "statement": "is(X, kind) :- is(X, white).",
        "description": "White people are kind."
    },
    {
        "id": 5629,
        "statement": "is(fiona, green) :- is(fiona, cold), is(fiona, white).",
        "description": "If Fiona is cold and Fiona is white then Fiona is green."
    },
    {
        "id": 5630,
        "statement": "is(X, quiet) :- is(X, young), is(X, kind).",
        "description": "All young, kind people are quiet."
    },
    {
        "id": 5631,
        "statement": "is(X, cold) :- is(X, smart).",
        "description": "All smart things are cold."
    },
    {
        "id": 5632,
        "statement": "is(X, cold) :- is(X, smart), not is(X, green).",
        "description": "If something is smart and not green then it is cold."
    },
    {
        "id": 5633,
        "statement": "is(X, big) :- is(X, red), is(X, smart).",
        "description": "If something is red and smart then it is big."
    },
    {
        "id": 5634,
        "statement": "is(X, quiet) :- is(X, young), is(X, cold).",
        "description": "If something is young and cold then it is quiet."
    },
    {
        "id": 5635,
        "statement": "is(X, young) :- is(X, cold), is(X, quiet).",
        "description": "All cold, quiet things are young."
    },
    {
        "id": 5636,
        "statement": "is(X, young) :- is(X, cold), is(X, big).",
        "description": "All cold, big things are young."
    },
    {
        "id": 5637,
        "statement": "is(X, blue) :- is(X, white), is(X, quiet).",
        "description": "White, quiet people are blue."
    },
    {
        "id": 5638,
        "statement": "is(X, quiet) :- is(X, blue), is(X, white).",
        "description": "Blue, white people are quiet."
    },
    {
        "id": 5639,
        "statement": "is(X, green) :- is(X, kind).",
        "description": "All kind people are green."
    },
    {
        "id": 5640,
        "statement": "is(X, kind) :- is(X, blue), is(X, red).",
        "description": "Blue, red people are kind."
    },
    {
        "id": 5641,
        "statement": "is(X, cold) :- is(X, red), is(X, smart).",
        "description": "All red, smart people are cold."
    },
    {
        "id": 5642,
        "statement": "is(erin, red) :- is(erin, blue).",
        "description": "If Erin is blue then Erin is red."
    },
    {
        "id": 5643,
        "statement": "is(X, white) :- is(X, cold), is(X, rough).",
        "description": "Cold, rough people are white."
    },
    {
        "id": 5644,
        "statement": "is(X, blue) :- is(X, kind), is(X, white).",
        "description": "If someone is kind and white then they are blue."
    },
    {
        "id": 5645,
        "statement": "is(X, white) :- is(X, cold), is(X, rough).",
        "description": "All cold, rough people are white."
    },
    {
        "id": 5646,
        "statement": "is(X, blue) :- is(X, rough), is(X, cold).",
        "description": "If someone is rough and cold then they are blue."
    },
    {
        "id": 5647,
        "statement": "is(X, quiet) :- is(X, cold).",
        "description": "If someone is cold then they are quiet."
    },
    {
        "id": 5648,
        "statement": "is(X, nice) :- is(X, blue), is(X, red).",
        "description": "Blue, red people are nice."
    },
    {
        "id": 5649,
        "statement": "is(X, nice) :- is(X, cold), is(X, smart).",
        "description": "Cold, smart people are nice."
    },
    {
        "id": 5650,
        "statement": "is(X, rough) :- is(X, cold), is(X, quiet).",
        "description": "If someone is cold and quiet then they are rough."
    },
    {
        "id": 5651,
        "statement": "is(X, furry) :- is(X, rough).",
        "description": "Rough things are furry."
    },
    {
        "id": 5652,
        "statement": "is(X, white) :- is(X, quiet).",
        "description": "If something is quiet then it is white."
    },
    {
        "id": 5653,
        "statement": "is(harry, nice) :- is(harry, green), is(harry, rough).",
        "description": "If Harry is green and Harry is rough then Harry is nice."
    },
    {
        "id": 5654,
        "statement": "is(X, young) :- is(X, rough).",
        "description": "Rough things are young."
    },
    {
        "id": 5655,
        "statement": "is(X, quiet) :- is(X, rough), is(X, green).",
        "description": "If something is rough and green then it is quiet."
    },
    {
        "id": 5656,
        "statement": "is(X, white) :- is(X, rough), is(X, furry).",
        "description": "Rough, furry things are white."
    },
    {
        "id": 5657,
        "statement": "is(X, rough) :- is(X, green), is(X, young).",
        "description": "If something is green and young then it is rough."
    },
    {
        "id": 5658,
        "statement": "eats(X, squirrel) :- chases(X, cat).",
        "description": "If someone chases the cat then they eat the squirrel."
    },
    {
        "id": 5659,
        "statement": "chases(X, cat) :- needs(X, bear).",
        "description": "If someone needs the bear then they chase the cat."
    },
    {
        "id": 5660,
        "statement": "needs(squirrel, bear) :- eats(X, squirrel), not is(X, blue).",
        "description": "If someone eats the squirrel and they are not blue then the squirrel needs the bear."
    },
    {
        "id": 5661,
        "statement": "chases(X, bear) :- is(X, cold).",
        "description": "If someone is cold then they chase the bear."
    },
    {
        "id": 5662,
        "statement": "is(bald_eagle, rough) :- needs(X, bald_eagle), needs(bald_eagle, cat).",
        "description": "If someone needs the bald eagle and the bald eagle needs the cat then the bald eagle is rough."
    },
    {
        "id": 5663,
        "statement": "eats(X, cat) :- chases(X, cat).",
        "description": "If someone chases the cat then they eat the cat."
    },
    {
        "id": 5664,
        "statement": "needs(X, squirrel) :- is(X, green), chases(X, cat).",
        "description": "If someone is green and they chase the cat then they need the squirrel."
    },
    {
        "id": 5665,
        "statement": "needs(X, bear) :- needs(X, squirrel).",
        "description": "If someone needs the squirrel then they need the bear."
    },
    {
        "id": 5666,
        "statement": "eats(bald_eagle, cat) :- eats(bald_eagle, squirrel), not needs(bald_eagle, squirrel).",
        "description": "If the bald eagle eats the squirrel and the bald eagle does not need the squirrel then the bald eagle eats the cat."
    },
    {
        "id": 5667,
        "statement": "is(dog, young) :- sees(X, dog), needs(X, mouse).",
        "description": "If something sees the dog and it needs the mouse then the dog is young."
    },
    {
        "id": 5668,
        "statement": "sees(dog, mouse) :- chases(X, dog).",
        "description": "If something chases the dog then the dog sees the mouse."
    },
    {
        "id": 5669,
        "statement": "is(X, nice) :- needs(X, tiger), is(X, round).",
        "description": "If something needs the tiger and it is round then it is nice."
    },
    {
        "id": 5670,
        "statement": "sees(X, cat) :- is(X, cold).",
        "description": "If something is cold then it sees the cat."
    },
    {
        "id": 5671,
        "statement": "chases(X, dog) :- sees(X, cat).",
        "description": "If something sees the cat then it chases the dog."
    },
    {
        "id": 5672,
        "statement": "is(mouse, cold) :- sees(X, mouse).",
        "description": "If something sees the mouse then the mouse is cold."
    },
    {
        "id": 5673,
        "statement": "sees(X, mouse) :- is(X, rough), not sees(X, tiger).",
        "description": "If something is rough and it does not see the tiger then it sees the mouse."
    },
    {
        "id": 5674,
        "statement": "is(erin, nice) :- is(erin, smart), is(erin, quiet).",
        "description": "If Erin is smart and Erin is quiet then Erin is nice."
    },
    {
        "id": 5675,
        "statement": "is(X, quiet) :- is(X, blue).",
        "description": "Blue things are quiet."
    },
    {
        "id": 5676,
        "statement": "is(X, quiet) :- is(X, nice), not is(X, big).",
        "description": "If something is nice and not big then it is quiet."
    },
    {
        "id": 5677,
        "statement": "is(X, smart) :- is(X, big).",
        "description": "If something is big then it is smart."
    },
    {
        "id": 5678,
        "statement": "is(X, rough) :- eats(X, bald_eagle).",
        "description": "If someone eats the bald eagle then they are rough."
    },
    {
        "id": 5679,
        "statement": "eats(X, mouse) :- is(X, round).",
        "description": "If someone is round then they eat the mouse."
    },
    {
        "id": 5680,
        "statement": "is(mouse, rough) :- is(mouse, green), likes(mouse, tiger).",
        "description": "If the mouse is green and the mouse likes the tiger then the mouse is rough."
    },
    {
        "id": 5681,
        "statement": "is(tiger, green) :- visits(X, tiger), likes(X, cat).",
        "description": "If someone visits the tiger and they like the cat then the tiger is green."
    },
    {
        "id": 5682,
        "statement": "visits(X, tiger) :- is(X, red), eats(X, tiger).",
        "description": "If someone is red and they eat the tiger then they visit the tiger."
    },
    {
        "id": 5683,
        "statement": "is(mouse, red) :- eats(X, mouse), is(mouse, rough).",
        "description": "If someone eats the mouse and the mouse is rough then the mouse is red."
    },
    {
        "id": 5684,
        "statement": "likes(X, cat) :- is(X, rough).",
        "description": "If someone is rough then they like the cat."
    },
    {
        "id": 5685,
        "statement": "eats(X, tiger) :- is(X, rough), is(X, red).",
        "description": "If someone is rough and red then they eat the tiger."
    },
    {
        "id": 5686,
        "statement": "is(X, red) :- is(X, kind), is(X, rough).",
        "description": "If someone is kind and rough then they are red."
    },
    {
        "id": 5687,
        "statement": "is(anne, young) :- is(anne, nice), is(anne, white).",
        "description": "If Anne is nice and Anne is white then Anne is young."
    },
    {
        "id": 5688,
        "statement": "is(X, white) :- is(X, kind), is(X, rough).",
        "description": "Kind, rough people are white."
    },
    {
        "id": 5689,
        "statement": "is(X, rough) :- is(X, kind), is(X, red).",
        "description": "All kind, red people are rough."
    },
    {
        "id": 5690,
        "statement": "is(X, nice) :- is(X, red), is(X, white).",
        "description": "Red, white people are nice."
    },
    {
        "id": 5691,
        "statement": "is(X, big) :- is(X, cold), is(X, white).",
        "description": "All cold, white people are big."
    },
    {
        "id": 5692,
        "statement": "is(X, big) :- is(X, cold), is(X, white).",
        "description": "If someone is cold and white then they are big."
    },
    {
        "id": 5693,
        "statement": "is(X, cold) :- is(X, big).",
        "description": "All big people are cold."
    },
    {
        "id": 5694,
        "statement": "is(X, blue) :- chases(X, tiger), is(X, cold).",
        "description": "If something chases the tiger and it is cold then it is blue."
    },
    {
        "id": 5695,
        "statement": "likes(X, dog) :- is(X, young), is(X, blue).",
        "description": "If something is young and blue then it likes the dog."
    },
    {
        "id": 5696,
        "statement": "is(X, blue) :- likes(X, tiger).",
        "description": "If something likes the tiger then it is blue."
    },
    {
        "id": 5697,
        "statement": "is(X, young) :- is(X, kind).",
        "description": "If something is kind then it is young."
    },
    {
        "id": 5698,
        "statement": "likes(X, dog) :- needs(X, rabbit).",
        "description": "If something needs the rabbit then it likes the dog."
    },
    {
        "id": 5699,
        "statement": "is(dog, cold) :- chases(X, dog), is(X, young).",
        "description": "If something chases the dog and it is young then the dog is cold."
    },
    {
        "id": 5700,
        "statement": "chases(X, dog) :- chases(X, tiger).",
        "description": "If something chases the tiger then it chases the dog."
    },
    {
        "id": 5701,
        "statement": "likes(X, rabbit) :- likes(X, dog).",
        "description": "If something likes the dog then it likes the rabbit."
    },
    {
        "id": 5702,
        "statement": "likes(rabbit, tiger) :- needs(X, tiger), likes(tiger, rabbit).",
        "description": "If something needs the tiger and the tiger likes the rabbit then the rabbit likes the tiger."
    },
    {
        "id": 5703,
        "statement": "is(bald_eagle, round) :- is(X, round), sees(X, bald_eagle).",
        "description": "If something is round and it sees the bald eagle then the bald eagle is round."
    },
    {
        "id": 5704,
        "statement": "eats(X, lion) :- is(X, young), sees(X, cat).",
        "description": "If something is young and it sees the cat then it eats the lion."
    },
    {
        "id": 5705,
        "statement": "visits(X, cat) :- visits(X, cow).",
        "description": "If something visits the cow then it visits the cat."
    },
    {
        "id": 5706,
        "statement": "is(lion, young) :- eats(X, lion).",
        "description": "If something eats the lion then the lion is young."
    },
    {
        "id": 5707,
        "statement": "sees(X, cat) :- is(X, young).",
        "description": "If something is young then it sees the cat."
    },
    {
        "id": 5708,
        "statement": "sees(lion, bald_eagle) :- is(lion, young).",
        "description": "If the lion is young then the lion sees the bald eagle."
    },
    {
        "id": 5709,
        "statement": "needs(X, bear) :- is(X, rough).",
        "description": "If something is rough then it needs the bear."
    },
    {
        "id": 5710,
        "statement": "needs(X, tiger) :- visits(X, bear).",
        "description": "If something visits the bear then it needs the tiger."
    },
    {
        "id": 5711,
        "statement": "chases(X, mouse) :- chases(X, bear).",
        "description": "If something chases the bear then it chases the mouse."
    },
    {
        "id": 5712,
        "statement": "chases(X, bear) :- is(X, nice), is(X, kind).",
        "description": "If something is nice and kind then it chases the bear."
    },
    {
        "id": 5713,
        "statement": "chases(X, tiger) :- is(X, rough), is(X, kind).",
        "description": "If something is rough and kind then it chases the tiger."
    },
    {
        "id": 5714,
        "statement": "is(X, kind) :- needs(X, bear), not needs(X, dog).",
        "description": "If something needs the bear and it does not need the dog then it is kind."
    },
    {
        "id": 5715,
        "statement": "chases(mouse, bear) :- is(mouse, young), visits(mouse, bear).",
        "description": "If the mouse is young and the mouse visits the bear then the mouse chases the bear."
    },
    {
        "id": 5716,
        "statement": "is(gary, white) :- is(gary, quiet), is(gary, rough).",
        "description": "If Gary is quiet and Gary is rough then Gary is white."
    },
    {
        "id": 5717,
        "statement": "is(X, white) :- is(X, furry), is(X, rough).",
        "description": "Furry, rough things are white."
    },
    {
        "id": 5718,
        "statement": "is(X, furry) :- is(X, kind), is(X, quiet).",
        "description": "All kind, quiet things are furry."
    },
    {
        "id": 5719,
        "statement": "is(X, rough) :- is(X, blue).",
        "description": "Blue things are rough."
    },
    {
        "id": 5720,
        "statement": "is(X, kind) :- is(X, white), is(X, furry).",
        "description": "White, furry things are kind."
    },
    {
        "id": 5721,
        "statement": "is(X, furry) :- is(X, blue).",
        "description": "Blue things are furry."
    },
    {
        "id": 5722,
        "statement": "is(cow, red) :- chases(X, cat), sees(cat, cow).",
        "description": "If something chases the cat and the cat sees the cow then the cow is red."
    },
    {
        "id": 5723,
        "statement": "sees(cat, cow) :- sees(X, cat), chases(cat, bald_eagle).",
        "description": "If something sees the cat and the cat chases the bald eagle then the cat sees the cow."
    },
    {
        "id": 5724,
        "statement": "likes(X, bald_eagle) :- chases(X, bald_eagle).",
        "description": "If something chases the bald eagle then it likes the bald eagle."
    },
    {
        "id": 5725,
        "statement": "sees(X, cat) :- chases(X, cat), sees(cat, cow).",
        "description": "If something chases the cat and the cat sees the cow then it sees the cat."
    },
    {
        "id": 5726,
        "statement": "likes(X, squirrel) :- is(X, green), likes(X, cow).",
        "description": "If something is green and it likes the cow then it likes the squirrel."
    },
    {
        "id": 5727,
        "statement": "chases(X, cat) :- is(X, green), is(X, nice).",
        "description": "If something is green and nice then it chases the cat."
    },
    {
        "id": 5728,
        "statement": "is(X, rough) :- is(X, big), chases(X, rabbit).",
        "description": "If something is big and it chases the rabbit then it is rough."
    },
    {
        "id": 5729,
        "statement": "chases(cat, cow) :- is(X, rough), visits(X, cat).",
        "description": "If something is rough and it visits the cat then the cat chases the cow."
    },
    {
        "id": 5730,
        "statement": "chases(X, lion) :- visits(X, rabbit).",
        "description": "If something visits the rabbit then it chases the lion."
    },
    {
        "id": 5731,
        "statement": "visits(X, cat) :- is(X, rough), is(X, green).",
        "description": "If something is rough and green then it visits the cat."
    },
    {
        "id": 5732,
        "statement": "is(cow, blue) :- chases(cow, cat), is(cow, green).",
        "description": "If the cow chases the cat and the cow is green then the cow is blue."
    },
    {
        "id": 5733,
        "statement": "chases(X, rabbit) :- chases(X, cat).",
        "description": "If something chases the cat then it chases the rabbit."
    },
    {
        "id": 5734,
        "statement": "sees(cat, cow) :- sees(X, cat), is(X, big).",
        "description": "If something sees the cat and it is big then the cat sees the cow."
    },
    {
        "id": 5735,
        "statement": "sees(X, rabbit) :- chases(X, rabbit).",
        "description": "If something chases the rabbit then it sees the rabbit."
    },
    {
        "id": 5736,
        "statement": "chases(X, cat) :- chases(X, cow).",
        "description": "If something chases the cow then it chases the cat."
    },
    {
        "id": 5737,
        "statement": "is(X, white) :- is(X, cold).",
        "description": "All cold things are white."
    },
    {
        "id": 5738,
        "statement": "is(X, quiet) :- is(X, red), is(X, cold).",
        "description": "Red, cold things are quiet."
    },
    {
        "id": 5739,
        "statement": "is(dave, furry) :- not is(dave, red).",
        "description": "If Dave is not red then Dave is furry."
    },
    {
        "id": 5740,
        "statement": "is(X, big) :- is(X, white), not is(X, young).",
        "description": "If something is white and not young then it is big."
    },
    {
        "id": 5741,
        "statement": "is(X, big) :- is(X, quiet), is(X, young).",
        "description": "All quiet, young things are big."
    },
    {
        "id": 5742,
        "statement": "is(dave, quiet) :- is(dave, young), is(dave, cold).",
        "description": "If Dave is young and Dave is cold then Dave is quiet."
    },
    {
        "id": 5743,
        "statement": "is(dave, rough) :- is(dave, quiet).",
        "description": "If Dave is quiet then Dave is rough."
    },
    {
        "id": 5744,
        "statement": "is(X, big) :- is(X, rough), is(X, cold).",
        "description": "All rough, cold people are big."
    },
    {
        "id": 5745,
        "statement": "is(dave, young) :- is(dave, big).",
        "description": "If Dave is big then Dave is young."
    },
    {
        "id": 5746,
        "statement": "is(X, quiet) :- is(X, nice), is(X, young).",
        "description": "All nice, young people are quiet."
    },
    {
        "id": 5747,
        "statement": "is(X, quiet) :- is(X, blue), is(X, big).",
        "description": "If someone is blue and big then they are quiet."
    },
    {
        "id": 5748,
        "statement": "is(X, blue) :- is(X, quiet), is(X, big).",
        "description": "All quiet, big people are blue."
    },
    {
        "id": 5749,
        "statement": "is(X, green) :- is(X, blue), not is(X, young).",
        "description": "If someone is blue and not young then they are green."
    },
    {
        "id": 5750,
        "statement": "is(X, nice) :- is(X, young), is(X, cold).",
        "description": "Young, cold people are nice."
    },
    {
        "id": 5751,
        "statement": "needs(X, bald_eagle) :- is(X, young).",
        "description": "If something is young then it needs the bald eagle."
    },
    {
        "id": 5752,
        "statement": "eats(X, squirrel) :- eats(X, rabbit).",
        "description": "If something eats the rabbit then it eats the squirrel."
    },
    {
        "id": 5753,
        "statement": "is(squirrel, green) :- eats(X, squirrel).",
        "description": "If something eats the squirrel then the squirrel is green."
    },
    {
        "id": 5754,
        "statement": "eats(rabbit, dog) :- chases(rabbit, bald_eagle).",
        "description": "If the rabbit chases the bald eagle then the rabbit eats the dog."
    },
    {
        "id": 5755,
        "statement": "needs(squirrel, rabbit) :- eats(X, squirrel), is(squirrel, blue).",
        "description": "If something eats the squirrel and the squirrel is blue then the squirrel needs the rabbit."
    },
    {
        "id": 5756,
        "statement": "is(dave, red) :- is(dave, rough), is(dave, young).",
        "description": "If Dave is rough and Dave is young then Dave is red."
    },
    {
        "id": 5757,
        "statement": "is(X, red) :- is(X, rough), is(X, green).",
        "description": "If someone is rough and green then they are red."
    },
    {
        "id": 5758,
        "statement": "is(X, red) :- is(X, rough), is(X, kind).",
        "description": "If someone is rough and kind then they are red."
    },
    {
        "id": 5759,
        "statement": "is(X, young) :- is(X, big), is(X, red).",
        "description": "Big, red people are young."
    },
    {
        "id": 5760,
        "statement": "is(X, red) :- is(X, kind).",
        "description": "Kind things are red."
    },
    {
        "id": 5761,
        "statement": "is(erin, green) :- is(erin, cold), is(erin, quiet).",
        "description": "If Erin is cold and Erin is quiet then Erin is green."
    },
    {
        "id": 5762,
        "statement": "is(charlie, red) :- is(charlie, young), is(charlie, quiet).",
        "description": "If Charlie is young and Charlie is quiet then Charlie is red."
    },
    {
        "id": 5763,
        "statement": "is(X, kind) :- is(X, cold), is(X, quiet).",
        "description": "All cold, quiet things are kind."
    },
    {
        "id": 5764,
        "statement": "is(X, green) :- is(X, quiet), is(X, kind).",
        "description": "Quiet, kind things are green."
    },
    {
        "id": 5765,
        "statement": "is(X, green) :- is(X, white), is(X, quiet).",
        "description": "If something is white and quiet then it is green."
    },
    {
        "id": 5766,
        "statement": "is(X, white) :- is(X, green), is(X, red).",
        "description": "If something is green and red then it is white."
    },
    {
        "id": 5767,
        "statement": "is(fiona, quiet) :- is(fiona, blue).",
        "description": "If Fiona is blue then Fiona is quiet."
    },
    {
        "id": 5768,
        "statement": "is(X, young) :- is(X, blue), is(X, quiet).",
        "description": "If something is blue and quiet then it is young."
    },
    {
        "id": 5769,
        "statement": "is(anne, young) :- is(anne, kind).",
        "description": "If Anne is kind then Anne is young."
    },
    {
        "id": 5770,
        "statement": "is(X, round) :- is(X, kind), is(X, red).",
        "description": "If someone is kind and red then they are round."
    },
    {
        "id": 5771,
        "statement": "is(X, cold) :- is(X, nice), is(X, kind).",
        "description": "If someone is nice and kind then they are cold."
    },
    {
        "id": 5772,
        "statement": "is(X, young) :- is(X, nice), is(X, cold).",
        "description": "All nice, cold people are young."
    },
    {
        "id": 5773,
        "statement": "is(X, nice) :- is(X, kind), is(X, cold).",
        "description": "All kind, cold people are nice."
    },
    {
        "id": 5774,
        "statement": "is(X, young) :- is(X, big).",
        "description": "If something is big then it is young."
    },
    {
        "id": 5775,
        "statement": "is(erin, red) :- is(erin, blue), is(erin, young).",
        "description": "If Erin is blue and Erin is young then Erin is red."
    },
    {
        "id": 5776,
        "statement": "is(X, blue) :- is(X, white), is(X, round).",
        "description": "All white, round things are blue."
    },
    {
        "id": 5777,
        "statement": "is(X, big) :- is(X, round), is(X, red).",
        "description": "Round, red things are big."
    },
    {
        "id": 5778,
        "statement": "is(X, round) :- is(X, furry).",
        "description": "All furry people are round."
    },
    {
        "id": 5779,
        "statement": "is(X, young) :- is(X, blue), is(X, green).",
        "description": "All blue, green people are young."
    },
    {
        "id": 5780,
        "statement": "is(X, furry) :- is(X, cold), is(X, rough).",
        "description": "All cold, rough people are furry."
    },
    {
        "id": 5781,
        "statement": "is(X, rough) :- is(X, green).",
        "description": "All green people are rough."
    },
    {
        "id": 5782,
        "statement": "chases(bear, lion) :- visits(X, bear), needs(X, cat).",
        "description": "If someone visits the bear and they need the cat then the bear chases the lion."
    },
    {
        "id": 5783,
        "statement": "chases(X, bear) :- is(X, young), visits(X, cat).",
        "description": "If someone is young and they visit the cat then they chase the bear."
    },
    {
        "id": 5784,
        "statement": "is(X, young) :- visits(X, lion).",
        "description": "If someone visits the lion then they are young."
    },
    {
        "id": 5785,
        "statement": "is(bear, young) :- chases(X, bear).",
        "description": "If someone chases the bear then the bear is young."
    },
    {
        "id": 5786,
        "statement": "chases(mouse, cat) :- chases(lion, mouse).",
        "description": "If the lion chases the mouse then the mouse chases the cat."
    },
    {
        "id": 5787,
        "statement": "is(lion, young) :- visits(X, lion), chases(lion, bear).",
        "description": "If someone visits the lion and the lion chases the bear then the lion is young."
    },
    {
        "id": 5788,
        "statement": "visits(X, lion) :- needs(X, bear), chases(bear, lion).",
        "description": "If someone needs the bear and the bear chases the lion then they visit the lion."
    },
    {
        "id": 5789,
        "statement": "chases(lion, bear) :- needs(X, lion).",
        "description": "If someone needs the lion then the lion chases the bear."
    },
    {
        "id": 5790,
        "statement": "is(X, quiet) :- is(X, green), is(X, white).",
        "description": "All green, white people are quiet."
    },
    {
        "id": 5791,
        "statement": "is(erin, green) :- is(erin, white), is(erin, red).",
        "description": "If Erin is white and Erin is red then Erin is green."
    },
    {
        "id": 5792,
        "statement": "is(X, smart) :- is(X, white), is(X, blue).",
        "description": "If someone is white and blue then they are smart."
    },
    {
        "id": 5793,
        "statement": "is(erin, furry) :- is(erin, smart), is(erin, green).",
        "description": "If Erin is smart and Erin is green then Erin is furry."
    },
    {
        "id": 5794,
        "statement": "is(erin, big) :- is(erin, cold).",
        "description": "If Erin is cold then Erin is big."
    },
    {
        "id": 5795,
        "statement": "is(X, young) :- is(X, big), is(X, green).",
        "description": "All big, green things are young."
    },
    {
        "id": 5796,
        "statement": "is(X, green) :- is(X, cold), is(X, big).",
        "description": "All cold, big things are green."
    },
    {
        "id": 5797,
        "statement": "sees(cat, cow) :- visits(dog, cat).",
        "description": "If the dog visits the cat then the cat sees the cow."
    },
    {
        "id": 5798,
        "statement": "is(cow, young) :- visits(X, cow).",
        "description": "If something visits the cow then the cow is young."
    },
    {
        "id": 5799,
        "statement": "is(cat, blue) :- sees(X, cat).",
        "description": "If something sees the cat then the cat is blue."
    },
    {
        "id": 5800,
        "statement": "visits(squirrel, dog) :- needs(X, squirrel).",
        "description": "If something needs the squirrel then the squirrel visits the dog."
    },
    {
        "id": 5801,
        "statement": "needs(X, dog) :- visits(X, dog).",
        "description": "If something visits the dog then it needs the dog."
    },
    {
        "id": 5802,
        "statement": "needs(cow, dog) :- sees(X, squirrel), sees(squirrel, cow).",
        "description": "If something sees the squirrel and the squirrel sees the cow then the cow needs the dog."
    },
    {
        "id": 5803,
        "statement": "needs(X, squirrel) :- needs(X, dog).",
        "description": "If something needs the dog then it needs the squirrel."
    },
    {
        "id": 5804,
        "statement": "sees(cow, squirrel) :- is(X, red), not sees(X, cow).",
        "description": "If something is red and it does not see the cow then the cow sees the squirrel."
    },
    {
        "id": 5805,
        "statement": "likes(X, tiger) :- likes(X, squirrel).",
        "description": "If something likes the squirrel then it likes the tiger."
    },
    {
        "id": 5806,
        "statement": "is(tiger, young) :- needs(X, tiger).",
        "description": "If something needs the tiger then the tiger is young."
    },
    {
        "id": 5807,
        "statement": "likes(X, bear) :- likes(X, tiger), is(tiger, young).",
        "description": "If something likes the tiger and the tiger is young then it likes the bear."
    },
    {
        "id": 5808,
        "statement": "needs(X, dog) :- likes(X, bear), needs(X, tiger).",
        "description": "If something likes the bear and it needs the tiger then it needs the dog."
    },
    {
        "id": 5809,
        "statement": "visits(dog, bear) :- likes(X, dog).",
        "description": "If something likes the dog then the dog visits the bear."
    },
    {
        "id": 5810,
        "statement": "needs(X, tiger) :- is(X, blue), not needs(X, squirrel).",
        "description": "If something is blue and it does not need the squirrel then it needs the tiger."
    },
    {
        "id": 5811,
        "statement": "is(dog, blue) :- likes(dog, bear).",
        "description": "If the dog likes the bear then the dog is blue."
    },
    {
        "id": 5812,
        "statement": "is(X, cold) :- is(X, green), is(X, kind).",
        "description": "Green, kind things are cold."
    },
    {
        "id": 5813,
        "statement": "is(gary, round) :- is(gary, kind), is(gary, big).",
        "description": "If Gary is kind and Gary is big then Gary is round."
    },
    {
        "id": 5814,
        "statement": "is(X, blue) :- is(X, round).",
        "description": "Round things are blue."
    },
    {
        "id": 5815,
        "statement": "is(X, big) :- is(X, green), is(X, furry).",
        "description": "All green, furry things are big."
    },
    {
        "id": 5816,
        "statement": "visits(dog, lion) :- eats(lion, dog).",
        "description": "If the lion eats the dog then the dog visits the lion."
    },
    {
        "id": 5817,
        "statement": "is(X, round) :- visits(X, cow), visits(X, rabbit).",
        "description": "If someone visits the cow and they visit the rabbit then they are round."
    },
    {
        "id": 5818,
        "statement": "is(X, red) :- chases(X, dog), is(dog, kind).",
        "description": "If someone chases the dog and the dog is kind then they are red."
    },
    {
        "id": 5819,
        "statement": "eats(X, lion) :- chases(X, rabbit), is(X, rough).",
        "description": "If someone chases the rabbit and they are rough then they eat the lion."
    },
    {
        "id": 5820,
        "statement": "is(X, rough) :- chases(X, dog).",
        "description": "If someone chases the dog then they are rough."
    },
    {
        "id": 5821,
        "statement": "is(X, nice) :- eats(X, lion).",
        "description": "If someone eats the lion then they are nice."
    },
    {
        "id": 5822,
        "statement": "chases(X, dog) :- is(X, nice), is(X, kind).",
        "description": "If someone is nice and kind then they chase the dog."
    },
    {
        "id": 5823,
        "statement": "eats(rabbit, lion) :- visits(X, rabbit), eats(X, lion).",
        "description": "If someone visits the rabbit and they eat the lion then the rabbit eats the lion."
    },
    {
        "id": 5824,
        "statement": "is(X, kind) :- is(X, blue), is(X, rough).",
        "description": "Blue, rough people are kind."
    },
    {
        "id": 5825,
        "statement": "is(X, cold) :- is(X, kind), is(X, red).",
        "description": "All kind, red people are cold."
    },
    {
        "id": 5826,
        "statement": "is(X, red) :- is(X, kind).",
        "description": "If someone is kind then they are red."
    },
    {
        "id": 5827,
        "statement": "is(X, quiet) :- is(X, red), is(X, cold).",
        "description": "If someone is red and cold then they are quiet."
    },
    {
        "id": 5828,
        "statement": "chases(cat, rabbit).",
        "description": "The cat chases the rabbit."
    },
    {
        "id": 5829,
        "statement": "sees(X, tiger) :- chases(X, rabbit), chases(X, bear).",
        "description": "If someone chases the rabbit and they chase the bear then they see the tiger."
    },
    {
        "id": 5830,
        "statement": "needs(bear, cat) :- is(X, nice), needs(X, bear).",
        "description": "If someone is nice and they need the bear then the bear needs the cat."
    },
    {
        "id": 5831,
        "statement": "chases(X, cat) :- sees(X, tiger).",
        "description": "If someone sees the tiger then they chase the cat."
    },
    {
        "id": 5832,
        "statement": "is(rabbit, green) :- sees(X, tiger), not needs(X, rabbit).",
        "description": "If someone sees the tiger and they do not need the rabbit then the rabbit is green."
    },
    {
        "id": 5833,
        "statement": "needs(X, cat) :- sees(X, bear).",
        "description": "If someone sees the bear then they need the cat."
    },
    {
        "id": 5834,
        "statement": "needs(cat, tiger) :- chases(X, bear), needs(X, cat).",
        "description": "If someone chases the bear and they need the cat then the cat needs the tiger."
    },
    {
        "id": 5835,
        "statement": "chases(tiger, cat) :- is(rabbit, green), not sees(rabbit, tiger).",
        "description": "If the rabbit is green and the rabbit does not see the tiger then the tiger chases the cat."
    },
    {
        "id": 5836,
        "statement": "sees(X, bear) :- chases(X, cat).",
        "description": "If someone chases the cat then they see the bear."
    },
    {
        "id": 5837,
        "statement": "is(X, white) :- is(X, cold), not is(X, red).",
        "description": "If something is cold and not red then it is white."
    },
    {
        "id": 5838,
        "statement": "is(X, quiet) :- is(X, rough), not is(X, cold).",
        "description": "If something is rough and not cold then it is quiet."
    },
    {
        "id": 5839,
        "statement": "is(X, rough) :- is(X, white), is(X, furry).",
        "description": "White, furry things are rough."
    },
    {
        "id": 5840,
        "statement": "is(X, smart) :- is(X, quiet), not is(X, red).",
        "description": "If something is quiet and not red then it is smart."
    },
    {
        "id": 5841,
        "statement": "sees(X, rabbit) :- is(X, big).",
        "description": "If something is big then it sees the rabbit."
    },
    {
        "id": 5842,
        "statement": "sees(cat, bear) :- chases(X, cat).",
        "description": "If something chases the cat then the cat sees the bear."
    },
    {
        "id": 5843,
        "statement": "chases(X, rabbit) :- chases(X, lion).",
        "description": "If something chases the lion then it chases the rabbit."
    },
    {
        "id": 5844,
        "statement": "sees(rabbit, bear) :- likes(X, rabbit).",
        "description": "If something likes the rabbit then the rabbit sees the bear."
    },
    {
        "id": 5845,
        "statement": "sees(X, cat) :- is(X, green).",
        "description": "If something is green then it sees the cat."
    },
    {
        "id": 5846,
        "statement": "is(rabbit, big) :- chases(X, rabbit).",
        "description": "If something chases the rabbit then the rabbit is big."
    },
    {
        "id": 5847,
        "statement": "chases(rabbit, lion) :- sees(X, rabbit), is(rabbit, big).",
        "description": "If something sees the rabbit and the rabbit is big then the rabbit chases the lion."
    },
    {
        "id": 5848,
        "statement": "is(lion, blue) :- sees(lion, rabbit).",
        "description": "If the lion sees the rabbit then the lion is blue."
    },
    {
        "id": 5849,
        "statement": "sees(cat, lion) :- likes(X, lion), chases(X, cat).",
        "description": "If something likes the lion and it chases the cat then the cat sees the lion."
    },
    {
        "id": 5850,
        "statement": "is(X, nice) :- is(X, cold), likes(X, cow).",
        "description": "If something is cold and it likes the cow then it is nice."
    },
    {
        "id": 5851,
        "statement": "likes(X, mouse) :- is(X, rough).",
        "description": "If something is rough then it likes the mouse."
    },
    {
        "id": 5852,
        "statement": "likes(X, tiger) :- likes(X, cow).",
        "description": "If something likes the cow then it likes the tiger."
    },
    {
        "id": 5853,
        "statement": "chases(tiger, bald_eagle) :- eats(X, tiger), chases(X, cow).",
        "description": "If something eats the tiger and it chases the cow then the tiger chases the bald eagle."
    },
    {
        "id": 5854,
        "statement": "likes(X, cow) :- chases(X, mouse).",
        "description": "If something chases the mouse then it likes the cow."
    },
    {
        "id": 5855,
        "statement": "chases(tiger, mouse) :- is(X, nice), likes(X, tiger).",
        "description": "If something is nice and it likes the tiger then the tiger chases the mouse."
    },
    {
        "id": 5856,
        "statement": "chases(X, bald_eagle) :- needs(X, cat).",
        "description": "If someone needs the cat then they chase the bald eagle."
    },
    {
        "id": 5857,
        "statement": "needs(X, bald_eagle) :- is(X, blue), chases(X, bear).",
        "description": "If someone is blue and they chase the bear then they need the bald eagle."
    },
    {
        "id": 5858,
        "statement": "needs(X, bald_eagle) :- needs(X, bear), is(X, kind).",
        "description": "If someone needs the bear and they are kind then they need the bald eagle."
    },
    {
        "id": 5859,
        "statement": "is(bear, kind) :- needs(X, bald_eagle), not eats(bald_eagle, bear).",
        "description": "If someone needs the bald eagle and the bald eagle does not eat the bear then the bear is kind."
    },
    {
        "id": 5860,
        "statement": "eats(X, bald_eagle) :- is(X, nice).",
        "description": "If someone is nice then they eat the bald eagle."
    },
    {
        "id": 5861,
        "statement": "needs(dog, bald_eagle) :- chases(X, dog), needs(X, bear).",
        "description": "If someone chases the dog and they need the bear then the dog needs the bald eagle."
    },
    {
        "id": 5862,
        "statement": "needs(X, dog) :- is(X, kind).",
        "description": "If someone is kind then they need the dog."
    },
    {
        "id": 5863,
        "statement": "is(dog, nice) :- needs(X, dog), not is(X, young).",
        "description": "If someone needs the dog and they are not young then the dog is nice."
    },
    {
        "id": 5864,
        "statement": "is(X, blue) :- eats(X, bald_eagle), needs(bald_eagle, bear).",
        "description": "If someone eats the bald eagle and the bald eagle needs the bear then they are blue."
    },
    {
        "id": 5865,
        "statement": "visits(X, bear) :- visits(X, cow).",
        "description": "If something visits the cow then it visits the bear."
    },
    {
        "id": 5866,
        "statement": "visits(X, cow) :- needs(X, bear), needs(bear, cow).",
        "description": "If something needs the bear and the bear needs the cow then it visits the cow."
    },
    {
        "id": 5867,
        "statement": "sees(X, bear) :- is(X, big), is(X, green).",
        "description": "If something is big and green then it sees the bear."
    },
    {
        "id": 5868,
        "statement": "visits(X, lion) :- visits(X, bear).",
        "description": "If something visits the bear then it visits the lion."
    },
    {
        "id": 5869,
        "statement": "sees(X, lion) :- sees(X, bear), sees(X, rabbit).",
        "description": "If something sees the bear and it sees the rabbit then it sees the lion."
    },
    {
        "id": 5870,
        "statement": "sees(lion, rabbit) :- visits(X, lion).",
        "description": "If something visits the lion then the lion sees the rabbit."
    },
    {
        "id": 5871,
        "statement": "likes(X, cat) :- eats(X, cat).",
        "description": "If something eats the cat then it likes the cat."
    },
    {
        "id": 5872,
        "statement": "likes(X, cat) :- eats(X, squirrel), is(squirrel, young).",
        "description": "If something eats the squirrel and the squirrel is young then it likes the cat."
    },
    {
        "id": 5873,
        "statement": "eats(squirrel, cat) :- sees(X, squirrel).",
        "description": "If something sees the squirrel then the squirrel eats the cat."
    },
    {
        "id": 5874,
        "statement": "likes(tiger, squirrel) :- sees(X, cat), not sees(X, tiger).",
        "description": "If something sees the cat and it does not see the tiger then the tiger likes the squirrel."
    },
    {
        "id": 5875,
        "statement": "eats(squirrel, tiger) :- likes(X, squirrel).",
        "description": "If something likes the squirrel then the squirrel eats the tiger."
    },
    {
        "id": 5876,
        "statement": "sees(X, squirrel) :- likes(X, cat).",
        "description": "If something likes the cat then it sees the squirrel."
    },
    {
        "id": 5877,
        "statement": "sees(lion, squirrel) :- sees(X, lion).",
        "description": "If something sees the lion then the lion sees the squirrel."
    },
    {
        "id": 5878,
        "statement": "eats(tiger, lion) :- eats(X, tiger), sees(X, cat).",
        "description": "If something eats the tiger and it sees the cat then the tiger eats the lion."
    },
    {
        "id": 5879,
        "statement": "visits(X, mouse) :- chases(X, mouse), visits(X, tiger).",
        "description": "If something chases the mouse and it visits the tiger then it visits the mouse."
    },
    {
        "id": 5880,
        "statement": "chases(mouse, tiger) :- sees(X, mouse).",
        "description": "If something sees the mouse then the mouse chases the tiger."
    },
    {
        "id": 5881,
        "statement": "visits(dog, bear) :- chases(X, tiger), not chases(X, dog).",
        "description": "If something chases the tiger and it does not chase the dog then the dog visits the bear."
    },
    {
        "id": 5882,
        "statement": "chases(X, tiger) :- is(X, kind).",
        "description": "If something is kind then it chases the tiger."
    },
    {
        "id": 5883,
        "statement": "sees(X, dog) :- sees(X, mouse), not is(mouse, blue).",
        "description": "If something sees the mouse and the mouse is not blue then it sees the dog."
    },
    {
        "id": 5884,
        "statement": "visits(X, tiger) :- is(X, blue), is(X, kind).",
        "description": "If something is blue and kind then it visits the tiger."
    },
    {
        "id": 5885,
        "statement": "sees(X, mouse) :- visits(X, mouse).",
        "description": "If something visits the mouse then it sees the mouse."
    },
    {
        "id": 5886,
        "statement": "chases(rabbit, lion).",
        "description": "The rabbit chases the lion."
    },
    {
        "id": 5887,
        "statement": "is(X, round) :- needs(X, mouse).",
        "description": "If someone needs the mouse then they are round."
    },
    {
        "id": 5888,
        "statement": "chases(X, dog) :- chases(X, mouse).",
        "description": "If someone chases the mouse then they chase the dog."
    },
    {
        "id": 5889,
        "statement": "needs(rabbit, mouse) :- likes(rabbit, lion).",
        "description": "If the rabbit likes the lion then the rabbit needs the mouse."
    },
    {
        "id": 5890,
        "statement": "needs(rabbit, mouse) :- is(X, round), not needs(X, rabbit).",
        "description": "If someone is round and they do not need the rabbit then the rabbit needs the mouse."
    },
    {
        "id": 5891,
        "statement": "needs(rabbit, mouse) :- likes(X, rabbit).",
        "description": "If someone likes the rabbit then the rabbit needs the mouse."
    },
    {
        "id": 5892,
        "statement": "is(dog, red) :- is(dog, round).",
        "description": "If the dog is round then the dog is red."
    },
    {
        "id": 5893,
        "statement": "chases(X, mouse) :- needs(X, mouse).",
        "description": "If someone needs the mouse then they chase the mouse."
    },
    {
        "id": 5894,
        "statement": "needs(mouse, dog) :- likes(mouse, rabbit).",
        "description": "If the mouse likes the rabbit then the mouse needs the dog."
    },
    {
        "id": 5895,
        "statement": "needs(dog, mouse) :- chases(X, dog).",
        "description": "If someone chases the dog then the dog needs the mouse."
    },
    {
        "id": 5896,
        "statement": "is(X, red) :- is(X, young), is(X, nice).",
        "description": "All young, nice things are red."
    },
    {
        "id": 5897,
        "statement": "is(X, nice) :- is(X, quiet), is(X, kind).",
        "description": "If something is quiet and kind then it is nice."
    },
    {
        "id": 5898,
        "statement": "is(X, quiet) :- is(X, kind), is(X, young).",
        "description": "If something is kind and young then it is quiet."
    },
    {
        "id": 5899,
        "statement": "is(X, young) :- is(X, cold), is(X, kind).",
        "description": "Cold, kind things are young."
    },
    {
        "id": 5900,
        "statement": "is(X, furry) :- is(X, kind), is(X, young).",
        "description": "All kind, young things are furry."
    },
    {
        "id": 5901,
        "statement": "is(X, furry) :- is(X, round), is(X, rough).",
        "description": "Round, rough things are furry."
    },
    {
        "id": 5902,
        "statement": "is(X, kind) :- is(X, furry), is(X, rough).",
        "description": "All furry, rough things are kind."
    },
    {
        "id": 5903,
        "statement": "is(X, blue) :- is(X, rough), not is(X, nice).",
        "description": "If something is rough and not nice then it is blue."
    },
    {
        "id": 5904,
        "statement": "is(gary, young) :- is(gary, nice).",
        "description": "If Gary is nice then Gary is young."
    },
    {
        "id": 5905,
        "statement": "is(X, big) :- is(X, quiet), is(X, red).",
        "description": "All quiet, red things are big."
    },
    {
        "id": 5906,
        "statement": "is(X, cold) :- is(X, big), is(X, furry).",
        "description": "All big, furry things are cold."
    },
    {
        "id": 5907,
        "statement": "is(X, red) :- is(X, big), is(X, green).",
        "description": "Big, green things are red."
    },
    {
        "id": 5908,
        "statement": "is(erin, red) :- is(erin, green), is(erin, cold).",
        "description": "If Erin is green and Erin is cold then Erin is red."
    },
    {
        "id": 5909,
        "statement": "is(X, quiet) :- is(X, green), is(X, red).",
        "description": "All green, red things are quiet."
    },
    {
        "id": 5910,
        "statement": "is(bob, red) :- is(bob, green), is(bob, cold).",
        "description": "If Bob is green and Bob is cold then Bob is red."
    },
    {
        "id": 5911,
        "statement": "is(X, white) :- is(X, big), is(X, cold).",
        "description": "If something is big and cold then it is white."
    },
    {
        "id": 5912,
        "statement": "is(X, cold) :- is(X, green).",
        "description": "All green things are cold."
    },
    {
        "id": 5913,
        "statement": "is(X, blue) :- is(X, kind).",
        "description": "Kind things are blue."
    },
    {
        "id": 5914,
        "statement": "is(X, blue) :- is(X, young), not is(X, big).",
        "description": "If something is young and not big then it is blue."
    },
    {
        "id": 5915,
        "statement": "is(X, quiet) :- is(X, young), not is(X, big).",
        "description": "If something is young and not big then it is quiet."
    },
    {
        "id": 5916,
        "statement": "is(X, kind) :- is(X, quiet), is(X, blue).",
        "description": "All quiet, blue things are kind."
    },
    {
        "id": 5917,
        "statement": "is(X, furry) :- is(X, young), is(X, kind).",
        "description": "If something is young and kind then it is furry."
    },
    {
        "id": 5918,
        "statement": "is(X, cold) :- is(X, furry).",
        "description": "All furry things are cold."
    },
    {
        "id": 5919,
        "statement": "is(X, smart) :- is(X, red), is(X, white).",
        "description": "If someone is red and white then they are smart."
    },
    {
        "id": 5920,
        "statement": "is(X, smart) :- is(X, white), is(X, big).",
        "description": "If someone is white and big then they are smart."
    },
    {
        "id": 5921,
        "statement": "is(X, white) :- is(X, young), is(X, red).",
        "description": "Young, red people are white."
    },
    {
        "id": 5922,
        "statement": "is(X, white) :- is(X, big), is(X, cold).",
        "description": "If someone is big and cold then they are white."
    },
    {
        "id": 5923,
        "statement": "sees(bear, tiger) :- sees(X, bear).",
        "description": "If someone sees the bear then the bear sees the tiger."
    },
    {
        "id": 5924,
        "statement": "eats(bear, lion) :- chases(X, bear).",
        "description": "If someone chases the bear then the bear eats the lion."
    },
    {
        "id": 5925,
        "statement": "sees(lion, bear) :- chases(X, lion).",
        "description": "If someone chases the lion then the lion sees the bear."
    },
    {
        "id": 5926,
        "statement": "chases(rabbit, bear) :- sees(rabbit, tiger).",
        "description": "If the rabbit sees the tiger then the rabbit chases the bear."
    },
    {
        "id": 5927,
        "statement": "eats(X, rabbit) :- chases(X, rabbit).",
        "description": "If someone chases the rabbit then they eat the rabbit."
    },
    {
        "id": 5928,
        "statement": "chases(X, tiger) :- eats(X, rabbit).",
        "description": "If someone eats the rabbit then they chase the tiger."
    },
    {
        "id": 5929,
        "statement": "is(X, quiet) :- is(X, young), is(X, blue).",
        "description": "Young, blue things are quiet."
    },
    {
        "id": 5930,
        "statement": "is(X, red) :- is(X, rough), is(X, blue).",
        "description": "If something is rough and blue then it is red."
    },
    {
        "id": 5931,
        "statement": "is(bob, quiet) :- is(bob, big).",
        "description": "If Bob is big then Bob is quiet."
    },
    {
        "id": 5932,
        "statement": "is(dave, quiet) :- is(dave, green).",
        "description": "If Dave is green then Dave is quiet."
    },
    {
        "id": 5933,
        "statement": "is(dave, red) :- is(dave, quiet), is(dave, young).",
        "description": "If Dave is quiet and Dave is young then Dave is red."
    },
    {
        "id": 5934,
        "statement": "is(X, green) :- visits(X, rabbit).",
        "description": "If something visits the rabbit then it is green."
    },
    {
        "id": 5935,
        "statement": "chases(X, dog) :- visits(X, squirrel), needs(X, squirrel).",
        "description": "If something visits the squirrel and it needs the squirrel then it chases the dog."
    },
    {
        "id": 5936,
        "statement": "needs(X, squirrel) :- is(X, big).",
        "description": "If something is big then it needs the squirrel."
    },
    {
        "id": 5937,
        "statement": "chases(X, squirrel) :- is(X, young).",
        "description": "If something is young then it chases the squirrel."
    },
    {
        "id": 5938,
        "statement": "chases(bear, dog) :- needs(bear, squirrel).",
        "description": "If the bear needs the squirrel then the bear chases the dog."
    },
    {
        "id": 5939,
        "statement": "is(X, young) :- chases(X, dog), is(dog, kind).",
        "description": "If something chases the dog and the dog is kind then it is young."
    },
    {
        "id": 5940,
        "statement": "is(X, kind) :- chases(X, rabbit), not is(X, green).",
        "description": "If something chases the rabbit and it is not green then it is kind."
    },
    {
        "id": 5941,
        "statement": "is(X, big) :- chases(X, squirrel).",
        "description": "If something chases the squirrel then it is big."
    },
    {
        "id": 5942,
        "statement": "chases(dog, rabbit) :- chases(X, dog), not needs(X, dog).",
        "description": "If something chases the dog and it does not need the dog then the dog chases the rabbit."
    },
    {
        "id": 5943,
        "statement": "visits(bald_eagle, mouse).",
        "description": "The bald eagle visits the mouse."
    },
    {
        "id": 5944,
        "statement": "likes(X, rabbit) :- is(X, young), not is(X, red).",
        "description": "If someone is young and not red then they like the rabbit."
    },
    {
        "id": 5945,
        "statement": "likes(dog, bald_eagle) :- visits(bald_eagle, dog), is(bald_eagle, young).",
        "description": "If the bald eagle visits the dog and the bald eagle is young then the dog likes the bald eagle."
    },
    {
        "id": 5946,
        "statement": "is(X, rough) :- visits(X, mouse).",
        "description": "If someone visits the mouse then they are rough."
    },
    {
        "id": 5947,
        "statement": "needs(X, dog) :- likes(X, bald_eagle), needs(X, rabbit).",
        "description": "If someone likes the bald eagle and they need the rabbit then they need the dog."
    },
    {
        "id": 5948,
        "statement": "visits(dog, mouse) :- visits(mouse, dog), visits(mouse, bald_eagle).",
        "description": "If the mouse visits the dog and the mouse visits the bald eagle then the dog visits the mouse."
    },
    {
        "id": 5949,
        "statement": "needs(mouse, rabbit) :- not needs(dog, mouse).",
        "description": "If the dog does not need the mouse then the mouse needs the rabbit."
    },
    {
        "id": 5950,
        "statement": "is(X, young) :- likes(X, mouse).",
        "description": "If someone likes the mouse then they are young."
    },
    {
        "id": 5951,
        "statement": "visits(X, bald_eagle) :- needs(X, bald_eagle), likes(bald_eagle, rabbit).",
        "description": "If someone needs the bald eagle and the bald eagle likes the rabbit then they visit the bald eagle."
    },
    {
        "id": 5952,
        "statement": "is(tiger, nice) :- likes(bear, squirrel), likes(bear, tiger).",
        "description": "If the bear likes the squirrel and the bear likes the tiger then the tiger is nice."
    },
    {
        "id": 5953,
        "statement": "is(X, red) :- likes(X, bear), likes(X, squirrel).",
        "description": "If something likes the bear and it likes the squirrel then it is red."
    },
    {
        "id": 5954,
        "statement": "likes(X, bear) :- needs(X, tiger).",
        "description": "If something needs the tiger then it likes the bear."
    },
    {
        "id": 5955,
        "statement": "likes(X, bald_eagle) :- is(X, blue).",
        "description": "If something is blue then it likes the bald eagle."
    },
    {
        "id": 5956,
        "statement": "needs(tiger, bear) :- is(tiger, red).",
        "description": "If the tiger is red then the tiger needs the bear."
    },
    {
        "id": 5957,
        "statement": "visits(X, bear) :- likes(X, bald_eagle), likes(bald_eagle, tiger).",
        "description": "If something likes the bald eagle and the bald eagle likes the tiger then it visits the bear."
    },
    {
        "id": 5958,
        "statement": "is(X, nice) :- likes(X, bear).",
        "description": "If something likes the bear then it is nice."
    },
    {
        "id": 5959,
        "statement": "likes(X, cow) :- is(X, blue), is(X, nice).",
        "description": "If someone is blue and nice then they like the cow."
    },
    {
        "id": 5960,
        "statement": "needs(X, cow) :- likes(X, bear).",
        "description": "If someone likes the bear then they need the cow."
    },
    {
        "id": 5961,
        "statement": "needs(X, bear) :- needs(X, tiger).",
        "description": "If someone needs the tiger then they need the bear."
    },
    {
        "id": 5962,
        "statement": "likes(X, bear) :- is(X, kind).",
        "description": "If someone is kind then they like the bear."
    },
    {
        "id": 5963,
        "statement": "needs(cow, squirrel) :- needs(X, cow).",
        "description": "If someone needs the cow then the cow needs the squirrel."
    },
    {
        "id": 5964,
        "statement": "likes(tiger, cow) :- likes(X, squirrel), chases(squirrel, tiger).",
        "description": "If someone likes the squirrel and the squirrel chases the tiger then the tiger likes the cow."
    },
    {
        "id": 5965,
        "statement": "likes(squirrel, cow) :- needs(cow, squirrel).",
        "description": "If the cow needs the squirrel then the squirrel likes the cow."
    },
    {
        "id": 5966,
        "statement": "is(X, kind) :- needs(X, squirrel).",
        "description": "If someone needs the squirrel then they are kind."
    },
    {
        "id": 5967,
        "statement": "is(X, round) :- likes(X, mouse).",
        "description": "If someone likes the mouse then they are round."
    },
    {
        "id": 5968,
        "statement": "likes(cat, bear) :- is(X, round), not needs(X, cat).",
        "description": "If someone is round and they do not need the cat then the cat likes the bear."
    },
    {
        "id": 5969,
        "statement": "likes(X, lion) :- chases(X, bear).",
        "description": "If someone chases the bear then they like the lion."
    },
    {
        "id": 5970,
        "statement": "is(cat, round) :- likes(X, cat).",
        "description": "If someone likes the cat then the cat is round."
    },
    {
        "id": 5971,
        "statement": "chases(X, mouse) :- is(X, big).",
        "description": "If someone is big then they chase the mouse."
    },
    {
        "id": 5972,
        "statement": "is(mouse, round) :- not needs(lion, mouse).",
        "description": "If the lion does not need the mouse then the mouse is round."
    },
    {
        "id": 5973,
        "statement": "is(mouse, nice) :- not chases(mouse, cat).",
        "description": "If the mouse does not chase the cat then the mouse is nice."
    },
    {
        "id": 5974,
        "statement": "is(lion, nice) :- likes(mouse, lion), not is(mouse, red).",
        "description": "If the mouse likes the lion and the mouse is not red then the lion is nice."
    },
    {
        "id": 5975,
        "statement": "is(tiger, blue) :- is(tiger, young).",
        "description": "If the tiger is young then the tiger is blue."
    },
    {
        "id": 5976,
        "statement": "chases(X, tiger) :- is(X, blue).",
        "description": "If something is blue then it chases the tiger."
    },
    {
        "id": 5977,
        "statement": "chases(X, tiger) :- likes(X, tiger).",
        "description": "If something likes the tiger then it chases the tiger."
    },
    {
        "id": 5978,
        "statement": "eats(mouse, tiger) :- eats(X, mouse), chases(X, tiger).",
        "description": "If something eats the mouse and it chases the tiger then the mouse eats the tiger."
    },
    {
        "id": 5979,
        "statement": "eats(mouse, tiger) :- chases(X, mouse).",
        "description": "If something chases the mouse then the mouse eats the tiger."
    },
    {
        "id": 5980,
        "statement": "chases(X, lion) :- is(X, young), eats(X, tiger).",
        "description": "If something is young and it eats the tiger then it chases the lion."
    },
    {
        "id": 5981,
        "statement": "eats(mouse, bear) :- eats(X, mouse), is(X, blue).",
        "description": "If something eats the mouse and it is blue then the mouse eats the bear."
    },
    {
        "id": 5982,
        "statement": "is(tiger, young) :- chases(X, tiger), not eats(tiger, bear).",
        "description": "If something chases the tiger and the tiger does not eat the bear then the tiger is young."
    },
    {
        "id": 5983,
        "statement": "is(X, kind) :- is(X, green), is(X, round).",
        "description": "Green, round people are kind."
    },
    {
        "id": 5984,
        "statement": "is(X, red) :- is(X, green).",
        "description": "Green people are red."
    },
    {
        "id": 5985,
        "statement": "is(dave, red) :- is(dave, blue), is(dave, kind).",
        "description": "If Dave is blue and Dave is kind then Dave is red."
    },
    {
        "id": 5986,
        "statement": "is(X, round) :- is(X, kind).",
        "description": "Kind people are round."
    },
    {
        "id": 5987,
        "statement": "is(X, round) :- is(X, blue), is(X, green).",
        "description": "If someone is blue and green then they are round."
    },
    {
        "id": 5988,
        "statement": "is(dave, kind) :- is(dave, round).",
        "description": "If Dave is round then Dave is kind."
    },
    {
        "id": 5989,
        "statement": "is(harry, red) :- is(harry, big).",
        "description": "If Harry is big then Harry is red."
    },
    {
        "id": 5990,
        "statement": "is(X, furry) :- is(X, quiet), is(X, big).",
        "description": "All quiet, big people are furry."
    },
    {
        "id": 5991,
        "statement": "is(X, furry) :- is(X, kind), is(X, quiet).",
        "description": "If someone is kind and quiet then they are furry."
    },
    {
        "id": 5992,
        "statement": "is(X, kind) :- is(X, quiet), is(X, red).",
        "description": "If someone is quiet and red then they are kind."
    },
    {
        "id": 5993,
        "statement": "is(X, green) :- is(X, rough).",
        "description": "All rough people are green."
    },
    {
        "id": 5994,
        "statement": "is(X, rough) :- is(X, round).",
        "description": "If someone is round then they are rough."
    },
    {
        "id": 5995,
        "statement": "is(X, quiet) :- is(X, green).",
        "description": "If someone is green then they are quiet."
    },
    {
        "id": 5996,
        "statement": "is(X, quiet) :- is(X, round), not is(X, rough).",
        "description": "If someone is round and not rough then they are quiet."
    },
    {
        "id": 5997,
        "statement": "is(X, red) :- is(X, quiet), is(X, young).",
        "description": "If someone is quiet and young then they are red."
    },
    {
        "id": 5998,
        "statement": "is(cat, kind) :- is(cat, blue).",
        "description": "If the cat is blue then the cat is kind."
    },
    {
        "id": 5999,
        "statement": "visits(X, cat) :- is(X, big), is(X, kind).",
        "description": "If something is big and kind then it visits the cat."
    },
    {
        "id": 6000,
        "statement": "needs(X, dog) :- is(X, blue).",
        "description": "If something is blue then it needs the dog."
    },
    {
        "id": 6001,
        "statement": "visits(tiger, mouse) :- visits(tiger, dog).",
        "description": "If the tiger visits the dog then the tiger visits the mouse."
    },
    {
        "id": 6002,
        "statement": "is(mouse, big) :- is(X, round), sees(X, mouse).",
        "description": "If something is round and it sees the mouse then the mouse is big."
    },
    {
        "id": 6003,
        "statement": "needs(tiger, cat) :- sees(X, tiger).",
        "description": "If something sees the tiger then the tiger needs the cat."
    },
    {
        "id": 6004,
        "statement": "is(fiona, cold) :- is(fiona, blue).",
        "description": "If Fiona is blue then Fiona is cold."
    },
    {
        "id": 6005,
        "statement": "is(X, quiet) :- is(X, blue).",
        "description": "If someone is blue then they are quiet."
    },
    {
        "id": 6006,
        "statement": "is(anne, rough) :- is(anne, quiet), is(anne, big).",
        "description": "If Anne is quiet and Anne is big then Anne is rough."
    },
    {
        "id": 6007,
        "statement": "is(X, smart) :- is(X, big), is(X, cold).",
        "description": "Big, cold people are smart."
    },
    {
        "id": 6008,
        "statement": "is(X, red) :- is(X, rough), is(X, big).",
        "description": "If someone is rough and big then they are red."
    },
    {
        "id": 6009,
        "statement": "is(X, round) :- is(X, green), is(X, red).",
        "description": "All green, red people are round."
    },
    {
        "id": 6010,
        "statement": "is(X, nice) :- is(X, white).",
        "description": "All white people are nice."
    },
    {
        "id": 6011,
        "statement": "is(X, white) :- is(X, green), is(X, round).",
        "description": "If someone is green and round then they are white."
    },
    {
        "id": 6012,
        "statement": "is(X, red) :- is(X, green), is(X, kind).",
        "description": "Green, kind people are red."
    },
    {
        "id": 6013,
        "statement": "is(gary, blue) :- is(gary, big).",
        "description": "If Gary is big then Gary is blue."
    },
    {
        "id": 6014,
        "statement": "is(X, big) :- is(X, red), is(X, kind).",
        "description": "All red, kind people are big."
    },
    {
        "id": 6015,
        "statement": "is(fiona, blue) :- is(fiona, red).",
        "description": "If Fiona is red then Fiona is blue."
    },
    {
        "id": 6016,
        "statement": "is(X, red) :- is(X, big), is(X, furry).",
        "description": "If someone is big and furry then they are red."
    },
    {
        "id": 6017,
        "statement": "is(harry, kind) :- is(harry, furry), is(harry, big).",
        "description": "If Harry is furry and Harry is big then Harry is kind."
    },
    {
        "id": 6018,
        "statement": "chases(bear, tiger) :- likes(X, tiger), likes(X, bear).",
        "description": "If someone likes the tiger and they like the bear then the bear chases the tiger."
    },
    {
        "id": 6019,
        "statement": "is(tiger, nice) :- chases(tiger, bear).",
        "description": "If the tiger chases the bear then the tiger is nice."
    },
    {
        "id": 6020,
        "statement": "visits(X, tiger) :- chases(X, lion).",
        "description": "If someone chases the lion then they visit the tiger."
    },
    {
        "id": 6021,
        "statement": "is(bear, cold) :- chases(bear, mouse).",
        "description": "If the bear chases the mouse then the bear is cold."
    },
    {
        "id": 6022,
        "statement": "likes(X, bear) :- visits(X, mouse).",
        "description": "If someone visits the mouse then they like the bear."
    },
    {
        "id": 6023,
        "statement": "is(X, cold) :- chases(X, bear).",
        "description": "If someone chases the bear then they are cold."
    },
    {
        "id": 6024,
        "statement": "likes(X, mouse) :- is(X, round), is(X, cold).",
        "description": "If someone is round and cold then they like the mouse."
    },
    {
        "id": 6025,
        "statement": "visits(X, mouse) :- chases(X, tiger).",
        "description": "If someone chases the tiger then they visit the mouse."
    },
    {
        "id": 6026,
        "statement": "likes(mouse, bear) :- chases(X, mouse).",
        "description": "If someone chases the mouse then the mouse likes the bear."
    },
    {
        "id": 6027,
        "statement": "eats(mouse, lion) :- likes(mouse, tiger).",
        "description": "If the mouse likes the tiger then the mouse eats the lion."
    },
    {
        "id": 6028,
        "statement": "likes(X, mouse) :- is(X, kind), is(X, nice).",
        "description": "If someone is kind and nice then they like the mouse."
    },
    {
        "id": 6029,
        "statement": "eats(mouse, bald_eagle) :- eats(X, mouse).",
        "description": "If someone eats the mouse then the mouse eats the bald eagle."
    },
    {
        "id": 6030,
        "statement": "eats(bald_eagle, lion) :- needs(tiger, bald_eagle), is(tiger, kind).",
        "description": "If the tiger needs the bald eagle and the tiger is kind then the bald eagle eats the lion."
    },
    {
        "id": 6031,
        "statement": "is(X, blue) :- eats(X, bald_eagle), not is(X, nice).",
        "description": "If someone eats the bald eagle and they are not nice then they are blue."
    },
    {
        "id": 6032,
        "statement": "needs(lion, bald_eagle) :- not is(lion, young).",
        "description": "If the lion is not young then the lion needs the bald eagle."
    },
    {
        "id": 6033,
        "statement": "needs(X, mouse) :- eats(X, tiger), needs(X, bald_eagle).",
        "description": "If someone eats the tiger and they need the bald eagle then they need the mouse."
    },
    {
        "id": 6034,
        "statement": "is(X, kind) :- is(X, round).",
        "description": "All round people are kind."
    },
    {
        "id": 6035,
        "statement": "chases(X, squirrel) :- eats(X, mouse).",
        "description": "If someone eats the mouse then they chase the squirrel."
    },
    {
        "id": 6036,
        "statement": "chases(tiger, dog) :- chases(X, tiger), chases(X, squirrel).",
        "description": "If someone chases the tiger and they chase the squirrel then the tiger chases the dog."
    },
    {
        "id": 6037,
        "statement": "chases(dog, mouse) :- is(squirrel, nice), not chases(dog, squirrel).",
        "description": "If the squirrel is nice and the dog does not chase the squirrel then the dog chases the mouse."
    },
    {
        "id": 6038,
        "statement": "visits(X, tiger) :- chases(X, mouse).",
        "description": "If someone chases the mouse then they visit the tiger."
    },
    {
        "id": 6039,
        "statement": "visits(X, mouse) :- chases(X, mouse), visits(X, squirrel).",
        "description": "If someone chases the mouse and they visit the squirrel then they visit the mouse."
    },
    {
        "id": 6040,
        "statement": "is(X, nice) :- visits(X, tiger), chases(tiger, dog).",
        "description": "If someone visits the tiger and the tiger chases the dog then they are nice."
    },
    {
        "id": 6041,
        "statement": "is(X, blue) :- chases(X, tiger), not visits(X, tiger).",
        "description": "If someone chases the tiger and they do not visit the tiger then they are blue."
    },
    {
        "id": 6042,
        "statement": "visits(X, dog) :- is(X, nice), is(X, rough).",
        "description": "If someone is nice and rough then they visit the dog."
    },
    {
        "id": 6043,
        "statement": "is(X, rough) :- is(X, blue), is(X, young).",
        "description": "Blue, young people are rough."
    },
    {
        "id": 6044,
        "statement": "is(X, cold) :- is(X, white), is(X, round).",
        "description": "White, round people are cold."
    },
    {
        "id": 6045,
        "statement": "is(X, white) :- is(X, big), is(X, young).",
        "description": "Big, young people are white."
    },
    {
        "id": 6046,
        "statement": "is(X, nice) :- is(X, white), is(X, cold).",
        "description": "White, cold people are nice."
    },
    {
        "id": 6047,
        "statement": "is(anne, red) :- is(anne, nice), is(anne, round).",
        "description": "If Anne is nice and Anne is round then Anne is red."
    },
    {
        "id": 6048,
        "statement": "is(X, round) :- is(X, young), is(X, nice).",
        "description": "If someone is young and nice then they are round."
    },
    {
        "id": 6049,
        "statement": "eats(mouse, bear) :- visits(rabbit, lion), eats(lion, mouse).",
        "description": "If the rabbit visits the lion and the lion eats the mouse then the mouse eats the bear."
    },
    {
        "id": 6050,
        "statement": "visits(X, bear) :- visits(X, lion).",
        "description": "If someone visits the lion then they visit the bear."
    },
    {
        "id": 6051,
        "statement": "is(mouse, kind) :- chases(X, mouse).",
        "description": "If someone chases the mouse then the mouse is kind."
    },
    {
        "id": 6052,
        "statement": "eats(mouse, bear) :- visits(rabbit, mouse).",
        "description": "If the rabbit visits the mouse then the mouse eats the bear."
    },
    {
        "id": 6053,
        "statement": "is(X, green) :- is(X, round), is(X, blue).",
        "description": "Round, blue people are green."
    },
    {
        "id": 6054,
        "statement": "is(X, blue) :- visits(X, bear).",
        "description": "If someone visits the bear then they are blue."
    },
    {
        "id": 6055,
        "statement": "needs(X, bald_eagle) :- sees(X, dog).",
        "description": "If someone sees the dog then they need the bald eagle."
    },
    {
        "id": 6056,
        "statement": "sees(dog, bald_eagle) :- needs(tiger, bald_eagle), not likes(tiger, dog).",
        "description": "If the tiger needs the bald eagle and the tiger does not like the dog then the dog sees the bald eagle."
    },
    {
        "id": 6057,
        "statement": "likes(tiger, bald_eagle) :- sees(X, tiger).",
        "description": "If someone sees the tiger then the tiger likes the bald eagle."
    },
    {
        "id": 6058,
        "statement": "likes(tiger, bald_eagle) :- likes(bald_eagle, tiger).",
        "description": "If the bald eagle likes the tiger then the tiger likes the bald eagle."
    },
    {
        "id": 6059,
        "statement": "is(X, big) :- likes(X, dog), likes(dog, bear).",
        "description": "If someone likes the dog and the dog likes the bear then they are big."
    },
    {
        "id": 6060,
        "statement": "likes(dog, tiger) :- sees(bald_eagle, tiger), needs(tiger, dog).",
        "description": "If the bald eagle sees the tiger and the tiger needs the dog then the dog likes the tiger."
    },
    {
        "id": 6061,
        "statement": "is(bald_eagle, round) :- needs(bald_eagle, bear).",
        "description": "If the bald eagle needs the bear then the bald eagle is round."
    },
    {
        "id": 6062,
        "statement": "is(bear, blue) :- likes(X, tiger), likes(X, bear).",
        "description": "If someone likes the tiger and they like the bear then the bear is blue."
    },
    {
        "id": 6063,
        "statement": "is(X, smart) :- is(X, kind).",
        "description": "If someone is kind then they are smart."
    },
    {
        "id": 6064,
        "statement": "is(X, cold) :- is(X, white), is(X, smart).",
        "description": "All white, smart people are cold."
    },
    {
        "id": 6065,
        "statement": "is(X, furry) :- is(X, kind), is(X, cold).",
        "description": "If someone is kind and cold then they are furry."
    },
    {
        "id": 6066,
        "statement": "is(X, kind) :- is(X, furry), is(X, blue).",
        "description": "If someone is furry and blue then they are kind."
    },
    {
        "id": 6067,
        "statement": "is(X, quiet) :- is(X, white), is(X, furry).",
        "description": "White, furry people are quiet."
    },
    {
        "id": 6068,
        "statement": "is(X, kind) :- is(X, quiet).",
        "description": "All quiet people are kind."
    },
    {
        "id": 6069,
        "statement": "is(X, white) :- is(X, kind).",
        "description": "All kind people are white."
    },
    {
        "id": 6070,
        "statement": "is(X, young) :- is(X, kind), is(X, round).",
        "description": "If something is kind and round then it is young."
    },
    {
        "id": 6071,
        "statement": "is(X, cold) :- is(X, round), is(X, nice).",
        "description": "If something is round and nice then it is cold."
    },
    {
        "id": 6072,
        "statement": "is(X, young) :- is(X, round), is(X, cold).",
        "description": "If something is round and cold then it is young."
    },
    {
        "id": 6073,
        "statement": "is(X, white) :- is(X, nice), is(X, young).",
        "description": "If something is nice and young then it is white."
    },
    {
        "id": 6074,
        "statement": "is(bob, white) :- is(bob, cold).",
        "description": "If Bob is cold then Bob is white."
    },
    {
        "id": 6075,
        "statement": "likes(dog, bald_eagle) :- likes(bald_eagle, dog).",
        "description": "If the bald eagle likes the dog then the dog likes the bald eagle."
    },
    {
        "id": 6076,
        "statement": "eats(lion, bear) :- eats(X, dog), likes(dog, lion).",
        "description": "If something eats the dog and the dog likes the lion then the lion eats the bear."
    },
    {
        "id": 6077,
        "statement": "likes(lion, bear) :- likes(X, lion).",
        "description": "If something likes the lion then the lion likes the bear."
    },
    {
        "id": 6078,
        "statement": "is(X, round) :- eats(X, bear).",
        "description": "If something eats the bear then it is round."
    },
    {
        "id": 6079,
        "statement": "eats(X, dog) :- is(X, round).",
        "description": "If something is round then it eats the dog."
    },
    {
        "id": 6080,
        "statement": "chases(bald_eagle, bear) :- likes(bald_eagle, lion).",
        "description": "If the bald eagle likes the lion then the bald eagle chases the bear."
    },
    {
        "id": 6081,
        "statement": "is(X, rough) :- chases(X, bear).",
        "description": "If something chases the bear then it is rough."
    },
    {
        "id": 6082,
        "statement": "is(X, round) :- is(X, green), is(X, rough).",
        "description": "All green, rough things are round."
    },
    {
        "id": 6083,
        "statement": "is(dave, kind) :- is(dave, white), is(dave, green).",
        "description": "If Dave is white and Dave is green then Dave is kind."
    },
    {
        "id": 6084,
        "statement": "is(X, kind) :- is(X, blue), is(X, young).",
        "description": "If something is blue and young then it is kind."
    },
    {
        "id": 6085,
        "statement": "is(erin, rough) :- is(erin, young), is(erin, kind).",
        "description": "If Erin is young and Erin is kind then Erin is rough."
    },
    {
        "id": 6086,
        "statement": "is(X, smart) :- is(X, rough), is(X, nice).",
        "description": "All rough, nice things are smart."
    },
    {
        "id": 6087,
        "statement": "is(charlie, quiet) :- is(charlie, kind).",
        "description": "If Charlie is kind then Charlie is quiet."
    },
    {
        "id": 6088,
        "statement": "is(X, kind) :- is(X, nice), is(X, blue).",
        "description": "All nice, blue things are kind."
    },
    {
        "id": 6089,
        "statement": "is(dave, rough) :- is(dave, nice).",
        "description": "If Dave is nice then Dave is rough."
    },
    {
        "id": 6090,
        "statement": "is(X, cold) :- is(X, nice), is(X, rough).",
        "description": "All nice, rough things are cold."
    },
    {
        "id": 6091,
        "statement": "is(X, furry) :- is(X, smart), is(X, red).",
        "description": "Smart, red things are furry."
    },
    {
        "id": 6092,
        "statement": "is(erin, big) :- is(erin, smart).",
        "description": "If Erin is smart then Erin is big."
    },
    {
        "id": 6093,
        "statement": "is(X, nice) :- is(X, smart), is(X, cold).",
        "description": "If something is smart and cold then it is nice."
    },
    {
        "id": 6094,
        "statement": "is(erin, smart) :- is(erin, cold).",
        "description": "If Erin is cold then Erin is smart."
    },
    {
        "id": 6095,
        "statement": "is(gary, cold) :- is(gary, furry).",
        "description": "If Gary is furry then Gary is cold."
    },
    {
        "id": 6096,
        "statement": "visits(lion, bear) :- chases(dog, lion), chases(dog, bear).",
        "description": "If the dog chases the lion and the dog chases the bear then the lion visits the bear."
    },
    {
        "id": 6097,
        "statement": "visits(X, cow) :- chases(X, bear).",
        "description": "If someone chases the bear then they visit the cow."
    },
    {
        "id": 6098,
        "statement": "needs(X, bear) :- is(X, big).",
        "description": "If someone is big then they need the bear."
    },
    {
        "id": 6099,
        "statement": "chases(dog, cow) :- chases(lion, dog), is(dog, green).",
        "description": "If the lion chases the dog and the dog is green then the dog chases the cow."
    },
    {
        "id": 6100,
        "statement": "needs(bear, lion) :- visits(X, bear), is(bear, kind).",
        "description": "If someone visits the bear and the bear is kind then the bear needs the lion."
    },
    {
        "id": 6101,
        "statement": "is(X, green) :- visits(X, bear).",
        "description": "If someone visits the bear then they are green."
    },
    {
        "id": 6102,
        "statement": "eats(X, cow) :- visits(X, lion), not is(X, round).",
        "description": "If something visits the lion and it is not round then it eats the cow."
    },
    {
        "id": 6103,
        "statement": "is(cow, nice) :- likes(X, cow).",
        "description": "If something likes the cow then the cow is nice."
    },
    {
        "id": 6104,
        "statement": "is(X, nice) :- eats(X, dog).",
        "description": "If something eats the dog then it is nice."
    },
    {
        "id": 6105,
        "statement": "eats(X, tiger) :- is(X, red).",
        "description": "If something is red then it eats the tiger."
    },
    {
        "id": 6106,
        "statement": "is(cow, red) :- is(X, green), not eats(X, cow).",
        "description": "If something is green and it does not eat the cow then the cow is red."
    },
    {
        "id": 6107,
        "statement": "visits(tiger, cow) :- is(tiger, blue), is(tiger, nice).",
        "description": "If the tiger is blue and the tiger is nice then the tiger visits the cow."
    },
    {
        "id": 6108,
        "statement": "is(tiger, red) :- eats(X, tiger).",
        "description": "If something eats the tiger then the tiger is red."
    },
    {
        "id": 6109,
        "statement": "eats(X, dog) :- eats(X, tiger).",
        "description": "If something eats the tiger then it eats the dog."
    },
    {
        "id": 6110,
        "statement": "is(X, rough) :- is(X, green), is(X, kind).",
        "description": "If someone is green and kind then they are rough."
    },
    {
        "id": 6111,
        "statement": "is(bob, big) :- is(bob, young), is(bob, smart).",
        "description": "If Bob is young and Bob is smart then Bob is big."
    },
    {
        "id": 6112,
        "statement": "is(X, blue) :- is(X, rough), is(X, young).",
        "description": "If someone is rough and young then they are blue."
    },
    {
        "id": 6113,
        "statement": "is(X, kind) :- is(X, young), is(X, smart).",
        "description": "If someone is young and smart then they are kind."
    },
    {
        "id": 6114,
        "statement": "is(X, smart) :- is(X, blue), is(X, green).",
        "description": "All blue, green people are smart."
    },
    {
        "id": 6115,
        "statement": "is(X, young) :- is(X, green), is(X, rough).",
        "description": "If someone is green and rough then they are young."
    },
    {
        "id": 6116,
        "statement": "is(X, furry) :- is(X, red), is(X, kind).",
        "description": "If something is red and kind then it is furry."
    },
    {
        "id": 6117,
        "statement": "is(X, kind) :- is(X, red), is(X, round).",
        "description": "All red, round things are kind."
    },
    {
        "id": 6118,
        "statement": "is(X, red) :- is(X, round), is(X, big).",
        "description": "Round, big things are red."
    },
    {
        "id": 6119,
        "statement": "is(X, white) :- is(X, furry), is(X, round).",
        "description": "If something is furry and round then it is white."
    },
    {
        "id": 6120,
        "statement": "is(X, round) :- is(X, cold), is(X, kind).",
        "description": "Cold, kind things are round."
    },
    {
        "id": 6121,
        "statement": "is(X, big) :- is(X, quiet), is(X, red).",
        "description": "If something is quiet and red then it is big."
    },
    {
        "id": 6122,
        "statement": "is(X, green) :- is(X, big), is(X, red).",
        "description": "Big, red things are green."
    },
    {
        "id": 6123,
        "statement": "is(X, nice) :- is(X, blue), is(X, red).",
        "description": "If something is blue and red then it is nice."
    },
    {
        "id": 6124,
        "statement": "is(X, blue) :- is(X, smart), is(X, quiet).",
        "description": "Smart, quiet things are blue."
    },
    {
        "id": 6125,
        "statement": "is(X, smart) :- is(X, big), is(X, red).",
        "description": "All big, red things are smart."
    },
    {
        "id": 6126,
        "statement": "is(X, red) :- is(X, quiet), is(X, blue).",
        "description": "All quiet, blue things are red."
    },
    {
        "id": 6127,
        "statement": "is(X, blue) :- is(X, green), is(X, smart).",
        "description": "If something is green and smart then it is blue."
    },
    {
        "id": 6128,
        "statement": "is(cat, young) :- needs(cat, rabbit), is(rabbit, kind).",
        "description": "If the cat needs the rabbit and the rabbit is kind then the cat is young."
    },
    {
        "id": 6129,
        "statement": "sees(X, rabbit) :- is(X, blue).",
        "description": "If something is blue then it sees the rabbit."
    },
    {
        "id": 6130,
        "statement": "needs(X, cat) :- is(X, green).",
        "description": "If something is green then it needs the cat."
    },
    {
        "id": 6131,
        "statement": "chases(X, squirrel) :- needs(X, rabbit), chases(rabbit, squirrel).",
        "description": "If something needs the rabbit and the rabbit chases the squirrel then it chases the squirrel."
    },
    {
        "id": 6132,
        "statement": "sees(X, rabbit) :- is(X, young).",
        "description": "If something is young then it sees the rabbit."
    },
    {
        "id": 6133,
        "statement": "likes(X, mouse) :- eats(X, cow).",
        "description": "If someone eats the cow then they like the mouse."
    },
    {
        "id": 6134,
        "statement": "likes(X, tiger) :- visits(X, cow), eats(cow, tiger).",
        "description": "If someone visits the cow and the cow eats the tiger then they like the tiger."
    },
    {
        "id": 6135,
        "statement": "eats(X, cow) :- likes(X, tiger), not eats(X, mouse).",
        "description": "If someone likes the tiger and they do not eat the mouse then they eat the cow."
    },
    {
        "id": 6136,
        "statement": "visits(X, cow) :- likes(X, cow), is(cow, rough).",
        "description": "If someone likes the cow and the cow is rough then they visit the cow."
    },
    {
        "id": 6137,
        "statement": "visits(X, mouse) :- is(X, cold).",
        "description": "If someone is cold then they visit the mouse."
    },
    {
        "id": 6138,
        "statement": "likes(mouse, cow) :- eats(X, mouse), not is(X, cold).",
        "description": "If someone eats the mouse and they are not cold then the mouse likes the cow."
    },
    {
        "id": 6139,
        "statement": "visits(cow, tiger) :- eats(mouse, rabbit), not likes(mouse, cow).",
        "description": "If the mouse eats the rabbit and the mouse does not like the cow then the cow visits the tiger."
    },
    {
        "id": 6140,
        "statement": "is(X, green) :- visits(X, cow), visits(X, tiger).",
        "description": "If someone visits the cow and they visit the tiger then they are green."
    },
    {
        "id": 6141,
        "statement": "likes(X, rabbit) :- is(X, green), is(X, rough).",
        "description": "If someone is green and rough then they like the rabbit."
    },
    {
        "id": 6142,
        "statement": "is(X, white) :- is(X, quiet), is(X, rough).",
        "description": "Quiet, rough things are white."
    },
    {
        "id": 6143,
        "statement": "likes(rabbit, lion) :- is(dog, young), chases(dog, rabbit).",
        "description": "If the dog is young and the dog chases the rabbit then the rabbit likes the lion."
    },
    {
        "id": 6144,
        "statement": "is(lion, young) :- eats(X, lion), is(X, big).",
        "description": "If something eats the lion and it is big then the lion is young."
    },
    {
        "id": 6145,
        "statement": "eats(squirrel, rabbit) :- likes(X, squirrel).",
        "description": "If something likes the squirrel then the squirrel eats the rabbit."
    },
    {
        "id": 6146,
        "statement": "likes(dog, lion) :- chases(X, dog).",
        "description": "If something chases the dog then the dog likes the lion."
    },
    {
        "id": 6147,
        "statement": "is(X, blue) :- eats(X, dog).",
        "description": "If something eats the dog then it is blue."
    },
    {
        "id": 6148,
        "statement": "is(X, young) :- likes(X, lion).",
        "description": "If something likes the lion then it is young."
    },
    {
        "id": 6149,
        "statement": "is(squirrel, young) :- chases(rabbit, squirrel), is(rabbit, kind).",
        "description": "If the rabbit chases the squirrel and the rabbit is kind then the squirrel is young."
    },
    {
        "id": 6150,
        "statement": "is(dave, kind) :- is(dave, smart), is(dave, cold).",
        "description": "If Dave is smart and Dave is cold then Dave is kind."
    },
    {
        "id": 6151,
        "statement": "is(X, furry) :- is(X, white), is(X, smart).",
        "description": "All white, smart things are furry."
    },
    {
        "id": 6152,
        "statement": "is(anne, cold) :- is(anne, blue), is(anne, furry).",
        "description": "If Anne is blue and Anne is furry then Anne is cold."
    },
    {
        "id": 6153,
        "statement": "is(X, white) :- is(X, green).",
        "description": "If something is green then it is white."
    },
    {
        "id": 6154,
        "statement": "is(X, blue) :- is(X, smart), not is(X, kind).",
        "description": "If something is smart and not kind then it is blue."
    },
    {
        "id": 6155,
        "statement": "is(X, green) :- is(X, smart), is(X, blue).",
        "description": "Smart, blue things are green."
    },
    {
        "id": 6156,
        "statement": "is(fiona, big) :- is(fiona, red).",
        "description": "If Fiona is red then Fiona is big."
    },
    {
        "id": 6157,
        "statement": "is(X, red) :- is(X, big), is(X, kind).",
        "description": "All big, kind people are red."
    },
    {
        "id": 6158,
        "statement": "is(X, white) :- is(X, big), is(X, red).",
        "description": "If someone is big and red then they are white."
    },
    {
        "id": 6159,
        "statement": "is(X, cold) :- is(X, kind), is(X, white).",
        "description": "If someone is kind and white then they are cold."
    },
    {
        "id": 6160,
        "statement": "is(dog, cold) :- not eats(dog, bald_eagle).",
        "description": "If the dog does not eat the bald eagle then the dog is cold."
    },
    {
        "id": 6161,
        "statement": "visits(bald_eagle, lion) :- sees(dog, bald_eagle), is(dog, green).",
        "description": "If the dog sees the bald eagle and the dog is green then the bald eagle visits the lion."
    },
    {
        "id": 6162,
        "statement": "sees(X, lion) :- is(X, green), eats(X, bald_eagle).",
        "description": "If something is green and it eats the bald eagle then it sees the lion."
    },
    {
        "id": 6163,
        "statement": "is(bear, red) :- eats(bear, lion).",
        "description": "If the bear eats the lion then the bear is red."
    },
    {
        "id": 6164,
        "statement": "eats(X, dog) :- eats(X, lion).",
        "description": "If something eats the lion then it eats the dog."
    },
    {
        "id": 6165,
        "statement": "sees(X, dog) :- is(X, red), is(X, cold).",
        "description": "If something is red and cold then it sees the dog."
    },
    {
        "id": 6166,
        "statement": "eats(bald_eagle, bear) :- is(bald_eagle, kind), not visits(bald_eagle, lion).",
        "description": "If the bald eagle is kind and the bald eagle does not visit the lion then the bald eagle eats the bear."
    },
    {
        "id": 6167,
        "statement": "eats(dog, bear) :- sees(X, dog), not is(dog, kind).",
        "description": "If something sees the dog and the dog is not kind then the dog eats the bear."
    },
    {
        "id": 6168,
        "statement": "is(X, cold) :- is(X, round), is(X, kind).",
        "description": "Round, kind things are cold."
    },
    {
        "id": 6169,
        "statement": "is(X, young) :- is(X, blue), is(X, kind).",
        "description": "All blue, kind things are young."
    },
    {
        "id": 6170,
        "statement": "is(X, kind) :- is(X, cold), is(X, young).",
        "description": "If something is cold and young then it is kind."
    },
    {
        "id": 6171,
        "statement": "is(X, round) :- is(X, green), is(X, cold).",
        "description": "Green, cold things are round."
    },
    {
        "id": 6172,
        "statement": "is(bob, cold) :- is(bob, round).",
        "description": "If Bob is round then Bob is cold."
    },
    {
        "id": 6173,
        "statement": "is(X, round) :- is(X, young), is(X, nice).",
        "description": "All young, nice things are round."
    },
    {
        "id": 6174,
        "statement": "is(fiona, nice) :- is(fiona, young).",
        "description": "If Fiona is young then Fiona is nice."
    },
    {
        "id": 6175,
        "statement": "is(X, nice) :- is(X, young), is(X, quiet).",
        "description": "Young, quiet things are nice."
    },
    {
        "id": 6176,
        "statement": "is(X, kind) :- is(X, round), is(X, nice).",
        "description": "All round, nice things are kind."
    },
    {
        "id": 6177,
        "statement": "is(fiona, quiet) :- not is(fiona, furry).",
        "description": "If Fiona is not furry then Fiona is quiet."
    },
    {
        "id": 6178,
        "statement": "is(X, quiet) :- is(X, round).",
        "description": "If something is round then it is quiet."
    },
    {
        "id": 6179,
        "statement": "is(X, young) :- is(X, green), is(X, furry).",
        "description": "All green, furry people are young."
    },
    {
        "id": 6180,
        "statement": "is(cat, red) :- visits(X, cat).",
        "description": "If something visits the cat then the cat is red."
    },
    {
        "id": 6181,
        "statement": "visits(X, bear) :- is(X, red).",
        "description": "If something is red then it visits the bear."
    },
    {
        "id": 6182,
        "statement": "is(X, young) :- visits(X, cat).",
        "description": "If something visits the cat then it is young."
    },
    {
        "id": 6183,
        "statement": "visits(rabbit, cow) :- needs(cow, rabbit), not visits(cow, cat).",
        "description": "If the cow needs the rabbit and the cow does not visit the cat then the rabbit visits the cow."
    },
    {
        "id": 6184,
        "statement": "needs(cow, rabbit) :- visits(X, cow).",
        "description": "If something visits the cow then the cow needs the rabbit."
    },
    {
        "id": 6185,
        "statement": "needs(cat, bear) :- needs(X, cat), is(X, cold).",
        "description": "If something needs the cat and it is cold then the cat needs the bear."
    },
    {
        "id": 6186,
        "statement": "is(bear, cold) :- likes(bear, cow).",
        "description": "If the bear likes the cow then the bear is cold."
    },
    {
        "id": 6187,
        "statement": "likes(bear, cow) :- visits(X, bear).",
        "description": "If something visits the bear then the bear likes the cow."
    },
    {
        "id": 6188,
        "statement": "likes(rabbit, cow) :- likes(X, rabbit).",
        "description": "If something likes the rabbit then the rabbit likes the cow."
    },
    {
        "id": 6189,
        "statement": "eats(dog, cat) :- sees(X, dog), not is(X, green).",
        "description": "If something sees the dog and it is not green then the dog eats the cat."
    },
    {
        "id": 6190,
        "statement": "is(X, kind) :- sees(X, bald_eagle), is(bald_eagle, green).",
        "description": "If something sees the bald eagle and the bald eagle is green then it is kind."
    },
    {
        "id": 6191,
        "statement": "is(dog, young) :- sees(X, dog).",
        "description": "If something sees the dog then the dog is young."
    },
    {
        "id": 6192,
        "statement": "sees(cat, dog) :- visits(X, cat), is(cat, kind).",
        "description": "If something visits the cat and the cat is kind then the cat sees the dog."
    },
    {
        "id": 6193,
        "statement": "visits(X, bald_eagle) :- is(X, rough), is(X, round).",
        "description": "If something is rough and round then it visits the bald eagle."
    },
    {
        "id": 6194,
        "statement": "eats(dog, rabbit) :- visits(dog, bald_eagle), is(bald_eagle, kind).",
        "description": "If the dog visits the bald eagle and the bald eagle is kind then the dog eats the rabbit."
    },
    {
        "id": 6195,
        "statement": "visits(tiger, bald_eagle).",
        "description": "The tiger visits the bald eagle."
    },
    {
        "id": 6196,
        "statement": "visits(tiger, cat) :- is(cat, round), sees(cat, tiger).",
        "description": "If the cat is round and the cat sees the tiger then the tiger visits the cat."
    },
    {
        "id": 6197,
        "statement": "visits(tiger, cat) :- is(tiger, kind), is(tiger, round).",
        "description": "If the tiger is kind and the tiger is round then the tiger visits the cat."
    },
    {
        "id": 6198,
        "statement": "visits(X, tiger) :- sees(X, tiger).",
        "description": "If someone sees the tiger then they visit the tiger."
    },
    {
        "id": 6199,
        "statement": "sees(X, tiger) :- visits(X, bald_eagle), is(bald_eagle, kind).",
        "description": "If someone visits the bald eagle and the bald eagle is kind then they see the tiger."
    },
    {
        "id": 6200,
        "statement": "is(X, kind) :- sees(X, rabbit).",
        "description": "If someone sees the rabbit then they are kind."
    },
    {
        "id": 6201,
        "statement": "sees(tiger, rabbit) :- visits(X, tiger).",
        "description": "If someone visits the tiger then the tiger sees the rabbit."
    },
    {
        "id": 6202,
        "statement": "is(X, green) :- needs(X, rabbit).",
        "description": "If something needs the rabbit then it is green."
    },
    {
        "id": 6203,
        "statement": "is(X, red) :- sees(X, rabbit), is(X, rough).",
        "description": "If something sees the rabbit and it is rough then it is red."
    },
    {
        "id": 6204,
        "statement": "needs(X, rabbit) :- needs(X, dog).",
        "description": "If something needs the dog then it needs the rabbit."
    },
    {
        "id": 6205,
        "statement": "needs(X, dog) :- eats(X, bald_eagle), needs(bald_eagle, dog).",
        "description": "If something eats the bald eagle and the bald eagle needs the dog then it needs the dog."
    },
    {
        "id": 6206,
        "statement": "sees(bear, rabbit) :- sees(rabbit, bear).",
        "description": "If the rabbit sees the bear then the bear sees the rabbit."
    },
    {
        "id": 6207,
        "statement": "needs(bear, rabbit) :- sees(X, rabbit), needs(X, bear).",
        "description": "If something sees the rabbit and it needs the bear then the bear needs the rabbit."
    },
    {
        "id": 6208,
        "statement": "is(X, young) :- is(X, kind).",
        "description": "Kind people are young."
    },
    {
        "id": 6209,
        "statement": "is(X, blue) :- is(X, furry), is(X, white).",
        "description": "If someone is furry and white then they are blue."
    },
    {
        "id": 6210,
        "statement": "is(X, kind) :- is(X, quiet).",
        "description": "If someone is quiet then they are kind."
    },
    {
        "id": 6211,
        "statement": "is(X, white) :- is(X, blue), is(X, young).",
        "description": "Blue, young people are white."
    },
    {
        "id": 6212,
        "statement": "is(X, young) :- is(X, blue), is(X, kind).",
        "description": "If someone is blue and kind then they are young."
    },
    {
        "id": 6213,
        "statement": "is(X, furry) :- is(X, white).",
        "description": "If someone is white then they are furry."
    },
    {
        "id": 6214,
        "statement": "is(X, quiet) :- is(X, blue).",
        "description": "All blue people are quiet."
    },
    {
        "id": 6215,
        "statement": "eats(dog, bear).",
        "description": "The dog eats the bear."
    },
    {
        "id": 6216,
        "statement": "is(X, round) :- needs(X, bear).",
        "description": "If something needs the bear then it is round."
    },
    {
        "id": 6217,
        "statement": "is(rabbit, young) :- chases(dog, rabbit), is(dog, cold).",
        "description": "If the dog chases the rabbit and the dog is cold then the rabbit is young."
    },
    {
        "id": 6218,
        "statement": "chases(dog, cat) :- chases(X, cat), needs(X, dog).",
        "description": "If something chases the cat and it needs the dog then the dog chases the cat."
    },
    {
        "id": 6219,
        "statement": "chases(X, cat) :- eats(X, bear), needs(bear, cat).",
        "description": "If something eats the bear and the bear needs the cat then it chases the cat."
    },
    {
        "id": 6220,
        "statement": "eats(rabbit, cat) :- chases(X, rabbit).",
        "description": "If something chases the rabbit then the rabbit eats the cat."
    },
    {
        "id": 6221,
        "statement": "is(X, young) :- is(X, white), is(X, blue).",
        "description": "White, blue people are young."
    },
    {
        "id": 6222,
        "statement": "is(charlie, big) :- is(charlie, kind).",
        "description": "If Charlie is kind then Charlie is big."
    },
    {
        "id": 6223,
        "statement": "is(X, kind) :- is(X, big), is(X, green).",
        "description": "All big, green people are kind."
    },
    {
        "id": 6224,
        "statement": "is(X, green) :- is(X, big).",
        "description": "If someone is big then they are green."
    },
    {
        "id": 6225,
        "statement": "is(X, green) :- is(X, big), is(X, blue).",
        "description": "If someone is big and blue then they are green."
    },
    {
        "id": 6226,
        "statement": "is(X, green) :- is(X, round), is(X, kind).",
        "description": "Round, kind people are green."
    },
    {
        "id": 6227,
        "statement": "is(X, white) :- is(X, green), is(X, kind).",
        "description": "Green, kind people are white."
    },
    {
        "id": 6228,
        "statement": "is(X, kind) :- is(X, cold), is(X, rough).",
        "description": "Cold, rough people are kind."
    },
    {
        "id": 6229,
        "statement": "is(X, rough) :- is(X, round), is(X, furry).",
        "description": "If someone is round and furry then they are rough."
    },
    {
        "id": 6230,
        "statement": "is(bob, round) :- not is(bob, nice).",
        "description": "If Bob is not nice then Bob is round."
    },
    {
        "id": 6231,
        "statement": "is(X, kind) :- is(X, big), is(X, round).",
        "description": "All big, round things are kind."
    },
    {
        "id": 6232,
        "statement": "is(X, big) :- is(X, kind), is(X, round).",
        "description": "All kind, round things are big."
    },
    {
        "id": 6233,
        "statement": "likes(cow, bear) :- is(mouse, nice), sees(mouse, cow).",
        "description": "If the mouse is nice and the mouse sees the cow then the cow likes the bear."
    },
    {
        "id": 6234,
        "statement": "sees(X, bear) :- sees(X, rabbit), is(rabbit, nice).",
        "description": "If something sees the rabbit and the rabbit is nice then it sees the bear."
    },
    {
        "id": 6235,
        "statement": "sees(X, mouse) :- sees(X, bear), is(bear, round).",
        "description": "If something sees the bear and the bear is round then it sees the mouse."
    },
    {
        "id": 6236,
        "statement": "sees(X, cow) :- sees(X, rabbit).",
        "description": "If something sees the rabbit then it sees the cow."
    },
    {
        "id": 6237,
        "statement": "sees(bear, rabbit) :- sees(X, bear).",
        "description": "If something sees the bear then the bear sees the rabbit."
    },
    {
        "id": 6238,
        "statement": "likes(X, rabbit) :- sees(X, bear).",
        "description": "If something sees the bear then it likes the rabbit."
    },
    {
        "id": 6239,
        "statement": "is(rabbit, nice) :- needs(X, rabbit).",
        "description": "If something needs the rabbit then the rabbit is nice."
    },
    {
        "id": 6240,
        "statement": "is(X, big) :- is(X, furry), is(X, quiet).",
        "description": "Furry, quiet things are big."
    },
    {
        "id": 6241,
        "statement": "is(X, quiet) :- is(X, furry).",
        "description": "All furry things are quiet."
    },
    {
        "id": 6242,
        "statement": "is(X, furry) :- is(X, white), is(X, green).",
        "description": "All white, green things are furry."
    },
    {
        "id": 6243,
        "statement": "is(X, nice) :- is(X, white), is(X, furry).",
        "description": "All white, furry things are nice."
    },
    {
        "id": 6244,
        "statement": "is(anne, green) :- is(anne, big).",
        "description": "If Anne is big then Anne is green."
    },
    {
        "id": 6245,
        "statement": "is(X, green) :- is(X, nice), is(X, quiet).",
        "description": "If something is nice and quiet then it is green."
    },
    {
        "id": 6246,
        "statement": "is(X, blue) :- is(X, cold), is(X, big).",
        "description": "If something is cold and big then it is blue."
    },
    {
        "id": 6247,
        "statement": "is(X, young) :- is(X, round), is(X, kind).",
        "description": "If something is round and kind then it is young."
    },
    {
        "id": 6248,
        "statement": "is(X, cold) :- is(X, young).",
        "description": "If something is young then it is cold."
    },
    {
        "id": 6249,
        "statement": "chases(X, dog) :- chases(X, cow), chases(cow, bear).",
        "description": "If someone chases the cow and the cow chases the bear then they chase the dog."
    },
    {
        "id": 6250,
        "statement": "chases(X, bear) :- eats(X, bear).",
        "description": "If someone eats the bear then they chase the bear."
    },
    {
        "id": 6251,
        "statement": "needs(X, cow) :- is(X, red).",
        "description": "If someone is red then they need the cow."
    },
    {
        "id": 6252,
        "statement": "needs(X, cow) :- is(X, cold).",
        "description": "If someone is cold then they need the cow."
    },
    {
        "id": 6253,
        "statement": "is(bear, red) :- needs(X, bear).",
        "description": "If someone needs the bear then the bear is red."
    },
    {
        "id": 6254,
        "statement": "chases(X, mouse) :- is(X, cold).",
        "description": "If someone is cold then they chase the mouse."
    },
    {
        "id": 6255,
        "statement": "eats(dog, bear) :- is(X, red), chases(X, dog).",
        "description": "If someone is red and they chase the dog then the dog eats the bear."
    },
    {
        "id": 6256,
        "statement": "is(X, red) :- chases(X, dog).",
        "description": "If someone chases the dog then they are red."
    },
    {
        "id": 6257,
        "statement": "is(X, white) :- is(X, young), is(X, blue).",
        "description": "If someone is young and blue then they are white."
    },
    {
        "id": 6258,
        "statement": "is(X, smart) :- is(X, rough), is(X, white).",
        "description": "If someone is rough and white then they are smart."
    },
    {
        "id": 6259,
        "statement": "is(X, young) :- is(X, blue), is(X, smart).",
        "description": "All blue, smart people are young."
    },
    {
        "id": 6260,
        "statement": "is(erin, young) :- is(erin, rough), is(erin, quiet).",
        "description": "If Erin is rough and Erin is quiet then Erin is young."
    },
    {
        "id": 6261,
        "statement": "is(X, quiet) :- is(X, blue), is(X, white).",
        "description": "If someone is blue and white then they are quiet."
    },
    {
        "id": 6262,
        "statement": "is(X, blue) :- is(X, rough), is(X, smart).",
        "description": "All rough, smart people are blue."
    },
    {
        "id": 6263,
        "statement": "is(X, big) :- is(X, quiet), is(X, young).",
        "description": "Quiet, young things are big."
    },
    {
        "id": 6264,
        "statement": "is(X, big) :- is(X, red), is(X, young).",
        "description": "If something is red and young then it is big."
    },
    {
        "id": 6265,
        "statement": "is(X, young) :- is(X, red), is(X, white).",
        "description": "Red, white things are young."
    },
    {
        "id": 6266,
        "statement": "is(X, white) :- is(X, quiet), is(X, red).",
        "description": "Quiet, red things are white."
    },
    {
        "id": 6267,
        "statement": "is(dave, rough) :- is(dave, white), is(dave, quiet).",
        "description": "If Dave is white and Dave is quiet then Dave is rough."
    },
    {
        "id": 6268,
        "statement": "is(rabbit, rough) :- chases(bear, rabbit), eats(rabbit, cat).",
        "description": "If the bear chases the rabbit and the rabbit eats the cat then the rabbit is rough."
    },
    {
        "id": 6269,
        "statement": "eats(X, rabbit) :- is(X, green), is(X, round).",
        "description": "If something is green and round then it eats the rabbit."
    },
    {
        "id": 6270,
        "statement": "eats(rabbit, cat) :- eats(rabbit, bear).",
        "description": "If the rabbit eats the bear then the rabbit eats the cat."
    },
    {
        "id": 6271,
        "statement": "is(cat, red) :- chases(rabbit, cat).",
        "description": "If the rabbit chases the cat then the cat is red."
    },
    {
        "id": 6272,
        "statement": "is(rabbit, red) :- eats(X, rabbit), not eats(rabbit, cat).",
        "description": "If something eats the rabbit and the rabbit does not eat the cat then the rabbit is red."
    },
    {
        "id": 6273,
        "statement": "chases(X, cat) :- is(X, rough).",
        "description": "If something is rough then it chases the cat."
    },
    {
        "id": 6274,
        "statement": "is(X, young) :- is(X, furry), is(X, round).",
        "description": "Furry, round people are young."
    },
    {
        "id": 6275,
        "statement": "is(X, rough) :- is(X, young), is(X, round).",
        "description": "All young, round people are rough."
    },
    {
        "id": 6276,
        "statement": "is(X, young) :- is(X, rough), is(X, red).",
        "description": "If someone is rough and red then they are young."
    },
    {
        "id": 6277,
        "statement": "is(X, quiet) :- is(X, rough), is(X, young).",
        "description": "If someone is rough and young then they are quiet."
    },
    {
        "id": 6278,
        "statement": "is(X, red) :- is(X, round), is(X, quiet).",
        "description": "Round, quiet people are red."
    },
    {
        "id": 6279,
        "statement": "is(X, kind) :- is(X, smart), is(X, green).",
        "description": "If someone is smart and green then they are kind."
    },
    {
        "id": 6280,
        "statement": "is(X, furry) :- is(X, kind).",
        "description": "Kind people are furry."
    },
    {
        "id": 6281,
        "statement": "is(X, green) :- is(X, furry), is(X, kind).",
        "description": "If someone is furry and kind then they are green."
    },
    {
        "id": 6282,
        "statement": "is(X, green) :- is(X, smart), is(X, round).",
        "description": "If someone is smart and round then they are green."
    },
    {
        "id": 6283,
        "statement": "is(erin, big) :- is(erin, green), is(erin, furry).",
        "description": "If Erin is green and Erin is furry then Erin is big."
    },
    {
        "id": 6284,
        "statement": "chases(bald_eagle, mouse).",
        "description": "The bald eagle chases the mouse."
    },
    {
        "id": 6285,
        "statement": "eats(X, squirrel) :- is(X, kind).",
        "description": "If something is kind then it eats the squirrel."
    },
    {
        "id": 6286,
        "statement": "eats(mouse, bear) :- chases(X, mouse).",
        "description": "If something chases the mouse then the mouse eats the bear."
    },
    {
        "id": 6287,
        "statement": "eats(bald_eagle, bear) :- eats(bald_eagle, squirrel).",
        "description": "If the bald eagle eats the squirrel then the bald eagle eats the bear."
    },
    {
        "id": 6288,
        "statement": "is(X, blue) :- chases(X, bald_eagle).",
        "description": "If something chases the bald eagle then it is blue."
    },
    {
        "id": 6289,
        "statement": "chases(squirrel, bald_eagle) :- eats(X, squirrel), not is(X, big).",
        "description": "If something eats the squirrel and it is not big then the squirrel chases the bald eagle."
    },
    {
        "id": 6290,
        "statement": "is(X, rough) :- is(X, nice).",
        "description": "Nice things are rough."
    },
    {
        "id": 6291,
        "statement": "chases(squirrel, mouse) :- chases(X, squirrel), visits(X, bear).",
        "description": "If something chases the squirrel and it visits the bear then the squirrel chases the mouse."
    },
    {
        "id": 6292,
        "statement": "chases(cat, bear) :- eats(X, cat).",
        "description": "If something eats the cat then the cat chases the bear."
    },
    {
        "id": 6293,
        "statement": "is(X, round) :- chases(X, rabbit), visits(X, rabbit).",
        "description": "If something chases the rabbit and it visits the rabbit then it is round."
    },
    {
        "id": 6294,
        "statement": "is(cat, kind) :- visits(bear, cat).",
        "description": "If the bear visits the cat then the cat is kind."
    },
    {
        "id": 6295,
        "statement": "is(mouse, kind) :- eats(X, bear), eats(bear, mouse).",
        "description": "If something eats the bear and the bear eats the mouse then the mouse is kind."
    },
    {
        "id": 6296,
        "statement": "visits(X, cat) :- eats(X, bear), chases(bear, cat).",
        "description": "If something eats the bear and the bear chases the cat then it visits the cat."
    },
    {
        "id": 6297,
        "statement": "eats(X, bear) :- is(X, kind), not eats(X, mouse).",
        "description": "If something is kind and it does not eat the mouse then it eats the bear."
    },
    {
        "id": 6298,
        "statement": "eats(X, rabbit) :- eats(X, mouse), not eats(mouse, bear).",
        "description": "If something eats the mouse and the mouse does not eat the bear then it eats the rabbit."
    },
    {
        "id": 6299,
        "statement": "is(X, round) :- is(X, red), is(X, white).",
        "description": "All red, white things are round."
    },
    {
        "id": 6300,
        "statement": "is(X, quiet) :- is(X, blue), is(X, big).",
        "description": "Blue, big things are quiet."
    },
    {
        "id": 6301,
        "statement": "is(X, red) :- is(X, round), is(X, blue).",
        "description": "If something is round and blue then it is red."
    },
    {
        "id": 6302,
        "statement": "is(X, white) :- is(X, round).",
        "description": "Round things are white."
    },
    {
        "id": 6303,
        "statement": "is(X, white) :- is(X, round), is(X, cold).",
        "description": "Round, cold people are white."
    },
    {
        "id": 6304,
        "statement": "is(harry, nice) :- is(harry, cold), is(harry, kind).",
        "description": "If Harry is cold and Harry is kind then Harry is nice."
    },
    {
        "id": 6305,
        "statement": "is(X, furry) :- is(X, white), is(X, kind).",
        "description": "All white, kind people are furry."
    },
    {
        "id": 6306,
        "statement": "is(anne, kind) :- is(anne, white), is(anne, cold).",
        "description": "If Anne is white and Anne is cold then Anne is kind."
    },
    {
        "id": 6307,
        "statement": "is(X, quiet) :- is(X, green), is(X, cold).",
        "description": "If something is green and cold then it is quiet."
    },
    {
        "id": 6308,
        "statement": "is(X, green) :- is(X, cold).",
        "description": "All cold things are green."
    },
    {
        "id": 6309,
        "statement": "is(bob, green) :- is(bob, quiet).",
        "description": "If Bob is quiet then Bob is green."
    },
    {
        "id": 6310,
        "statement": "is(X, red) :- is(X, cold), is(X, nice).",
        "description": "If something is cold and nice then it is red."
    },
    {
        "id": 6311,
        "statement": "is(harry, green) :- is(harry, kind).",
        "description": "If Harry is kind then Harry is green."
    },
    {
        "id": 6312,
        "statement": "likes(X, rabbit) :- needs(X, cat), likes(X, squirrel).",
        "description": "If someone needs the cat and they like the squirrel then they like the rabbit."
    },
    {
        "id": 6313,
        "statement": "likes(X, rabbit) :- is(X, young), not needs(X, rabbit).",
        "description": "If someone is young and they do not need the rabbit then they like the rabbit."
    },
    {
        "id": 6314,
        "statement": "needs(X, cat) :- likes(X, lion), eats(X, rabbit).",
        "description": "If someone likes the lion and they eat the rabbit then they need the cat."
    },
    {
        "id": 6315,
        "statement": "eats(rabbit, lion) :- likes(X, rabbit).",
        "description": "If someone likes the rabbit then the rabbit eats the lion."
    },
    {
        "id": 6316,
        "statement": "likes(lion, cat) :- needs(X, squirrel), eats(X, lion).",
        "description": "If someone needs the squirrel and they eat the lion then the lion likes the cat."
    },
    {
        "id": 6317,
        "statement": "likes(cat, lion) :- likes(X, cat), is(X, round).",
        "description": "If someone likes the cat and they are round then the cat likes the lion."
    },
    {
        "id": 6318,
        "statement": "likes(X, lion) :- eats(X, rabbit), is(X, young).",
        "description": "If someone eats the rabbit and they are young then they like the lion."
    },
    {
        "id": 6319,
        "statement": "likes(X, lion) :- eats(X, rabbit).",
        "description": "If someone eats the rabbit then they like the lion."
    },
    {
        "id": 6320,
        "statement": "eats(lion, squirrel) :- likes(cat, lion), not likes(cat, rabbit).",
        "description": "If the cat likes the lion and the cat does not like the rabbit then the lion eats the squirrel."
    },
    {
        "id": 6321,
        "statement": "is(dog, red) :- chases(X, dog).",
        "description": "If someone chases the dog then the dog is red."
    },
    {
        "id": 6322,
        "statement": "sees(X, bear) :- is(X, red).",
        "description": "If someone is red then they see the bear."
    },
    {
        "id": 6323,
        "statement": "sees(squirrel, dog) :- eats(X, squirrel).",
        "description": "If someone eats the squirrel then the squirrel sees the dog."
    },
    {
        "id": 6324,
        "statement": "eats(X, bear) :- is(X, nice), not chases(X, tiger).",
        "description": "If someone is nice and they do not chase the tiger then they eat the bear."
    },
    {
        "id": 6325,
        "statement": "is(X, big) :- eats(X, bear).",
        "description": "If someone eats the bear then they are big."
    },
    {
        "id": 6326,
        "statement": "chases(X, dog) :- is(X, red), sees(X, bear).",
        "description": "If someone is red and they see the bear then they chase the dog."
    },
    {
        "id": 6327,
        "statement": "chases(bear, squirrel) :- chases(X, bear).",
        "description": "If someone chases the bear then the bear chases the squirrel."
    },
    {
        "id": 6328,
        "statement": "is(tiger, big) :- chases(tiger, squirrel).",
        "description": "If the tiger chases the squirrel then the tiger is big."
    },
    {
        "id": 6329,
        "statement": "is(bear, red) :- sees(X, bear), chases(X, bear).",
        "description": "If someone sees the bear and they chase the bear then the bear is red."
    },
    {
        "id": 6330,
        "statement": "is(X, smart) :- is(X, quiet), is(X, white).",
        "description": "If something is quiet and white then it is smart."
    },
    {
        "id": 6331,
        "statement": "is(X, red) :- is(X, young), is(X, round).",
        "description": "If something is young and round then it is red."
    },
    {
        "id": 6332,
        "statement": "is(X, cold) :- is(X, smart), is(X, quiet).",
        "description": "Smart, quiet things are cold."
    },
    {
        "id": 6333,
        "statement": "is(X, smart) :- is(X, young), is(X, white).",
        "description": "Young, white things are smart."
    },
    {
        "id": 6334,
        "statement": "is(X, quiet) :- is(X, young).",
        "description": "Young things are quiet."
    },
    {
        "id": 6335,
        "statement": "is(X, smart) :- is(X, white).",
        "description": "All white things are smart."
    },
    {
        "id": 6336,
        "statement": "is(erin, young) :- is(erin, kind), is(erin, smart).",
        "description": "If Erin is kind and Erin is smart then Erin is young."
    },
    {
        "id": 6337,
        "statement": "is(gary, kind) :- is(gary, quiet).",
        "description": "If Gary is quiet then Gary is kind."
    },
    {
        "id": 6338,
        "statement": "is(X, rough) :- is(X, furry), is(X, young).",
        "description": "All furry, young people are rough."
    },
    {
        "id": 6339,
        "statement": "is(X, furry) :- is(X, rough), is(X, young).",
        "description": "If someone is rough and young then they are furry."
    },
    {
        "id": 6340,
        "statement": "is(X, young) :- is(X, quiet), is(X, kind).",
        "description": "Quiet, kind people are young."
    },
    {
        "id": 6341,
        "statement": "is(X, nice) :- is(X, big), is(X, round).",
        "description": "All big, round things are nice."
    },
    {
        "id": 6342,
        "statement": "is(X, furry) :- is(X, young), is(X, round).",
        "description": "If something is young and round then it is furry."
    },
    {
        "id": 6343,
        "statement": "is(X, cold) :- is(X, furry), is(X, young).",
        "description": "If something is furry and young then it is cold."
    },
    {
        "id": 6344,
        "statement": "is(X, red) :- chases(X, cow).",
        "description": "If someone chases the cow then they are red."
    },
    {
        "id": 6345,
        "statement": "is(X, nice) :- needs(X, cow), chases(X, squirrel).",
        "description": "If someone needs the cow and they chase the squirrel then they are nice."
    },
    {
        "id": 6346,
        "statement": "needs(X, cat) :- is(X, red), not sees(X, squirrel).",
        "description": "If someone is red and they do not see the squirrel then they need the cat."
    },
    {
        "id": 6347,
        "statement": "chases(X, squirrel) :- needs(X, cat).",
        "description": "If someone needs the cat then they chase the squirrel."
    },
    {
        "id": 6348,
        "statement": "is(tiger, red) :- chases(tiger, cat), is(cat, cold).",
        "description": "If the tiger chases the cat and the cat is cold then the tiger is red."
    },
    {
        "id": 6349,
        "statement": "chases(tiger, cow) :- sees(X, tiger).",
        "description": "If someone sees the tiger then the tiger chases the cow."
    },
    {
        "id": 6350,
        "statement": "needs(X, squirrel) :- is(X, red), not needs(X, cat).",
        "description": "If someone is red and they do not need the cat then they need the squirrel."
    },
    {
        "id": 6351,
        "statement": "chases(squirrel, cat) :- sees(X, cow), not needs(X, squirrel).",
        "description": "If someone sees the cow and they do not need the squirrel then the squirrel chases the cat."
    },
    {
        "id": 6352,
        "statement": "chases(squirrel, cat) :- sees(X, tiger), sees(X, squirrel).",
        "description": "If someone sees the tiger and they see the squirrel then the squirrel chases the cat."
    },
    {
        "id": 6353,
        "statement": "is(X, rough) :- is(X, green), is(X, nice).",
        "description": "Green, nice things are rough."
    },
    {
        "id": 6354,
        "statement": "is(X, nice) :- is(X, rough), is(X, furry).",
        "description": "Rough, furry things are nice."
    },
    {
        "id": 6355,
        "statement": "is(X, green) :- is(X, furry), is(X, cold).",
        "description": "Furry, cold things are green."
    },
    {
        "id": 6356,
        "statement": "is(X, green) :- is(X, furry), is(X, rough).",
        "description": "Furry, rough things are green."
    },
    {
        "id": 6357,
        "statement": "is(gary, rough) :- is(gary, nice), is(gary, furry).",
        "description": "If Gary is nice and Gary is furry then Gary is rough."
    },
    {
        "id": 6358,
        "statement": "is(X, rough) :- is(X, big).",
        "description": "All big people are rough."
    },
    {
        "id": 6359,
        "statement": "is(X, rough) :- is(X, big), is(X, green).",
        "description": "Big, green people are rough."
    },
    {
        "id": 6360,
        "statement": "is(X, big) :- is(X, green), is(X, blue).",
        "description": "Green, blue people are big."
    },
    {
        "id": 6361,
        "statement": "is(X, rough) :- is(X, blue).",
        "description": "If someone is blue then they are rough."
    },
    {
        "id": 6362,
        "statement": "is(X, nice) :- is(X, white).",
        "description": "If something is white then it is nice."
    },
    {
        "id": 6363,
        "statement": "is(X, young) :- is(X, white), is(X, green).",
        "description": "If something is white and green then it is young."
    },
    {
        "id": 6364,
        "statement": "is(X, white) :- is(X, blue).",
        "description": "If something is blue then it is white."
    },
    {
        "id": 6365,
        "statement": "is(X, young) :- is(X, blue), is(X, white).",
        "description": "Blue, white things are young."
    },
    {
        "id": 6366,
        "statement": "is(X, kind) :- is(X, blue), is(X, quiet).",
        "description": "If someone is blue and quiet then they are kind."
    },
    {
        "id": 6367,
        "statement": "is(X, white) :- is(X, quiet), is(X, kind).",
        "description": "If someone is quiet and kind then they are white."
    },
    {
        "id": 6368,
        "statement": "is(charlie, white) :- is(charlie, smart), is(charlie, blue).",
        "description": "If Charlie is smart and Charlie is blue then Charlie is white."
    },
    {
        "id": 6369,
        "statement": "is(X, young) :- is(X, blue), is(X, kind).",
        "description": "All blue, kind people are young."
    },
    {
        "id": 6370,
        "statement": "is(X, red) :- needs(X, tiger), not is(X, blue).",
        "description": "If something needs the tiger and it is not blue then it is red."
    },
    {
        "id": 6371,
        "statement": "visits(dog, tiger) :- chases(squirrel, dog), not chases(squirrel, tiger).",
        "description": "If the squirrel chases the dog and the squirrel does not chase the tiger then the dog visits the tiger."
    },
    {
        "id": 6372,
        "statement": "chases(X, dog) :- is(X, green), needs(X, cat).",
        "description": "If something is green and it needs the cat then it chases the dog."
    },
    {
        "id": 6373,
        "statement": "is(X, green) :- needs(X, cat).",
        "description": "If something needs the cat then it is green."
    },
    {
        "id": 6374,
        "statement": "visits(X, tiger) :- is(X, round), not visits(X, squirrel).",
        "description": "If something is round and it does not visit the squirrel then it visits the tiger."
    },
    {
        "id": 6375,
        "statement": "visits(X, tiger) :- needs(X, dog), not is(dog, red).",
        "description": "If something needs the dog and the dog is not red then it visits the tiger."
    },
    {
        "id": 6376,
        "statement": "needs(tiger, cat) :- visits(X, tiger), not visits(X, cat).",
        "description": "If something visits the tiger and it does not visit the cat then the tiger needs the cat."
    },
    {
        "id": 6377,
        "statement": "likes(bald_eagle, rabbit) :- chases(X, bald_eagle).",
        "description": "If something chases the bald eagle then the bald eagle likes the rabbit."
    },
    {
        "id": 6378,
        "statement": "needs(bear, bald_eagle) :- chases(X, bear).",
        "description": "If something chases the bear then the bear needs the bald eagle."
    },
    {
        "id": 6379,
        "statement": "likes(tiger, rabbit) :- chases(bald_eagle, tiger), chases(tiger, bear).",
        "description": "If the bald eagle chases the tiger and the tiger chases the bear then the tiger likes the rabbit."
    },
    {
        "id": 6380,
        "statement": "needs(rabbit, bald_eagle) :- likes(X, rabbit), needs(X, rabbit).",
        "description": "If something likes the rabbit and it needs the rabbit then the rabbit needs the bald eagle."
    },
    {
        "id": 6381,
        "statement": "needs(X, rabbit) :- is(X, red), is(X, big).",
        "description": "If something is red and big then it needs the rabbit."
    },
    {
        "id": 6382,
        "statement": "chases(tiger, bald_eagle) :- likes(X, tiger), needs(X, bald_eagle).",
        "description": "If something likes the tiger and it needs the bald eagle then the tiger chases the bald eagle."
    },
    {
        "id": 6383,
        "statement": "likes(X, bald_eagle) :- chases(X, bear).",
        "description": "If something chases the bear then it likes the bald eagle."
    },
    {
        "id": 6384,
        "statement": "chases(tiger, bear) :- likes(tiger, bald_eagle), needs(bald_eagle, bear).",
        "description": "If the tiger likes the bald eagle and the bald eagle needs the bear then the tiger chases the bear."
    },
    {
        "id": 6385,
        "statement": "is(bald_eagle, big) :- needs(rabbit, bald_eagle).",
        "description": "If the rabbit needs the bald eagle then the bald eagle is big."
    },
    {
        "id": 6386,
        "statement": "is(X, rough) :- is(X, smart), is(X, quiet).",
        "description": "All smart, quiet things are rough."
    },
    {
        "id": 6387,
        "statement": "is(X, nice) :- is(X, smart), is(X, big).",
        "description": "If something is smart and big then it is nice."
    },
    {
        "id": 6388,
        "statement": "is(X, big) :- is(X, smart), is(X, furry).",
        "description": "If something is smart and furry then it is big."
    },
    {
        "id": 6389,
        "statement": "is(X, green) :- is(X, big), is(X, furry).",
        "description": "All big, furry things are green."
    },
    {
        "id": 6390,
        "statement": "is(X, nice) :- is(X, red), is(X, big).",
        "description": "Red, big things are nice."
    },
    {
        "id": 6391,
        "statement": "is(X, cold) :- is(X, blue), is(X, young).",
        "description": "Blue, young things are cold."
    },
    {
        "id": 6392,
        "statement": "is(X, rough) :- is(X, blue), is(X, nice).",
        "description": "All blue, nice things are rough."
    },
    {
        "id": 6393,
        "statement": "is(X, big) :- is(X, cold), is(X, blue).",
        "description": "All cold, blue things are big."
    },
    {
        "id": 6394,
        "statement": "is(X, rough) :- is(X, big), is(X, blue).",
        "description": "All big, blue things are rough."
    },
    {
        "id": 6395,
        "statement": "is(charlie, young) :- is(charlie, blue).",
        "description": "If Charlie is blue then Charlie is young."
    },
    {
        "id": 6396,
        "statement": "is(X, kind) :- is(X, cold), is(X, big).",
        "description": "All cold, big things are kind."
    },
    {
        "id": 6397,
        "statement": "is(X, big) :- is(X, round), is(X, blue).",
        "description": "Round, blue things are big."
    },
    {
        "id": 6398,
        "statement": "is(X, young) :- is(X, blue), not is(X, cold).",
        "description": "If something is blue and not cold then it is young."
    },
    {
        "id": 6399,
        "statement": "is(X, young) :- is(X, blue), not is(X, round).",
        "description": "If something is blue and not round then it is young."
    },
    {
        "id": 6400,
        "statement": "is(X, young) :- is(X, round), not is(X, green).",
        "description": "If something is round and not green then it is young."
    },
    {
        "id": 6401,
        "statement": "is(X, young) :- is(X, green), is(X, big).",
        "description": "If something is green and big then it is young."
    },
    {
        "id": 6402,
        "statement": "needs(X, mouse) :- eats(X, squirrel).",
        "description": "If someone eats the squirrel then they need the mouse."
    },
    {
        "id": 6403,
        "statement": "visits(X, tiger) :- needs(X, mouse).",
        "description": "If someone needs the mouse then they visit the tiger."
    },
    {
        "id": 6404,
        "statement": "visits(cat, tiger) :- visits(X, cat).",
        "description": "If someone visits the cat then the cat visits the tiger."
    },
    {
        "id": 6405,
        "statement": "visits(X, squirrel) :- visits(X, tiger).",
        "description": "If someone visits the tiger then they visit the squirrel."
    },
    {
        "id": 6406,
        "statement": "needs(tiger, mouse) :- eats(X, tiger).",
        "description": "If someone eats the tiger then the tiger needs the mouse."
    },
    {
        "id": 6407,
        "statement": "visits(cat, mouse) :- eats(X, mouse), eats(X, cat).",
        "description": "If someone eats the mouse and they eat the cat then the cat visits the mouse."
    },
    {
        "id": 6408,
        "statement": "visits(X, cat) :- eats(X, squirrel).",
        "description": "If someone eats the squirrel then they visit the cat."
    },
    {
        "id": 6409,
        "statement": "needs(squirrel, tiger) :- visits(mouse, squirrel).",
        "description": "If the mouse visits the squirrel then the squirrel needs the tiger."
    },
    {
        "id": 6410,
        "statement": "needs(tiger, mouse) :- needs(X, tiger).",
        "description": "If someone needs the tiger then the tiger needs the mouse."
    },
    {
        "id": 6411,
        "statement": "visits(X, bald_eagle) :- is(X, cold).",
        "description": "If something is cold then it visits the bald eagle."
    },
    {
        "id": 6412,
        "statement": "is(X, cold) :- visits(X, cow).",
        "description": "If something visits the cow then it is cold."
    },
    {
        "id": 6413,
        "statement": "eats(X, bald_eagle) :- visits(X, bald_eagle).",
        "description": "If something visits the bald eagle then it eats the bald eagle."
    },
    {
        "id": 6414,
        "statement": "visits(cat, cow) :- visits(X, cat), is(X, blue).",
        "description": "If something visits the cat and it is blue then the cat visits the cow."
    },
    {
        "id": 6415,
        "statement": "sees(bald_eagle, mouse) :- visits(bald_eagle, mouse).",
        "description": "If the bald eagle visits the mouse then the bald eagle sees the mouse."
    },
    {
        "id": 6416,
        "statement": "visits(mouse, cat) :- sees(X, mouse), visits(X, mouse).",
        "description": "If something sees the mouse and it visits the mouse then the mouse visits the cat."
    },
    {
        "id": 6417,
        "statement": "chases(bear, cow) :- sees(X, bear).",
        "description": "If something sees the bear then the bear chases the cow."
    },
    {
        "id": 6418,
        "statement": "sees(X, cow) :- eats(X, bear).",
        "description": "If something eats the bear then it sees the cow."
    },
    {
        "id": 6419,
        "statement": "is(lion, big) :- eats(X, lion), chases(lion, cat).",
        "description": "If something eats the lion and the lion chases the cat then the lion is big."
    },
    {
        "id": 6420,
        "statement": "sees(X, bear) :- chases(X, cat).",
        "description": "If something chases the cat then it sees the bear."
    },
    {
        "id": 6421,
        "statement": "eats(cow, lion) :- chases(X, cow).",
        "description": "If something chases the cow then the cow eats the lion."
    },
    {
        "id": 6422,
        "statement": "eats(X, cow) :- is(X, big), sees(X, cow).",
        "description": "If something is big and it sees the cow then it eats the cow."
    },
    {
        "id": 6423,
        "statement": "chases(cow, bear) :- is(X, cold), eats(X, cow).",
        "description": "If something is cold and it eats the cow then the cow chases the bear."
    },
    {
        "id": 6424,
        "statement": "is(X, smart) :- is(X, kind), is(X, blue).",
        "description": "Kind, blue people are smart."
    },
    {
        "id": 6425,
        "statement": "is(X, rough) :- is(X, blue), is(X, quiet).",
        "description": "If someone is blue and quiet then they are rough."
    },
    {
        "id": 6426,
        "statement": "is(X, rough) :- is(X, quiet), is(X, smart).",
        "description": "All quiet, smart people are rough."
    },
    {
        "id": 6427,
        "statement": "is(harry, kind) :- is(harry, young), is(harry, smart).",
        "description": "If Harry is young and Harry is smart then Harry is kind."
    },
    {
        "id": 6428,
        "statement": "is(X, nice) :- is(X, smart).",
        "description": "If someone is smart then they are nice."
    },
    {
        "id": 6429,
        "statement": "is(X, young) :- is(X, nice), not is(X, quiet).",
        "description": "If someone is nice and not quiet then they are young."
    },
    {
        "id": 6430,
        "statement": "is(X, young) :- is(X, blue), is(X, nice).",
        "description": "Blue, nice people are young."
    },
    {
        "id": 6431,
        "statement": "is(X, cold) :- is(X, quiet), is(X, furry).",
        "description": "Quiet, furry things are cold."
    },
    {
        "id": 6432,
        "statement": "is(X, quiet) :- is(X, young), is(X, smart).",
        "description": "If something is young and smart then it is quiet."
    },
    {
        "id": 6433,
        "statement": "is(X, furry) :- is(X, quiet), is(X, green).",
        "description": "If something is quiet and green then it is furry."
    },
    {
        "id": 6434,
        "statement": "is(X, nice) :- is(X, furry), is(X, cold).",
        "description": "All furry, cold things are nice."
    },
    {
        "id": 6435,
        "statement": "is(anne, cold) :- is(anne, furry), is(anne, smart).",
        "description": "If Anne is furry and Anne is smart then Anne is cold."
    },
    {
        "id": 6436,
        "statement": "is(X, blue) :- is(X, quiet), is(X, white).",
        "description": "All quiet, white things are blue."
    },
    {
        "id": 6437,
        "statement": "is(X, blue) :- is(X, kind), is(X, white).",
        "description": "Kind, white things are blue."
    },
    {
        "id": 6438,
        "statement": "is(X, kind) :- is(X, white).",
        "description": "If something is white then it is kind."
    },
    {
        "id": 6439,
        "statement": "is(X, kind) :- is(X, blue), is(X, smart).",
        "description": "If something is blue and smart then it is kind."
    },
    {
        "id": 6440,
        "statement": "is(X, green) :- is(X, white), is(X, blue).",
        "description": "White, blue things are green."
    },
    {
        "id": 6441,
        "statement": "is(X, quiet) :- is(X, nice).",
        "description": "If something is nice then it is quiet."
    },
    {
        "id": 6442,
        "statement": "is(X, quiet) :- is(X, green), is(X, nice).",
        "description": "If something is green and nice then it is quiet."
    },
    {
        "id": 6443,
        "statement": "is(X, nice) :- is(X, kind), is(X, white).",
        "description": "Kind, white things are nice."
    },
    {
        "id": 6444,
        "statement": "is(anne, white) :- is(anne, quiet).",
        "description": "If Anne is quiet then Anne is white."
    },
    {
        "id": 6445,
        "statement": "is(X, green) :- is(X, quiet), is(X, rough).",
        "description": "Quiet, rough things are green."
    },
    {
        "id": 6446,
        "statement": "is(X, rough) :- is(X, quiet), is(X, white).",
        "description": "All quiet, white things are rough."
    },
    {
        "id": 6447,
        "statement": "is(bob, round) :- is(bob, rough), not is(bob, kind).",
        "description": "If Bob is rough and Bob is not kind then Bob is round."
    },
    {
        "id": 6448,
        "statement": "is(X, big) :- is(X, rough), is(X, round).",
        "description": "Rough, round people are big."
    },
    {
        "id": 6449,
        "statement": "is(charlie, kind) :- is(charlie, smart), is(charlie, big).",
        "description": "If Charlie is smart and Charlie is big then Charlie is kind."
    },
    {
        "id": 6450,
        "statement": "is(erin, kind) :- is(erin, green).",
        "description": "If Erin is green then Erin is kind."
    },
    {
        "id": 6451,
        "statement": "is(X, rough) :- is(X, green), is(X, big).",
        "description": "All green, big people are rough."
    },
    {
        "id": 6452,
        "statement": "is(X, rough) :- is(X, kind).",
        "description": "If someone is kind then they are rough."
    },
    {
        "id": 6453,
        "statement": "is(X, rough) :- is(X, big), is(X, kind).",
        "description": "If someone is big and kind then they are rough."
    },
    {
        "id": 6454,
        "statement": "is(gary, quiet) :- is(gary, kind), is(gary, blue).",
        "description": "If Gary is kind and Gary is blue then Gary is quiet."
    },
    {
        "id": 6455,
        "statement": "is(X, blue) :- is(X, furry), is(X, kind).",
        "description": "All furry, kind people are blue."
    },
    {
        "id": 6456,
        "statement": "visits(lion, cat) :- is(X, blue), needs(X, lion).",
        "description": "If someone is blue and they need the lion then the lion visits the cat."
    },
    {
        "id": 6457,
        "statement": "needs(X, dog) :- visits(X, cat), needs(cat, tiger).",
        "description": "If someone visits the cat and the cat needs the tiger then they need the dog."
    },
    {
        "id": 6458,
        "statement": "is(X, green) :- is(X, kind), is(X, round).",
        "description": "Kind, round people are green."
    },
    {
        "id": 6459,
        "statement": "sees(dog, cat) :- visits(X, dog).",
        "description": "If someone visits the dog then the dog sees the cat."
    },
    {
        "id": 6460,
        "statement": "is(X, kind) :- needs(X, cat), is(cat, green).",
        "description": "If someone needs the cat and the cat is green then they are kind."
    },
    {
        "id": 6461,
        "statement": "is(harry, nice) :- is(harry, rough), is(harry, white).",
        "description": "If Harry is rough and Harry is white then Harry is nice."
    },
    {
        "id": 6462,
        "statement": "is(X, rough) :- is(X, nice), is(X, white).",
        "description": "If someone is nice and white then they are rough."
    },
    {
        "id": 6463,
        "statement": "is(bear, cold) :- likes(X, bear).",
        "description": "If someone likes the bear then the bear is cold."
    },
    {
        "id": 6464,
        "statement": "visits(bald_eagle, bear) :- likes(bald_eagle, squirrel).",
        "description": "If the bald eagle likes the squirrel then the bald eagle visits the bear."
    },
    {
        "id": 6465,
        "statement": "likes(cat, bear) :- visits(squirrel, cat).",
        "description": "If the squirrel visits the cat then the cat likes the bear."
    },
    {
        "id": 6466,
        "statement": "is(squirrel, red) :- likes(cat, squirrel), not visits(squirrel, cat).",
        "description": "If the cat likes the squirrel and the squirrel does not visit the cat then the squirrel is red."
    },
    {
        "id": 6467,
        "statement": "is(X, nice) :- is(X, cold).",
        "description": "If someone is cold then they are nice."
    },
    {
        "id": 6468,
        "statement": "sees(X, cat) :- is(X, cold), is(X, nice).",
        "description": "If someone is cold and nice then they see the cat."
    },
    {
        "id": 6469,
        "statement": "likes(X, bear) :- likes(X, bald_eagle), visits(bald_eagle, bear).",
        "description": "If someone likes the bald eagle and the bald eagle visits the bear then they like the bear."
    },
    {
        "id": 6470,
        "statement": "likes(X, cat) :- likes(X, bear).",
        "description": "If someone likes the bear then they like the cat."
    },
    {
        "id": 6471,
        "statement": "visits(bear, cat) :- likes(bear, cat), not likes(bear, bald_eagle).",
        "description": "If the bear likes the cat and the bear does not like the bald eagle then the bear visits the cat."
    },
    {
        "id": 6472,
        "statement": "is(charlie, white) :- is(charlie, kind).",
        "description": "If Charlie is kind then Charlie is white."
    },
    {
        "id": 6473,
        "statement": "is(X, white) :- is(X, young), is(X, cold).",
        "description": "All young, cold people are white."
    },
    {
        "id": 6474,
        "statement": "is(X, green) :- is(X, kind), is(X, red).",
        "description": "If someone is kind and red then they are green."
    },
    {
        "id": 6475,
        "statement": "is(gary, green) :- is(gary, kind), is(gary, cold).",
        "description": "If Gary is kind and Gary is cold then Gary is green."
    },
    {
        "id": 6476,
        "statement": "is(charlie, young) :- is(charlie, kind).",
        "description": "If Charlie is kind then Charlie is young."
    },
    {
        "id": 6477,
        "statement": "is(dave, furry) :- is(dave, young).",
        "description": "If Dave is young then Dave is furry."
    },
    {
        "id": 6478,
        "statement": "is(X, round) :- is(X, cold), is(X, furry).",
        "description": "Cold, furry people are round."
    },
    {
        "id": 6479,
        "statement": "sees(X, tiger) :- sees(X, squirrel).",
        "description": "If something sees the squirrel then it sees the tiger."
    },
    {
        "id": 6480,
        "statement": "needs(bear, tiger) :- sees(X, bear), sees(X, tiger).",
        "description": "If something sees the bear and it sees the tiger then the bear needs the tiger."
    },
    {
        "id": 6481,
        "statement": "sees(bear, lion) :- visits(squirrel, bear).",
        "description": "If the squirrel visits the bear then the bear sees the lion."
    },
    {
        "id": 6482,
        "statement": "sees(lion, bear) :- sees(tiger, lion), sees(lion, squirrel).",
        "description": "If the tiger sees the lion and the lion sees the squirrel then the lion sees the bear."
    },
    {
        "id": 6483,
        "statement": "sees(X, squirrel) :- is(X, young), visits(X, lion).",
        "description": "If something is young and it visits the lion then it sees the squirrel."
    },
    {
        "id": 6484,
        "statement": "sees(squirrel, bear) :- needs(X, squirrel).",
        "description": "If something needs the squirrel then the squirrel sees the bear."
    },
    {
        "id": 6485,
        "statement": "visits(X, bear) :- needs(X, tiger).",
        "description": "If something needs the tiger then it visits the bear."
    },
    {
        "id": 6486,
        "statement": "needs(X, bear) :- is(X, blue).",
        "description": "If something is blue then it needs the bear."
    },
    {
        "id": 6487,
        "statement": "sees(X, squirrel) :- needs(X, bear), visits(bear, tiger).",
        "description": "If something needs the bear and the bear visits the tiger then it sees the squirrel."
    },
    {
        "id": 6488,
        "statement": "is(X, big) :- is(X, green), eats(X, tiger).",
        "description": "If something is green and it eats the tiger then it is big."
    },
    {
        "id": 6489,
        "statement": "eats(X, tiger) :- is(X, green).",
        "description": "If something is green then it eats the tiger."
    },
    {
        "id": 6490,
        "statement": "is(X, nice) :- is(X, blue), visits(X, tiger).",
        "description": "If something is blue and it visits the tiger then it is nice."
    },
    {
        "id": 6491,
        "statement": "eats(X, bald_eagle) :- is(X, blue).",
        "description": "If something is blue then it eats the bald eagle."
    },
    {
        "id": 6492,
        "statement": "is(X, rough) :- visits(X, dog).",
        "description": "If something visits the dog then it is rough."
    },
    {
        "id": 6493,
        "statement": "is(X, blue) :- is(X, big), is(X, green).",
        "description": "Big, green things are blue."
    },
    {
        "id": 6494,
        "statement": "visits(X, bald_eagle) :- is(X, nice), is(X, big).",
        "description": "If something is nice and big then it visits the bald eagle."
    },
    {
        "id": 6495,
        "statement": "is(tiger, nice) :- eats(squirrel, tiger).",
        "description": "If the squirrel eats the tiger then the tiger is nice."
    },
    {
        "id": 6496,
        "statement": "is(X, green) :- is(X, furry), is(X, quiet).",
        "description": "If something is furry and quiet then it is green."
    },
    {
        "id": 6497,
        "statement": "is(X, furry) :- is(X, green).",
        "description": "Green things are furry."
    },
    {
        "id": 6498,
        "statement": "is(X, round) :- is(X, red), is(X, quiet).",
        "description": "If something is red and quiet then it is round."
    },
    {
        "id": 6499,
        "statement": "is(X, green) :- is(X, quiet), is(X, red).",
        "description": "All quiet, red things are green."
    },
    {
        "id": 6500,
        "statement": "is(X, smart) :- is(X, green), is(X, young).",
        "description": "If something is green and young then it is smart."
    },
    {
        "id": 6501,
        "statement": "is(X, big) :- is(X, quiet).",
        "description": "Quiet people are big."
    },
    {
        "id": 6502,
        "statement": "is(X, quiet) :- is(X, big), is(X, smart).",
        "description": "If someone is big and smart then they are quiet."
    },
    {
        "id": 6503,
        "statement": "is(gary, big) :- is(gary, smart), is(gary, round).",
        "description": "If Gary is smart and Gary is round then Gary is big."
    },
    {
        "id": 6504,
        "statement": "is(X, furry) :- is(X, big).",
        "description": "Big people are furry."
    },
    {
        "id": 6505,
        "statement": "is(harry, quiet) :- is(harry, furry).",
        "description": "If Harry is furry then Harry is quiet."
    },
    {
        "id": 6506,
        "statement": "is(X, red) :- is(X, kind), is(X, round).",
        "description": "If someone is kind and round then they are red."
    },
    {
        "id": 6507,
        "statement": "is(charlie, kind) :- is(charlie, green).",
        "description": "If Charlie is green then Charlie is kind."
    },
    {
        "id": 6508,
        "statement": "is(X, kind) :- is(X, red), is(X, green).",
        "description": "If someone is red and green then they are kind."
    },
    {
        "id": 6509,
        "statement": "is(harry, quiet) :- is(harry, red), is(harry, white).",
        "description": "If Harry is red and Harry is white then Harry is quiet."
    },
    {
        "id": 6510,
        "statement": "is(X, white) :- is(X, kind), not is(X, red).",
        "description": "If someone is kind and not red then they are white."
    },
    {
        "id": 6511,
        "statement": "is(X, white) :- is(X, red), is(X, big).",
        "description": "Red, big people are white."
    },
    {
        "id": 6512,
        "statement": "is(X, kind) :- is(X, big), is(X, furry).",
        "description": "All big, furry people are kind."
    },
    {
        "id": 6513,
        "statement": "is(X, kind) :- is(X, quiet), is(X, big).",
        "description": "Quiet, big people are kind."
    },
    {
        "id": 6514,
        "statement": "is(X, furry) :- is(X, quiet), is(X, kind).",
        "description": "If someone is quiet and kind then they are furry."
    },
    {
        "id": 6515,
        "statement": "is(anne, furry) :- is(anne, kind), is(anne, round).",
        "description": "If Anne is kind and Anne is round then Anne is furry."
    },
    {
        "id": 6516,
        "statement": "is(tiger, blue) :- eats(tiger, bald_eagle), not sees(cat, tiger).",
        "description": "If the tiger eats the bald eagle and the cat does not see the tiger then the tiger is blue."
    },
    {
        "id": 6517,
        "statement": "eats(X, tiger) :- sees(X, cat).",
        "description": "If something sees the cat then it eats the tiger."
    },
    {
        "id": 6518,
        "statement": "is(X, round) :- eats(X, tiger).",
        "description": "If something eats the tiger then it is round."
    },
    {
        "id": 6519,
        "statement": "sees(bald_eagle, cat) :- eats(cat, bald_eagle).",
        "description": "If the cat eats the bald eagle then the bald eagle sees the cat."
    },
    {
        "id": 6520,
        "statement": "eats(X, bald_eagle) :- is(X, round).",
        "description": "If something is round then it eats the bald eagle."
    },
    {
        "id": 6521,
        "statement": "chases(X, bald_eagle) :- sees(X, tiger).",
        "description": "If something sees the tiger then it chases the bald eagle."
    },
    {
        "id": 6522,
        "statement": "chases(X, cat) :- sees(X, squirrel), not is(squirrel, round).",
        "description": "If something sees the squirrel and the squirrel is not round then it chases the cat."
    },
    {
        "id": 6523,
        "statement": "sees(X, squirrel) :- chases(X, cat).",
        "description": "If something chases the cat then it sees the squirrel."
    },
    {
        "id": 6524,
        "statement": "is(fiona, furry) :- is(fiona, cold), not is(fiona, kind).",
        "description": "If Fiona is cold and Fiona is not kind then Fiona is furry."
    },
    {
        "id": 6525,
        "statement": "is(charlie, red) :- is(charlie, quiet), not is(charlie, white).",
        "description": "If Charlie is quiet and Charlie is not white then Charlie is red."
    },
    {
        "id": 6526,
        "statement": "is(charlie, kind) :- is(charlie, cold), is(charlie, furry).",
        "description": "If Charlie is cold and Charlie is furry then Charlie is kind."
    },
    {
        "id": 6527,
        "statement": "is(X, furry) :- is(X, red), not is(X, smart).",
        "description": "If someone is red and not smart then they are furry."
    },
    {
        "id": 6528,
        "statement": "is(X, green) :- is(X, round), is(X, young).",
        "description": "All round, young people are green."
    },
    {
        "id": 6529,
        "statement": "is(X, round) :- is(X, nice), is(X, rough).",
        "description": "Nice, rough people are round."
    },
    {
        "id": 6530,
        "statement": "is(X, green) :- is(X, quiet), is(X, young).",
        "description": "If something is quiet and young then it is green."
    },
    {
        "id": 6531,
        "statement": "is(X, white) :- is(X, quiet), is(X, green).",
        "description": "All quiet, green things are white."
    },
    {
        "id": 6532,
        "statement": "is(X, young) :- is(X, rough), is(X, white).",
        "description": "All rough, white things are young."
    },
    {
        "id": 6533,
        "statement": "is(X, kind) :- is(X, rough).",
        "description": "Rough things are kind."
    },
    {
        "id": 6534,
        "statement": "is(X, big) :- is(X, round), is(X, young).",
        "description": "All round, young things are big."
    },
    {
        "id": 6535,
        "statement": "is(fiona, young) :- is(fiona, smart).",
        "description": "If Fiona is smart then Fiona is young."
    },
    {
        "id": 6536,
        "statement": "is(fiona, smart) :- is(fiona, big).",
        "description": "If Fiona is big then Fiona is smart."
    },
    {
        "id": 6537,
        "statement": "is(X, nice) :- is(X, smart), is(X, round).",
        "description": "If something is smart and round then it is nice."
    },
    {
        "id": 6538,
        "statement": "is(X, big) :- is(X, young), is(X, cold).",
        "description": "Young, cold things are big."
    },
    {
        "id": 6539,
        "statement": "is(X, round) :- is(X, smart).",
        "description": "Smart things are round."
    },
    {
        "id": 6540,
        "statement": "is(X, smart) :- is(X, big), is(X, round).",
        "description": "All big, round people are smart."
    },
    {
        "id": 6541,
        "statement": "is(X, round) :- is(X, smart), is(X, big).",
        "description": "All smart, big people are round."
    },
    {
        "id": 6542,
        "statement": "is(X, cold) :- is(X, white), is(X, big).",
        "description": "If someone is white and big then they are cold."
    },
    {
        "id": 6543,
        "statement": "is(X, white) :- is(X, big), is(X, cold).",
        "description": "Big, cold people are white."
    },
    {
        "id": 6544,
        "statement": "is(X, smart) :- is(X, red), is(X, rough).",
        "description": "If someone is red and rough then they are smart."
    },
    {
        "id": 6545,
        "statement": "is(X, red) :- is(X, quiet), is(X, smart).",
        "description": "Quiet, smart people are red."
    },
    {
        "id": 6546,
        "statement": "is(X, rough) :- is(X, red), is(X, green).",
        "description": "If someone is red and green then they are rough."
    },
    {
        "id": 6547,
        "statement": "is(X, quiet) :- is(X, red), is(X, furry).",
        "description": "Red, furry people are quiet."
    },
    {
        "id": 6548,
        "statement": "is(harry, furry) :- is(harry, round).",
        "description": "If Harry is round then Harry is furry."
    },
    {
        "id": 6549,
        "statement": "is(X, red) :- is(X, nice), is(X, furry).",
        "description": "All nice, furry people are red."
    },
    {
        "id": 6550,
        "statement": "is(X, big) :- is(X, red), is(X, rough).",
        "description": "All red, rough people are big."
    },
    {
        "id": 6551,
        "statement": "is(X, furry) :- is(X, green), not is(X, rough).",
        "description": "If someone is green and not rough then they are furry."
    },
    {
        "id": 6552,
        "statement": "is(fiona, nice) :- is(fiona, rough), is(fiona, round).",
        "description": "If Fiona is rough and Fiona is round then Fiona is nice."
    },
    {
        "id": 6553,
        "statement": "is(X, round) :- is(X, red), is(X, rough).",
        "description": "All red, rough people are round."
    },
    {
        "id": 6554,
        "statement": "is(X, red) :- is(X, cold), is(X, big).",
        "description": "All cold, big things are red."
    },
    {
        "id": 6555,
        "statement": "is(X, cold) :- is(X, round), is(X, red).",
        "description": "Round, red things are cold."
    },
    {
        "id": 6556,
        "statement": "is(X, nice) :- is(X, cold), is(X, round).",
        "description": "Cold, round things are nice."
    },
    {
        "id": 6557,
        "statement": "eats(lion, cat) :- needs(X, lion), needs(X, cat).",
        "description": "If something needs the lion and it needs the cat then the lion eats the cat."
    },
    {
        "id": 6558,
        "statement": "eats(cat, lion) :- visits(bear, cat).",
        "description": "If the bear visits the cat then the cat eats the lion."
    },
    {
        "id": 6559,
        "statement": "is(X, kind) :- needs(X, squirrel), not eats(X, bear).",
        "description": "If something needs the squirrel and it does not eat the bear then it is kind."
    },
    {
        "id": 6560,
        "statement": "visits(squirrel, bear) :- needs(X, squirrel).",
        "description": "If something needs the squirrel then the squirrel visits the bear."
    },
    {
        "id": 6561,
        "statement": "eats(bear, cat) :- is(X, kind), not needs(X, bear).",
        "description": "If something is kind and it does not need the bear then the bear eats the cat."
    },
    {
        "id": 6562,
        "statement": "needs(X, squirrel) :- eats(X, cat).",
        "description": "If something eats the cat then it needs the squirrel."
    },
    {
        "id": 6563,
        "statement": "eats(bear, lion) :- eats(squirrel, bear), is(squirrel, big).",
        "description": "If the squirrel eats the bear and the squirrel is big then the bear eats the lion."
    },
    {
        "id": 6564,
        "statement": "likes(X, tiger) :- chases(X, dog).",
        "description": "If something chases the dog then it likes the tiger."
    },
    {
        "id": 6565,
        "statement": "is(X, young) :- needs(X, bear).",
        "description": "If something needs the bear then it is young."
    },
    {
        "id": 6566,
        "statement": "needs(dog, bear) :- needs(X, dog), likes(dog, mouse).",
        "description": "If something needs the dog and the dog likes the mouse then the dog needs the bear."
    },
    {
        "id": 6567,
        "statement": "needs(X, dog) :- is(X, young).",
        "description": "If something is young then it needs the dog."
    },
    {
        "id": 6568,
        "statement": "is(X, nice) :- needs(X, dog), needs(X, bear).",
        "description": "If something needs the dog and it needs the bear then it is nice."
    },
    {
        "id": 6569,
        "statement": "likes(X, dog) :- chases(X, mouse), likes(X, tiger).",
        "description": "If something chases the mouse and it likes the tiger then it likes the dog."
    },
    {
        "id": 6570,
        "statement": "needs(dog, mouse) :- needs(X, dog), is(dog, round).",
        "description": "If something needs the dog and the dog is round then the dog needs the mouse."
    },
    {
        "id": 6571,
        "statement": "is(X, cold) :- is(X, green), is(X, smart).",
        "description": "If something is green and smart then it is cold."
    },
    {
        "id": 6572,
        "statement": "is(X, nice) :- is(X, red), not is(X, young).",
        "description": "If something is red and not young then it is nice."
    },
    {
        "id": 6573,
        "statement": "likes(cat, lion) :- likes(cat, tiger).",
        "description": "If the cat likes the tiger then the cat likes the lion."
    },
    {
        "id": 6574,
        "statement": "likes(lion, bald_eagle) :- needs(cat, lion).",
        "description": "If the cat needs the lion then the lion likes the bald eagle."
    },
    {
        "id": 6575,
        "statement": "is(X, big) :- chases(X, tiger), chases(X, lion).",
        "description": "If something chases the tiger and it chases the lion then it is big."
    },
    {
        "id": 6576,
        "statement": "needs(X, lion) :- chases(X, lion).",
        "description": "If something chases the lion then it needs the lion."
    },
    {
        "id": 6577,
        "statement": "chases(X, lion) :- likes(X, bald_eagle).",
        "description": "If something likes the bald eagle then it chases the lion."
    },
    {
        "id": 6578,
        "statement": "is(X, kind) :- chases(X, lion).",
        "description": "If something chases the lion then it is kind."
    },
    {
        "id": 6579,
        "statement": "likes(X, lion) :- needs(X, lion).",
        "description": "If something needs the lion then it likes the lion."
    },
    {
        "id": 6580,
        "statement": "chases(X, tiger) :- likes(X, cat), chases(X, lion).",
        "description": "If something likes the cat and it chases the lion then it chases the tiger."
    },
    {
        "id": 6581,
        "statement": "likes(cat, bald_eagle) :- chases(X, lion), needs(X, cat).",
        "description": "If something chases the lion and it needs the cat then the cat likes the bald eagle."
    },
    {
        "id": 6582,
        "statement": "is(X, big) :- is(X, smart), is(X, young).",
        "description": "All smart, young people are big."
    },
    {
        "id": 6583,
        "statement": "is(X, rough) :- is(X, big), is(X, blue).",
        "description": "Big, blue people are rough."
    },
    {
        "id": 6584,
        "statement": "is(X, furry) :- is(X, blue), is(X, rough).",
        "description": "Blue, rough people are furry."
    },
    {
        "id": 6585,
        "statement": "is(X, young) :- is(X, white).",
        "description": "All white people are young."
    },
    {
        "id": 6586,
        "statement": "is(X, smart) :- is(X, young), is(X, rough).",
        "description": "If someone is young and rough then they are smart."
    },
    {
        "id": 6587,
        "statement": "is(X, quiet) :- is(X, young), is(X, big).",
        "description": "All young, big things are quiet."
    },
    {
        "id": 6588,
        "statement": "is(X, blue) :- is(X, quiet), is(X, young).",
        "description": "All quiet, young things are blue."
    },
    {
        "id": 6589,
        "statement": "is(erin, cold) :- is(erin, round).",
        "description": "If Erin is round then Erin is cold."
    },
    {
        "id": 6590,
        "statement": "is(X, rough) :- is(X, young), is(X, big).",
        "description": "If someone is young and big then they are rough."
    },
    {
        "id": 6591,
        "statement": "is(X, rough) :- is(X, quiet), is(X, red).",
        "description": "Quiet, red people are rough."
    },
    {
        "id": 6592,
        "statement": "is(X, rough) :- is(X, cold), is(X, furry).",
        "description": "If someone is cold and furry then they are rough."
    },
    {
        "id": 6593,
        "statement": "is(X, red) :- is(X, rough), is(X, furry).",
        "description": "Rough, furry people are red."
    },
    {
        "id": 6594,
        "statement": "is(bob, big) :- is(bob, cold), is(bob, rough).",
        "description": "If Bob is cold and Bob is rough then Bob is big."
    },
    {
        "id": 6595,
        "statement": "eats(X, squirrel) :- is(X, big).",
        "description": "If someone is big then they eat the squirrel."
    },
    {
        "id": 6596,
        "statement": "is(bald_eagle, rough) :- is(X, big), likes(X, bald_eagle).",
        "description": "If someone is big and they like the bald eagle then the bald eagle is rough."
    },
    {
        "id": 6597,
        "statement": "is(rabbit, blue) :- is(bald_eagle, round), eats(bald_eagle, rabbit).",
        "description": "If the bald eagle is round and the bald eagle eats the rabbit then the rabbit is blue."
    },
    {
        "id": 6598,
        "statement": "eats(X, dog) :- is(X, round), eats(X, bald_eagle).",
        "description": "If someone is round and they eat the bald eagle then they eat the dog."
    },
    {
        "id": 6599,
        "statement": "likes(rabbit, squirrel) :- eats(dog, rabbit).",
        "description": "If the dog eats the rabbit then the rabbit likes the squirrel."
    },
    {
        "id": 6600,
        "statement": "is(X, green) :- eats(X, squirrel).",
        "description": "If someone eats the squirrel then they are green."
    },
    {
        "id": 6601,
        "statement": "eats(X, rabbit) :- is(X, green).",
        "description": "If someone is green then they eat the rabbit."
    },
    {
        "id": 6602,
        "statement": "is(X, big) :- likes(X, bald_eagle).",
        "description": "If someone likes the bald eagle then they are big."
    },
    {
        "id": 6603,
        "statement": "needs(mouse, dog) :- is(X, nice), likes(X, mouse).",
        "description": "If someone is nice and they like the mouse then the mouse needs the dog."
    },
    {
        "id": 6604,
        "statement": "likes(X, dog) :- likes(X, cow).",
        "description": "If someone likes the cow then they like the dog."
    },
    {
        "id": 6605,
        "statement": "needs(X, tiger) :- is(X, cold), is(X, kind).",
        "description": "If someone is cold and kind then they need the tiger."
    },
    {
        "id": 6606,
        "statement": "needs(dog, cow) :- likes(dog, mouse), likes(dog, tiger).",
        "description": "If the dog likes the mouse and the dog likes the tiger then the dog needs the cow."
    },
    {
        "id": 6607,
        "statement": "is(X, nice) :- likes(X, dog).",
        "description": "If someone likes the dog then they are nice."
    },
    {
        "id": 6608,
        "statement": "needs(dog, cow) :- needs(X, dog).",
        "description": "If someone needs the dog then the dog needs the cow."
    },
    {
        "id": 6609,
        "statement": "needs(X, cow) :- sees(X, mouse).",
        "description": "If someone sees the mouse then they need the cow."
    },
    {
        "id": 6610,
        "statement": "sees(X, cow) :- needs(X, cow).",
        "description": "If someone needs the cow then they see the cow."
    },
    {
        "id": 6611,
        "statement": "likes(cow, dog) :- needs(X, cow).",
        "description": "If someone needs the cow then the cow likes the dog."
    },
    {
        "id": 6612,
        "statement": "is(X, rough) :- is(X, big), is(X, white).",
        "description": "If someone is big and white then they are rough."
    },
    {
        "id": 6613,
        "statement": "is(X, smart) :- is(X, white), is(X, big).",
        "description": "White, big people are smart."
    },
    {
        "id": 6614,
        "statement": "is(erin, green) :- is(erin, nice).",
        "description": "If Erin is nice then Erin is green."
    },
    {
        "id": 6615,
        "statement": "is(X, rough) :- is(X, young).",
        "description": "Young things are rough."
    },
    {
        "id": 6616,
        "statement": "is(X, nice) :- is(X, young), is(X, smart).",
        "description": "All young, smart things are nice."
    },
    {
        "id": 6617,
        "statement": "is(X, green) :- is(X, big), is(X, nice).",
        "description": "All big, nice things are green."
    },
    {
        "id": 6618,
        "statement": "is(erin, nice) :- is(erin, smart), is(erin, green).",
        "description": "If Erin is smart and Erin is green then Erin is nice."
    },
    {
        "id": 6619,
        "statement": "is(X, nice) :- is(X, big), is(X, young).",
        "description": "Big, young things are nice."
    },
    {
        "id": 6620,
        "statement": "is(X, big) :- is(X, young), is(X, furry).",
        "description": "Young, furry things are big."
    },
    {
        "id": 6621,
        "statement": "is(X, nice) :- needs(X, lion).",
        "description": "If something needs the lion then it is nice."
    },
    {
        "id": 6622,
        "statement": "sees(squirrel, rabbit) :- likes(X, lion), sees(X, squirrel).",
        "description": "If something likes the lion and it sees the squirrel then the squirrel sees the rabbit."
    },
    {
        "id": 6623,
        "statement": "needs(lion, cat) :- needs(squirrel, lion), is(squirrel, kind).",
        "description": "If the squirrel needs the lion and the squirrel is kind then the lion needs the cat."
    },
    {
        "id": 6624,
        "statement": "is(X, kind) :- needs(X, cat), is(cat, nice).",
        "description": "If something needs the cat and the cat is nice then it is kind."
    },
    {
        "id": 6625,
        "statement": "likes(squirrel, rabbit) :- likes(X, squirrel).",
        "description": "If something likes the squirrel then the squirrel likes the rabbit."
    },
    {
        "id": 6626,
        "statement": "needs(cat, rabbit) :- likes(X, cat).",
        "description": "If something likes the cat then the cat needs the rabbit."
    },
    {
        "id": 6627,
        "statement": "is(X, cold) :- is(X, kind), is(X, round).",
        "description": "All kind, round things are cold."
    },
    {
        "id": 6628,
        "statement": "sees(X, squirrel) :- is(X, blue).",
        "description": "If something is blue then it sees the squirrel."
    },
    {
        "id": 6629,
        "statement": "needs(X, mouse) :- sees(X, squirrel).",
        "description": "If something sees the squirrel then it needs the mouse."
    },
    {
        "id": 6630,
        "statement": "eats(squirrel, lion) :- is(squirrel, round).",
        "description": "If the squirrel is round then the squirrel eats the lion."
    },
    {
        "id": 6631,
        "statement": "needs(dog, squirrel) :- eats(X, dog), sees(dog, squirrel).",
        "description": "If something eats the dog and the dog sees the squirrel then the dog needs the squirrel."
    },
    {
        "id": 6632,
        "statement": "sees(dog, squirrel) :- needs(X, dog), sees(X, squirrel).",
        "description": "If something needs the dog and it sees the squirrel then the dog sees the squirrel."
    },
    {
        "id": 6633,
        "statement": "is(squirrel, nice) :- needs(X, lion), sees(X, squirrel).",
        "description": "If something needs the lion and it sees the squirrel then the squirrel is nice."
    },
    {
        "id": 6634,
        "statement": "is(X, green) :- is(X, red), is(X, nice).",
        "description": "All red, nice people are green."
    },
    {
        "id": 6635,
        "statement": "is(X, nice) :- is(X, big).",
        "description": "Big people are nice."
    },
    {
        "id": 6636,
        "statement": "is(X, red) :- is(X, big), is(X, green).",
        "description": "If someone is big and green then they are red."
    },
    {
        "id": 6637,
        "statement": "is(X, smart) :- is(X, nice).",
        "description": "Nice people are smart."
    },
    {
        "id": 6638,
        "statement": "is(dog, red) :- is(X, green), likes(X, dog).",
        "description": "If something is green and it likes the dog then the dog is red."
    },
    {
        "id": 6639,
        "statement": "needs(X, dog) :- is(X, red), is(X, nice).",
        "description": "If something is red and nice then it needs the dog."
    },
    {
        "id": 6640,
        "statement": "needs(X, cow) :- is(X, green), is(X, rough).",
        "description": "If something is green and rough then it needs the cow."
    },
    {
        "id": 6641,
        "statement": "needs(bear, dog) :- likes(X, bear).",
        "description": "If something likes the bear then the bear needs the dog."
    },
    {
        "id": 6642,
        "statement": "needs(bald_eagle, cow) :- likes(bear, bald_eagle), is(bear, rough).",
        "description": "If the bear likes the bald eagle and the bear is rough then the bald eagle needs the cow."
    },
    {
        "id": 6643,
        "statement": "likes(X, bald_eagle) :- is(X, red).",
        "description": "If something is red then it likes the bald eagle."
    },
    {
        "id": 6644,
        "statement": "needs(X, dog) :- is(X, kind), is(X, rough).",
        "description": "If something is kind and rough then it needs the dog."
    },
    {
        "id": 6645,
        "statement": "likes(X, dog) :- needs(X, bald_eagle), is(X, green).",
        "description": "If something needs the bald eagle and it is green then it likes the dog."
    },
    {
        "id": 6646,
        "statement": "is(X, nice) :- is(X, rough), is(X, quiet).",
        "description": "If something is rough and quiet then it is nice."
    },
    {
        "id": 6647,
        "statement": "is(X, furry) :- is(X, nice), is(X, rough).",
        "description": "Nice, rough things are furry."
    },
    {
        "id": 6648,
        "statement": "is(X, furry) :- is(X, rough), is(X, nice).",
        "description": "If something is rough and nice then it is furry."
    },
    {
        "id": 6649,
        "statement": "chases(X, tiger) :- is(X, rough).",
        "description": "If someone is rough then they chase the tiger."
    },
    {
        "id": 6650,
        "statement": "needs(tiger, rabbit) :- sees(tiger, lion).",
        "description": "If the tiger sees the lion then the tiger needs the rabbit."
    },
    {
        "id": 6651,
        "statement": "is(X, nice) :- chases(X, tiger).",
        "description": "If someone chases the tiger then they are nice."
    },
    {
        "id": 6652,
        "statement": "sees(dog, tiger) :- chases(X, dog), needs(X, tiger).",
        "description": "If someone chases the dog and they need the tiger then the dog sees the tiger."
    },
    {
        "id": 6653,
        "statement": "sees(X, dog) :- is(X, rough), is(X, green).",
        "description": "If someone is rough and green then they see the dog."
    },
    {
        "id": 6654,
        "statement": "needs(X, dog) :- is(X, young), is(X, red).",
        "description": "If someone is young and red then they need the dog."
    },
    {
        "id": 6655,
        "statement": "chases(rabbit, lion) :- needs(tiger, rabbit).",
        "description": "If the tiger needs the rabbit then the rabbit chases the lion."
    },
    {
        "id": 6656,
        "statement": "is(X, young) :- is(X, nice), is(X, rough).",
        "description": "Nice, rough people are young."
    },
    {
        "id": 6657,
        "statement": "is(X, rough) :- is(X, round), is(X, kind).",
        "description": "If something is round and kind then it is rough."
    },
    {
        "id": 6658,
        "statement": "is(X, young) :- is(X, white), is(X, quiet).",
        "description": "All white, quiet things are young."
    },
    {
        "id": 6659,
        "statement": "is(X, furry) :- is(X, quiet), not is(X, white).",
        "description": "If something is quiet and not white then it is furry."
    },
    {
        "id": 6660,
        "statement": "is(X, rough) :- is(X, smart), is(X, big).",
        "description": "All smart, big people are rough."
    },
    {
        "id": 6661,
        "statement": "is(X, rough) :- is(X, smart), is(X, young).",
        "description": "Smart, young people are rough."
    },
    {
        "id": 6662,
        "statement": "is(fiona, young) :- is(fiona, green), is(fiona, big).",
        "description": "If Fiona is green and Fiona is big then Fiona is young."
    },
    {
        "id": 6663,
        "statement": "is(gary, smart) :- is(gary, quiet).",
        "description": "If Gary is quiet then Gary is smart."
    },
    {
        "id": 6664,
        "statement": "is(X, smart) :- is(X, nice), is(X, big).",
        "description": "All nice, big people are smart."
    },
    {
        "id": 6665,
        "statement": "is(X, cold) :- is(X, big), is(X, rough).",
        "description": "All big, rough things are cold."
    },
    {
        "id": 6666,
        "statement": "is(X, cold) :- is(X, rough).",
        "description": "If something is rough then it is cold."
    },
    {
        "id": 6667,
        "statement": "is(X, cold) :- is(X, rough), is(X, red).",
        "description": "All rough, red things are cold."
    },
    {
        "id": 6668,
        "statement": "is(X, rough) :- is(X, red).",
        "description": "Red things are rough."
    },
    {
        "id": 6669,
        "statement": "is(X, blue) :- is(X, white).",
        "description": "If something is white then it is blue."
    },
    {
        "id": 6670,
        "statement": "is(harry, big) :- is(harry, blue), not is(harry, white).",
        "description": "If Harry is blue and Harry is not white then Harry is big."
    },
    {
        "id": 6671,
        "statement": "is(harry, big) :- is(harry, blue).",
        "description": "If Harry is blue then Harry is big."
    },
    {
        "id": 6672,
        "statement": "is(harry, kind) :- is(harry, blue).",
        "description": "If Harry is blue then Harry is kind."
    },
    {
        "id": 6673,
        "statement": "is(X, red) :- chases(X, cow).",
        "description": "If something chases the cow then it is red."
    },
    {
        "id": 6674,
        "statement": "chases(cow, bear) :- eats(X, cat), sees(X, cow).",
        "description": "If something eats the cat and it sees the cow then the cow chases the bear."
    },
    {
        "id": 6675,
        "statement": "eats(X, bear) :- is(X, red).",
        "description": "If something is red then it eats the bear."
    },
    {
        "id": 6676,
        "statement": "sees(cow, squirrel) :- eats(X, cow).",
        "description": "If something eats the cow then the cow sees the squirrel."
    },
    {
        "id": 6677,
        "statement": "eats(squirrel, cow) :- is(X, big), sees(X, squirrel).",
        "description": "If something is big and it sees the squirrel then the squirrel eats the cow."
    },
    {
        "id": 6678,
        "statement": "eats(cat, bear) :- chases(X, cat).",
        "description": "If something chases the cat then the cat eats the bear."
    },
    {
        "id": 6679,
        "statement": "eats(bear, cow) :- is(cow, kind), chases(cow, bear).",
        "description": "If the cow is kind and the cow chases the bear then the bear eats the cow."
    },
    {
        "id": 6680,
        "statement": "is(X, red) :- eats(X, cow).",
        "description": "If something eats the cow then it is red."
    },
    {
        "id": 6681,
        "statement": "is(X, white) :- is(X, smart), is(X, blue).",
        "description": "All smart, blue things are white."
    },
    {
        "id": 6682,
        "statement": "is(X, rough) :- is(X, round), is(X, furry).",
        "description": "All round, furry things are rough."
    },
    {
        "id": 6683,
        "statement": "is(X, round) :- is(X, furry), is(X, young).",
        "description": "If something is furry and young then it is round."
    },
    {
        "id": 6684,
        "statement": "is(dave, young) :- is(dave, round), is(dave, furry).",
        "description": "If Dave is round and Dave is furry then Dave is young."
    },
    {
        "id": 6685,
        "statement": "is(X, smart) :- is(X, young), is(X, rough).",
        "description": "If something is young and rough then it is smart."
    },
    {
        "id": 6686,
        "statement": "is(X, round) :- is(X, young), is(X, furry).",
        "description": "All young, furry things are round."
    },
    {
        "id": 6687,
        "statement": "is(X, blue) :- is(X, smart), is(X, quiet).",
        "description": "All smart, quiet people are blue."
    },
    {
        "id": 6688,
        "statement": "is(erin, big) :- is(erin, blue).",
        "description": "If Erin is blue then Erin is big."
    },
    {
        "id": 6689,
        "statement": "is(X, quiet) :- is(X, smart), is(X, big).",
        "description": "Smart, big people are quiet."
    },
    {
        "id": 6690,
        "statement": "is(X, red) :- is(X, blue), is(X, furry).",
        "description": "If someone is blue and furry then they are red."
    },
    {
        "id": 6691,
        "statement": "is(X, red) :- is(X, blue), not is(X, big).",
        "description": "If someone is blue and not big then they are red."
    },
    {
        "id": 6692,
        "statement": "is(X, young) :- is(X, kind), is(X, rough).",
        "description": "Kind, rough people are young."
    },
    {
        "id": 6693,
        "statement": "is(X, red) :- is(X, big), is(X, white).",
        "description": "If someone is big and white then they are red."
    },
    {
        "id": 6694,
        "statement": "is(X, blue) :- is(X, young), is(X, white).",
        "description": "All young, white people are blue."
    },
    {
        "id": 6695,
        "statement": "is(X, young) :- is(X, big), is(X, white).",
        "description": "Big, white people are young."
    },
    {
        "id": 6696,
        "statement": "is(X, big) :- is(X, blue), is(X, rough).",
        "description": "All blue, rough people are big."
    },
    {
        "id": 6697,
        "statement": "is(anne, white) :- is(anne, kind), is(anne, blue).",
        "description": "If Anne is kind and Anne is blue then Anne is white."
    },
    {
        "id": 6698,
        "statement": "sees(X, dog) :- is(X, rough), is(X, blue).",
        "description": "If someone is rough and blue then they see the dog."
    },
    {
        "id": 6699,
        "statement": "is(X, rough) :- sees(X, bear).",
        "description": "If someone sees the bear then they are rough."
    },
    {
        "id": 6700,
        "statement": "visits(tiger, cat) :- is(tiger, big).",
        "description": "If the tiger is big then the tiger visits the cat."
    },
    {
        "id": 6701,
        "statement": "is(X, blue) :- sees(X, bear).",
        "description": "If someone sees the bear then they are blue."
    },
    {
        "id": 6702,
        "statement": "sees(dog, tiger) :- visits(X, dog).",
        "description": "If someone visits the dog then the dog sees the tiger."
    },
    {
        "id": 6703,
        "statement": "sees(tiger, dog) :- sees(X, tiger), chases(tiger, cat).",
        "description": "If someone sees the tiger and the tiger chases the cat then the tiger sees the dog."
    },
    {
        "id": 6704,
        "statement": "chases(X, tiger) :- visits(X, dog), visits(X, bear).",
        "description": "If someone visits the dog and they visit the bear then they chase the tiger."
    },
    {
        "id": 6705,
        "statement": "sees(dog, bear) :- sees(tiger, dog).",
        "description": "If the tiger sees the dog then the dog sees the bear."
    },
    {
        "id": 6706,
        "statement": "chases(X, bear) :- is(X, cold), not is(X, rough).",
        "description": "If someone is cold and not rough then they chase the bear."
    },
    {
        "id": 6707,
        "statement": "sees(squirrel, bear) :- eats(X, lion), sees(lion, squirrel).",
        "description": "If something eats the lion and the lion sees the squirrel then the squirrel sees the bear."
    },
    {
        "id": 6708,
        "statement": "eats(X, bear) :- eats(X, squirrel).",
        "description": "If something eats the squirrel then it eats the bear."
    },
    {
        "id": 6709,
        "statement": "sees(X, lion) :- sees(X, rabbit), is(X, young).",
        "description": "If something sees the rabbit and it is young then it sees the lion."
    },
    {
        "id": 6710,
        "statement": "sees(X, rabbit) :- eats(X, bear).",
        "description": "If something eats the bear then it sees the rabbit."
    },
    {
        "id": 6711,
        "statement": "is(rabbit, young) :- is(rabbit, big).",
        "description": "If the rabbit is big then the rabbit is young."
    },
    {
        "id": 6712,
        "statement": "visits(rabbit, squirrel) :- sees(squirrel, rabbit), not visits(rabbit, bear).",
        "description": "If the squirrel sees the rabbit and the rabbit does not visit the bear then the rabbit visits the squirrel."
    },
    {
        "id": 6713,
        "statement": "is(X, young) :- visits(X, bear), is(bear, big).",
        "description": "If something visits the bear and the bear is big then it is young."
    },
    {
        "id": 6714,
        "statement": "eats(lion, bear) :- sees(X, lion), is(X, big).",
        "description": "If something sees the lion and it is big then the lion eats the bear."
    },
    {
        "id": 6715,
        "statement": "sees(X, squirrel) :- eats(X, rabbit).",
        "description": "If something eats the rabbit then it sees the squirrel."
    },
    {
        "id": 6716,
        "statement": "is(X, furry) :- is(X, quiet), is(X, big).",
        "description": "If someone is quiet and big then they are furry."
    },
    {
        "id": 6717,
        "statement": "is(X, quiet) :- is(X, red), is(X, white).",
        "description": "If someone is red and white then they are quiet."
    },
    {
        "id": 6718,
        "statement": "is(X, big) :- is(X, furry), is(X, quiet).",
        "description": "Furry, quiet people are big."
    },
    {
        "id": 6719,
        "statement": "is(X, quiet) :- is(X, kind), is(X, big).",
        "description": "Kind, big people are quiet."
    },
    {
        "id": 6720,
        "statement": "is(X, big) :- is(X, white), is(X, quiet).",
        "description": "All white, quiet things are big."
    },
    {
        "id": 6721,
        "statement": "is(harry, furry) :- is(harry, big).",
        "description": "If Harry is big then Harry is furry."
    },
    {
        "id": 6722,
        "statement": "is(X, quiet) :- is(X, furry), is(X, rough).",
        "description": "If something is furry and rough then it is quiet."
    },
    {
        "id": 6723,
        "statement": "is(X, quiet) :- is(X, big), is(X, blue).",
        "description": "If something is big and blue then it is quiet."
    },
    {
        "id": 6724,
        "statement": "chases(X, rabbit) :- likes(X, mouse).",
        "description": "If someone likes the mouse then they chase the rabbit."
    },
    {
        "id": 6725,
        "statement": "chases(X, squirrel) :- likes(X, mouse).",
        "description": "If someone likes the mouse then they chase the squirrel."
    },
    {
        "id": 6726,
        "statement": "likes(mouse, rabbit) :- likes(mouse, squirrel).",
        "description": "If the mouse likes the squirrel then the mouse likes the rabbit."
    },
    {
        "id": 6727,
        "statement": "chases(mouse, rabbit) :- is(X, big), likes(X, mouse).",
        "description": "If someone is big and they like the mouse then the mouse chases the rabbit."
    },
    {
        "id": 6728,
        "statement": "is(X, big) :- is(X, young), is(X, rough).",
        "description": "All young, rough people are big."
    },
    {
        "id": 6729,
        "statement": "chases(X, cat) :- is(X, big).",
        "description": "If someone is big then they chase the cat."
    },
    {
        "id": 6730,
        "statement": "is(X, young) :- chases(X, mouse).",
        "description": "If someone chases the mouse then they are young."
    },
    {
        "id": 6731,
        "statement": "likes(X, mouse) :- chases(X, rabbit).",
        "description": "If someone chases the rabbit then they like the mouse."
    },
    {
        "id": 6732,
        "statement": "is(X, round) :- is(X, white), is(X, rough).",
        "description": "If someone is white and rough then they are round."
    },
    {
        "id": 6733,
        "statement": "is(X, round) :- is(X, cold), is(X, young).",
        "description": "All cold, young people are round."
    },
    {
        "id": 6734,
        "statement": "is(X, blue) :- is(X, green), is(X, cold).",
        "description": "If something is green and cold then it is blue."
    },
    {
        "id": 6735,
        "statement": "is(X, red) :- is(X, quiet), is(X, big).",
        "description": "All quiet, big things are red."
    },
    {
        "id": 6736,
        "statement": "is(X, young) :- is(X, blue), is(X, round).",
        "description": "Blue, round things are young."
    },
    {
        "id": 6737,
        "statement": "is(X, red) :- is(X, cold).",
        "description": "Cold things are red."
    },
    {
        "id": 6738,
        "statement": "is(fiona, blue) :- is(fiona, rough).",
        "description": "If Fiona is rough then Fiona is blue."
    },
    {
        "id": 6739,
        "statement": "is(X, young) :- is(X, kind), is(X, blue).",
        "description": "All kind, blue things are young."
    },
    {
        "id": 6740,
        "statement": "is(X, nice) :- is(X, rough), is(X, smart).",
        "description": "Rough, smart things are nice."
    },
    {
        "id": 6741,
        "statement": "is(X, smart) :- is(X, rough), is(X, furry).",
        "description": "If something is rough and furry then it is smart."
    },
    {
        "id": 6742,
        "statement": "is(harry, smart) :- is(harry, blue).",
        "description": "If Harry is blue then Harry is smart."
    },
    {
        "id": 6743,
        "statement": "is(X, furry) :- is(X, blue), is(X, young).",
        "description": "If something is blue and young then it is furry."
    },
    {
        "id": 6744,
        "statement": "is(anne, blue) :- is(anne, kind).",
        "description": "If Anne is kind then Anne is blue."
    },
    {
        "id": 6745,
        "statement": "is(gary, smart) :- is(gary, rough).",
        "description": "If Gary is rough then Gary is smart."
    },
    {
        "id": 6746,
        "statement": "is(X, rough) :- is(X, round), is(X, red).",
        "description": "All round, red people are rough."
    },
    {
        "id": 6747,
        "statement": "is(X, big) :- is(X, red), is(X, round).",
        "description": "Red, round people are big."
    },
    {
        "id": 6748,
        "statement": "is(X, kind) :- is(X, red), is(X, green).",
        "description": "If something is red and green then it is kind."
    },
    {
        "id": 6749,
        "statement": "is(X, big) :- is(X, kind), is(X, cold).",
        "description": "If something is kind and cold then it is big."
    },
    {
        "id": 6750,
        "statement": "is(anne, big) :- is(anne, cold), is(anne, kind).",
        "description": "If Anne is cold and Anne is kind then Anne is big."
    },
    {
        "id": 6751,
        "statement": "is(X, cold) :- is(X, green).",
        "description": "If something is green then it is cold."
    },
    {
        "id": 6752,
        "statement": "is(X, green) :- is(X, cold), is(X, blue).",
        "description": "Cold, blue things are green."
    },
    {
        "id": 6753,
        "statement": "is(X, blue) :- is(X, rough), is(X, kind).",
        "description": "Rough, kind things are blue."
    },
    {
        "id": 6754,
        "statement": "is(rabbit, big) :- likes(X, rabbit).",
        "description": "If something likes the rabbit then the rabbit is big."
    },
    {
        "id": 6755,
        "statement": "likes(X, rabbit) :- is(X, rough).",
        "description": "If something is rough then it likes the rabbit."
    },
    {
        "id": 6756,
        "statement": "likes(rabbit, mouse) :- likes(X, rabbit), likes(rabbit, dog).",
        "description": "If something likes the rabbit and the rabbit likes the dog then the rabbit likes the mouse."
    },
    {
        "id": 6757,
        "statement": "likes(mouse, dog) :- likes(X, mouse), needs(X, rabbit).",
        "description": "If something likes the mouse and it needs the rabbit then the mouse likes the dog."
    },
    {
        "id": 6758,
        "statement": "likes(X, mouse) :- is(X, round), needs(X, mouse).",
        "description": "If something is round and it needs the mouse then it likes the mouse."
    },
    {
        "id": 6759,
        "statement": "is(X, rough) :- is(X, big), likes(X, dog).",
        "description": "If something is big and it likes the dog then it is rough."
    },
    {
        "id": 6760,
        "statement": "needs(X, mouse) :- is(X, rough).",
        "description": "If something is rough then it needs the mouse."
    },
    {
        "id": 6761,
        "statement": "is(dog, big) :- eats(X, dog).",
        "description": "If something eats the dog then the dog is big."
    },
    {
        "id": 6762,
        "statement": "is(X, smart) :- is(X, kind), is(X, white).",
        "description": "Kind, white people are smart."
    },
    {
        "id": 6763,
        "statement": "is(erin, nice) :- is(erin, young), is(erin, red).",
        "description": "If Erin is young and Erin is red then Erin is nice."
    },
    {
        "id": 6764,
        "statement": "is(X, white) :- is(X, smart).",
        "description": "Smart people are white."
    },
    {
        "id": 6765,
        "statement": "is(X, red) :- is(X, young), is(X, white).",
        "description": "All young, white people are red."
    },
    {
        "id": 6766,
        "statement": "sees(X, mouse) :- likes(X, mouse).",
        "description": "If something likes the mouse then it sees the mouse."
    },
    {
        "id": 6767,
        "statement": "eats(mouse, bald_eagle) :- sees(dog, mouse), sees(dog, bald_eagle).",
        "description": "If the dog sees the mouse and the dog sees the bald eagle then the mouse eats the bald eagle."
    },
    {
        "id": 6768,
        "statement": "likes(bald_eagle, mouse) :- eats(X, bald_eagle).",
        "description": "If something eats the bald eagle then the bald eagle likes the mouse."
    },
    {
        "id": 6769,
        "statement": "likes(X, mouse) :- eats(X, bald_eagle).",
        "description": "If something eats the bald eagle then it likes the mouse."
    },
    {
        "id": 6770,
        "statement": "sees(X, bald_eagle) :- sees(X, dog), likes(dog, cat).",
        "description": "If something sees the dog and the dog likes the cat then it sees the bald eagle."
    },
    {
        "id": 6771,
        "statement": "is(X, smart) :- is(X, big), is(X, blue).",
        "description": "Big, blue things are smart."
    },
    {
        "id": 6772,
        "statement": "is(X, white) :- is(X, round), is(X, kind).",
        "description": "All round, kind things are white."
    },
    {
        "id": 6773,
        "statement": "is(X, quiet) :- is(X, round), is(X, white).",
        "description": "Round, white things are quiet."
    },
    {
        "id": 6774,
        "statement": "is(erin, big) :- is(erin, kind), is(erin, blue).",
        "description": "If Erin is kind and Erin is blue then Erin is big."
    },
    {
        "id": 6775,
        "statement": "visits(X, squirrel) :- needs(X, lion), eats(lion, cow).",
        "description": "If something needs the lion and the lion eats the cow then it visits the squirrel."
    },
    {
        "id": 6776,
        "statement": "eats(X, rabbit) :- visits(X, squirrel).",
        "description": "If something visits the squirrel then it eats the rabbit."
    },
    {
        "id": 6777,
        "statement": "eats(squirrel, cow) :- visits(X, squirrel), eats(X, rabbit).",
        "description": "If something visits the squirrel and it eats the rabbit then the squirrel eats the cow."
    },
    {
        "id": 6778,
        "statement": "is(X, red) :- visits(X, cow).",
        "description": "If something visits the cow then it is red."
    },
    {
        "id": 6779,
        "statement": "visits(lion, cow) :- eats(squirrel, lion).",
        "description": "If the squirrel eats the lion then the lion visits the cow."
    },
    {
        "id": 6780,
        "statement": "eats(cow, squirrel) :- visits(X, cow).",
        "description": "If something visits the cow then the cow eats the squirrel."
    },
    {
        "id": 6781,
        "statement": "eats(X, lion) :- eats(X, cow).",
        "description": "If something eats the cow then it eats the lion."
    },
    {
        "id": 6782,
        "statement": "eats(X, lion) :- needs(X, cow), is(X, green).",
        "description": "If something needs the cow and it is green then it eats the lion."
    },
    {
        "id": 6783,
        "statement": "visits(X, squirrel) :- needs(X, lion), eats(X, rabbit).",
        "description": "If something needs the lion and it eats the rabbit then it visits the squirrel."
    },
    {
        "id": 6784,
        "statement": "is(X, blue) :- is(X, nice), is(X, kind).",
        "description": "All nice, kind things are blue."
    },
    {
        "id": 6785,
        "statement": "is(X, furry) :- is(X, nice), is(X, blue).",
        "description": "If something is nice and blue then it is furry."
    },
    {
        "id": 6786,
        "statement": "is(X, kind) :- is(X, rough), is(X, big).",
        "description": "If something is rough and big then it is kind."
    },
    {
        "id": 6787,
        "statement": "chases(bald_eagle, squirrel) :- chases(X, dog), not likes(X, bald_eagle).",
        "description": "If something chases the dog and it does not like the bald eagle then the bald eagle chases the squirrel."
    },
    {
        "id": 6788,
        "statement": "eats(X, cat) :- is(X, big).",
        "description": "If something is big then it eats the cat."
    },
    {
        "id": 6789,
        "statement": "chases(cat, bald_eagle) :- eats(bald_eagle, cat).",
        "description": "If the bald eagle eats the cat then the cat chases the bald eagle."
    },
    {
        "id": 6790,
        "statement": "is(dog, blue) :- chases(squirrel, dog), chases(squirrel, bald_eagle).",
        "description": "If the squirrel chases the dog and the squirrel chases the bald eagle then the dog is blue."
    },
    {
        "id": 6791,
        "statement": "likes(X, cat) :- eats(X, cat), chases(cat, bald_eagle).",
        "description": "If something eats the cat and the cat chases the bald eagle then it likes the cat."
    },
    {
        "id": 6792,
        "statement": "is(bald_eagle, young) :- eats(X, bald_eagle).",
        "description": "If something eats the bald eagle then the bald eagle is young."
    },
    {
        "id": 6793,
        "statement": "is(X, smart) :- is(X, furry), is(X, quiet).",
        "description": "If someone is furry and quiet then they are smart."
    },
    {
        "id": 6794,
        "statement": "is(X, round) :- is(X, nice), is(X, quiet).",
        "description": "If something is nice and quiet then it is round."
    },
    {
        "id": 6795,
        "statement": "is(fiona, nice) :- is(fiona, kind).",
        "description": "If Fiona is kind then Fiona is nice."
    },
    {
        "id": 6796,
        "statement": "is(bob, nice) :- is(bob, cold).",
        "description": "If Bob is cold then Bob is nice."
    },
    {
        "id": 6797,
        "statement": "is(charlie, rough) :- is(charlie, young).",
        "description": "If Charlie is young then Charlie is rough."
    },
    {
        "id": 6798,
        "statement": "is(X, big) :- is(X, rough), is(X, blue).",
        "description": "Rough, blue people are big."
    },
    {
        "id": 6799,
        "statement": "is(X, kind) :- is(X, blue), is(X, nice).",
        "description": "All blue, nice people are kind."
    },
    {
        "id": 6800,
        "statement": "is(X, blue) :- is(X, round).",
        "description": "All round people are blue."
    },
    {
        "id": 6801,
        "statement": "is(X, red) :- is(X, white).",
        "description": "White people are red."
    },
    {
        "id": 6802,
        "statement": "is(X, big) :- is(X, red), is(X, white).",
        "description": "If someone is red and white then they are big."
    },
    {
        "id": 6803,
        "statement": "is(X, cold) :- is(X, quiet), is(X, big).",
        "description": "If someone is quiet and big then they are cold."
    },
    {
        "id": 6804,
        "statement": "is(dave, white) :- is(dave, quiet).",
        "description": "If Dave is quiet then Dave is white."
    },
    {
        "id": 6805,
        "statement": "is(X, cold) :- is(X, red), is(X, nice).",
        "description": "If someone is red and nice then they are cold."
    },
    {
        "id": 6806,
        "statement": "is(X, rough) :- is(X, quiet), is(X, red).",
        "description": "All quiet, red people are rough."
    },
    {
        "id": 6807,
        "statement": "likes(X, bear) :- sees(X, cow), is(cow, kind).",
        "description": "If something sees the cow and the cow is kind then it likes the bear."
    },
    {
        "id": 6808,
        "statement": "sees(X, bald_eagle) :- is(X, red).",
        "description": "If something is red then it sees the bald eagle."
    },
    {
        "id": 6809,
        "statement": "sees(bald_eagle, lion) :- sees(X, bear), likes(bear, bald_eagle).",
        "description": "If something sees the bear and the bear likes the bald eagle then the bald eagle sees the lion."
    },
    {
        "id": 6810,
        "statement": "sees(X, lion) :- sees(X, bald_eagle), is(X, round).",
        "description": "If something sees the bald eagle and it is round then it sees the lion."
    },
    {
        "id": 6811,
        "statement": "needs(X, lion) :- likes(X, bear), is(bear, kind).",
        "description": "If something likes the bear and the bear is kind then it needs the lion."
    },
    {
        "id": 6812,
        "statement": "sees(X, cow) :- sees(X, lion).",
        "description": "If something sees the lion then it sees the cow."
    },
    {
        "id": 6813,
        "statement": "likes(X, bald_eagle) :- likes(X, bear), is(X, round).",
        "description": "If something likes the bear and it is round then it likes the bald eagle."
    },
    {
        "id": 6814,
        "statement": "is(X, red) :- needs(X, cow), likes(X, bald_eagle).",
        "description": "If something needs the cow and it likes the bald eagle then it is red."
    },
    {
        "id": 6815,
        "statement": "is(X, kind) :- sees(X, dog).",
        "description": "If someone sees the dog then they are kind."
    },
    {
        "id": 6816,
        "statement": "sees(lion, dog) :- is(X, rough), not likes(X, lion).",
        "description": "If someone is rough and they do not like the lion then the lion sees the dog."
    },
    {
        "id": 6817,
        "statement": "sees(lion, dog) :- is(X, round), sees(X, lion).",
        "description": "If someone is round and they see the lion then the lion sees the dog."
    },
    {
        "id": 6818,
        "statement": "likes(dog, bald_eagle) :- likes(X, dog).",
        "description": "If someone likes the dog then the dog likes the bald eagle."
    },
    {
        "id": 6819,
        "statement": "needs(bald_eagle, lion) :- needs(lion, bald_eagle), is(lion, cold).",
        "description": "If the lion needs the bald eagle and the lion is cold then the bald eagle needs the lion."
    },
    {
        "id": 6820,
        "statement": "needs(dog, lion) :- likes(X, dog), not is(X, blue).",
        "description": "If someone likes the dog and they are not blue then the dog needs the lion."
    },
    {
        "id": 6821,
        "statement": "sees(X, bald_eagle) :- needs(X, dog), is(X, rough).",
        "description": "If someone needs the dog and they are rough then they see the bald eagle."
    },
    {
        "id": 6822,
        "statement": "likes(bear, dog) :- needs(X, bear).",
        "description": "If someone needs the bear then the bear likes the dog."
    },
    {
        "id": 6823,
        "statement": "is(X, smart) :- is(X, quiet), is(X, green).",
        "description": "Quiet, green things are smart."
    },
    {
        "id": 6824,
        "statement": "is(X, big) :- is(X, quiet), is(X, white).",
        "description": "All quiet, white things are big."
    },
    {
        "id": 6825,
        "statement": "is(cow, kind) :- is(X, young), likes(X, cow).",
        "description": "If someone is young and they like the cow then the cow is kind."
    },
    {
        "id": 6826,
        "statement": "likes(bald_eagle, dog) :- needs(X, bald_eagle), is(bald_eagle, green).",
        "description": "If someone needs the bald eagle and the bald eagle is green then the bald eagle likes the dog."
    },
    {
        "id": 6827,
        "statement": "likes(X, cow) :- is(X, kind).",
        "description": "If someone is kind then they like the cow."
    },
    {
        "id": 6828,
        "statement": "sees(X, cow) :- is(X, rough), is(X, green).",
        "description": "If someone is rough and green then they see the cow."
    },
    {
        "id": 6829,
        "statement": "is(bald_eagle, kind) :- likes(X, bald_eagle).",
        "description": "If someone likes the bald eagle then the bald eagle is kind."
    },
    {
        "id": 6830,
        "statement": "is(X, cold) :- likes(X, tiger), likes(X, cow).",
        "description": "If someone likes the tiger and they like the cow then they are cold."
    },
    {
        "id": 6831,
        "statement": "needs(tiger, cow) :- likes(X, tiger).",
        "description": "If someone likes the tiger then the tiger needs the cow."
    },
    {
        "id": 6832,
        "statement": "needs(cow, dog) :- is(cow, green).",
        "description": "If the cow is green then the cow needs the dog."
    },
    {
        "id": 6833,
        "statement": "likes(mouse, tiger) :- needs(X, tiger), needs(X, mouse).",
        "description": "If something needs the tiger and it needs the mouse then the mouse likes the tiger."
    },
    {
        "id": 6834,
        "statement": "chases(X, mouse) :- is(X, kind).",
        "description": "If something is kind then it chases the mouse."
    },
    {
        "id": 6835,
        "statement": "chases(tiger, rabbit) :- chases(mouse, tiger), not needs(bald_eagle, mouse).",
        "description": "If the mouse chases the tiger and the bald eagle does not need the mouse then the tiger chases the rabbit."
    },
    {
        "id": 6836,
        "statement": "chases(X, bald_eagle) :- likes(X, bald_eagle).",
        "description": "If something likes the bald eagle then it chases the bald eagle."
    },
    {
        "id": 6837,
        "statement": "is(mouse, round) :- needs(X, bald_eagle), chases(bald_eagle, mouse).",
        "description": "If something needs the bald eagle and the bald eagle chases the mouse then the mouse is round."
    },
    {
        "id": 6838,
        "statement": "is(X, kind) :- chases(X, bald_eagle).",
        "description": "If something chases the bald eagle then it is kind."
    },
    {
        "id": 6839,
        "statement": "needs(mouse, bald_eagle) :- needs(X, mouse).",
        "description": "If someone needs the mouse then the mouse needs the bald eagle."
    },
    {
        "id": 6840,
        "statement": "sees(X, mouse) :- visits(X, cat).",
        "description": "If someone visits the cat then they see the mouse."
    },
    {
        "id": 6841,
        "statement": "visits(bald_eagle, lion) :- needs(X, bald_eagle).",
        "description": "If someone needs the bald eagle then the bald eagle visits the lion."
    },
    {
        "id": 6842,
        "statement": "sees(X, cat) :- sees(X, lion).",
        "description": "If someone sees the lion then they see the cat."
    },
    {
        "id": 6843,
        "statement": "is(mouse, red) :- sees(X, mouse), is(X, kind).",
        "description": "If someone sees the mouse and they are kind then the mouse is red."
    },
    {
        "id": 6844,
        "statement": "visits(X, cat) :- is(X, red).",
        "description": "If someone is red then they visit the cat."
    },
    {
        "id": 6845,
        "statement": "is(lion, red) :- visits(X, lion), sees(X, cat).",
        "description": "If someone visits the lion and they see the cat then the lion is red."
    },
    {
        "id": 6846,
        "statement": "needs(cat, mouse) :- sees(X, cat), not visits(cat, bald_eagle).",
        "description": "If someone sees the cat and the cat does not visit the bald eagle then the cat needs the mouse."
    },
    {
        "id": 6847,
        "statement": "likes(X, mouse) :- likes(X, tiger).",
        "description": "If someone likes the tiger then they like the mouse."
    },
    {
        "id": 6848,
        "statement": "is(mouse, nice) :- likes(X, mouse).",
        "description": "If someone likes the mouse then the mouse is nice."
    },
    {
        "id": 6849,
        "statement": "likes(X, tiger) :- likes(X, squirrel).",
        "description": "If someone likes the squirrel then they like the tiger."
    },
    {
        "id": 6850,
        "statement": "is(squirrel, kind) :- visits(X, squirrel), visits(X, mouse).",
        "description": "If someone visits the squirrel and they visit the mouse then the squirrel is kind."
    },
    {
        "id": 6851,
        "statement": "likes(tiger, mouse) :- visits(X, tiger).",
        "description": "If someone visits the tiger then the tiger likes the mouse."
    },
    {
        "id": 6852,
        "statement": "visits(X, tiger) :- is(X, nice).",
        "description": "If someone is nice then they visit the tiger."
    },
    {
        "id": 6853,
        "statement": "is(X, red) :- is(X, young), is(X, smart).",
        "description": "Young, smart things are red."
    },
    {
        "id": 6854,
        "statement": "is(fiona, big) :- is(fiona, round).",
        "description": "If Fiona is round then Fiona is big."
    },
    {
        "id": 6855,
        "statement": "is(X, quiet) :- is(X, big), is(X, round).",
        "description": "If something is big and round then it is quiet."
    },
    {
        "id": 6856,
        "statement": "is(X, white) :- is(X, big), is(X, smart).",
        "description": "Big, smart things are white."
    },
    {
        "id": 6857,
        "statement": "is(dave, young) :- is(dave, white).",
        "description": "If Dave is white then Dave is young."
    },
    {
        "id": 6858,
        "statement": "is(fiona, young) :- is(fiona, red), is(fiona, white).",
        "description": "If Fiona is red and Fiona is white then Fiona is young."
    },
    {
        "id": 6859,
        "statement": "is(X, smart) :- is(X, quiet), is(X, big).",
        "description": "Quiet, big things are smart."
    },
    {
        "id": 6860,
        "statement": "is(X, rough) :- is(X, smart), is(X, young).",
        "description": "Smart, young things are rough."
    },
    {
        "id": 6861,
        "statement": "is(dave, young) :- is(dave, nice), is(dave, big).",
        "description": "If Dave is nice and Dave is big then Dave is young."
    },
    {
        "id": 6862,
        "statement": "is(erin, smart) :- is(erin, blue), is(erin, cold).",
        "description": "If Erin is blue and Erin is cold then Erin is smart."
    },
    {
        "id": 6863,
        "statement": "is(X, smart) :- is(X, rough), is(X, blue).",
        "description": "Rough, blue things are smart."
    },
    {
        "id": 6864,
        "statement": "is(X, blue) :- is(X, big), is(X, cold).",
        "description": "If something is big and cold then it is blue."
    },
    {
        "id": 6865,
        "statement": "is(X, rough) :- is(X, nice), is(X, young).",
        "description": "Nice, young things are rough."
    },
    {
        "id": 6866,
        "statement": "is(X, kind) :- is(X, green), is(X, rough).",
        "description": "Green, rough people are kind."
    },
    {
        "id": 6867,
        "statement": "is(X, round) :- is(X, red), is(X, big).",
        "description": "If someone is red and big then they are round."
    },
    {
        "id": 6868,
        "statement": "is(X, green) :- is(X, rough), is(X, red).",
        "description": "All rough, red people are green."
    },
    {
        "id": 6869,
        "statement": "is(harry, rough) :- is(harry, red), is(harry, round).",
        "description": "If Harry is red and Harry is round then Harry is rough."
    },
    {
        "id": 6870,
        "statement": "is(dave, rough) :- is(dave, big), is(dave, nice).",
        "description": "If Dave is big and Dave is nice then Dave is rough."
    },
    {
        "id": 6871,
        "statement": "is(X, red) :- is(X, nice).",
        "description": "If someone is nice then they are red."
    },
    {
        "id": 6872,
        "statement": "is(X, blue) :- is(X, rough), is(X, nice).",
        "description": "If something is rough and nice then it is blue."
    },
    {
        "id": 6873,
        "statement": "is(charlie, smart) :- is(charlie, green).",
        "description": "If Charlie is green then Charlie is smart."
    },
    {
        "id": 6874,
        "statement": "is(X, kind) :- is(X, blue), is(X, green).",
        "description": "All blue, green things are kind."
    },
    {
        "id": 6875,
        "statement": "is(X, nice) :- is(X, green), is(X, kind).",
        "description": "All green, kind things are nice."
    },
    {
        "id": 6876,
        "statement": "is(gary, smart) :- is(gary, red).",
        "description": "If Gary is red then Gary is smart."
    },
    {
        "id": 6877,
        "statement": "is(X, rough) :- is(X, red), is(X, smart).",
        "description": "If something is red and smart then it is rough."
    },
    {
        "id": 6878,
        "statement": "is(X, blue) :- is(X, kind), is(X, rough).",
        "description": "All kind, rough things are blue."
    },
    {
        "id": 6879,
        "statement": "is(X, quiet) :- is(X, young), is(X, kind).",
        "description": "Young, kind things are quiet."
    },
    {
        "id": 6880,
        "statement": "is(dave, cold) :- is(dave, kind), is(dave, young).",
        "description": "If Dave is kind and Dave is young then Dave is cold."
    },
    {
        "id": 6881,
        "statement": "is(fiona, green) :- is(fiona, round), is(fiona, kind).",
        "description": "If Fiona is round and Fiona is kind then Fiona is green."
    },
    {
        "id": 6882,
        "statement": "is(X, big) :- is(X, green), is(X, young).",
        "description": "Green, young things are big."
    },
    {
        "id": 6883,
        "statement": "is(X, big) :- is(X, young), not is(X, kind).",
        "description": "If something is young and not kind then it is big."
    },
    {
        "id": 6884,
        "statement": "is(erin, kind) :- is(erin, red), is(erin, big).",
        "description": "If Erin is red and Erin is big then Erin is kind."
    },
    {
        "id": 6885,
        "statement": "is(X, quiet) :- is(X, kind), is(X, nice).",
        "description": "If something is kind and nice then it is quiet."
    },
    {
        "id": 6886,
        "statement": "is(X, kind) :- is(X, white), is(X, nice).",
        "description": "All white, nice things are kind."
    },
    {
        "id": 6887,
        "statement": "is(X, red) :- is(X, kind), is(X, quiet).",
        "description": "Kind, quiet things are red."
    },
    {
        "id": 6888,
        "statement": "is(X, rough) :- is(X, big).",
        "description": "If something is big then it is rough."
    },
    {
        "id": 6889,
        "statement": "is(X, nice) :- is(X, rough).",
        "description": "Rough things are nice."
    },
    {
        "id": 6890,
        "statement": "is(X, big) :- is(X, red), is(X, rough).",
        "description": "Red, rough things are big."
    },
    {
        "id": 6891,
        "statement": "is(harry, smart) :- is(harry, red), is(harry, quiet).",
        "description": "If Harry is red and Harry is quiet then Harry is smart."
    },
    {
        "id": 6892,
        "statement": "is(X, kind) :- is(X, green), is(X, smart).",
        "description": "If something is green and smart then it is kind."
    },
    {
        "id": 6893,
        "statement": "is(X, smart) :- is(X, big), is(X, quiet).",
        "description": "If something is big and quiet then it is smart."
    },
    {
        "id": 6894,
        "statement": "is(dave, kind) :- is(dave, smart), is(dave, red).",
        "description": "If Dave is smart and Dave is red then Dave is kind."
    },
    {
        "id": 6895,
        "statement": "needs(X, lion) :- eats(X, tiger).",
        "description": "If something eats the tiger then it needs the lion."
    },
    {
        "id": 6896,
        "statement": "eats(X, dog) :- is(X, cold), is(X, big).",
        "description": "If something is cold and big then it eats the dog."
    },
    {
        "id": 6897,
        "statement": "sees(X, dog) :- needs(X, mouse).",
        "description": "If something needs the mouse then it sees the dog."
    },
    {
        "id": 6898,
        "statement": "is(X, kind) :- needs(X, tiger), sees(tiger, mouse).",
        "description": "If something needs the tiger and the tiger sees the mouse then it is kind."
    },
    {
        "id": 6899,
        "statement": "sees(dog, mouse) :- sees(X, dog).",
        "description": "If something sees the dog then the dog sees the mouse."
    },
    {
        "id": 6900,
        "statement": "needs(lion, tiger) :- sees(X, lion), sees(X, tiger).",
        "description": "If something sees the lion and it sees the tiger then the lion needs the tiger."
    },
    {
        "id": 6901,
        "statement": "is(X, kind) :- is(X, green), is(X, red).",
        "description": "All green, red people are kind."
    },
    {
        "id": 6902,
        "statement": "eats(X, bald_eagle) :- chases(X, squirrel), likes(squirrel, dog).",
        "description": "If someone chases the squirrel and the squirrel likes the dog then they eat the bald eagle."
    },
    {
        "id": 6903,
        "statement": "chases(tiger, squirrel) :- is(tiger, red).",
        "description": "If the tiger is red then the tiger chases the squirrel."
    },
    {
        "id": 6904,
        "statement": "likes(tiger, bald_eagle) :- eats(bald_eagle, tiger), chases(tiger, squirrel).",
        "description": "If the bald eagle eats the tiger and the tiger chases the squirrel then the tiger likes the bald eagle."
    },
    {
        "id": 6905,
        "statement": "likes(bald_eagle, squirrel) :- chases(X, squirrel), eats(squirrel, bald_eagle).",
        "description": "If someone chases the squirrel and the squirrel eats the bald eagle then the bald eagle likes the squirrel."
    },
    {
        "id": 6906,
        "statement": "is(dog, kind) :- likes(X, dog), eats(X, dog).",
        "description": "If someone likes the dog and they eat the dog then the dog is kind."
    },
    {
        "id": 6907,
        "statement": "likes(X, dog) :- is(X, round).",
        "description": "If someone is round then they like the dog."
    },
    {
        "id": 6908,
        "statement": "is(X, round) :- eats(X, bald_eagle).",
        "description": "If someone eats the bald eagle then they are round."
    },
    {
        "id": 6909,
        "statement": "is(harry, nice) :- is(harry, furry), is(harry, rough).",
        "description": "If Harry is furry and Harry is rough then Harry is nice."
    },
    {
        "id": 6910,
        "statement": "is(anne, white) :- is(anne, nice), is(anne, furry).",
        "description": "If Anne is nice and Anne is furry then Anne is white."
    },
    {
        "id": 6911,
        "statement": "visits(bald_eagle, bear) :- likes(X, bald_eagle).",
        "description": "If someone likes the bald eagle then the bald eagle visits the bear."
    },
    {
        "id": 6912,
        "statement": "is(X, red) :- is(X, blue), eats(X, bald_eagle).",
        "description": "If someone is blue and they eat the bald eagle then they are red."
    },
    {
        "id": 6913,
        "statement": "is(bear, blue) :- visits(X, bear), likes(X, bear).",
        "description": "If someone visits the bear and they like the bear then the bear is blue."
    },
    {
        "id": 6914,
        "statement": "visits(squirrel, bear) :- visits(X, bear), visits(X, squirrel).",
        "description": "If someone visits the bear and they visit the squirrel then the squirrel visits the bear."
    },
    {
        "id": 6915,
        "statement": "is(cat, big) :- visits(X, cat).",
        "description": "If someone visits the cat then the cat is big."
    },
    {
        "id": 6916,
        "statement": "is(cat, big) :- is(X, big), eats(X, cat).",
        "description": "If someone is big and they eat the cat then the cat is big."
    },
    {
        "id": 6917,
        "statement": "sees(bear, squirrel) :- is(bear, red).",
        "description": "If the bear is red then the bear sees the squirrel."
    },
    {
        "id": 6918,
        "statement": "sees(squirrel, lion) :- needs(X, squirrel), is(squirrel, round).",
        "description": "If someone needs the squirrel and the squirrel is round then the squirrel sees the lion."
    },
    {
        "id": 6919,
        "statement": "is(X, blue) :- sees(X, bear), sees(X, squirrel).",
        "description": "If someone sees the bear and they see the squirrel then they are blue."
    },
    {
        "id": 6920,
        "statement": "is(X, round) :- needs(X, bear), sees(X, squirrel).",
        "description": "If someone needs the bear and they see the squirrel then they are round."
    },
    {
        "id": 6921,
        "statement": "likes(cat, bear) :- is(X, blue), needs(X, cat).",
        "description": "If someone is blue and they need the cat then the cat likes the bear."
    },
    {
        "id": 6922,
        "statement": "needs(bear, squirrel) :- likes(squirrel, bear), is(squirrel, cold).",
        "description": "If the squirrel likes the bear and the squirrel is cold then the bear needs the squirrel."
    },
    {
        "id": 6923,
        "statement": "needs(X, bear) :- likes(X, bear), needs(bear, squirrel).",
        "description": "If someone likes the bear and the bear needs the squirrel then they need the bear."
    },
    {
        "id": 6924,
        "statement": "is(bear, blue) :- needs(X, squirrel), needs(squirrel, bear).",
        "description": "If someone needs the squirrel and the squirrel needs the bear then the bear is blue."
    },
    {
        "id": 6925,
        "statement": "is(X, cold) :- needs(X, bear).",
        "description": "If someone needs the bear then they are cold."
    },
    {
        "id": 6926,
        "statement": "is(bob, smart) :- is(bob, red).",
        "description": "If Bob is red then Bob is smart."
    },
    {
        "id": 6927,
        "statement": "is(X, rough) :- is(X, green), is(X, red).",
        "description": "All green, red things are rough."
    },
    {
        "id": 6928,
        "statement": "is(X, green) :- is(X, white), is(X, blue).",
        "description": "All white, blue things are green."
    },
    {
        "id": 6929,
        "statement": "is(X, red) :- is(X, smart).",
        "description": "If something is smart then it is red."
    },
    {
        "id": 6930,
        "statement": "is(X, cold) :- is(X, red), is(X, green).",
        "description": "If something is red and green then it is cold."
    },
    {
        "id": 6931,
        "statement": "is(gary, red) :- is(gary, smart).",
        "description": "If Gary is smart then Gary is red."
    },
    {
        "id": 6932,
        "statement": "is(X, smart) :- is(X, kind), is(X, red).",
        "description": "All kind, red things are smart."
    },
    {
        "id": 6933,
        "statement": "is(X, blue) :- is(X, quiet).",
        "description": "Quiet people are blue."
    },
    {
        "id": 6934,
        "statement": "is(X, furry) :- is(X, blue), is(X, round).",
        "description": "If someone is blue and round then they are furry."
    },
    {
        "id": 6935,
        "statement": "is(bob, blue) :- is(bob, red), is(bob, furry).",
        "description": "If Bob is red and Bob is furry then Bob is blue."
    },
    {
        "id": 6936,
        "statement": "is(harry, cold) :- is(harry, white).",
        "description": "If Harry is white then Harry is cold."
    },
    {
        "id": 6937,
        "statement": "is(X, cold) :- is(X, rough), is(X, white).",
        "description": "If something is rough and white then it is cold."
    },
    {
        "id": 6938,
        "statement": "is(X, white) :- is(X, quiet).",
        "description": "Quiet things are white."
    },
    {
        "id": 6939,
        "statement": "is(X, furry) :- is(X, cold), is(X, quiet).",
        "description": "Cold, quiet things are furry."
    },
    {
        "id": 6940,
        "statement": "is(X, round) :- is(X, white).",
        "description": "All white things are round."
    },
    {
        "id": 6941,
        "statement": "is(X, round) :- is(X, white), is(X, furry).",
        "description": "White, furry things are round."
    },
    {
        "id": 6942,
        "statement": "visits(cow, squirrel) :- visits(X, tiger), not likes(X, cow).",
        "description": "If something visits the tiger and it does not like the cow then the cow visits the squirrel."
    },
    {
        "id": 6943,
        "statement": "is(tiger, young) :- sees(X, tiger).",
        "description": "If something sees the tiger then the tiger is young."
    },
    {
        "id": 6944,
        "statement": "visits(X, cat) :- is(X, young).",
        "description": "If something is young then it visits the cat."
    },
    {
        "id": 6945,
        "statement": "is(cat, green) :- sees(X, cat).",
        "description": "If something sees the cat then the cat is green."
    },
    {
        "id": 6946,
        "statement": "is(X, green) :- sees(X, cow).",
        "description": "If something sees the cow then it is green."
    },
    {
        "id": 6947,
        "statement": "is(X, young) :- likes(X, cat), not is(X, round).",
        "description": "If something likes the cat and it is not round then it is young."
    },
    {
        "id": 6948,
        "statement": "is(X, big) :- is(X, young), visits(X, cat).",
        "description": "If something is young and it visits the cat then it is big."
    },
    {
        "id": 6949,
        "statement": "is(cat, young) :- is(X, big), likes(X, cat).",
        "description": "If something is big and it likes the cat then the cat is young."
    },
    {
        "id": 6950,
        "statement": "likes(cow, tiger) :- likes(X, cow).",
        "description": "If something likes the cow then the cow likes the tiger."
    },
    {
        "id": 6951,
        "statement": "likes(mouse, tiger) :- is(X, young), visits(X, mouse).",
        "description": "If someone is young and they visit the mouse then the mouse likes the tiger."
    },
    {
        "id": 6952,
        "statement": "needs(lion, mouse) :- is(X, young), visits(X, lion).",
        "description": "If someone is young and they visit the lion then the lion needs the mouse."
    },
    {
        "id": 6953,
        "statement": "needs(X, tiger) :- is(X, young).",
        "description": "If someone is young then they need the tiger."
    },
    {
        "id": 6954,
        "statement": "is(tiger, kind) :- is(X, blue), visits(X, tiger).",
        "description": "If someone is blue and they visit the tiger then the tiger is kind."
    },
    {
        "id": 6955,
        "statement": "is(X, young) :- is(X, kind), visits(X, mouse).",
        "description": "If someone is kind and they visit the mouse then they are young."
    },
    {
        "id": 6956,
        "statement": "likes(X, cow) :- needs(X, lion).",
        "description": "If someone needs the lion then they like the cow."
    },
    {
        "id": 6957,
        "statement": "needs(mouse, cow) :- is(mouse, red), likes(mouse, lion).",
        "description": "If the mouse is red and the mouse likes the lion then the mouse needs the cow."
    },
    {
        "id": 6958,
        "statement": "is(mouse, red) :- needs(cow, mouse), is(cow, young).",
        "description": "If the cow needs the mouse and the cow is young then the mouse is red."
    },
    {
        "id": 6959,
        "statement": "visits(X, tiger) :- needs(X, tiger), visits(tiger, mouse).",
        "description": "If someone needs the tiger and the tiger visits the mouse then they visit the tiger."
    },
    {
        "id": 6960,
        "statement": "visits(X, cat) :- is(X, kind).",
        "description": "If someone is kind then they visit the cat."
    },
    {
        "id": 6961,
        "statement": "visits(X, bear) :- sees(X, dog), sees(dog, cat).",
        "description": "If someone sees the dog and the dog sees the cat then they visit the bear."
    },
    {
        "id": 6962,
        "statement": "chases(cat, mouse) :- visits(bear, cat), is(bear, red).",
        "description": "If the bear visits the cat and the bear is red then the cat chases the mouse."
    },
    {
        "id": 6963,
        "statement": "is(dog, big) :- sees(X, bear), sees(X, dog).",
        "description": "If someone sees the bear and they see the dog then the dog is big."
    },
    {
        "id": 6964,
        "statement": "visits(mouse, cat) :- visits(X, mouse).",
        "description": "If someone visits the mouse then the mouse visits the cat."
    },
    {
        "id": 6965,
        "statement": "visits(X, bear) :- is(X, rough).",
        "description": "If someone is rough then they visit the bear."
    },
    {
        "id": 6966,
        "statement": "sees(X, cat) :- sees(X, mouse), visits(X, mouse).",
        "description": "If someone sees the mouse and they visit the mouse then they see the cat."
    },
    {
        "id": 6967,
        "statement": "sees(mouse, dog) :- chases(X, mouse).",
        "description": "If someone chases the mouse then the mouse sees the dog."
    },
    {
        "id": 6968,
        "statement": "sees(X, mouse) :- visits(X, bear).",
        "description": "If someone visits the bear then they see the mouse."
    },
    {
        "id": 6969,
        "statement": "is(fiona, blue) :- is(fiona, green).",
        "description": "If Fiona is green then Fiona is blue."
    },
    {
        "id": 6970,
        "statement": "is(X, round) :- is(X, cold).",
        "description": "If someone is cold then they are round."
    },
    {
        "id": 6971,
        "statement": "is(X, cold) :- is(X, young), is(X, blue).",
        "description": "All young, blue people are cold."
    },
    {
        "id": 6972,
        "statement": "is(X, young) :- is(X, blue), is(X, quiet).",
        "description": "Blue, quiet people are young."
    },
    {
        "id": 6973,
        "statement": "is(X, rough) :- is(X, young), is(X, quiet).",
        "description": "If someone is young and quiet then they are rough."
    },
    {
        "id": 6974,
        "statement": "is(X, quiet) :- is(X, white), is(X, rough).",
        "description": "White, rough people are quiet."
    },
    {
        "id": 6975,
        "statement": "is(X, rough) :- is(X, young), is(X, nice).",
        "description": "Young, nice people are rough."
    },
    {
        "id": 6976,
        "statement": "is(X, quiet) :- is(X, rough).",
        "description": "Rough people are quiet."
    },
    {
        "id": 6977,
        "statement": "is(charlie, round) :- is(charlie, young), is(charlie, quiet).",
        "description": "If Charlie is young and Charlie is quiet then Charlie is round."
    },
    {
        "id": 6978,
        "statement": "is(erin, young) :- is(erin, blue), is(erin, white).",
        "description": "If Erin is blue and Erin is white then Erin is young."
    },
    {
        "id": 6979,
        "statement": "is(X, nice) :- is(X, blue), is(X, big).",
        "description": "All blue, big people are nice."
    },
    {
        "id": 6980,
        "statement": "is(X, big) :- is(X, round), is(X, blue).",
        "description": "Round, blue people are big."
    },
    {
        "id": 6981,
        "statement": "sees(X, squirrel) :- is(X, green).",
        "description": "If something is green then it sees the squirrel."
    },
    {
        "id": 6982,
        "statement": "is(rabbit, green) :- likes(rabbit, squirrel), not is(rabbit, big).",
        "description": "If the rabbit likes the squirrel and the rabbit is not big then the rabbit is green."
    },
    {
        "id": 6983,
        "statement": "is(squirrel, blue) :- not is(squirrel, young).",
        "description": "If the squirrel is not young then the squirrel is blue."
    },
    {
        "id": 6984,
        "statement": "needs(tiger, rabbit) :- sees(X, tiger).",
        "description": "If something sees the tiger then the tiger needs the rabbit."
    },
    {
        "id": 6985,
        "statement": "likes(X, squirrel) :- is(X, blue).",
        "description": "If something is blue then it likes the squirrel."
    },
    {
        "id": 6986,
        "statement": "needs(X, squirrel) :- sees(X, squirrel).",
        "description": "If something sees the squirrel then it needs the squirrel."
    },
    {
        "id": 6987,
        "statement": "is(X, round) :- is(X, furry).",
        "description": "Furry people are round."
    },
    {
        "id": 6988,
        "statement": "is(X, nice) :- is(X, round), is(X, young).",
        "description": "All round, young people are nice."
    },
    {
        "id": 6989,
        "statement": "is(X, blue) :- is(X, quiet), is(X, round).",
        "description": "All quiet, round people are blue."
    },
    {
        "id": 6990,
        "statement": "is(X, young) :- is(X, red), is(X, nice).",
        "description": "Red, nice people are young."
    },
    {
        "id": 6991,
        "statement": "is(X, nice) :- is(X, furry), is(X, round).",
        "description": "Furry, round people are nice."
    },
    {
        "id": 6992,
        "statement": "is(X, quiet) :- is(X, young), is(X, nice).",
        "description": "If someone is young and nice then they are quiet."
    },
    {
        "id": 6993,
        "statement": "is(anne, red) :- is(anne, blue), is(anne, nice).",
        "description": "If Anne is blue and Anne is nice then Anne is red."
    },
    {
        "id": 6994,
        "statement": "is(X, quiet) :- is(X, nice), is(X, big).",
        "description": "Nice, big people are quiet."
    },
    {
        "id": 6995,
        "statement": "is(X, big) :- is(X, white), is(X, quiet).",
        "description": "If someone is white and quiet then they are big."
    },
    {
        "id": 6996,
        "statement": "is(X, nice) :- is(X, big), is(X, round).",
        "description": "If someone is big and round then they are nice."
    },
    {
        "id": 6997,
        "statement": "is(X, nice) :- is(X, quiet).",
        "description": "All quiet people are nice."
    },
    {
        "id": 6998,
        "statement": "likes(rabbit, cow) :- sees(X, squirrel), needs(X, rabbit).",
        "description": "If something sees the squirrel and it needs the rabbit then the rabbit likes the cow."
    },
    {
        "id": 6999,
        "statement": "is(X, red) :- is(X, nice), is(X, round).",
        "description": "If something is nice and round then it is red."
    },
    {
        "id": 7000,
        "statement": "needs(X, cow) :- sees(X, squirrel), needs(squirrel, lion).",
        "description": "If something sees the squirrel and the squirrel needs the lion then it needs the cow."
    },
    {
        "id": 7001,
        "statement": "sees(X, squirrel) :- likes(X, cow), is(cow, red).",
        "description": "If something likes the cow and the cow is red then it sees the squirrel."
    },
    {
        "id": 7002,
        "statement": "likes(X, cow) :- is(X, round).",
        "description": "If something is round then it likes the cow."
    },
    {
        "id": 7003,
        "statement": "is(X, kind) :- sees(X, cow).",
        "description": "If something sees the cow then it is kind."
    },
    {
        "id": 7004,
        "statement": "likes(lion, cow) :- is(lion, kind).",
        "description": "If the lion is kind then the lion likes the cow."
    },
    {
        "id": 7005,
        "statement": "is(X, nice) :- likes(X, cow).",
        "description": "If something likes the cow then it is nice."
    },
    {
        "id": 7006,
        "statement": "needs(cow, tiger) :- eats(X, dog), needs(X, cow).",
        "description": "If someone eats the dog and they need the cow then the cow needs the tiger."
    },
    {
        "id": 7007,
        "statement": "needs(X, squirrel) :- is(X, green), eats(X, dog).",
        "description": "If someone is green and they eat the dog then they need the squirrel."
    },
    {
        "id": 7008,
        "statement": "is(X, round) :- eats(X, tiger), is(X, green).",
        "description": "If someone eats the tiger and they are green then they are round."
    },
    {
        "id": 7009,
        "statement": "eats(X, dog) :- chases(X, cow).",
        "description": "If someone chases the cow then they eat the dog."
    },
    {
        "id": 7010,
        "statement": "is(X, green) :- chases(X, cow), chases(X, dog).",
        "description": "If someone chases the cow and they chase the dog then they are green."
    },
    {
        "id": 7011,
        "statement": "is(squirrel, kind) :- needs(X, tiger), chases(tiger, squirrel).",
        "description": "If someone needs the tiger and the tiger chases the squirrel then the squirrel is kind."
    },
    {
        "id": 7012,
        "statement": "is(gary, quiet) :- is(gary, round).",
        "description": "If Gary is round then Gary is quiet."
    },
    {
        "id": 7013,
        "statement": "is(X, cold) :- is(X, round), is(X, smart).",
        "description": "All round, smart people are cold."
    },
    {
        "id": 7014,
        "statement": "is(X, quiet) :- is(X, smart), is(X, young).",
        "description": "If someone is smart and young then they are quiet."
    },
    {
        "id": 7015,
        "statement": "is(X, rough) :- is(X, quiet), not is(X, young).",
        "description": "If someone is quiet and not young then they are rough."
    },
    {
        "id": 7016,
        "statement": "is(X, rough) :- is(X, quiet).",
        "description": "If someone is quiet then they are rough."
    },
    {
        "id": 7017,
        "statement": "is(dave, blue) :- is(dave, young), is(dave, rough).",
        "description": "If Dave is young and Dave is rough then Dave is blue."
    },
    {
        "id": 7018,
        "statement": "is(X, cold) :- is(X, red), is(X, young).",
        "description": "Red, young people are cold."
    },
    {
        "id": 7019,
        "statement": "is(X, white) :- is(X, red).",
        "description": "Red people are white."
    },
    {
        "id": 7020,
        "statement": "is(X, green) :- is(X, white).",
        "description": "White people are green."
    },
    {
        "id": 7021,
        "statement": "is(X, round) :- is(X, green), is(X, kind).",
        "description": "All green, kind people are round."
    },
    {
        "id": 7022,
        "statement": "is(X, young) :- is(X, cold), is(X, red).",
        "description": "If someone is cold and red then they are young."
    },
    {
        "id": 7023,
        "statement": "is(gary, nice) :- is(gary, cold), is(gary, furry).",
        "description": "If Gary is cold and Gary is furry then Gary is nice."
    },
    {
        "id": 7024,
        "statement": "is(X, furry) :- is(X, quiet), is(X, nice).",
        "description": "Quiet, nice people are furry."
    },
    {
        "id": 7025,
        "statement": "is(X, quiet) :- is(X, young), is(X, cold).",
        "description": "Young, cold people are quiet."
    },
    {
        "id": 7026,
        "statement": "is(charlie, quiet) :- is(charlie, furry), is(charlie, cold).",
        "description": "If Charlie is furry and Charlie is cold then Charlie is quiet."
    },
    {
        "id": 7027,
        "statement": "is(dog, blue) :- needs(lion, dog), eats(lion, dog).",
        "description": "If the lion needs the dog and the lion eats the dog then the dog is blue."
    },
    {
        "id": 7028,
        "statement": "eats(X, lion) :- eats(X, bear).",
        "description": "If someone eats the bear then they eat the lion."
    },
    {
        "id": 7029,
        "statement": "needs(rabbit, bear) :- eats(dog, rabbit), eats(dog, bear).",
        "description": "If the dog eats the rabbit and the dog eats the bear then the rabbit needs the bear."
    },
    {
        "id": 7030,
        "statement": "likes(X, bear) :- is(X, rough), likes(X, lion).",
        "description": "If someone is rough and they like the lion then they like the bear."
    },
    {
        "id": 7031,
        "statement": "likes(X, lion) :- is(X, blue).",
        "description": "If someone is blue then they like the lion."
    },
    {
        "id": 7032,
        "statement": "is(X, rough) :- eats(X, lion).",
        "description": "If someone eats the lion then they are rough."
    },
    {
        "id": 7033,
        "statement": "is(bear, blue) :- likes(X, bear), likes(X, lion).",
        "description": "If someone likes the bear and they like the lion then the bear is blue."
    },
    {
        "id": 7034,
        "statement": "eats(bear, rabbit) :- likes(X, dog), needs(dog, bear).",
        "description": "If someone likes the dog and the dog needs the bear then the bear eats the rabbit."
    },
    {
        "id": 7035,
        "statement": "is(dog, green) :- likes(X, dog), likes(dog, lion).",
        "description": "If someone likes the dog and the dog likes the lion then the dog is green."
    },
    {
        "id": 7036,
        "statement": "is(bear, nice) :- visits(X, bear), eats(X, dog).",
        "description": "If something visits the bear and it eats the dog then the bear is nice."
    },
    {
        "id": 7037,
        "statement": "likes(rabbit, dog) :- visits(X, bear), not likes(X, rabbit).",
        "description": "If something visits the bear and it does not like the rabbit then the rabbit likes the dog."
    },
    {
        "id": 7038,
        "statement": "visits(X, bear) :- likes(X, cow).",
        "description": "If something likes the cow then it visits the bear."
    },
    {
        "id": 7039,
        "statement": "likes(X, bear) :- is(X, cold), visits(X, rabbit).",
        "description": "If something is cold and it visits the rabbit then it likes the bear."
    },
    {
        "id": 7040,
        "statement": "likes(X, cow) :- likes(X, dog), not is(X, big).",
        "description": "If something likes the dog and it is not big then it likes the cow."
    },
    {
        "id": 7041,
        "statement": "visits(X, cat) :- is(X, green).",
        "description": "If someone is green then they visit the cat."
    },
    {
        "id": 7042,
        "statement": "is(bear, green) :- sees(X, bear).",
        "description": "If someone sees the bear then the bear is green."
    },
    {
        "id": 7043,
        "statement": "is(squirrel, nice) :- sees(X, squirrel), eats(X, bear).",
        "description": "If someone sees the squirrel and they eat the bear then the squirrel is nice."
    },
    {
        "id": 7044,
        "statement": "visits(squirrel, cat) :- is(X, green), visits(X, squirrel).",
        "description": "If someone is green and they visit the squirrel then the squirrel visits the cat."
    },
    {
        "id": 7045,
        "statement": "is(squirrel, kind) :- visits(cat, squirrel), eats(cat, bear).",
        "description": "If the cat visits the squirrel and the cat eats the bear then the squirrel is kind."
    },
    {
        "id": 7046,
        "statement": "sees(squirrel, bear) :- eats(squirrel, mouse).",
        "description": "If the squirrel eats the mouse then the squirrel sees the bear."
    },
    {
        "id": 7047,
        "statement": "visits(squirrel, mouse) :- visits(squirrel, bear).",
        "description": "If the squirrel visits the bear then the squirrel visits the mouse."
    },
    {
        "id": 7048,
        "statement": "is(X, kind) :- eats(X, mouse), eats(X, squirrel).",
        "description": "If someone eats the mouse and they eat the squirrel then they are kind."
    },
    {
        "id": 7049,
        "statement": "visits(bear, squirrel) :- sees(squirrel, bear), visits(bear, cat).",
        "description": "If the squirrel sees the bear and the bear visits the cat then the bear visits the squirrel."
    },
    {
        "id": 7050,
        "statement": "chases(X, cow) :- visits(X, rabbit), likes(rabbit, squirrel).",
        "description": "If something visits the rabbit and the rabbit likes the squirrel then it chases the cow."
    },
    {
        "id": 7051,
        "statement": "chases(dog, squirrel) :- chases(squirrel, cow), visits(squirrel, dog).",
        "description": "If the squirrel chases the cow and the squirrel visits the dog then the dog chases the squirrel."
    },
    {
        "id": 7052,
        "statement": "likes(X, cow) :- chases(X, cow).",
        "description": "If something chases the cow then it likes the cow."
    },
    {
        "id": 7053,
        "statement": "likes(dog, rabbit) :- chases(cow, dog).",
        "description": "If the cow chases the dog then the dog likes the rabbit."
    },
    {
        "id": 7054,
        "statement": "visits(X, rabbit) :- likes(X, squirrel).",
        "description": "If something likes the squirrel then it visits the rabbit."
    },
    {
        "id": 7055,
        "statement": "likes(rabbit, squirrel) :- likes(X, rabbit), chases(X, cow).",
        "description": "If something likes the rabbit and it chases the cow then the rabbit likes the squirrel."
    },
    {
        "id": 7056,
        "statement": "is(X, young) :- is(X, furry), is(X, rough).",
        "description": "All furry, rough people are young."
    },
    {
        "id": 7057,
        "statement": "is(X, rough) :- is(X, kind), is(X, smart).",
        "description": "If someone is kind and smart then they are rough."
    },
    {
        "id": 7058,
        "statement": "is(X, green) :- is(X, quiet), is(X, young).",
        "description": "If someone is quiet and young then they are green."
    },
    {
        "id": 7059,
        "statement": "is(dave, kind) :- is(dave, furry).",
        "description": "If Dave is furry then Dave is kind."
    },
    {
        "id": 7060,
        "statement": "likes(lion, tiger).",
        "description": "The lion likes the tiger."
    },
    {
        "id": 7061,
        "statement": "is(X, cold) :- likes(X, mouse), likes(X, squirrel).",
        "description": "If someone likes the mouse and they like the squirrel then they are cold."
    },
    {
        "id": 7062,
        "statement": "chases(X, squirrel) :- chases(X, mouse), likes(X, lion).",
        "description": "If someone chases the mouse and they like the lion then they chase the squirrel."
    },
    {
        "id": 7063,
        "statement": "is(mouse, young) :- likes(X, tiger), visits(tiger, mouse).",
        "description": "If someone likes the tiger and the tiger visits the mouse then the mouse is young."
    },
    {
        "id": 7064,
        "statement": "is(lion, nice) :- is(lion, blue).",
        "description": "If the lion is blue then the lion is nice."
    },
    {
        "id": 7065,
        "statement": "likes(lion, mouse) :- chases(X, lion), likes(lion, squirrel).",
        "description": "If someone chases the lion and the lion likes the squirrel then the lion likes the mouse."
    },
    {
        "id": 7066,
        "statement": "chases(mouse, squirrel) :- is(X, kind), likes(X, mouse).",
        "description": "If someone is kind and they like the mouse then the mouse chases the squirrel."
    },
    {
        "id": 7067,
        "statement": "likes(X, squirrel) :- chases(X, squirrel).",
        "description": "If someone chases the squirrel then they like the squirrel."
    },
    {
        "id": 7068,
        "statement": "is(tiger, blue) :- visits(X, tiger).",
        "description": "If someone visits the tiger then the tiger is blue."
    },
    {
        "id": 7069,
        "statement": "is(squirrel, kind) :- likes(X, squirrel).",
        "description": "If someone likes the squirrel then the squirrel is kind."
    },
    {
        "id": 7070,
        "statement": "needs(X, squirrel) :- is(X, young).",
        "description": "If someone is young then they need the squirrel."
    },
    {
        "id": 7071,
        "statement": "is(bear, kind) :- eats(X, bear), eats(X, squirrel).",
        "description": "If someone eats the bear and they eat the squirrel then the bear is kind."
    },
    {
        "id": 7072,
        "statement": "is(squirrel, round) :- needs(X, squirrel), eats(X, cow).",
        "description": "If someone needs the squirrel and they eat the cow then the squirrel is round."
    },
    {
        "id": 7073,
        "statement": "is(mouse, young) :- eats(mouse, squirrel).",
        "description": "If the mouse eats the squirrel then the mouse is young."
    },
    {
        "id": 7074,
        "statement": "is(X, young) :- sees(X, squirrel).",
        "description": "If someone sees the squirrel then they are young."
    },
    {
        "id": 7075,
        "statement": "sees(X, cow) :- sees(X, bear), needs(X, bear).",
        "description": "If someone sees the bear and they need the bear then they see the cow."
    },
    {
        "id": 7076,
        "statement": "is(gary, furry) :- is(gary, white), is(gary, young).",
        "description": "If Gary is white and Gary is young then Gary is furry."
    },
    {
        "id": 7077,
        "statement": "is(X, white) :- is(X, nice), is(X, young).",
        "description": "If someone is nice and young then they are white."
    },
    {
        "id": 7078,
        "statement": "chases(X, lion) :- chases(X, cat).",
        "description": "If someone chases the cat then they chase the lion."
    },
    {
        "id": 7079,
        "statement": "chases(X, lion) :- is(X, red).",
        "description": "If someone is red then they chase the lion."
    },
    {
        "id": 7080,
        "statement": "is(bear, nice) :- sees(X, cat), chases(X, bear).",
        "description": "If someone sees the cat and they chase the bear then the bear is nice."
    },
    {
        "id": 7081,
        "statement": "likes(X, lion) :- sees(X, tiger).",
        "description": "If someone sees the tiger then they like the lion."
    },
    {
        "id": 7082,
        "statement": "likes(X, lion) :- chases(X, cat).",
        "description": "If someone chases the cat then they like the lion."
    },
    {
        "id": 7083,
        "statement": "sees(X, bear) :- is(X, big).",
        "description": "If someone is big then they see the bear."
    },
    {
        "id": 7084,
        "statement": "is(X, red) :- sees(X, cat).",
        "description": "If someone sees the cat then they are red."
    },
    {
        "id": 7085,
        "statement": "is(X, white) :- is(X, cold), is(X, big).",
        "description": "Cold, big things are white."
    },
    {
        "id": 7086,
        "statement": "is(X, white) :- is(X, green).",
        "description": "Green things are white."
    },
    {
        "id": 7087,
        "statement": "is(X, white) :- is(X, cold).",
        "description": "Cold things are white."
    },
    {
        "id": 7088,
        "statement": "is(X, kind) :- is(X, green), is(X, cold).",
        "description": "If something is green and cold then it is kind."
    },
    {
        "id": 7089,
        "statement": "is(X, furry) :- is(X, kind), is(X, white).",
        "description": "Kind, white things are furry."
    },
    {
        "id": 7090,
        "statement": "is(X, big) :- is(X, kind), is(X, furry).",
        "description": "All kind, furry things are big."
    },
    {
        "id": 7091,
        "statement": "visits(mouse, bear) :- visits(X, mouse).",
        "description": "If something visits the mouse then the mouse visits the bear."
    },
    {
        "id": 7092,
        "statement": "chases(X, mouse) :- is(X, cold).",
        "description": "If something is cold then it chases the mouse."
    },
    {
        "id": 7093,
        "statement": "is(X, blue) :- is(X, cold), chases(X, bear).",
        "description": "If something is cold and it chases the bear then it is blue."
    },
    {
        "id": 7094,
        "statement": "chases(X, mouse) :- is(X, green), eats(X, mouse).",
        "description": "If something is green and it eats the mouse then it chases the mouse."
    },
    {
        "id": 7095,
        "statement": "visits(X, bear) :- is(X, young).",
        "description": "If something is young then it visits the bear."
    },
    {
        "id": 7096,
        "statement": "is(bear, green) :- eats(X, bear).",
        "description": "If something eats the bear then the bear is green."
    },
    {
        "id": 7097,
        "statement": "is(tiger, nice) :- is(tiger, green).",
        "description": "If the tiger is green then the tiger is nice."
    },
    {
        "id": 7098,
        "statement": "eats(mouse, bear) :- eats(bear, mouse).",
        "description": "If the bear eats the mouse then the mouse eats the bear."
    },
    {
        "id": 7099,
        "statement": "needs(X, tiger) :- eats(X, bear), likes(X, bear).",
        "description": "If someone eats the bear and they like the bear then they need the tiger."
    },
    {
        "id": 7100,
        "statement": "eats(bear, mouse) :- needs(X, tiger), not needs(X, bear).",
        "description": "If someone needs the tiger and they do not need the bear then the bear eats the mouse."
    },
    {
        "id": 7101,
        "statement": "eats(X, bear) :- is(X, kind).",
        "description": "If someone is kind then they eat the bear."
    },
    {
        "id": 7102,
        "statement": "chases(X, mouse) :- is(X, green), eats(X, cow).",
        "description": "If something is green and it eats the cow then it chases the mouse."
    },
    {
        "id": 7103,
        "statement": "needs(X, cow) :- is(X, cold).",
        "description": "If something is cold then it needs the cow."
    },
    {
        "id": 7104,
        "statement": "chases(mouse, bald_eagle) :- eats(cow, mouse), not eats(cow, bear).",
        "description": "If the cow eats the mouse and the cow does not eat the bear then the mouse chases the bald eagle."
    },
    {
        "id": 7105,
        "statement": "chases(bear, bald_eagle) :- chases(X, bear).",
        "description": "If something chases the bear then the bear chases the bald eagle."
    },
    {
        "id": 7106,
        "statement": "is(X, round) :- eats(X, cow).",
        "description": "If something eats the cow then it is round."
    },
    {
        "id": 7107,
        "statement": "is(mouse, green) :- chases(bald_eagle, mouse), is(bald_eagle, cold).",
        "description": "If the bald eagle chases the mouse and the bald eagle is cold then the mouse is green."
    },
    {
        "id": 7108,
        "statement": "is(X, quiet) :- is(X, red), is(X, cold).",
        "description": "All red, cold people are quiet."
    },
    {
        "id": 7109,
        "statement": "is(X, green) :- is(X, round), is(X, quiet).",
        "description": "If someone is round and quiet then they are green."
    },
    {
        "id": 7110,
        "statement": "is(erin, red) :- is(erin, round).",
        "description": "If Erin is round then Erin is red."
    },
    {
        "id": 7111,
        "statement": "is(dave, cold) :- is(dave, white), is(dave, young).",
        "description": "If Dave is white and Dave is young then Dave is cold."
    },
    {
        "id": 7112,
        "statement": "eats(X, squirrel) :- is(X, rough).",
        "description": "If someone is rough then they eat the squirrel."
    },
    {
        "id": 7113,
        "statement": "likes(cat, squirrel) :- visits(cat, squirrel), eats(squirrel, lion).",
        "description": "If the cat visits the squirrel and the squirrel eats the lion then the cat likes the squirrel."
    },
    {
        "id": 7114,
        "statement": "is(X, rough) :- is(X, round), likes(X, squirrel).",
        "description": "If someone is round and they like the squirrel then they are rough."
    },
    {
        "id": 7115,
        "statement": "is(X, round) :- likes(X, squirrel).",
        "description": "If someone likes the squirrel then they are round."
    },
    {
        "id": 7116,
        "statement": "likes(lion, squirrel) :- eats(X, cow), not visits(X, lion).",
        "description": "If someone eats the cow and they do not visit the lion then the lion likes the squirrel."
    },
    {
        "id": 7117,
        "statement": "is(cow, round) :- visits(lion, cow).",
        "description": "If the lion visits the cow then the cow is round."
    },
    {
        "id": 7118,
        "statement": "is(cat, nice) :- likes(X, cat).",
        "description": "If someone likes the cat then the cat is nice."
    },
    {
        "id": 7119,
        "statement": "is(lion, rough) :- likes(X, cat), eats(cat, lion).",
        "description": "If someone likes the cat and the cat eats the lion then the lion is rough."
    },
    {
        "id": 7120,
        "statement": "eats(X, cow) :- is(X, big), not eats(X, cat).",
        "description": "If someone is big and they do not eat the cat then they eat the cow."
    },
    {
        "id": 7121,
        "statement": "is(X, rough) :- is(X, white), is(X, blue).",
        "description": "All white, blue people are rough."
    },
    {
        "id": 7122,
        "statement": "is(X, green) :- is(X, rough), is(X, white).",
        "description": "If someone is rough and white then they are green."
    },
    {
        "id": 7123,
        "statement": "is(X, blue) :- is(X, green), is(X, smart).",
        "description": "Green, smart people are blue."
    },
    {
        "id": 7124,
        "statement": "is(X, green) :- is(X, white).",
        "description": "All white people are green."
    },
    {
        "id": 7125,
        "statement": "is(X, smart) :- is(X, green).",
        "description": "Green people are smart."
    },
    {
        "id": 7126,
        "statement": "visits(dog, tiger) :- visits(X, dog).",
        "description": "If something visits the dog then the dog visits the tiger."
    },
    {
        "id": 7127,
        "statement": "likes(X, bald_eagle) :- is(X, rough), is(X, nice).",
        "description": "If something is rough and nice then it likes the bald eagle."
    },
    {
        "id": 7128,
        "statement": "chases(dog, tiger) :- chases(squirrel, dog).",
        "description": "If the squirrel chases the dog then the dog chases the tiger."
    },
    {
        "id": 7129,
        "statement": "visits(X, dog) :- visits(X, tiger).",
        "description": "If something visits the tiger then it visits the dog."
    },
    {
        "id": 7130,
        "statement": "chases(squirrel, dog) :- visits(X, squirrel), not is(X, rough).",
        "description": "If something visits the squirrel and it is not rough then the squirrel chases the dog."
    },
    {
        "id": 7131,
        "statement": "visits(bald_eagle, tiger) :- likes(X, bald_eagle).",
        "description": "If something likes the bald eagle then the bald eagle visits the tiger."
    },
    {
        "id": 7132,
        "statement": "visits(X, squirrel) :- is(X, round), is(X, red).",
        "description": "If something is round and red then it visits the squirrel."
    },
    {
        "id": 7133,
        "statement": "is(X, red) :- visits(X, dog).",
        "description": "If something visits the dog then it is red."
    },
    {
        "id": 7134,
        "statement": "is(X, round) :- is(X, big), is(X, blue).",
        "description": "Big, blue people are round."
    },
    {
        "id": 7135,
        "statement": "is(X, big) :- is(X, quiet), is(X, young).",
        "description": "Quiet, young people are big."
    },
    {
        "id": 7136,
        "statement": "is(X, young) :- is(X, quiet), is(X, white).",
        "description": "All quiet, white people are young."
    },
    {
        "id": 7137,
        "statement": "is(bob, green) :- is(bob, big), is(bob, blue).",
        "description": "If Bob is big and Bob is blue then Bob is green."
    },
    {
        "id": 7138,
        "statement": "likes(squirrel, lion) :- likes(X, squirrel), likes(X, bald_eagle).",
        "description": "If something likes the squirrel and it likes the bald eagle then the squirrel likes the lion."
    },
    {
        "id": 7139,
        "statement": "is(X, red) :- eats(X, bald_eagle), not chases(bald_eagle, squirrel).",
        "description": "If something eats the bald eagle and the bald eagle does not chase the squirrel then it is red."
    },
    {
        "id": 7140,
        "statement": "likes(X, squirrel) :- eats(X, bald_eagle), chases(X, dog).",
        "description": "If something eats the bald eagle and it chases the dog then it likes the squirrel."
    },
    {
        "id": 7141,
        "statement": "likes(X, bald_eagle) :- is(X, red), eats(X, squirrel).",
        "description": "If something is red and it eats the squirrel then it likes the bald eagle."
    },
    {
        "id": 7142,
        "statement": "likes(X, lion) :- likes(X, bald_eagle).",
        "description": "If something likes the bald eagle then it likes the lion."
    },
    {
        "id": 7143,
        "statement": "is(erin, kind) :- is(erin, white), is(erin, big).",
        "description": "If Erin is white and Erin is big then Erin is kind."
    },
    {
        "id": 7144,
        "statement": "is(X, smart) :- is(X, big), is(X, white).",
        "description": "Big, white things are smart."
    },
    {
        "id": 7145,
        "statement": "is(X, nice) :- is(X, young), is(X, round).",
        "description": "All young, round things are nice."
    },
    {
        "id": 7146,
        "statement": "is(X, young) :- is(X, green), is(X, blue).",
        "description": "If something is green and blue then it is young."
    },
    {
        "id": 7147,
        "statement": "is(X, kind) :- is(X, rough).",
        "description": "All rough things are kind."
    },
    {
        "id": 7148,
        "statement": "is(anne, red) :- is(anne, young).",
        "description": "If Anne is young then Anne is red."
    },
    {
        "id": 7149,
        "statement": "is(X, young) :- is(X, red), is(X, white).",
        "description": "If something is red and white then it is young."
    },
    {
        "id": 7150,
        "statement": "is(X, blue) :- is(X, smart), is(X, red).",
        "description": "If something is smart and red then it is blue."
    },
    {
        "id": 7151,
        "statement": "is(X, furry) :- is(X, kind), is(X, green).",
        "description": "If someone is kind and green then they are furry."
    },
    {
        "id": 7152,
        "statement": "is(X, green) :- is(X, red), is(X, kind).",
        "description": "If someone is red and kind then they are green."
    },
    {
        "id": 7153,
        "statement": "is(X, round) :- is(X, kind), is(X, green).",
        "description": "Kind, green people are round."
    },
    {
        "id": 7154,
        "statement": "sees(cow, bear) :- eats(X, cow), is(X, kind).",
        "description": "If something eats the cow and it is kind then the cow sees the bear."
    },
    {
        "id": 7155,
        "statement": "is(cow, big) :- needs(cow, bear), not eats(squirrel, cow).",
        "description": "If the cow needs the bear and the squirrel does not eat the cow then the cow is big."
    },
    {
        "id": 7156,
        "statement": "needs(dog, squirrel) :- is(dog, blue), not is(dog, big).",
        "description": "If the dog is blue and the dog is not big then the dog needs the squirrel."
    },
    {
        "id": 7157,
        "statement": "is(X, blue) :- needs(X, bear), not eats(X, cow).",
        "description": "If something needs the bear and it does not eat the cow then it is blue."
    },
    {
        "id": 7158,
        "statement": "is(squirrel, blue) :- needs(X, squirrel), is(X, blue).",
        "description": "If something needs the squirrel and it is blue then the squirrel is blue."
    },
    {
        "id": 7159,
        "statement": "sees(X, cow) :- is(X, kind), not eats(X, squirrel).",
        "description": "If something is kind and it does not eat the squirrel then it sees the cow."
    },
    {
        "id": 7160,
        "statement": "is(X, big) :- is(X, blue), is(X, nice).",
        "description": "If someone is blue and nice then they are big."
    },
    {
        "id": 7161,
        "statement": "is(harry, big) :- is(harry, furry), is(harry, kind).",
        "description": "If Harry is furry and Harry is kind then Harry is big."
    },
    {
        "id": 7162,
        "statement": "is(X, kind) :- is(X, quiet), is(X, smart).",
        "description": "If someone is quiet and smart then they are kind."
    },
    {
        "id": 7163,
        "statement": "needs(X, lion) :- is(X, young).",
        "description": "If something is young then it needs the lion."
    },
    {
        "id": 7164,
        "statement": "needs(X, lion) :- chases(X, cat), needs(X, dog).",
        "description": "If something chases the cat and it needs the dog then it needs the lion."
    },
    {
        "id": 7165,
        "statement": "needs(bear, cat) :- visits(X, bear), is(X, green).",
        "description": "If something visits the bear and it is green then the bear needs the cat."
    },
    {
        "id": 7166,
        "statement": "chases(bear, cat) :- chases(X, bear).",
        "description": "If something chases the bear then the bear chases the cat."
    },
    {
        "id": 7167,
        "statement": "chases(X, dog) :- visits(X, cat).",
        "description": "If something visits the cat then it chases the dog."
    },
    {
        "id": 7168,
        "statement": "is(X, blue) :- is(X, round).",
        "description": "If something is round then it is blue."
    },
    {
        "id": 7169,
        "statement": "is(dog, young) :- chases(bear, dog), is(bear, green).",
        "description": "If the bear chases the dog and the bear is green then the dog is young."
    },
    {
        "id": 7170,
        "statement": "is(X, green) :- visits(X, bear), visits(X, cat).",
        "description": "If something visits the bear and it visits the cat then it is green."
    },
    {
        "id": 7171,
        "statement": "visits(X, bear) :- chases(X, dog).",
        "description": "If something chases the dog then it visits the bear."
    },
    {
        "id": 7172,
        "statement": "likes(X, bald_eagle) :- likes(X, rabbit), sees(rabbit, bald_eagle).",
        "description": "If something likes the rabbit and the rabbit sees the bald eagle then it likes the bald eagle."
    },
    {
        "id": 7173,
        "statement": "needs(X, bald_eagle) :- is(X, rough).",
        "description": "If something is rough then it needs the bald eagle."
    },
    {
        "id": 7174,
        "statement": "needs(cat, squirrel) :- likes(X, cat), is(X, big).",
        "description": "If something likes the cat and it is big then the cat needs the squirrel."
    },
    {
        "id": 7175,
        "statement": "likes(X, squirrel) :- needs(X, bald_eagle).",
        "description": "If something needs the bald eagle then it likes the squirrel."
    },
    {
        "id": 7176,
        "statement": "is(X, cold) :- is(X, rough), sees(X, bald_eagle).",
        "description": "If something is rough and it sees the bald eagle then it is cold."
    },
    {
        "id": 7177,
        "statement": "is(squirrel, rough) :- likes(X, squirrel).",
        "description": "If something likes the squirrel then the squirrel is rough."
    },
    {
        "id": 7178,
        "statement": "sees(X, cat) :- needs(X, cat).",
        "description": "If something needs the cat then it sees the cat."
    },
    {
        "id": 7179,
        "statement": "is(X, rough) :- is(X, big), is(X, young).",
        "description": "Big, young things are rough."
    },
    {
        "id": 7180,
        "statement": "is(X, rough) :- is(X, quiet), is(X, big).",
        "description": "All quiet, big things are rough."
    },
    {
        "id": 7181,
        "statement": "is(X, rough) :- is(X, quiet), is(X, kind).",
        "description": "Quiet, kind things are rough."
    },
    {
        "id": 7182,
        "statement": "is(X, green) :- is(X, smart).",
        "description": "All smart things are green."
    },
    {
        "id": 7183,
        "statement": "is(X, green) :- is(X, big), is(X, rough).",
        "description": "All big, rough things are green."
    },
    {
        "id": 7184,
        "statement": "is(X, young) :- is(X, green).",
        "description": "All green things are young."
    },
    {
        "id": 7185,
        "statement": "is(X, quiet) :- is(X, big), is(X, kind).",
        "description": "Big, kind things are quiet."
    },
    {
        "id": 7186,
        "statement": "sees(X, tiger) :- eats(X, bear).",
        "description": "If someone eats the bear then they see the tiger."
    },
    {
        "id": 7187,
        "statement": "eats(X, bear) :- needs(X, cow), sees(X, tiger).",
        "description": "If someone needs the cow and they see the tiger then they eat the bear."
    },
    {
        "id": 7188,
        "statement": "sees(X, tiger) :- sees(X, rabbit).",
        "description": "If someone sees the rabbit then they see the tiger."
    },
    {
        "id": 7189,
        "statement": "is(X, green) :- needs(X, cow).",
        "description": "If someone needs the cow then they are green."
    },
    {
        "id": 7190,
        "statement": "is(tiger, kind) :- eats(X, tiger), sees(X, cow).",
        "description": "If someone eats the tiger and they see the cow then the tiger is kind."
    },
    {
        "id": 7191,
        "statement": "sees(X, rabbit) :- is(X, blue).",
        "description": "If someone is blue then they see the rabbit."
    },
    {
        "id": 7192,
        "statement": "is(rabbit, kind) :- sees(X, rabbit).",
        "description": "If someone sees the rabbit then the rabbit is kind."
    },
    {
        "id": 7193,
        "statement": "eats(X, bear) :- eats(X, rabbit).",
        "description": "If someone eats the rabbit then they eat the bear."
    },
    {
        "id": 7194,
        "statement": "is(X, cold) :- is(X, big), is(X, nice).",
        "description": "Big, nice things are cold."
    },
    {
        "id": 7195,
        "statement": "is(X, cold) :- is(X, young), is(X, nice).",
        "description": "All young, nice things are cold."
    },
    {
        "id": 7196,
        "statement": "is(dave, nice) :- is(dave, cold).",
        "description": "If Dave is cold then Dave is nice."
    },
    {
        "id": 7197,
        "statement": "is(X, big) :- is(X, nice), is(X, cold).",
        "description": "If something is nice and cold then it is big."
    },
    {
        "id": 7198,
        "statement": "is(X, kind) :- is(X, young), is(X, furry).",
        "description": "If someone is young and furry then they are kind."
    },
    {
        "id": 7199,
        "statement": "is(X, white) :- is(X, kind), is(X, smart).",
        "description": "All kind, smart people are white."
    },
    {
        "id": 7200,
        "statement": "is(bob, blue) :- not is(bob, white).",
        "description": "If Bob is not white then Bob is blue."
    },
    {
        "id": 7201,
        "statement": "is(X, big) :- is(X, round), not is(X, white).",
        "description": "If something is round and not white then it is big."
    },
    {
        "id": 7202,
        "statement": "is(X, big) :- is(X, quiet), is(X, furry).",
        "description": "If something is quiet and furry then it is big."
    },
    {
        "id": 7203,
        "statement": "is(X, round) :- is(X, red), is(X, big).",
        "description": "If something is red and big then it is round."
    },
    {
        "id": 7204,
        "statement": "is(X, rough) :- is(X, quiet), is(X, round).",
        "description": "Quiet, round things are rough."
    },
    {
        "id": 7205,
        "statement": "is(X, smart) :- is(X, furry), is(X, big).",
        "description": "All furry, big things are smart."
    },
    {
        "id": 7206,
        "statement": "is(X, cold) :- is(X, big), is(X, smart).",
        "description": "Big, smart things are cold."
    },
    {
        "id": 7207,
        "statement": "is(X, nice) :- is(X, furry), is(X, big).",
        "description": "All furry, big things are nice."
    },
    {
        "id": 7208,
        "statement": "is(dave, furry) :- is(dave, big).",
        "description": "If Dave is big then Dave is furry."
    },
    {
        "id": 7209,
        "statement": "is(X, young) :- is(X, cold).",
        "description": "If something is cold then it is young."
    },
    {
        "id": 7210,
        "statement": "is(X, smart) :- is(X, red).",
        "description": "All red things are smart."
    },
    {
        "id": 7211,
        "statement": "is(X, smart) :- is(X, blue), is(X, furry).",
        "description": "Blue, furry things are smart."
    },
    {
        "id": 7212,
        "statement": "is(X, kind) :- is(X, green), is(X, rough).",
        "description": "If something is green and rough then it is kind."
    },
    {
        "id": 7213,
        "statement": "is(X, blue) :- is(X, rough), is(X, red).",
        "description": "Rough, red things are blue."
    },
    {
        "id": 7214,
        "statement": "is(X, white) :- is(X, blue), is(X, young).",
        "description": "If someone is blue and young then they are white."
    },
    {
        "id": 7215,
        "statement": "is(X, green) :- is(X, smart), is(X, nice).",
        "description": "If someone is smart and nice then they are green."
    },
    {
        "id": 7216,
        "statement": "is(harry, smart) :- is(harry, young), is(harry, furry).",
        "description": "If Harry is young and Harry is furry then Harry is smart."
    },
    {
        "id": 7217,
        "statement": "is(X, furry) :- is(X, white).",
        "description": "White people are furry."
    },
    {
        "id": 7218,
        "statement": "is(X, green) :- is(X, furry), is(X, blue).",
        "description": "All furry, blue people are green."
    },
    {
        "id": 7219,
        "statement": "is(X, furry) :- is(X, nice).",
        "description": "If someone is nice then they are furry."
    },
    {
        "id": 7220,
        "statement": "sees(mouse, cat) :- needs(X, mouse), is(X, kind).",
        "description": "If something needs the mouse and it is kind then the mouse sees the cat."
    },
    {
        "id": 7221,
        "statement": "visits(rabbit, mouse) :- is(X, kind), visits(X, rabbit).",
        "description": "If something is kind and it visits the rabbit then the rabbit visits the mouse."
    },
    {
        "id": 7222,
        "statement": "needs(X, cat) :- is(X, kind).",
        "description": "If something is kind then it needs the cat."
    },
    {
        "id": 7223,
        "statement": "needs(cat, mouse) :- sees(X, cat).",
        "description": "If something sees the cat then the cat needs the mouse."
    },
    {
        "id": 7224,
        "statement": "sees(rabbit, cat) :- needs(X, cat), sees(cat, rabbit).",
        "description": "If something needs the cat and the cat sees the rabbit then the rabbit sees the cat."
    },
    {
        "id": 7225,
        "statement": "is(X, big) :- needs(X, mouse).",
        "description": "If something needs the mouse then it is big."
    },
    {
        "id": 7226,
        "statement": "sees(X, rabbit) :- is(X, red), sees(X, mouse).",
        "description": "If something is red and it sees the mouse then it sees the rabbit."
    },
    {
        "id": 7227,
        "statement": "visits(X, rabbit) :- visits(X, mouse), is(X, blue).",
        "description": "If something visits the mouse and it is blue then it visits the rabbit."
    },
    {
        "id": 7228,
        "statement": "chases(X, squirrel) :- is(X, green), sees(X, bear).",
        "description": "If someone is green and they see the bear then they chase the squirrel."
    },
    {
        "id": 7229,
        "statement": "likes(squirrel, rabbit) :- chases(X, squirrel).",
        "description": "If someone chases the squirrel then the squirrel likes the rabbit."
    },
    {
        "id": 7230,
        "statement": "is(X, big) :- chases(X, rabbit).",
        "description": "If someone chases the rabbit then they are big."
    },
    {
        "id": 7231,
        "statement": "is(rabbit, red) :- likes(rabbit, dog).",
        "description": "If the rabbit likes the dog then the rabbit is red."
    },
    {
        "id": 7232,
        "statement": "is(rabbit, big) :- is(rabbit, round), is(rabbit, red).",
        "description": "If the rabbit is round and the rabbit is red then the rabbit is big."
    },
    {
        "id": 7233,
        "statement": "likes(X, rabbit) :- sees(X, rabbit).",
        "description": "If someone sees the rabbit then they like the rabbit."
    },
    {
        "id": 7234,
        "statement": "sees(X, squirrel) :- chases(X, bear).",
        "description": "If someone chases the bear then they see the squirrel."
    },
    {
        "id": 7235,
        "statement": "is(bear, young) :- eats(X, bear).",
        "description": "If someone eats the bear then the bear is young."
    },
    {
        "id": 7236,
        "statement": "eats(X, bear) :- likes(X, bear).",
        "description": "If someone likes the bear then they eat the bear."
    },
    {
        "id": 7237,
        "statement": "likes(X, bear) :- is(X, young).",
        "description": "If someone is young then they like the bear."
    },
    {
        "id": 7238,
        "statement": "sees(X, rabbit) :- is(X, cold).",
        "description": "If someone is cold then they see the rabbit."
    },
    {
        "id": 7239,
        "statement": "is(rabbit, red) :- sees(X, rabbit).",
        "description": "If someone sees the rabbit then the rabbit is red."
    },
    {
        "id": 7240,
        "statement": "likes(X, rabbit) :- is(X, round), is(X, blue).",
        "description": "If someone is round and blue then they like the rabbit."
    },
    {
        "id": 7241,
        "statement": "eats(X, cat) :- likes(X, rabbit).",
        "description": "If someone likes the rabbit then they eat the cat."
    },
    {
        "id": 7242,
        "statement": "is(bear, young) :- sees(X, rabbit), eats(X, bear).",
        "description": "If someone sees the rabbit and they eat the bear then the bear is young."
    },
    {
        "id": 7243,
        "statement": "is(rabbit, round) :- sees(X, rabbit), chases(rabbit, lion).",
        "description": "If something sees the rabbit and the rabbit chases the lion then the rabbit is round."
    },
    {
        "id": 7244,
        "statement": "eats(cow, bear) :- is(cow, green).",
        "description": "If the cow is green then the cow eats the bear."
    },
    {
        "id": 7245,
        "statement": "is(cow, green) :- is(X, nice), chases(X, cow).",
        "description": "If something is nice and it chases the cow then the cow is green."
    },
    {
        "id": 7246,
        "statement": "chases(X, cow) :- is(X, round), is(X, nice).",
        "description": "If something is round and nice then it chases the cow."
    },
    {
        "id": 7247,
        "statement": "chases(X, lion) :- eats(X, lion).",
        "description": "If something eats the lion then it chases the lion."
    },
    {
        "id": 7248,
        "statement": "is(X, nice) :- sees(X, bear).",
        "description": "If something sees the bear then it is nice."
    },
    {
        "id": 7249,
        "statement": "is(bear, nice) :- is(X, nice), sees(X, bear).",
        "description": "If something is nice and it sees the bear then the bear is nice."
    },
    {
        "id": 7250,
        "statement": "chases(cow, rabbit) :- sees(X, cow).",
        "description": "If something sees the cow then the cow chases the rabbit."
    },
    {
        "id": 7251,
        "statement": "sees(bear, rabbit) :- eats(X, bear), is(bear, nice).",
        "description": "If something eats the bear and the bear is nice then the bear sees the rabbit."
    },
    {
        "id": 7252,
        "statement": "needs(X, dog) :- is(X, round), not is(X, rough).",
        "description": "If someone is round and not rough then they need the dog."
    },
    {
        "id": 7253,
        "statement": "likes(dog, cow) :- not sees(dog, cat).",
        "description": "If the dog does not see the cat then the dog likes the cow."
    },
    {
        "id": 7254,
        "statement": "needs(X, cow) :- is(X, round), likes(X, bald_eagle).",
        "description": "If someone is round and they like the bald eagle then they need the cow."
    },
    {
        "id": 7255,
        "statement": "needs(bald_eagle, cat) :- needs(dog, cow), sees(cow, bald_eagle).",
        "description": "If the dog needs the cow and the cow sees the bald eagle then the bald eagle needs the cat."
    },
    {
        "id": 7256,
        "statement": "is(X, big) :- needs(X, cat), not is(cat, round).",
        "description": "If someone needs the cat and the cat is not round then they are big."
    },
    {
        "id": 7257,
        "statement": "sees(X, bald_eagle) :- is(X, big), not is(X, kind).",
        "description": "If someone is big and not kind then they see the bald eagle."
    },
    {
        "id": 7258,
        "statement": "needs(X, cat) :- sees(X, dog), not likes(X, cow).",
        "description": "If someone sees the dog and they do not like the cow then they need the cat."
    },
    {
        "id": 7259,
        "statement": "is(squirrel, young) :- visits(X, squirrel), visits(squirrel, lion).",
        "description": "If something visits the squirrel and the squirrel visits the lion then the squirrel is young."
    },
    {
        "id": 7260,
        "statement": "visits(X, rabbit) :- eats(X, lion).",
        "description": "If something eats the lion then it visits the rabbit."
    },
    {
        "id": 7261,
        "statement": "sees(X, lion) :- sees(X, rabbit), is(X, red).",
        "description": "If something sees the rabbit and it is red then it sees the lion."
    },
    {
        "id": 7262,
        "statement": "is(X, cold) :- sees(X, squirrel).",
        "description": "If something sees the squirrel then it is cold."
    },
    {
        "id": 7263,
        "statement": "visits(X, tiger) :- visits(X, lion), is(X, young).",
        "description": "If something visits the lion and it is young then it visits the tiger."
    },
    {
        "id": 7264,
        "statement": "visits(lion, tiger) :- visits(X, lion).",
        "description": "If something visits the lion then the lion visits the tiger."
    },
    {
        "id": 7265,
        "statement": "eats(X, lion) :- sees(X, tiger), visits(X, tiger).",
        "description": "If something sees the tiger and it visits the tiger then it eats the lion."
    },
    {
        "id": 7266,
        "statement": "is(rabbit, cold) :- sees(X, lion), not sees(X, rabbit).",
        "description": "If something sees the lion and it does not see the rabbit then the rabbit is cold."
    },
    {
        "id": 7267,
        "statement": "sees(tiger, squirrel) :- sees(X, tiger), visits(X, rabbit).",
        "description": "If something sees the tiger and it visits the rabbit then the tiger sees the squirrel."
    },
    {
        "id": 7268,
        "statement": "is(bear, cold) :- sees(X, bear), sees(bear, squirrel).",
        "description": "If something sees the bear and the bear sees the squirrel then the bear is cold."
    },
    {
        "id": 7269,
        "statement": "visits(bear, rabbit) :- visits(bear, squirrel).",
        "description": "If the bear visits the squirrel then the bear visits the rabbit."
    },
    {
        "id": 7270,
        "statement": "sees(X, bear) :- is(X, green).",
        "description": "If something is green then it sees the bear."
    },
    {
        "id": 7271,
        "statement": "sees(X, bald_eagle) :- visits(X, squirrel).",
        "description": "If something visits the squirrel then it sees the bald eagle."
    },
    {
        "id": 7272,
        "statement": "is(bald_eagle, green) :- sees(X, squirrel), visits(squirrel, bald_eagle).",
        "description": "If something sees the squirrel and the squirrel visits the bald eagle then the bald eagle is green."
    },
    {
        "id": 7273,
        "statement": "sees(X, bald_eagle) :- sees(X, bear).",
        "description": "If something sees the bear then it sees the bald eagle."
    },
    {
        "id": 7274,
        "statement": "chases(X, rabbit) :- chases(X, bald_eagle), sees(X, bald_eagle).",
        "description": "If something chases the bald eagle and it sees the bald eagle then it chases the rabbit."
    },
    {
        "id": 7275,
        "statement": "is(X, rough) :- is(X, white), is(X, big).",
        "description": "If something is white and big then it is rough."
    },
    {
        "id": 7276,
        "statement": "is(X, white) :- is(X, quiet), is(X, young).",
        "description": "All quiet, young things are white."
    },
    {
        "id": 7277,
        "statement": "is(X, big) :- is(X, young), is(X, rough).",
        "description": "All young, rough things are big."
    },
    {
        "id": 7278,
        "statement": "is(X, quiet) :- is(X, rough), is(X, white).",
        "description": "Rough, white things are quiet."
    },
    {
        "id": 7279,
        "statement": "is(X, round) :- is(X, white), is(X, big).",
        "description": "If something is white and big then it is round."
    },
    {
        "id": 7280,
        "statement": "sees(X, tiger) :- visits(X, lion).",
        "description": "If something visits the lion then it sees the tiger."
    },
    {
        "id": 7281,
        "statement": "visits(X, dog) :- chases(X, tiger).",
        "description": "If something chases the tiger then it visits the dog."
    },
    {
        "id": 7282,
        "statement": "is(dog, round) :- chases(X, dog), visits(X, lion).",
        "description": "If something chases the dog and it visits the lion then the dog is round."
    },
    {
        "id": 7283,
        "statement": "visits(lion, tiger) :- is(lion, nice).",
        "description": "If the lion is nice then the lion visits the tiger."
    },
    {
        "id": 7284,
        "statement": "is(cat, round) :- sees(X, cat).",
        "description": "If something sees the cat then the cat is round."
    },
    {
        "id": 7285,
        "statement": "is(lion, rough) :- is(lion, round).",
        "description": "If the lion is round then the lion is rough."
    },
    {
        "id": 7286,
        "statement": "is(lion, nice) :- visits(X, lion).",
        "description": "If something visits the lion then the lion is nice."
    },
    {
        "id": 7287,
        "statement": "is(X, cold) :- is(X, young), is(X, rough).",
        "description": "Young, rough things are cold."
    },
    {
        "id": 7288,
        "statement": "is(X, rough) :- is(X, kind), is(X, cold).",
        "description": "All kind, cold things are rough."
    },
    {
        "id": 7289,
        "statement": "is(X, quiet) :- is(X, rough), is(X, white).",
        "description": "All rough, white things are quiet."
    },
    {
        "id": 7290,
        "statement": "is(X, quiet) :- is(X, nice), not is(X, rough).",
        "description": "If something is nice and not rough then it is quiet."
    },
    {
        "id": 7291,
        "statement": "is(X, cold) :- is(X, white), is(X, red).",
        "description": "If someone is white and red then they are cold."
    },
    {
        "id": 7292,
        "statement": "is(X, cold) :- is(X, white), is(X, rough).",
        "description": "If someone is white and rough then they are cold."
    },
    {
        "id": 7293,
        "statement": "is(X, cold) :- is(X, round).",
        "description": "Round people are cold."
    },
    {
        "id": 7294,
        "statement": "is(X, young) :- is(X, quiet), is(X, red).",
        "description": "If someone is quiet and red then they are young."
    },
    {
        "id": 7295,
        "statement": "is(X, white) :- is(X, round), is(X, young).",
        "description": "Round, young people are white."
    },
    {
        "id": 7296,
        "statement": "is(X, rough) :- is(X, round), is(X, white).",
        "description": "All round, white people are rough."
    },
    {
        "id": 7297,
        "statement": "is(X, white) :- is(X, round), is(X, furry).",
        "description": "All round, furry things are white."
    },
    {
        "id": 7298,
        "statement": "is(X, round) :- is(X, furry), is(X, nice).",
        "description": "All furry, nice things are round."
    },
    {
        "id": 7299,
        "statement": "is(X, young) :- is(X, round), is(X, furry).",
        "description": "If something is round and furry then it is young."
    },
    {
        "id": 7300,
        "statement": "is(X, nice) :- is(X, round), is(X, furry).",
        "description": "All round, furry people are nice."
    },
    {
        "id": 7301,
        "statement": "is(X, nice) :- is(X, furry), is(X, smart).",
        "description": "All furry, smart people are nice."
    },
    {
        "id": 7302,
        "statement": "is(erin, quiet) :- is(erin, smart), is(erin, nice).",
        "description": "If Erin is smart and Erin is nice then Erin is quiet."
    },
    {
        "id": 7303,
        "statement": "is(erin, furry) :- is(erin, quiet).",
        "description": "If Erin is quiet then Erin is furry."
    },
    {
        "id": 7304,
        "statement": "is(X, quiet) :- is(X, big), is(X, furry).",
        "description": "If someone is big and furry then they are quiet."
    },
    {
        "id": 7305,
        "statement": "is(X, young) :- is(X, quiet), not is(X, smart).",
        "description": "If someone is quiet and not smart then they are young."
    },
    {
        "id": 7306,
        "statement": "is(X, cold) :- is(X, round), is(X, young).",
        "description": "Round, young things are cold."
    },
    {
        "id": 7307,
        "statement": "is(erin, cold) :- is(erin, young), is(erin, kind).",
        "description": "If Erin is young and Erin is kind then Erin is cold."
    },
    {
        "id": 7308,
        "statement": "is(erin, big) :- is(erin, kind), is(erin, young).",
        "description": "If Erin is kind and Erin is young then Erin is big."
    },
    {
        "id": 7309,
        "statement": "is(X, round) :- is(X, smart), is(X, kind).",
        "description": "If something is smart and kind then it is round."
    },
    {
        "id": 7310,
        "statement": "is(X, kind) :- is(X, white), is(X, big).",
        "description": "If something is white and big then it is kind."
    },
    {
        "id": 7311,
        "statement": "is(X, green) :- eats(X, tiger).",
        "description": "If someone eats the tiger then they are green."
    },
    {
        "id": 7312,
        "statement": "sees(bear, mouse) :- is(bear, red).",
        "description": "If the bear is red then the bear sees the mouse."
    },
    {
        "id": 7313,
        "statement": "is(bear, big) :- eats(X, bear), not eats(X, rabbit).",
        "description": "If someone eats the bear and they do not eat the rabbit then the bear is big."
    },
    {
        "id": 7314,
        "statement": "needs(X, rabbit) :- eats(X, mouse).",
        "description": "If someone eats the mouse then they need the rabbit."
    },
    {
        "id": 7315,
        "statement": "is(tiger, big) :- sees(tiger, bear), needs(bear, mouse).",
        "description": "If the tiger sees the bear and the bear needs the mouse then the tiger is big."
    },
    {
        "id": 7316,
        "statement": "eats(X, mouse) :- sees(X, mouse).",
        "description": "If someone sees the mouse then they eat the mouse."
    },
    {
        "id": 7317,
        "statement": "is(tiger, young) :- needs(X, rabbit), needs(X, tiger).",
        "description": "If someone needs the rabbit and they need the tiger then the tiger is young."
    },
    {
        "id": 7318,
        "statement": "is(bald_eagle, red) :- eats(X, bald_eagle).",
        "description": "If someone eats the bald eagle then the bald eagle is red."
    },
    {
        "id": 7319,
        "statement": "eats(lion, squirrel) :- is(bald_eagle, big), chases(bald_eagle, lion).",
        "description": "If the bald eagle is big and the bald eagle chases the lion then the lion eats the squirrel."
    },
    {
        "id": 7320,
        "statement": "chases(rabbit, bald_eagle) :- eats(X, lion), eats(lion, rabbit).",
        "description": "If someone eats the lion and the lion eats the rabbit then the rabbit chases the bald eagle."
    },
    {
        "id": 7321,
        "statement": "eats(rabbit, squirrel) :- needs(X, squirrel), chases(X, rabbit).",
        "description": "If someone needs the squirrel and they chase the rabbit then the rabbit eats the squirrel."
    },
    {
        "id": 7322,
        "statement": "is(X, round) :- chases(X, squirrel).",
        "description": "If someone chases the squirrel then they are round."
    },
    {
        "id": 7323,
        "statement": "needs(X, squirrel) :- eats(X, bald_eagle).",
        "description": "If someone eats the bald eagle then they need the squirrel."
    },
    {
        "id": 7324,
        "statement": "needs(X, lion) :- chases(X, lion).",
        "description": "If someone chases the lion then they need the lion."
    },
    {
        "id": 7325,
        "statement": "chases(squirrel, lion) :- needs(X, squirrel).",
        "description": "If someone needs the squirrel then the squirrel chases the lion."
    },
    {
        "id": 7326,
        "statement": "is(X, young) :- is(X, quiet), is(X, kind).",
        "description": "If something is quiet and kind then it is young."
    },
    {
        "id": 7327,
        "statement": "is(X, big) :- is(X, quiet), is(X, cold).",
        "description": "All quiet, cold things are big."
    },
    {
        "id": 7328,
        "statement": "is(X, kind) :- is(X, nice), not is(X, cold).",
        "description": "If something is nice and not cold then it is kind."
    },
    {
        "id": 7329,
        "statement": "is(X, kind) :- is(X, furry).",
        "description": "All furry things are kind."
    },
    {
        "id": 7330,
        "statement": "is(X, quiet) :- is(X, big).",
        "description": "Big things are quiet."
    },
    {
        "id": 7331,
        "statement": "is(X, cold) :- is(X, big), is(X, rough).",
        "description": "Big, rough things are cold."
    },
    {
        "id": 7332,
        "statement": "is(gary, red) :- is(gary, blue), is(gary, quiet).",
        "description": "If Gary is blue and Gary is quiet then Gary is red."
    },
    {
        "id": 7333,
        "statement": "is(X, blue) :- is(X, round), is(X, big).",
        "description": "Round, big things are blue."
    },
    {
        "id": 7334,
        "statement": "is(X, quiet) :- is(X, round), is(X, blue).",
        "description": "If something is round and blue then it is quiet."
    },
    {
        "id": 7335,
        "statement": "is(X, blue) :- is(X, rough), is(X, cold).",
        "description": "All rough, cold people are blue."
    },
    {
        "id": 7336,
        "statement": "is(X, red) :- is(X, cold), is(X, big).",
        "description": "Cold, big people are red."
    },
    {
        "id": 7337,
        "statement": "is(X, quiet) :- is(X, red), is(X, big).",
        "description": "If someone is red and big then they are quiet."
    },
    {
        "id": 7338,
        "statement": "is(anne, rough) :- is(anne, quiet), is(anne, red).",
        "description": "If Anne is quiet and Anne is red then Anne is rough."
    },
    {
        "id": 7339,
        "statement": "is(X, nice) :- is(X, red), is(X, rough).",
        "description": "If someone is red and rough then they are nice."
    },
    {
        "id": 7340,
        "statement": "is(X, white) :- is(X, cold), is(X, green).",
        "description": "All cold, green people are white."
    },
    {
        "id": 7341,
        "statement": "is(X, smart) :- is(X, kind), is(X, quiet).",
        "description": "All kind, quiet people are smart."
    },
    {
        "id": 7342,
        "statement": "is(X, kind) :- is(X, furry), is(X, white).",
        "description": "All furry, white people are kind."
    },
    {
        "id": 7343,
        "statement": "is(X, green) :- is(X, smart), is(X, white).",
        "description": "If someone is smart and white then they are green."
    },
    {
        "id": 7344,
        "statement": "likes(dog, lion) :- needs(X, dog), chases(dog, lion).",
        "description": "If someone needs the dog and the dog chases the lion then the dog likes the lion."
    },
    {
        "id": 7345,
        "statement": "chases(X, bald_eagle) :- chases(X, lion).",
        "description": "If someone chases the lion then they chase the bald eagle."
    },
    {
        "id": 7346,
        "statement": "chases(X, lion) :- is(X, nice), chases(X, dog).",
        "description": "If someone is nice and they chase the dog then they chase the lion."
    },
    {
        "id": 7347,
        "statement": "chases(squirrel, dog) :- likes(squirrel, bald_eagle).",
        "description": "If the squirrel likes the bald eagle then the squirrel chases the dog."
    },
    {
        "id": 7348,
        "statement": "needs(X, squirrel) :- chases(X, bald_eagle), likes(bald_eagle, lion).",
        "description": "If someone chases the bald eagle and the bald eagle likes the lion then they need the squirrel."
    },
    {
        "id": 7349,
        "statement": "chases(bald_eagle, lion) :- needs(X, squirrel), chases(squirrel, bald_eagle).",
        "description": "If someone needs the squirrel and the squirrel chases the bald eagle then the bald eagle chases the lion."
    },
    {
        "id": 7350,
        "statement": "needs(X, dog) :- needs(X, squirrel), is(X, kind).",
        "description": "If someone needs the squirrel and they are kind then they need the dog."
    },
    {
        "id": 7351,
        "statement": "chases(rabbit, tiger) :- eats(rabbit, mouse).",
        "description": "If the rabbit eats the mouse then the rabbit chases the tiger."
    },
    {
        "id": 7352,
        "statement": "needs(cat, tiger) :- needs(cat, mouse), needs(mouse, cat).",
        "description": "If the cat needs the mouse and the mouse needs the cat then the cat needs the tiger."
    },
    {
        "id": 7353,
        "statement": "chases(X, tiger) :- is(X, green).",
        "description": "If someone is green then they chase the tiger."
    },
    {
        "id": 7354,
        "statement": "is(X, young) :- eats(X, rabbit).",
        "description": "If someone eats the rabbit then they are young."
    },
    {
        "id": 7355,
        "statement": "is(rabbit, young) :- chases(rabbit, cat), is(cat, blue).",
        "description": "If the rabbit chases the cat and the cat is blue then the rabbit is young."
    },
    {
        "id": 7356,
        "statement": "eats(tiger, rabbit) :- chases(X, tiger).",
        "description": "If someone chases the tiger then the tiger eats the rabbit."
    },
    {
        "id": 7357,
        "statement": "is(X, round) :- is(X, nice), is(X, red).",
        "description": "All nice, red people are round."
    },
    {
        "id": 7358,
        "statement": "is(X, blue) :- is(X, quiet), is(X, white).",
        "description": "If someone is quiet and white then they are blue."
    },
    {
        "id": 7359,
        "statement": "is(anne, round) :- is(anne, red), is(anne, white).",
        "description": "If Anne is red and Anne is white then Anne is round."
    },
    {
        "id": 7360,
        "statement": "is(X, white) :- is(X, round).",
        "description": "If someone is round then they are white."
    },
    {
        "id": 7361,
        "statement": "sees(X, lion) :- eats(X, squirrel).",
        "description": "If someone eats the squirrel then they see the lion."
    },
    {
        "id": 7362,
        "statement": "eats(squirrel, mouse) :- sees(X, squirrel).",
        "description": "If someone sees the squirrel then the squirrel eats the mouse."
    },
    {
        "id": 7363,
        "statement": "visits(X, rabbit) :- visits(X, squirrel).",
        "description": "If someone visits the squirrel then they visit the rabbit."
    },
    {
        "id": 7364,
        "statement": "is(X, kind) :- visits(X, squirrel).",
        "description": "If someone visits the squirrel then they are kind."
    },
    {
        "id": 7365,
        "statement": "sees(mouse, rabbit) :- visits(X, mouse).",
        "description": "If someone visits the mouse then the mouse sees the rabbit."
    },
    {
        "id": 7366,
        "statement": "eats(X, squirrel) :- eats(X, mouse), visits(X, mouse).",
        "description": "If someone eats the mouse and they visit the mouse then they eat the squirrel."
    },
    {
        "id": 7367,
        "statement": "is(rabbit, nice) :- eats(X, rabbit).",
        "description": "If someone eats the rabbit then the rabbit is nice."
    },
    {
        "id": 7368,
        "statement": "eats(lion, mouse) :- sees(squirrel, lion).",
        "description": "If the squirrel sees the lion then the lion eats the mouse."
    },
    {
        "id": 7369,
        "statement": "is(X, furry) :- is(X, rough), is(X, round).",
        "description": "All rough, round people are furry."
    },
    {
        "id": 7370,
        "statement": "is(X, round) :- is(X, young), is(X, white).",
        "description": "Young, white people are round."
    },
    {
        "id": 7371,
        "statement": "is(X, young) :- is(X, nice), is(X, white).",
        "description": "All nice, white people are young."
    },
    {
        "id": 7372,
        "statement": "is(X, white) :- is(X, quiet).",
        "description": "If someone is quiet then they are white."
    },
    {
        "id": 7373,
        "statement": "is(X, nice) :- is(X, rough), is(X, white).",
        "description": "Rough, white people are nice."
    },
    {
        "id": 7374,
        "statement": "is(rabbit, green) :- eats(X, bald_eagle), sees(X, rabbit).",
        "description": "If something eats the bald eagle and it sees the rabbit then the rabbit is green."
    },
    {
        "id": 7375,
        "statement": "sees(X, tiger) :- likes(X, tiger).",
        "description": "If something likes the tiger then it sees the tiger."
    },
    {
        "id": 7376,
        "statement": "likes(X, cow) :- is(X, kind), is(X, big).",
        "description": "If something is kind and big then it likes the cow."
    },
    {
        "id": 7377,
        "statement": "is(X, big) :- sees(X, cow).",
        "description": "If something sees the cow then it is big."
    },
    {
        "id": 7378,
        "statement": "likes(cow, rabbit) :- likes(X, cow).",
        "description": "If something likes the cow then the cow likes the rabbit."
    },
    {
        "id": 7379,
        "statement": "likes(rabbit, tiger) :- likes(X, rabbit), is(X, big).",
        "description": "If something likes the rabbit and it is big then the rabbit likes the tiger."
    },
    {
        "id": 7380,
        "statement": "eats(tiger, bald_eagle) :- likes(X, tiger).",
        "description": "If something likes the tiger then the tiger eats the bald eagle."
    },
    {
        "id": 7381,
        "statement": "eats(cow, rabbit) :- eats(X, cow), is(X, kind).",
        "description": "If something eats the cow and it is kind then the cow eats the rabbit."
    },
    {
        "id": 7382,
        "statement": "is(tiger, rough) :- is(tiger, kind), is(tiger, big).",
        "description": "If the tiger is kind and the tiger is big then the tiger is rough."
    },
    {
        "id": 7383,
        "statement": "is(X, red) :- is(X, kind), is(X, green).",
        "description": "All kind, green people are red."
    },
    {
        "id": 7384,
        "statement": "is(X, kind) :- is(X, green), is(X, quiet).",
        "description": "Green, quiet people are kind."
    },
    {
        "id": 7385,
        "statement": "is(X, quiet) :- is(X, red), is(X, kind).",
        "description": "If someone is red and kind then they are quiet."
    },
    {
        "id": 7386,
        "statement": "is(X, green) :- is(X, quiet), is(X, smart).",
        "description": "If something is quiet and smart then it is green."
    },
    {
        "id": 7387,
        "statement": "is(X, furry) :- is(X, green), is(X, quiet).",
        "description": "All green, quiet things are furry."
    },
    {
        "id": 7388,
        "statement": "is(X, quiet) :- is(X, cold), is(X, kind).",
        "description": "If something is cold and kind then it is quiet."
    },
    {
        "id": 7389,
        "statement": "is(X, cold) :- is(X, big), is(X, quiet).",
        "description": "All big, quiet things are cold."
    },
    {
        "id": 7390,
        "statement": "is(X, cold) :- is(X, furry), is(X, quiet).",
        "description": "All furry, quiet things are cold."
    },
    {
        "id": 7391,
        "statement": "is(X, quiet) :- is(X, green), is(X, smart).",
        "description": "All green, smart things are quiet."
    },
    {
        "id": 7392,
        "statement": "visits(X, lion) :- visits(X, tiger).",
        "description": "If someone visits the tiger then they visit the lion."
    },
    {
        "id": 7393,
        "statement": "chases(X, dog) :- is(X, blue), not is(X, big).",
        "description": "If someone is blue and not big then they chase the dog."
    },
    {
        "id": 7394,
        "statement": "chases(tiger, lion) :- chases(dog, tiger).",
        "description": "If the dog chases the tiger then the tiger chases the lion."
    },
    {
        "id": 7395,
        "statement": "is(dog, cold) :- chases(X, dog), eats(X, dog).",
        "description": "If someone chases the dog and they eat the dog then the dog is cold."
    },
    {
        "id": 7396,
        "statement": "eats(dog, lion) :- is(X, cold), chases(X, dog).",
        "description": "If someone is cold and they chase the dog then the dog eats the lion."
    },
    {
        "id": 7397,
        "statement": "chases(tiger, dog) :- eats(X, tiger).",
        "description": "If someone eats the tiger then the tiger chases the dog."
    },
    {
        "id": 7398,
        "statement": "chases(dog, tiger) :- chases(X, dog).",
        "description": "If someone chases the dog then the dog chases the tiger."
    },
    {
        "id": 7399,
        "statement": "is(X, young) :- chases(X, rabbit).",
        "description": "If someone chases the rabbit then they are young."
    },
    {
        "id": 7400,
        "statement": "eats(X, dog) :- chases(X, lion).",
        "description": "If someone chases the lion then they eat the dog."
    },
    {
        "id": 7401,
        "statement": "likes(X, dog) :- sees(X, bald_eagle).",
        "description": "If something sees the bald eagle then it likes the dog."
    },
    {
        "id": 7402,
        "statement": "visits(X, dog) :- is(X, big).",
        "description": "If something is big then it visits the dog."
    },
    {
        "id": 7403,
        "statement": "sees(tiger, rabbit) :- sees(X, bald_eagle), likes(bald_eagle, tiger).",
        "description": "If something sees the bald eagle and the bald eagle likes the tiger then the tiger sees the rabbit."
    },
    {
        "id": 7404,
        "statement": "is(dog, big) :- is(X, round), not sees(X, dog).",
        "description": "If something is round and it does not see the dog then the dog is big."
    },
    {
        "id": 7405,
        "statement": "is(bald_eagle, kind) :- visits(bald_eagle, dog).",
        "description": "If the bald eagle visits the dog then the bald eagle is kind."
    },
    {
        "id": 7406,
        "statement": "visits(rabbit, dog) :- not likes(tiger, rabbit).",
        "description": "If the tiger does not like the rabbit then the rabbit visits the dog."
    },
    {
        "id": 7407,
        "statement": "is(rabbit, nice) :- sees(X, rabbit).",
        "description": "If something sees the rabbit then the rabbit is nice."
    },
    {
        "id": 7408,
        "statement": "is(X, round) :- visits(X, dog).",
        "description": "If something visits the dog then it is round."
    },
    {
        "id": 7409,
        "statement": "is(cat, blue) :- is(X, red), likes(X, cat).",
        "description": "If someone is red and they like the cat then the cat is blue."
    },
    {
        "id": 7410,
        "statement": "likes(squirrel, mouse) :- is(X, blue), likes(X, squirrel).",
        "description": "If someone is blue and they like the squirrel then the squirrel likes the mouse."
    },
    {
        "id": 7411,
        "statement": "is(X, blue) :- likes(X, mouse), eats(mouse, squirrel).",
        "description": "If someone likes the mouse and the mouse eats the squirrel then they are blue."
    },
    {
        "id": 7412,
        "statement": "sees(X, rabbit) :- is(X, red), eats(X, mouse).",
        "description": "If someone is red and they eat the mouse then they see the rabbit."
    },
    {
        "id": 7413,
        "statement": "eats(X, cat) :- is(X, blue).",
        "description": "If someone is blue then they eat the cat."
    },
    {
        "id": 7414,
        "statement": "sees(X, squirrel) :- likes(X, rabbit).",
        "description": "If someone likes the rabbit then they see the squirrel."
    },
    {
        "id": 7415,
        "statement": "is(X, red) :- is(X, green), sees(X, squirrel).",
        "description": "If someone is green and they see the squirrel then they are red."
    },
    {
        "id": 7416,
        "statement": "likes(X, mouse) :- sees(X, squirrel).",
        "description": "If someone sees the squirrel then they like the mouse."
    },
    {
        "id": 7417,
        "statement": "is(X, young) :- is(X, cold), is(X, big).",
        "description": "Cold, big things are young."
    },
    {
        "id": 7418,
        "statement": "chases(mouse, dog) :- eats(X, mouse).",
        "description": "If someone eats the mouse then the mouse chases the dog."
    },
    {
        "id": 7419,
        "statement": "chases(X, mouse) :- is(X, round), is(X, kind).",
        "description": "If someone is round and kind then they chase the mouse."
    },
    {
        "id": 7420,
        "statement": "eats(X, mouse) :- is(X, rough).",
        "description": "If someone is rough then they eat the mouse."
    },
    {
        "id": 7421,
        "statement": "is(dog, nice) :- chases(cow, dog), eats(dog, cow).",
        "description": "If the cow chases the dog and the dog eats the cow then the dog is nice."
    },
    {
        "id": 7422,
        "statement": "sees(mouse, dog) :- is(mouse, round), eats(mouse, cow).",
        "description": "If the mouse is round and the mouse eats the cow then the mouse sees the dog."
    },
    {
        "id": 7423,
        "statement": "chases(X, lion) :- eats(X, dog).",
        "description": "If someone eats the dog then they chase the lion."
    },
    {
        "id": 7424,
        "statement": "sees(dog, mouse) :- eats(mouse, dog), chases(dog, cow).",
        "description": "If the mouse eats the dog and the dog chases the cow then the dog sees the mouse."
    },
    {
        "id": 7425,
        "statement": "is(X, big) :- is(X, round), is(X, kind).",
        "description": "All round, kind things are big."
    },
    {
        "id": 7426,
        "statement": "eats(rabbit, bald_eagle) :- is(rabbit, rough).",
        "description": "If the rabbit is rough then the rabbit eats the bald eagle."
    },
    {
        "id": 7427,
        "statement": "needs(X, bald_eagle) :- is(X, round), eats(X, rabbit).",
        "description": "If something is round and it eats the rabbit then it needs the bald eagle."
    },
    {
        "id": 7428,
        "statement": "eats(rabbit, dog) :- is(bald_eagle, kind), eats(bald_eagle, rabbit).",
        "description": "If the bald eagle is kind and the bald eagle eats the rabbit then the rabbit eats the dog."
    },
    {
        "id": 7429,
        "statement": "is(X, rough) :- needs(X, bald_eagle).",
        "description": "If something needs the bald eagle then it is rough."
    },
    {
        "id": 7430,
        "statement": "eats(bald_eagle, rabbit) :- needs(X, bald_eagle), is(bald_eagle, big).",
        "description": "If something needs the bald eagle and the bald eagle is big then the bald eagle eats the rabbit."
    },
    {
        "id": 7431,
        "statement": "is(bald_eagle, big) :- eats(rabbit, bald_eagle), needs(rabbit, bald_eagle).",
        "description": "If the rabbit eats the bald eagle and the rabbit needs the bald eagle then the bald eagle is big."
    },
    {
        "id": 7432,
        "statement": "needs(X, bald_eagle) :- eats(X, rabbit).",
        "description": "If something eats the rabbit then it needs the bald eagle."
    },
    {
        "id": 7433,
        "statement": "is(dave, cold) :- is(dave, quiet).",
        "description": "If Dave is quiet then Dave is cold."
    },
    {
        "id": 7434,
        "statement": "is(X, round) :- is(X, green), is(X, blue).",
        "description": "Green, blue people are round."
    },
    {
        "id": 7435,
        "statement": "is(X, quiet) :- is(X, furry), is(X, blue).",
        "description": "All furry, blue people are quiet."
    },
    {
        "id": 7436,
        "statement": "is(X, quiet) :- is(X, furry), is(X, rough).",
        "description": "If someone is furry and rough then they are quiet."
    },
    {
        "id": 7437,
        "statement": "needs(X, bald_eagle) :- sees(X, squirrel), is(X, nice).",
        "description": "If someone sees the squirrel and they are nice then they need the bald eagle."
    },
    {
        "id": 7438,
        "statement": "chases(X, squirrel) :- sees(X, bear).",
        "description": "If someone sees the bear then they chase the squirrel."
    },
    {
        "id": 7439,
        "statement": "chases(X, lion) :- is(X, cold).",
        "description": "If someone is cold then they chase the lion."
    },
    {
        "id": 7440,
        "statement": "sees(X, bear) :- needs(X, squirrel), is(X, blue).",
        "description": "If someone needs the squirrel and they are blue then they see the bear."
    },
    {
        "id": 7441,
        "statement": "chases(X, bald_eagle) :- needs(X, lion).",
        "description": "If someone needs the lion then they chase the bald eagle."
    },
    {
        "id": 7442,
        "statement": "chases(X, bear) :- sees(X, squirrel).",
        "description": "If someone sees the squirrel then they chase the bear."
    },
    {
        "id": 7443,
        "statement": "chases(bald_eagle, squirrel) :- sees(X, squirrel), sees(X, bald_eagle).",
        "description": "If someone sees the squirrel and they see the bald eagle then the bald eagle chases the squirrel."
    },
    {
        "id": 7444,
        "statement": "sees(X, squirrel) :- chases(X, squirrel).",
        "description": "If someone chases the squirrel then they see the squirrel."
    },
    {
        "id": 7445,
        "statement": "needs(X, tiger) :- is(X, round), likes(X, tiger).",
        "description": "If someone is round and they like the tiger then they need the tiger."
    },
    {
        "id": 7446,
        "statement": "needs(X, mouse) :- is(X, nice).",
        "description": "If someone is nice then they need the mouse."
    },
    {
        "id": 7447,
        "statement": "chases(X, rabbit) :- likes(X, bear).",
        "description": "If someone likes the bear then they chase the rabbit."
    },
    {
        "id": 7448,
        "statement": "chases(X, bear) :- chases(X, rabbit).",
        "description": "If someone chases the rabbit then they chase the bear."
    },
    {
        "id": 7449,
        "statement": "chases(mouse, tiger) :- chases(X, mouse).",
        "description": "If someone chases the mouse then the mouse chases the tiger."
    },
    {
        "id": 7450,
        "statement": "is(X, round) :- is(X, green), visits(X, cow).",
        "description": "If something is green and it visits the cow then it is round."
    },
    {
        "id": 7451,
        "statement": "is(rabbit, blue) :- is(rabbit, green).",
        "description": "If the rabbit is green then the rabbit is blue."
    },
    {
        "id": 7452,
        "statement": "is(cat, big) :- visits(X, rabbit), visits(rabbit, cat).",
        "description": "If something visits the rabbit and the rabbit visits the cat then the cat is big."
    },
    {
        "id": 7453,
        "statement": "visits(cat, squirrel) :- visits(X, cat).",
        "description": "If something visits the cat then the cat visits the squirrel."
    },
    {
        "id": 7454,
        "statement": "is(X, big) :- is(X, nice), is(X, green).",
        "description": "All nice, green people are big."
    },
    {
        "id": 7455,
        "statement": "is(X, nice) :- is(X, green), is(X, kind).",
        "description": "If someone is green and kind then they are nice."
    },
    {
        "id": 7456,
        "statement": "is(X, nice) :- is(X, furry), is(X, rough).",
        "description": "If someone is furry and rough then they are nice."
    },
    {
        "id": 7457,
        "statement": "is(X, cold) :- is(X, red), is(X, rough).",
        "description": "Red, rough people are cold."
    },
    {
        "id": 7458,
        "statement": "is(X, rough) :- is(X, nice).",
        "description": "All nice people are rough."
    },
    {
        "id": 7459,
        "statement": "is(X, blue) :- is(X, cold), is(X, nice).",
        "description": "If someone is cold and nice then they are blue."
    },
    {
        "id": 7460,
        "statement": "is(X, white) :- is(X, nice), is(X, blue).",
        "description": "If someone is nice and blue then they are white."
    },
    {
        "id": 7461,
        "statement": "is(X, rough) :- is(X, red).",
        "description": "If someone is red then they are rough."
    },
    {
        "id": 7462,
        "statement": "is(X, quiet) :- is(X, red), is(X, rough).",
        "description": "If someone is red and rough then they are quiet."
    },
    {
        "id": 7463,
        "statement": "is(X, red) :- is(X, rough), is(X, blue).",
        "description": "All rough, blue people are red."
    },
    {
        "id": 7464,
        "statement": "is(charlie, rough) :- is(charlie, blue), is(charlie, nice).",
        "description": "If Charlie is blue and Charlie is nice then Charlie is rough."
    },
    {
        "id": 7465,
        "statement": "is(X, red) :- is(X, blue), is(X, white).",
        "description": "All blue, white people are red."
    },
    {
        "id": 7466,
        "statement": "is(anne, furry) :- is(anne, smart).",
        "description": "If Anne is smart then Anne is furry."
    },
    {
        "id": 7467,
        "statement": "is(harry, young) :- is(harry, furry).",
        "description": "If Harry is furry then Harry is young."
    },
    {
        "id": 7468,
        "statement": "is(erin, smart) :- is(erin, cold), is(erin, red).",
        "description": "If Erin is cold and Erin is red then Erin is smart."
    },
    {
        "id": 7469,
        "statement": "is(erin, furry) :- is(erin, white).",
        "description": "If Erin is white then Erin is furry."
    },
    {
        "id": 7470,
        "statement": "is(X, red) :- is(X, rough), is(X, kind).",
        "description": "Rough, kind people are red."
    },
    {
        "id": 7471,
        "statement": "is(anne, rough) :- is(anne, big), is(anne, cold).",
        "description": "If Anne is big and Anne is cold then Anne is rough."
    },
    {
        "id": 7472,
        "statement": "is(X, kind) :- is(X, round), is(X, big).",
        "description": "All round, big people are kind."
    },
    {
        "id": 7473,
        "statement": "is(anne, green) :- is(anne, rough), is(anne, red).",
        "description": "If Anne is rough and Anne is red then Anne is green."
    },
    {
        "id": 7474,
        "statement": "is(X, rough) :- is(X, red), is(X, green).",
        "description": "Red, green things are rough."
    },
    {
        "id": 7475,
        "statement": "is(erin, blue) :- is(erin, kind), is(erin, rough).",
        "description": "If Erin is kind and Erin is rough then Erin is blue."
    },
    {
        "id": 7476,
        "statement": "is(X, red) :- is(X, smart), is(X, rough).",
        "description": "All smart, rough things are red."
    },
    {
        "id": 7477,
        "statement": "is(X, kind) :- is(X, rough), is(X, young).",
        "description": "All rough, young things are kind."
    },
    {
        "id": 7478,
        "statement": "eats(X, rabbit) :- needs(X, dog).",
        "description": "If something needs the dog then it eats the rabbit."
    },
    {
        "id": 7479,
        "statement": "eats(X, rabbit) :- eats(X, mouse).",
        "description": "If something eats the mouse then it eats the rabbit."
    },
    {
        "id": 7480,
        "statement": "eats(X, bear) :- chases(X, rabbit), chases(rabbit, bear).",
        "description": "If something chases the rabbit and the rabbit chases the bear then it eats the bear."
    },
    {
        "id": 7481,
        "statement": "eats(bear, mouse) :- needs(X, bear).",
        "description": "If something needs the bear then the bear eats the mouse."
    },
    {
        "id": 7482,
        "statement": "needs(X, bear) :- eats(X, mouse), eats(X, rabbit).",
        "description": "If something eats the mouse and it eats the rabbit then it needs the bear."
    },
    {
        "id": 7483,
        "statement": "chases(X, mouse) :- needs(X, mouse), is(X, big).",
        "description": "If something needs the mouse and it is big then it chases the mouse."
    },
    {
        "id": 7484,
        "statement": "needs(X, bear) :- eats(X, bear), needs(bear, mouse).",
        "description": "If something eats the bear and the bear needs the mouse then it needs the bear."
    },
    {
        "id": 7485,
        "statement": "eats(X, mouse) :- needs(X, dog).",
        "description": "If something needs the dog then it eats the mouse."
    },
    {
        "id": 7486,
        "statement": "sees(X, cat) :- eats(X, cat).",
        "description": "If something eats the cat then it sees the cat."
    },
    {
        "id": 7487,
        "statement": "sees(cat, lion) :- sees(bald_eagle, cat).",
        "description": "If the bald eagle sees the cat then the cat sees the lion."
    },
    {
        "id": 7488,
        "statement": "eats(lion, mouse) :- is(X, young), sees(X, lion).",
        "description": "If something is young and it sees the lion then the lion eats the mouse."
    },
    {
        "id": 7489,
        "statement": "is(X, nice) :- sees(X, lion), is(lion, green).",
        "description": "If something sees the lion and the lion is green then it is nice."
    },
    {
        "id": 7490,
        "statement": "sees(bald_eagle, cat) :- eats(X, bald_eagle).",
        "description": "If something eats the bald eagle then the bald eagle sees the cat."
    },
    {
        "id": 7491,
        "statement": "eats(X, cat) :- is(X, nice).",
        "description": "If something is nice then it eats the cat."
    },
    {
        "id": 7492,
        "statement": "chases(X, bald_eagle) :- chases(X, lion), not eats(X, lion).",
        "description": "If something chases the lion and it does not eat the lion then it chases the bald eagle."
    },
    {
        "id": 7493,
        "statement": "eats(bald_eagle, cat) :- is(bald_eagle, green).",
        "description": "If the bald eagle is green then the bald eagle eats the cat."
    },
    {
        "id": 7494,
        "statement": "likes(X, bald_eagle) :- needs(X, bald_eagle), not likes(X, squirrel).",
        "description": "If something needs the bald eagle and it does not like the squirrel then it likes the bald eagle."
    },
    {
        "id": 7495,
        "statement": "is(X, nice) :- needs(X, rabbit), chases(rabbit, squirrel).",
        "description": "If something needs the rabbit and the rabbit chases the squirrel then it is nice."
    },
    {
        "id": 7496,
        "statement": "needs(squirrel, cat) :- is(X, red), needs(X, squirrel).",
        "description": "If something is red and it needs the squirrel then the squirrel needs the cat."
    },
    {
        "id": 7497,
        "statement": "needs(X, bald_eagle) :- is(X, red).",
        "description": "If something is red then it needs the bald eagle."
    },
    {
        "id": 7498,
        "statement": "likes(X, cat) :- is(X, round).",
        "description": "If something is round then it likes the cat."
    },
    {
        "id": 7499,
        "statement": "needs(bald_eagle, squirrel) :- likes(cat, bald_eagle).",
        "description": "If the cat likes the bald eagle then the bald eagle needs the squirrel."
    },
    {
        "id": 7500,
        "statement": "chases(X, cat) :- likes(X, bald_eagle), chases(bald_eagle, cat).",
        "description": "If something likes the bald eagle and the bald eagle chases the cat then it chases the cat."
    },
    {
        "id": 7501,
        "statement": "is(X, red) :- is(X, nice), not is(X, round).",
        "description": "If something is nice and not round then it is red."
    },
    {
        "id": 7502,
        "statement": "chases(squirrel, bald_eagle) :- chases(cat, squirrel), not chases(squirrel, cat).",
        "description": "If the cat chases the squirrel and the squirrel does not chase the cat then the squirrel chases the bald eagle."
    },
    {
        "id": 7503,
        "statement": "is(gary, rough) :- is(gary, green), is(gary, young).",
        "description": "If Gary is green and Gary is young then Gary is rough."
    },
    {
        "id": 7504,
        "statement": "is(charlie, cold) :- is(charlie, smart).",
        "description": "If Charlie is smart then Charlie is cold."
    },
    {
        "id": 7505,
        "statement": "is(X, young) :- is(X, cold).",
        "description": "If someone is cold then they are young."
    },
    {
        "id": 7506,
        "statement": "is(X, round) :- is(X, young), is(X, rough).",
        "description": "If someone is young and rough then they are round."
    },
    {
        "id": 7507,
        "statement": "is(gary, smart) :- is(gary, young), is(gary, round).",
        "description": "If Gary is young and Gary is round then Gary is smart."
    },
    {
        "id": 7508,
        "statement": "chases(lion, bald_eagle) :- is(lion, blue).",
        "description": "If the lion is blue then the lion chases the bald eagle."
    },
    {
        "id": 7509,
        "statement": "is(lion, big) :- eats(X, bald_eagle), eats(X, lion).",
        "description": "If someone eats the bald eagle and they eat the lion then the lion is big."
    },
    {
        "id": 7510,
        "statement": "is(bald_eagle, nice) :- eats(X, bald_eagle).",
        "description": "If someone eats the bald eagle then the bald eagle is nice."
    },
    {
        "id": 7511,
        "statement": "eats(X, lion) :- eats(X, bald_eagle), is(bald_eagle, nice).",
        "description": "If someone eats the bald eagle and the bald eagle is nice then they eat the lion."
    },
    {
        "id": 7512,
        "statement": "is(tiger, nice) :- visits(squirrel, tiger).",
        "description": "If the squirrel visits the tiger then the tiger is nice."
    },
    {
        "id": 7513,
        "statement": "eats(X, bald_eagle) :- is(X, big).",
        "description": "If someone is big then they eat the bald eagle."
    },
    {
        "id": 7514,
        "statement": "visits(lion, tiger) :- visits(X, lion), visits(X, tiger).",
        "description": "If someone visits the lion and they visit the tiger then the lion visits the tiger."
    },
    {
        "id": 7515,
        "statement": "is(bob, round) :- is(bob, blue).",
        "description": "If Bob is blue then Bob is round."
    },
    {
        "id": 7516,
        "statement": "is(charlie, nice) :- not is(charlie, young).",
        "description": "If Charlie is not young then Charlie is nice."
    },
    {
        "id": 7517,
        "statement": "eats(X, cat) :- chases(X, mouse).",
        "description": "If something chases the mouse then it eats the cat."
    },
    {
        "id": 7518,
        "statement": "is(bald_eagle, young) :- eats(cat, bald_eagle), visits(cat, bald_eagle).",
        "description": "If the cat eats the bald eagle and the cat visits the bald eagle then the bald eagle is young."
    },
    {
        "id": 7519,
        "statement": "chases(X, squirrel) :- eats(X, cat).",
        "description": "If something eats the cat then it chases the squirrel."
    },
    {
        "id": 7520,
        "statement": "chases(cat, mouse) :- chases(X, cat), eats(X, bald_eagle).",
        "description": "If something chases the cat and it eats the bald eagle then the cat chases the mouse."
    },
    {
        "id": 7521,
        "statement": "visits(squirrel, mouse) :- eats(squirrel, bald_eagle), not is(squirrel, big).",
        "description": "If the squirrel eats the bald eagle and the squirrel is not big then the squirrel visits the mouse."
    },
    {
        "id": 7522,
        "statement": "is(X, kind) :- eats(X, cat), eats(cat, mouse).",
        "description": "If something eats the cat and the cat eats the mouse then it is kind."
    },
    {
        "id": 7523,
        "statement": "chases(squirrel, mouse) :- is(X, kind), chases(X, squirrel).",
        "description": "If something is kind and it chases the squirrel then the squirrel chases the mouse."
    },
    {
        "id": 7524,
        "statement": "needs(X, dog) :- chases(X, rabbit), is(rabbit, round).",
        "description": "If someone chases the rabbit and the rabbit is round then they need the dog."
    },
    {
        "id": 7525,
        "statement": "eats(X, dog) :- is(X, nice).",
        "description": "If someone is nice then they eat the dog."
    },
    {
        "id": 7526,
        "statement": "is(dog, rough) :- needs(X, dog).",
        "description": "If someone needs the dog then the dog is rough."
    },
    {
        "id": 7527,
        "statement": "chases(X, dog) :- eats(X, dog).",
        "description": "If someone eats the dog then they chase the dog."
    },
    {
        "id": 7528,
        "statement": "chases(lion, dog) :- is(X, rough), not eats(X, lion).",
        "description": "If someone is rough and they do not eat the lion then the lion chases the dog."
    },
    {
        "id": 7529,
        "statement": "is(X, rough) :- is(X, round), chases(X, lion).",
        "description": "If someone is round and they chase the lion then they are rough."
    },
    {
        "id": 7530,
        "statement": "is(rabbit, round) :- chases(X, rabbit).",
        "description": "If someone chases the rabbit then the rabbit is round."
    },
    {
        "id": 7531,
        "statement": "is(X, young) :- is(X, blue), is(X, red).",
        "description": "If someone is blue and red then they are young."
    },
    {
        "id": 7532,
        "statement": "is(X, young) :- is(X, rough).",
        "description": "If someone is rough then they are young."
    },
    {
        "id": 7533,
        "statement": "is(fiona, round) :- is(fiona, red).",
        "description": "If Fiona is red then Fiona is round."
    },
    {
        "id": 7534,
        "statement": "is(X, red) :- is(X, young), is(X, round).",
        "description": "Young, round people are red."
    },
    {
        "id": 7535,
        "statement": "is(X, nice) :- is(X, red).",
        "description": "If something is red then it is nice."
    },
    {
        "id": 7536,
        "statement": "is(X, white) :- is(X, green), is(X, cold).",
        "description": "All green, cold things are white."
    },
    {
        "id": 7537,
        "statement": "is(fiona, young) :- is(fiona, round), is(fiona, cold).",
        "description": "If Fiona is round and Fiona is cold then Fiona is young."
    },
    {
        "id": 7538,
        "statement": "is(X, white) :- is(X, red), is(X, young).",
        "description": "All red, young things are white."
    },
    {
        "id": 7539,
        "statement": "is(X, young) :- is(X, cold), is(X, nice).",
        "description": "If something is cold and nice then it is young."
    },
    {
        "id": 7540,
        "statement": "is(charlie, nice) :- is(charlie, young), is(charlie, cold).",
        "description": "If Charlie is young and Charlie is cold then Charlie is nice."
    },
    {
        "id": 7541,
        "statement": "is(X, kind) :- is(X, cold).",
        "description": "If something is cold then it is kind."
    },
    {
        "id": 7542,
        "statement": "is(X, rough) :- is(X, green), is(X, cold).",
        "description": "All green, cold things are rough."
    },
    {
        "id": 7543,
        "statement": "is(X, round) :- is(X, kind).",
        "description": "Kind things are round."
    },
    {
        "id": 7544,
        "statement": "is(X, red) :- likes(X, cow).",
        "description": "If someone likes the cow then they are red."
    },
    {
        "id": 7545,
        "statement": "chases(bear, cow) :- visits(X, bear).",
        "description": "If someone visits the bear then the bear chases the cow."
    },
    {
        "id": 7546,
        "statement": "likes(X, bear) :- chases(X, tiger), likes(X, dog).",
        "description": "If someone chases the tiger and they like the dog then they like the bear."
    },
    {
        "id": 7547,
        "statement": "is(bear, red) :- likes(tiger, bear), is(bear, cold).",
        "description": "If the tiger likes the bear and the bear is cold then the bear is red."
    },
    {
        "id": 7548,
        "statement": "is(X, nice) :- chases(X, bear), is(X, young).",
        "description": "If someone chases the bear and they are young then they are nice."
    },
    {
        "id": 7549,
        "statement": "is(bear, nice) :- likes(X, bear).",
        "description": "If someone likes the bear then the bear is nice."
    },
    {
        "id": 7550,
        "statement": "likes(X, dog) :- is(X, nice).",
        "description": "If someone is nice then they like the dog."
    },
    {
        "id": 7551,
        "statement": "is(X, nice) :- is(X, kind), is(X, red).",
        "description": "Kind, red things are nice."
    },
    {
        "id": 7552,
        "statement": "is(X, white) :- is(X, red), is(X, quiet).",
        "description": "If something is red and quiet then it is white."
    },
    {
        "id": 7553,
        "statement": "is(X, quiet) :- is(X, blue), is(X, kind).",
        "description": "Blue, kind things are quiet."
    },
    {
        "id": 7554,
        "statement": "is(X, smart) :- is(X, white), is(X, red).",
        "description": "If something is white and red then it is smart."
    },
    {
        "id": 7555,
        "statement": "is(cow, round) :- eats(cat, cow).",
        "description": "If the cat eats the cow then the cow is round."
    },
    {
        "id": 7556,
        "statement": "visits(cow, cat) :- visits(X, cow), is(X, round).",
        "description": "If something visits the cow and it is round then the cow visits the cat."
    },
    {
        "id": 7557,
        "statement": "sees(X, cow) :- eats(X, rabbit).",
        "description": "If something eats the rabbit then it sees the cow."
    },
    {
        "id": 7558,
        "statement": "is(X, cold) :- visits(X, cat), visits(X, dog).",
        "description": "If something visits the cat and it visits the dog then it is cold."
    },
    {
        "id": 7559,
        "statement": "is(rabbit, round) :- eats(X, rabbit), sees(X, cow).",
        "description": "If something eats the rabbit and it sees the cow then the rabbit is round."
    },
    {
        "id": 7560,
        "statement": "is(cow, kind) :- eats(X, cow).",
        "description": "If something eats the cow then the cow is kind."
    },
    {
        "id": 7561,
        "statement": "eats(X, rabbit) :- is(X, round).",
        "description": "If something is round then it eats the rabbit."
    },
    {
        "id": 7562,
        "statement": "visits(dog, cat) :- visits(X, rabbit), sees(X, dog).",
        "description": "If something visits the rabbit and it sees the dog then the dog visits the cat."
    },
    {
        "id": 7563,
        "statement": "is(X, cold) :- visits(X, bald_eagle), needs(bald_eagle, cat).",
        "description": "If something visits the bald eagle and the bald eagle needs the cat then it is cold."
    },
    {
        "id": 7564,
        "statement": "sees(X, bear) :- visits(X, bald_eagle), sees(bald_eagle, rabbit).",
        "description": "If something visits the bald eagle and the bald eagle sees the rabbit then it sees the bear."
    },
    {
        "id": 7565,
        "statement": "needs(X, cat) :- visits(X, cat).",
        "description": "If something visits the cat then it needs the cat."
    },
    {
        "id": 7566,
        "statement": "needs(bald_eagle, rabbit) :- needs(rabbit, cat), needs(rabbit, bald_eagle).",
        "description": "If the rabbit needs the cat and the rabbit needs the bald eagle then the bald eagle needs the rabbit."
    },
    {
        "id": 7567,
        "statement": "visits(X, rabbit) :- sees(X, bear).",
        "description": "If something sees the bear then it visits the rabbit."
    },
    {
        "id": 7568,
        "statement": "needs(X, bald_eagle) :- is(X, round).",
        "description": "If something is round then it needs the bald eagle."
    },
    {
        "id": 7569,
        "statement": "is(bald_eagle, young) :- needs(X, bald_eagle).",
        "description": "If something needs the bald eagle then the bald eagle is young."
    },
    {
        "id": 7570,
        "statement": "visits(bald_eagle, cat) :- is(bald_eagle, green), visits(bald_eagle, rabbit).",
        "description": "If the bald eagle is green and the bald eagle visits the rabbit then the bald eagle visits the cat."
    },
    {
        "id": 7571,
        "statement": "is(X, round) :- is(X, smart).",
        "description": "Smart people are round."
    },
    {
        "id": 7572,
        "statement": "is(X, young) :- is(X, nice), is(X, cold).",
        "description": "If someone is nice and cold then they are young."
    },
    {
        "id": 7573,
        "statement": "is(erin, nice) :- is(erin, quiet), is(erin, round).",
        "description": "If Erin is quiet and Erin is round then Erin is nice."
    },
    {
        "id": 7574,
        "statement": "is(X, smart) :- is(X, round), is(X, young).",
        "description": "All round, young people are smart."
    },
    {
        "id": 7575,
        "statement": "is(X, cold) :- is(X, nice), is(X, red).",
        "description": "Nice, red people are cold."
    },
    {
        "id": 7576,
        "statement": "is(X, round) :- is(X, young), is(X, red).",
        "description": "All young, red people are round."
    },
    {
        "id": 7577,
        "statement": "chases(X, mouse) :- is(X, kind).",
        "description": "If someone is kind then they chase the mouse."
    },
    {
        "id": 7578,
        "statement": "eats(X, tiger) :- chases(X, mouse).",
        "description": "If someone chases the mouse then they eat the tiger."
    },
    {
        "id": 7579,
        "statement": "is(X, kind) :- chases(X, tiger), chases(tiger, cow).",
        "description": "If someone chases the tiger and the tiger chases the cow then they are kind."
    },
    {
        "id": 7580,
        "statement": "is(tiger, red) :- chases(X, tiger).",
        "description": "If someone chases the tiger then the tiger is red."
    },
    {
        "id": 7581,
        "statement": "chases(X, tiger) :- visits(X, mouse).",
        "description": "If someone visits the mouse then they chase the tiger."
    },
    {
        "id": 7582,
        "statement": "chases(dog, mouse) :- chases(X, dog).",
        "description": "If someone chases the dog then the dog chases the mouse."
    },
    {
        "id": 7583,
        "statement": "eats(X, lion) :- is(X, young), likes(X, lion).",
        "description": "If something is young and it likes the lion then it eats the lion."
    },
    {
        "id": 7584,
        "statement": "likes(X, bear) :- likes(X, lion), not is(X, round).",
        "description": "If something likes the lion and it is not round then it likes the bear."
    },
    {
        "id": 7585,
        "statement": "is(X, blue) :- likes(X, bear), eats(X, rabbit).",
        "description": "If something likes the bear and it eats the rabbit then it is blue."
    },
    {
        "id": 7586,
        "statement": "likes(X, lion) :- eats(X, rabbit).",
        "description": "If something eats the rabbit then it likes the lion."
    },
    {
        "id": 7587,
        "statement": "is(bear, cold) :- eats(rabbit, bear), not eats(bear, rabbit).",
        "description": "If the rabbit eats the bear and the bear does not eat the rabbit then the bear is cold."
    },
    {
        "id": 7588,
        "statement": "likes(rabbit, lion) :- is(lion, young), needs(lion, rabbit).",
        "description": "If the lion is young and the lion needs the rabbit then the rabbit likes the lion."
    },
    {
        "id": 7589,
        "statement": "likes(bear, rabbit) :- is(bear, young).",
        "description": "If the bear is young then the bear likes the rabbit."
    },
    {
        "id": 7590,
        "statement": "needs(X, rabbit) :- eats(X, lion).",
        "description": "If something eats the lion then it needs the rabbit."
    },
    {
        "id": 7591,
        "statement": "eats(rabbit, squirrel) :- likes(X, rabbit).",
        "description": "If someone likes the rabbit then the rabbit eats the squirrel."
    },
    {
        "id": 7592,
        "statement": "likes(X, cow) :- is(X, red).",
        "description": "If someone is red then they like the cow."
    },
    {
        "id": 7593,
        "statement": "is(squirrel, red) :- needs(X, squirrel).",
        "description": "If someone needs the squirrel then the squirrel is red."
    },
    {
        "id": 7594,
        "statement": "likes(bald_eagle, rabbit) :- likes(X, bald_eagle), is(X, rough).",
        "description": "If someone likes the bald eagle and they are rough then the bald eagle likes the rabbit."
    },
    {
        "id": 7595,
        "statement": "is(X, young) :- is(X, kind), likes(X, bald_eagle).",
        "description": "If someone is kind and they like the bald eagle then they are young."
    },
    {
        "id": 7596,
        "statement": "needs(bald_eagle, squirrel) :- likes(X, bald_eagle), is(X, young).",
        "description": "If someone likes the bald eagle and they are young then the bald eagle needs the squirrel."
    },
    {
        "id": 7597,
        "statement": "likes(X, tiger) :- likes(X, bald_eagle).",
        "description": "If something likes the bald eagle then it likes the tiger."
    },
    {
        "id": 7598,
        "statement": "visits(X, rabbit) :- sees(X, bald_eagle), sees(bald_eagle, tiger).",
        "description": "If something sees the bald eagle and the bald eagle sees the tiger then it visits the rabbit."
    },
    {
        "id": 7599,
        "statement": "likes(X, bald_eagle) :- visits(X, rabbit).",
        "description": "If something visits the rabbit then it likes the bald eagle."
    },
    {
        "id": 7600,
        "statement": "visits(tiger, rabbit) :- sees(X, tiger).",
        "description": "If something sees the tiger then the tiger visits the rabbit."
    },
    {
        "id": 7601,
        "statement": "likes(X, mouse) :- is(X, red), visits(X, mouse).",
        "description": "If something is red and it visits the mouse then it likes the mouse."
    },
    {
        "id": 7602,
        "statement": "sees(mouse, tiger) :- is(mouse, nice), visits(mouse, bald_eagle).",
        "description": "If the mouse is nice and the mouse visits the bald eagle then the mouse sees the tiger."
    },
    {
        "id": 7603,
        "statement": "is(rabbit, blue) :- sees(X, rabbit).",
        "description": "If something sees the rabbit then the rabbit is blue."
    },
    {
        "id": 7604,
        "statement": "sees(X, tiger) :- likes(X, bald_eagle), not visits(X, mouse).",
        "description": "If something likes the bald eagle and it does not visit the mouse then it sees the tiger."
    },
    {
        "id": 7605,
        "statement": "is(X, young) :- is(X, cold), is(X, furry).",
        "description": "All cold, furry people are young."
    },
    {
        "id": 7606,
        "statement": "is(X, furry) :- is(X, red), is(X, nice).",
        "description": "All red, nice people are furry."
    },
    {
        "id": 7607,
        "statement": "is(bob, furry) :- is(bob, blue), is(bob, red).",
        "description": "If Bob is blue and Bob is red then Bob is furry."
    },
    {
        "id": 7608,
        "statement": "is(X, cold) :- is(X, blue), is(X, nice).",
        "description": "If someone is blue and nice then they are cold."
    },
    {
        "id": 7609,
        "statement": "is(fiona, big) :- not is(fiona, quiet).",
        "description": "If Fiona is not quiet then Fiona is big."
    },
    {
        "id": 7610,
        "statement": "is(anne, green) :- is(anne, round).",
        "description": "If Anne is round then Anne is green."
    },
    {
        "id": 7611,
        "statement": "is(X, nice) :- is(X, kind), is(X, green).",
        "description": "All kind, green people are nice."
    },
    {
        "id": 7612,
        "statement": "is(X, green) :- is(X, kind), is(X, nice).",
        "description": "If someone is kind and nice then they are green."
    },
    {
        "id": 7613,
        "statement": "is(anne, round) :- not is(anne, kind).",
        "description": "If Anne is not kind then Anne is round."
    },
    {
        "id": 7614,
        "statement": "is(gary, round) :- is(gary, green).",
        "description": "If Gary is green then Gary is round."
    },
    {
        "id": 7615,
        "statement": "is(X, quiet) :- is(X, smart), is(X, big).",
        "description": "Smart, big things are quiet."
    },
    {
        "id": 7616,
        "statement": "is(X, quiet) :- is(X, furry), is(X, red).",
        "description": "If something is furry and red then it is quiet."
    },
    {
        "id": 7617,
        "statement": "is(X, cold) :- is(X, quiet), not is(X, big).",
        "description": "If something is quiet and not big then it is cold."
    },
    {
        "id": 7618,
        "statement": "is(X, red) :- is(X, round).",
        "description": "Round things are red."
    },
    {
        "id": 7619,
        "statement": "is(X, smart) :- is(X, cold), is(X, furry).",
        "description": "All cold, furry things are smart."
    },
    {
        "id": 7620,
        "statement": "is(X, white) :- is(X, furry), is(X, blue).",
        "description": "Furry, blue people are white."
    },
    {
        "id": 7621,
        "statement": "is(X, furry) :- is(X, green).",
        "description": "All green people are furry."
    },
    {
        "id": 7622,
        "statement": "is(bob, blue) :- is(bob, smart), is(bob, red).",
        "description": "If Bob is smart and Bob is red then Bob is blue."
    },
    {
        "id": 7623,
        "statement": "is(X, green) :- is(X, blue), is(X, white).",
        "description": "Blue, white people are green."
    },
    {
        "id": 7624,
        "statement": "is(harry, smart) :- is(harry, red), is(harry, white).",
        "description": "If Harry is red and Harry is white then Harry is smart."
    },
    {
        "id": 7625,
        "statement": "is(X, blue) :- is(X, smart), is(X, furry).",
        "description": "If something is smart and furry then it is blue."
    },
    {
        "id": 7626,
        "statement": "is(fiona, green) :- is(fiona, smart), is(fiona, furry).",
        "description": "If Fiona is smart and Fiona is furry then Fiona is green."
    },
    {
        "id": 7627,
        "statement": "is(X, green) :- is(X, smart), is(X, white).",
        "description": "Smart, white things are green."
    },
    {
        "id": 7628,
        "statement": "is(X, smart) :- is(X, round), is(X, furry).",
        "description": "All round, furry things are smart."
    },
    {
        "id": 7629,
        "statement": "is(X, big) :- is(X, blue), is(X, white).",
        "description": "Blue, white things are big."
    },
    {
        "id": 7630,
        "statement": "is(tiger, round) :- eats(X, tiger), needs(tiger, cow).",
        "description": "If someone eats the tiger and the tiger needs the cow then the tiger is round."
    },
    {
        "id": 7631,
        "statement": "eats(X, cow) :- eats(X, bear), needs(bear, bald_eagle).",
        "description": "If someone eats the bear and the bear needs the bald eagle then they eat the cow."
    },
    {
        "id": 7632,
        "statement": "is(bald_eagle, big) :- needs(X, bald_eagle).",
        "description": "If someone needs the bald eagle then the bald eagle is big."
    },
    {
        "id": 7633,
        "statement": "likes(cow, tiger) :- needs(cow, tiger).",
        "description": "If the cow needs the tiger then the cow likes the tiger."
    },
    {
        "id": 7634,
        "statement": "is(cow, red) :- needs(X, cow).",
        "description": "If someone needs the cow then the cow is red."
    },
    {
        "id": 7635,
        "statement": "needs(X, tiger) :- eats(X, cow).",
        "description": "If someone eats the cow then they need the tiger."
    },
    {
        "id": 7636,
        "statement": "likes(bald_eagle, bear) :- is(X, red), eats(X, bald_eagle).",
        "description": "If someone is red and they eat the bald eagle then the bald eagle likes the bear."
    },
    {
        "id": 7637,
        "statement": "needs(X, bald_eagle) :- eats(X, cow).",
        "description": "If someone eats the cow then they need the bald eagle."
    },
    {
        "id": 7638,
        "statement": "is(X, young) :- is(X, cold), not is(X, white).",
        "description": "If someone is cold and not white then they are young."
    },
    {
        "id": 7639,
        "statement": "is(X, nice) :- is(X, white), is(X, furry).",
        "description": "All white, furry people are nice."
    },
    {
        "id": 7640,
        "statement": "is(X, nice) :- is(X, cold), is(X, young).",
        "description": "All cold, young people are nice."
    },
    {
        "id": 7641,
        "statement": "is(X, nice) :- is(X, red), is(X, young).",
        "description": "If someone is red and young then they are nice."
    },
    {
        "id": 7642,
        "statement": "is(X, nice) :- is(X, furry), not is(X, cold).",
        "description": "If someone is furry and not cold then they are nice."
    },
    {
        "id": 7643,
        "statement": "is(bald_eagle, red) :- sees(X, bald_eagle).",
        "description": "If something sees the bald eagle then the bald eagle is red."
    },
    {
        "id": 7644,
        "statement": "chases(X, mouse) :- is(X, round).",
        "description": "If something is round then it chases the mouse."
    },
    {
        "id": 7645,
        "statement": "is(X, big) :- likes(X, bald_eagle).",
        "description": "If something likes the bald eagle then it is big."
    },
    {
        "id": 7646,
        "statement": "is(cat, round) :- chases(cat, dog).",
        "description": "If the cat chases the dog then the cat is round."
    },
    {
        "id": 7647,
        "statement": "is(bald_eagle, round) :- not chases(cat, bald_eagle).",
        "description": "If the cat does not chase the bald eagle then the bald eagle is round."
    },
    {
        "id": 7648,
        "statement": "chases(X, cat) :- chases(X, mouse).",
        "description": "If something chases the mouse then it chases the cat."
    },
    {
        "id": 7649,
        "statement": "likes(dog, bald_eagle) :- is(X, cold), sees(X, dog).",
        "description": "If something is cold and it sees the dog then the dog likes the bald eagle."
    },
    {
        "id": 7650,
        "statement": "sees(cat, bald_eagle) :- chases(cat, mouse).",
        "description": "If the cat chases the mouse then the cat sees the bald eagle."
    },
    {
        "id": 7651,
        "statement": "likes(X, bear) :- is(X, big).",
        "description": "If someone is big then they like the bear."
    },
    {
        "id": 7652,
        "statement": "likes(X, rabbit) :- likes(X, squirrel), is(squirrel, round).",
        "description": "If someone likes the squirrel and the squirrel is round then they like the rabbit."
    },
    {
        "id": 7653,
        "statement": "is(X, round) :- likes(X, rabbit), is(X, kind).",
        "description": "If someone likes the rabbit and they are kind then they are round."
    },
    {
        "id": 7654,
        "statement": "chases(bear, squirrel) :- is(bear, nice).",
        "description": "If the bear is nice then the bear chases the squirrel."
    },
    {
        "id": 7655,
        "statement": "is(X, round) :- needs(X, squirrel), chases(X, rabbit).",
        "description": "If someone needs the squirrel and they chase the rabbit then they are round."
    },
    {
        "id": 7656,
        "statement": "chases(X, bear) :- likes(X, rabbit), likes(X, squirrel).",
        "description": "If someone likes the rabbit and they like the squirrel then they chase the bear."
    },
    {
        "id": 7657,
        "statement": "is(rabbit, big) :- likes(bear, rabbit).",
        "description": "If the bear likes the rabbit then the rabbit is big."
    },
    {
        "id": 7658,
        "statement": "is(X, green) :- visits(X, mouse).",
        "description": "If something visits the mouse then it is green."
    },
    {
        "id": 7659,
        "statement": "is(cow, blue) :- needs(X, cow).",
        "description": "If something needs the cow then the cow is blue."
    },
    {
        "id": 7660,
        "statement": "visits(cow, bald_eagle) :- needs(cow, mouse), needs(cow, squirrel).",
        "description": "If the cow needs the mouse and the cow needs the squirrel then the cow visits the bald eagle."
    },
    {
        "id": 7661,
        "statement": "visits(X, bald_eagle) :- is(X, rough).",
        "description": "If something is rough then it visits the bald eagle."
    },
    {
        "id": 7662,
        "statement": "needs(X, mouse) :- is(X, blue).",
        "description": "If something is blue then it needs the mouse."
    },
    {
        "id": 7663,
        "statement": "is(squirrel, kind) :- is(X, blue), visits(X, squirrel).",
        "description": "If something is blue and it visits the squirrel then the squirrel is kind."
    },
    {
        "id": 7664,
        "statement": "needs(X, cow) :- visits(X, bald_eagle).",
        "description": "If something visits the bald eagle then it needs the cow."
    },
    {
        "id": 7665,
        "statement": "is(X, kind) :- sees(X, mouse).",
        "description": "If something sees the mouse then it is kind."
    },
    {
        "id": 7666,
        "statement": "is(mouse, nice) :- visits(X, mouse), not is(X, kind).",
        "description": "If something visits the mouse and it is not kind then the mouse is nice."
    },
    {
        "id": 7667,
        "statement": "is(X, blue) :- is(X, nice), not is(X, green).",
        "description": "If something is nice and not green then it is blue."
    },
    {
        "id": 7668,
        "statement": "visits(dog, cat) :- visits(X, dog).",
        "description": "If something visits the dog then the dog visits the cat."
    },
    {
        "id": 7669,
        "statement": "is(rabbit, red) :- visits(X, rabbit).",
        "description": "If something visits the rabbit then the rabbit is red."
    },
    {
        "id": 7670,
        "statement": "visits(X, rabbit) :- is(X, nice).",
        "description": "If something is nice then it visits the rabbit."
    },
    {
        "id": 7671,
        "statement": "sees(X, rabbit) :- visits(X, bear), not is(bear, blue).",
        "description": "If something visits the bear and the bear is not blue then it sees the rabbit."
    },
    {
        "id": 7672,
        "statement": "is(X, rough) :- is(X, white), is(X, nice).",
        "description": "If something is white and nice then it is rough."
    },
    {
        "id": 7673,
        "statement": "is(X, quiet) :- is(X, kind), is(X, big).",
        "description": "Kind, big things are quiet."
    },
    {
        "id": 7674,
        "statement": "eats(X, bear) :- sees(X, bear).",
        "description": "If someone sees the bear then they eat the bear."
    },
    {
        "id": 7675,
        "statement": "eats(bald_eagle, bear) :- is(bald_eagle, round), eats(bald_eagle, cat).",
        "description": "If the bald eagle is round and the bald eagle eats the cat then the bald eagle eats the bear."
    },
    {
        "id": 7676,
        "statement": "is(X, round) :- sees(X, cat), not is(cat, red).",
        "description": "If someone sees the cat and the cat is not red then they are round."
    },
    {
        "id": 7677,
        "statement": "eats(X, bald_eagle) :- is(X, rough), not is(X, round).",
        "description": "If someone is rough and not round then they eat the bald eagle."
    },
    {
        "id": 7678,
        "statement": "is(bald_eagle, big) :- eats(X, bald_eagle).",
        "description": "If someone eats the bald eagle then the bald eagle is big."
    },
    {
        "id": 7679,
        "statement": "is(anne, blue) :- is(anne, white), is(anne, kind).",
        "description": "If Anne is white and Anne is kind then Anne is blue."
    },
    {
        "id": 7680,
        "statement": "is(fiona, big) :- is(fiona, blue).",
        "description": "If Fiona is blue then Fiona is big."
    },
    {
        "id": 7681,
        "statement": "is(X, kind) :- is(X, white), is(X, red).",
        "description": "All white, red things are kind."
    },
    {
        "id": 7682,
        "statement": "is(X, furry) :- is(X, smart), is(X, young).",
        "description": "If someone is smart and young then they are furry."
    },
    {
        "id": 7683,
        "statement": "is(X, smart) :- is(X, round), is(X, blue).",
        "description": "If someone is round and blue then they are smart."
    },
    {
        "id": 7684,
        "statement": "is(X, round) :- is(X, furry), is(X, smart).",
        "description": "Furry, smart people are round."
    },
    {
        "id": 7685,
        "statement": "is(X, young) :- is(X, smart), is(X, furry).",
        "description": "Smart, furry people are young."
    },
    {
        "id": 7686,
        "statement": "is(X, white) :- is(X, furry), is(X, round).",
        "description": "All furry, round people are white."
    },
    {
        "id": 7687,
        "statement": "eats(cow, lion) :- visits(X, cow), visits(cow, bald_eagle).",
        "description": "If something visits the cow and the cow visits the bald eagle then the cow eats the lion."
    },
    {
        "id": 7688,
        "statement": "visits(lion, cow) :- is(X, big), sees(X, lion).",
        "description": "If something is big and it sees the lion then the lion visits the cow."
    },
    {
        "id": 7689,
        "statement": "sees(X, lion) :- is(X, green), is(X, blue).",
        "description": "If something is green and blue then it sees the lion."
    },
    {
        "id": 7690,
        "statement": "sees(X, lion) :- is(X, big).",
        "description": "If something is big then it sees the lion."
    },
    {
        "id": 7691,
        "statement": "eats(X, rabbit) :- is(X, young).",
        "description": "If something is young then it eats the rabbit."
    },
    {
        "id": 7692,
        "statement": "sees(X, cow) :- eats(X, lion), is(lion, rough).",
        "description": "If something eats the lion and the lion is rough then it sees the cow."
    },
    {
        "id": 7693,
        "statement": "is(X, big) :- visits(X, bald_eagle), visits(X, cow).",
        "description": "If something visits the bald eagle and it visits the cow then it is big."
    },
    {
        "id": 7694,
        "statement": "is(rabbit, big) :- sees(X, rabbit).",
        "description": "If something sees the rabbit then the rabbit is big."
    },
    {
        "id": 7695,
        "statement": "is(bob, young) :- is(bob, quiet).",
        "description": "If Bob is quiet then Bob is young."
    },
    {
        "id": 7696,
        "statement": "is(X, rough) :- is(X, quiet), is(X, furry).",
        "description": "Quiet, furry people are rough."
    },
    {
        "id": 7697,
        "statement": "is(X, young) :- is(X, rough), is(X, furry).",
        "description": "Rough, furry people are young."
    },
    {
        "id": 7698,
        "statement": "sees(tiger, squirrel) :- needs(X, tiger).",
        "description": "If someone needs the tiger then the tiger sees the squirrel."
    },
    {
        "id": 7699,
        "statement": "is(X, nice) :- sees(X, bear).",
        "description": "If someone sees the bear then they are nice."
    },
    {
        "id": 7700,
        "statement": "chases(bear, tiger) :- chases(X, bear).",
        "description": "If someone chases the bear then the bear chases the tiger."
    },
    {
        "id": 7701,
        "statement": "needs(X, tiger) :- needs(X, dog).",
        "description": "If someone needs the dog then they need the tiger."
    },
    {
        "id": 7702,
        "statement": "is(dog, round) :- needs(X, tiger), needs(tiger, dog).",
        "description": "If someone needs the tiger and the tiger needs the dog then the dog is round."
    },
    {
        "id": 7703,
        "statement": "needs(X, bear) :- chases(X, tiger), needs(X, tiger).",
        "description": "If someone chases the tiger and they need the tiger then they need the bear."
    },
    {
        "id": 7704,
        "statement": "needs(X, dog) :- is(X, round), needs(X, squirrel).",
        "description": "If someone is round and they need the squirrel then they need the dog."
    },
    {
        "id": 7705,
        "statement": "is(X, nice) :- is(X, red), needs(X, tiger).",
        "description": "If someone is red and they need the tiger then they are nice."
    },
    {
        "id": 7706,
        "statement": "chases(X, dog) :- sees(X, squirrel).",
        "description": "If someone sees the squirrel then they chase the dog."
    },
    {
        "id": 7707,
        "statement": "is(X, quiet) :- is(X, nice).",
        "description": "If someone is nice then they are quiet."
    },
    {
        "id": 7708,
        "statement": "is(fiona, nice) :- is(fiona, young), is(fiona, white).",
        "description": "If Fiona is young and Fiona is white then Fiona is nice."
    },
    {
        "id": 7709,
        "statement": "is(X, smart) :- is(X, white), is(X, rough).",
        "description": "If someone is white and rough then they are smart."
    },
    {
        "id": 7710,
        "statement": "is(gary, nice) :- is(gary, young), is(gary, white).",
        "description": "If Gary is young and Gary is white then Gary is nice."
    },
    {
        "id": 7711,
        "statement": "is(X, green) :- is(X, smart), is(X, round).",
        "description": "All smart, round people are green."
    },
    {
        "id": 7712,
        "statement": "is(X, cold) :- is(X, green), is(X, quiet).",
        "description": "Green, quiet people are cold."
    },
    {
        "id": 7713,
        "statement": "is(X, smart) :- is(X, quiet), is(X, round).",
        "description": "Quiet, round people are smart."
    },
    {
        "id": 7714,
        "statement": "is(X, green) :- is(X, nice), is(X, furry).",
        "description": "If someone is nice and furry then they are green."
    },
    {
        "id": 7715,
        "statement": "is(X, round) :- is(X, cold), is(X, quiet).",
        "description": "If someone is cold and quiet then they are round."
    },
    {
        "id": 7716,
        "statement": "eats(bald_eagle, squirrel) :- needs(X, bald_eagle), is(bald_eagle, red).",
        "description": "If something needs the bald eagle and the bald eagle is red then the bald eagle eats the squirrel."
    },
    {
        "id": 7717,
        "statement": "is(X, blue) :- sees(X, squirrel).",
        "description": "If something sees the squirrel then it is blue."
    },
    {
        "id": 7718,
        "statement": "is(bald_eagle, kind) :- needs(X, bald_eagle), needs(bald_eagle, dog).",
        "description": "If something needs the bald eagle and the bald eagle needs the dog then the bald eagle is kind."
    },
    {
        "id": 7719,
        "statement": "sees(X, cow) :- is(X, nice).",
        "description": "If something is nice then it sees the cow."
    },
    {
        "id": 7720,
        "statement": "is(squirrel, kind) :- eats(X, squirrel).",
        "description": "If something eats the squirrel then the squirrel is kind."
    },
    {
        "id": 7721,
        "statement": "is(X, nice) :- likes(X, mouse), is(X, blue).",
        "description": "If something likes the mouse and it is blue then it is nice."
    },
    {
        "id": 7722,
        "statement": "visits(mouse, cow) :- likes(X, mouse), likes(mouse, cow).",
        "description": "If something likes the mouse and the mouse likes the cow then the mouse visits the cow."
    },
    {
        "id": 7723,
        "statement": "likes(mouse, tiger) :- is(mouse, cold).",
        "description": "If the mouse is cold then the mouse likes the tiger."
    },
    {
        "id": 7724,
        "statement": "is(mouse, cold) :- is(mouse, nice), is(mouse, blue).",
        "description": "If the mouse is nice and the mouse is blue then the mouse is cold."
    },
    {
        "id": 7725,
        "statement": "likes(X, mouse) :- is(X, blue).",
        "description": "If something is blue then it likes the mouse."
    },
    {
        "id": 7726,
        "statement": "is(X, blue) :- needs(X, cat).",
        "description": "If something needs the cat then it is blue."
    },
    {
        "id": 7727,
        "statement": "visits(mouse, tiger) :- likes(tiger, mouse).",
        "description": "If the tiger likes the mouse then the mouse visits the tiger."
    },
    {
        "id": 7728,
        "statement": "is(X, cold) :- needs(X, mouse), likes(mouse, cow).",
        "description": "If something needs the mouse and the mouse likes the cow then it is cold."
    },
    {
        "id": 7729,
        "statement": "needs(X, mouse) :- is(X, rough), not is(X, nice).",
        "description": "If something is rough and not nice then it needs the mouse."
    },
    {
        "id": 7730,
        "statement": "needs(X, squirrel) :- needs(X, mouse).",
        "description": "If something needs the mouse then it needs the squirrel."
    },
    {
        "id": 7731,
        "statement": "is(dog, young) :- eats(dog, lion).",
        "description": "If the dog eats the lion then the dog is young."
    },
    {
        "id": 7732,
        "statement": "needs(mouse, squirrel) :- is(X, rough), not needs(X, mouse).",
        "description": "If something is rough and it does not need the mouse then the mouse needs the squirrel."
    },
    {
        "id": 7733,
        "statement": "eats(squirrel, mouse) :- needs(X, squirrel), is(squirrel, kind).",
        "description": "If something needs the squirrel and the squirrel is kind then the squirrel eats the mouse."
    },
    {
        "id": 7734,
        "statement": "is(X, young) :- eats(X, mouse).",
        "description": "If something eats the mouse then it is young."
    },
    {
        "id": 7735,
        "statement": "chases(X, mouse) :- needs(X, squirrel), chases(X, lion).",
        "description": "If something needs the squirrel and it chases the lion then it chases the mouse."
    },
    {
        "id": 7736,
        "statement": "is(X, kind) :- needs(X, squirrel).",
        "description": "If something needs the squirrel then it is kind."
    },
    {
        "id": 7737,
        "statement": "is(X, big) :- is(X, smart), is(X, young).",
        "description": "Smart, young things are big."
    },
    {
        "id": 7738,
        "statement": "is(X, big) :- is(X, cold), is(X, white).",
        "description": "Cold, white things are big."
    },
    {
        "id": 7739,
        "statement": "is(X, nice) :- is(X, young).",
        "description": "Young things are nice."
    },
    {
        "id": 7740,
        "statement": "is(X, cold) :- is(X, smart).",
        "description": "If something is smart then it is cold."
    },
    {
        "id": 7741,
        "statement": "is(charlie, smart) :- is(charlie, nice).",
        "description": "If Charlie is nice then Charlie is smart."
    },
    {
        "id": 7742,
        "statement": "is(harry, young) :- is(harry, smart), is(harry, big).",
        "description": "If Harry is smart and Harry is big then Harry is young."
    },
    {
        "id": 7743,
        "statement": "is(charlie, white) :- is(charlie, cold).",
        "description": "If Charlie is cold then Charlie is white."
    },
    {
        "id": 7744,
        "statement": "is(gary, smart) :- is(gary, furry).",
        "description": "If Gary is furry then Gary is smart."
    },
    {
        "id": 7745,
        "statement": "is(X, red) :- is(X, round).",
        "description": "All round people are red."
    },
    {
        "id": 7746,
        "statement": "is(bob, young) :- is(bob, blue), is(bob, quiet).",
        "description": "If Bob is blue and Bob is quiet then Bob is young."
    },
    {
        "id": 7747,
        "statement": "is(X, round) :- is(X, young), is(X, red).",
        "description": "If someone is young and red then they are round."
    },
    {
        "id": 7748,
        "statement": "is(X, nice) :- is(X, blue), is(X, young).",
        "description": "Blue, young people are nice."
    },
    {
        "id": 7749,
        "statement": "is(X, white) :- is(X, quiet), not is(X, nice).",
        "description": "If someone is quiet and not nice then they are white."
    },
    {
        "id": 7750,
        "statement": "is(X, white) :- is(X, blue), is(X, nice).",
        "description": "All blue, nice people are white."
    },
    {
        "id": 7751,
        "statement": "is(X, young) :- is(X, blue), is(X, red).",
        "description": "All blue, red things are young."
    },
    {
        "id": 7752,
        "statement": "is(X, white) :- is(X, young), is(X, blue).",
        "description": "All young, blue things are white."
    },
    {
        "id": 7753,
        "statement": "is(X, blue) :- is(X, white), is(X, rough).",
        "description": "All white, rough things are blue."
    },
    {
        "id": 7754,
        "statement": "is(X, red) :- is(X, blue), is(X, rough).",
        "description": "Blue, rough things are red."
    },
    {
        "id": 7755,
        "statement": "is(X, blue) :- is(X, smart), is(X, kind).",
        "description": "Smart, kind things are blue."
    },
    {
        "id": 7756,
        "statement": "is(X, red) :- is(X, green), is(X, blue).",
        "description": "If someone is green and blue then they are red."
    },
    {
        "id": 7757,
        "statement": "is(X, big) :- is(X, kind), is(X, blue).",
        "description": "All kind, blue people are big."
    },
    {
        "id": 7758,
        "statement": "is(X, big) :- is(X, kind), is(X, blue).",
        "description": "Kind, blue people are big."
    },
    {
        "id": 7759,
        "statement": "is(erin, big) :- is(erin, green).",
        "description": "If Erin is green then Erin is big."
    },
    {
        "id": 7760,
        "statement": "is(squirrel, red) :- visits(X, squirrel).",
        "description": "If someone visits the squirrel then the squirrel is red."
    },
    {
        "id": 7761,
        "statement": "visits(lion, squirrel) :- visits(X, lion), is(X, round).",
        "description": "If someone visits the lion and they are round then the lion visits the squirrel."
    },
    {
        "id": 7762,
        "statement": "eats(mouse, cow) :- not visits(cow, mouse).",
        "description": "If the cow does not visit the mouse then the mouse eats the cow."
    },
    {
        "id": 7763,
        "statement": "needs(X, cow) :- needs(X, squirrel), visits(squirrel, cow).",
        "description": "If someone needs the squirrel and the squirrel visits the cow then they need the cow."
    },
    {
        "id": 7764,
        "statement": "needs(lion, cow) :- visits(X, lion), is(lion, rough).",
        "description": "If someone visits the lion and the lion is rough then the lion needs the cow."
    },
    {
        "id": 7765,
        "statement": "visits(X, lion) :- needs(X, squirrel).",
        "description": "If someone needs the squirrel then they visit the lion."
    },
    {
        "id": 7766,
        "statement": "visits(squirrel, cow) :- is(squirrel, red).",
        "description": "If the squirrel is red then the squirrel visits the cow."
    },
    {
        "id": 7767,
        "statement": "visits(X, squirrel) :- visits(X, lion), is(X, green).",
        "description": "If someone visits the lion and they are green then they visit the squirrel."
    },
    {
        "id": 7768,
        "statement": "needs(squirrel, lion) :- not visits(mouse, squirrel).",
        "description": "If the mouse does not visit the squirrel then the squirrel needs the lion."
    },
    {
        "id": 7769,
        "statement": "is(X, young) :- is(X, kind), is(X, red).",
        "description": "Kind, red things are young."
    },
    {
        "id": 7770,
        "statement": "is(X, cold) :- is(X, kind), is(X, big).",
        "description": "Kind, big things are cold."
    },
    {
        "id": 7771,
        "statement": "is(X, red) :- is(X, furry), is(X, young).",
        "description": "Furry, young things are red."
    },
    {
        "id": 7772,
        "statement": "sees(dog, cow) :- is(X, big), not visits(X, dog).",
        "description": "If someone is big and they do not visit the dog then the dog sees the cow."
    },
    {
        "id": 7773,
        "statement": "is(X, young) :- is(X, rough), not visits(X, rabbit).",
        "description": "If someone is rough and they do not visit the rabbit then they are young."
    },
    {
        "id": 7774,
        "statement": "sees(squirrel, cow) :- sees(squirrel, rabbit), sees(rabbit, squirrel).",
        "description": "If the squirrel sees the rabbit and the rabbit sees the squirrel then the squirrel sees the cow."
    },
    {
        "id": 7775,
        "statement": "is(dog, big) :- sees(X, dog).",
        "description": "If someone sees the dog then the dog is big."
    },
    {
        "id": 7776,
        "statement": "sees(X, dog) :- needs(X, rabbit), is(rabbit, young).",
        "description": "If someone needs the rabbit and the rabbit is young then they see the dog."
    },
    {
        "id": 7777,
        "statement": "needs(X, rabbit) :- visits(X, dog), needs(X, cow).",
        "description": "If someone visits the dog and they need the cow then they need the rabbit."
    },
    {
        "id": 7778,
        "statement": "sees(X, squirrel) :- is(X, rough), not needs(X, squirrel).",
        "description": "If someone is rough and they do not need the squirrel then they see the squirrel."
    },
    {
        "id": 7779,
        "statement": "is(X, kind) :- sees(X, cow), sees(X, dog).",
        "description": "If someone sees the cow and they see the dog then they are kind."
    },
    {
        "id": 7780,
        "statement": "is(cow, kind) :- visits(X, cow).",
        "description": "If someone visits the cow then the cow is kind."
    },
    {
        "id": 7781,
        "statement": "is(X, rough) :- visits(X, cow), is(X, kind).",
        "description": "If someone visits the cow and they are kind then they are rough."
    },
    {
        "id": 7782,
        "statement": "is(X, kind) :- is(X, red), visits(X, cow).",
        "description": "If someone is red and they visit the cow then they are kind."
    },
    {
        "id": 7783,
        "statement": "likes(X, bear) :- visits(X, cow).",
        "description": "If someone visits the cow then they like the bear."
    },
    {
        "id": 7784,
        "statement": "likes(bald_eagle, cow) :- chases(X, bald_eagle).",
        "description": "If someone chases the bald eagle then the bald eagle likes the cow."
    },
    {
        "id": 7785,
        "statement": "chases(X, bald_eagle) :- is(X, rough), likes(X, bear).",
        "description": "If someone is rough and they like the bear then they chase the bald eagle."
    },
    {
        "id": 7786,
        "statement": "is(X, smart) :- is(X, round), is(X, nice).",
        "description": "If someone is round and nice then they are smart."
    },
    {
        "id": 7787,
        "statement": "is(dave, white) :- is(dave, furry).",
        "description": "If Dave is furry then Dave is white."
    },
    {
        "id": 7788,
        "statement": "is(X, white) :- is(X, young), is(X, smart).",
        "description": "All young, smart things are white."
    },
    {
        "id": 7789,
        "statement": "is(X, young) :- is(X, smart), is(X, quiet).",
        "description": "If something is smart and quiet then it is young."
    },
    {
        "id": 7790,
        "statement": "is(X, blue) :- is(X, smart), is(X, cold).",
        "description": "If something is smart and cold then it is blue."
    },
    {
        "id": 7791,
        "statement": "is(X, quiet) :- is(X, young), is(X, blue).",
        "description": "All young, blue things are quiet."
    },
    {
        "id": 7792,
        "statement": "is(fiona, round) :- is(fiona, nice).",
        "description": "If Fiona is nice then Fiona is round."
    },
    {
        "id": 7793,
        "statement": "is(X, round) :- is(X, nice), is(X, kind).",
        "description": "All nice, kind things are round."
    },
    {
        "id": 7794,
        "statement": "is(X, furry) :- is(X, nice), is(X, green).",
        "description": "All nice, green things are furry."
    },
    {
        "id": 7795,
        "statement": "is(X, green) :- is(X, nice).",
        "description": "All nice things are green."
    },
    {
        "id": 7796,
        "statement": "is(X, furry) :- is(X, red), is(X, quiet).",
        "description": "Red, quiet things are furry."
    },
    {
        "id": 7797,
        "statement": "is(X, green) :- is(X, red), not is(X, furry).",
        "description": "If someone is red and not furry then they are green."
    },
    {
        "id": 7798,
        "statement": "is(X, blue) :- is(X, white).",
        "description": "All white people are blue."
    },
    {
        "id": 7799,
        "statement": "is(charlie, green) :- is(charlie, rough), is(charlie, white).",
        "description": "If Charlie is rough and Charlie is white then Charlie is green."
    },
    {
        "id": 7800,
        "statement": "eats(X, cat) :- is(X, blue), likes(X, cat).",
        "description": "If someone is blue and they like the cat then they eat the cat."
    },
    {
        "id": 7801,
        "statement": "is(mouse, young) :- is(bear, kind), likes(bear, mouse).",
        "description": "If the bear is kind and the bear likes the mouse then the mouse is young."
    },
    {
        "id": 7802,
        "statement": "likes(bear, dog) :- sees(bear, mouse), is(mouse, blue).",
        "description": "If the bear sees the mouse and the mouse is blue then the bear likes the dog."
    },
    {
        "id": 7803,
        "statement": "likes(cat, mouse) :- likes(X, cat).",
        "description": "If someone likes the cat then the cat likes the mouse."
    },
    {
        "id": 7804,
        "statement": "is(X, kind) :- likes(X, mouse).",
        "description": "If someone likes the mouse then they are kind."
    },
    {
        "id": 7805,
        "statement": "likes(X, mouse) :- is(X, young).",
        "description": "If someone is young then they like the mouse."
    },
    {
        "id": 7806,
        "statement": "is(mouse, blue) :- sees(bear, mouse).",
        "description": "If the bear sees the mouse then the mouse is blue."
    },
    {
        "id": 7807,
        "statement": "is(X, big) :- is(X, nice), is(X, quiet).",
        "description": "All nice, quiet people are big."
    },
    {
        "id": 7808,
        "statement": "is(X, rough) :- is(X, quiet), is(X, big).",
        "description": "All quiet, big people are rough."
    },
    {
        "id": 7809,
        "statement": "is(X, quiet) :- is(X, nice), is(X, kind).",
        "description": "If someone is nice and kind then they are quiet."
    },
    {
        "id": 7810,
        "statement": "is(tiger, green) :- sees(X, tiger), needs(X, squirrel).",
        "description": "If someone sees the tiger and they need the squirrel then the tiger is green."
    },
    {
        "id": 7811,
        "statement": "sees(X, lion) :- is(X, young), needs(X, squirrel).",
        "description": "If someone is young and they need the squirrel then they see the lion."
    },
    {
        "id": 7812,
        "statement": "is(tiger, blue) :- chases(X, lion), needs(X, tiger).",
        "description": "If someone chases the lion and they need the tiger then the tiger is blue."
    },
    {
        "id": 7813,
        "statement": "sees(bald_eagle, tiger) :- sees(X, bald_eagle), chases(bald_eagle, tiger).",
        "description": "If someone sees the bald eagle and the bald eagle chases the tiger then the bald eagle sees the tiger."
    },
    {
        "id": 7814,
        "statement": "sees(tiger, bald_eagle) :- chases(X, tiger).",
        "description": "If someone chases the tiger then the tiger sees the bald eagle."
    },
    {
        "id": 7815,
        "statement": "is(X, kind) :- needs(X, bald_eagle).",
        "description": "If someone needs the bald eagle then they are kind."
    },
    {
        "id": 7816,
        "statement": "is(tiger, green) :- is(X, green), sees(X, tiger).",
        "description": "If someone is green and they see the tiger then the tiger is green."
    },
    {
        "id": 7817,
        "statement": "is(erin, round) :- is(erin, kind).",
        "description": "If Erin is kind then Erin is round."
    },
    {
        "id": 7818,
        "statement": "is(X, quiet) :- is(X, green), is(X, nice).",
        "description": "All green, nice people are quiet."
    },
    {
        "id": 7819,
        "statement": "is(X, young) :- is(X, cold), is(X, kind).",
        "description": "If someone is cold and kind then they are young."
    },
    {
        "id": 7820,
        "statement": "is(X, kind) :- is(X, round), is(X, quiet).",
        "description": "All round, quiet people are kind."
    },
    {
        "id": 7821,
        "statement": "is(bob, cold) :- is(bob, young), is(bob, round).",
        "description": "If Bob is young and Bob is round then Bob is cold."
    },
    {
        "id": 7822,
        "statement": "is(X, nice) :- is(X, young), is(X, green).",
        "description": "Young, green people are nice."
    },
    {
        "id": 7823,
        "statement": "is(X, green) :- is(X, kind), is(X, round).",
        "description": "All kind, round people are green."
    },
    {
        "id": 7824,
        "statement": "is(erin, round) :- is(erin, green), is(erin, kind).",
        "description": "If Erin is green and Erin is kind then Erin is round."
    },
    {
        "id": 7825,
        "statement": "is(X, big) :- is(X, furry), is(X, round).",
        "description": "If something is furry and round then it is big."
    },
    {
        "id": 7826,
        "statement": "is(X, red) :- is(X, big), is(X, furry).",
        "description": "If something is big and furry then it is red."
    },
    {
        "id": 7827,
        "statement": "is(X, green) :- is(X, kind), is(X, furry).",
        "description": "If something is kind and furry then it is green."
    },
    {
        "id": 7828,
        "statement": "is(X, furry) :- is(X, big).",
        "description": "If something is big then it is furry."
    },
    {
        "id": 7829,
        "statement": "is(X, kind) :- is(X, red), is(X, furry).",
        "description": "If something is red and furry then it is kind."
    },
    {
        "id": 7830,
        "statement": "is(fiona, cold) :- is(fiona, green), is(fiona, kind).",
        "description": "If Fiona is green and Fiona is kind then Fiona is cold."
    },
    {
        "id": 7831,
        "statement": "is(X, smart) :- is(X, white), is(X, green).",
        "description": "White, green things are smart."
    },
    {
        "id": 7832,
        "statement": "is(X, quiet) :- is(X, smart), is(X, rough).",
        "description": "All smart, rough things are quiet."
    },
    {
        "id": 7833,
        "statement": "is(X, big) :- is(X, quiet), is(X, green).",
        "description": "All quiet, green things are big."
    },
    {
        "id": 7834,
        "statement": "is(X, green) :- is(X, rough), is(X, white).",
        "description": "Rough, white things are green."
    },
    {
        "id": 7835,
        "statement": "is(X, white) :- is(X, rough).",
        "description": "All rough things are white."
    },
    {
        "id": 7836,
        "statement": "is(X, smart) :- is(X, quiet), is(X, furry).",
        "description": "Quiet, furry things are smart."
    },
    {
        "id": 7837,
        "statement": "is(X, quiet) :- is(X, rough), is(X, furry).",
        "description": "All rough, furry people are quiet."
    },
    {
        "id": 7838,
        "statement": "is(X, green) :- is(X, furry).",
        "description": "All furry people are green."
    },
    {
        "id": 7839,
        "statement": "is(fiona, quiet) :- is(fiona, rough), is(fiona, red).",
        "description": "If Fiona is rough and Fiona is red then Fiona is quiet."
    },
    {
        "id": 7840,
        "statement": "is(X, green) :- is(X, blue), is(X, big).",
        "description": "Blue, big people are green."
    },
    {
        "id": 7841,
        "statement": "is(X, white) :- is(X, red), is(X, big).",
        "description": "If someone is red and big then they are white."
    },
    {
        "id": 7842,
        "statement": "is(X, big) :- is(X, white), is(X, green).",
        "description": "All white, green people are big."
    },
    {
        "id": 7843,
        "statement": "is(X, red) :- is(X, green), is(X, big).",
        "description": "If someone is green and big then they are red."
    },
    {
        "id": 7844,
        "statement": "is(X, green) :- is(X, white), is(X, young).",
        "description": "If someone is white and young then they are green."
    },
    {
        "id": 7845,
        "statement": "is(erin, young) :- is(erin, white).",
        "description": "If Erin is white then Erin is young."
    },
    {
        "id": 7846,
        "statement": "is(charlie, rough) :- is(charlie, white).",
        "description": "If Charlie is white then Charlie is rough."
    },
    {
        "id": 7847,
        "statement": "is(X, blue) :- is(X, kind), is(X, smart).",
        "description": "Kind, smart people are blue."
    },
    {
        "id": 7848,
        "statement": "is(charlie, nice) :- is(charlie, smart).",
        "description": "If Charlie is smart then Charlie is nice."
    },
    {
        "id": 7849,
        "statement": "is(X, nice) :- is(X, smart), is(X, blue).",
        "description": "Smart, blue people are nice."
    },
    {
        "id": 7850,
        "statement": "is(X, white) :- is(X, round), is(X, nice).",
        "description": "If someone is round and nice then they are white."
    },
    {
        "id": 7851,
        "statement": "is(cat, kind) :- chases(cow, cat), not needs(cat, bald_eagle).",
        "description": "If the cow chases the cat and the cat does not need the bald eagle then the cat is kind."
    },
    {
        "id": 7852,
        "statement": "is(X, rough) :- is(X, round), sees(X, cow).",
        "description": "If something is round and it sees the cow then it is rough."
    },
    {
        "id": 7853,
        "statement": "chases(bald_eagle, cat) :- is(bald_eagle, blue).",
        "description": "If the bald eagle is blue then the bald eagle chases the cat."
    },
    {
        "id": 7854,
        "statement": "sees(bald_eagle, cow) :- sees(X, bald_eagle), sees(bald_eagle, cat).",
        "description": "If something sees the bald eagle and the bald eagle sees the cat then the bald eagle sees the cow."
    },
    {
        "id": 7855,
        "statement": "is(bear, red) :- sees(X, bear).",
        "description": "If something sees the bear then the bear is red."
    },
    {
        "id": 7856,
        "statement": "is(cat, rough) :- chases(bear, cat), not sees(bear, bald_eagle).",
        "description": "If the bear chases the cat and the bear does not see the bald eagle then the cat is rough."
    },
    {
        "id": 7857,
        "statement": "is(bear, blue) :- chases(X, bald_eagle), chases(bald_eagle, bear).",
        "description": "If something chases the bald eagle and the bald eagle chases the bear then the bear is blue."
    },
    {
        "id": 7858,
        "statement": "is(X, red) :- is(X, furry), is(X, young).",
        "description": "If someone is furry and young then they are red."
    },
    {
        "id": 7859,
        "statement": "is(X, kind) :- is(X, smart), is(X, red).",
        "description": "If someone is smart and red then they are kind."
    },
    {
        "id": 7860,
        "statement": "is(X, green) :- is(X, cold).",
        "description": "All cold people are green."
    },
    {
        "id": 7861,
        "statement": "is(dave, rough) :- is(dave, green).",
        "description": "If Dave is green then Dave is rough."
    },
    {
        "id": 7862,
        "statement": "is(bob, rough) :- is(bob, cold), not is(bob, green).",
        "description": "If Bob is cold and Bob is not green then Bob is rough."
    },
    {
        "id": 7863,
        "statement": "is(X, kind) :- is(X, rough), is(X, green).",
        "description": "If someone is rough and green then they are kind."
    },
    {
        "id": 7864,
        "statement": "visits(squirrel, mouse) :- visits(X, squirrel).",
        "description": "If something visits the squirrel then the squirrel visits the mouse."
    },
    {
        "id": 7865,
        "statement": "visits(X, mouse) :- visits(X, tiger), not is(X, red).",
        "description": "If something visits the tiger and it is not red then it visits the mouse."
    },
    {
        "id": 7866,
        "statement": "needs(tiger, mouse) :- needs(squirrel, tiger), needs(tiger, dog).",
        "description": "If the squirrel needs the tiger and the tiger needs the dog then the tiger needs the mouse."
    },
    {
        "id": 7867,
        "statement": "needs(X, squirrel) :- is(X, kind), visits(X, mouse).",
        "description": "If something is kind and it visits the mouse then it needs the squirrel."
    },
    {
        "id": 7868,
        "statement": "chases(squirrel, mouse) :- is(squirrel, red).",
        "description": "If the squirrel is red then the squirrel chases the mouse."
    },
    {
        "id": 7869,
        "statement": "visits(mouse, tiger) :- is(mouse, young), visits(mouse, squirrel).",
        "description": "If the mouse is young and the mouse visits the squirrel then the mouse visits the tiger."
    },
    {
        "id": 7870,
        "statement": "is(X, cold) :- is(X, blue), is(X, kind).",
        "description": "All blue, kind things are cold."
    },
    {
        "id": 7871,
        "statement": "is(gary, smart) :- is(gary, round).",
        "description": "If Gary is round then Gary is smart."
    },
    {
        "id": 7872,
        "statement": "is(X, white) :- is(X, furry), is(X, smart).",
        "description": "All furry, smart things are white."
    },
    {
        "id": 7873,
        "statement": "is(X, smart) :- is(X, kind).",
        "description": "All kind things are smart."
    },
    {
        "id": 7874,
        "statement": "is(X, young) :- is(X, quiet), is(X, furry).",
        "description": "If someone is quiet and furry then they are young."
    },
    {
        "id": 7875,
        "statement": "is(X, green) :- is(X, rough), is(X, blue).",
        "description": "All rough, blue people are green."
    },
    {
        "id": 7876,
        "statement": "is(X, blue) :- is(X, rough), is(X, furry).",
        "description": "If someone is rough and furry then they are blue."
    },
    {
        "id": 7877,
        "statement": "is(X, rough) :- is(X, young).",
        "description": "All young people are rough."
    },
    {
        "id": 7878,
        "statement": "is(X, kind) :- is(X, green), is(X, red).",
        "description": "If someone is green and red then they are kind."
    },
    {
        "id": 7879,
        "statement": "is(X, big) :- is(X, red), is(X, rough).",
        "description": "If someone is red and rough then they are big."
    },
    {
        "id": 7880,
        "statement": "is(X, rough) :- is(X, kind), is(X, green).",
        "description": "Kind, green people are rough."
    },
    {
        "id": 7881,
        "statement": "is(X, green) :- is(X, kind).",
        "description": "Kind people are green."
    },
    {
        "id": 7882,
        "statement": "is(X, red) :- is(X, green), is(X, round).",
        "description": "All green, round people are red."
    },
    {
        "id": 7883,
        "statement": "is(gary, green) :- is(gary, round).",
        "description": "If Gary is round then Gary is green."
    },
    {
        "id": 7884,
        "statement": "is(X, round) :- is(X, rough).",
        "description": "All rough people are round."
    },
    {
        "id": 7885,
        "statement": "is(X, red) :- sees(X, squirrel).",
        "description": "If someone sees the squirrel then they are red."
    },
    {
        "id": 7886,
        "statement": "eats(cat, squirrel) :- is(bald_eagle, young), eats(bald_eagle, cat).",
        "description": "If the bald eagle is young and the bald eagle eats the cat then the cat eats the squirrel."
    },
    {
        "id": 7887,
        "statement": "is(X, round) :- eats(X, cat), is(X, young).",
        "description": "If someone eats the cat and they are young then they are round."
    },
    {
        "id": 7888,
        "statement": "sees(X, cat) :- is(X, red).",
        "description": "If someone is red then they see the cat."
    },
    {
        "id": 7889,
        "statement": "eats(mouse, cat) :- likes(X, cat), eats(X, mouse).",
        "description": "If someone likes the cat and they eat the mouse then the mouse eats the cat."
    },
    {
        "id": 7890,
        "statement": "sees(X, mouse) :- sees(X, cat).",
        "description": "If someone sees the cat then they see the mouse."
    },
    {
        "id": 7891,
        "statement": "likes(X, squirrel) :- sees(X, mouse).",
        "description": "If someone sees the mouse then they like the squirrel."
    },
    {
        "id": 7892,
        "statement": "eats(X, bald_eagle) :- is(X, red), not is(X, round).",
        "description": "If someone is red and not round then they eat the bald eagle."
    },
    {
        "id": 7893,
        "statement": "is(bob, furry) :- is(bob, red).",
        "description": "If Bob is red then Bob is furry."
    },
    {
        "id": 7894,
        "statement": "is(X, cold) :- is(X, red), is(X, blue).",
        "description": "All red, blue people are cold."
    },
    {
        "id": 7895,
        "statement": "is(X, furry) :- is(X, red), is(X, round).",
        "description": "Red, round things are furry."
    },
    {
        "id": 7896,
        "statement": "is(X, blue) :- is(X, quiet), is(X, furry).",
        "description": "All quiet, furry things are blue."
    },
    {
        "id": 7897,
        "statement": "is(X, blue) :- is(X, nice), is(X, red).",
        "description": "If something is nice and red then it is blue."
    },
    {
        "id": 7898,
        "statement": "is(X, round) :- is(X, quiet), is(X, big).",
        "description": "All quiet, big things are round."
    },
    {
        "id": 7899,
        "statement": "is(X, red) :- is(X, quiet).",
        "description": "If something is quiet then it is red."
    },
    {
        "id": 7900,
        "statement": "is(erin, green) :- is(erin, round).",
        "description": "If Erin is round then Erin is green."
    },
    {
        "id": 7901,
        "statement": "is(X, cold) :- is(X, green), is(X, rough).",
        "description": "Green, rough things are cold."
    },
    {
        "id": 7902,
        "statement": "is(X, white) :- is(X, rough), is(X, kind).",
        "description": "All rough, kind things are white."
    },
    {
        "id": 7903,
        "statement": "is(X, round) :- is(X, rough), is(X, blue).",
        "description": "All rough, blue things are round."
    },
    {
        "id": 7904,
        "statement": "likes(lion, tiger) :- sees(X, lion), not is(X, round).",
        "description": "If someone sees the lion and they are not round then the lion likes the tiger."
    },
    {
        "id": 7905,
        "statement": "is(X, cold) :- chases(X, lion).",
        "description": "If someone chases the lion then they are cold."
    },
    {
        "id": 7906,
        "statement": "chases(X, lion) :- is(X, green), not is(X, round).",
        "description": "If someone is green and not round then they chase the lion."
    },
    {
        "id": 7907,
        "statement": "likes(X, tiger) :- is(X, rough), sees(X, tiger).",
        "description": "If someone is rough and they see the tiger then they like the tiger."
    },
    {
        "id": 7908,
        "statement": "likes(tiger, lion) :- chases(X, tiger).",
        "description": "If someone chases the tiger then the tiger likes the lion."
    },
    {
        "id": 7909,
        "statement": "sees(X, bald_eagle) :- is(X, cold), not likes(X, tiger).",
        "description": "If someone is cold and they do not like the tiger then they see the bald eagle."
    },
    {
        "id": 7910,
        "statement": "is(bald_eagle, cold) :- sees(X, lion), chases(lion, bald_eagle).",
        "description": "If someone sees the lion and the lion chases the bald eagle then the bald eagle is cold."
    },
    {
        "id": 7911,
        "statement": "chases(X, bald_eagle) :- sees(X, bald_eagle).",
        "description": "If someone sees the bald eagle then they chase the bald eagle."
    },
    {
        "id": 7912,
        "statement": "likes(tiger, cat) :- sees(X, bald_eagle), not chases(X, tiger).",
        "description": "If someone sees the bald eagle and they do not chase the tiger then the tiger likes the cat."
    },
    {
        "id": 7913,
        "statement": "chases(bald_eagle, squirrel) :- needs(X, squirrel), chases(squirrel, bald_eagle).",
        "description": "If someone needs the squirrel and the squirrel chases the bald eagle then the bald eagle chases the squirrel."
    },
    {
        "id": 7914,
        "statement": "sees(X, lion) :- is(X, red), sees(X, cat).",
        "description": "If someone is red and they see the cat then they see the lion."
    },
    {
        "id": 7915,
        "statement": "is(lion, blue) :- needs(X, lion).",
        "description": "If someone needs the lion then the lion is blue."
    },
    {
        "id": 7916,
        "statement": "needs(X, lion) :- is(X, blue), needs(X, cat).",
        "description": "If someone is blue and they need the cat then they need the lion."
    },
    {
        "id": 7917,
        "statement": "is(cat, nice) :- needs(cat, bald_eagle), not needs(lion, cat).",
        "description": "If the cat needs the bald eagle and the lion does not need the cat then the cat is nice."
    },
    {
        "id": 7918,
        "statement": "is(charlie, quiet) :- is(charlie, big), is(charlie, nice).",
        "description": "If Charlie is big and Charlie is nice then Charlie is quiet."
    },
    {
        "id": 7919,
        "statement": "is(X, furry) :- is(X, quiet), is(X, cold).",
        "description": "If something is quiet and cold then it is furry."
    },
    {
        "id": 7920,
        "statement": "is(X, nice) :- is(X, furry), is(X, blue).",
        "description": "Furry, blue things are nice."
    },
    {
        "id": 7921,
        "statement": "is(X, cold) :- is(X, blue), is(X, furry).",
        "description": "If something is blue and furry then it is cold."
    },
    {
        "id": 7922,
        "statement": "is(X, blue) :- is(X, quiet), is(X, furry).",
        "description": "Quiet, furry things are blue."
    },
    {
        "id": 7923,
        "statement": "is(charlie, smart) :- is(charlie, quiet), is(charlie, cold).",
        "description": "If Charlie is quiet and Charlie is cold then Charlie is smart."
    },
    {
        "id": 7924,
        "statement": "is(X, big) :- is(X, nice).",
        "description": "If something is nice then it is big."
    },
    {
        "id": 7925,
        "statement": "is(X, kind) :- likes(X, dog).",
        "description": "If something likes the dog then it is kind."
    },
    {
        "id": 7926,
        "statement": "likes(bald_eagle, dog) :- visits(X, bald_eagle).",
        "description": "If something visits the bald eagle then the bald eagle likes the dog."
    },
    {
        "id": 7927,
        "statement": "visits(X, dog) :- is(X, kind).",
        "description": "If something is kind then it visits the dog."
    },
    {
        "id": 7928,
        "statement": "likes(X, tiger) :- visits(X, dog).",
        "description": "If something visits the dog then it likes the tiger."
    },
    {
        "id": 7929,
        "statement": "visits(tiger, dog) :- needs(X, tiger).",
        "description": "If something needs the tiger then the tiger visits the dog."
    },
    {
        "id": 7930,
        "statement": "is(dog, nice) :- needs(tiger, bear), needs(tiger, dog).",
        "description": "If the tiger needs the bear and the tiger needs the dog then the dog is nice."
    },
    {
        "id": 7931,
        "statement": "visits(X, bald_eagle) :- is(X, kind).",
        "description": "If something is kind then it visits the bald eagle."
    },
    {
        "id": 7932,
        "statement": "likes(tiger, bear) :- likes(X, tiger), likes(tiger, dog).",
        "description": "If something likes the tiger and the tiger likes the dog then the tiger likes the bear."
    },
    {
        "id": 7933,
        "statement": "is(X, smart) :- is(X, young), is(X, green).",
        "description": "All young, green things are smart."
    },
    {
        "id": 7934,
        "statement": "is(X, big) :- is(X, rough), is(X, nice).",
        "description": "Rough, nice things are big."
    },
    {
        "id": 7935,
        "statement": "is(X, rough) :- is(X, round), is(X, young).",
        "description": "If something is round and young then it is rough."
    },
    {
        "id": 7936,
        "statement": "is(fiona, green) :- is(fiona, big), is(fiona, nice).",
        "description": "If Fiona is big and Fiona is nice then Fiona is green."
    },
    {
        "id": 7937,
        "statement": "is(anne, cold) :- is(anne, red).",
        "description": "If Anne is red then Anne is cold."
    },
    {
        "id": 7938,
        "statement": "is(harry, blue) :- not is(harry, young).",
        "description": "If Harry is not young then Harry is blue."
    },
    {
        "id": 7939,
        "statement": "is(X, blue) :- is(X, red), is(X, big).",
        "description": "All red, big people are blue."
    },
    {
        "id": 7940,
        "statement": "is(X, cold) :- is(X, smart), is(X, blue).",
        "description": "If someone is smart and blue then they are cold."
    },
    {
        "id": 7941,
        "statement": "chases(X, lion) :- needs(X, mouse).",
        "description": "If something needs the mouse then it chases the lion."
    },
    {
        "id": 7942,
        "statement": "chases(X, lion) :- is(X, green), sees(X, lion).",
        "description": "If something is green and it sees the lion then it chases the lion."
    },
    {
        "id": 7943,
        "statement": "chases(lion, tiger) :- needs(X, lion), chases(X, lion).",
        "description": "If something needs the lion and it chases the lion then the lion chases the tiger."
    },
    {
        "id": 7944,
        "statement": "sees(X, lion) :- is(X, rough).",
        "description": "If something is rough then it sees the lion."
    },
    {
        "id": 7945,
        "statement": "is(X, rough) :- chases(X, tiger).",
        "description": "If something chases the tiger then it is rough."
    },
    {
        "id": 7946,
        "statement": "is(X, quiet) :- is(X, young), is(X, kind).",
        "description": "If someone is young and kind then they are quiet."
    },
    {
        "id": 7947,
        "statement": "is(charlie, cold) :- is(charlie, green).",
        "description": "If Charlie is green then Charlie is cold."
    },
    {
        "id": 7948,
        "statement": "is(gary, white) :- is(gary, green), is(gary, kind).",
        "description": "If Gary is green and Gary is kind then Gary is white."
    },
    {
        "id": 7949,
        "statement": "is(X, kind) :- is(X, nice), is(X, cold).",
        "description": "Nice, cold people are kind."
    },
    {
        "id": 7950,
        "statement": "is(X, quiet) :- is(X, cold), is(X, kind).",
        "description": "If someone is cold and kind then they are quiet."
    },
    {
        "id": 7951,
        "statement": "likes(bear, tiger) :- sees(X, bear).",
        "description": "If someone sees the bear then the bear likes the tiger."
    },
    {
        "id": 7952,
        "statement": "is(bald_eagle, blue) :- visits(X, bald_eagle).",
        "description": "If someone visits the bald eagle then the bald eagle is blue."
    },
    {
        "id": 7953,
        "statement": "visits(bald_eagle, bear) :- visits(X, bald_eagle), is(bald_eagle, red).",
        "description": "If someone visits the bald eagle and the bald eagle is red then the bald eagle visits the bear."
    },
    {
        "id": 7954,
        "statement": "visits(bear, lion) :- sees(X, bear).",
        "description": "If someone sees the bear then the bear visits the lion."
    },
    {
        "id": 7955,
        "statement": "visits(X, lion) :- likes(X, tiger).",
        "description": "If someone likes the tiger then they visit the lion."
    },
    {
        "id": 7956,
        "statement": "likes(bald_eagle, lion) :- is(X, green), sees(X, bald_eagle).",
        "description": "If someone is green and they see the bald eagle then the bald eagle likes the lion."
    },
    {
        "id": 7957,
        "statement": "sees(X, bald_eagle) :- is(X, young).",
        "description": "If someone is young then they see the bald eagle."
    },
    {
        "id": 7958,
        "statement": "chases(X, cow) :- is(X, young).",
        "description": "If someone is young then they chase the cow."
    },
    {
        "id": 7959,
        "statement": "chases(X, dog) :- visits(X, lion), visits(X, dog).",
        "description": "If someone visits the lion and they visit the dog then they chase the dog."
    },
    {
        "id": 7960,
        "statement": "visits(lion, dog) :- is(X, red), chases(X, lion).",
        "description": "If someone is red and they chase the lion then the lion visits the dog."
    },
    {
        "id": 7961,
        "statement": "visits(cow, mouse) :- chases(X, cow), chases(cow, dog).",
        "description": "If someone chases the cow and the cow chases the dog then the cow visits the mouse."
    },
    {
        "id": 7962,
        "statement": "eats(dog, mouse) :- visits(X, dog).",
        "description": "If someone visits the dog then the dog eats the mouse."
    },
    {
        "id": 7963,
        "statement": "eats(cow, lion) :- eats(X, cow).",
        "description": "If someone eats the cow then the cow eats the lion."
    },
    {
        "id": 7964,
        "statement": "is(X, round) :- visits(X, cow), is(X, young).",
        "description": "If someone visits the cow and they are young then they are round."
    },
    {
        "id": 7965,
        "statement": "visits(X, dog) :- chases(X, cow).",
        "description": "If someone chases the cow then they visit the dog."
    },
    {
        "id": 7966,
        "statement": "is(X, quiet) :- is(X, big), is(X, white).",
        "description": "If something is big and white then it is quiet."
    },
    {
        "id": 7967,
        "statement": "is(X, smart) :- is(X, quiet), is(X, kind).",
        "description": "All quiet, kind things are smart."
    },
    {
        "id": 7968,
        "statement": "needs(X, rabbit) :- is(X, big).",
        "description": "If something is big then it needs the rabbit."
    },
    {
        "id": 7969,
        "statement": "is(X, blue) :- needs(X, rabbit), visits(X, bald_eagle).",
        "description": "If something needs the rabbit and it visits the bald eagle then it is blue."
    },
    {
        "id": 7970,
        "statement": "is(dog, blue) :- visits(X, bald_eagle), visits(X, dog).",
        "description": "If something visits the bald eagle and it visits the dog then the dog is blue."
    },
    {
        "id": 7971,
        "statement": "chases(X, dog) :- is(X, blue).",
        "description": "If something is blue then it chases the dog."
    },
    {
        "id": 7972,
        "statement": "is(X, quiet) :- is(X, kind), is(X, white).",
        "description": "All kind, white people are quiet."
    },
    {
        "id": 7973,
        "statement": "is(anne, rough) :- is(anne, blue).",
        "description": "If Anne is blue then Anne is rough."
    },
    {
        "id": 7974,
        "statement": "is(X, rough) :- is(X, quiet), is(X, blue).",
        "description": "Quiet, blue people are rough."
    },
    {
        "id": 7975,
        "statement": "is(anne, rough) :- is(anne, blue), is(anne, quiet).",
        "description": "If Anne is blue and Anne is quiet then Anne is rough."
    },
    {
        "id": 7976,
        "statement": "is(X, green) :- is(X, furry), is(X, big).",
        "description": "If someone is furry and big then they are green."
    },
    {
        "id": 7977,
        "statement": "is(X, nice) :- is(X, green), is(X, big).",
        "description": "If someone is green and big then they are nice."
    },
    {
        "id": 7978,
        "statement": "is(X, nice) :- is(X, big), is(X, cold).",
        "description": "All big, cold people are nice."
    },
    {
        "id": 7979,
        "statement": "is(X, red) :- is(X, quiet), is(X, big).",
        "description": "Quiet, big people are red."
    },
    {
        "id": 7980,
        "statement": "is(X, furry) :- is(X, red), is(X, cold).",
        "description": "All red, cold people are furry."
    },
    {
        "id": 7981,
        "statement": "is(X, red) :- is(X, nice), is(X, cold).",
        "description": "If someone is nice and cold then they are red."
    },
    {
        "id": 7982,
        "statement": "sees(bald_eagle, lion) :- chases(X, dog), sees(X, bald_eagle).",
        "description": "If something chases the dog and it sees the bald eagle then the bald eagle sees the lion."
    },
    {
        "id": 7983,
        "statement": "chases(X, lion) :- sees(X, bald_eagle), not sees(X, dog).",
        "description": "If something sees the bald eagle and it does not see the dog then it chases the lion."
    },
    {
        "id": 7984,
        "statement": "sees(lion, squirrel) :- chases(X, lion).",
        "description": "If something chases the lion then the lion sees the squirrel."
    },
    {
        "id": 7985,
        "statement": "sees(squirrel, bald_eagle) :- eats(dog, squirrel).",
        "description": "If the dog eats the squirrel then the squirrel sees the bald eagle."
    },
    {
        "id": 7986,
        "statement": "is(squirrel, red) :- is(X, round), chases(X, squirrel).",
        "description": "If something is round and it chases the squirrel then the squirrel is red."
    },
    {
        "id": 7987,
        "statement": "chases(lion, dog) :- chases(X, lion).",
        "description": "If something chases the lion then the lion chases the dog."
    },
    {
        "id": 7988,
        "statement": "eats(X, squirrel) :- chases(X, lion).",
        "description": "If something chases the lion then it eats the squirrel."
    },
    {
        "id": 7989,
        "statement": "chases(X, bald_eagle) :- is(X, cold).",
        "description": "If something is cold then it chases the bald eagle."
    },
    {
        "id": 7990,
        "statement": "is(X, cold) :- is(X, rough), is(X, blue).",
        "description": "If someone is rough and blue then they are cold."
    },
    {
        "id": 7991,
        "statement": "is(X, green) :- is(X, white), is(X, rough).",
        "description": "If someone is white and rough then they are green."
    },
    {
        "id": 7992,
        "statement": "is(charlie, rough) :- is(charlie, green).",
        "description": "If Charlie is green then Charlie is rough."
    },
    {
        "id": 7993,
        "statement": "is(X, cold) :- is(X, white), is(X, green).",
        "description": "All white, green people are cold."
    },
    {
        "id": 7994,
        "statement": "is(X, white) :- is(X, quiet).",
        "description": "Quiet people are white."
    },
    {
        "id": 7995,
        "statement": "is(X, green) :- visits(X, mouse).",
        "description": "If someone visits the mouse then they are green."
    },
    {
        "id": 7996,
        "statement": "visits(X, mouse) :- visits(X, cow), likes(cow, mouse).",
        "description": "If someone visits the cow and the cow likes the mouse then they visit the mouse."
    },
    {
        "id": 7997,
        "statement": "eats(X, bald_eagle) :- visits(X, cow).",
        "description": "If someone visits the cow then they eat the bald eagle."
    },
    {
        "id": 7998,
        "statement": "is(bald_eagle, big) :- eats(X, bald_eagle), likes(bald_eagle, mouse).",
        "description": "If someone eats the bald eagle and the bald eagle likes the mouse then the bald eagle is big."
    },
    {
        "id": 7999,
        "statement": "likes(X, mouse) :- is(X, red), is(X, big).",
        "description": "If someone is red and big then they like the mouse."
    },
    {
        "id": 8000,
        "statement": "is(X, red) :- eats(X, bald_eagle).",
        "description": "If someone eats the bald eagle then they are red."
    },
    {
        "id": 8001,
        "statement": "eats(cow, bald_eagle) :- likes(bald_eagle, cow).",
        "description": "If the bald eagle likes the cow then the cow eats the bald eagle."
    },
    {
        "id": 8002,
        "statement": "is(harry, quiet) :- is(harry, blue), is(harry, rough).",
        "description": "If Harry is blue and Harry is rough then Harry is quiet."
    },
    {
        "id": 8003,
        "statement": "is(X, rough) :- is(X, kind), is(X, round).",
        "description": "Kind, round things are rough."
    },
    {
        "id": 8004,
        "statement": "is(dave, round) :- is(dave, quiet).",
        "description": "If Dave is quiet then Dave is round."
    },
    {
        "id": 8005,
        "statement": "is(bob, rough) :- is(bob, green), is(bob, blue).",
        "description": "If Bob is green and Bob is blue then Bob is rough."
    },
    {
        "id": 8006,
        "statement": "is(X, blue) :- is(X, quiet), is(X, green).",
        "description": "Quiet, green things are blue."
    },
    {
        "id": 8007,
        "statement": "is(X, kind) :- is(X, nice), is(X, green).",
        "description": "All nice, green things are kind."
    },
    {
        "id": 8008,
        "statement": "is(X, quiet) :- is(X, green), is(X, blue).",
        "description": "All green, blue things are quiet."
    },
    {
        "id": 8009,
        "statement": "is(X, kind) :- is(X, white), is(X, rough).",
        "description": "If something is white and rough then it is kind."
    },
    {
        "id": 8010,
        "statement": "is(X, cold) :- is(X, kind), is(X, quiet).",
        "description": "Kind, quiet things are cold."
    },
    {
        "id": 8011,
        "statement": "is(harry, white) :- is(harry, quiet).",
        "description": "If Harry is quiet then Harry is white."
    },
    {
        "id": 8012,
        "statement": "is(X, smart) :- is(X, green).",
        "description": "Green things are smart."
    },
    {
        "id": 8013,
        "statement": "is(X, smart) :- is(X, green), is(X, rough).",
        "description": "If something is green and rough then it is smart."
    },
    {
        "id": 8014,
        "statement": "is(X, big) :- is(X, blue), is(X, red).",
        "description": "Blue, red things are big."
    },
    {
        "id": 8015,
        "statement": "is(X, nice) :- is(X, smart).",
        "description": "If something is smart then it is nice."
    },
    {
        "id": 8016,
        "statement": "is(X, smart) :- is(X, young), is(X, big).",
        "description": "If something is young and big then it is smart."
    },
    {
        "id": 8017,
        "statement": "is(X, big) :- is(X, kind), is(X, furry).",
        "description": "Kind, furry things are big."
    },
    {
        "id": 8018,
        "statement": "is(bob, white) :- is(bob, kind).",
        "description": "If Bob is kind then Bob is white."
    },
    {
        "id": 8019,
        "statement": "is(X, white) :- is(X, quiet), is(X, round).",
        "description": "Quiet, round things are white."
    },
    {
        "id": 8020,
        "statement": "is(X, furry) :- is(X, quiet).",
        "description": "All quiet things are furry."
    },
    {
        "id": 8021,
        "statement": "is(X, blue) :- is(X, young), is(X, green).",
        "description": "If something is young and green then it is blue."
    },
    {
        "id": 8022,
        "statement": "is(X, red) :- is(X, smart), not is(X, young).",
        "description": "If something is smart and not young then it is red."
    },
    {
        "id": 8023,
        "statement": "is(bob, kind) :- is(bob, smart).",
        "description": "If Bob is smart then Bob is kind."
    },
    {
        "id": 8024,
        "statement": "is(X, furry) :- is(X, cold), is(X, young).",
        "description": "If someone is cold and young then they are furry."
    },
    {
        "id": 8025,
        "statement": "is(X, young) :- is(X, smart), is(X, red).",
        "description": "If someone is smart and red then they are young."
    },
    {
        "id": 8026,
        "statement": "is(X, white) :- is(X, rough), is(X, nice).",
        "description": "Rough, nice things are white."
    },
    {
        "id": 8027,
        "statement": "is(X, white) :- is(X, red), is(X, round).",
        "description": "Red, round things are white."
    },
    {
        "id": 8028,
        "statement": "is(charlie, rough) :- is(charlie, nice), is(charlie, young).",
        "description": "If Charlie is nice and Charlie is young then Charlie is rough."
    },
    {
        "id": 8029,
        "statement": "is(anne, young) :- is(anne, red), is(anne, round).",
        "description": "If Anne is red and Anne is round then Anne is young."
    },
    {
        "id": 8030,
        "statement": "is(anne, young) :- is(anne, white).",
        "description": "If Anne is white then Anne is young."
    },
    {
        "id": 8031,
        "statement": "is(X, round) :- is(X, big), is(X, nice).",
        "description": "All big, nice things are round."
    },
    {
        "id": 8032,
        "statement": "is(X, big) :- is(X, red), is(X, cold).",
        "description": "Red, cold people are big."
    },
    {
        "id": 8033,
        "statement": "is(X, rough) :- is(X, big).",
        "description": "If someone is big then they are rough."
    },
    {
        "id": 8034,
        "statement": "is(X, smart) :- is(X, furry), is(X, rough).",
        "description": "If someone is furry and rough then they are smart."
    },
    {
        "id": 8035,
        "statement": "is(X, smart) :- is(X, big), is(X, rough).",
        "description": "Big, rough people are smart."
    },
    {
        "id": 8036,
        "statement": "is(X, red) :- is(X, quiet).",
        "description": "If someone is quiet then they are red."
    },
    {
        "id": 8037,
        "statement": "is(erin, white) :- is(erin, kind), is(erin, young).",
        "description": "If Erin is kind and Erin is young then Erin is white."
    },
    {
        "id": 8038,
        "statement": "is(X, cold) :- is(X, smart), is(X, nice).",
        "description": "If someone is smart and nice then they are cold."
    },
    {
        "id": 8039,
        "statement": "is(X, smart) :- is(X, big), not is(X, quiet).",
        "description": "If someone is big and not quiet then they are smart."
    },
    {
        "id": 8040,
        "statement": "is(X, smart) :- is(X, young), is(X, quiet).",
        "description": "Young, quiet people are smart."
    },
    {
        "id": 8041,
        "statement": "is(X, white) :- is(X, smart), is(X, quiet).",
        "description": "If someone is smart and quiet then they are white."
    },
    {
        "id": 8042,
        "statement": "needs(X, bear) :- needs(X, lion).",
        "description": "If something needs the lion then it needs the bear."
    },
    {
        "id": 8043,
        "statement": "needs(dog, bear) :- visits(X, dog).",
        "description": "If something visits the dog then the dog needs the bear."
    },
    {
        "id": 8044,
        "statement": "needs(X, cat) :- needs(X, bear), sees(bear, dog).",
        "description": "If something needs the bear and the bear sees the dog then it needs the cat."
    },
    {
        "id": 8045,
        "statement": "sees(dog, cat) :- sees(X, dog), is(X, red).",
        "description": "If something sees the dog and it is red then the dog sees the cat."
    },
    {
        "id": 8046,
        "statement": "visits(cat, dog) :- sees(bear, cat).",
        "description": "If the bear sees the cat then the cat visits the dog."
    },
    {
        "id": 8047,
        "statement": "is(X, red) :- visits(X, lion).",
        "description": "If something visits the lion then it is red."
    },
    {
        "id": 8048,
        "statement": "needs(cat, lion) :- sees(X, cat).",
        "description": "If something sees the cat then the cat needs the lion."
    },
    {
        "id": 8049,
        "statement": "is(X, young) :- visits(X, bear).",
        "description": "If something visits the bear then it is young."
    },
    {
        "id": 8050,
        "statement": "is(X, blue) :- is(X, white), is(X, kind).",
        "description": "If something is white and kind then it is blue."
    },
    {
        "id": 8051,
        "statement": "is(X, kind) :- is(X, green), is(X, round).",
        "description": "Green, round things are kind."
    },
    {
        "id": 8052,
        "statement": "is(X, green) :- is(X, blue), is(X, white).",
        "description": "All blue, white things are green."
    },
    {
        "id": 8053,
        "statement": "chases(X, rabbit) :- sees(X, bald_eagle).",
        "description": "If something sees the bald eagle then it chases the rabbit."
    },
    {
        "id": 8054,
        "statement": "is(X, cold) :- needs(X, bald_eagle).",
        "description": "If something needs the bald eagle then it is cold."
    },
    {
        "id": 8055,
        "statement": "chases(rabbit, bear) :- chases(squirrel, rabbit).",
        "description": "If the squirrel chases the rabbit then the rabbit chases the bear."
    },
    {
        "id": 8056,
        "statement": "sees(X, bald_eagle) :- chases(X, rabbit), is(rabbit, nice).",
        "description": "If something chases the rabbit and the rabbit is nice then it sees the bald eagle."
    },
    {
        "id": 8057,
        "statement": "sees(bear, rabbit) :- chases(X, rabbit), needs(X, bear).",
        "description": "If something chases the rabbit and it needs the bear then the bear sees the rabbit."
    },
    {
        "id": 8058,
        "statement": "sees(X, bald_eagle) :- is(X, cold).",
        "description": "If something is cold then it sees the bald eagle."
    },
    {
        "id": 8059,
        "statement": "needs(X, bald_eagle) :- chases(X, bear).",
        "description": "If something chases the bear then it needs the bald eagle."
    },
    {
        "id": 8060,
        "statement": "sees(bald_eagle, bear) :- chases(X, bald_eagle), is(bald_eagle, round).",
        "description": "If something chases the bald eagle and the bald eagle is round then the bald eagle sees the bear."
    },
    {
        "id": 8061,
        "statement": "is(X, white) :- is(X, quiet), is(X, furry).",
        "description": "If something is quiet and furry then it is white."
    },
    {
        "id": 8062,
        "statement": "is(X, quiet) :- is(X, round), is(X, red).",
        "description": "If something is round and red then it is quiet."
    },
    {
        "id": 8063,
        "statement": "is(X, round) :- is(X, smart), is(X, white).",
        "description": "Smart, white things are round."
    },
    {
        "id": 8064,
        "statement": "is(X, smart) :- is(X, quiet), is(X, round).",
        "description": "All quiet, round things are smart."
    },
    {
        "id": 8065,
        "statement": "is(X, white) :- is(X, rough), is(X, round).",
        "description": "Rough, round people are white."
    },
    {
        "id": 8066,
        "statement": "is(charlie, white) :- is(charlie, furry), is(charlie, red).",
        "description": "If Charlie is furry and Charlie is red then Charlie is white."
    },
    {
        "id": 8067,
        "statement": "is(charlie, furry) :- is(charlie, young), is(charlie, white).",
        "description": "If Charlie is young and Charlie is white then Charlie is furry."
    },
    {
        "id": 8068,
        "statement": "is(X, rough) :- is(X, big), is(X, red).",
        "description": "Big, red people are rough."
    },
    {
        "id": 8069,
        "statement": "is(bald_eagle, nice) :- visits(bald_eagle, cat), likes(cat, bald_eagle).",
        "description": "If the bald eagle visits the cat and the cat likes the bald eagle then the bald eagle is nice."
    },
    {
        "id": 8070,
        "statement": "visits(dog, bear) :- likes(X, dog).",
        "description": "If someone likes the dog then the dog visits the bear."
    },
    {
        "id": 8071,
        "statement": "likes(X, bear) :- likes(X, bald_eagle), is(bald_eagle, big).",
        "description": "If someone likes the bald eagle and the bald eagle is big then they like the bear."
    },
    {
        "id": 8072,
        "statement": "likes(bald_eagle, bear) :- eats(bald_eagle, bear).",
        "description": "If the bald eagle eats the bear then the bald eagle likes the bear."
    },
    {
        "id": 8073,
        "statement": "is(cat, nice) :- visits(X, cat), eats(X, bear).",
        "description": "If someone visits the cat and they eat the bear then the cat is nice."
    },
    {
        "id": 8074,
        "statement": "likes(dog, cat) :- likes(X, dog).",
        "description": "If someone likes the dog then the dog likes the cat."
    },
    {
        "id": 8075,
        "statement": "eats(X, bear) :- is(X, nice).",
        "description": "If someone is nice then they eat the bear."
    },
    {
        "id": 8076,
        "statement": "is(bob, blue) :- is(bob, round), is(bob, nice).",
        "description": "If Bob is round and Bob is nice then Bob is blue."
    },
    {
        "id": 8077,
        "statement": "is(gary, red) :- is(gary, kind).",
        "description": "If Gary is kind then Gary is red."
    },
    {
        "id": 8078,
        "statement": "is(X, quiet) :- is(X, smart), is(X, nice).",
        "description": "All smart, nice people are quiet."
    },
    {
        "id": 8079,
        "statement": "is(X, smart) :- is(X, quiet), is(X, kind).",
        "description": "All quiet, kind people are smart."
    },
    {
        "id": 8080,
        "statement": "is(X, blue) :- is(X, round), is(X, kind).",
        "description": "If someone is round and kind then they are blue."
    },
    {
        "id": 8081,
        "statement": "is(rabbit, round) :- is(X, blue), not eats(X, rabbit).",
        "description": "If someone is blue and they do not eat the rabbit then the rabbit is round."
    },
    {
        "id": 8082,
        "statement": "sees(X, dog) :- is(X, round).",
        "description": "If someone is round then they see the dog."
    },
    {
        "id": 8083,
        "statement": "is(X, green) :- chases(X, rabbit).",
        "description": "If someone chases the rabbit then they are green."
    },
    {
        "id": 8084,
        "statement": "chases(bear, rabbit) :- is(cow, kind), not eats(cow, bear).",
        "description": "If the cow is kind and the cow does not eat the bear then the bear chases the rabbit."
    },
    {
        "id": 8085,
        "statement": "sees(rabbit, bear) :- eats(X, rabbit), sees(rabbit, cow).",
        "description": "If someone eats the rabbit and the rabbit sees the cow then the rabbit sees the bear."
    },
    {
        "id": 8086,
        "statement": "sees(dog, bear) :- sees(dog, rabbit).",
        "description": "If the dog sees the rabbit then the dog sees the bear."
    },
    {
        "id": 8087,
        "statement": "is(erin, furry) :- is(erin, big), is(erin, blue).",
        "description": "If Erin is big and Erin is blue then Erin is furry."
    },
    {
        "id": 8088,
        "statement": "is(anne, smart) :- is(anne, furry).",
        "description": "If Anne is furry then Anne is smart."
    },
    {
        "id": 8089,
        "statement": "is(X, blue) :- is(X, red).",
        "description": "All red people are blue."
    },
    {
        "id": 8090,
        "statement": "is(X, kind) :- is(X, green), is(X, smart).",
        "description": "If someone is green and smart then they are kind."
    },
    {
        "id": 8091,
        "statement": "is(X, big) :- is(X, quiet), is(X, cold).",
        "description": "If someone is quiet and cold then they are big."
    },
    {
        "id": 8092,
        "statement": "is(gary, red) :- is(gary, quiet).",
        "description": "If Gary is quiet then Gary is red."
    },
    {
        "id": 8093,
        "statement": "is(dave, rough) :- is(dave, blue), is(dave, big).",
        "description": "If Dave is blue and Dave is big then Dave is rough."
    },
    {
        "id": 8094,
        "statement": "is(X, cold) :- is(X, red), is(X, green).",
        "description": "If someone is red and green then they are cold."
    },
    {
        "id": 8095,
        "statement": "likes(X, squirrel) :- needs(X, cat).",
        "description": "If someone needs the cat then they like the squirrel."
    },
    {
        "id": 8096,
        "statement": "needs(lion, squirrel) :- chases(lion, cat).",
        "description": "If the lion chases the cat then the lion needs the squirrel."
    },
    {
        "id": 8097,
        "statement": "is(cat, round) :- needs(lion, rabbit), needs(lion, cat).",
        "description": "If the lion needs the rabbit and the lion needs the cat then the cat is round."
    },
    {
        "id": 8098,
        "statement": "chases(X, cat) :- is(X, rough), likes(X, squirrel).",
        "description": "If someone is rough and they like the squirrel then they chase the cat."
    },
    {
        "id": 8099,
        "statement": "is(lion, kind) :- likes(lion, cat), chases(lion, squirrel).",
        "description": "If the lion likes the cat and the lion chases the squirrel then the lion is kind."
    },
    {
        "id": 8100,
        "statement": "likes(cat, squirrel) :- chases(X, cat).",
        "description": "If someone chases the cat then the cat likes the squirrel."
    },
    {
        "id": 8101,
        "statement": "chases(bear, lion) :- visits(tiger, bear), eats(tiger, bear).",
        "description": "If the tiger visits the bear and the tiger eats the bear then the bear chases the lion."
    },
    {
        "id": 8102,
        "statement": "is(X, blue) :- chases(X, cow).",
        "description": "If someone chases the cow then they are blue."
    },
    {
        "id": 8103,
        "statement": "chases(X, bear) :- visits(X, cow).",
        "description": "If someone visits the cow then they chase the bear."
    },
    {
        "id": 8104,
        "statement": "is(X, red) :- eats(X, bear), is(bear, young).",
        "description": "If someone eats the bear and the bear is young then they are red."
    },
    {
        "id": 8105,
        "statement": "chases(bear, lion) :- chases(X, bear), chases(bear, tiger).",
        "description": "If someone chases the bear and the bear chases the tiger then the bear chases the lion."
    },
    {
        "id": 8106,
        "statement": "visits(X, tiger) :- eats(X, lion), eats(lion, tiger).",
        "description": "If someone eats the lion and the lion eats the tiger then they visit the tiger."
    },
    {
        "id": 8107,
        "statement": "chases(X, tiger) :- eats(X, cow), chases(X, bear).",
        "description": "If someone eats the cow and they chase the bear then they chase the tiger."
    },
    {
        "id": 8108,
        "statement": "chases(lion, cow) :- is(bear, blue), chases(bear, lion).",
        "description": "If the bear is blue and the bear chases the lion then the lion chases the cow."
    },
    {
        "id": 8109,
        "statement": "visits(tiger, cow) :- chases(X, cow), eats(X, tiger).",
        "description": "If someone chases the cow and they eat the tiger then the tiger visits the cow."
    },
    {
        "id": 8110,
        "statement": "is(X, blue) :- is(X, red), is(X, nice).",
        "description": "All red, nice things are blue."
    },
    {
        "id": 8111,
        "statement": "is(X, green) :- is(X, big), is(X, nice).",
        "description": "If something is big and nice then it is green."
    },
    {
        "id": 8112,
        "statement": "is(fiona, nice) :- is(fiona, green).",
        "description": "If Fiona is green then Fiona is nice."
    },
    {
        "id": 8113,
        "statement": "is(X, nice) :- is(X, green), is(X, big).",
        "description": "If something is green and big then it is nice."
    },
    {
        "id": 8114,
        "statement": "is(fiona, green) :- is(fiona, young).",
        "description": "If Fiona is young then Fiona is green."
    },
    {
        "id": 8115,
        "statement": "is(lion, rough) :- sees(X, lion), not is(X, nice).",
        "description": "If someone sees the lion and they are not nice then the lion is rough."
    },
    {
        "id": 8116,
        "statement": "sees(lion, rabbit) :- sees(X, lion).",
        "description": "If someone sees the lion then the lion sees the rabbit."
    },
    {
        "id": 8117,
        "statement": "sees(X, lion) :- is(X, nice), is(X, young).",
        "description": "If someone is nice and young then they see the lion."
    },
    {
        "id": 8118,
        "statement": "sees(bear, rabbit) :- sees(bear, lion).",
        "description": "If the bear sees the lion then the bear sees the rabbit."
    },
    {
        "id": 8119,
        "statement": "sees(X, tiger) :- eats(X, lion), sees(lion, rabbit).",
        "description": "If someone eats the lion and the lion sees the rabbit then they see the tiger."
    },
    {
        "id": 8120,
        "statement": "is(rabbit, round) :- chases(rabbit, tiger).",
        "description": "If the rabbit chases the tiger then the rabbit is round."
    },
    {
        "id": 8121,
        "statement": "is(lion, rough) :- visits(bear, lion).",
        "description": "If the bear visits the lion then the lion is rough."
    },
    {
        "id": 8122,
        "statement": "is(dog, big) :- visits(X, dog), not eats(X, dog).",
        "description": "If someone visits the dog and they do not eat the dog then the dog is big."
    },
    {
        "id": 8123,
        "statement": "is(lion, nice) :- likes(lion, bear), is(bear, big).",
        "description": "If the lion likes the bear and the bear is big then the lion is nice."
    },
    {
        "id": 8124,
        "statement": "visits(lion, bear) :- eats(X, lion).",
        "description": "If someone eats the lion then the lion visits the bear."
    },
    {
        "id": 8125,
        "statement": "eats(X, lion) :- is(X, rough), not is(X, nice).",
        "description": "If someone is rough and not nice then they eat the lion."
    },
    {
        "id": 8126,
        "statement": "is(lion, big) :- eats(X, lion), visits(lion, bear).",
        "description": "If someone eats the lion and the lion visits the bear then the lion is big."
    },
    {
        "id": 8127,
        "statement": "is(X, red) :- is(X, rough), is(X, young).",
        "description": "If someone is rough and young then they are red."
    },
    {
        "id": 8128,
        "statement": "is(X, green) :- is(X, cold), is(X, nice).",
        "description": "Cold, nice people are green."
    },
    {
        "id": 8129,
        "statement": "is(X, young) :- is(X, rough), is(X, red).",
        "description": "Rough, red people are young."
    },
    {
        "id": 8130,
        "statement": "is(X, young) :- is(X, green), is(X, rough).",
        "description": "Green, rough people are young."
    },
    {
        "id": 8131,
        "statement": "is(dave, round) :- is(dave, cold).",
        "description": "If Dave is cold then Dave is round."
    },
    {
        "id": 8132,
        "statement": "is(gary, kind) :- is(gary, rough), is(gary, cold).",
        "description": "If Gary is rough and Gary is cold then Gary is kind."
    },
    {
        "id": 8133,
        "statement": "is(X, kind) :- is(X, round), is(X, quiet).",
        "description": "Round, quiet people are kind."
    },
    {
        "id": 8134,
        "statement": "is(bob, quiet) :- is(bob, cold).",
        "description": "If Bob is cold then Bob is quiet."
    },
    {
        "id": 8135,
        "statement": "is(bald_eagle, big) :- likes(X, bald_eagle), is(X, kind).",
        "description": "If something likes the bald eagle and it is kind then the bald eagle is big."
    },
    {
        "id": 8136,
        "statement": "eats(cat, mouse) :- likes(cat, bald_eagle).",
        "description": "If the cat likes the bald eagle then the cat eats the mouse."
    },
    {
        "id": 8137,
        "statement": "is(X, kind) :- eats(X, tiger), needs(tiger, cat).",
        "description": "If something eats the tiger and the tiger needs the cat then it is kind."
    },
    {
        "id": 8138,
        "statement": "needs(X, cat) :- is(X, big).",
        "description": "If something is big then it needs the cat."
    },
    {
        "id": 8139,
        "statement": "is(tiger, big) :- needs(cat, tiger), needs(tiger, mouse).",
        "description": "If the cat needs the tiger and the tiger needs the mouse then the tiger is big."
    },
    {
        "id": 8140,
        "statement": "eats(X, tiger) :- eats(X, mouse).",
        "description": "If something eats the mouse then it eats the tiger."
    },
    {
        "id": 8141,
        "statement": "is(X, white) :- is(X, big), is(X, smart).",
        "description": "All big, smart things are white."
    },
    {
        "id": 8142,
        "statement": "is(erin, white) :- is(erin, blue), is(erin, red).",
        "description": "If Erin is blue and Erin is red then Erin is white."
    },
    {
        "id": 8143,
        "statement": "is(X, kind) :- is(X, red), is(X, blue).",
        "description": "All red, blue things are kind."
    },
    {
        "id": 8144,
        "statement": "is(X, smart) :- is(X, big), is(X, blue).",
        "description": "If something is big and blue then it is smart."
    },
    {
        "id": 8145,
        "statement": "is(X, nice) :- is(X, white), is(X, red).",
        "description": "All white, red things are nice."
    },
    {
        "id": 8146,
        "statement": "is(erin, rough) :- is(erin, quiet), is(erin, cold).",
        "description": "If Erin is quiet and Erin is cold then Erin is rough."
    },
    {
        "id": 8147,
        "statement": "is(erin, quiet) :- is(erin, smart).",
        "description": "If Erin is smart then Erin is quiet."
    },
    {
        "id": 8148,
        "statement": "is(X, smart) :- is(X, quiet), is(X, round).",
        "description": "All quiet, round people are smart."
    },
    {
        "id": 8149,
        "statement": "is(X, rough) :- is(X, kind), is(X, green).",
        "description": "If something is kind and green then it is rough."
    },
    {
        "id": 8150,
        "statement": "is(X, red) :- is(X, blue).",
        "description": "All blue things are red."
    },
    {
        "id": 8151,
        "statement": "is(X, red) :- is(X, big), not is(X, nice).",
        "description": "If someone is big and not nice then they are red."
    },
    {
        "id": 8152,
        "statement": "is(X, young) :- is(X, red), is(X, smart).",
        "description": "All red, smart people are young."
    },
    {
        "id": 8153,
        "statement": "is(gary, smart) :- is(gary, big).",
        "description": "If Gary is big then Gary is smart."
    },
    {
        "id": 8154,
        "statement": "is(X, round) :- is(X, furry), is(X, kind).",
        "description": "Furry, kind things are round."
    },
    {
        "id": 8155,
        "statement": "is(X, furry) :- is(X, green), is(X, kind).",
        "description": "All green, kind things are furry."
    },
    {
        "id": 8156,
        "statement": "is(X, green) :- is(X, blue), is(X, kind).",
        "description": "If something is blue and kind then it is green."
    },
    {
        "id": 8157,
        "statement": "is(gary, blue) :- is(gary, kind).",
        "description": "If Gary is kind then Gary is blue."
    },
    {
        "id": 8158,
        "statement": "eats(X, bear) :- is(X, cold), needs(X, bear).",
        "description": "If someone is cold and they need the bear then they eat the bear."
    },
    {
        "id": 8159,
        "statement": "is(X, young) :- needs(X, rabbit), is(rabbit, nice).",
        "description": "If someone needs the rabbit and the rabbit is nice then they are young."
    },
    {
        "id": 8160,
        "statement": "needs(bear, mouse) :- needs(X, bear).",
        "description": "If someone needs the bear then the bear needs the mouse."
    },
    {
        "id": 8161,
        "statement": "is(X, blue) :- needs(X, rabbit), not is(X, red).",
        "description": "If someone needs the rabbit and they are not red then they are blue."
    },
    {
        "id": 8162,
        "statement": "needs(rabbit, bear) :- chases(X, rabbit).",
        "description": "If someone chases the rabbit then the rabbit needs the bear."
    },
    {
        "id": 8163,
        "statement": "chases(rabbit, bear) :- is(mouse, red), not chases(rabbit, mouse).",
        "description": "If the mouse is red and the rabbit does not chase the mouse then the rabbit chases the bear."
    },
    {
        "id": 8164,
        "statement": "needs(X, bear) :- is(X, cold).",
        "description": "If someone is cold then they need the bear."
    },
    {
        "id": 8165,
        "statement": "is(X, red) :- is(X, green).",
        "description": "All green things are red."
    },
    {
        "id": 8166,
        "statement": "is(X, smart) :- is(X, red), is(X, white).",
        "description": "All red, white things are smart."
    },
    {
        "id": 8167,
        "statement": "is(X, kind) :- is(X, white), is(X, quiet).",
        "description": "All white, quiet things are kind."
    },
    {
        "id": 8168,
        "statement": "is(X, young) :- is(X, cold), is(X, rough).",
        "description": "Cold, rough things are young."
    },
    {
        "id": 8169,
        "statement": "is(harry, round) :- is(harry, kind), is(harry, young).",
        "description": "If Harry is kind and Harry is young then Harry is round."
    },
    {
        "id": 8170,
        "statement": "is(X, cold) :- is(X, kind), is(X, rough).",
        "description": "All kind, rough things are cold."
    },
    {
        "id": 8171,
        "statement": "is(X, nice) :- is(X, furry), is(X, big).",
        "description": "Furry, big people are nice."
    },
    {
        "id": 8172,
        "statement": "is(X, nice) :- is(X, big), is(X, cold).",
        "description": "If someone is big and cold then they are nice."
    },
    {
        "id": 8173,
        "statement": "is(X, blue) :- is(X, nice), is(X, furry).",
        "description": "Nice, furry people are blue."
    },
    {
        "id": 8174,
        "statement": "is(X, cold) :- is(X, green).",
        "description": "If someone is green then they are cold."
    },
    {
        "id": 8175,
        "statement": "visits(tiger, lion).",
        "description": "The tiger visits the lion."
    },
    {
        "id": 8176,
        "statement": "is(lion, red) :- visits(X, lion).",
        "description": "If someone visits the lion then the lion is red."
    },
    {
        "id": 8177,
        "statement": "visits(X, bear) :- sees(X, tiger).",
        "description": "If someone sees the tiger then they visit the bear."
    },
    {
        "id": 8178,
        "statement": "needs(bear, cow) :- is(X, red), sees(X, bear).",
        "description": "If someone is red and they see the bear then the bear needs the cow."
    },
    {
        "id": 8179,
        "statement": "needs(tiger, cow) :- sees(X, tiger).",
        "description": "If someone sees the tiger then the tiger needs the cow."
    },
    {
        "id": 8180,
        "statement": "is(lion, cold) :- sees(tiger, lion), needs(lion, tiger).",
        "description": "If the tiger sees the lion and the lion needs the tiger then the lion is cold."
    },
    {
        "id": 8181,
        "statement": "sees(tiger, bear) :- needs(X, cow), needs(cow, tiger).",
        "description": "If someone needs the cow and the cow needs the tiger then the tiger sees the bear."
    },
    {
        "id": 8182,
        "statement": "sees(X, lion) :- is(X, cold).",
        "description": "If someone is cold then they see the lion."
    },
    {
        "id": 8183,
        "statement": "visits(bear, lion) :- visits(X, bear), needs(bear, cow).",
        "description": "If someone visits the bear and the bear needs the cow then the bear visits the lion."
    },
    {
        "id": 8184,
        "statement": "sees(X, tiger) :- needs(X, cow).",
        "description": "If someone needs the cow then they see the tiger."
    },
    {
        "id": 8185,
        "statement": "visits(X, bald_eagle) :- sees(X, tiger).",
        "description": "If something sees the tiger then it visits the bald eagle."
    },
    {
        "id": 8186,
        "statement": "likes(X, cow) :- likes(X, tiger).",
        "description": "If something likes the tiger then it likes the cow."
    },
    {
        "id": 8187,
        "statement": "is(bald_eagle, cold) :- sees(X, bald_eagle), likes(bald_eagle, squirrel).",
        "description": "If something sees the bald eagle and the bald eagle likes the squirrel then the bald eagle is cold."
    },
    {
        "id": 8188,
        "statement": "likes(cow, tiger) :- is(bald_eagle, round), not sees(bald_eagle, cow).",
        "description": "If the bald eagle is round and the bald eagle does not see the cow then the cow likes the tiger."
    },
    {
        "id": 8189,
        "statement": "is(X, round) :- visits(X, tiger).",
        "description": "If something visits the tiger then it is round."
    },
    {
        "id": 8190,
        "statement": "visits(X, tiger) :- likes(X, cow).",
        "description": "If something likes the cow then it visits the tiger."
    },
    {
        "id": 8191,
        "statement": "is(X, blue) :- is(X, young), not is(X, kind).",
        "description": "If someone is young and not kind then they are blue."
    },
    {
        "id": 8192,
        "statement": "is(cow, rough) :- visits(bear, cow).",
        "description": "If the bear visits the cow then the cow is rough."
    },
    {
        "id": 8193,
        "statement": "needs(X, cow) :- is(X, blue).",
        "description": "If someone is blue then they need the cow."
    },
    {
        "id": 8194,
        "statement": "is(bear, rough) :- visits(cow, bear).",
        "description": "If the cow visits the bear then the bear is rough."
    },
    {
        "id": 8195,
        "statement": "visits(mouse, cat) :- visits(X, mouse), is(X, big).",
        "description": "If someone visits the mouse and they are big then the mouse visits the cat."
    },
    {
        "id": 8196,
        "statement": "visits(mouse, cat) :- visits(bear, mouse), is(mouse, rough).",
        "description": "If the bear visits the mouse and the mouse is rough then the mouse visits the cat."
    },
    {
        "id": 8197,
        "statement": "eats(X, bear) :- needs(X, cow).",
        "description": "If someone needs the cow then they eat the bear."
    },
    {
        "id": 8198,
        "statement": "is(harry, smart) :- is(harry, cold).",
        "description": "If Harry is cold then Harry is smart."
    },
    {
        "id": 8199,
        "statement": "is(X, rough) :- is(X, cold), is(X, smart).",
        "description": "If someone is cold and smart then they are rough."
    },
    {
        "id": 8200,
        "statement": "is(fiona, white) :- is(fiona, rough), is(fiona, kind).",
        "description": "If Fiona is rough and Fiona is kind then Fiona is white."
    },
    {
        "id": 8201,
        "statement": "is(X, big) :- is(X, white), is(X, cold).",
        "description": "All white, cold people are big."
    },
    {
        "id": 8202,
        "statement": "is(X, smart) :- is(X, cold).",
        "description": "If someone is cold then they are smart."
    },
    {
        "id": 8203,
        "statement": "is(X, big) :- is(X, smart), is(X, cold).",
        "description": "All smart, cold people are big."
    },
    {
        "id": 8204,
        "statement": "is(X, big) :- is(X, round), is(X, white).",
        "description": "Round, white people are big."
    },
    {
        "id": 8205,
        "statement": "is(X, nice) :- is(X, smart), is(X, big).",
        "description": "All smart, big people are nice."
    },
    {
        "id": 8206,
        "statement": "is(X, round) :- is(X, nice), is(X, green).",
        "description": "Nice, green people are round."
    },
    {
        "id": 8207,
        "statement": "is(X, green) :- is(X, big), is(X, smart).",
        "description": "Big, smart people are green."
    },
    {
        "id": 8208,
        "statement": "is(fiona, smart) :- is(fiona, nice).",
        "description": "If Fiona is nice then Fiona is smart."
    },
    {
        "id": 8209,
        "statement": "likes(X, bear) :- sees(X, bear), visits(bear, cow).",
        "description": "If someone sees the bear and the bear visits the cow then they like the bear."
    },
    {
        "id": 8210,
        "statement": "is(X, cold) :- sees(X, dog).",
        "description": "If someone sees the dog then they are cold."
    },
    {
        "id": 8211,
        "statement": "visits(bear, bald_eagle) :- is(bear, young).",
        "description": "If the bear is young then the bear visits the bald eagle."
    },
    {
        "id": 8212,
        "statement": "visits(cow, dog) :- likes(X, cow), not is(X, rough).",
        "description": "If someone likes the cow and they are not rough then the cow visits the dog."
    },
    {
        "id": 8213,
        "statement": "likes(dog, bear) :- visits(X, dog), visits(dog, bald_eagle).",
        "description": "If someone visits the dog and the dog visits the bald eagle then the dog likes the bear."
    },
    {
        "id": 8214,
        "statement": "visits(cow, bear) :- sees(dog, cow).",
        "description": "If the dog sees the cow then the cow visits the bear."
    },
    {
        "id": 8215,
        "statement": "is(X, green) :- likes(X, bear), not visits(X, bear).",
        "description": "If someone likes the bear and they do not visit the bear then they are green."
    },
    {
        "id": 8216,
        "statement": "is(cow, young) :- is(X, young), not likes(X, cow).",
        "description": "If someone is young and they do not like the cow then the cow is young."
    },
    {
        "id": 8217,
        "statement": "is(dave, big) :- is(dave, young).",
        "description": "If Dave is young then Dave is big."
    },
    {
        "id": 8218,
        "statement": "is(X, smart) :- is(X, quiet), is(X, nice).",
        "description": "Quiet, nice things are smart."
    },
    {
        "id": 8219,
        "statement": "is(X, nice) :- is(X, green), not is(X, big).",
        "description": "If something is green and not big then it is nice."
    },
    {
        "id": 8220,
        "statement": "is(X, nice) :- is(X, smart), is(X, green).",
        "description": "If something is smart and green then it is nice."
    },
    {
        "id": 8221,
        "statement": "is(X, red) :- is(X, furry).",
        "description": "Furry things are red."
    },
    {
        "id": 8222,
        "statement": "is(anne, red) :- is(anne, white), is(anne, blue).",
        "description": "If Anne is white and Anne is blue then Anne is red."
    },
    {
        "id": 8223,
        "statement": "is(X, furry) :- is(X, smart), is(X, white).",
        "description": "If something is smart and white then it is furry."
    },
    {
        "id": 8224,
        "statement": "is(bob, white) :- is(bob, smart).",
        "description": "If Bob is smart then Bob is white."
    },
    {
        "id": 8225,
        "statement": "is(erin, blue) :- is(erin, round), is(erin, smart).",
        "description": "If Erin is round and Erin is smart then Erin is blue."
    },
    {
        "id": 8226,
        "statement": "is(X, kind) :- is(X, furry), is(X, young).",
        "description": "If someone is furry and young then they are kind."
    },
    {
        "id": 8227,
        "statement": "is(X, green) :- is(X, young), is(X, big).",
        "description": "All young, big people are green."
    },
    {
        "id": 8228,
        "statement": "is(X, furry) :- is(X, green), is(X, quiet).",
        "description": "All green, quiet people are furry."
    },
    {
        "id": 8229,
        "statement": "is(bob, blue) :- not is(bob, young), not is(bob, furry).",
        "description": "If Bob is not young and Bob is not furry then Bob is blue."
    },
    {
        "id": 8230,
        "statement": "sees(dog, squirrel) :- eats(X, squirrel), eats(X, dog).",
        "description": "If someone eats the squirrel and they eat the dog then the dog sees the squirrel."
    },
    {
        "id": 8231,
        "statement": "is(bald_eagle, rough) :- eats(X, squirrel), likes(squirrel, bald_eagle).",
        "description": "If someone eats the squirrel and the squirrel likes the bald eagle then the bald eagle is rough."
    },
    {
        "id": 8232,
        "statement": "sees(X, squirrel) :- sees(X, dog).",
        "description": "If someone sees the dog then they see the squirrel."
    },
    {
        "id": 8233,
        "statement": "likes(bald_eagle, bear) :- sees(X, bald_eagle).",
        "description": "If someone sees the bald eagle then the bald eagle likes the bear."
    },
    {
        "id": 8234,
        "statement": "likes(squirrel, dog) :- is(squirrel, young).",
        "description": "If the squirrel is young then the squirrel likes the dog."
    },
    {
        "id": 8235,
        "statement": "likes(squirrel, dog) :- is(X, young), likes(X, squirrel).",
        "description": "If someone is young and they like the squirrel then the squirrel likes the dog."
    },
    {
        "id": 8236,
        "statement": "likes(X, bald_eagle) :- is(X, rough).",
        "description": "If someone is rough then they like the bald eagle."
    },
    {
        "id": 8237,
        "statement": "is(squirrel, rough) :- likes(X, bear), not likes(X, squirrel).",
        "description": "If someone likes the bear and they do not like the squirrel then the squirrel is rough."
    },
    {
        "id": 8238,
        "statement": "is(X, young) :- likes(X, squirrel).",
        "description": "If someone likes the squirrel then they are young."
    },
    {
        "id": 8239,
        "statement": "is(X, kind) :- is(X, cold), is(X, nice).",
        "description": "All cold, nice people are kind."
    },
    {
        "id": 8240,
        "statement": "is(dave, nice) :- is(dave, big).",
        "description": "If Dave is big then Dave is nice."
    },
    {
        "id": 8241,
        "statement": "is(X, big) :- is(X, white), is(X, nice).",
        "description": "White, nice people are big."
    },
    {
        "id": 8242,
        "statement": "is(X, nice) :- is(X, cold), is(X, quiet).",
        "description": "If someone is cold and quiet then they are nice."
    },
    {
        "id": 8243,
        "statement": "eats(bear, cow) :- is(X, nice), eats(X, bear).",
        "description": "If someone is nice and they eat the bear then the bear eats the cow."
    },
    {
        "id": 8244,
        "statement": "likes(X, bear) :- likes(X, bald_eagle).",
        "description": "If someone likes the bald eagle then they like the bear."
    },
    {
        "id": 8245,
        "statement": "is(X, nice) :- likes(X, bear).",
        "description": "If someone likes the bear then they are nice."
    },
    {
        "id": 8246,
        "statement": "is(X, cold) :- is(X, nice), eats(X, cow).",
        "description": "If someone is nice and they eat the cow then they are cold."
    },
    {
        "id": 8247,
        "statement": "likes(X, cow) :- visits(X, bald_eagle).",
        "description": "If someone visits the bald eagle then they like the cow."
    },
    {
        "id": 8248,
        "statement": "visits(cow, rabbit) :- eats(rabbit, bear), visits(bear, cow).",
        "description": "If the rabbit eats the bear and the bear visits the cow then the cow visits the rabbit."
    },
    {
        "id": 8249,
        "statement": "likes(X, bald_eagle) :- visits(X, cow).",
        "description": "If someone visits the cow then they like the bald eagle."
    },
    {
        "id": 8250,
        "statement": "is(bald_eagle, cold) :- likes(X, bald_eagle).",
        "description": "If someone likes the bald eagle then the bald eagle is cold."
    },
    {
        "id": 8251,
        "statement": "is(bear, big) :- eats(X, bear).",
        "description": "If something eats the bear then the bear is big."
    },
    {
        "id": 8252,
        "statement": "eats(bear, tiger) :- eats(bear, cow).",
        "description": "If the bear eats the cow then the bear eats the tiger."
    },
    {
        "id": 8253,
        "statement": "eats(X, lion) :- visits(X, bear), not is(X, red).",
        "description": "If something visits the bear and it is not red then it eats the lion."
    },
    {
        "id": 8254,
        "statement": "is(lion, big) :- chases(X, lion).",
        "description": "If something chases the lion then the lion is big."
    },
    {
        "id": 8255,
        "statement": "visits(X, cow) :- eats(X, tiger), not is(X, red).",
        "description": "If something eats the tiger and it is not red then it visits the cow."
    },
    {
        "id": 8256,
        "statement": "visits(tiger, bear) :- chases(X, tiger), chases(tiger, cow).",
        "description": "If something chases the tiger and the tiger chases the cow then the tiger visits the bear."
    },
    {
        "id": 8257,
        "statement": "eats(cow, tiger) :- visits(X, cow).",
        "description": "If something visits the cow then the cow eats the tiger."
    },
    {
        "id": 8258,
        "statement": "is(X, kind) :- is(X, blue), is(X, rough).",
        "description": "If someone is blue and rough then they are kind."
    },
    {
        "id": 8259,
        "statement": "is(X, cold) :- is(X, kind), is(X, red).",
        "description": "If something is kind and red then it is cold."
    },
    {
        "id": 8260,
        "statement": "is(X, white) :- is(X, red), is(X, cold).",
        "description": "All red, cold things are white."
    },
    {
        "id": 8261,
        "statement": "is(X, round) :- is(X, white).",
        "description": "White things are round."
    },
    {
        "id": 8262,
        "statement": "is(X, kind) :- is(X, smart), is(X, round).",
        "description": "If something is smart and round then it is kind."
    },
    {
        "id": 8263,
        "statement": "is(X, blue) :- visits(X, bald_eagle), visits(X, rabbit).",
        "description": "If something visits the bald eagle and it visits the rabbit then it is blue."
    },
    {
        "id": 8264,
        "statement": "likes(squirrel, bear) :- likes(X, squirrel).",
        "description": "If something likes the squirrel then the squirrel likes the bear."
    },
    {
        "id": 8265,
        "statement": "likes(squirrel, bear) :- visits(X, bald_eagle), chases(bald_eagle, squirrel).",
        "description": "If something visits the bald eagle and the bald eagle chases the squirrel then the squirrel likes the bear."
    },
    {
        "id": 8266,
        "statement": "chases(X, rabbit) :- chases(X, bald_eagle).",
        "description": "If something chases the bald eagle then it chases the rabbit."
    },
    {
        "id": 8267,
        "statement": "chases(X, rabbit) :- is(X, cold), not is(X, big).",
        "description": "If something is cold and not big then it chases the rabbit."
    },
    {
        "id": 8268,
        "statement": "is(squirrel, cold) :- likes(X, squirrel).",
        "description": "If something likes the squirrel then the squirrel is cold."
    },
    {
        "id": 8269,
        "statement": "chases(squirrel, bear) :- visits(X, squirrel).",
        "description": "If something visits the squirrel then the squirrel chases the bear."
    },
    {
        "id": 8270,
        "statement": "sees(tiger, rabbit) :- is(X, blue), visits(X, tiger).",
        "description": "If something is blue and it visits the tiger then the tiger sees the rabbit."
    },
    {
        "id": 8271,
        "statement": "visits(mouse, squirrel) :- sees(X, rabbit), chases(rabbit, mouse).",
        "description": "If something sees the rabbit and the rabbit chases the mouse then the mouse visits the squirrel."
    },
    {
        "id": 8272,
        "statement": "is(X, young) :- sees(X, rabbit).",
        "description": "If something sees the rabbit then it is young."
    },
    {
        "id": 8273,
        "statement": "chases(X, rabbit) :- is(X, young).",
        "description": "If something is young then it chases the rabbit."
    },
    {
        "id": 8274,
        "statement": "visits(X, rabbit) :- chases(X, rabbit).",
        "description": "If something chases the rabbit then it visits the rabbit."
    },
    {
        "id": 8275,
        "statement": "visits(squirrel, tiger) :- chases(X, squirrel).",
        "description": "If something chases the squirrel then the squirrel visits the tiger."
    },
    {
        "id": 8276,
        "statement": "sees(squirrel, mouse) :- visits(X, squirrel), is(X, kind).",
        "description": "If something visits the squirrel and it is kind then the squirrel sees the mouse."
    },
    {
        "id": 8277,
        "statement": "is(dave, round) :- is(dave, kind), is(dave, nice).",
        "description": "If Dave is kind and Dave is nice then Dave is round."
    },
    {
        "id": 8278,
        "statement": "is(X, round) :- is(X, kind), is(X, nice).",
        "description": "Kind, nice things are round."
    },
    {
        "id": 8279,
        "statement": "is(X, round) :- is(X, blue).",
        "description": "All blue things are round."
    },
    {
        "id": 8280,
        "statement": "is(X, green) :- is(X, blue), is(X, cold).",
        "description": "All blue, cold things are green."
    },
    {
        "id": 8281,
        "statement": "eats(X, dog) :- chases(X, squirrel), needs(X, dog).",
        "description": "If someone chases the squirrel and they need the dog then they eat the dog."
    },
    {
        "id": 8282,
        "statement": "is(X, round) :- eats(X, lion), is(lion, big).",
        "description": "If someone eats the lion and the lion is big then they are round."
    },
    {
        "id": 8283,
        "statement": "is(X, kind) :- chases(X, tiger), chases(X, lion).",
        "description": "If someone chases the tiger and they chase the lion then they are kind."
    },
    {
        "id": 8284,
        "statement": "needs(lion, dog) :- needs(X, lion).",
        "description": "If someone needs the lion then the lion needs the dog."
    },
    {
        "id": 8285,
        "statement": "needs(X, lion) :- eats(X, squirrel).",
        "description": "If someone eats the squirrel then they need the lion."
    },
    {
        "id": 8286,
        "statement": "is(dog, big) :- chases(X, squirrel), eats(X, dog).",
        "description": "If someone chases the squirrel and they eat the dog then the dog is big."
    },
    {
        "id": 8287,
        "statement": "is(squirrel, rough) :- chases(squirrel, lion).",
        "description": "If the squirrel chases the lion then the squirrel is rough."
    },
    {
        "id": 8288,
        "statement": "chases(X, squirrel) :- is(X, big).",
        "description": "If someone is big then they chase the squirrel."
    },
    {
        "id": 8289,
        "statement": "needs(dog, lion) :- is(X, red), eats(X, dog).",
        "description": "If someone is red and they eat the dog then the dog needs the lion."
    },
    {
        "id": 8290,
        "statement": "likes(X, tiger) :- visits(X, rabbit).",
        "description": "If something visits the rabbit then it likes the tiger."
    },
    {
        "id": 8291,
        "statement": "is(dog, red) :- sees(X, dog).",
        "description": "If something sees the dog then the dog is red."
    },
    {
        "id": 8292,
        "statement": "is(tiger, young) :- likes(X, tiger).",
        "description": "If something likes the tiger then the tiger is young."
    },
    {
        "id": 8293,
        "statement": "visits(cat, rabbit) :- is(X, young), likes(X, cat).",
        "description": "If something is young and it likes the cat then the cat visits the rabbit."
    },
    {
        "id": 8294,
        "statement": "sees(X, rabbit) :- likes(X, dog), visits(X, rabbit).",
        "description": "If something likes the dog and it visits the rabbit then it sees the rabbit."
    },
    {
        "id": 8295,
        "statement": "likes(dog, cat) :- is(X, cold), likes(X, dog).",
        "description": "If something is cold and it likes the dog then the dog likes the cat."
    },
    {
        "id": 8296,
        "statement": "visits(X, rabbit) :- is(X, cold).",
        "description": "If something is cold then it visits the rabbit."
    },
    {
        "id": 8297,
        "statement": "likes(dog, tiger) :- likes(tiger, dog), sees(tiger, dog).",
        "description": "If the tiger likes the dog and the tiger sees the dog then the dog likes the tiger."
    },
    {
        "id": 8298,
        "statement": "likes(rabbit, cat) :- sees(X, rabbit), is(rabbit, cold).",
        "description": "If something sees the rabbit and the rabbit is cold then the rabbit likes the cat."
    },
    {
        "id": 8299,
        "statement": "eats(X, bald_eagle) :- eats(X, lion).",
        "description": "If something eats the lion then it eats the bald eagle."
    },
    {
        "id": 8300,
        "statement": "eats(X, bald_eagle) :- is(X, cold).",
        "description": "If something is cold then it eats the bald eagle."
    },
    {
        "id": 8301,
        "statement": "needs(X, lion) :- needs(X, bald_eagle), is(bald_eagle, cold).",
        "description": "If something needs the bald eagle and the bald eagle is cold then it needs the lion."
    },
    {
        "id": 8302,
        "statement": "is(lion, big) :- needs(X, lion), eats(X, bald_eagle).",
        "description": "If something needs the lion and it eats the bald eagle then the lion is big."
    },
    {
        "id": 8303,
        "statement": "eats(X, lion) :- is(X, kind).",
        "description": "If something is kind then it eats the lion."
    },
    {
        "id": 8304,
        "statement": "is(bald_eagle, big) :- likes(bear, squirrel), not needs(bear, bald_eagle).",
        "description": "If the bear likes the squirrel and the bear does not need the bald eagle then the bald eagle is big."
    },
    {
        "id": 8305,
        "statement": "is(X, cold) :- eats(X, lion), not is(lion, young).",
        "description": "If something eats the lion and the lion is not young then it is cold."
    },
    {
        "id": 8306,
        "statement": "is(X, round) :- is(X, big), not needs(X, bear).",
        "description": "If something is big and it does not need the bear then it is round."
    },
    {
        "id": 8307,
        "statement": "is(X, kind) :- is(X, white), is(X, green).",
        "description": "All white, green people are kind."
    },
    {
        "id": 8308,
        "statement": "is(X, kind) :- is(X, green), is(X, furry).",
        "description": "If someone is green and furry then they are kind."
    },
    {
        "id": 8309,
        "statement": "is(X, rough) :- is(X, round), is(X, kind).",
        "description": "All round, kind people are rough."
    },
    {
        "id": 8310,
        "statement": "is(X, rough) :- is(X, furry), is(X, white).",
        "description": "All furry, white people are rough."
    },
    {
        "id": 8311,
        "statement": "is(X, smart) :- is(X, cold), is(X, white).",
        "description": "All cold, white people are smart."
    },
    {
        "id": 8312,
        "statement": "is(X, green) :- is(X, smart), is(X, rough).",
        "description": "All smart, rough people are green."
    },
    {
        "id": 8313,
        "statement": "eats(X, bald_eagle) :- is(X, kind).",
        "description": "If something is kind then it eats the bald eagle."
    },
    {
        "id": 8314,
        "statement": "eats(X, bald_eagle) :- is(X, red).",
        "description": "If something is red then it eats the bald eagle."
    },
    {
        "id": 8315,
        "statement": "likes(X, dog) :- is(X, blue), is(X, kind).",
        "description": "If something is blue and kind then it likes the dog."
    },
    {
        "id": 8316,
        "statement": "sees(X, bald_eagle) :- eats(X, bald_eagle).",
        "description": "If something eats the bald eagle then it sees the bald eagle."
    },
    {
        "id": 8317,
        "statement": "is(tiger, big) :- likes(X, tiger), sees(X, bald_eagle).",
        "description": "If something likes the tiger and it sees the bald eagle then the tiger is big."
    },
    {
        "id": 8318,
        "statement": "sees(tiger, bald_eagle) :- is(X, big), likes(X, tiger).",
        "description": "If something is big and it likes the tiger then the tiger sees the bald eagle."
    },
    {
        "id": 8319,
        "statement": "is(bald_eagle, kind) :- eats(X, bald_eagle).",
        "description": "If something eats the bald eagle then the bald eagle is kind."
    },
    {
        "id": 8320,
        "statement": "likes(mouse, cow) :- eats(mouse, cow), likes(mouse, tiger).",
        "description": "If the mouse eats the cow and the mouse likes the tiger then the mouse likes the cow."
    },
    {
        "id": 8321,
        "statement": "is(X, big) :- eats(X, lion).",
        "description": "If someone eats the lion then they are big."
    },
    {
        "id": 8322,
        "statement": "eats(X, mouse) :- is(X, young).",
        "description": "If someone is young then they eat the mouse."
    },
    {
        "id": 8323,
        "statement": "likes(lion, cow) :- eats(X, lion), likes(X, mouse).",
        "description": "If someone eats the lion and they like the mouse then the lion likes the cow."
    },
    {
        "id": 8324,
        "statement": "is(X, red) :- is(X, kind), is(X, big).",
        "description": "All kind, big people are red."
    },
    {
        "id": 8325,
        "statement": "is(mouse, nice) :- eats(X, mouse), is(X, kind).",
        "description": "If someone eats the mouse and they are kind then the mouse is nice."
    },
    {
        "id": 8326,
        "statement": "chases(X, cow) :- likes(X, tiger), is(X, blue).",
        "description": "If something likes the tiger and it is blue then it chases the cow."
    },
    {
        "id": 8327,
        "statement": "likes(cow, lion) :- sees(X, cow).",
        "description": "If something sees the cow then the cow likes the lion."
    },
    {
        "id": 8328,
        "statement": "is(mouse, cold) :- chases(X, mouse), likes(mouse, lion).",
        "description": "If something chases the mouse and the mouse likes the lion then the mouse is cold."
    },
    {
        "id": 8329,
        "statement": "sees(X, mouse) :- chases(X, tiger), chases(tiger, mouse).",
        "description": "If something chases the tiger and the tiger chases the mouse then it sees the mouse."
    },
    {
        "id": 8330,
        "statement": "chases(X, tiger) :- is(X, cold).",
        "description": "If something is cold then it chases the tiger."
    },
    {
        "id": 8331,
        "statement": "chases(tiger, lion) :- sees(X, tiger).",
        "description": "If something sees the tiger then the tiger chases the lion."
    },
    {
        "id": 8332,
        "statement": "likes(mouse, lion) :- sees(X, mouse).",
        "description": "If something sees the mouse then the mouse likes the lion."
    },
    {
        "id": 8333,
        "statement": "is(X, young) :- is(X, green), is(X, white).",
        "description": "All green, white things are young."
    },
    {
        "id": 8334,
        "statement": "is(X, round) :- is(X, green), is(X, young).",
        "description": "If something is green and young then it is round."
    },
    {
        "id": 8335,
        "statement": "is(X, kind) :- is(X, round), is(X, smart).",
        "description": "If something is round and smart then it is kind."
    },
    {
        "id": 8336,
        "statement": "is(X, big) :- is(X, round), is(X, young).",
        "description": "Round, young things are big."
    },
    {
        "id": 8337,
        "statement": "is(bob, smart) :- is(bob, young), is(bob, round).",
        "description": "If Bob is young and Bob is round then Bob is smart."
    },
    {
        "id": 8338,
        "statement": "chases(lion, cow) :- chases(X, lion).",
        "description": "If something chases the lion then the lion chases the cow."
    },
    {
        "id": 8339,
        "statement": "sees(X, bear) :- is(X, kind), is(X, red).",
        "description": "If something is kind and red then it sees the bear."
    },
    {
        "id": 8340,
        "statement": "is(X, big) :- needs(X, rabbit).",
        "description": "If something needs the rabbit then it is big."
    },
    {
        "id": 8341,
        "statement": "chases(X, cow) :- needs(X, rabbit), chases(X, bear).",
        "description": "If something needs the rabbit and it chases the bear then it chases the cow."
    },
    {
        "id": 8342,
        "statement": "sees(X, bear) :- is(X, round), is(X, red).",
        "description": "If something is round and red then it sees the bear."
    },
    {
        "id": 8343,
        "statement": "chases(X, rabbit) :- is(X, big).",
        "description": "If something is big then it chases the rabbit."
    },
    {
        "id": 8344,
        "statement": "needs(bear, rabbit) :- chases(bear, lion), is(lion, red).",
        "description": "If the bear chases the lion and the lion is red then the bear needs the rabbit."
    },
    {
        "id": 8345,
        "statement": "needs(X, rabbit) :- is(X, red).",
        "description": "If something is red then it needs the rabbit."
    },
    {
        "id": 8346,
        "statement": "is(rabbit, red) :- is(X, round), needs(X, rabbit).",
        "description": "If something is round and it needs the rabbit then the rabbit is red."
    },
    {
        "id": 8347,
        "statement": "is(X, rough) :- visits(X, cow).",
        "description": "If something visits the cow then it is rough."
    },
    {
        "id": 8348,
        "statement": "is(squirrel, green) :- is(X, rough), visits(X, squirrel).",
        "description": "If something is rough and it visits the squirrel then the squirrel is green."
    },
    {
        "id": 8349,
        "statement": "is(X, big) :- is(X, rough), not visits(X, squirrel).",
        "description": "If something is rough and it does not visit the squirrel then it is big."
    },
    {
        "id": 8350,
        "statement": "is(bald_eagle, rough) :- likes(X, bald_eagle).",
        "description": "If something likes the bald eagle then the bald eagle is rough."
    },
    {
        "id": 8351,
        "statement": "is(lion, green) :- needs(lion, cow).",
        "description": "If the lion needs the cow then the lion is green."
    },
    {
        "id": 8352,
        "statement": "is(bald_eagle, young) :- needs(X, bald_eagle), likes(X, lion).",
        "description": "If something needs the bald eagle and it likes the lion then the bald eagle is young."
    },
    {
        "id": 8353,
        "statement": "needs(X, squirrel) :- is(X, big), is(X, young).",
        "description": "If something is big and young then it needs the squirrel."
    },
    {
        "id": 8354,
        "statement": "is(harry, round) :- is(harry, big), is(harry, white).",
        "description": "If Harry is big and Harry is white then Harry is round."
    },
    {
        "id": 8355,
        "statement": "is(X, big) :- is(X, kind), is(X, young).",
        "description": "All kind, young things are big."
    },
    {
        "id": 8356,
        "statement": "is(charlie, rough) :- is(charlie, kind), is(charlie, white).",
        "description": "If Charlie is kind and Charlie is white then Charlie is rough."
    },
    {
        "id": 8357,
        "statement": "is(X, round) :- is(X, young), is(X, green).",
        "description": "Young, green things are round."
    },
    {
        "id": 8358,
        "statement": "is(X, white) :- is(X, round), is(X, big).",
        "description": "If something is round and big then it is white."
    },
    {
        "id": 8359,
        "statement": "is(X, rough) :- is(X, quiet), is(X, green).",
        "description": "All quiet, green things are rough."
    },
    {
        "id": 8360,
        "statement": "is(X, red) :- is(X, nice).",
        "description": "All nice things are red."
    },
    {
        "id": 8361,
        "statement": "is(bob, cold) :- is(bob, nice).",
        "description": "If Bob is nice then Bob is cold."
    },
    {
        "id": 8362,
        "statement": "is(bob, red) :- is(bob, rough).",
        "description": "If Bob is rough then Bob is red."
    },
    {
        "id": 8363,
        "statement": "is(X, nice) :- is(X, white), is(X, quiet).",
        "description": "White, quiet things are nice."
    },
    {
        "id": 8364,
        "statement": "is(bob, red) :- is(bob, young), not is(bob, blue).",
        "description": "If Bob is young and Bob is not blue then Bob is red."
    },
    {
        "id": 8365,
        "statement": "is(X, young) :- is(X, white), is(X, kind).",
        "description": "All white, kind things are young."
    },
    {
        "id": 8366,
        "statement": "is(X, red) :- is(X, young), not is(X, blue).",
        "description": "If something is young and not blue then it is red."
    },
    {
        "id": 8367,
        "statement": "is(X, quiet) :- is(X, nice), is(X, red).",
        "description": "Nice, red things are quiet."
    },
    {
        "id": 8368,
        "statement": "is(X, white) :- is(X, nice), is(X, kind).",
        "description": "If something is nice and kind then it is white."
    },
    {
        "id": 8369,
        "statement": "is(X, big) :- needs(X, cat).",
        "description": "If someone needs the cat then they are big."
    },
    {
        "id": 8370,
        "statement": "needs(X, lion) :- is(X, round), not eats(X, lion).",
        "description": "If someone is round and they do not eat the lion then they need the lion."
    },
    {
        "id": 8371,
        "statement": "is(X, green) :- is(X, blue), is(X, round).",
        "description": "If someone is blue and round then they are green."
    },
    {
        "id": 8372,
        "statement": "visits(X, bald_eagle) :- is(X, green), is(X, round).",
        "description": "If someone is green and round then they visit the bald eagle."
    },
    {
        "id": 8373,
        "statement": "is(X, round) :- visits(X, lion), not visits(X, cat).",
        "description": "If someone visits the lion and they do not visit the cat then they are round."
    },
    {
        "id": 8374,
        "statement": "is(cat, blue) :- is(cat, round).",
        "description": "If the cat is round then the cat is blue."
    },
    {
        "id": 8375,
        "statement": "is(squirrel, nice) :- sees(X, squirrel).",
        "description": "If something sees the squirrel then the squirrel is nice."
    },
    {
        "id": 8376,
        "statement": "is(squirrel, blue) :- likes(X, squirrel).",
        "description": "If something likes the squirrel then the squirrel is blue."
    },
    {
        "id": 8377,
        "statement": "is(lion, nice) :- sees(X, squirrel), sees(squirrel, lion).",
        "description": "If something sees the squirrel and the squirrel sees the lion then the lion is nice."
    },
    {
        "id": 8378,
        "statement": "sees(tiger, squirrel) :- sees(X, tiger).",
        "description": "If something sees the tiger then the tiger sees the squirrel."
    },
    {
        "id": 8379,
        "statement": "sees(squirrel, tiger) :- chases(cow, squirrel), not is(squirrel, young).",
        "description": "If the cow chases the squirrel and the squirrel is not young then the squirrel sees the tiger."
    },
    {
        "id": 8380,
        "statement": "is(lion, young) :- not sees(lion, squirrel).",
        "description": "If the lion does not see the squirrel then the lion is young."
    },
    {
        "id": 8381,
        "statement": "is(lion, rough) :- sees(lion, squirrel), is(lion, nice).",
        "description": "If the lion sees the squirrel and the lion is nice then the lion is rough."
    },
    {
        "id": 8382,
        "statement": "sees(X, lion) :- is(X, nice).",
        "description": "If something is nice then it sees the lion."
    },
    {
        "id": 8383,
        "statement": "visits(X, lion) :- is(X, rough).",
        "description": "If something is rough then it visits the lion."
    },
    {
        "id": 8384,
        "statement": "visits(cow, lion) :- is(X, green), visits(X, cow).",
        "description": "If something is green and it visits the cow then the cow visits the lion."
    },
    {
        "id": 8385,
        "statement": "chases(lion, cow) :- needs(X, lion), chases(lion, rabbit).",
        "description": "If something needs the lion and the lion chases the rabbit then the lion chases the cow."
    },
    {
        "id": 8386,
        "statement": "chases(lion, rabbit) :- visits(X, lion).",
        "description": "If something visits the lion then the lion chases the rabbit."
    },
    {
        "id": 8387,
        "statement": "visits(cow, rabbit) :- needs(X, cow).",
        "description": "If something needs the cow then the cow visits the rabbit."
    },
    {
        "id": 8388,
        "statement": "visits(rabbit, cow) :- chases(X, rabbit), is(rabbit, green).",
        "description": "If something chases the rabbit and the rabbit is green then the rabbit visits the cow."
    },
    {
        "id": 8389,
        "statement": "chases(cow, bald_eagle) :- visits(cow, rabbit).",
        "description": "If the cow visits the rabbit then the cow chases the bald eagle."
    },
    {
        "id": 8390,
        "statement": "chases(bald_eagle, lion) :- needs(X, cow), visits(cow, bald_eagle).",
        "description": "If something needs the cow and the cow visits the bald eagle then the bald eagle chases the lion."
    },
    {
        "id": 8391,
        "statement": "likes(cat, lion) :- visits(X, cat), not likes(X, bald_eagle).",
        "description": "If someone visits the cat and they do not like the bald eagle then the cat likes the lion."
    },
    {
        "id": 8392,
        "statement": "is(X, cold) :- likes(X, bald_eagle), needs(bald_eagle, lion).",
        "description": "If someone likes the bald eagle and the bald eagle needs the lion then they are cold."
    },
    {
        "id": 8393,
        "statement": "is(X, red) :- likes(X, tiger), needs(tiger, cat).",
        "description": "If someone likes the tiger and the tiger needs the cat then they are red."
    },
    {
        "id": 8394,
        "statement": "is(lion, cold) :- likes(X, lion).",
        "description": "If someone likes the lion then the lion is cold."
    },
    {
        "id": 8395,
        "statement": "likes(X, tiger) :- needs(X, lion).",
        "description": "If someone needs the lion then they like the tiger."
    },
    {
        "id": 8396,
        "statement": "visits(X, tiger) :- is(X, kind).",
        "description": "If someone is kind then they visit the tiger."
    },
    {
        "id": 8397,
        "statement": "is(X, cold) :- is(X, red), is(X, furry).",
        "description": "All red, furry people are cold."
    },
    {
        "id": 8398,
        "statement": "is(bob, quiet) :- is(bob, rough), is(bob, cold).",
        "description": "If Bob is rough and Bob is cold then Bob is quiet."
    },
    {
        "id": 8399,
        "statement": "is(X, red) :- is(X, furry), is(X, cold).",
        "description": "All furry, cold people are red."
    },
    {
        "id": 8400,
        "statement": "is(X, rough) :- is(X, furry), is(X, cold).",
        "description": "All furry, cold people are rough."
    },
    {
        "id": 8401,
        "statement": "is(X, young) :- is(X, red), not is(X, quiet).",
        "description": "If someone is red and not quiet then they are young."
    },
    {
        "id": 8402,
        "statement": "is(X, round) :- is(X, smart), is(X, green).",
        "description": "All smart, green things are round."
    },
    {
        "id": 8403,
        "statement": "is(X, white) :- is(X, smart), is(X, green).",
        "description": "All smart, green things are white."
    },
    {
        "id": 8404,
        "statement": "is(dave, green) :- is(dave, white), is(dave, young).",
        "description": "If Dave is white and Dave is young then Dave is green."
    },
    {
        "id": 8405,
        "statement": "is(X, white) :- is(X, kind), is(X, young).",
        "description": "All kind, young things are white."
    },
    {
        "id": 8406,
        "statement": "is(X, furry) :- is(X, young), is(X, green).",
        "description": "If someone is young and green then they are furry."
    },
    {
        "id": 8407,
        "statement": "is(X, furry) :- is(X, big), is(X, red).",
        "description": "Big, red things are furry."
    },
    {
        "id": 8408,
        "statement": "is(X, nice) :- is(X, big), is(X, blue).",
        "description": "If something is big and blue then it is nice."
    },
    {
        "id": 8409,
        "statement": "is(X, blue) :- is(X, big), is(X, furry).",
        "description": "Big, furry things are blue."
    },
    {
        "id": 8410,
        "statement": "is(X, big) :- is(X, red).",
        "description": "Red things are big."
    },
    {
        "id": 8411,
        "statement": "is(X, rough) :- is(X, furry), is(X, round).",
        "description": "If someone is furry and round then they are rough."
    },
    {
        "id": 8412,
        "statement": "is(X, big) :- is(X, blue).",
        "description": "Blue people are big."
    },
    {
        "id": 8413,
        "statement": "is(X, green) :- is(X, big), is(X, round).",
        "description": "All big, round people are green."
    },
    {
        "id": 8414,
        "statement": "is(X, smart) :- is(X, rough), not is(X, green).",
        "description": "If someone is rough and not green then they are smart."
    },
    {
        "id": 8415,
        "statement": "is(X, smart) :- is(X, furry), is(X, big).",
        "description": "All furry, big people are smart."
    },
    {
        "id": 8416,
        "statement": "is(X, nice) :- is(X, red), is(X, rough).",
        "description": "All red, rough people are nice."
    },
    {
        "id": 8417,
        "statement": "is(X, blue) :- is(X, round), is(X, big).",
        "description": "All round, big people are blue."
    },
    {
        "id": 8418,
        "statement": "is(X, red) :- is(X, nice), is(X, blue).",
        "description": "All nice, blue people are red."
    },
    {
        "id": 8419,
        "statement": "is(X, red) :- is(X, blue), is(X, kind).",
        "description": "If someone is blue and kind then they are red."
    },
    {
        "id": 8420,
        "statement": "is(X, big) :- is(X, rough), is(X, kind).",
        "description": "All rough, kind people are big."
    },
    {
        "id": 8421,
        "statement": "is(X, red) :- is(X, big), is(X, blue).",
        "description": "If someone is big and blue then they are red."
    },
    {
        "id": 8422,
        "statement": "is(erin, furry) :- is(erin, rough), not is(erin, round).",
        "description": "If Erin is rough and Erin is not round then Erin is furry."
    },
    {
        "id": 8423,
        "statement": "is(X, rough) :- is(X, furry), is(X, smart).",
        "description": "If something is furry and smart then it is rough."
    },
    {
        "id": 8424,
        "statement": "is(X, green) :- is(X, smart), is(X, rough).",
        "description": "All smart, rough things are green."
    },
    {
        "id": 8425,
        "statement": "is(X, nice) :- is(X, furry), is(X, red).",
        "description": "All furry, red people are nice."
    },
    {
        "id": 8426,
        "statement": "is(X, nice) :- is(X, furry), is(X, rough).",
        "description": "Furry, rough people are nice."
    },
    {
        "id": 8427,
        "statement": "is(X, quiet) :- is(X, nice), is(X, furry).",
        "description": "If someone is nice and furry then they are quiet."
    },
    {
        "id": 8428,
        "statement": "is(X, kind) :- is(X, green), is(X, red).",
        "description": "Green, red people are kind."
    },
    {
        "id": 8429,
        "statement": "is(X, red) :- is(X, nice), is(X, big).",
        "description": "Nice, big things are red."
    },
    {
        "id": 8430,
        "statement": "is(X, young) :- is(X, big), is(X, red).",
        "description": "Big, red things are young."
    },
    {
        "id": 8431,
        "statement": "is(X, young) :- is(X, red), is(X, big).",
        "description": "Red, big things are young."
    },
    {
        "id": 8432,
        "statement": "is(X, round) :- is(X, big), is(X, cold).",
        "description": "If someone is big and cold then they are round."
    },
    {
        "id": 8433,
        "statement": "is(X, blue) :- is(X, red), is(X, big).",
        "description": "Red, big people are blue."
    },
    {
        "id": 8434,
        "statement": "is(fiona, red) :- is(fiona, cold), is(fiona, round).",
        "description": "If Fiona is cold and Fiona is round then Fiona is red."
    },
    {
        "id": 8435,
        "statement": "is(mouse, green) :- likes(mouse, bald_eagle).",
        "description": "If the mouse likes the bald eagle then the mouse is green."
    },
    {
        "id": 8436,
        "statement": "needs(rabbit, dog) :- needs(X, rabbit), is(rabbit, nice).",
        "description": "If something needs the rabbit and the rabbit is nice then the rabbit needs the dog."
    },
    {
        "id": 8437,
        "statement": "likes(X, rabbit) :- likes(X, dog), needs(X, dog).",
        "description": "If something likes the dog and it needs the dog then it likes the rabbit."
    },
    {
        "id": 8438,
        "statement": "likes(X, dog) :- visits(X, bald_eagle).",
        "description": "If something visits the bald eagle then it likes the dog."
    },
    {
        "id": 8439,
        "statement": "is(X, nice) :- likes(X, mouse), visits(mouse, rabbit).",
        "description": "If something likes the mouse and the mouse visits the rabbit then it is nice."
    },
    {
        "id": 8440,
        "statement": "needs(X, dog) :- is(X, green).",
        "description": "If something is green then it needs the dog."
    },
    {
        "id": 8441,
        "statement": "visits(X, mouse) :- likes(X, rabbit).",
        "description": "If something likes the rabbit then it visits the mouse."
    },
    {
        "id": 8442,
        "statement": "visits(mouse, rabbit) :- likes(X, mouse).",
        "description": "If something likes the mouse then the mouse visits the rabbit."
    },
    {
        "id": 8443,
        "statement": "is(X, quiet) :- is(X, cold), is(X, furry).",
        "description": "Cold, furry things are quiet."
    },
    {
        "id": 8444,
        "statement": "is(X, furry) :- is(X, cold), is(X, big).",
        "description": "If something is cold and big then it is furry."
    },
    {
        "id": 8445,
        "statement": "is(X, furry) :- is(X, big), is(X, green).",
        "description": "If something is big and green then it is furry."
    },
    {
        "id": 8446,
        "statement": "is(X, kind) :- is(X, green), is(X, furry).",
        "description": "Green, furry things are kind."
    },
    {
        "id": 8447,
        "statement": "is(anne, nice) :- is(anne, kind).",
        "description": "If Anne is kind then Anne is nice."
    },
    {
        "id": 8448,
        "statement": "is(X, nice) :- is(X, big), is(X, kind).",
        "description": "If something is big and kind then it is nice."
    },
    {
        "id": 8449,
        "statement": "is(X, nice) :- is(X, cold), not is(X, big).",
        "description": "If something is cold and not big then it is nice."
    },
    {
        "id": 8450,
        "statement": "sees(dog, cow) :- sees(X, dog).",
        "description": "If something sees the dog then the dog sees the cow."
    },
    {
        "id": 8451,
        "statement": "is(X, red) :- sees(X, cow).",
        "description": "If something sees the cow then it is red."
    },
    {
        "id": 8452,
        "statement": "sees(rabbit, squirrel) :- likes(squirrel, rabbit), is(squirrel, nice).",
        "description": "If the squirrel likes the rabbit and the squirrel is nice then the rabbit sees the squirrel."
    },
    {
        "id": 8453,
        "statement": "is(X, round) :- is(X, rough), eats(X, rabbit).",
        "description": "If something is rough and it eats the rabbit then it is round."
    },
    {
        "id": 8454,
        "statement": "likes(squirrel, rabbit) :- eats(squirrel, dog), not is(dog, rough).",
        "description": "If the squirrel eats the dog and the dog is not rough then the squirrel likes the rabbit."
    },
    {
        "id": 8455,
        "statement": "likes(dog, cow) :- not likes(dog, rabbit).",
        "description": "If the dog does not like the rabbit then the dog likes the cow."
    },
    {
        "id": 8456,
        "statement": "is(X, quiet) :- is(X, nice), is(X, white).",
        "description": "All nice, white people are quiet."
    },
    {
        "id": 8457,
        "statement": "is(X, kind) :- is(X, quiet), not is(X, nice).",
        "description": "If someone is quiet and not nice then they are kind."
    },
    {
        "id": 8458,
        "statement": "is(X, kind) :- is(X, red), is(X, cold).",
        "description": "Red, cold people are kind."
    },
    {
        "id": 8459,
        "statement": "is(X, cold) :- is(X, white), is(X, red).",
        "description": "All white, red people are cold."
    },
    {
        "id": 8460,
        "statement": "is(X, rough) :- is(X, cold).",
        "description": "All cold things are rough."
    },
    {
        "id": 8461,
        "statement": "is(mouse, young) :- sees(X, lion), sees(X, mouse).",
        "description": "If something sees the lion and it sees the mouse then the mouse is young."
    },
    {
        "id": 8462,
        "statement": "sees(lion, mouse) :- is(X, rough), eats(X, lion).",
        "description": "If something is rough and it eats the lion then the lion sees the mouse."
    },
    {
        "id": 8463,
        "statement": "eats(squirrel, lion) :- sees(X, squirrel), likes(X, lion).",
        "description": "If something sees the squirrel and it likes the lion then the squirrel eats the lion."
    },
    {
        "id": 8464,
        "statement": "sees(X, squirrel) :- is(X, rough), sees(X, cow).",
        "description": "If something is rough and it sees the cow then it sees the squirrel."
    },
    {
        "id": 8465,
        "statement": "likes(X, squirrel) :- eats(X, lion).",
        "description": "If something eats the lion then it likes the squirrel."
    },
    {
        "id": 8466,
        "statement": "is(X, cold) :- sees(X, cow).",
        "description": "If something sees the cow then it is cold."
    },
    {
        "id": 8467,
        "statement": "is(lion, rough) :- eats(X, lion), is(lion, kind).",
        "description": "If something eats the lion and the lion is kind then the lion is rough."
    },
    {
        "id": 8468,
        "statement": "is(X, furry) :- is(X, rough), is(X, red).",
        "description": "Rough, red people are furry."
    },
    {
        "id": 8469,
        "statement": "is(X, kind) :- is(X, young), is(X, red).",
        "description": "All young, red people are kind."
    },
    {
        "id": 8470,
        "statement": "is(X, red) :- is(X, furry), is(X, rough).",
        "description": "All furry, rough people are red."
    },
    {
        "id": 8471,
        "statement": "is(gary, smart) :- is(gary, red), is(gary, furry).",
        "description": "If Gary is red and Gary is furry then Gary is smart."
    },
    {
        "id": 8472,
        "statement": "is(X, furry) :- is(X, rough), is(X, smart).",
        "description": "Rough, smart people are furry."
    },
    {
        "id": 8473,
        "statement": "is(X, furry) :- is(X, big), is(X, red).",
        "description": "Big, red people are furry."
    },
    {
        "id": 8474,
        "statement": "is(X, nice) :- is(X, cold), is(X, red).",
        "description": "All cold, red people are nice."
    },
    {
        "id": 8475,
        "statement": "is(erin, blue) :- is(erin, quiet).",
        "description": "If Erin is quiet then Erin is blue."
    },
    {
        "id": 8476,
        "statement": "is(X, red) :- is(X, big), is(X, round).",
        "description": "If someone is big and round then they are red."
    },
    {
        "id": 8477,
        "statement": "is(X, blue) :- is(X, rough).",
        "description": "All rough people are blue."
    },
    {
        "id": 8478,
        "statement": "visits(X, cow) :- visits(X, lion), is(lion, nice).",
        "description": "If something visits the lion and the lion is nice then it visits the cow."
    },
    {
        "id": 8479,
        "statement": "needs(cow, tiger) :- is(X, round), likes(X, cow).",
        "description": "If something is round and it likes the cow then the cow needs the tiger."
    },
    {
        "id": 8480,
        "statement": "needs(bear, cow) :- visits(X, bear), likes(X, lion).",
        "description": "If something visits the bear and it likes the lion then the bear needs the cow."
    },
    {
        "id": 8481,
        "statement": "likes(lion, cow) :- needs(X, lion).",
        "description": "If something needs the lion then the lion likes the cow."
    },
    {
        "id": 8482,
        "statement": "likes(X, lion) :- visits(X, bear).",
        "description": "If something visits the bear then it likes the lion."
    },
    {
        "id": 8483,
        "statement": "is(tiger, nice) :- not needs(lion, tiger).",
        "description": "If the lion does not need the tiger then the tiger is nice."
    },
    {
        "id": 8484,
        "statement": "is(lion, round) :- visits(lion, tiger), likes(lion, cow).",
        "description": "If the lion visits the tiger and the lion likes the cow then the lion is round."
    },
    {
        "id": 8485,
        "statement": "is(cow, round) :- visits(X, cow).",
        "description": "If something visits the cow then the cow is round."
    },
    {
        "id": 8486,
        "statement": "visits(tiger, cow) :- needs(X, tiger).",
        "description": "If something needs the tiger then the tiger visits the cow."
    },
    {
        "id": 8487,
        "statement": "is(X, young) :- is(X, furry).",
        "description": "All furry things are young."
    },
    {
        "id": 8488,
        "statement": "is(bob, green) :- is(bob, quiet), is(bob, blue).",
        "description": "If Bob is quiet and Bob is blue then Bob is green."
    },
    {
        "id": 8489,
        "statement": "is(fiona, red) :- is(fiona, cold), is(fiona, quiet).",
        "description": "If Fiona is cold and Fiona is quiet then Fiona is red."
    },
    {
        "id": 8490,
        "statement": "is(X, furry) :- is(X, red).",
        "description": "Red things are furry."
    },
    {
        "id": 8491,
        "statement": "is(X, green) :- is(X, big), is(X, blue).",
        "description": "If something is big and blue then it is green."
    },
    {
        "id": 8492,
        "statement": "is(X, blue) :- is(X, smart), is(X, big).",
        "description": "If something is smart and big then it is blue."
    },
    {
        "id": 8493,
        "statement": "is(X, nice) :- is(X, blue), is(X, green).",
        "description": "Blue, green things are nice."
    },
    {
        "id": 8494,
        "statement": "is(X, cold) :- is(X, big).",
        "description": "All big things are cold."
    },
    {
        "id": 8495,
        "statement": "is(dave, furry) :- is(dave, big), not is(dave, smart).",
        "description": "If Dave is big and Dave is not smart then Dave is furry."
    },
    {
        "id": 8496,
        "statement": "is(X, rough) :- is(X, young), not is(X, smart).",
        "description": "If someone is young and not smart then they are rough."
    },
    {
        "id": 8497,
        "statement": "is(anne, white) :- is(anne, young), is(anne, smart).",
        "description": "If Anne is young and Anne is smart then Anne is white."
    },
    {
        "id": 8498,
        "statement": "is(X, quiet) :- is(X, cold), not is(X, smart).",
        "description": "If someone is cold and not smart then they are quiet."
    },
    {
        "id": 8499,
        "statement": "is(X, big) :- is(X, young), is(X, red).",
        "description": "Young, red things are big."
    },
    {
        "id": 8500,
        "statement": "is(X, red) :- is(X, young), is(X, nice).",
        "description": "If something is young and nice then it is red."
    },
    {
        "id": 8501,
        "statement": "is(bob, blue) :- is(bob, red).",
        "description": "If Bob is red then Bob is blue."
    },
    {
        "id": 8502,
        "statement": "is(X, nice) :- is(X, red), is(X, big).",
        "description": "All red, big things are nice."
    },
    {
        "id": 8503,
        "statement": "eats(X, dog) :- is(X, big).",
        "description": "If something is big then it eats the dog."
    },
    {
        "id": 8504,
        "statement": "is(dog, nice) :- chases(bald_eagle, dog).",
        "description": "If the bald eagle chases the dog then the dog is nice."
    },
    {
        "id": 8505,
        "statement": "sees(dog, tiger) :- is(X, young), eats(X, dog).",
        "description": "If something is young and it eats the dog then the dog sees the tiger."
    },
    {
        "id": 8506,
        "statement": "is(tiger, green) :- eats(tiger, bald_eagle), is(bald_eagle, kind).",
        "description": "If the tiger eats the bald eagle and the bald eagle is kind then the tiger is green."
    },
    {
        "id": 8507,
        "statement": "eats(X, squirrel) :- is(X, nice), eats(X, bald_eagle).",
        "description": "If something is nice and it eats the bald eagle then it eats the squirrel."
    },
    {
        "id": 8508,
        "statement": "chases(bald_eagle, dog) :- sees(X, bald_eagle).",
        "description": "If something sees the bald eagle then the bald eagle chases the dog."
    },
    {
        "id": 8509,
        "statement": "is(squirrel, big) :- sees(X, squirrel).",
        "description": "If something sees the squirrel then the squirrel is big."
    },
    {
        "id": 8510,
        "statement": "sees(X, bald_eagle) :- eats(X, squirrel).",
        "description": "If something eats the squirrel then it sees the bald eagle."
    },
    {
        "id": 8511,
        "statement": "is(X, green) :- is(X, furry), is(X, red).",
        "description": "Furry, red things are green."
    },
    {
        "id": 8512,
        "statement": "is(X, furry) :- is(X, quiet), is(X, red).",
        "description": "Quiet, red things are furry."
    },
    {
        "id": 8513,
        "statement": "is(gary, rough) :- is(gary, green), is(gary, furry).",
        "description": "If Gary is green and Gary is furry then Gary is rough."
    },
    {
        "id": 8514,
        "statement": "is(bob, quiet) :- is(bob, furry), is(bob, round).",
        "description": "If Bob is furry and Bob is round then Bob is quiet."
    },
    {
        "id": 8515,
        "statement": "is(X, round) :- is(X, rough), is(X, furry).",
        "description": "If something is rough and furry then it is round."
    },
    {
        "id": 8516,
        "statement": "is(X, young) :- is(X, furry), is(X, green).",
        "description": "All furry, green things are young."
    },
    {
        "id": 8517,
        "statement": "is(X, furry) :- is(X, young), is(X, quiet).",
        "description": "If something is young and quiet then it is furry."
    },
    {
        "id": 8518,
        "statement": "is(anne, young) :- is(anne, quiet).",
        "description": "If Anne is quiet then Anne is young."
    },
    {
        "id": 8519,
        "statement": "is(X, blue) :- chases(X, rabbit).",
        "description": "If something chases the rabbit then it is blue."
    },
    {
        "id": 8520,
        "statement": "needs(X, tiger) :- is(X, blue), needs(X, lion).",
        "description": "If something is blue and it needs the lion then it needs the tiger."
    },
    {
        "id": 8521,
        "statement": "is(dog, big) :- chases(X, dog).",
        "description": "If something chases the dog then the dog is big."
    },
    {
        "id": 8522,
        "statement": "is(dog, cold) :- likes(X, lion), likes(X, dog).",
        "description": "If something likes the lion and it likes the dog then the dog is cold."
    },
    {
        "id": 8523,
        "statement": "is(X, cold) :- chases(X, dog), is(X, blue).",
        "description": "If something chases the dog and it is blue then it is cold."
    },
    {
        "id": 8524,
        "statement": "chases(lion, rabbit) :- chases(X, lion).",
        "description": "If something chases the lion then the lion chases the rabbit."
    },
    {
        "id": 8525,
        "statement": "needs(X, rabbit) :- chases(X, dog).",
        "description": "If something chases the dog then it needs the rabbit."
    },
    {
        "id": 8526,
        "statement": "needs(tiger, dog) :- chases(X, tiger), is(tiger, blue).",
        "description": "If something chases the tiger and the tiger is blue then the tiger needs the dog."
    },
    {
        "id": 8527,
        "statement": "likes(X, lion) :- is(X, cold), likes(X, tiger).",
        "description": "If something is cold and it likes the tiger then it likes the lion."
    },
    {
        "id": 8528,
        "statement": "is(X, cold) :- is(X, quiet), is(X, smart).",
        "description": "All quiet, smart people are cold."
    },
    {
        "id": 8529,
        "statement": "is(erin, smart) :- is(erin, rough), is(erin, green).",
        "description": "If Erin is rough and Erin is green then Erin is smart."
    },
    {
        "id": 8530,
        "statement": "is(charlie, quiet) :- is(charlie, smart).",
        "description": "If Charlie is smart then Charlie is quiet."
    },
    {
        "id": 8531,
        "statement": "is(X, furry) :- is(X, green), is(X, nice).",
        "description": "If someone is green and nice then they are furry."
    },
    {
        "id": 8532,
        "statement": "is(X, rough) :- is(X, quiet), is(X, cold).",
        "description": "All quiet, cold people are rough."
    },
    {
        "id": 8533,
        "statement": "is(X, nice) :- is(X, cold), is(X, green).",
        "description": "All cold, green people are nice."
    },
    {
        "id": 8534,
        "statement": "is(X, furry) :- is(X, smart), is(X, rough).",
        "description": "Smart, rough people are furry."
    },
    {
        "id": 8535,
        "statement": "is(X, blue) :- is(X, young).",
        "description": "If something is young then it is blue."
    },
    {
        "id": 8536,
        "statement": "is(X, blue) :- is(X, furry), is(X, green).",
        "description": "All furry, green things are blue."
    },
    {
        "id": 8537,
        "statement": "is(X, big) :- is(X, green).",
        "description": "Green things are big."
    },
    {
        "id": 8538,
        "statement": "is(gary, furry) :- is(gary, blue), is(gary, young).",
        "description": "If Gary is blue and Gary is young then Gary is furry."
    },
    {
        "id": 8539,
        "statement": "is(charlie, young) :- is(charlie, white), is(charlie, furry).",
        "description": "If Charlie is white and Charlie is furry then Charlie is young."
    },
    {
        "id": 8540,
        "statement": "is(X, round) :- is(X, furry), is(X, white).",
        "description": "If something is furry and white then it is round."
    },
    {
        "id": 8541,
        "statement": "needs(cat, rabbit) :- eats(X, cat), chases(cat, rabbit).",
        "description": "If someone eats the cat and the cat chases the rabbit then the cat needs the rabbit."
    },
    {
        "id": 8542,
        "statement": "eats(rabbit, squirrel) :- needs(cat, rabbit).",
        "description": "If the cat needs the rabbit then the rabbit eats the squirrel."
    },
    {
        "id": 8543,
        "statement": "eats(X, cat) :- needs(X, cat), not is(X, blue).",
        "description": "If someone needs the cat and they are not blue then they eat the cat."
    },
    {
        "id": 8544,
        "statement": "chases(X, dog) :- eats(X, squirrel).",
        "description": "If someone eats the squirrel then they chase the dog."
    },
    {
        "id": 8545,
        "statement": "needs(cat, dog) :- not is(cat, young).",
        "description": "If the cat is not young then the cat needs the dog."
    },
    {
        "id": 8546,
        "statement": "is(cat, nice) :- sees(mouse, cat).",
        "description": "If the mouse sees the cat then the cat is nice."
    },
    {
        "id": 8547,
        "statement": "visits(dog, mouse) :- sees(X, dog), is(dog, round).",
        "description": "If something sees the dog and the dog is round then the dog visits the mouse."
    },
    {
        "id": 8548,
        "statement": "sees(X, cat) :- is(X, young), not is(X, green).",
        "description": "If something is young and not green then it sees the cat."
    },
    {
        "id": 8549,
        "statement": "is(X, nice) :- eats(X, dog), not visits(X, cat).",
        "description": "If something eats the dog and it does not visit the cat then it is nice."
    },
    {
        "id": 8550,
        "statement": "eats(mouse, cat) :- is(X, round), eats(X, mouse).",
        "description": "If something is round and it eats the mouse then the mouse eats the cat."
    },
    {
        "id": 8551,
        "statement": "is(X, rough) :- sees(X, bear).",
        "description": "If something sees the bear then it is rough."
    },
    {
        "id": 8552,
        "statement": "likes(X, bear) :- likes(X, tiger).",
        "description": "If something likes the tiger then it likes the bear."
    },
    {
        "id": 8553,
        "statement": "eats(X, tiger) :- is(X, big), is(X, rough).",
        "description": "If something is big and rough then it eats the tiger."
    },
    {
        "id": 8554,
        "statement": "is(X, big) :- eats(X, bald_eagle).",
        "description": "If something eats the bald eagle then it is big."
    },
    {
        "id": 8555,
        "statement": "is(X, big) :- eats(X, tiger), not is(X, round).",
        "description": "If something eats the tiger and it is not round then it is big."
    },
    {
        "id": 8556,
        "statement": "sees(X, bear) :- likes(X, squirrel), eats(X, tiger).",
        "description": "If something likes the squirrel and it eats the tiger then it sees the bear."
    },
    {
        "id": 8557,
        "statement": "sees(tiger, bear) :- likes(bald_eagle, tiger), likes(tiger, bald_eagle).",
        "description": "If the bald eagle likes the tiger and the tiger likes the bald eagle then the tiger sees the bear."
    },
    {
        "id": 8558,
        "statement": "likes(bald_eagle, tiger) :- not eats(squirrel, bald_eagle).",
        "description": "If the squirrel does not eat the bald eagle then the bald eagle likes the tiger."
    },
    {
        "id": 8559,
        "statement": "is(X, round) :- is(X, big), is(X, cold).",
        "description": "All big, cold people are round."
    },
    {
        "id": 8560,
        "statement": "is(X, young) :- is(X, kind), is(X, furry).",
        "description": "All kind, furry people are young."
    },
    {
        "id": 8561,
        "statement": "is(X, kind) :- is(X, smart), is(X, big).",
        "description": "All smart, big people are kind."
    },
    {
        "id": 8562,
        "statement": "is(X, smart) :- is(X, young), is(X, kind).",
        "description": "Young, kind people are smart."
    },
    {
        "id": 8563,
        "statement": "is(X, cold) :- is(X, kind), is(X, young).",
        "description": "If someone is kind and young then they are cold."
    },
    {
        "id": 8564,
        "statement": "is(X, big) :- is(X, cold), is(X, smart).",
        "description": "All cold, smart people are big."
    },
    {
        "id": 8565,
        "statement": "needs(cat, rabbit) :- eats(cat, bear).",
        "description": "If the cat eats the bear then the cat needs the rabbit."
    },
    {
        "id": 8566,
        "statement": "chases(X, rabbit) :- is(X, big).",
        "description": "If someone is big then they chase the rabbit."
    },
    {
        "id": 8567,
        "statement": "is(X, big) :- needs(X, rabbit).",
        "description": "If someone needs the rabbit then they are big."
    },
    {
        "id": 8568,
        "statement": "is(bear, nice) :- needs(X, bear), needs(X, cat).",
        "description": "If someone needs the bear and they need the cat then the bear is nice."
    },
    {
        "id": 8569,
        "statement": "needs(X, rabbit) :- is(X, red).",
        "description": "If someone is red then they need the rabbit."
    },
    {
        "id": 8570,
        "statement": "is(bear, cold) :- needs(X, bear), is(X, cold).",
        "description": "If someone needs the bear and they are cold then the bear is cold."
    },
    {
        "id": 8571,
        "statement": "needs(tiger, bear) :- eats(X, tiger).",
        "description": "If someone eats the tiger then the tiger needs the bear."
    },
    {
        "id": 8572,
        "statement": "is(X, red) :- is(X, white), is(X, young).",
        "description": "All white, young things are red."
    },
    {
        "id": 8573,
        "statement": "is(X, red) :- is(X, nice), is(X, big).",
        "description": "All nice, big people are red."
    },
    {
        "id": 8574,
        "statement": "is(bob, nice) :- is(bob, quiet).",
        "description": "If Bob is quiet then Bob is nice."
    },
    {
        "id": 8575,
        "statement": "is(X, big) :- is(X, nice), is(X, white).",
        "description": "Nice, white people are big."
    },
    {
        "id": 8576,
        "statement": "is(X, blue) :- is(X, white), is(X, round).",
        "description": "White, round people are blue."
    },
    {
        "id": 8577,
        "statement": "is(X, white) :- is(X, young), is(X, green).",
        "description": "Young, green people are white."
    },
    {
        "id": 8578,
        "statement": "is(X, white) :- is(X, green), is(X, young).",
        "description": "If someone is green and young then they are white."
    },
    {
        "id": 8579,
        "statement": "chases(X, squirrel) :- is(X, young).",
        "description": "If someone is young then they chase the squirrel."
    },
    {
        "id": 8580,
        "statement": "eats(tiger, dog) :- visits(X, tiger), is(X, blue).",
        "description": "If someone visits the tiger and they are blue then the tiger eats the dog."
    },
    {
        "id": 8581,
        "statement": "visits(cat, squirrel) :- visits(X, cat).",
        "description": "If someone visits the cat then the cat visits the squirrel."
    },
    {
        "id": 8582,
        "statement": "is(tiger, blue) :- eats(X, tiger).",
        "description": "If someone eats the tiger then the tiger is blue."
    },
    {
        "id": 8583,
        "statement": "is(squirrel, young) :- is(tiger, blue), chases(tiger, squirrel).",
        "description": "If the tiger is blue and the tiger chases the squirrel then the squirrel is young."
    },
    {
        "id": 8584,
        "statement": "visits(squirrel, dog) :- is(X, rough), eats(X, squirrel).",
        "description": "If someone is rough and they eat the squirrel then the squirrel visits the dog."
    },
    {
        "id": 8585,
        "statement": "visits(dog, cat) :- is(X, kind), eats(X, dog).",
        "description": "If someone is kind and they eat the dog then the dog visits the cat."
    },
    {
        "id": 8586,
        "statement": "chases(lion, bear) :- chases(dog, lion), not chases(bear, dog).",
        "description": "If the dog chases the lion and the bear does not chase the dog then the lion chases the bear."
    },
    {
        "id": 8587,
        "statement": "visits(mouse, lion) :- sees(X, mouse), is(mouse, green).",
        "description": "If something sees the mouse and the mouse is green then the mouse visits the lion."
    },
    {
        "id": 8588,
        "statement": "is(mouse, green) :- chases(X, mouse), not chases(X, lion).",
        "description": "If something chases the mouse and it does not chase the lion then the mouse is green."
    },
    {
        "id": 8589,
        "statement": "chases(X, mouse) :- chases(X, bear), not is(X, young).",
        "description": "If something chases the bear and it is not young then it chases the mouse."
    },
    {
        "id": 8590,
        "statement": "chases(mouse, bear) :- visits(mouse, lion).",
        "description": "If the mouse visits the lion then the mouse chases the bear."
    },
    {
        "id": 8591,
        "statement": "visits(X, bear) :- is(X, blue).",
        "description": "If something is blue then it visits the bear."
    },
    {
        "id": 8592,
        "statement": "visits(bear, dog) :- chases(X, bear), sees(X, bear).",
        "description": "If something chases the bear and it sees the bear then the bear visits the dog."
    },
    {
        "id": 8593,
        "statement": "visits(X, lion) :- is(X, cold), not is(X, blue).",
        "description": "If something is cold and not blue then it visits the lion."
    },
    {
        "id": 8594,
        "statement": "is(X, green) :- is(X, big), is(X, young).",
        "description": "Big, young things are green."
    },
    {
        "id": 8595,
        "statement": "is(X, red) :- is(X, nice), not is(X, blue).",
        "description": "If someone is nice and not blue then they are red."
    },
    {
        "id": 8596,
        "statement": "is(bob, round) :- is(bob, white), not is(bob, blue).",
        "description": "If Bob is white and Bob is not blue then Bob is round."
    },
    {
        "id": 8597,
        "statement": "visits(X, dog) :- is(X, blue).",
        "description": "If someone is blue then they visit the dog."
    },
    {
        "id": 8598,
        "statement": "is(X, red) :- visits(X, dog).",
        "description": "If someone visits the dog then they are red."
    },
    {
        "id": 8599,
        "statement": "visits(tiger, dog) :- sees(X, dog), sees(dog, tiger).",
        "description": "If someone sees the dog and the dog sees the tiger then the tiger visits the dog."
    },
    {
        "id": 8600,
        "statement": "sees(X, lion) :- is(X, blue).",
        "description": "If someone is blue then they see the lion."
    },
    {
        "id": 8601,
        "statement": "is(X, kind) :- chases(X, mouse), is(X, rough).",
        "description": "If someone chases the mouse and they are rough then they are kind."
    },
    {
        "id": 8602,
        "statement": "chases(mouse, tiger) :- chases(tiger, mouse).",
        "description": "If the tiger chases the mouse then the mouse chases the tiger."
    },
    {
        "id": 8603,
        "statement": "sees(X, tiger) :- is(X, red).",
        "description": "If someone is red then they see the tiger."
    },
    {
        "id": 8604,
        "statement": "eats(X, bear) :- needs(X, dog), not is(X, round).",
        "description": "If something needs the dog and it is not round then it eats the bear."
    },
    {
        "id": 8605,
        "statement": "eats(X, bear) :- is(X, big).",
        "description": "If something is big then it eats the bear."
    },
    {
        "id": 8606,
        "statement": "needs(X, mouse) :- is(X, round), is(X, green).",
        "description": "If something is round and green then it needs the mouse."
    },
    {
        "id": 8607,
        "statement": "needs(bear, mouse) :- eats(dog, bear).",
        "description": "If the dog eats the bear then the bear needs the mouse."
    },
    {
        "id": 8608,
        "statement": "is(X, big) :- needs(X, bear), chases(X, lion).",
        "description": "If something needs the bear and it chases the lion then it is big."
    },
    {
        "id": 8609,
        "statement": "chases(X, lion) :- is(X, round).",
        "description": "If something is round then it chases the lion."
    },
    {
        "id": 8610,
        "statement": "is(bear, kind) :- eats(X, bear).",
        "description": "If something eats the bear then the bear is kind."
    },
    {
        "id": 8611,
        "statement": "is(lion, rough) :- eats(X, bear), needs(X, lion).",
        "description": "If something eats the bear and it needs the lion then the lion is rough."
    },
    {
        "id": 8612,
        "statement": "visits(bald_eagle, mouse) :- chases(rabbit, bald_eagle).",
        "description": "If the rabbit chases the bald eagle then the bald eagle visits the mouse."
    },
    {
        "id": 8613,
        "statement": "is(X, nice) :- visits(X, rabbit), not is(X, round).",
        "description": "If something visits the rabbit and it is not round then it is nice."
    },
    {
        "id": 8614,
        "statement": "visits(bear, rabbit) :- eats(X, bear).",
        "description": "If something eats the bear then the bear visits the rabbit."
    },
    {
        "id": 8615,
        "statement": "visits(rabbit, bald_eagle) :- eats(bear, rabbit).",
        "description": "If the bear eats the rabbit then the rabbit visits the bald eagle."
    },
    {
        "id": 8616,
        "statement": "eats(bear, rabbit) :- eats(X, rabbit), eats(rabbit, bear).",
        "description": "If something eats the rabbit and the rabbit eats the bear then the bear eats the rabbit."
    },
    {
        "id": 8617,
        "statement": "visits(X, mouse) :- is(X, nice), not is(X, cold).",
        "description": "If something is nice and not cold then it visits the mouse."
    },
    {
        "id": 8618,
        "statement": "eats(bear, bald_eagle) :- is(X, cold), likes(X, bear).",
        "description": "If someone is cold and they like the bear then the bear eats the bald eagle."
    },
    {
        "id": 8619,
        "statement": "chases(squirrel, lion) :- chases(X, bear), likes(X, squirrel).",
        "description": "If someone chases the bear and they like the squirrel then the squirrel chases the lion."
    },
    {
        "id": 8620,
        "statement": "is(X, kind) :- chases(X, bald_eagle).",
        "description": "If someone chases the bald eagle then they are kind."
    },
    {
        "id": 8621,
        "statement": "is(squirrel, green) :- likes(lion, squirrel), eats(squirrel, bald_eagle).",
        "description": "If the lion likes the squirrel and the squirrel eats the bald eagle then the squirrel is green."
    },
    {
        "id": 8622,
        "statement": "chases(X, bald_eagle) :- likes(X, lion).",
        "description": "If someone likes the lion then they chase the bald eagle."
    },
    {
        "id": 8623,
        "statement": "eats(X, squirrel) :- is(X, kind).",
        "description": "If someone is kind then they eat the squirrel."
    },
    {
        "id": 8624,
        "statement": "is(X, cold) :- eats(X, squirrel), chases(squirrel, lion).",
        "description": "If someone eats the squirrel and the squirrel chases the lion then they are cold."
    },
    {
        "id": 8625,
        "statement": "is(X, big) :- is(X, smart), is(X, green).",
        "description": "Smart, green things are big."
    },
    {
        "id": 8626,
        "statement": "is(harry, rough) :- is(harry, smart), is(harry, cold).",
        "description": "If Harry is smart and Harry is cold then Harry is rough."
    },
    {
        "id": 8627,
        "statement": "is(harry, rough) :- is(harry, furry).",
        "description": "If Harry is furry then Harry is rough."
    },
    {
        "id": 8628,
        "statement": "is(X, cold) :- is(X, blue), is(X, smart).",
        "description": "Blue, smart things are cold."
    },
    {
        "id": 8629,
        "statement": "is(X, cold) :- is(X, round), is(X, young).",
        "description": "All round, young people are cold."
    },
    {
        "id": 8630,
        "statement": "is(X, young) :- is(X, smart), is(X, green).",
        "description": "All smart, green people are young."
    },
    {
        "id": 8631,
        "statement": "is(X, furry) :- is(X, green), is(X, young).",
        "description": "All green, young people are furry."
    },
    {
        "id": 8632,
        "statement": "is(X, white) :- is(X, rough), is(X, green).",
        "description": "All rough, green people are white."
    },
    {
        "id": 8633,
        "statement": "is(X, kind) :- is(X, green), is(X, white).",
        "description": "Green, white people are kind."
    },
    {
        "id": 8634,
        "statement": "is(X, white) :- is(X, green), is(X, big).",
        "description": "If someone is green and big then they are white."
    },
    {
        "id": 8635,
        "statement": "is(X, young) :- is(X, rough), is(X, big).",
        "description": "If someone is rough and big then they are young."
    },
    {
        "id": 8636,
        "statement": "is(X, green) :- is(X, big), is(X, young).",
        "description": "All big, young people are green."
    },
    {
        "id": 8637,
        "statement": "is(X, smart) :- is(X, round), is(X, red).",
        "description": "If something is round and red then it is smart."
    },
    {
        "id": 8638,
        "statement": "is(X, red) :- is(X, green), is(X, cold).",
        "description": "All green, cold things are red."
    },
    {
        "id": 8639,
        "statement": "is(X, round) :- is(X, cold), is(X, smart).",
        "description": "Cold, smart things are round."
    },
    {
        "id": 8640,
        "statement": "is(charlie, white) :- is(charlie, smart).",
        "description": "If Charlie is smart then Charlie is white."
    },
    {
        "id": 8641,
        "statement": "chases(bear, bald_eagle) :- is(X, red), chases(X, bear).",
        "description": "If someone is red and they chase the bear then the bear chases the bald eagle."
    },
    {
        "id": 8642,
        "statement": "is(bear, green) :- is(mouse, red), sees(mouse, bear).",
        "description": "If the mouse is red and the mouse sees the bear then the bear is green."
    },
    {
        "id": 8643,
        "statement": "sees(mouse, bear) :- is(X, red), likes(X, mouse).",
        "description": "If someone is red and they like the mouse then the mouse sees the bear."
    },
    {
        "id": 8644,
        "statement": "likes(X, mouse) :- likes(X, squirrel).",
        "description": "If someone likes the squirrel then they like the mouse."
    },
    {
        "id": 8645,
        "statement": "is(bear, green) :- likes(X, bear), chases(X, mouse).",
        "description": "If someone likes the bear and they chase the mouse then the bear is green."
    },
    {
        "id": 8646,
        "statement": "likes(X, bald_eagle) :- is(X, kind).",
        "description": "If someone is kind then they like the bald eagle."
    },
    {
        "id": 8647,
        "statement": "chases(X, mouse) :- likes(X, bald_eagle).",
        "description": "If someone likes the bald eagle then they chase the mouse."
    },
    {
        "id": 8648,
        "statement": "is(X, kind) :- sees(X, bear).",
        "description": "If someone sees the bear then they are kind."
    },
    {
        "id": 8649,
        "statement": "likes(tiger, bald_eagle) :- is(X, blue), chases(X, tiger).",
        "description": "If someone is blue and they chase the tiger then the tiger likes the bald eagle."
    },
    {
        "id": 8650,
        "statement": "is(lion, round) :- likes(X, lion), not is(X, rough).",
        "description": "If someone likes the lion and they are not rough then the lion is round."
    },
    {
        "id": 8651,
        "statement": "chases(mouse, tiger) :- is(X, blue), not needs(X, mouse).",
        "description": "If someone is blue and they do not need the mouse then the mouse chases the tiger."
    },
    {
        "id": 8652,
        "statement": "is(mouse, blue) :- chases(lion, mouse).",
        "description": "If the lion chases the mouse then the mouse is blue."
    },
    {
        "id": 8653,
        "statement": "chases(mouse, bald_eagle) :- is(X, kind), chases(X, mouse).",
        "description": "If someone is kind and they chase the mouse then the mouse chases the bald eagle."
    },
    {
        "id": 8654,
        "statement": "is(X, big) :- likes(X, mouse).",
        "description": "If someone likes the mouse then they are big."
    },
    {
        "id": 8655,
        "statement": "chases(X, mouse) :- is(X, round).",
        "description": "If someone is round then they chase the mouse."
    },
    {
        "id": 8656,
        "statement": "is(X, big) :- needs(X, bald_eagle), eats(X, bald_eagle).",
        "description": "If someone needs the bald eagle and they eat the bald eagle then they are big."
    },
    {
        "id": 8657,
        "statement": "eats(dog, bald_eagle) :- needs(X, dog).",
        "description": "If someone needs the dog then the dog eats the bald eagle."
    },
    {
        "id": 8658,
        "statement": "needs(X, bald_eagle) :- eats(X, bear), eats(bear, tiger).",
        "description": "If someone eats the bear and the bear eats the tiger then they need the bald eagle."
    },
    {
        "id": 8659,
        "statement": "is(bear, big) :- needs(X, bear), is(X, big).",
        "description": "If someone needs the bear and they are big then the bear is big."
    },
    {
        "id": 8660,
        "statement": "eats(X, tiger) :- is(X, big).",
        "description": "If someone is big then they eat the tiger."
    },
    {
        "id": 8661,
        "statement": "chases(X, tiger) :- needs(X, tiger).",
        "description": "If someone needs the tiger then they chase the tiger."
    },
    {
        "id": 8662,
        "statement": "chases(X, bear) :- eats(X, dog), is(dog, red).",
        "description": "If someone eats the dog and the dog is red then they chase the bear."
    },
    {
        "id": 8663,
        "statement": "is(harry, smart) :- is(harry, quiet), is(harry, round).",
        "description": "If Harry is quiet and Harry is round then Harry is smart."
    },
    {
        "id": 8664,
        "statement": "is(X, quiet) :- is(X, round), is(X, smart).",
        "description": "If something is round and smart then it is quiet."
    },
    {
        "id": 8665,
        "statement": "is(X, nice) :- is(X, smart), is(X, white).",
        "description": "If something is smart and white then it is nice."
    },
    {
        "id": 8666,
        "statement": "is(X, round) :- is(X, blue), is(X, smart).",
        "description": "All blue, smart things are round."
    },
    {
        "id": 8667,
        "statement": "is(X, quiet) :- is(X, white), is(X, nice).",
        "description": "White, nice things are quiet."
    },
    {
        "id": 8668,
        "statement": "is(erin, red) :- is(erin, quiet), is(erin, rough).",
        "description": "If Erin is quiet and Erin is rough then Erin is red."
    },
    {
        "id": 8669,
        "statement": "is(charlie, young) :- is(charlie, red), is(charlie, smart).",
        "description": "If Charlie is red and Charlie is smart then Charlie is young."
    },
    {
        "id": 8670,
        "statement": "is(X, smart) :- is(X, red), is(X, young).",
        "description": "If something is red and young then it is smart."
    },
    {
        "id": 8671,
        "statement": "is(X, green) :- is(X, young), is(X, nice).",
        "description": "All young, nice things are green."
    },
    {
        "id": 8672,
        "statement": "is(X, green) :- is(X, rough), is(X, red).",
        "description": "If something is rough and red then it is green."
    },
    {
        "id": 8673,
        "statement": "visits(X, tiger) :- sees(X, squirrel), is(squirrel, big).",
        "description": "If something sees the squirrel and the squirrel is big then it visits the tiger."
    },
    {
        "id": 8674,
        "statement": "visits(X, mouse) :- is(X, cold).",
        "description": "If something is cold then it visits the mouse."
    },
    {
        "id": 8675,
        "statement": "is(X, kind) :- is(X, big), chases(X, squirrel).",
        "description": "If something is big and it chases the squirrel then it is kind."
    },
    {
        "id": 8676,
        "statement": "is(squirrel, big) :- sees(X, squirrel), visits(X, squirrel).",
        "description": "If something sees the squirrel and it visits the squirrel then the squirrel is big."
    },
    {
        "id": 8677,
        "statement": "chases(X, tiger) :- visits(X, squirrel).",
        "description": "If something visits the squirrel then it chases the tiger."
    },
    {
        "id": 8678,
        "statement": "visits(X, squirrel) :- visits(X, tiger).",
        "description": "If something visits the tiger then it visits the squirrel."
    },
    {
        "id": 8679,
        "statement": "visits(X, tiger) :- is(X, red).",
        "description": "If something is red then it visits the tiger."
    },
    {
        "id": 8680,
        "statement": "sees(X, mouse) :- is(X, blue), visits(X, mouse).",
        "description": "If something is blue and it visits the mouse then it sees the mouse."
    },
    {
        "id": 8681,
        "statement": "is(X, big) :- is(X, furry), is(X, quiet).",
        "description": "If something is furry and quiet then it is big."
    },
    {
        "id": 8682,
        "statement": "is(X, red) :- is(X, smart), is(X, furry).",
        "description": "If something is smart and furry then it is red."
    },
    {
        "id": 8683,
        "statement": "is(fiona, smart) :- is(fiona, furry).",
        "description": "If Fiona is furry then Fiona is smart."
    },
    {
        "id": 8684,
        "statement": "is(dave, smart) :- is(dave, blue), is(dave, green).",
        "description": "If Dave is blue and Dave is green then Dave is smart."
    },
    {
        "id": 8685,
        "statement": "is(fiona, big) :- is(fiona, blue), is(fiona, green).",
        "description": "If Fiona is blue and Fiona is green then Fiona is big."
    },
    {
        "id": 8686,
        "statement": "is(X, blue) :- is(X, furry), is(X, red).",
        "description": "If something is furry and red then it is blue."
    },
    {
        "id": 8687,
        "statement": "is(X, green) :- is(X, red), is(X, blue).",
        "description": "If something is red and blue then it is green."
    },
    {
        "id": 8688,
        "statement": "is(X, green) :- is(X, blue), is(X, round).",
        "description": "Blue, round things are green."
    },
    {
        "id": 8689,
        "statement": "is(dave, big) :- is(dave, blue), is(dave, young).",
        "description": "If Dave is blue and Dave is young then Dave is big."
    },
    {
        "id": 8690,
        "statement": "is(X, blue) :- is(X, big), is(X, green).",
        "description": "If something is big and green then it is blue."
    },
    {
        "id": 8691,
        "statement": "is(dave, rough) :- is(dave, big), not is(dave, round).",
        "description": "If Dave is big and Dave is not round then Dave is rough."
    },
    {
        "id": 8692,
        "statement": "is(mouse, green) :- sees(X, dog), sees(dog, mouse).",
        "description": "If someone sees the dog and the dog sees the mouse then the mouse is green."
    },
    {
        "id": 8693,
        "statement": "chases(X, dog) :- likes(X, dog).",
        "description": "If someone likes the dog then they chase the dog."
    },
    {
        "id": 8694,
        "statement": "likes(tiger, mouse) :- is(X, round), sees(X, tiger).",
        "description": "If someone is round and they see the tiger then the tiger likes the mouse."
    },
    {
        "id": 8695,
        "statement": "chases(mouse, tiger) :- sees(mouse, rabbit), is(rabbit, green).",
        "description": "If the mouse sees the rabbit and the rabbit is green then the mouse chases the tiger."
    },
    {
        "id": 8696,
        "statement": "likes(X, dog) :- likes(X, mouse).",
        "description": "If someone likes the mouse then they like the dog."
    },
    {
        "id": 8697,
        "statement": "sees(X, tiger) :- chases(X, dog).",
        "description": "If someone chases the dog then they see the tiger."
    },
    {
        "id": 8698,
        "statement": "is(X, furry) :- is(X, blue).",
        "description": "If something is blue then it is furry."
    },
    {
        "id": 8699,
        "statement": "is(X, cold) :- is(X, furry), is(X, blue).",
        "description": "All furry, blue things are cold."
    },
    {
        "id": 8700,
        "statement": "is(bob, quiet) :- is(bob, big), is(bob, round).",
        "description": "If Bob is big and Bob is round then Bob is quiet."
    },
    {
        "id": 8701,
        "statement": "is(X, round) :- visits(X, dog), is(dog, round).",
        "description": "If someone visits the dog and the dog is round then they are round."
    },
    {
        "id": 8702,
        "statement": "eats(dog, squirrel) :- visits(X, dog).",
        "description": "If someone visits the dog then the dog eats the squirrel."
    },
    {
        "id": 8703,
        "statement": "sees(X, bear) :- visits(X, dog), is(dog, nice).",
        "description": "If someone visits the dog and the dog is nice then they see the bear."
    },
    {
        "id": 8704,
        "statement": "eats(lion, dog) :- eats(X, squirrel), sees(X, lion).",
        "description": "If someone eats the squirrel and they see the lion then the lion eats the dog."
    },
    {
        "id": 8705,
        "statement": "is(dog, nice) :- visits(X, dog), is(X, round).",
        "description": "If someone visits the dog and they are round then the dog is nice."
    },
    {
        "id": 8706,
        "statement": "is(X, big) :- eats(X, squirrel).",
        "description": "If someone eats the squirrel then they are big."
    },
    {
        "id": 8707,
        "statement": "is(X, green) :- sees(X, bear), visits(X, squirrel).",
        "description": "If someone sees the bear and they visit the squirrel then they are green."
    },
    {
        "id": 8708,
        "statement": "is(erin, nice) :- is(erin, furry), is(erin, white).",
        "description": "If Erin is furry and Erin is white then Erin is nice."
    },
    {
        "id": 8709,
        "statement": "is(erin, white) :- is(erin, blue), is(erin, nice).",
        "description": "If Erin is blue and Erin is nice then Erin is white."
    },
    {
        "id": 8710,
        "statement": "is(anne, big) :- is(anne, round), is(anne, kind).",
        "description": "If Anne is round and Anne is kind then Anne is big."
    },
    {
        "id": 8711,
        "statement": "eats(cat, bear) :- is(X, big), eats(X, cat).",
        "description": "If someone is big and they eat the cat then the cat eats the bear."
    },
    {
        "id": 8712,
        "statement": "likes(X, tiger) :- chases(X, cow).",
        "description": "If someone chases the cow then they like the tiger."
    },
    {
        "id": 8713,
        "statement": "is(X, round) :- is(X, cold), likes(X, cat).",
        "description": "If someone is cold and they like the cat then they are round."
    },
    {
        "id": 8714,
        "statement": "chases(bear, cow) :- likes(X, bear).",
        "description": "If someone likes the bear then the bear chases the cow."
    },
    {
        "id": 8715,
        "statement": "eats(tiger, cat) :- likes(X, tiger).",
        "description": "If someone likes the tiger then the tiger eats the cat."
    },
    {
        "id": 8716,
        "statement": "likes(X, bear) :- eats(X, cat).",
        "description": "If someone eats the cat then they like the bear."
    },
    {
        "id": 8717,
        "statement": "chases(cat, bear) :- chases(X, cow), eats(cow, cat).",
        "description": "If someone chases the cow and the cow eats the cat then the cat chases the bear."
    },
    {
        "id": 8718,
        "statement": "eats(X, cow) :- is(X, red).",
        "description": "If someone is red then they eat the cow."
    },
    {
        "id": 8719,
        "statement": "is(dave, furry) :- is(dave, green).",
        "description": "If Dave is green then Dave is furry."
    },
    {
        "id": 8720,
        "statement": "is(charlie, smart) :- is(charlie, green), is(charlie, white).",
        "description": "If Charlie is green and Charlie is white then Charlie is smart."
    },
    {
        "id": 8721,
        "statement": "is(fiona, green) :- is(fiona, big).",
        "description": "If Fiona is big then Fiona is green."
    },
    {
        "id": 8722,
        "statement": "is(X, smart) :- is(X, furry), is(X, cold).",
        "description": "All furry, cold people are smart."
    },
    {
        "id": 8723,
        "statement": "is(X, young) :- is(X, furry), is(X, white).",
        "description": "All furry, white people are young."
    },
    {
        "id": 8724,
        "statement": "is(X, cold) :- is(X, furry), is(X, young).",
        "description": "Furry, young people are cold."
    },
    {
        "id": 8725,
        "statement": "is(X, smart) :- is(X, green), is(X, big).",
        "description": "Green, big people are smart."
    },
    {
        "id": 8726,
        "statement": "is(X, cold) :- is(X, white).",
        "description": "If something is white then it is cold."
    },
    {
        "id": 8727,
        "statement": "is(X, furry) :- is(X, smart), is(X, blue).",
        "description": "All smart, blue things are furry."
    },
    {
        "id": 8728,
        "statement": "is(X, cold) :- is(X, smart), is(X, blue).",
        "description": "All smart, blue things are cold."
    },
    {
        "id": 8729,
        "statement": "is(X, quiet) :- is(X, smart), is(X, furry).",
        "description": "Smart, furry things are quiet."
    },
    {
        "id": 8730,
        "statement": "is(X, green) :- is(X, cold), is(X, round).",
        "description": "Cold, round people are green."
    },
    {
        "id": 8731,
        "statement": "is(fiona, round) :- is(fiona, blue), is(fiona, smart).",
        "description": "If Fiona is blue and Fiona is smart then Fiona is round."
    },
    {
        "id": 8732,
        "statement": "is(harry, white) :- is(harry, round).",
        "description": "If Harry is round then Harry is white."
    },
    {
        "id": 8733,
        "statement": "is(anne, round) :- is(anne, blue).",
        "description": "If Anne is blue then Anne is round."
    },
    {
        "id": 8734,
        "statement": "is(X, red) :- is(X, cold), is(X, blue).",
        "description": "Cold, blue people are red."
    },
    {
        "id": 8735,
        "statement": "is(X, smart) :- is(X, blue), is(X, nice).",
        "description": "Blue, nice people are smart."
    },
    {
        "id": 8736,
        "statement": "is(X, blue) :- is(X, smart).",
        "description": "All smart people are blue."
    },
    {
        "id": 8737,
        "statement": "is(X, cold) :- is(X, big), is(X, red).",
        "description": "Big, red people are cold."
    },
    {
        "id": 8738,
        "statement": "is(X, nice) :- is(X, red), is(X, blue).",
        "description": "If someone is red and blue then they are nice."
    },
    {
        "id": 8739,
        "statement": "is(anne, big) :- is(anne, white), is(anne, quiet).",
        "description": "If Anne is white and Anne is quiet then Anne is big."
    },
    {
        "id": 8740,
        "statement": "is(anne, smart) :- is(anne, rough), is(anne, red).",
        "description": "If Anne is rough and Anne is red then Anne is smart."
    },
    {
        "id": 8741,
        "statement": "is(fiona, white) :- is(fiona, rough).",
        "description": "If Fiona is rough then Fiona is white."
    },
    {
        "id": 8742,
        "statement": "is(X, white) :- is(X, red), not is(X, green).",
        "description": "If someone is red and not green then they are white."
    },
    {
        "id": 8743,
        "statement": "is(X, nice) :- is(X, red), is(X, quiet).",
        "description": "Red, quiet people are nice."
    },
    {
        "id": 8744,
        "statement": "is(X, kind) :- is(X, red), is(X, white).",
        "description": "If someone is red and white then they are kind."
    },
    {
        "id": 8745,
        "statement": "is(X, quiet) :- is(X, nice), is(X, red).",
        "description": "If someone is nice and red then they are quiet."
    },
    {
        "id": 8746,
        "statement": "is(harry, white) :- is(harry, round), is(harry, green).",
        "description": "If Harry is round and Harry is green then Harry is white."
    },
    {
        "id": 8747,
        "statement": "is(X, blue) :- is(X, round), is(X, red).",
        "description": "All round, red people are blue."
    },
    {
        "id": 8748,
        "statement": "is(X, kind) :- is(X, blue), is(X, red).",
        "description": "If someone is blue and red then they are kind."
    },
    {
        "id": 8749,
        "statement": "is(X, blue) :- is(X, furry), is(X, kind).",
        "description": "If someone is furry and kind then they are blue."
    },
    {
        "id": 8750,
        "statement": "is(X, green) :- is(X, kind), is(X, white).",
        "description": "All kind, white people are green."
    },
    {
        "id": 8751,
        "statement": "visits(X, cow) :- needs(X, cat), needs(X, lion).",
        "description": "If something needs the cat and it needs the lion then it visits the cow."
    },
    {
        "id": 8752,
        "statement": "visits(cow, lion) :- needs(X, cow).",
        "description": "If something needs the cow then the cow visits the lion."
    },
    {
        "id": 8753,
        "statement": "is(X, kind) :- visits(X, cat).",
        "description": "If something visits the cat then it is kind."
    },
    {
        "id": 8754,
        "statement": "likes(cat, cow) :- visits(X, cat).",
        "description": "If something visits the cat then the cat likes the cow."
    },
    {
        "id": 8755,
        "statement": "needs(lion, cow) :- visits(X, lion), visits(X, cow).",
        "description": "If something visits the lion and it visits the cow then the lion needs the cow."
    },
    {
        "id": 8756,
        "statement": "needs(X, cow) :- is(X, round), visits(X, cow).",
        "description": "If something is round and it visits the cow then it needs the cow."
    },
    {
        "id": 8757,
        "statement": "is(harry, quiet) :- is(harry, young), is(harry, furry).",
        "description": "If Harry is young and Harry is furry then Harry is quiet."
    },
    {
        "id": 8758,
        "statement": "is(X, nice) :- is(X, green), is(X, furry).",
        "description": "If someone is green and furry then they are nice."
    },
    {
        "id": 8759,
        "statement": "is(X, rough) :- is(X, furry), is(X, young).",
        "description": "Furry, young people are rough."
    },
    {
        "id": 8760,
        "statement": "is(X, young) :- is(X, nice), is(X, green).",
        "description": "All nice, green people are young."
    },
    {
        "id": 8761,
        "statement": "is(X, furry) :- is(X, quiet), is(X, rough).",
        "description": "If someone is quiet and rough then they are furry."
    },
    {
        "id": 8762,
        "statement": "is(X, nice) :- is(X, smart), is(X, furry).",
        "description": "All smart, furry people are nice."
    },
    {
        "id": 8763,
        "statement": "is(X, white) :- is(X, round), is(X, quiet).",
        "description": "If something is round and quiet then it is white."
    },
    {
        "id": 8764,
        "statement": "is(X, blue) :- is(X, green), is(X, quiet).",
        "description": "All green, quiet things are blue."
    },
    {
        "id": 8765,
        "statement": "is(X, green) :- is(X, furry), is(X, round).",
        "description": "If something is furry and round then it is green."
    },
    {
        "id": 8766,
        "statement": "is(X, furry) :- is(X, round), is(X, blue).",
        "description": "All round, blue things are furry."
    },
    {
        "id": 8767,
        "statement": "is(erin, furry) :- is(erin, big), is(erin, young).",
        "description": "If Erin is big and Erin is young then Erin is furry."
    },
    {
        "id": 8768,
        "statement": "is(dave, cold) :- not is(dave, red).",
        "description": "If Dave is not red then Dave is cold."
    },
    {
        "id": 8769,
        "statement": "is(X, young) :- is(X, red).",
        "description": "All red people are young."
    },
    {
        "id": 8770,
        "statement": "is(X, round) :- is(X, green), is(X, furry).",
        "description": "Green, furry people are round."
    },
    {
        "id": 8771,
        "statement": "is(fiona, furry) :- is(fiona, young).",
        "description": "If Fiona is young then Fiona is furry."
    },
    {
        "id": 8772,
        "statement": "is(X, young) :- is(X, cold), is(X, kind).",
        "description": "If something is cold and kind then it is young."
    },
    {
        "id": 8773,
        "statement": "is(X, big) :- is(X, cold), is(X, young).",
        "description": "All cold, young things are big."
    },
    {
        "id": 8774,
        "statement": "is(X, quiet) :- is(X, young), is(X, red).",
        "description": "All young, red things are quiet."
    },
    {
        "id": 8775,
        "statement": "is(erin, red) :- is(erin, furry), not is(erin, young).",
        "description": "If Erin is furry and Erin is not young then Erin is red."
    },
    {
        "id": 8776,
        "statement": "is(X, green) :- is(X, furry), is(X, nice).",
        "description": "Furry, nice people are green."
    },
    {
        "id": 8777,
        "statement": "is(X, green) :- is(X, white), is(X, blue).",
        "description": "If someone is white and blue then they are green."
    },
    {
        "id": 8778,
        "statement": "chases(X, cow) :- is(X, blue).",
        "description": "If something is blue then it chases the cow."
    },
    {
        "id": 8779,
        "statement": "likes(mouse, squirrel) :- likes(X, mouse), not likes(X, rabbit).",
        "description": "If something likes the mouse and it does not like the rabbit then the mouse likes the squirrel."
    },
    {
        "id": 8780,
        "statement": "is(rabbit, blue) :- needs(squirrel, mouse), not likes(rabbit, squirrel).",
        "description": "If the squirrel needs the mouse and the rabbit does not like the squirrel then the rabbit is blue."
    },
    {
        "id": 8781,
        "statement": "needs(squirrel, mouse) :- likes(X, squirrel), likes(X, mouse).",
        "description": "If something likes the squirrel and it likes the mouse then the squirrel needs the mouse."
    },
    {
        "id": 8782,
        "statement": "likes(X, mouse) :- is(X, young).",
        "description": "If something is young then it likes the mouse."
    },
    {
        "id": 8783,
        "statement": "needs(X, squirrel) :- is(X, big), is(X, cold).",
        "description": "If something is big and cold then it needs the squirrel."
    },
    {
        "id": 8784,
        "statement": "is(X, nice) :- is(X, round), is(X, white).",
        "description": "All round, white things are nice."
    },
    {
        "id": 8785,
        "statement": "is(gary, cold) :- is(gary, quiet), is(gary, round).",
        "description": "If Gary is quiet and Gary is round then Gary is cold."
    },
    {
        "id": 8786,
        "statement": "is(X, round) :- is(X, nice).",
        "description": "If something is nice then it is round."
    },
    {
        "id": 8787,
        "statement": "is(X, furry) :- is(X, quiet), is(X, white).",
        "description": "If something is quiet and white then it is furry."
    },
    {
        "id": 8788,
        "statement": "is(X, round) :- is(X, blue), is(X, rough).",
        "description": "Blue, rough things are round."
    },
    {
        "id": 8789,
        "statement": "is(X, round) :- is(X, blue), is(X, red).",
        "description": "Blue, red things are round."
    },
    {
        "id": 8790,
        "statement": "chases(X, cow) :- is(X, cold).",
        "description": "If someone is cold then they chase the cow."
    },
    {
        "id": 8791,
        "statement": "chases(X, rabbit) :- is(X, red).",
        "description": "If someone is red then they chase the rabbit."
    },
    {
        "id": 8792,
        "statement": "is(X, red) :- is(X, young), chases(X, cow).",
        "description": "If someone is young and they chase the cow then they are red."
    },
    {
        "id": 8793,
        "statement": "is(X, cold) :- needs(X, bald_eagle).",
        "description": "If someone needs the bald eagle then they are cold."
    },
    {
        "id": 8794,
        "statement": "needs(X, squirrel) :- chases(X, rabbit), is(X, red).",
        "description": "If someone chases the rabbit and they are red then they need the squirrel."
    },
    {
        "id": 8795,
        "statement": "chases(X, bald_eagle) :- needs(X, squirrel).",
        "description": "If someone needs the squirrel then they chase the bald eagle."
    },
    {
        "id": 8796,
        "statement": "needs(X, rabbit) :- is(X, nice).",
        "description": "If someone is nice then they need the rabbit."
    },
    {
        "id": 8797,
        "statement": "needs(rabbit, cow) :- needs(squirrel, rabbit), not chases(rabbit, cow).",
        "description": "If the squirrel needs the rabbit and the rabbit does not chase the cow then the rabbit needs the cow."
    },
    {
        "id": 8798,
        "statement": "is(X, furry) :- is(X, young), is(X, nice).",
        "description": "If someone is young and nice then they are furry."
    },
    {
        "id": 8799,
        "statement": "is(gary, blue) :- is(gary, kind), not is(gary, smart).",
        "description": "If Gary is kind and Gary is not smart then Gary is blue."
    },
    {
        "id": 8800,
        "statement": "eats(cow, cat) :- eats(X, cow).",
        "description": "If someone eats the cow then the cow eats the cat."
    },
    {
        "id": 8801,
        "statement": "eats(X, cow) :- is(X, big), needs(X, cat).",
        "description": "If someone is big and they need the cat then they eat the cow."
    },
    {
        "id": 8802,
        "statement": "is(cat, big) :- needs(X, cat), eats(X, cat).",
        "description": "If someone needs the cat and they eat the cat then the cat is big."
    },
    {
        "id": 8803,
        "statement": "is(X, big) :- is(X, white), not is(X, nice).",
        "description": "If something is white and not nice then it is big."
    },
    {
        "id": 8804,
        "statement": "is(X, red) :- is(X, big), is(X, blue).",
        "description": "All big, blue things are red."
    },
    {
        "id": 8805,
        "statement": "is(X, kind) :- is(X, red), not is(X, big).",
        "description": "If something is red and not big then it is kind."
    },
    {
        "id": 8806,
        "statement": "needs(bear, lion) :- eats(cow, bear), not eats(cow, cat).",
        "description": "If the cow eats the bear and the cow does not eat the cat then the bear needs the lion."
    },
    {
        "id": 8807,
        "statement": "visits(cow, lion) :- eats(bear, cow), not eats(cow, bear).",
        "description": "If the bear eats the cow and the cow does not eat the bear then the cow visits the lion."
    },
    {
        "id": 8808,
        "statement": "needs(cat, lion) :- eats(X, cat), eats(X, cow).",
        "description": "If something eats the cat and it eats the cow then the cat needs the lion."
    },
    {
        "id": 8809,
        "statement": "needs(X, cow) :- is(X, cold), not visits(X, lion).",
        "description": "If something is cold and it does not visit the lion then it needs the cow."
    },
    {
        "id": 8810,
        "statement": "is(cow, green) :- visits(X, cow), not needs(X, cat).",
        "description": "If something visits the cow and it does not need the cat then the cow is green."
    },
    {
        "id": 8811,
        "statement": "is(X, red) :- eats(X, cat), is(X, green).",
        "description": "If something eats the cat and it is green then it is red."
    },
    {
        "id": 8812,
        "statement": "visits(X, cow) :- is(X, red), visits(X, cat).",
        "description": "If something is red and it visits the cat then it visits the cow."
    },
    {
        "id": 8813,
        "statement": "visits(X, cat) :- is(X, green), not needs(X, cow).",
        "description": "If something is green and it does not need the cow then it visits the cat."
    },
    {
        "id": 8814,
        "statement": "is(X, round) :- needs(X, bald_eagle).",
        "description": "If someone needs the bald eagle then they are round."
    },
    {
        "id": 8815,
        "statement": "is(tiger, blue) :- needs(cow, tiger), needs(cow, bear).",
        "description": "If the cow needs the tiger and the cow needs the bear then the tiger is blue."
    },
    {
        "id": 8816,
        "statement": "needs(bald_eagle, tiger) :- needs(X, bald_eagle).",
        "description": "If someone needs the bald eagle then the bald eagle needs the tiger."
    },
    {
        "id": 8817,
        "statement": "is(X, round) :- is(X, rough), visits(X, cow).",
        "description": "If someone is rough and they visit the cow then they are round."
    },
    {
        "id": 8818,
        "statement": "chases(X, tiger) :- visits(X, bear).",
        "description": "If someone visits the bear then they chase the tiger."
    },
    {
        "id": 8819,
        "statement": "is(cow, round) :- visits(bald_eagle, cow).",
        "description": "If the bald eagle visits the cow then the cow is round."
    },
    {
        "id": 8820,
        "statement": "is(X, smart) :- is(X, rough), is(X, quiet).",
        "description": "All rough, quiet things are smart."
    },
    {
        "id": 8821,
        "statement": "is(X, rough) :- is(X, cold), is(X, smart).",
        "description": "If something is cold and smart then it is rough."
    },
    {
        "id": 8822,
        "statement": "is(dave, smart) :- is(dave, quiet), is(dave, nice).",
        "description": "If Dave is quiet and Dave is nice then Dave is smart."
    },
    {
        "id": 8823,
        "statement": "is(X, quiet) :- is(X, cold), is(X, rough).",
        "description": "If something is cold and rough then it is quiet."
    },
    {
        "id": 8824,
        "statement": "is(X, nice) :- visits(X, bald_eagle).",
        "description": "If something visits the bald eagle then it is nice."
    },
    {
        "id": 8825,
        "statement": "is(tiger, green) :- visits(tiger, rabbit).",
        "description": "If the tiger visits the rabbit then the tiger is green."
    },
    {
        "id": 8826,
        "statement": "eats(bald_eagle, tiger) :- visits(X, bald_eagle), eats(X, tiger).",
        "description": "If something visits the bald eagle and it eats the tiger then the bald eagle eats the tiger."
    },
    {
        "id": 8827,
        "statement": "is(rabbit, nice) :- chases(cow, rabbit).",
        "description": "If the cow chases the rabbit then the rabbit is nice."
    },
    {
        "id": 8828,
        "statement": "eats(X, tiger) :- is(X, nice).",
        "description": "If something is nice then it eats the tiger."
    },
    {
        "id": 8829,
        "statement": "chases(X, tiger) :- visits(X, cow).",
        "description": "If something visits the cow then it chases the tiger."
    },
    {
        "id": 8830,
        "statement": "visits(tiger, bald_eagle) :- eats(X, tiger).",
        "description": "If something eats the tiger then the tiger visits the bald eagle."
    },
    {
        "id": 8831,
        "statement": "visits(X, rabbit) :- chases(X, rabbit), is(rabbit, green).",
        "description": "If something chases the rabbit and the rabbit is green then it visits the rabbit."
    },
    {
        "id": 8832,
        "statement": "is(bald_eagle, round) :- eats(X, bald_eagle).",
        "description": "If something eats the bald eagle then the bald eagle is round."
    },
    {
        "id": 8833,
        "statement": "is(X, young) :- is(X, kind), is(X, big).",
        "description": "If someone is kind and big then they are young."
    },
    {
        "id": 8834,
        "statement": "is(X, big) :- is(X, blue), is(X, kind).",
        "description": "If someone is blue and kind then they are big."
    },
    {
        "id": 8835,
        "statement": "is(X, cold) :- is(X, white), is(X, blue).",
        "description": "If someone is white and blue then they are cold."
    },
    {
        "id": 8836,
        "statement": "is(X, smart) :- is(X, white), is(X, blue).",
        "description": "All white, blue people are smart."
    },
    {
        "id": 8837,
        "statement": "is(X, white) :- is(X, young), is(X, smart).",
        "description": "All young, smart people are white."
    },
    {
        "id": 8838,
        "statement": "is(X, big) :- is(X, white), is(X, round).",
        "description": "All white, round things are big."
    },
    {
        "id": 8839,
        "statement": "is(X, green) :- is(X, big), is(X, quiet).",
        "description": "All big, quiet things are green."
    },
    {
        "id": 8840,
        "statement": "is(X, quiet) :- is(X, white), is(X, blue).",
        "description": "If something is white and blue then it is quiet."
    },
    {
        "id": 8841,
        "statement": "is(gary, big) :- is(gary, blue).",
        "description": "If Gary is blue then Gary is big."
    },
    {
        "id": 8842,
        "statement": "is(X, nice) :- is(X, young), is(X, rough).",
        "description": "Young, rough people are nice."
    },
    {
        "id": 8843,
        "statement": "is(X, blue) :- is(X, nice), is(X, young).",
        "description": "If someone is nice and young then they are blue."
    },
    {
        "id": 8844,
        "statement": "is(gary, young) :- is(gary, furry).",
        "description": "If Gary is furry then Gary is young."
    },
    {
        "id": 8845,
        "statement": "is(X, kind) :- is(X, round), is(X, rough).",
        "description": "Round, rough people are kind."
    },
    {
        "id": 8846,
        "statement": "likes(X, dog) :- likes(X, bald_eagle), eats(bald_eagle, dog).",
        "description": "If something likes the bald eagle and the bald eagle eats the dog then it likes the dog."
    },
    {
        "id": 8847,
        "statement": "eats(X, bear) :- is(X, green), not is(X, nice).",
        "description": "If something is green and not nice then it eats the bear."
    },
    {
        "id": 8848,
        "statement": "eats(X, bear) :- likes(X, dog).",
        "description": "If something likes the dog then it eats the bear."
    },
    {
        "id": 8849,
        "statement": "chases(X, bald_eagle) :- eats(X, squirrel).",
        "description": "If something eats the squirrel then it chases the bald eagle."
    },
    {
        "id": 8850,
        "statement": "is(dog, rough) :- eats(X, dog).",
        "description": "If something eats the dog then the dog is rough."
    },
    {
        "id": 8851,
        "statement": "is(X, rough) :- likes(X, bald_eagle).",
        "description": "If something likes the bald eagle then it is rough."
    },
    {
        "id": 8852,
        "statement": "eats(bald_eagle, dog) :- chases(X, bald_eagle).",
        "description": "If something chases the bald eagle then the bald eagle eats the dog."
    },
    {
        "id": 8853,
        "statement": "chases(X, bear) :- is(X, green), not is(X, blue).",
        "description": "If something is green and not blue then it chases the bear."
    },
    {
        "id": 8854,
        "statement": "likes(dog, bald_eagle) :- likes(X, dog), not is(dog, green).",
        "description": "If something likes the dog and the dog is not green then the dog likes the bald eagle."
    },
    {
        "id": 8855,
        "statement": "needs(rabbit, dog) :- needs(X, dog), likes(X, rabbit).",
        "description": "If someone needs the dog and they like the rabbit then the rabbit needs the dog."
    },
    {
        "id": 8856,
        "statement": "is(bear, blue) :- likes(bear, rabbit).",
        "description": "If the bear likes the rabbit then the bear is blue."
    },
    {
        "id": 8857,
        "statement": "is(lion, young) :- likes(X, lion), likes(X, rabbit).",
        "description": "If someone likes the lion and they like the rabbit then the lion is young."
    },
    {
        "id": 8858,
        "statement": "needs(bear, dog) :- likes(X, bear), is(X, kind).",
        "description": "If someone likes the bear and they are kind then the bear needs the dog."
    },
    {
        "id": 8859,
        "statement": "likes(bear, dog) :- is(bear, young).",
        "description": "If the bear is young then the bear likes the dog."
    },
    {
        "id": 8860,
        "statement": "likes(X, bear) :- visits(X, lion), needs(X, dog).",
        "description": "If someone visits the lion and they need the dog then they like the bear."
    },
    {
        "id": 8861,
        "statement": "visits(X, lion) :- needs(X, dog).",
        "description": "If someone needs the dog then they visit the lion."
    },
    {
        "id": 8862,
        "statement": "sees(bear, squirrel) :- sees(X, bear).",
        "description": "If someone sees the bear then the bear sees the squirrel."
    },
    {
        "id": 8863,
        "statement": "chases(lion, bear) :- is(X, round), not sees(X, lion).",
        "description": "If someone is round and they do not see the lion then the lion chases the bear."
    },
    {
        "id": 8864,
        "statement": "sees(X, bear) :- is(X, kind).",
        "description": "If someone is kind then they see the bear."
    },
    {
        "id": 8865,
        "statement": "is(dog, round) :- sees(X, dog).",
        "description": "If someone sees the dog then the dog is round."
    },
    {
        "id": 8866,
        "statement": "is(squirrel, young) :- visits(X, dog), not sees(X, squirrel).",
        "description": "If someone visits the dog and they do not see the squirrel then the squirrel is young."
    },
    {
        "id": 8867,
        "statement": "is(gary, furry) :- is(gary, green), is(gary, red).",
        "description": "If Gary is green and Gary is red then Gary is furry."
    },
    {
        "id": 8868,
        "statement": "is(X, kind) :- is(X, furry), is(X, white).",
        "description": "All furry, white things are kind."
    },
    {
        "id": 8869,
        "statement": "is(X, green) :- is(X, white), is(X, red).",
        "description": "All white, red things are green."
    },
    {
        "id": 8870,
        "statement": "is(X, big) :- is(X, young), is(X, red).",
        "description": "All young, red people are big."
    },
    {
        "id": 8871,
        "statement": "is(X, quiet) :- is(X, nice), is(X, big).",
        "description": "If someone is nice and big then they are quiet."
    },
    {
        "id": 8872,
        "statement": "is(X, nice) :- is(X, red), is(X, quiet).",
        "description": "All red, quiet people are nice."
    },
    {
        "id": 8873,
        "statement": "is(X, nice) :- is(X, young), is(X, big).",
        "description": "If someone is young and big then they are nice."
    },
    {
        "id": 8874,
        "statement": "is(X, red) :- is(X, big), is(X, green).",
        "description": "Big, green people are red."
    },
    {
        "id": 8875,
        "statement": "is(X, young) :- is(X, smart), is(X, red).",
        "description": "All smart, red people are young."
    },
    {
        "id": 8876,
        "statement": "is(harry, cold) :- is(harry, rough).",
        "description": "If Harry is rough then Harry is cold."
    },
    {
        "id": 8877,
        "statement": "is(X, cold) :- is(X, green), is(X, rough).",
        "description": "If someone is green and rough then they are cold."
    },
    {
        "id": 8878,
        "statement": "is(fiona, quiet) :- is(fiona, smart).",
        "description": "If Fiona is smart then Fiona is quiet."
    },
    {
        "id": 8879,
        "statement": "is(fiona, kind) :- is(fiona, quiet), is(fiona, blue).",
        "description": "If Fiona is quiet and Fiona is blue then Fiona is kind."
    },
    {
        "id": 8880,
        "statement": "likes(bear, mouse) :- sees(dog, bear).",
        "description": "If the dog sees the bear then the bear likes the mouse."
    },
    {
        "id": 8881,
        "statement": "sees(X, bear) :- likes(X, mouse).",
        "description": "If something likes the mouse then it sees the bear."
    },
    {
        "id": 8882,
        "statement": "sees(mouse, bear) :- needs(X, mouse).",
        "description": "If something needs the mouse then the mouse sees the bear."
    },
    {
        "id": 8883,
        "statement": "needs(bear, mouse) :- needs(X, bear), is(bear, round).",
        "description": "If something needs the bear and the bear is round then the bear needs the mouse."
    },
    {
        "id": 8884,
        "statement": "likes(X, dog) :- sees(X, bear).",
        "description": "If something sees the bear then it likes the dog."
    },
    {
        "id": 8885,
        "statement": "is(dog, young) :- likes(X, dog), sees(dog, bear).",
        "description": "If something likes the dog and the dog sees the bear then the dog is young."
    },
    {
        "id": 8886,
        "statement": "needs(X, dog) :- sees(X, cow), likes(X, cow).",
        "description": "If something sees the cow and it likes the cow then it needs the dog."
    },
    {
        "id": 8887,
        "statement": "is(X, round) :- likes(X, dog), sees(dog, bear).",
        "description": "If something likes the dog and the dog sees the bear then it is round."
    },
    {
        "id": 8888,
        "statement": "is(bald_eagle, big) :- visits(X, tiger), chases(tiger, bald_eagle).",
        "description": "If someone visits the tiger and the tiger chases the bald eagle then the bald eagle is big."
    },
    {
        "id": 8889,
        "statement": "visits(rabbit, tiger) :- chases(X, rabbit).",
        "description": "If someone chases the rabbit then the rabbit visits the tiger."
    },
    {
        "id": 8890,
        "statement": "chases(X, bald_eagle) :- is(X, green), is(X, big).",
        "description": "If someone is green and big then they chase the bald eagle."
    },
    {
        "id": 8891,
        "statement": "needs(X, bald_eagle) :- needs(X, rabbit).",
        "description": "If someone needs the rabbit then they need the bald eagle."
    },
    {
        "id": 8892,
        "statement": "needs(X, dog) :- visits(X, rabbit).",
        "description": "If someone visits the rabbit then they need the dog."
    },
    {
        "id": 8893,
        "statement": "is(tiger, big) :- chases(X, tiger).",
        "description": "If someone chases the tiger then the tiger is big."
    },
    {
        "id": 8894,
        "statement": "chases(X, tiger) :- visits(X, rabbit).",
        "description": "If someone visits the rabbit then they chase the tiger."
    },
    {
        "id": 8895,
        "statement": "is(X, furry) :- is(X, nice), is(X, cold).",
        "description": "If someone is nice and cold then they are furry."
    },
    {
        "id": 8896,
        "statement": "is(X, cold) :- is(X, nice), is(X, big).",
        "description": "Nice, big people are cold."
    },
    {
        "id": 8897,
        "statement": "is(X, kind) :- is(X, blue), is(X, nice).",
        "description": "If someone is blue and nice then they are kind."
    },
    {
        "id": 8898,
        "statement": "needs(dog, lion) :- eats(dog, rabbit), eats(rabbit, cow).",
        "description": "If the dog eats the rabbit and the rabbit eats the cow then the dog needs the lion."
    },
    {
        "id": 8899,
        "statement": "likes(X, lion) :- is(X, big), is(X, cold).",
        "description": "If something is big and cold then it likes the lion."
    },
    {
        "id": 8900,
        "statement": "eats(dog, lion) :- needs(rabbit, lion), eats(rabbit, dog).",
        "description": "If the rabbit needs the lion and the rabbit eats the dog then the dog eats the lion."
    },
    {
        "id": 8901,
        "statement": "likes(X, dog) :- is(X, young), is(X, cold).",
        "description": "If something is young and cold then it likes the dog."
    },
    {
        "id": 8902,
        "statement": "is(X, round) :- eats(X, lion).",
        "description": "If something eats the lion then it is round."
    },
    {
        "id": 8903,
        "statement": "needs(rabbit, lion) :- is(X, nice), needs(X, rabbit).",
        "description": "If something is nice and it needs the rabbit then the rabbit needs the lion."
    },
    {
        "id": 8904,
        "statement": "needs(cow, dog) :- eats(X, dog), needs(dog, cow).",
        "description": "If something eats the dog and the dog needs the cow then the cow needs the dog."
    },
    {
        "id": 8905,
        "statement": "visits(mouse, bald_eagle) :- is(mouse, red).",
        "description": "If the mouse is red then the mouse visits the bald eagle."
    },
    {
        "id": 8906,
        "statement": "chases(rabbit, mouse) :- is(X, red), sees(X, rabbit).",
        "description": "If someone is red and they see the rabbit then the rabbit chases the mouse."
    },
    {
        "id": 8907,
        "statement": "is(X, blue) :- sees(X, squirrel).",
        "description": "If someone sees the squirrel then they are blue."
    },
    {
        "id": 8908,
        "statement": "chases(rabbit, mouse) :- chases(X, rabbit).",
        "description": "If someone chases the rabbit then the rabbit chases the mouse."
    },
    {
        "id": 8909,
        "statement": "is(X, green) :- chases(X, mouse), is(X, blue).",
        "description": "If someone chases the mouse and they are blue then they are green."
    },
    {
        "id": 8910,
        "statement": "chases(bald_eagle, mouse) :- sees(X, bald_eagle).",
        "description": "If someone sees the bald eagle then the bald eagle chases the mouse."
    },
    {
        "id": 8911,
        "statement": "chases(X, squirrel) :- is(X, blue), is(X, green).",
        "description": "If someone is blue and green then they chase the squirrel."
    },
    {
        "id": 8912,
        "statement": "visits(squirrel, rabbit) :- is(X, round), chases(X, squirrel).",
        "description": "If someone is round and they chase the squirrel then the squirrel visits the rabbit."
    },
    {
        "id": 8913,
        "statement": "sees(squirrel, mouse) :- visits(X, rabbit), visits(rabbit, squirrel).",
        "description": "If someone visits the rabbit and the rabbit visits the squirrel then the squirrel sees the mouse."
    },
    {
        "id": 8914,
        "statement": "is(harry, nice) :- not is(harry, big), not is(harry, kind).",
        "description": "If Harry is not big and Harry is not kind then Harry is nice."
    },
    {
        "id": 8915,
        "statement": "is(X, young) :- is(X, smart), is(X, cold).",
        "description": "If someone is smart and cold then they are young."
    },
    {
        "id": 8916,
        "statement": "is(fiona, smart) :- is(fiona, quiet).",
        "description": "If Fiona is quiet then Fiona is smart."
    },
    {
        "id": 8917,
        "statement": "is(X, nice) :- is(X, big), not is(X, kind).",
        "description": "If someone is big and not kind then they are nice."
    },
    {
        "id": 8918,
        "statement": "visits(X, cat) :- sees(X, cow).",
        "description": "If someone sees the cow then they visit the cat."
    },
    {
        "id": 8919,
        "statement": "needs(X, mouse) :- is(X, rough).",
        "description": "If someone is rough then they need the mouse."
    },
    {
        "id": 8920,
        "statement": "sees(mouse, bear) :- needs(X, mouse), needs(X, bear).",
        "description": "If someone needs the mouse and they need the bear then the mouse sees the bear."
    },
    {
        "id": 8921,
        "statement": "sees(X, cow) :- visits(X, bear).",
        "description": "If someone visits the bear then they see the cow."
    },
    {
        "id": 8922,
        "statement": "is(cow, red) :- visits(X, cow), is(X, nice).",
        "description": "If someone visits the cow and they are nice then the cow is red."
    },
    {
        "id": 8923,
        "statement": "needs(mouse, bear) :- visits(X, mouse), needs(X, bear).",
        "description": "If someone visits the mouse and they need the bear then the mouse needs the bear."
    },
    {
        "id": 8924,
        "statement": "visits(cat, mouse) :- visits(X, cat), visits(X, bear).",
        "description": "If someone visits the cat and they visit the bear then the cat visits the mouse."
    },
    {
        "id": 8925,
        "statement": "is(X, rough) :- visits(X, mouse), is(mouse, young).",
        "description": "If someone visits the mouse and the mouse is young then they are rough."
    },
    {
        "id": 8926,
        "statement": "is(X, young) :- visits(X, bear).",
        "description": "If someone visits the bear then they are young."
    },
    {
        "id": 8927,
        "statement": "is(harry, big) :- not is(harry, red).",
        "description": "If Harry is not red then Harry is big."
    },
    {
        "id": 8928,
        "statement": "is(X, nice) :- is(X, quiet), is(X, cold).",
        "description": "All quiet, cold things are nice."
    },
    {
        "id": 8929,
        "statement": "is(X, cold) :- is(X, kind), is(X, big).",
        "description": "If something is kind and big then it is cold."
    },
    {
        "id": 8930,
        "statement": "is(X, kind) :- is(X, smart), is(X, big).",
        "description": "Smart, big things are kind."
    },
    {
        "id": 8931,
        "statement": "is(X, nice) :- sees(X, bald_eagle), likes(X, cat).",
        "description": "If someone sees the bald eagle and they like the cat then they are nice."
    },
    {
        "id": 8932,
        "statement": "is(X, big) :- sees(X, bald_eagle).",
        "description": "If someone sees the bald eagle then they are big."
    },
    {
        "id": 8933,
        "statement": "sees(X, bald_eagle) :- likes(X, dog).",
        "description": "If someone likes the dog then they see the bald eagle."
    },
    {
        "id": 8934,
        "statement": "sees(X, dog) :- is(X, nice).",
        "description": "If someone is nice then they see the dog."
    },
    {
        "id": 8935,
        "statement": "likes(bald_eagle, dog) :- is(X, nice), chases(X, bald_eagle).",
        "description": "If someone is nice and they chase the bald eagle then the bald eagle likes the dog."
    },
    {
        "id": 8936,
        "statement": "chases(X, bald_eagle) :- sees(X, cat), is(X, nice).",
        "description": "If someone sees the cat and they are nice then they chase the bald eagle."
    },
    {
        "id": 8937,
        "statement": "sees(dog, cat) :- is(X, blue), sees(X, dog).",
        "description": "If someone is blue and they see the dog then the dog sees the cat."
    },
    {
        "id": 8938,
        "statement": "likes(X, dog) :- sees(X, dog).",
        "description": "If someone sees the dog then they like the dog."
    },
    {
        "id": 8939,
        "statement": "sees(cat, squirrel) :- likes(squirrel, cat), is(squirrel, rough).",
        "description": "If the squirrel likes the cat and the squirrel is rough then the cat sees the squirrel."
    },
    {
        "id": 8940,
        "statement": "is(gary, cold) :- is(gary, blue), is(gary, nice).",
        "description": "If Gary is blue and Gary is nice then Gary is cold."
    },
    {
        "id": 8941,
        "statement": "is(X, round) :- is(X, green), not is(X, blue).",
        "description": "If someone is green and not blue then they are round."
    },
    {
        "id": 8942,
        "statement": "is(charlie, round) :- is(charlie, nice).",
        "description": "If Charlie is nice then Charlie is round."
    },
    {
        "id": 8943,
        "statement": "is(X, kind) :- is(X, blue), not is(X, nice).",
        "description": "If someone is blue and not nice then they are kind."
    },
    {
        "id": 8944,
        "statement": "is(X, cold) :- is(X, kind), is(X, nice).",
        "description": "If someone is kind and nice then they are cold."
    },
    {
        "id": 8945,
        "statement": "is(X, young) :- is(X, kind), is(X, big).",
        "description": "Kind, big things are young."
    },
    {
        "id": 8946,
        "statement": "is(charlie, smart) :- is(charlie, rough).",
        "description": "If Charlie is rough then Charlie is smart."
    },
    {
        "id": 8947,
        "statement": "is(X, smart) :- is(X, young), not is(X, rough).",
        "description": "If something is young and not rough then it is smart."
    },
    {
        "id": 8948,
        "statement": "is(charlie, kind) :- is(charlie, red).",
        "description": "If Charlie is red then Charlie is kind."
    },
    {
        "id": 8949,
        "statement": "is(X, kind) :- is(X, nice), is(X, cold).",
        "description": "All nice, cold people are kind."
    },
    {
        "id": 8950,
        "statement": "is(gary, nice) :- is(gary, furry).",
        "description": "If Gary is furry then Gary is nice."
    },
    {
        "id": 8951,
        "statement": "is(dave, cold) :- is(dave, kind), is(dave, nice).",
        "description": "If Dave is kind and Dave is nice then Dave is cold."
    },
    {
        "id": 8952,
        "statement": "is(X, green) :- is(X, red), is(X, young).",
        "description": "If someone is red and young then they are green."
    },
    {
        "id": 8953,
        "statement": "is(X, cold) :- is(X, green), is(X, furry).",
        "description": "Green, furry people are cold."
    },
    {
        "id": 8954,
        "statement": "is(dave, furry) :- is(dave, white), is(dave, kind).",
        "description": "If Dave is white and Dave is kind then Dave is furry."
    },
    {
        "id": 8955,
        "statement": "is(charlie, nice) :- is(charlie, big).",
        "description": "If Charlie is big then Charlie is nice."
    },
    {
        "id": 8956,
        "statement": "is(X, big) :- is(X, white), is(X, kind).",
        "description": "All white, kind people are big."
    },
    {
        "id": 8957,
        "statement": "is(X, blue) :- is(X, cold), is(X, young).",
        "description": "If someone is cold and young then they are blue."
    },
    {
        "id": 8958,
        "statement": "is(X, green) :- is(X, blue), is(X, cold).",
        "description": "If someone is blue and cold then they are green."
    },
    {
        "id": 8959,
        "statement": "is(X, young) :- is(X, big), is(X, cold).",
        "description": "All big, cold people are young."
    },
    {
        "id": 8960,
        "statement": "is(X, red) :- is(X, blue), is(X, young).",
        "description": "If someone is blue and young then they are red."
    },
    {
        "id": 8961,
        "statement": "needs(X, bear) :- needs(X, rabbit).",
        "description": "If someone needs the rabbit then they need the bear."
    },
    {
        "id": 8962,
        "statement": "eats(X, squirrel) :- sees(X, rabbit).",
        "description": "If someone sees the rabbit then they eat the squirrel."
    },
    {
        "id": 8963,
        "statement": "eats(X, squirrel) :- eats(X, rabbit).",
        "description": "If someone eats the rabbit then they eat the squirrel."
    },
    {
        "id": 8964,
        "statement": "needs(X, rabbit) :- eats(X, bear), eats(X, squirrel).",
        "description": "If someone eats the bear and they eat the squirrel then they need the rabbit."
    },
    {
        "id": 8965,
        "statement": "is(squirrel, round) :- sees(X, squirrel).",
        "description": "If someone sees the squirrel then the squirrel is round."
    },
    {
        "id": 8966,
        "statement": "sees(X, squirrel) :- sees(X, rabbit), is(rabbit, green).",
        "description": "If someone sees the rabbit and the rabbit is green then they see the squirrel."
    },
    {
        "id": 8967,
        "statement": "is(X, cold) :- is(X, kind), needs(X, cow).",
        "description": "If someone is kind and they need the cow then they are cold."
    },
    {
        "id": 8968,
        "statement": "sees(bear, rabbit) :- eats(X, bear), is(X, nice).",
        "description": "If someone eats the bear and they are nice then the bear sees the rabbit."
    },
    {
        "id": 8969,
        "statement": "likes(X, cow) :- likes(X, cat).",
        "description": "If someone likes the cat then they like the cow."
    },
    {
        "id": 8970,
        "statement": "likes(cow, squirrel) :- visits(bald_eagle, cow), visits(cow, bald_eagle).",
        "description": "If the bald eagle visits the cow and the cow visits the bald eagle then the cow likes the squirrel."
    },
    {
        "id": 8971,
        "statement": "likes(X, cat) :- visits(X, bald_eagle), not is(bald_eagle, round).",
        "description": "If someone visits the bald eagle and the bald eagle is not round then they like the cat."
    },
    {
        "id": 8972,
        "statement": "visits(cow, bald_eagle) :- likes(X, cow).",
        "description": "If someone likes the cow then the cow visits the bald eagle."
    },
    {
        "id": 8973,
        "statement": "visits(squirrel, cat) :- not is(squirrel, young), not likes(squirrel, bald_eagle).",
        "description": "If the squirrel is not young and the squirrel does not like the bald eagle then the squirrel visits the cat."
    },
    {
        "id": 8974,
        "statement": "is(X, blue) :- needs(X, cat).",
        "description": "If someone needs the cat then they are blue."
    },
    {
        "id": 8975,
        "statement": "needs(bald_eagle, squirrel) :- needs(cow, cat), visits(cat, bald_eagle).",
        "description": "If the cow needs the cat and the cat visits the bald eagle then the bald eagle needs the squirrel."
    },
    {
        "id": 8976,
        "statement": "is(X, nice) :- is(X, big), is(X, furry).",
        "description": "If someone is big and furry then they are nice."
    },
    {
        "id": 8977,
        "statement": "is(X, cold) :- is(X, young), is(X, nice).",
        "description": "All young, nice people are cold."
    },
    {
        "id": 8978,
        "statement": "is(X, green) :- is(X, rough), is(X, young).",
        "description": "All rough, young people are green."
    },
    {
        "id": 8979,
        "statement": "is(X, green) :- is(X, nice), is(X, young).",
        "description": "All nice, young people are green."
    },
    {
        "id": 8980,
        "statement": "is(X, rough) :- is(X, big), is(X, furry).",
        "description": "All big, furry things are rough."
    },
    {
        "id": 8981,
        "statement": "is(X, round) :- is(X, white), is(X, blue).",
        "description": "All white, blue things are round."
    },
    {
        "id": 8982,
        "statement": "is(X, blue) :- is(X, rough), is(X, quiet).",
        "description": "All rough, quiet things are blue."
    },
    {
        "id": 8983,
        "statement": "is(charlie, rough) :- is(charlie, white), is(charlie, round).",
        "description": "If Charlie is white and Charlie is round then Charlie is rough."
    },
    {
        "id": 8984,
        "statement": "is(X, kind) :- is(X, furry), is(X, nice).",
        "description": "If something is furry and nice then it is kind."
    },
    {
        "id": 8985,
        "statement": "is(X, green) :- is(X, young).",
        "description": "All young things are green."
    },
    {
        "id": 8986,
        "statement": "is(X, kind) :- is(X, green), is(X, young).",
        "description": "All green, young things are kind."
    },
    {
        "id": 8987,
        "statement": "is(X, rough) :- is(X, red), is(X, kind).",
        "description": "If something is red and kind then it is rough."
    },
    {
        "id": 8988,
        "statement": "is(dave, cold) :- is(dave, rough), is(dave, nice).",
        "description": "If Dave is rough and Dave is nice then Dave is cold."
    },
    {
        "id": 8989,
        "statement": "is(harry, cold) :- is(harry, nice).",
        "description": "If Harry is nice then Harry is cold."
    },
    {
        "id": 8990,
        "statement": "is(X, red) :- is(X, blue).",
        "description": "If someone is blue then they are red."
    },
    {
        "id": 8991,
        "statement": "is(X, nice) :- is(X, big), is(X, red).",
        "description": "If someone is big and red then they are nice."
    },
    {
        "id": 8992,
        "statement": "eats(X, rabbit) :- is(X, big).",
        "description": "If something is big then it eats the rabbit."
    },
    {
        "id": 8993,
        "statement": "chases(cow, mouse) :- is(cow, young).",
        "description": "If the cow is young then the cow chases the mouse."
    },
    {
        "id": 8994,
        "statement": "eats(mouse, squirrel) :- eats(X, mouse), is(X, blue).",
        "description": "If something eats the mouse and it is blue then the mouse eats the squirrel."
    },
    {
        "id": 8995,
        "statement": "is(rabbit, young) :- eats(X, rabbit).",
        "description": "If something eats the rabbit then the rabbit is young."
    },
    {
        "id": 8996,
        "statement": "eats(rabbit, mouse) :- eats(X, rabbit).",
        "description": "If something eats the rabbit then the rabbit eats the mouse."
    },
    {
        "id": 8997,
        "statement": "needs(X, mouse) :- eats(X, squirrel).",
        "description": "If something eats the squirrel then it needs the mouse."
    },
    {
        "id": 8998,
        "statement": "eats(cow, squirrel) :- needs(mouse, cow).",
        "description": "If the mouse needs the cow then the cow eats the squirrel."
    },
    {
        "id": 8999,
        "statement": "likes(cow, dog) :- is(X, nice), chases(X, cow).",
        "description": "If something is nice and it chases the cow then the cow likes the dog."
    },
    {
        "id": 9000,
        "statement": "sees(X, cow) :- sees(X, dog), is(dog, green).",
        "description": "If something sees the dog and the dog is green then it sees the cow."
    },
    {
        "id": 9001,
        "statement": "chases(tiger, cow) :- likes(mouse, tiger).",
        "description": "If the mouse likes the tiger then the tiger chases the cow."
    },
    {
        "id": 9002,
        "statement": "is(cow, green) :- chases(tiger, cow).",
        "description": "If the tiger chases the cow then the cow is green."
    },
    {
        "id": 9003,
        "statement": "chases(X, dog) :- is(X, green).",
        "description": "If something is green then it chases the dog."
    },
    {
        "id": 9004,
        "statement": "is(X, cold) :- chases(X, dog).",
        "description": "If something chases the dog then it is cold."
    },
    {
        "id": 9005,
        "statement": "is(mouse, round) :- sees(X, mouse).",
        "description": "If something sees the mouse then the mouse is round."
    },
    {
        "id": 9006,
        "statement": "is(X, nice) :- is(X, cold), sees(X, tiger).",
        "description": "If something is cold and it sees the tiger then it is nice."
    },
    {
        "id": 9007,
        "statement": "likes(mouse, cow) :- sees(X, mouse), sees(mouse, tiger).",
        "description": "If something sees the mouse and the mouse sees the tiger then the mouse likes the cow."
    },
    {
        "id": 9008,
        "statement": "is(X, cold) :- is(X, red), is(X, smart).",
        "description": "If something is red and smart then it is cold."
    },
    {
        "id": 9009,
        "statement": "is(X, red) :- is(X, green), is(X, big).",
        "description": "All green, big things are red."
    },
    {
        "id": 9010,
        "statement": "is(X, cold) :- is(X, big), is(X, blue).",
        "description": "If something is big and blue then it is cold."
    },
    {
        "id": 9011,
        "statement": "is(X, red) :- is(X, blue), is(X, green).",
        "description": "All blue, green things are red."
    },
    {
        "id": 9012,
        "statement": "is(anne, green) :- is(anne, smart), is(anne, cold).",
        "description": "If Anne is smart and Anne is cold then Anne is green."
    },
    {
        "id": 9013,
        "statement": "is(X, smart) :- is(X, red), is(X, blue).",
        "description": "If something is red and blue then it is smart."
    },
    {
        "id": 9014,
        "statement": "eats(tiger, dog).",
        "description": "The tiger eats the dog."
    },
    {
        "id": 9015,
        "statement": "needs(X, dog) :- eats(X, squirrel), is(X, rough).",
        "description": "If someone eats the squirrel and they are rough then they need the dog."
    },
    {
        "id": 9016,
        "statement": "is(X, rough) :- is(X, nice), is(X, round).",
        "description": "All nice, round people are rough."
    },
    {
        "id": 9017,
        "statement": "likes(bear, tiger) :- likes(X, bear), not eats(bear, dog).",
        "description": "If someone likes the bear and the bear does not eat the dog then the bear likes the tiger."
    },
    {
        "id": 9018,
        "statement": "is(X, young) :- likes(X, tiger), is(tiger, rough).",
        "description": "If someone likes the tiger and the tiger is rough then they are young."
    },
    {
        "id": 9019,
        "statement": "needs(squirrel, bear) :- likes(X, squirrel), likes(X, dog).",
        "description": "If someone likes the squirrel and they like the dog then the squirrel needs the bear."
    },
    {
        "id": 9020,
        "statement": "needs(dog, tiger) :- needs(tiger, dog), not needs(tiger, bear).",
        "description": "If the tiger needs the dog and the tiger does not need the bear then the dog needs the tiger."
    },
    {
        "id": 9021,
        "statement": "is(X, round) :- likes(X, bear).",
        "description": "If someone likes the bear then they are round."
    },
    {
        "id": 9022,
        "statement": "is(X, kind) :- is(X, round), is(X, red).",
        "description": "If something is round and red then it is kind."
    },
    {
        "id": 9023,
        "statement": "is(X, nice) :- is(X, white), is(X, round).",
        "description": "All white, round things are nice."
    },
    {
        "id": 9024,
        "statement": "is(X, red) :- is(X, kind), is(X, furry).",
        "description": "All kind, furry things are red."
    },
    {
        "id": 9025,
        "statement": "is(X, round) :- is(X, blue), is(X, nice).",
        "description": "If something is blue and nice then it is round."
    },
    {
        "id": 9026,
        "statement": "is(X, furry) :- is(X, kind), is(X, white).",
        "description": "All kind, white things are furry."
    },
    {
        "id": 9027,
        "statement": "chases(cat, tiger) :- likes(X, cat).",
        "description": "If something likes the cat then the cat chases the tiger."
    },
    {
        "id": 9028,
        "statement": "is(tiger, round) :- chases(X, bald_eagle), likes(bald_eagle, tiger).",
        "description": "If something chases the bald eagle and the bald eagle likes the tiger then the tiger is round."
    },
    {
        "id": 9029,
        "statement": "chases(bald_eagle, cat) :- visits(X, bald_eagle).",
        "description": "If something visits the bald eagle then the bald eagle chases the cat."
    },
    {
        "id": 9030,
        "statement": "is(X, green) :- likes(X, cat), is(X, cold).",
        "description": "If something likes the cat and it is cold then it is green."
    },
    {
        "id": 9031,
        "statement": "is(X, green) :- chases(X, cat), likes(cat, squirrel).",
        "description": "If something chases the cat and the cat likes the squirrel then it is green."
    },
    {
        "id": 9032,
        "statement": "chases(bald_eagle, tiger) :- chases(X, bald_eagle).",
        "description": "If something chases the bald eagle then the bald eagle chases the tiger."
    },
    {
        "id": 9033,
        "statement": "visits(X, bald_eagle) :- is(X, kind), is(X, green).",
        "description": "If something is kind and green then it visits the bald eagle."
    },
    {
        "id": 9034,
        "statement": "is(X, nice) :- is(X, round), is(X, smart).",
        "description": "Round, smart people are nice."
    },
    {
        "id": 9035,
        "statement": "is(erin, round) :- is(erin, big), is(erin, nice).",
        "description": "If Erin is big and Erin is nice then Erin is round."
    },
    {
        "id": 9036,
        "statement": "is(X, green) :- is(X, furry), is(X, nice).",
        "description": "If someone is furry and nice then they are green."
    },
    {
        "id": 9037,
        "statement": "is(gary, young) :- is(gary, smart), is(gary, rough).",
        "description": "If Gary is smart and Gary is rough then Gary is young."
    },
    {
        "id": 9038,
        "statement": "is(X, round) :- is(X, young).",
        "description": "All young things are round."
    },
    {
        "id": 9039,
        "statement": "is(X, nice) :- is(X, blue), is(X, round).",
        "description": "If something is blue and round then it is nice."
    },
    {
        "id": 9040,
        "statement": "is(X, young) :- is(X, rough), is(X, round).",
        "description": "Rough, round things are young."
    },
    {
        "id": 9041,
        "statement": "is(X, smart) :- is(X, round).",
        "description": "If something is round then it is smart."
    },
    {
        "id": 9042,
        "statement": "is(erin, young) :- is(erin, smart), is(erin, blue).",
        "description": "If Erin is smart and Erin is blue then Erin is young."
    },
    {
        "id": 9043,
        "statement": "needs(X, rabbit) :- likes(X, rabbit).",
        "description": "If something likes the rabbit then it needs the rabbit."
    },
    {
        "id": 9044,
        "statement": "likes(X, rabbit) :- likes(X, lion), chases(lion, squirrel).",
        "description": "If something likes the lion and the lion chases the squirrel then it likes the rabbit."
    },
    {
        "id": 9045,
        "statement": "likes(rabbit, squirrel) :- needs(X, rabbit).",
        "description": "If something needs the rabbit then the rabbit likes the squirrel."
    },
    {
        "id": 9046,
        "statement": "is(rabbit, nice) :- needs(X, lion), chases(X, rabbit).",
        "description": "If something needs the lion and it chases the rabbit then the rabbit is nice."
    },
    {
        "id": 9047,
        "statement": "chases(mouse, squirrel) :- is(X, nice), likes(X, mouse).",
        "description": "If something is nice and it likes the mouse then the mouse chases the squirrel."
    },
    {
        "id": 9048,
        "statement": "needs(rabbit, mouse) :- chases(X, lion), needs(X, rabbit).",
        "description": "If something chases the lion and it needs the rabbit then the rabbit needs the mouse."
    },
    {
        "id": 9049,
        "statement": "likes(X, lion) :- is(X, blue).",
        "description": "If something is blue then it likes the lion."
    },
    {
        "id": 9050,
        "statement": "eats(X, bald_eagle) :- eats(X, mouse).",
        "description": "If someone eats the mouse then they eat the bald eagle."
    },
    {
        "id": 9051,
        "statement": "eats(X, bald_eagle) :- is(X, cold).",
        "description": "If someone is cold then they eat the bald eagle."
    },
    {
        "id": 9052,
        "statement": "likes(bald_eagle, rabbit) :- needs(rabbit, squirrel), eats(squirrel, bald_eagle).",
        "description": "If the rabbit needs the squirrel and the squirrel eats the bald eagle then the bald eagle likes the rabbit."
    },
    {
        "id": 9053,
        "statement": "needs(squirrel, bald_eagle) :- eats(X, mouse), likes(X, squirrel).",
        "description": "If someone eats the mouse and they like the squirrel then the squirrel needs the bald eagle."
    },
    {
        "id": 9054,
        "statement": "needs(squirrel, bald_eagle) :- needs(mouse, squirrel).",
        "description": "If the mouse needs the squirrel then the squirrel needs the bald eagle."
    },
    {
        "id": 9055,
        "statement": "likes(X, bald_eagle) :- likes(X, rabbit).",
        "description": "If someone likes the rabbit then they like the bald eagle."
    },
    {
        "id": 9056,
        "statement": "is(bald_eagle, round) :- likes(X, bald_eagle), is(X, blue).",
        "description": "If someone likes the bald eagle and they are blue then the bald eagle is round."
    },
    {
        "id": 9057,
        "statement": "chases(X, bald_eagle) :- is(X, big).",
        "description": "If something is big then it chases the bald eagle."
    },
    {
        "id": 9058,
        "statement": "is(X, kind) :- visits(X, cow), likes(X, squirrel).",
        "description": "If something visits the cow and it likes the squirrel then it is kind."
    },
    {
        "id": 9059,
        "statement": "is(cow, kind) :- likes(cow, bald_eagle), is(cow, green).",
        "description": "If the cow likes the bald eagle and the cow is green then the cow is kind."
    },
    {
        "id": 9060,
        "statement": "likes(cow, rabbit) :- is(X, green), likes(X, cow).",
        "description": "If something is green and it likes the cow then the cow likes the rabbit."
    },
    {
        "id": 9061,
        "statement": "is(bald_eagle, young) :- chases(rabbit, bald_eagle).",
        "description": "If the rabbit chases the bald eagle then the bald eagle is young."
    },
    {
        "id": 9062,
        "statement": "is(X, quiet) :- is(X, red), is(X, cold).",
        "description": "All red, cold things are quiet."
    },
    {
        "id": 9063,
        "statement": "is(X, red) :- is(X, big), is(X, rough).",
        "description": "All big, rough things are red."
    },
    {
        "id": 9064,
        "statement": "is(anne, big) :- is(anne, rough).",
        "description": "If Anne is rough then Anne is big."
    },
    {
        "id": 9065,
        "statement": "is(X, red) :- likes(X, lion), not likes(X, bear).",
        "description": "If someone likes the lion and they do not like the bear then they are red."
    },
    {
        "id": 9066,
        "statement": "is(X, red) :- is(X, kind), chases(X, bear).",
        "description": "If someone is kind and they chase the bear then they are red."
    },
    {
        "id": 9067,
        "statement": "is(dog, big) :- needs(dog, lion), is(lion, kind).",
        "description": "If the dog needs the lion and the lion is kind then the dog is big."
    },
    {
        "id": 9068,
        "statement": "needs(X, lion) :- chases(X, dog), not needs(X, mouse).",
        "description": "If someone chases the dog and they do not need the mouse then they need the lion."
    },
    {
        "id": 9069,
        "statement": "likes(lion, mouse) :- is(X, kind), needs(X, lion).",
        "description": "If someone is kind and they need the lion then the lion likes the mouse."
    },
    {
        "id": 9070,
        "statement": "likes(X, lion) :- chases(X, dog).",
        "description": "If someone chases the dog then they like the lion."
    },
    {
        "id": 9071,
        "statement": "likes(bear, lion) :- is(X, big), likes(X, bear).",
        "description": "If someone is big and they like the bear then the bear likes the lion."
    },
    {
        "id": 9072,
        "statement": "is(X, quiet) :- is(X, kind), is(X, young).",
        "description": "All kind, young people are quiet."
    },
    {
        "id": 9073,
        "statement": "is(X, nice) :- is(X, kind), is(X, quiet).",
        "description": "All kind, quiet people are nice."
    },
    {
        "id": 9074,
        "statement": "is(X, nice) :- is(X, quiet), is(X, young).",
        "description": "Quiet, young people are nice."
    },
    {
        "id": 9075,
        "statement": "is(X, green) :- is(X, kind), not is(X, young).",
        "description": "If someone is kind and not young then they are green."
    },
    {
        "id": 9076,
        "statement": "sees(tiger, cat) :- sees(X, squirrel), likes(squirrel, tiger).",
        "description": "If something sees the squirrel and the squirrel likes the tiger then the tiger sees the cat."
    },
    {
        "id": 9077,
        "statement": "eats(cat, squirrel) :- is(cat, green).",
        "description": "If the cat is green then the cat eats the squirrel."
    },
    {
        "id": 9078,
        "statement": "is(squirrel, cold) :- eats(X, squirrel), likes(X, squirrel).",
        "description": "If something eats the squirrel and it likes the squirrel then the squirrel is cold."
    },
    {
        "id": 9079,
        "statement": "sees(tiger, squirrel) :- is(X, kind), eats(X, tiger).",
        "description": "If something is kind and it eats the tiger then the tiger sees the squirrel."
    },
    {
        "id": 9080,
        "statement": "sees(squirrel, tiger) :- eats(X, squirrel).",
        "description": "If something eats the squirrel then the squirrel sees the tiger."
    },
    {
        "id": 9081,
        "statement": "likes(squirrel, tiger) :- sees(tiger, squirrel).",
        "description": "If the tiger sees the squirrel then the squirrel likes the tiger."
    },
    {
        "id": 9082,
        "statement": "is(squirrel, kind) :- is(squirrel, cold), eats(squirrel, tiger).",
        "description": "If the squirrel is cold and the squirrel eats the tiger then the squirrel is kind."
    },
    {
        "id": 9083,
        "statement": "is(tiger, green) :- sees(cat, tiger).",
        "description": "If the cat sees the tiger then the tiger is green."
    },
    {
        "id": 9084,
        "statement": "is(fiona, nice) :- is(fiona, big), is(fiona, furry).",
        "description": "If Fiona is big and Fiona is furry then Fiona is nice."
    },
    {
        "id": 9085,
        "statement": "is(fiona, furry) :- is(fiona, kind), is(fiona, nice).",
        "description": "If Fiona is kind and Fiona is nice then Fiona is furry."
    },
    {
        "id": 9086,
        "statement": "is(X, kind) :- is(X, green), is(X, blue).",
        "description": "If someone is green and blue then they are kind."
    },
    {
        "id": 9087,
        "statement": "is(bob, kind) :- is(bob, smart), is(bob, cold).",
        "description": "If Bob is smart and Bob is cold then Bob is kind."
    },
    {
        "id": 9088,
        "statement": "is(X, smart) :- is(X, furry), is(X, cold).",
        "description": "All furry, cold things are smart."
    },
    {
        "id": 9089,
        "statement": "is(X, kind) :- is(X, furry), is(X, cold).",
        "description": "Furry, cold things are kind."
    },
    {
        "id": 9090,
        "statement": "eats(cat, bald_eagle) :- visits(X, cat).",
        "description": "If something visits the cat then the cat eats the bald eagle."
    },
    {
        "id": 9091,
        "statement": "eats(X, bear) :- is(X, blue), is(X, green).",
        "description": "If something is blue and green then it eats the bear."
    },
    {
        "id": 9092,
        "statement": "is(rabbit, green) :- visits(X, rabbit).",
        "description": "If something visits the rabbit then the rabbit is green."
    },
    {
        "id": 9093,
        "statement": "is(X, young) :- is(X, blue), eats(X, bear).",
        "description": "If something is blue and it eats the bear then it is young."
    },
    {
        "id": 9094,
        "statement": "is(X, big) :- is(X, green), sees(X, bear).",
        "description": "If something is green and it sees the bear then it is big."
    },
    {
        "id": 9095,
        "statement": "visits(X, bear) :- is(X, nice), eats(X, cat).",
        "description": "If something is nice and it eats the cat then it visits the bear."
    },
    {
        "id": 9096,
        "statement": "chases(X, cow) :- likes(X, tiger), chases(tiger, rabbit).",
        "description": "If something likes the tiger and the tiger chases the rabbit then it chases the cow."
    },
    {
        "id": 9097,
        "statement": "visits(X, tiger) :- is(X, kind).",
        "description": "If something is kind then it visits the tiger."
    },
    {
        "id": 9098,
        "statement": "likes(X, cow) :- chases(X, cow), is(cow, cold).",
        "description": "If something chases the cow and the cow is cold then it likes the cow."
    },
    {
        "id": 9099,
        "statement": "likes(X, tiger) :- visits(X, bear).",
        "description": "If something visits the bear then it likes the tiger."
    },
    {
        "id": 9100,
        "statement": "chases(X, rabbit) :- likes(X, tiger).",
        "description": "If something likes the tiger then it chases the rabbit."
    },
    {
        "id": 9101,
        "statement": "visits(rabbit, bear) :- chases(X, rabbit).",
        "description": "If something chases the rabbit then the rabbit visits the bear."
    },
    {
        "id": 9102,
        "statement": "is(X, red) :- chases(X, rabbit), visits(rabbit, cow).",
        "description": "If something chases the rabbit and the rabbit visits the cow then it is red."
    },
    {
        "id": 9103,
        "statement": "is(X, red) :- chases(X, cow), not visits(cow, tiger).",
        "description": "If something chases the cow and the cow does not visit the tiger then it is red."
    },
    {
        "id": 9104,
        "statement": "sees(bald_eagle, dog) :- likes(X, bald_eagle), is(bald_eagle, kind).",
        "description": "If something likes the bald eagle and the bald eagle is kind then the bald eagle sees the dog."
    },
    {
        "id": 9105,
        "statement": "is(cat, nice) :- likes(bald_eagle, cat), sees(bald_eagle, cat).",
        "description": "If the bald eagle likes the cat and the bald eagle sees the cat then the cat is nice."
    },
    {
        "id": 9106,
        "statement": "sees(X, bald_eagle) :- sees(X, bear), is(X, blue).",
        "description": "If something sees the bear and it is blue then it sees the bald eagle."
    },
    {
        "id": 9107,
        "statement": "chases(cat, dog) :- is(X, cold), sees(X, cat).",
        "description": "If something is cold and it sees the cat then the cat chases the dog."
    },
    {
        "id": 9108,
        "statement": "likes(cat, bald_eagle) :- likes(cat, bear).",
        "description": "If the cat likes the bear then the cat likes the bald eagle."
    },
    {
        "id": 9109,
        "statement": "is(X, cold) :- is(X, quiet), is(X, smart).",
        "description": "All quiet, smart things are cold."
    },
    {
        "id": 9110,
        "statement": "is(X, white) :- is(X, red), is(X, young).",
        "description": "Red, young things are white."
    },
    {
        "id": 9111,
        "statement": "is(X, quiet) :- is(X, smart), is(X, red).",
        "description": "If something is smart and red then it is quiet."
    },
    {
        "id": 9112,
        "statement": "is(X, young) :- is(X, rough), is(X, blue).",
        "description": "Rough, blue things are young."
    },
    {
        "id": 9113,
        "statement": "is(anne, red) :- is(anne, rough).",
        "description": "If Anne is rough then Anne is red."
    },
    {
        "id": 9114,
        "statement": "is(X, red) :- is(X, cold), is(X, green).",
        "description": "If something is cold and green then it is red."
    },
    {
        "id": 9115,
        "statement": "is(X, kind) :- is(X, white), is(X, green).",
        "description": "If something is white and green then it is kind."
    },
    {
        "id": 9116,
        "statement": "is(X, furry) :- is(X, round), is(X, red).",
        "description": "All round, red things are furry."
    },
    {
        "id": 9117,
        "statement": "is(X, nice) :- is(X, cold), is(X, big).",
        "description": "All cold, big people are nice."
    },
    {
        "id": 9118,
        "statement": "is(bob, young) :- is(bob, red).",
        "description": "If Bob is red then Bob is young."
    },
    {
        "id": 9119,
        "statement": "is(X, green) :- is(X, big), is(X, furry).",
        "description": "Big, furry people are green."
    },
    {
        "id": 9120,
        "statement": "chases(X, squirrel) :- sees(X, tiger).",
        "description": "If someone sees the tiger then they chase the squirrel."
    },
    {
        "id": 9121,
        "statement": "is(X, kind) :- chases(X, cat).",
        "description": "If someone chases the cat then they are kind."
    },
    {
        "id": 9122,
        "statement": "chases(X, tiger) :- chases(X, cat), not is(cat, rough).",
        "description": "If someone chases the cat and the cat is not rough then they chase the tiger."
    },
    {
        "id": 9123,
        "statement": "chases(X, mouse) :- chases(X, tiger), not likes(X, tiger).",
        "description": "If someone chases the tiger and they do not like the tiger then they chase the mouse."
    },
    {
        "id": 9124,
        "statement": "chases(X, cat) :- is(X, rough), chases(X, squirrel).",
        "description": "If someone is rough and they chase the squirrel then they chase the cat."
    },
    {
        "id": 9125,
        "statement": "sees(squirrel, cat) :- sees(tiger, squirrel), chases(squirrel, mouse).",
        "description": "If the tiger sees the squirrel and the squirrel chases the mouse then the squirrel sees the cat."
    },
    {
        "id": 9126,
        "statement": "sees(X, dog) :- is(X, green), visits(X, bald_eagle).",
        "description": "If something is green and it visits the bald eagle then it sees the dog."
    },
    {
        "id": 9127,
        "statement": "eats(X, dog) :- visits(X, cow).",
        "description": "If something visits the cow then it eats the dog."
    },
    {
        "id": 9128,
        "statement": "is(dog, green) :- is(X, young), sees(X, dog).",
        "description": "If something is young and it sees the dog then the dog is green."
    },
    {
        "id": 9129,
        "statement": "is(X, rough) :- eats(X, dog).",
        "description": "If something eats the dog then it is rough."
    },
    {
        "id": 9130,
        "statement": "is(bear, young) :- sees(X, bear).",
        "description": "If something sees the bear then the bear is young."
    },
    {
        "id": 9131,
        "statement": "sees(X, cow) :- is(X, rough).",
        "description": "If something is rough then it sees the cow."
    },
    {
        "id": 9132,
        "statement": "visits(X, dog) :- is(X, rough).",
        "description": "If something is rough then it visits the dog."
    },
    {
        "id": 9133,
        "statement": "visits(dog, bald_eagle) :- visits(X, bear), visits(X, dog).",
        "description": "If something visits the bear and it visits the dog then the dog visits the bald eagle."
    },
    {
        "id": 9134,
        "statement": "is(X, blue) :- is(X, cold), is(X, round).",
        "description": "Cold, round things are blue."
    },
    {
        "id": 9135,
        "statement": "is(X, red) :- is(X, furry), not is(X, kind).",
        "description": "If something is furry and not kind then it is red."
    },
    {
        "id": 9136,
        "statement": "is(X, round) :- is(X, kind), is(X, red).",
        "description": "All kind, red things are round."
    },
    {
        "id": 9137,
        "statement": "is(dave, red) :- is(dave, round).",
        "description": "If Dave is round then Dave is red."
    },
    {
        "id": 9138,
        "statement": "is(X, blue) :- is(X, kind).",
        "description": "If something is kind then it is blue."
    },
    {
        "id": 9139,
        "statement": "is(X, red) :- is(X, round), is(X, blue).",
        "description": "Round, blue things are red."
    },
    {
        "id": 9140,
        "statement": "is(X, smart) :- is(X, white), is(X, big).",
        "description": "White, big things are smart."
    },
    {
        "id": 9141,
        "statement": "visits(bear, tiger) :- chases(X, bear).",
        "description": "If someone chases the bear then the bear visits the tiger."
    },
    {
        "id": 9142,
        "statement": "is(X, round) :- visits(X, tiger).",
        "description": "If someone visits the tiger then they are round."
    },
    {
        "id": 9143,
        "statement": "chases(X, tiger) :- is(X, red).",
        "description": "If someone is red then they chase the tiger."
    },
    {
        "id": 9144,
        "statement": "chases(X, tiger) :- likes(X, bear), not chases(X, rabbit).",
        "description": "If someone likes the bear and they do not chase the rabbit then they chase the tiger."
    },
    {
        "id": 9145,
        "statement": "likes(X, rabbit) :- is(X, round).",
        "description": "If someone is round then they like the rabbit."
    },
    {
        "id": 9146,
        "statement": "is(rabbit, big) :- likes(X, bear), chases(bear, rabbit).",
        "description": "If someone likes the bear and the bear chases the rabbit then the rabbit is big."
    },
    {
        "id": 9147,
        "statement": "chases(rabbit, tiger) :- visits(tiger, rabbit).",
        "description": "If the tiger visits the rabbit then the rabbit chases the tiger."
    },
    {
        "id": 9148,
        "statement": "chases(rabbit, bear) :- likes(X, rabbit).",
        "description": "If someone likes the rabbit then the rabbit chases the bear."
    },
    {
        "id": 9149,
        "statement": "is(squirrel, rough) :- is(X, rough), visits(X, squirrel).",
        "description": "If something is rough and it visits the squirrel then the squirrel is rough."
    },
    {
        "id": 9150,
        "statement": "visits(X, squirrel) :- chases(X, bald_eagle).",
        "description": "If something chases the bald eagle then it visits the squirrel."
    },
    {
        "id": 9151,
        "statement": "is(X, red) :- chases(X, squirrel), not is(squirrel, blue).",
        "description": "If something chases the squirrel and the squirrel is not blue then it is red."
    },
    {
        "id": 9152,
        "statement": "is(bear, young) :- is(X, young), eats(X, bear).",
        "description": "If something is young and it eats the bear then the bear is young."
    },
    {
        "id": 9153,
        "statement": "chases(X, squirrel) :- visits(X, squirrel).",
        "description": "If something visits the squirrel then it chases the squirrel."
    },
    {
        "id": 9154,
        "statement": "eats(X, bald_eagle) :- is(X, rough).",
        "description": "If something is rough then it eats the bald eagle."
    },
    {
        "id": 9155,
        "statement": "is(bear, red) :- sees(X, bear).",
        "description": "If someone sees the bear then the bear is red."
    },
    {
        "id": 9156,
        "statement": "is(cow, kind) :- sees(X, cow).",
        "description": "If someone sees the cow then the cow is kind."
    },
    {
        "id": 9157,
        "statement": "needs(rabbit, bear) :- needs(X, rabbit).",
        "description": "If someone needs the rabbit then the rabbit needs the bear."
    },
    {
        "id": 9158,
        "statement": "needs(X, rabbit) :- needs(X, lion).",
        "description": "If someone needs the lion then they need the rabbit."
    },
    {
        "id": 9159,
        "statement": "is(X, red) :- needs(X, bear), not sees(bear, lion).",
        "description": "If someone needs the bear and the bear does not see the lion then they are red."
    },
    {
        "id": 9160,
        "statement": "needs(rabbit, lion) :- eats(X, rabbit).",
        "description": "If someone eats the rabbit then the rabbit needs the lion."
    },
    {
        "id": 9161,
        "statement": "is(X, round) :- is(X, nice), not is(X, green).",
        "description": "If someone is nice and not green then they are round."
    },
    {
        "id": 9162,
        "statement": "is(X, round) :- is(X, big).",
        "description": "Big people are round."
    },
    {
        "id": 9163,
        "statement": "is(X, young) :- is(X, nice), is(X, red).",
        "description": "Nice, red people are young."
    },
    {
        "id": 9164,
        "statement": "is(X, kind) :- is(X, green), is(X, quiet).",
        "description": "If something is green and quiet then it is kind."
    },
    {
        "id": 9165,
        "statement": "is(X, rough) :- is(X, white), is(X, blue).",
        "description": "If something is white and blue then it is rough."
    },
    {
        "id": 9166,
        "statement": "is(erin, green) :- is(erin, blue), is(erin, quiet).",
        "description": "If Erin is blue and Erin is quiet then Erin is green."
    },
    {
        "id": 9167,
        "statement": "is(X, nice) :- is(X, green), is(X, white).",
        "description": "Green, white things are nice."
    },
    {
        "id": 9168,
        "statement": "is(bald_eagle, cold) :- visits(tiger, bald_eagle), is(tiger, kind).",
        "description": "If the tiger visits the bald eagle and the tiger is kind then the bald eagle is cold."
    },
    {
        "id": 9169,
        "statement": "is(X, cold) :- eats(X, rabbit), visits(rabbit, bald_eagle).",
        "description": "If something eats the rabbit and the rabbit visits the bald eagle then it is cold."
    },
    {
        "id": 9170,
        "statement": "visits(X, rabbit) :- is(X, nice), is(X, cold).",
        "description": "If something is nice and cold then it visits the rabbit."
    },
    {
        "id": 9171,
        "statement": "eats(bald_eagle, rabbit) :- eats(X, bald_eagle).",
        "description": "If something eats the bald eagle then the bald eagle eats the rabbit."
    },
    {
        "id": 9172,
        "statement": "is(X, rough) :- likes(X, mouse), likes(X, tiger).",
        "description": "If someone likes the mouse and they like the tiger then they are rough."
    },
    {
        "id": 9173,
        "statement": "is(cat, kind) :- likes(cat, dog).",
        "description": "If the cat likes the dog then the cat is kind."
    },
    {
        "id": 9174,
        "statement": "likes(X, mouse) :- is(X, rough).",
        "description": "If someone is rough then they like the mouse."
    },
    {
        "id": 9175,
        "statement": "is(mouse, kind) :- likes(X, mouse).",
        "description": "If someone likes the mouse then the mouse is kind."
    },
    {
        "id": 9176,
        "statement": "likes(X, tiger) :- is(X, kind), is(X, rough).",
        "description": "If someone is kind and rough then they like the tiger."
    },
    {
        "id": 9177,
        "statement": "is(dog, nice) :- needs(dog, cat).",
        "description": "If the dog needs the cat then the dog is nice."
    },
    {
        "id": 9178,
        "statement": "is(cat, rough) :- likes(X, cat), likes(X, rabbit).",
        "description": "If someone likes the cat and they like the rabbit then the cat is rough."
    },
    {
        "id": 9179,
        "statement": "needs(rabbit, lion) :- is(rabbit, kind).",
        "description": "If the rabbit is kind then the rabbit needs the lion."
    },
    {
        "id": 9180,
        "statement": "sees(X, rabbit) :- sees(X, bear).",
        "description": "If someone sees the bear then they see the rabbit."
    },
    {
        "id": 9181,
        "statement": "is(lion, big) :- needs(cat, lion).",
        "description": "If the cat needs the lion then the lion is big."
    },
    {
        "id": 9182,
        "statement": "sees(cat, bear) :- likes(X, cat).",
        "description": "If someone likes the cat then the cat sees the bear."
    },
    {
        "id": 9183,
        "statement": "likes(cat, bear) :- needs(X, cat).",
        "description": "If someone needs the cat then the cat likes the bear."
    },
    {
        "id": 9184,
        "statement": "is(X, quiet) :- is(X, rough), is(X, big).",
        "description": "All rough, big people are quiet."
    },
    {
        "id": 9185,
        "statement": "is(X, green) :- is(X, red), not is(X, nice).",
        "description": "If someone is red and not nice then they are green."
    },
    {
        "id": 9186,
        "statement": "is(X, big) :- is(X, furry), is(X, nice).",
        "description": "If someone is furry and nice then they are big."
    },
    {
        "id": 9187,
        "statement": "chases(X, dog) :- is(X, green).",
        "description": "If someone is green then they chase the dog."
    },
    {
        "id": 9188,
        "statement": "chases(X, cow) :- eats(X, cow).",
        "description": "If someone eats the cow then they chase the cow."
    },
    {
        "id": 9189,
        "statement": "eats(X, cow) :- chases(X, lion).",
        "description": "If someone chases the lion then they eat the cow."
    },
    {
        "id": 9190,
        "statement": "chases(cow, lion) :- chases(X, dog), eats(X, cow).",
        "description": "If someone chases the dog and they eat the cow then the cow chases the lion."
    },
    {
        "id": 9191,
        "statement": "chases(cow, lion) :- chases(X, cow), is(cow, round).",
        "description": "If someone chases the cow and the cow is round then the cow chases the lion."
    },
    {
        "id": 9192,
        "statement": "is(X, green) :- eats(X, lion), visits(X, lion).",
        "description": "If someone eats the lion and they visit the lion then they are green."
    },
    {
        "id": 9193,
        "statement": "eats(X, rabbit) :- eats(X, cat).",
        "description": "If someone eats the cat then they eat the rabbit."
    },
    {
        "id": 9194,
        "statement": "is(bear, nice) :- chases(rabbit, bear), likes(rabbit, bear).",
        "description": "If the rabbit chases the bear and the rabbit likes the bear then the bear is nice."
    },
    {
        "id": 9195,
        "statement": "chases(rabbit, bear) :- eats(bear, rabbit).",
        "description": "If the bear eats the rabbit then the rabbit chases the bear."
    },
    {
        "id": 9196,
        "statement": "chases(mouse, rabbit) :- is(mouse, nice).",
        "description": "If the mouse is nice then the mouse chases the rabbit."
    },
    {
        "id": 9197,
        "statement": "eats(bear, cat) :- likes(X, bear).",
        "description": "If someone likes the bear then the bear eats the cat."
    },
    {
        "id": 9198,
        "statement": "is(rabbit, nice) :- chases(X, rabbit), is(rabbit, blue).",
        "description": "If someone chases the rabbit and the rabbit is blue then the rabbit is nice."
    },
    {
        "id": 9199,
        "statement": "likes(X, cat) :- is(X, nice), eats(X, cat).",
        "description": "If someone is nice and they eat the cat then they like the cat."
    },
    {
        "id": 9200,
        "statement": "needs(X, tiger) :- is(X, young), is(X, round).",
        "description": "If something is young and round then it needs the tiger."
    },
    {
        "id": 9201,
        "statement": "is(tiger, young) :- chases(X, tiger).",
        "description": "If something chases the tiger then the tiger is young."
    },
    {
        "id": 9202,
        "statement": "is(X, nice) :- chases(X, rabbit), chases(rabbit, bear).",
        "description": "If something chases the rabbit and the rabbit chases the bear then it is nice."
    },
    {
        "id": 9203,
        "statement": "eats(rabbit, bear) :- eats(X, cat), needs(X, rabbit).",
        "description": "If something eats the cat and it needs the rabbit then the rabbit eats the bear."
    },
    {
        "id": 9204,
        "statement": "chases(tiger, bear) :- eats(X, tiger), is(X, kind).",
        "description": "If something eats the tiger and it is kind then the tiger chases the bear."
    },
    {
        "id": 9205,
        "statement": "chases(X, tiger) :- is(X, nice).",
        "description": "If something is nice then it chases the tiger."
    },
    {
        "id": 9206,
        "statement": "is(X, nice) :- is(X, big), is(X, kind).",
        "description": "All big, kind things are nice."
    },
    {
        "id": 9207,
        "statement": "is(X, kind) :- is(X, big), is(X, nice).",
        "description": "If something is big and nice then it is kind."
    },
    {
        "id": 9208,
        "statement": "is(dave, big) :- is(dave, furry).",
        "description": "If Dave is furry then Dave is big."
    },
    {
        "id": 9209,
        "statement": "is(X, big) :- is(X, rough), is(X, quiet).",
        "description": "Rough, quiet people are big."
    },
    {
        "id": 9210,
        "statement": "is(X, quiet) :- is(X, blue), is(X, rough).",
        "description": "If someone is blue and rough then they are quiet."
    },
    {
        "id": 9211,
        "statement": "is(X, red) :- is(X, cold), not is(X, blue).",
        "description": "If someone is cold and not blue then they are red."
    },
    {
        "id": 9212,
        "statement": "eats(mouse, dog) :- eats(X, mouse).",
        "description": "If something eats the mouse then the mouse eats the dog."
    },
    {
        "id": 9213,
        "statement": "eats(mouse, cow) :- visits(X, mouse).",
        "description": "If something visits the mouse then the mouse eats the cow."
    },
    {
        "id": 9214,
        "statement": "eats(X, dog) :- is(X, young), eats(X, lion).",
        "description": "If something is young and it eats the lion then it eats the dog."
    },
    {
        "id": 9215,
        "statement": "eats(X, mouse) :- is(X, nice).",
        "description": "If something is nice then it eats the mouse."
    },
    {
        "id": 9216,
        "statement": "is(dog, nice) :- eats(X, dog), visits(X, lion).",
        "description": "If something eats the dog and it visits the lion then the dog is nice."
    },
    {
        "id": 9217,
        "statement": "is(X, kind) :- visits(X, lion).",
        "description": "If something visits the lion then it is kind."
    },
    {
        "id": 9218,
        "statement": "visits(X, mouse) :- is(X, cold), not likes(X, dog).",
        "description": "If something is cold and it does not like the dog then it visits the mouse."
    },
    {
        "id": 9219,
        "statement": "is(X, rough) :- needs(X, cat).",
        "description": "If something needs the cat then it is rough."
    },
    {
        "id": 9220,
        "statement": "needs(X, cat) :- needs(X, bald_eagle).",
        "description": "If something needs the bald eagle then it needs the cat."
    },
    {
        "id": 9221,
        "statement": "is(lion, rough) :- needs(X, lion), not is(X, cold).",
        "description": "If something needs the lion and it is not cold then the lion is rough."
    },
    {
        "id": 9222,
        "statement": "sees(bald_eagle, cat) :- needs(X, bald_eagle).",
        "description": "If something needs the bald eagle then the bald eagle sees the cat."
    },
    {
        "id": 9223,
        "statement": "visits(X, cat) :- is(X, round), is(X, rough).",
        "description": "If something is round and rough then it visits the cat."
    },
    {
        "id": 9224,
        "statement": "is(cat, young) :- sees(squirrel, cat), needs(cat, bald_eagle).",
        "description": "If the squirrel sees the cat and the cat needs the bald eagle then the cat is young."
    },
    {
        "id": 9225,
        "statement": "sees(X, bald_eagle) :- is(X, big).",
        "description": "If something is big then it sees the bald eagle."
    },
    {
        "id": 9226,
        "statement": "needs(X, lion) :- is(X, rough).",
        "description": "If something is rough then it needs the lion."
    },
    {
        "id": 9227,
        "statement": "is(X, quiet) :- is(X, blue), is(X, nice).",
        "description": "All blue, nice people are quiet."
    },
    {
        "id": 9228,
        "statement": "is(X, round) :- is(X, white), is(X, nice).",
        "description": "If someone is white and nice then they are round."
    },
    {
        "id": 9229,
        "statement": "is(erin, nice) :- is(erin, blue).",
        "description": "If Erin is blue then Erin is nice."
    },
    {
        "id": 9230,
        "statement": "is(X, nice) :- is(X, quiet), is(X, smart).",
        "description": "If someone is quiet and smart then they are nice."
    },
    {
        "id": 9231,
        "statement": "is(X, white) :- is(X, blue), is(X, smart).",
        "description": "If someone is blue and smart then they are white."
    },
    {
        "id": 9232,
        "statement": "is(X, nice) :- is(X, blue), is(X, white).",
        "description": "All blue, white people are nice."
    },
    {
        "id": 9233,
        "statement": "is(X, white) :- is(X, quiet), is(X, cold).",
        "description": "Quiet, cold things are white."
    },
    {
        "id": 9234,
        "statement": "is(X, kind) :- is(X, white), is(X, red).",
        "description": "White, red things are kind."
    },
    {
        "id": 9235,
        "statement": "is(X, rough) :- is(X, quiet), is(X, furry).",
        "description": "If something is quiet and furry then it is rough."
    },
    {
        "id": 9236,
        "statement": "is(X, rough) :- is(X, cold), is(X, furry).",
        "description": "Cold, furry things are rough."
    },
    {
        "id": 9237,
        "statement": "eats(X, squirrel) :- sees(X, bear).",
        "description": "If something sees the bear then it eats the squirrel."
    },
    {
        "id": 9238,
        "statement": "is(bear, kind) :- is(squirrel, cold), eats(squirrel, bear).",
        "description": "If the squirrel is cold and the squirrel eats the bear then the bear is kind."
    },
    {
        "id": 9239,
        "statement": "is(squirrel, cold) :- is(mouse, kind), likes(mouse, squirrel).",
        "description": "If the mouse is kind and the mouse likes the squirrel then the squirrel is cold."
    },
    {
        "id": 9240,
        "statement": "is(X, kind) :- likes(X, squirrel).",
        "description": "If something likes the squirrel then it is kind."
    },
    {
        "id": 9241,
        "statement": "is(X, blue) :- is(X, red), is(X, kind).",
        "description": "All red, kind things are blue."
    },
    {
        "id": 9242,
        "statement": "likes(X, squirrel) :- is(X, kind).",
        "description": "If something is kind then it likes the squirrel."
    },
    {
        "id": 9243,
        "statement": "sees(bear, cow) :- is(X, cold), likes(X, bear).",
        "description": "If something is cold and it likes the bear then the bear sees the cow."
    },
    {
        "id": 9244,
        "statement": "sees(X, mouse) :- is(X, red), is(X, nice).",
        "description": "If something is red and nice then it sees the mouse."
    },
    {
        "id": 9245,
        "statement": "is(lion, kind) :- visits(X, lion), visits(X, mouse).",
        "description": "If someone visits the lion and they visit the mouse then the lion is kind."
    },
    {
        "id": 9246,
        "statement": "is(cat, nice) :- eats(X, cat).",
        "description": "If someone eats the cat then the cat is nice."
    },
    {
        "id": 9247,
        "statement": "eats(X, tiger) :- visits(X, tiger).",
        "description": "If someone visits the tiger then they eat the tiger."
    },
    {
        "id": 9248,
        "statement": "visits(lion, tiger) :- visits(tiger, lion).",
        "description": "If the tiger visits the lion then the lion visits the tiger."
    },
    {
        "id": 9249,
        "statement": "visits(X, mouse) :- eats(X, tiger).",
        "description": "If someone eats the tiger then they visit the mouse."
    },
    {
        "id": 9250,
        "statement": "eats(mouse, lion) :- eats(X, mouse), visits(X, tiger).",
        "description": "If someone eats the mouse and they visit the tiger then the mouse eats the lion."
    },
    {
        "id": 9251,
        "statement": "chases(X, lion) :- eats(X, mouse), chases(X, tiger).",
        "description": "If someone eats the mouse and they chase the tiger then they chase the lion."
    },
    {
        "id": 9252,
        "statement": "is(bob, quiet) :- not is(bob, blue).",
        "description": "If Bob is not blue then Bob is quiet."
    },
    {
        "id": 9253,
        "statement": "is(X, smart) :- is(X, round).",
        "description": "If someone is round then they are smart."
    },
    {
        "id": 9254,
        "statement": "likes(X, lion) :- sees(X, cow), sees(X, bear).",
        "description": "If something sees the cow and it sees the bear then it likes the lion."
    },
    {
        "id": 9255,
        "statement": "likes(lion, cow) :- likes(X, lion).",
        "description": "If something likes the lion then the lion likes the cow."
    },
    {
        "id": 9256,
        "statement": "sees(X, bear) :- likes(X, cow), needs(cow, squirrel).",
        "description": "If something likes the cow and the cow needs the squirrel then it sees the bear."
    },
    {
        "id": 9257,
        "statement": "is(bear, young) :- likes(lion, bear), likes(bear, lion).",
        "description": "If the lion likes the bear and the bear likes the lion then the bear is young."
    },
    {
        "id": 9258,
        "statement": "needs(bear, cow) :- is(bear, big).",
        "description": "If the bear is big then the bear needs the cow."
    },
    {
        "id": 9259,
        "statement": "is(lion, nice) :- is(X, nice), likes(X, lion).",
        "description": "If something is nice and it likes the lion then the lion is nice."
    },
    {
        "id": 9260,
        "statement": "sees(X, bear) :- is(X, nice).",
        "description": "If something is nice then it sees the bear."
    },
    {
        "id": 9261,
        "statement": "is(bob, furry) :- is(bob, smart), is(bob, kind).",
        "description": "If Bob is smart and Bob is kind then Bob is furry."
    },
    {
        "id": 9262,
        "statement": "is(X, red) :- is(X, blue), is(X, nice).",
        "description": "All blue, nice things are red."
    },
    {
        "id": 9263,
        "statement": "needs(X, dog) :- is(X, big), not needs(X, tiger).",
        "description": "If someone is big and they do not need the tiger then they need the dog."
    },
    {
        "id": 9264,
        "statement": "is(tiger, big) :- eats(tiger, squirrel), not needs(tiger, squirrel).",
        "description": "If the tiger eats the squirrel and the tiger does not need the squirrel then the tiger is big."
    },
    {
        "id": 9265,
        "statement": "visits(X, dog) :- eats(X, dog), is(X, kind).",
        "description": "If someone eats the dog and they are kind then they visit the dog."
    },
    {
        "id": 9266,
        "statement": "visits(X, dog) :- needs(X, lion), not is(X, big).",
        "description": "If someone needs the lion and they are not big then they visit the dog."
    },
    {
        "id": 9267,
        "statement": "needs(dog, lion) :- needs(X, dog), visits(X, dog).",
        "description": "If someone needs the dog and they visit the dog then the dog needs the lion."
    },
    {
        "id": 9268,
        "statement": "eats(X, dog) :- is(X, big), needs(X, lion).",
        "description": "If someone is big and they need the lion then they eat the dog."
    },
    {
        "id": 9269,
        "statement": "is(X, smart) :- is(X, big), is(X, cold).",
        "description": "All big, cold things are smart."
    },
    {
        "id": 9270,
        "statement": "is(bob, cold) :- is(bob, quiet), is(bob, white).",
        "description": "If Bob is quiet and Bob is white then Bob is cold."
    },
    {
        "id": 9271,
        "statement": "is(harry, green) :- is(harry, white).",
        "description": "If Harry is white then Harry is green."
    },
    {
        "id": 9272,
        "statement": "sees(rabbit, tiger) :- sees(squirrel, rabbit).",
        "description": "If the squirrel sees the rabbit then the rabbit sees the tiger."
    },
    {
        "id": 9273,
        "statement": "is(X, rough) :- eats(X, rabbit).",
        "description": "If something eats the rabbit then it is rough."
    },
    {
        "id": 9274,
        "statement": "sees(X, rabbit) :- is(X, rough).",
        "description": "If something is rough then it sees the rabbit."
    },
    {
        "id": 9275,
        "statement": "sees(X, rabbit) :- chases(X, tiger).",
        "description": "If something chases the tiger then it sees the rabbit."
    },
    {
        "id": 9276,
        "statement": "chases(X, tiger) :- sees(X, bald_eagle).",
        "description": "If something sees the bald eagle then it chases the tiger."
    },
    {
        "id": 9277,
        "statement": "eats(X, rabbit) :- sees(X, tiger).",
        "description": "If something sees the tiger then it eats the rabbit."
    },
    {
        "id": 9278,
        "statement": "sees(squirrel, bald_eagle) :- eats(X, squirrel), is(squirrel, nice).",
        "description": "If something eats the squirrel and the squirrel is nice then the squirrel sees the bald eagle."
    },
    {
        "id": 9279,
        "statement": "sees(rabbit, squirrel) :- not chases(rabbit, tiger).",
        "description": "If the rabbit does not chase the tiger then the rabbit sees the squirrel."
    },
    {
        "id": 9280,
        "statement": "chases(X, rabbit) :- sees(X, squirrel).",
        "description": "If something sees the squirrel then it chases the rabbit."
    },
    {
        "id": 9281,
        "statement": "is(X, nice) :- is(X, round), is(X, blue).",
        "description": "If something is round and blue then it is nice."
    },
    {
        "id": 9282,
        "statement": "is(anne, quiet) :- is(anne, white).",
        "description": "If Anne is white then Anne is quiet."
    },
    {
        "id": 9283,
        "statement": "is(X, blue) :- is(X, white), is(X, smart).",
        "description": "White, smart things are blue."
    },
    {
        "id": 9284,
        "statement": "is(anne, furry) :- is(anne, quiet).",
        "description": "If Anne is quiet then Anne is furry."
    },
    {
        "id": 9285,
        "statement": "is(gary, smart) :- is(gary, quiet), is(gary, round).",
        "description": "If Gary is quiet and Gary is round then Gary is smart."
    },
    {
        "id": 9286,
        "statement": "is(X, blue) :- is(X, nice), is(X, red).",
        "description": "Nice, red people are blue."
    },
    {
        "id": 9287,
        "statement": "is(X, green) :- is(X, round), is(X, red).",
        "description": "All round, red people are green."
    },
    {
        "id": 9288,
        "statement": "is(X, green) :- is(X, nice), is(X, round).",
        "description": "All nice, round people are green."
    },
    {
        "id": 9289,
        "statement": "is(X, round) :- is(X, blue), is(X, furry).",
        "description": "All blue, furry people are round."
    },
    {
        "id": 9290,
        "statement": "is(dave, red) :- is(dave, blue), is(dave, nice).",
        "description": "If Dave is blue and Dave is nice then Dave is red."
    },
    {
        "id": 9291,
        "statement": "is(X, red) :- is(X, quiet), is(X, kind).",
        "description": "Quiet, kind people are red."
    },
    {
        "id": 9292,
        "statement": "is(X, nice) :- is(X, kind).",
        "description": "Kind people are nice."
    },
    {
        "id": 9293,
        "statement": "is(X, big) :- is(X, green), is(X, nice).",
        "description": "All green, nice people are big."
    },
    {
        "id": 9294,
        "statement": "is(X, kind) :- is(X, big), is(X, green).",
        "description": "Big, green people are kind."
    },
    {
        "id": 9295,
        "statement": "is(X, quiet) :- is(X, white), is(X, big).",
        "description": "If someone is white and big then they are quiet."
    },
    {
        "id": 9296,
        "statement": "is(X, quiet) :- is(X, young), is(X, big).",
        "description": "All young, big people are quiet."
    },
    {
        "id": 9297,
        "statement": "is(X, big) :- is(X, nice), is(X, red).",
        "description": "If someone is nice and red then they are big."
    },
    {
        "id": 9298,
        "statement": "is(X, smart) :- is(X, green), is(X, round).",
        "description": "Green, round things are smart."
    },
    {
        "id": 9299,
        "statement": "is(gary, round) :- is(gary, green), is(gary, quiet).",
        "description": "If Gary is green and Gary is quiet then Gary is round."
    },
    {
        "id": 9300,
        "statement": "is(gary, white) :- is(gary, big).",
        "description": "If Gary is big then Gary is white."
    },
    {
        "id": 9301,
        "statement": "is(fiona, young) :- is(fiona, kind), is(fiona, big).",
        "description": "If Fiona is kind and Fiona is big then Fiona is young."
    },
    {
        "id": 9302,
        "statement": "is(X, quiet) :- is(X, rough), is(X, blue).",
        "description": "Rough, blue things are quiet."
    },
    {
        "id": 9303,
        "statement": "is(X, white) :- is(X, blue), is(X, rough).",
        "description": "If something is blue and rough then it is white."
    },
    {
        "id": 9304,
        "statement": "is(X, kind) :- is(X, cold), is(X, blue).",
        "description": "All cold, blue people are kind."
    },
    {
        "id": 9305,
        "statement": "is(fiona, kind) :- is(fiona, blue), is(fiona, cold).",
        "description": "If Fiona is blue and Fiona is cold then Fiona is kind."
    },
    {
        "id": 9306,
        "statement": "is(X, green) :- is(X, kind), is(X, big).",
        "description": "If someone is kind and big then they are green."
    },
    {
        "id": 9307,
        "statement": "is(X, big) :- is(X, cold), is(X, kind).",
        "description": "If someone is cold and kind then they are big."
    },
    {
        "id": 9308,
        "statement": "is(bob, round) :- is(bob, smart).",
        "description": "If Bob is smart then Bob is round."
    },
    {
        "id": 9309,
        "statement": "is(X, kind) :- is(X, round), is(X, smart).",
        "description": "All round, smart things are kind."
    },
    {
        "id": 9310,
        "statement": "is(X, kind) :- is(X, smart), is(X, rough).",
        "description": "Smart, rough things are kind."
    },
    {
        "id": 9311,
        "statement": "is(X, smart) :- is(X, rough), is(X, white).",
        "description": "All rough, white things are smart."
    },
    {
        "id": 9312,
        "statement": "is(X, green) :- is(X, smart), is(X, kind).",
        "description": "All smart, kind things are green."
    },
    {
        "id": 9313,
        "statement": "is(X, round) :- is(X, smart), is(X, green).",
        "description": "If something is smart and green then it is round."
    },
    {
        "id": 9314,
        "statement": "is(X, blue) :- is(X, green), not is(X, rough).",
        "description": "If something is green and not rough then it is blue."
    },
    {
        "id": 9315,
        "statement": "is(dave, white) :- is(dave, smart), is(dave, rough).",
        "description": "If Dave is smart and Dave is rough then Dave is white."
    },
    {
        "id": 9316,
        "statement": "is(X, rough) :- is(X, cold), not is(X, red).",
        "description": "If someone is cold and not red then they are rough."
    },
    {
        "id": 9317,
        "statement": "is(X, cold) :- is(X, round), is(X, big).",
        "description": "Round, big people are cold."
    },
    {
        "id": 9318,
        "statement": "is(X, cold) :- is(X, smart), is(X, red).",
        "description": "Smart, red people are cold."
    },
    {
        "id": 9319,
        "statement": "is(X, smart) :- is(X, rough), is(X, red).",
        "description": "If someone is rough and red then they are smart."
    },
    {
        "id": 9320,
        "statement": "is(X, big) :- is(X, rough), is(X, red).",
        "description": "If someone is rough and red then they are big."
    },
    {
        "id": 9321,
        "statement": "chases(X, bald_eagle) :- is(X, blue).",
        "description": "If someone is blue then they chase the bald eagle."
    },
    {
        "id": 9322,
        "statement": "visits(X, bald_eagle) :- is(X, young).",
        "description": "If someone is young then they visit the bald eagle."
    },
    {
        "id": 9323,
        "statement": "visits(X, tiger) :- visits(X, bald_eagle).",
        "description": "If someone visits the bald eagle then they visit the tiger."
    },
    {
        "id": 9324,
        "statement": "likes(squirrel, bald_eagle) :- chases(tiger, lion), visits(tiger, squirrel).",
        "description": "If the tiger chases the lion and the tiger visits the squirrel then the squirrel likes the bald eagle."
    },
    {
        "id": 9325,
        "statement": "is(tiger, young) :- visits(X, tiger).",
        "description": "If someone visits the tiger then the tiger is young."
    },
    {
        "id": 9326,
        "statement": "is(lion, young) :- likes(X, lion).",
        "description": "If someone likes the lion then the lion is young."
    },
    {
        "id": 9327,
        "statement": "visits(dog, cow) :- visits(X, dog), not chases(X, bear).",
        "description": "If someone visits the dog and they do not chase the bear then the dog visits the cow."
    },
    {
        "id": 9328,
        "statement": "visits(X, lion) :- is(X, nice), not is(X, red).",
        "description": "If someone is nice and not red then they visit the lion."
    },
    {
        "id": 9329,
        "statement": "visits(cow, lion) :- visits(X, cow).",
        "description": "If someone visits the cow then the cow visits the lion."
    },
    {
        "id": 9330,
        "statement": "visits(bear, cow) :- is(bear, kind), is(bear, rough).",
        "description": "If the bear is kind and the bear is rough then the bear visits the cow."
    },
    {
        "id": 9331,
        "statement": "is(lion, round) :- visits(X, lion), needs(lion, bear).",
        "description": "If someone visits the lion and the lion needs the bear then the lion is round."
    },
    {
        "id": 9332,
        "statement": "needs(lion, cow) :- needs(X, lion), chases(X, bear).",
        "description": "If someone needs the lion and they chase the bear then the lion needs the cow."
    },
    {
        "id": 9333,
        "statement": "is(X, furry) :- is(X, red), is(X, cold).",
        "description": "Red, cold things are furry."
    },
    {
        "id": 9334,
        "statement": "is(X, cold) :- is(X, young), is(X, big).",
        "description": "All young, big things are cold."
    },
    {
        "id": 9335,
        "statement": "is(X, young) :- is(X, nice), is(X, furry).",
        "description": "Nice, furry things are young."
    },
    {
        "id": 9336,
        "statement": "is(X, big) :- is(X, cold), is(X, nice).",
        "description": "All cold, nice things are big."
    },
    {
        "id": 9337,
        "statement": "is(X, nice) :- chases(X, squirrel), sees(squirrel, bear).",
        "description": "If something chases the squirrel and the squirrel sees the bear then it is nice."
    },
    {
        "id": 9338,
        "statement": "needs(X, tiger) :- is(X, cold).",
        "description": "If something is cold then it needs the tiger."
    },
    {
        "id": 9339,
        "statement": "needs(tiger, bear) :- chases(X, squirrel), needs(squirrel, tiger).",
        "description": "If something chases the squirrel and the squirrel needs the tiger then the tiger needs the bear."
    },
    {
        "id": 9340,
        "statement": "chases(X, bear) :- sees(X, bear).",
        "description": "If something sees the bear then it chases the bear."
    },
    {
        "id": 9341,
        "statement": "needs(squirrel, tiger) :- sees(X, squirrel).",
        "description": "If something sees the squirrel then the squirrel needs the tiger."
    },
    {
        "id": 9342,
        "statement": "chases(X, squirrel) :- sees(X, squirrel).",
        "description": "If something sees the squirrel then it chases the squirrel."
    },
    {
        "id": 9343,
        "statement": "is(X, quiet) :- is(X, rough), is(X, round).",
        "description": "Rough, round people are quiet."
    },
    {
        "id": 9344,
        "statement": "is(fiona, rough) :- is(fiona, round), is(fiona, quiet).",
        "description": "If Fiona is round and Fiona is quiet then Fiona is rough."
    },
    {
        "id": 9345,
        "statement": "is(X, cold) :- is(X, nice), is(X, green).",
        "description": "All nice, green people are cold."
    },
    {
        "id": 9346,
        "statement": "is(X, green) :- is(X, quiet), is(X, nice).",
        "description": "All quiet, nice people are green."
    },
    {
        "id": 9347,
        "statement": "is(X, red) :- is(X, round), is(X, cold).",
        "description": "Round, cold people are red."
    },
    {
        "id": 9348,
        "statement": "is(charlie, big) :- is(charlie, kind), is(charlie, green).",
        "description": "If Charlie is kind and Charlie is green then Charlie is big."
    },
    {
        "id": 9349,
        "statement": "is(X, red) :- is(X, quiet), is(X, big).",
        "description": "If someone is quiet and big then they are red."
    },
    {
        "id": 9350,
        "statement": "is(erin, quiet) :- is(erin, red), is(erin, nice).",
        "description": "If Erin is red and Erin is nice then Erin is quiet."
    },
    {
        "id": 9351,
        "statement": "is(X, quiet) :- is(X, rough), is(X, red).",
        "description": "Rough, red things are quiet."
    },
    {
        "id": 9352,
        "statement": "is(X, big) :- is(X, smart), is(X, red).",
        "description": "If something is smart and red then it is big."
    },
    {
        "id": 9353,
        "statement": "is(X, red) :- is(X, smart), is(X, nice).",
        "description": "All smart, nice things are red."
    },
    {
        "id": 9354,
        "statement": "is(X, nice) :- is(X, rough), is(X, quiet).",
        "description": "All rough, quiet things are nice."
    },
    {
        "id": 9355,
        "statement": "is(bob, smart) :- is(bob, rough), is(bob, big).",
        "description": "If Bob is rough and Bob is big then Bob is smart."
    },
    {
        "id": 9356,
        "statement": "likes(X, lion) :- visits(X, mouse).",
        "description": "If someone visits the mouse then they like the lion."
    },
    {
        "id": 9357,
        "statement": "chases(X, mouse) :- likes(X, mouse), is(X, big).",
        "description": "If someone likes the mouse and they are big then they chase the mouse."
    },
    {
        "id": 9358,
        "statement": "visits(mouse, lion) :- likes(X, mouse).",
        "description": "If someone likes the mouse then the mouse visits the lion."
    },
    {
        "id": 9359,
        "statement": "likes(X, mouse) :- is(X, green).",
        "description": "If someone is green then they like the mouse."
    },
    {
        "id": 9360,
        "statement": "likes(lion, bear) :- visits(X, lion), likes(X, mouse).",
        "description": "If someone visits the lion and they like the mouse then the lion likes the bear."
    },
    {
        "id": 9361,
        "statement": "is(bear, big) :- is(bear, blue).",
        "description": "If the bear is blue then the bear is big."
    },
    {
        "id": 9362,
        "statement": "visits(X, tiger) :- chases(X, bear), is(bear, blue).",
        "description": "If someone chases the bear and the bear is blue then they visit the tiger."
    },
    {
        "id": 9363,
        "statement": "is(X, young) :- is(X, round), is(X, white).",
        "description": "Round, white people are young."
    },
    {
        "id": 9364,
        "statement": "is(X, quiet) :- is(X, rough), is(X, blue).",
        "description": "Rough, blue people are quiet."
    },
    {
        "id": 9365,
        "statement": "is(X, rough) :- is(X, red), is(X, round).",
        "description": "All red, round people are rough."
    },
    {
        "id": 9366,
        "statement": "is(dave, smart) :- is(dave, red).",
        "description": "If Dave is red then Dave is smart."
    },
    {
        "id": 9367,
        "statement": "is(X, white) :- is(X, round), is(X, rough).",
        "description": "If someone is round and rough then they are white."
    },
    {
        "id": 9368,
        "statement": "is(bob, rough) :- is(bob, cold).",
        "description": "If Bob is cold then Bob is rough."
    },
    {
        "id": 9369,
        "statement": "is(X, kind) :- is(X, cold), is(X, red).",
        "description": "Cold, red people are kind."
    },
    {
        "id": 9370,
        "statement": "is(X, rough) :- is(X, red), is(X, kind).",
        "description": "All red, kind people are rough."
    },
    {
        "id": 9371,
        "statement": "is(X, smart) :- is(X, round).",
        "description": "Round things are smart."
    },
    {
        "id": 9372,
        "statement": "is(anne, young) :- is(anne, green), is(anne, smart).",
        "description": "If Anne is green and Anne is smart then Anne is young."
    },
    {
        "id": 9373,
        "statement": "is(gary, young) :- is(gary, furry), is(gary, round).",
        "description": "If Gary is furry and Gary is round then Gary is young."
    },
    {
        "id": 9374,
        "statement": "is(X, furry) :- is(X, young), is(X, kind).",
        "description": "All young, kind people are furry."
    },
    {
        "id": 9375,
        "statement": "is(X, kind) :- is(X, white), is(X, furry).",
        "description": "All white, furry people are kind."
    },
    {
        "id": 9376,
        "statement": "is(X, green) :- is(X, white), is(X, round).",
        "description": "All white, round people are green."
    },
    {
        "id": 9377,
        "statement": "is(gary, quiet) :- is(gary, white).",
        "description": "If Gary is white then Gary is quiet."
    },
    {
        "id": 9378,
        "statement": "is(X, round) :- is(X, white), is(X, furry).",
        "description": "All white, furry people are round."
    },
    {
        "id": 9379,
        "statement": "is(bob, rough) :- is(bob, green), is(bob, nice).",
        "description": "If Bob is green and Bob is nice then Bob is rough."
    },
    {
        "id": 9380,
        "statement": "is(X, green) :- is(X, red), not is(X, nice).",
        "description": "If something is red and not nice then it is green."
    },
    {
        "id": 9381,
        "statement": "is(X, big) :- is(X, red), is(X, green).",
        "description": "Red, green things are big."
    },
    {
        "id": 9382,
        "statement": "is(bob, big) :- is(bob, round), not is(bob, green).",
        "description": "If Bob is round and Bob is not green then Bob is big."
    },
    {
        "id": 9383,
        "statement": "is(X, round) :- is(X, rough), is(X, red).",
        "description": "If something is rough and red then it is round."
    },
    {
        "id": 9384,
        "statement": "is(X, round) :- is(X, white), is(X, green).",
        "description": "All white, green things are round."
    },
    {
        "id": 9385,
        "statement": "is(X, round) :- is(X, nice), is(X, red).",
        "description": "All nice, red things are round."
    },
    {
        "id": 9386,
        "statement": "is(X, rough) :- is(X, green), is(X, big).",
        "description": "If something is green and big then it is rough."
    },
    {
        "id": 9387,
        "statement": "is(bob, rough) :- is(bob, young).",
        "description": "If Bob is young then Bob is rough."
    },
    {
        "id": 9388,
        "statement": "is(X, young) :- is(X, big), is(X, kind).",
        "description": "All big, kind things are young."
    },
    {
        "id": 9389,
        "statement": "is(charlie, blue) :- is(charlie, rough).",
        "description": "If Charlie is rough then Charlie is blue."
    },
    {
        "id": 9390,
        "statement": "is(X, round) :- is(X, young), not is(X, blue).",
        "description": "If something is young and not blue then it is round."
    },
    {
        "id": 9391,
        "statement": "is(harry, young) :- is(harry, quiet).",
        "description": "If Harry is quiet then Harry is young."
    },
    {
        "id": 9392,
        "statement": "is(X, smart) :- is(X, green), is(X, red).",
        "description": "If something is green and red then it is smart."
    },
    {
        "id": 9393,
        "statement": "is(X, white) :- is(X, red), is(X, smart).",
        "description": "All red, smart things are white."
    },
    {
        "id": 9394,
        "statement": "is(harry, quiet) :- is(harry, furry), is(harry, young).",
        "description": "If Harry is furry and Harry is young then Harry is quiet."
    },
    {
        "id": 9395,
        "statement": "is(X, young) :- is(X, nice), is(X, white).",
        "description": "If someone is nice and white then they are young."
    },
    {
        "id": 9396,
        "statement": "is(X, white) :- is(X, nice), is(X, round).",
        "description": "If someone is nice and round then they are white."
    },
    {
        "id": 9397,
        "statement": "is(X, nice) :- is(X, red), is(X, blue).",
        "description": "All red, blue people are nice."
    },
    {
        "id": 9398,
        "statement": "is(X, young) :- is(X, white), is(X, blue).",
        "description": "All white, blue people are young."
    },
    {
        "id": 9399,
        "statement": "visits(tiger, lion) :- sees(X, dog), visits(dog, tiger).",
        "description": "If something sees the dog and the dog visits the tiger then the tiger visits the lion."
    },
    {
        "id": 9400,
        "statement": "sees(cat, lion) :- needs(X, cat).",
        "description": "If something needs the cat then the cat sees the lion."
    },
    {
        "id": 9401,
        "statement": "visits(X, tiger) :- is(X, cold).",
        "description": "If something is cold then it visits the tiger."
    },
    {
        "id": 9402,
        "statement": "is(X, young) :- needs(X, cat).",
        "description": "If something needs the cat then it is young."
    },
    {
        "id": 9403,
        "statement": "sees(dog, lion) :- is(X, young), needs(X, dog).",
        "description": "If something is young and it needs the dog then the dog sees the lion."
    },
    {
        "id": 9404,
        "statement": "is(dog, nice) :- sees(X, lion), needs(lion, dog).",
        "description": "If something sees the lion and the lion needs the dog then the dog is nice."
    },
    {
        "id": 9405,
        "statement": "is(X, white) :- is(X, big), is(X, kind).",
        "description": "Big, kind people are white."
    },
    {
        "id": 9406,
        "statement": "is(anne, white) :- is(anne, smart).",
        "description": "If Anne is smart then Anne is white."
    },
    {
        "id": 9407,
        "statement": "is(X, blue) :- is(X, nice), is(X, cold).",
        "description": "All nice, cold people are blue."
    },
    {
        "id": 9408,
        "statement": "is(X, nice) :- is(X, white), not is(X, big).",
        "description": "If someone is white and not big then they are nice."
    },
    {
        "id": 9409,
        "statement": "is(X, nice) :- is(X, white), is(X, big).",
        "description": "White, big people are nice."
    },
    {
        "id": 9410,
        "statement": "visits(bald_eagle, bear) :- visits(X, bald_eagle), chases(X, lion).",
        "description": "If something visits the bald eagle and it chases the lion then the bald eagle visits the bear."
    },
    {
        "id": 9411,
        "statement": "visits(lion, bald_eagle) :- chases(X, bear), visits(X, lion).",
        "description": "If something chases the bear and it visits the lion then the lion visits the bald eagle."
    },
    {
        "id": 9412,
        "statement": "chases(bald_eagle, cat) :- sees(X, bald_eagle).",
        "description": "If something sees the bald eagle then the bald eagle chases the cat."
    },
    {
        "id": 9413,
        "statement": "is(cat, rough) :- is(X, rough), visits(X, cat).",
        "description": "If something is rough and it visits the cat then the cat is rough."
    },
    {
        "id": 9414,
        "statement": "chases(bear, bald_eagle) :- chases(X, bear), not is(X, round).",
        "description": "If something chases the bear and it is not round then the bear chases the bald eagle."
    },
    {
        "id": 9415,
        "statement": "eats(X, lion) :- is(X, rough).",
        "description": "If something is rough then it eats the lion."
    },
    {
        "id": 9416,
        "statement": "chases(X, rabbit) :- eats(X, rabbit), is(rabbit, blue).",
        "description": "If something eats the rabbit and the rabbit is blue then it chases the rabbit."
    },
    {
        "id": 9417,
        "statement": "chases(mouse, lion) :- eats(X, mouse).",
        "description": "If something eats the mouse then the mouse chases the lion."
    },
    {
        "id": 9418,
        "statement": "visits(X, lion) :- chases(X, rabbit), chases(X, lion).",
        "description": "If something chases the rabbit and it chases the lion then it visits the lion."
    },
    {
        "id": 9419,
        "statement": "visits(lion, rabbit) :- chases(X, lion), is(X, blue).",
        "description": "If something chases the lion and it is blue then the lion visits the rabbit."
    },
    {
        "id": 9420,
        "statement": "is(X, red) :- is(X, kind), is(X, cold).",
        "description": "All kind, cold things are red."
    },
    {
        "id": 9421,
        "statement": "eats(cow, rabbit) :- visits(X, lion), chases(lion, cow).",
        "description": "If something visits the lion and the lion chases the cow then the cow eats the rabbit."
    },
    {
        "id": 9422,
        "statement": "is(X, furry) :- is(X, round), is(X, smart).",
        "description": "If something is round and smart then it is furry."
    },
    {
        "id": 9423,
        "statement": "is(X, smart) :- is(X, furry), is(X, rough).",
        "description": "All furry, rough things are smart."
    },
    {
        "id": 9424,
        "statement": "is(erin, cold) :- is(erin, quiet).",
        "description": "If Erin is quiet then Erin is cold."
    },
    {
        "id": 9425,
        "statement": "is(charlie, kind) :- is(charlie, quiet), is(charlie, cold).",
        "description": "If Charlie is quiet and Charlie is cold then Charlie is kind."
    },
    {
        "id": 9426,
        "statement": "sees(X, rabbit) :- needs(X, bear).",
        "description": "If someone needs the bear then they see the rabbit."
    },
    {
        "id": 9427,
        "statement": "needs(X, tiger) :- sees(X, rabbit).",
        "description": "If someone sees the rabbit then they need the tiger."
    },
    {
        "id": 9428,
        "statement": "chases(X, bear) :- is(X, big).",
        "description": "If someone is big then they chase the bear."
    },
    {
        "id": 9429,
        "statement": "sees(bear, tiger) :- needs(X, bear).",
        "description": "If someone needs the bear then the bear sees the tiger."
    },
    {
        "id": 9430,
        "statement": "chases(rabbit, tiger) :- is(rabbit, young), sees(rabbit, bear).",
        "description": "If the rabbit is young and the rabbit sees the bear then the rabbit chases the tiger."
    },
    {
        "id": 9431,
        "statement": "chases(X, mouse) :- needs(X, rabbit).",
        "description": "If someone needs the rabbit then they chase the mouse."
    },
    {
        "id": 9432,
        "statement": "is(bear, young) :- needs(mouse, bear).",
        "description": "If the mouse needs the bear then the bear is young."
    },
    {
        "id": 9433,
        "statement": "chases(mouse, tiger) :- chases(rabbit, mouse).",
        "description": "If the rabbit chases the mouse then the mouse chases the tiger."
    },
    {
        "id": 9434,
        "statement": "needs(X, bear) :- is(X, young).",
        "description": "If someone is young then they need the bear."
    },
    {
        "id": 9435,
        "statement": "is(X, green) :- is(X, cold).",
        "description": "If someone is cold then they are green."
    },
    {
        "id": 9436,
        "statement": "is(X, smart) :- is(X, rough), is(X, cold).",
        "description": "If someone is rough and cold then they are smart."
    },
    {
        "id": 9437,
        "statement": "is(X, rough) :- is(X, cold), is(X, green).",
        "description": "Cold, green people are rough."
    },
    {
        "id": 9438,
        "statement": "is(X, round) :- is(X, blue), is(X, green).",
        "description": "Blue, green people are round."
    },
    {
        "id": 9439,
        "statement": "needs(X, cow) :- sees(X, cat).",
        "description": "If someone sees the cat then they need the cow."
    },
    {
        "id": 9440,
        "statement": "is(lion, kind) :- is(lion, green), needs(lion, cat).",
        "description": "If the lion is green and the lion needs the cat then the lion is kind."
    },
    {
        "id": 9441,
        "statement": "needs(cat, cow) :- needs(X, cat), is(X, kind).",
        "description": "If someone needs the cat and they are kind then the cat needs the cow."
    },
    {
        "id": 9442,
        "statement": "needs(cow, rabbit) :- sees(X, lion), sees(X, cow).",
        "description": "If someone sees the lion and they see the cow then the cow needs the rabbit."
    },
    {
        "id": 9443,
        "statement": "is(cow, kind) :- needs(rabbit, cow).",
        "description": "If the rabbit needs the cow then the cow is kind."
    },
    {
        "id": 9444,
        "statement": "needs(cat, lion) :- sees(rabbit, cat).",
        "description": "If the rabbit sees the cat then the cat needs the lion."
    },
    {
        "id": 9445,
        "statement": "is(X, furry) :- is(X, smart), is(X, round).",
        "description": "If someone is smart and round then they are furry."
    },
    {
        "id": 9446,
        "statement": "is(X, quiet) :- is(X, smart), is(X, furry).",
        "description": "If someone is smart and furry then they are quiet."
    },
    {
        "id": 9447,
        "statement": "is(X, nice) :- is(X, smart).",
        "description": "Smart people are nice."
    },
    {
        "id": 9448,
        "statement": "is(anne, furry) :- is(anne, rough), is(anne, big).",
        "description": "If Anne is rough and Anne is big then Anne is furry."
    },
    {
        "id": 9449,
        "statement": "is(squirrel, cold) :- needs(X, squirrel).",
        "description": "If something needs the squirrel then the squirrel is cold."
    },
    {
        "id": 9450,
        "statement": "chases(X, squirrel) :- is(X, red).",
        "description": "If something is red then it chases the squirrel."
    },
    {
        "id": 9451,
        "statement": "is(X, cold) :- needs(X, squirrel), is(X, young).",
        "description": "If something needs the squirrel and it is young then it is cold."
    },
    {
        "id": 9452,
        "statement": "chases(squirrel, lion) :- is(squirrel, cold), likes(squirrel, lion).",
        "description": "If the squirrel is cold and the squirrel likes the lion then the squirrel chases the lion."
    },
    {
        "id": 9453,
        "statement": "likes(squirrel, lion) :- chases(squirrel, rabbit), likes(squirrel, rabbit).",
        "description": "If the squirrel chases the rabbit and the squirrel likes the rabbit then the squirrel likes the lion."
    },
    {
        "id": 9454,
        "statement": "chases(lion, rabbit) :- is(X, round), needs(X, lion).",
        "description": "If something is round and it needs the lion then the lion chases the rabbit."
    },
    {
        "id": 9455,
        "statement": "is(rabbit, red) :- chases(lion, rabbit).",
        "description": "If the lion chases the rabbit then the rabbit is red."
    },
    {
        "id": 9456,
        "statement": "is(X, green) :- is(X, rough), is(X, round).",
        "description": "If something is rough and round then it is green."
    },
    {
        "id": 9457,
        "statement": "is(X, green) :- is(X, red), is(X, rough).",
        "description": "If something is red and rough then it is green."
    },
    {
        "id": 9458,
        "statement": "is(X, rough) :- is(X, red), is(X, kind).",
        "description": "Red, kind things are rough."
    },
    {
        "id": 9459,
        "statement": "is(X, rough) :- is(X, kind), is(X, young).",
        "description": "Kind, young things are rough."
    },
    {
        "id": 9460,
        "statement": "is(X, kind) :- eats(X, bear), not sees(X, lion).",
        "description": "If something eats the bear and it does not see the lion then it is kind."
    },
    {
        "id": 9461,
        "statement": "is(cow, round) :- chases(X, cow).",
        "description": "If something chases the cow then the cow is round."
    },
    {
        "id": 9462,
        "statement": "chases(bear, mouse) :- eats(X, bear).",
        "description": "If something eats the bear then the bear chases the mouse."
    },
    {
        "id": 9463,
        "statement": "chases(mouse, lion) :- eats(X, cow), not sees(X, mouse).",
        "description": "If something eats the cow and it does not see the mouse then the mouse chases the lion."
    },
    {
        "id": 9464,
        "statement": "eats(X, bear) :- is(X, green).",
        "description": "If something is green then it eats the bear."
    },
    {
        "id": 9465,
        "statement": "chases(lion, mouse) :- sees(X, lion).",
        "description": "If something sees the lion then the lion chases the mouse."
    },
    {
        "id": 9466,
        "statement": "chases(bear, cow) :- sees(X, bear), eats(X, bear).",
        "description": "If something sees the bear and it eats the bear then the bear chases the cow."
    },
    {
        "id": 9467,
        "statement": "visits(X, cow) :- is(X, nice).",
        "description": "If something is nice then it visits the cow."
    },
    {
        "id": 9468,
        "statement": "visits(X, cow) :- likes(X, cow).",
        "description": "If something likes the cow then it visits the cow."
    },
    {
        "id": 9469,
        "statement": "needs(X, squirrel) :- is(X, rough), not needs(X, cow).",
        "description": "If something is rough and it does not need the cow then it needs the squirrel."
    },
    {
        "id": 9470,
        "statement": "likes(X, cow) :- is(X, round), needs(X, rabbit).",
        "description": "If something is round and it needs the rabbit then it likes the cow."
    },
    {
        "id": 9471,
        "statement": "needs(X, bear) :- is(X, round), is(X, green).",
        "description": "If something is round and green then it needs the bear."
    },
    {
        "id": 9472,
        "statement": "is(X, green) :- likes(X, rabbit).",
        "description": "If something likes the rabbit then it is green."
    },
    {
        "id": 9473,
        "statement": "likes(squirrel, rabbit) :- not visits(rabbit, squirrel).",
        "description": "If the rabbit does not visit the squirrel then the squirrel likes the rabbit."
    },
    {
        "id": 9474,
        "statement": "eats(squirrel, bear) :- chases(X, squirrel).",
        "description": "If something chases the squirrel then the squirrel eats the bear."
    },
    {
        "id": 9475,
        "statement": "eats(X, tiger) :- eats(X, lion).",
        "description": "If something eats the lion then it eats the tiger."
    },
    {
        "id": 9476,
        "statement": "eats(squirrel, lion) :- chases(X, squirrel).",
        "description": "If something chases the squirrel then the squirrel eats the lion."
    },
    {
        "id": 9477,
        "statement": "chases(squirrel, tiger) :- is(squirrel, rough).",
        "description": "If the squirrel is rough then the squirrel chases the tiger."
    },
    {
        "id": 9478,
        "statement": "needs(bear, tiger) :- eats(X, squirrel), needs(X, bear).",
        "description": "If something eats the squirrel and it needs the bear then the bear needs the tiger."
    },
    {
        "id": 9479,
        "statement": "chases(X, squirrel) :- eats(X, tiger).",
        "description": "If something eats the tiger then it chases the squirrel."
    },
    {
        "id": 9480,
        "statement": "is(X, quiet) :- is(X, kind), not is(X, cold).",
        "description": "If something is kind and not cold then it is quiet."
    },
    {
        "id": 9481,
        "statement": "is(X, green) :- is(X, quiet), is(X, white).",
        "description": "Quiet, white things are green."
    },
    {
        "id": 9482,
        "statement": "is(anne, kind) :- is(anne, white).",
        "description": "If Anne is white then Anne is kind."
    },
    {
        "id": 9483,
        "statement": "sees(mouse, tiger) :- likes(X, mouse).",
        "description": "If something likes the mouse then the mouse sees the tiger."
    },
    {
        "id": 9484,
        "statement": "eats(squirrel, cat) :- sees(X, squirrel), likes(squirrel, cat).",
        "description": "If something sees the squirrel and the squirrel likes the cat then the squirrel eats the cat."
    },
    {
        "id": 9485,
        "statement": "is(X, big) :- is(X, kind), eats(X, cat).",
        "description": "If something is kind and it eats the cat then it is big."
    },
    {
        "id": 9486,
        "statement": "sees(tiger, squirrel) :- likes(X, tiger).",
        "description": "If something likes the tiger then the tiger sees the squirrel."
    },
    {
        "id": 9487,
        "statement": "likes(X, cat) :- is(X, kind).",
        "description": "If something is kind then it likes the cat."
    },
    {
        "id": 9488,
        "statement": "eats(mouse, tiger) :- likes(squirrel, mouse).",
        "description": "If the squirrel likes the mouse then the mouse eats the tiger."
    },
    {
        "id": 9489,
        "statement": "likes(X, tiger) :- is(X, blue).",
        "description": "If something is blue then it likes the tiger."
    },
    {
        "id": 9490,
        "statement": "is(squirrel, rough) :- is(squirrel, kind).",
        "description": "If the squirrel is kind then the squirrel is rough."
    },
    {
        "id": 9491,
        "statement": "is(X, blue) :- is(X, big), not likes(X, mouse).",
        "description": "If something is big and it does not like the mouse then it is blue."
    },
    {
        "id": 9492,
        "statement": "is(X, white) :- is(X, red), is(X, cold).",
        "description": "Red, cold things are white."
    },
    {
        "id": 9493,
        "statement": "is(X, red) :- is(X, quiet), is(X, smart).",
        "description": "If something is quiet and smart then it is red."
    },
    {
        "id": 9494,
        "statement": "is(anne, cold) :- is(anne, big), is(anne, white).",
        "description": "If Anne is big and Anne is white then Anne is cold."
    },
    {
        "id": 9495,
        "statement": "is(gary, quiet) :- is(gary, big).",
        "description": "If Gary is big then Gary is quiet."
    },
    {
        "id": 9496,
        "statement": "is(X, quiet) :- is(X, white), is(X, kind).",
        "description": "All white, kind things are quiet."
    },
    {
        "id": 9497,
        "statement": "needs(X, rabbit) :- is(X, nice), likes(X, cow).",
        "description": "If something is nice and it likes the cow then it needs the rabbit."
    },
    {
        "id": 9498,
        "statement": "needs(X, squirrel) :- is(X, young).",
        "description": "If something is young then it needs the squirrel."
    },
    {
        "id": 9499,
        "statement": "likes(X, cow) :- is(X, kind).",
        "description": "If something is kind then it likes the cow."
    },
    {
        "id": 9500,
        "statement": "eats(rabbit, squirrel) :- eats(X, rabbit), needs(rabbit, cow).",
        "description": "If something eats the rabbit and the rabbit needs the cow then the rabbit eats the squirrel."
    },
    {
        "id": 9501,
        "statement": "eats(rabbit, dog) :- needs(X, rabbit).",
        "description": "If something needs the rabbit then the rabbit eats the dog."
    },
    {
        "id": 9502,
        "statement": "is(X, young) :- needs(X, dog), eats(dog, rabbit).",
        "description": "If something needs the dog and the dog eats the rabbit then it is young."
    },
    {
        "id": 9503,
        "statement": "likes(rabbit, cow) :- is(X, blue), needs(X, rabbit).",
        "description": "If something is blue and it needs the rabbit then the rabbit likes the cow."
    },
    {
        "id": 9504,
        "statement": "eats(X, dog) :- needs(X, dog), is(dog, blue).",
        "description": "If something needs the dog and the dog is blue then it eats the dog."
    },
    {
        "id": 9505,
        "statement": "is(X, kind) :- eats(X, dog).",
        "description": "If something eats the dog then it is kind."
    },
    {
        "id": 9506,
        "statement": "is(X, red) :- is(X, round), not is(X, cold).",
        "description": "If someone is round and not cold then they are red."
    },
    {
        "id": 9507,
        "statement": "is(bob, rough) :- is(bob, quiet).",
        "description": "If Bob is quiet then Bob is rough."
    },
    {
        "id": 9508,
        "statement": "is(harry, quiet) :- is(harry, rough), not is(harry, kind).",
        "description": "If Harry is rough and Harry is not kind then Harry is quiet."
    },
    {
        "id": 9509,
        "statement": "is(X, rough) :- is(X, white).",
        "description": "White people are rough."
    },
    {
        "id": 9510,
        "statement": "is(X, round) :- is(X, furry), is(X, green).",
        "description": "Furry, green people are round."
    },
    {
        "id": 9511,
        "statement": "is(X, quiet) :- is(X, red), is(X, young).",
        "description": "If someone is red and young then they are quiet."
    },
    {
        "id": 9512,
        "statement": "is(X, round) :- is(X, furry), is(X, quiet).",
        "description": "All furry, quiet people are round."
    },
    {
        "id": 9513,
        "statement": "is(X, furry) :- is(X, round), is(X, green).",
        "description": "Round, green people are furry."
    },
    {
        "id": 9514,
        "statement": "is(X, quiet) :- is(X, furry), is(X, rough).",
        "description": "All furry, rough people are quiet."
    },
    {
        "id": 9515,
        "statement": "sees(bear, cow) :- likes(X, bear).",
        "description": "If something likes the bear then the bear sees the cow."
    },
    {
        "id": 9516,
        "statement": "visits(X, dog) :- is(X, green).",
        "description": "If something is green then it visits the dog."
    },
    {
        "id": 9517,
        "statement": "is(dog, kind) :- sees(X, dog), visits(dog, bear).",
        "description": "If something sees the dog and the dog visits the bear then the dog is kind."
    },
    {
        "id": 9518,
        "statement": "visits(bear, cow) :- likes(X, bear).",
        "description": "If something likes the bear then the bear visits the cow."
    },
    {
        "id": 9519,
        "statement": "is(dog, green) :- visits(X, dog).",
        "description": "If something visits the dog then the dog is green."
    },
    {
        "id": 9520,
        "statement": "is(X, young) :- is(X, red), is(X, rough).",
        "description": "Red, rough things are young."
    },
    {
        "id": 9521,
        "statement": "sees(X, cow) :- is(X, rough), is(X, big).",
        "description": "If someone is rough and big then they see the cow."
    },
    {
        "id": 9522,
        "statement": "is(X, big) :- sees(X, mouse).",
        "description": "If someone sees the mouse then they are big."
    },
    {
        "id": 9523,
        "statement": "sees(X, bald_eagle) :- sees(X, mouse), sees(X, cow).",
        "description": "If someone sees the mouse and they see the cow then they see the bald eagle."
    },
    {
        "id": 9524,
        "statement": "needs(bald_eagle, mouse) :- eats(X, bald_eagle).",
        "description": "If someone eats the bald eagle then the bald eagle needs the mouse."
    },
    {
        "id": 9525,
        "statement": "sees(bald_eagle, mouse) :- sees(X, bald_eagle).",
        "description": "If someone sees the bald eagle then the bald eagle sees the mouse."
    },
    {
        "id": 9526,
        "statement": "needs(X, cat) :- is(X, rough).",
        "description": "If someone is rough then they need the cat."
    },
    {
        "id": 9527,
        "statement": "needs(X, mouse) :- sees(X, bald_eagle), eats(X, cow).",
        "description": "If someone sees the bald eagle and they eat the cow then they need the mouse."
    },
    {
        "id": 9528,
        "statement": "sees(X, cow) :- is(X, big), is(X, young).",
        "description": "If someone is big and young then they see the cow."
    },
    {
        "id": 9529,
        "statement": "is(X, rough) :- is(X, cold), is(X, kind).",
        "description": "Cold, kind things are rough."
    },
    {
        "id": 9530,
        "statement": "is(X, young) :- is(X, blue), is(X, rough).",
        "description": "All blue, rough things are young."
    },
    {
        "id": 9531,
        "statement": "is(X, cold) :- is(X, young), is(X, smart).",
        "description": "Young, smart things are cold."
    },
    {
        "id": 9532,
        "statement": "is(X, rough) :- is(X, nice), is(X, quiet).",
        "description": "All nice, quiet people are rough."
    },
    {
        "id": 9533,
        "statement": "is(X, cold) :- is(X, round), is(X, rough).",
        "description": "All round, rough people are cold."
    },
    {
        "id": 9534,
        "statement": "is(X, white) :- is(X, quiet), is(X, cold).",
        "description": "Quiet, cold people are white."
    },
    {
        "id": 9535,
        "statement": "is(X, cold) :- is(X, quiet), is(X, rough).",
        "description": "Quiet, rough people are cold."
    },
    {
        "id": 9536,
        "statement": "likes(X, bear) :- is(X, young), sees(X, bald_eagle).",
        "description": "If something is young and it sees the bald eagle then it likes the bear."
    },
    {
        "id": 9537,
        "statement": "sees(X, bear) :- likes(X, cow).",
        "description": "If something likes the cow then it sees the bear."
    },
    {
        "id": 9538,
        "statement": "is(X, green) :- sees(X, tiger), likes(tiger, bald_eagle).",
        "description": "If something sees the tiger and the tiger likes the bald eagle then it is green."
    },
    {
        "id": 9539,
        "statement": "sees(X, tiger) :- is(X, kind), eats(X, bald_eagle).",
        "description": "If something is kind and it eats the bald eagle then it sees the tiger."
    },
    {
        "id": 9540,
        "statement": "sees(bear, tiger) :- sees(X, tiger), eats(tiger, bear).",
        "description": "If something sees the tiger and the tiger eats the bear then the bear sees the tiger."
    },
    {
        "id": 9541,
        "statement": "likes(tiger, bald_eagle) :- sees(X, tiger).",
        "description": "If something sees the tiger then the tiger likes the bald eagle."
    },
    {
        "id": 9542,
        "statement": "likes(bald_eagle, tiger) :- eats(X, bald_eagle).",
        "description": "If something eats the bald eagle then the bald eagle likes the tiger."
    },
    {
        "id": 9543,
        "statement": "is(X, kind) :- is(X, cold), is(X, green).",
        "description": "All cold, green things are kind."
    },
    {
        "id": 9544,
        "statement": "needs(X, mouse) :- is(X, big), chases(X, squirrel).",
        "description": "If something is big and it chases the squirrel then it needs the mouse."
    },
    {
        "id": 9545,
        "statement": "is(X, young) :- needs(X, mouse).",
        "description": "If something needs the mouse then it is young."
    },
    {
        "id": 9546,
        "statement": "needs(lion, mouse) :- likes(X, lion).",
        "description": "If something likes the lion then the lion needs the mouse."
    },
    {
        "id": 9547,
        "statement": "chases(mouse, squirrel) :- likes(X, lion), likes(X, mouse).",
        "description": "If something likes the lion and it likes the mouse then the mouse chases the squirrel."
    },
    {
        "id": 9548,
        "statement": "likes(lion, squirrel) :- is(X, round), likes(X, lion).",
        "description": "If something is round and it likes the lion then the lion likes the squirrel."
    },
    {
        "id": 9549,
        "statement": "likes(X, squirrel) :- chases(X, mouse), is(X, round).",
        "description": "If something chases the mouse and it is round then it likes the squirrel."
    },
    {
        "id": 9550,
        "statement": "is(X, young) :- is(X, green), is(X, round).",
        "description": "All green, round things are young."
    },
    {
        "id": 9551,
        "statement": "is(X, furry) :- is(X, red), is(X, round).",
        "description": "All red, round things are furry."
    },
    {
        "id": 9552,
        "statement": "eats(cow, mouse) :- visits(rabbit, cow), is(cow, kind).",
        "description": "If the rabbit visits the cow and the cow is kind then the cow eats the mouse."
    },
    {
        "id": 9553,
        "statement": "visits(rabbit, cow) :- is(rabbit, blue).",
        "description": "If the rabbit is blue then the rabbit visits the cow."
    },
    {
        "id": 9554,
        "statement": "visits(X, rabbit) :- visits(X, cow).",
        "description": "If something visits the cow then it visits the rabbit."
    },
    {
        "id": 9555,
        "statement": "sees(rabbit, mouse) :- visits(X, rabbit).",
        "description": "If something visits the rabbit then the rabbit sees the mouse."
    },
    {
        "id": 9556,
        "statement": "visits(rabbit, cat) :- sees(X, rabbit), not is(X, green).",
        "description": "If something sees the rabbit and it is not green then the rabbit visits the cat."
    },
    {
        "id": 9557,
        "statement": "visits(mouse, cat) :- sees(X, mouse).",
        "description": "If something sees the mouse then the mouse visits the cat."
    },
    {
        "id": 9558,
        "statement": "visits(cat, cow) :- visits(X, cat).",
        "description": "If something visits the cat then the cat visits the cow."
    },
    {
        "id": 9559,
        "statement": "eats(X, cow) :- visits(X, mouse).",
        "description": "If something visits the mouse then it eats the cow."
    },
    {
        "id": 9560,
        "statement": "eats(cat, rabbit) :- sees(X, cat).",
        "description": "If something sees the cat then the cat eats the rabbit."
    },
    {
        "id": 9561,
        "statement": "is(X, cold) :- is(X, quiet), is(X, blue).",
        "description": "Quiet, blue people are cold."
    },
    {
        "id": 9562,
        "statement": "is(X, red) :- is(X, nice), is(X, blue).",
        "description": "If someone is nice and blue then they are red."
    },
    {
        "id": 9563,
        "statement": "is(X, quiet) :- is(X, smart), is(X, nice).",
        "description": "If someone is smart and nice then they are quiet."
    },
    {
        "id": 9564,
        "statement": "chases(X, mouse) :- chases(X, bear), is(X, green).",
        "description": "If someone chases the bear and they are green then they chase the mouse."
    },
    {
        "id": 9565,
        "statement": "sees(mouse, cow) :- likes(X, mouse), sees(X, squirrel).",
        "description": "If someone likes the mouse and they see the squirrel then the mouse sees the cow."
    },
    {
        "id": 9566,
        "statement": "sees(X, bear) :- is(X, blue).",
        "description": "If someone is blue then they see the bear."
    },
    {
        "id": 9567,
        "statement": "sees(X, bear) :- likes(X, bear).",
        "description": "If someone likes the bear then they see the bear."
    },
    {
        "id": 9568,
        "statement": "likes(bear, squirrel) :- likes(X, bear).",
        "description": "If someone likes the bear then the bear likes the squirrel."
    },
    {
        "id": 9569,
        "statement": "is(squirrel, green) :- likes(mouse, squirrel).",
        "description": "If the mouse likes the squirrel then the squirrel is green."
    },
    {
        "id": 9570,
        "statement": "sees(X, mouse) :- sees(X, bear).",
        "description": "If someone sees the bear then they see the mouse."
    },
    {
        "id": 9571,
        "statement": "likes(mouse, squirrel) :- chases(X, cow), sees(cow, mouse).",
        "description": "If someone chases the cow and the cow sees the mouse then the mouse likes the squirrel."
    },
    {
        "id": 9572,
        "statement": "sees(bear, cow) :- chases(X, bear), not is(X, nice).",
        "description": "If someone chases the bear and they are not nice then the bear sees the cow."
    },
    {
        "id": 9573,
        "statement": "is(X, furry) :- is(X, white), is(X, rough).",
        "description": "If something is white and rough then it is furry."
    },
    {
        "id": 9574,
        "statement": "is(harry, nice) :- is(harry, furry), is(harry, white).",
        "description": "If Harry is furry and Harry is white then Harry is nice."
    },
    {
        "id": 9575,
        "statement": "is(X, white) :- is(X, kind), is(X, rough).",
        "description": "If something is kind and rough then it is white."
    },
    {
        "id": 9576,
        "statement": "is(X, kind) :- is(X, furry), is(X, nice).",
        "description": "Furry, nice things are kind."
    },
    {
        "id": 9577,
        "statement": "chases(X, dog) :- is(X, rough), chases(X, bald_eagle).",
        "description": "If someone is rough and they chase the bald eagle then they chase the dog."
    },
    {
        "id": 9578,
        "statement": "is(dog, big) :- is(X, big), chases(X, dog).",
        "description": "If someone is big and they chase the dog then the dog is big."
    },
    {
        "id": 9579,
        "statement": "eats(mouse, bald_eagle) :- is(X, kind), eats(X, mouse).",
        "description": "If someone is kind and they eat the mouse then the mouse eats the bald eagle."
    },
    {
        "id": 9580,
        "statement": "likes(dog, bear) :- likes(X, dog).",
        "description": "If someone likes the dog then the dog likes the bear."
    },
    {
        "id": 9581,
        "statement": "chases(bear, mouse) :- likes(X, bear).",
        "description": "If someone likes the bear then the bear chases the mouse."
    },
    {
        "id": 9582,
        "statement": "likes(X, dog) :- is(X, big).",
        "description": "If someone is big then they like the dog."
    },
    {
        "id": 9583,
        "statement": "is(X, rough) :- likes(X, dog).",
        "description": "If someone likes the dog then they are rough."
    },
    {
        "id": 9584,
        "statement": "is(bear, kind) :- likes(X, dog), likes(X, bear).",
        "description": "If someone likes the dog and they like the bear then the bear is kind."
    },
    {
        "id": 9585,
        "statement": "eats(dog, mouse) :- chases(mouse, dog), chases(dog, mouse).",
        "description": "If the mouse chases the dog and the dog chases the mouse then the dog eats the mouse."
    },
    {
        "id": 9586,
        "statement": "visits(X, bald_eagle) :- is(X, cold), not is(X, nice).",
        "description": "If something is cold and not nice then it visits the bald eagle."
    },
    {
        "id": 9587,
        "statement": "needs(X, cow) :- chases(X, bald_eagle).",
        "description": "If something chases the bald eagle then it needs the cow."
    },
    {
        "id": 9588,
        "statement": "visits(cow, mouse) :- needs(cow, mouse).",
        "description": "If the cow needs the mouse then the cow visits the mouse."
    },
    {
        "id": 9589,
        "statement": "needs(bald_eagle, mouse) :- visits(X, bald_eagle), not is(bald_eagle, nice).",
        "description": "If something visits the bald eagle and the bald eagle is not nice then the bald eagle needs the mouse."
    },
    {
        "id": 9590,
        "statement": "is(cat, cold) :- not needs(mouse, cat), not is(mouse, red).",
        "description": "If the mouse does not need the cat and the mouse is not red then the cat is cold."
    },
    {
        "id": 9591,
        "statement": "chases(bald_eagle, mouse) :- is(bald_eagle, cold), needs(bald_eagle, mouse).",
        "description": "If the bald eagle is cold and the bald eagle needs the mouse then the bald eagle chases the mouse."
    },
    {
        "id": 9592,
        "statement": "chases(cow, bald_eagle) :- chases(X, cow), needs(X, cow).",
        "description": "If something chases the cow and it needs the cow then the cow chases the bald eagle."
    },
    {
        "id": 9593,
        "statement": "is(harry, white) :- is(harry, kind), is(harry, smart).",
        "description": "If Harry is kind and Harry is smart then Harry is white."
    },
    {
        "id": 9594,
        "statement": "is(erin, nice) :- is(erin, big).",
        "description": "If Erin is big then Erin is nice."
    },
    {
        "id": 9595,
        "statement": "is(X, smart) :- is(X, big), is(X, white).",
        "description": "Big, white people are smart."
    },
    {
        "id": 9596,
        "statement": "is(X, white) :- is(X, cold), is(X, nice).",
        "description": "Cold, nice people are white."
    },
    {
        "id": 9597,
        "statement": "is(X, kind) :- is(X, nice), is(X, big).",
        "description": "Nice, big people are kind."
    },
    {
        "id": 9598,
        "statement": "is(X, cold) :- is(X, kind).",
        "description": "All kind people are cold."
    },
    {
        "id": 9599,
        "statement": "is(X, rough) :- is(X, red), is(X, blue).",
        "description": "Red, blue things are rough."
    },
    {
        "id": 9600,
        "statement": "is(X, cold) :- is(X, blue).",
        "description": "If something is blue then it is cold."
    },
    {
        "id": 9601,
        "statement": "is(X, smart) :- is(X, blue), not is(X, red).",
        "description": "If something is blue and not red then it is smart."
    },
    {
        "id": 9602,
        "statement": "is(X, smart) :- is(X, red), is(X, white).",
        "description": "If something is red and white then it is smart."
    },
    {
        "id": 9603,
        "statement": "is(erin, blue) :- is(erin, smart), is(erin, cold).",
        "description": "If Erin is smart and Erin is cold then Erin is blue."
    },
    {
        "id": 9604,
        "statement": "is(X, cold) :- is(X, blue), is(X, rough).",
        "description": "Blue, rough people are cold."
    },
    {
        "id": 9605,
        "statement": "is(X, kind) :- is(X, round), is(X, cold).",
        "description": "Round, cold people are kind."
    },
    {
        "id": 9606,
        "statement": "is(X, young) :- is(X, round), not is(X, blue).",
        "description": "If someone is round and not blue then they are young."
    },
    {
        "id": 9607,
        "statement": "is(X, round) :- is(X, blue), is(X, young).",
        "description": "All blue, young people are round."
    },
    {
        "id": 9608,
        "statement": "is(X, rough) :- is(X, kind), is(X, round).",
        "description": "All kind, round people are rough."
    },
    {
        "id": 9609,
        "statement": "is(X, red) :- is(X, white), is(X, smart).",
        "description": "If someone is white and smart then they are red."
    },
    {
        "id": 9610,
        "statement": "is(X, furry) :- is(X, red), is(X, smart).",
        "description": "Red, smart people are furry."
    },
    {
        "id": 9611,
        "statement": "is(X, furry) :- is(X, smart), is(X, white).",
        "description": "If someone is smart and white then they are furry."
    },
    {
        "id": 9612,
        "statement": "is(X, furry) :- is(X, smart), is(X, young).",
        "description": "Smart, young people are furry."
    },
    {
        "id": 9613,
        "statement": "is(X, kind) :- is(X, smart), is(X, blue).",
        "description": "If someone is smart and blue then they are kind."
    },
    {
        "id": 9614,
        "statement": "is(X, young) :- is(X, nice), is(X, smart).",
        "description": "Nice, smart people are young."
    },
    {
        "id": 9615,
        "statement": "is(X, white) :- is(X, rough), is(X, quiet).",
        "description": "All rough, quiet things are white."
    },
    {
        "id": 9616,
        "statement": "is(X, quiet) :- is(X, round).",
        "description": "Round things are quiet."
    },
    {
        "id": 9617,
        "statement": "is(X, round) :- is(X, rough), is(X, kind).",
        "description": "If something is rough and kind then it is round."
    },
    {
        "id": 9618,
        "statement": "is(X, furry) :- is(X, smart), is(X, rough).",
        "description": "All smart, rough things are furry."
    },
    {
        "id": 9619,
        "statement": "is(X, rough) :- is(X, round), is(X, quiet).",
        "description": "If something is round and quiet then it is rough."
    },
    {
        "id": 9620,
        "statement": "is(X, big) :- is(X, red), is(X, quiet).",
        "description": "All red, quiet things are big."
    },
    {
        "id": 9621,
        "statement": "is(X, smart) :- is(X, green), not is(X, blue).",
        "description": "If something is green and not blue then it is smart."
    },
    {
        "id": 9622,
        "statement": "visits(dog, rabbit) :- likes(X, dog).",
        "description": "If someone likes the dog then the dog visits the rabbit."
    },
    {
        "id": 9623,
        "statement": "visits(X, mouse) :- likes(X, dog).",
        "description": "If someone likes the dog then they visit the mouse."
    },
    {
        "id": 9624,
        "statement": "needs(X, dog) :- visits(X, dog), needs(dog, rabbit).",
        "description": "If someone visits the dog and the dog needs the rabbit then they need the dog."
    },
    {
        "id": 9625,
        "statement": "visits(X, rabbit) :- visits(X, dog).",
        "description": "If someone visits the dog then they visit the rabbit."
    },
    {
        "id": 9626,
        "statement": "visits(mouse, rabbit) :- needs(X, mouse).",
        "description": "If someone needs the mouse then the mouse visits the rabbit."
    },
    {
        "id": 9627,
        "statement": "is(rabbit, round) :- is(X, nice), visits(X, rabbit).",
        "description": "If someone is nice and they visit the rabbit then the rabbit is round."
    },
    {
        "id": 9628,
        "statement": "is(X, round) :- visits(X, rabbit).",
        "description": "If someone visits the rabbit then they are round."
    },
    {
        "id": 9629,
        "statement": "needs(X, mouse) :- is(X, round), needs(X, bald_eagle).",
        "description": "If someone is round and they need the bald eagle then they need the mouse."
    },
    {
        "id": 9630,
        "statement": "is(X, smart) :- is(X, nice), not is(X, furry).",
        "description": "If someone is nice and not furry then they are smart."
    },
    {
        "id": 9631,
        "statement": "is(X, smart) :- is(X, nice), is(X, rough).",
        "description": "Nice, rough people are smart."
    },
    {
        "id": 9632,
        "statement": "is(X, smart) :- is(X, nice), is(X, white).",
        "description": "Nice, white people are smart."
    },
    {
        "id": 9633,
        "statement": "is(X, white) :- is(X, nice), is(X, smart).",
        "description": "If someone is nice and smart then they are white."
    },
    {
        "id": 9634,
        "statement": "is(X, kind) :- is(X, rough), not is(X, white).",
        "description": "If someone is rough and not white then they are kind."
    },
    {
        "id": 9635,
        "statement": "is(X, cold) :- is(X, green), is(X, smart).",
        "description": "All green, smart people are cold."
    },
    {
        "id": 9636,
        "statement": "is(X, green) :- is(X, red), is(X, cold).",
        "description": "Red, cold people are green."
    },
    {
        "id": 9637,
        "statement": "is(anne, kind) :- is(anne, red).",
        "description": "If Anne is red then Anne is kind."
    },
    {
        "id": 9638,
        "statement": "is(X, kind) :- is(X, blue), is(X, green).",
        "description": "If someone is blue and green then they are kind."
    },
    {
        "id": 9639,
        "statement": "is(X, furry) :- is(X, blue), is(X, green).",
        "description": "All blue, green people are furry."
    },
    {
        "id": 9640,
        "statement": "is(X, furry) :- is(X, young), is(X, green).",
        "description": "Young, green people are furry."
    },
    {
        "id": 9641,
        "statement": "is(anne, cold) :- is(anne, big).",
        "description": "If Anne is big then Anne is cold."
    },
    {
        "id": 9642,
        "statement": "is(X, big) :- is(X, white).",
        "description": "All white people are big."
    },
    {
        "id": 9643,
        "statement": "is(X, white) :- is(X, round), is(X, quiet).",
        "description": "All round, quiet people are white."
    },
    {
        "id": 9644,
        "statement": "is(X, cold) :- is(X, kind), is(X, smart).",
        "description": "Kind, smart people are cold."
    },
    {
        "id": 9645,
        "statement": "is(fiona, kind) :- is(fiona, white).",
        "description": "If Fiona is white then Fiona is kind."
    },
    {
        "id": 9646,
        "statement": "is(X, rough) :- is(X, white), is(X, quiet).",
        "description": "White, quiet people are rough."
    },
    {
        "id": 9647,
        "statement": "is(X, rough) :- is(X, furry), is(X, quiet).",
        "description": "All furry, quiet people are rough."
    },
    {
        "id": 9648,
        "statement": "is(X, nice) :- is(X, rough), is(X, kind).",
        "description": "Rough, kind people are nice."
    },
    {
        "id": 9649,
        "statement": "is(X, big) :- is(X, blue), is(X, nice).",
        "description": "Blue, nice people are big."
    },
    {
        "id": 9650,
        "statement": "is(X, cold) :- is(X, kind), is(X, blue).",
        "description": "All kind, blue people are cold."
    },
    {
        "id": 9651,
        "statement": "is(gary, cold) :- is(gary, big).",
        "description": "If Gary is big then Gary is cold."
    },
    {
        "id": 9652,
        "statement": "is(X, nice) :- is(X, kind), is(X, cold).",
        "description": "If someone is kind and cold then they are nice."
    },
    {
        "id": 9653,
        "statement": "is(bald_eagle, big) :- visits(X, bald_eagle).",
        "description": "If something visits the bald eagle then the bald eagle is big."
    },
    {
        "id": 9654,
        "statement": "eats(X, bear) :- is(X, blue).",
        "description": "If something is blue then it eats the bear."
    },
    {
        "id": 9655,
        "statement": "is(X, red) :- visits(X, bald_eagle), visits(bald_eagle, bear).",
        "description": "If something visits the bald eagle and the bald eagle visits the bear then it is red."
    },
    {
        "id": 9656,
        "statement": "is(cow, blue) :- is(X, blue), visits(X, cow).",
        "description": "If something is blue and it visits the cow then the cow is blue."
    },
    {
        "id": 9657,
        "statement": "eats(X, lion) :- is(X, red).",
        "description": "If something is red then it eats the lion."
    },
    {
        "id": 9658,
        "statement": "visits(X, cow) :- eats(X, lion), eats(lion, bear).",
        "description": "If something eats the lion and the lion eats the bear then it visits the cow."
    },
    {
        "id": 9659,
        "statement": "likes(cow, bald_eagle) :- is(cow, big), not is(cow, red).",
        "description": "If the cow is big and the cow is not red then the cow likes the bald eagle."
    },
    {
        "id": 9660,
        "statement": "sees(X, tiger) :- chases(X, bald_eagle), not is(bald_eagle, cold).",
        "description": "If someone chases the bald eagle and the bald eagle is not cold then they see the tiger."
    },
    {
        "id": 9661,
        "statement": "is(tiger, young) :- chases(tiger, bald_eagle), sees(tiger, cow).",
        "description": "If the tiger chases the bald eagle and the tiger sees the cow then the tiger is young."
    },
    {
        "id": 9662,
        "statement": "chases(dog, bald_eagle) :- chases(X, dog), sees(X, dog).",
        "description": "If someone chases the dog and they see the dog then the dog chases the bald eagle."
    },
    {
        "id": 9663,
        "statement": "is(bald_eagle, young) :- sees(bald_eagle, tiger).",
        "description": "If the bald eagle sees the tiger then the bald eagle is young."
    },
    {
        "id": 9664,
        "statement": "is(X, blue) :- visits(X, bald_eagle).",
        "description": "If someone visits the bald eagle then they are blue."
    },
    {
        "id": 9665,
        "statement": "sees(X, dog) :- chases(X, tiger).",
        "description": "If someone chases the tiger then they see the dog."
    },
    {
        "id": 9666,
        "statement": "chases(X, tiger) :- sees(X, tiger), not visits(X, tiger).",
        "description": "If someone sees the tiger and they do not visit the tiger then they chase the tiger."
    },
    {
        "id": 9667,
        "statement": "is(erin, green) :- is(erin, smart).",
        "description": "If Erin is smart then Erin is green."
    },
    {
        "id": 9668,
        "statement": "is(X, big) :- is(X, smart), is(X, blue).",
        "description": "If something is smart and blue then it is big."
    },
    {
        "id": 9669,
        "statement": "is(dave, big) :- is(dave, blue).",
        "description": "If Dave is blue then Dave is big."
    },
    {
        "id": 9670,
        "statement": "is(X, green) :- is(X, blue), is(X, smart).",
        "description": "All blue, smart things are green."
    },
    {
        "id": 9671,
        "statement": "is(X, red) :- is(X, big), is(X, smart).",
        "description": "Big, smart things are red."
    },
    {
        "id": 9672,
        "statement": "is(X, blue) :- is(X, red), is(X, rough).",
        "description": "If something is red and rough then it is blue."
    },
    {
        "id": 9673,
        "statement": "is(X, blue) :- is(X, red), is(X, quiet).",
        "description": "Red, quiet people are blue."
    },
    {
        "id": 9674,
        "statement": "is(X, red) :- eats(X, mouse), is(X, kind).",
        "description": "If something eats the mouse and it is kind then it is red."
    },
    {
        "id": 9675,
        "statement": "is(cat, big) :- needs(X, cat).",
        "description": "If something needs the cat then the cat is big."
    },
    {
        "id": 9676,
        "statement": "is(tiger, red) :- sees(cat, tiger), is(cat, red).",
        "description": "If the cat sees the tiger and the cat is red then the tiger is red."
    },
    {
        "id": 9677,
        "statement": "needs(lion, cat) :- sees(X, lion), is(lion, big).",
        "description": "If something sees the lion and the lion is big then the lion needs the cat."
    },
    {
        "id": 9678,
        "statement": "needs(mouse, tiger) :- needs(X, tiger), needs(tiger, mouse).",
        "description": "If something needs the tiger and the tiger needs the mouse then the mouse needs the tiger."
    },
    {
        "id": 9679,
        "statement": "eats(X, mouse) :- sees(X, tiger).",
        "description": "If something sees the tiger then it eats the mouse."
    },
    {
        "id": 9680,
        "statement": "eats(X, lion) :- needs(X, cat).",
        "description": "If something needs the cat then it eats the lion."
    },
    {
        "id": 9681,
        "statement": "needs(X, cat) :- is(X, red).",
        "description": "If something is red then it needs the cat."
    },
    {
        "id": 9682,
        "statement": "is(X, blue) :- is(X, big), is(X, round).",
        "description": "All big, round people are blue."
    },
    {
        "id": 9683,
        "statement": "is(X, round) :- is(X, rough).",
        "description": "Rough people are round."
    },
    {
        "id": 9684,
        "statement": "is(X, quiet) :- is(X, white).",
        "description": "All white people are quiet."
    },
    {
        "id": 9685,
        "statement": "is(dave, white) :- is(dave, big).",
        "description": "If Dave is big then Dave is white."
    },
    {
        "id": 9686,
        "statement": "is(fiona, cold) :- is(fiona, young).",
        "description": "If Fiona is young then Fiona is cold."
    },
    {
        "id": 9687,
        "statement": "is(X, smart) :- is(X, green), is(X, cold).",
        "description": "If something is green and cold then it is smart."
    },
    {
        "id": 9688,
        "statement": "is(X, nice) :- is(X, young), is(X, cold).",
        "description": "If something is young and cold then it is nice."
    },
    {
        "id": 9689,
        "statement": "is(X, young) :- is(X, cold), is(X, smart).",
        "description": "If something is cold and smart then it is young."
    },
    {
        "id": 9690,
        "statement": "is(charlie, nice) :- is(charlie, smart), is(charlie, cold).",
        "description": "If Charlie is smart and Charlie is cold then Charlie is nice."
    },
    {
        "id": 9691,
        "statement": "is(X, kind) :- is(X, young), not is(X, smart).",
        "description": "If something is young and not smart then it is kind."
    },
    {
        "id": 9692,
        "statement": "is(X, young) :- is(X, red), is(X, furry).",
        "description": "All red, furry things are young."
    },
    {
        "id": 9693,
        "statement": "is(X, red) :- is(X, kind), is(X, smart).",
        "description": "If something is kind and smart then it is red."
    },
    {
        "id": 9694,
        "statement": "is(X, big) :- is(X, young), is(X, kind).",
        "description": "All young, kind things are big."
    },
    {
        "id": 9695,
        "statement": "is(X, big) :- is(X, furry), not is(X, kind).",
        "description": "If something is furry and not kind then it is big."
    },
    {
        "id": 9696,
        "statement": "is(X, smart) :- is(X, blue), is(X, rough).",
        "description": "All blue, rough people are smart."
    },
    {
        "id": 9697,
        "statement": "is(X, kind) :- is(X, blue), is(X, nice).",
        "description": "If something is blue and nice then it is kind."
    },
    {
        "id": 9698,
        "statement": "is(X, furry) :- is(X, kind).",
        "description": "If something is kind then it is furry."
    },
    {
        "id": 9699,
        "statement": "is(fiona, big) :- is(fiona, nice).",
        "description": "If Fiona is nice then Fiona is big."
    },
    {
        "id": 9700,
        "statement": "is(X, blue) :- is(X, young), is(X, big).",
        "description": "Young, big things are blue."
    },
    {
        "id": 9701,
        "statement": "is(X, rough) :- is(X, quiet), is(X, round).",
        "description": "If something is quiet and round then it is rough."
    },
    {
        "id": 9702,
        "statement": "sees(X, squirrel) :- eats(X, lion).",
        "description": "If someone eats the lion then they see the squirrel."
    },
    {
        "id": 9703,
        "statement": "sees(X, squirrel) :- is(X, nice).",
        "description": "If someone is nice then they see the squirrel."
    },
    {
        "id": 9704,
        "statement": "eats(X, tiger) :- is(X, red).",
        "description": "If someone is red then they eat the tiger."
    },
    {
        "id": 9705,
        "statement": "eats(X, tiger) :- is(X, nice), is(X, red).",
        "description": "If someone is nice and red then they eat the tiger."
    },
    {
        "id": 9706,
        "statement": "sees(X, lion) :- sees(X, squirrel).",
        "description": "If someone sees the squirrel then they see the lion."
    },
    {
        "id": 9707,
        "statement": "is(lion, nice) :- sees(X, lion).",
        "description": "If someone sees the lion then the lion is nice."
    },
    {
        "id": 9708,
        "statement": "is(X, nice) :- eats(X, rabbit).",
        "description": "If someone eats the rabbit then they are nice."
    },
    {
        "id": 9709,
        "statement": "is(rabbit, blue) :- eats(tiger, rabbit).",
        "description": "If the tiger eats the rabbit then the rabbit is blue."
    },
    {
        "id": 9710,
        "statement": "is(X, rough) :- is(X, quiet).",
        "description": "All quiet people are rough."
    },
    {
        "id": 9711,
        "statement": "is(harry, red) :- is(harry, rough), is(harry, blue).",
        "description": "If Harry is rough and Harry is blue then Harry is red."
    },
    {
        "id": 9712,
        "statement": "is(gary, green) :- is(gary, rough), is(gary, quiet).",
        "description": "If Gary is rough and Gary is quiet then Gary is green."
    },
    {
        "id": 9713,
        "statement": "chases(X, dog) :- is(X, young).",
        "description": "If someone is young then they chase the dog."
    },
    {
        "id": 9714,
        "statement": "is(dog, red) :- needs(X, rabbit), needs(X, dog).",
        "description": "If someone needs the rabbit and they need the dog then the dog is red."
    },
    {
        "id": 9715,
        "statement": "chases(mouse, dog) :- sees(X, mouse), sees(mouse, rabbit).",
        "description": "If someone sees the mouse and the mouse sees the rabbit then the mouse chases the dog."
    },
    {
        "id": 9716,
        "statement": "needs(dog, squirrel) :- sees(rabbit, dog).",
        "description": "If the rabbit sees the dog then the dog needs the squirrel."
    },
    {
        "id": 9717,
        "statement": "is(dog, kind) :- chases(X, dog).",
        "description": "If someone chases the dog then the dog is kind."
    },
    {
        "id": 9718,
        "statement": "chases(rabbit, mouse) :- sees(dog, rabbit), is(dog, nice).",
        "description": "If the dog sees the rabbit and the dog is nice then the rabbit chases the mouse."
    },
    {
        "id": 9719,
        "statement": "eats(rabbit, bald_eagle) :- is(X, green), not likes(X, rabbit).",
        "description": "If something is green and it does not like the rabbit then the rabbit eats the bald eagle."
    },
    {
        "id": 9720,
        "statement": "likes(dog, lion) :- likes(lion, dog), is(dog, round).",
        "description": "If the lion likes the dog and the dog is round then the dog likes the lion."
    },
    {
        "id": 9721,
        "statement": "is(dog, rough) :- likes(X, dog), chases(X, lion).",
        "description": "If something likes the dog and it chases the lion then the dog is rough."
    },
    {
        "id": 9722,
        "statement": "is(X, green) :- eats(X, lion), chases(X, lion).",
        "description": "If something eats the lion and it chases the lion then it is green."
    },
    {
        "id": 9723,
        "statement": "eats(X, lion) :- chases(X, dog), likes(X, dog).",
        "description": "If something chases the dog and it likes the dog then it eats the lion."
    },
    {
        "id": 9724,
        "statement": "likes(X, dog) :- is(X, round), not is(X, nice).",
        "description": "If something is round and not nice then it likes the dog."
    },
    {
        "id": 9725,
        "statement": "chases(X, lion) :- is(X, rough).",
        "description": "If something is rough then it chases the lion."
    },
    {
        "id": 9726,
        "statement": "is(X, kind) :- is(X, white), is(X, red).",
        "description": "If something is white and red then it is kind."
    },
    {
        "id": 9727,
        "statement": "is(X, furry) :- is(X, green).",
        "description": "All green things are furry."
    },
    {
        "id": 9728,
        "statement": "is(X, green) :- is(X, red), is(X, kind).",
        "description": "All red, kind things are green."
    },
    {
        "id": 9729,
        "statement": "is(X, smart) :- is(X, cold), is(X, furry).",
        "description": "Cold, furry people are smart."
    },
    {
        "id": 9730,
        "statement": "is(X, young) :- is(X, cold), not is(X, rough).",
        "description": "If someone is cold and not rough then they are young."
    },
    {
        "id": 9731,
        "statement": "needs(X, cat) :- is(X, round).",
        "description": "If something is round then it needs the cat."
    },
    {
        "id": 9732,
        "statement": "eats(bear, cat) :- eats(lion, bear), is(lion, red).",
        "description": "If the lion eats the bear and the lion is red then the bear eats the cat."
    },
    {
        "id": 9733,
        "statement": "likes(X, lion) :- eats(X, lion), is(X, red).",
        "description": "If something eats the lion and it is red then it likes the lion."
    },
    {
        "id": 9734,
        "statement": "needs(bear, bald_eagle) :- eats(cat, bear), not eats(bear, cat).",
        "description": "If the cat eats the bear and the bear does not eat the cat then the bear needs the bald eagle."
    },
    {
        "id": 9735,
        "statement": "likes(cat, bald_eagle) :- eats(X, cat), not likes(X, lion).",
        "description": "If something eats the cat and it does not like the lion then the cat likes the bald eagle."
    },
    {
        "id": 9736,
        "statement": "is(bald_eagle, blue) :- likes(X, lion), not needs(X, bald_eagle).",
        "description": "If something likes the lion and it does not need the bald eagle then the bald eagle is blue."
    },
    {
        "id": 9737,
        "statement": "is(X, white) :- is(X, young), is(X, round).",
        "description": "All young, round things are white."
    },
    {
        "id": 9738,
        "statement": "is(gary, white) :- is(gary, nice), is(gary, young).",
        "description": "If Gary is nice and Gary is young then Gary is white."
    },
    {
        "id": 9739,
        "statement": "is(X, young) :- is(X, kind), is(X, big).",
        "description": "All kind, big things are young."
    },
    {
        "id": 9740,
        "statement": "is(X, round) :- is(X, big), is(X, young).",
        "description": "All big, young things are round."
    },
    {
        "id": 9741,
        "statement": "is(X, big) :- is(X, young), is(X, round).",
        "description": "Young, round things are big."
    },
    {
        "id": 9742,
        "statement": "likes(X, dog) :- is(X, blue).",
        "description": "If someone is blue then they like the dog."
    },
    {
        "id": 9743,
        "statement": "needs(bear, cat) :- is(X, cold), not needs(X, bear).",
        "description": "If someone is cold and they do not need the bear then the bear needs the cat."
    },
    {
        "id": 9744,
        "statement": "is(cat, round) :- likes(X, cat), is(X, blue).",
        "description": "If someone likes the cat and they are blue then the cat is round."
    },
    {
        "id": 9745,
        "statement": "likes(X, cat) :- is(X, blue).",
        "description": "If someone is blue then they like the cat."
    },
    {
        "id": 9746,
        "statement": "needs(cat, mouse) :- likes(X, cat).",
        "description": "If someone likes the cat then the cat needs the mouse."
    },
    {
        "id": 9747,
        "statement": "needs(bear, dog) :- likes(bear, cat).",
        "description": "If the bear likes the cat then the bear needs the dog."
    },
    {
        "id": 9748,
        "statement": "is(dog, green) :- likes(X, dog).",
        "description": "If someone likes the dog then the dog is green."
    },
    {
        "id": 9749,
        "statement": "likes(X, lion) :- is(X, green), is(X, rough).",
        "description": "If something is green and rough then it likes the lion."
    },
    {
        "id": 9750,
        "statement": "is(X, rough) :- needs(X, tiger), is(tiger, nice).",
        "description": "If something needs the tiger and the tiger is nice then it is rough."
    },
    {
        "id": 9751,
        "statement": "is(X, nice) :- visits(X, cat).",
        "description": "If something visits the cat then it is nice."
    },
    {
        "id": 9752,
        "statement": "is(tiger, green) :- needs(X, tiger).",
        "description": "If something needs the tiger then the tiger is green."
    },
    {
        "id": 9753,
        "statement": "needs(cat, tiger) :- needs(X, cat).",
        "description": "If something needs the cat then the cat needs the tiger."
    },
    {
        "id": 9754,
        "statement": "needs(X, tiger) :- is(X, green), likes(X, mouse).",
        "description": "If something is green and it likes the mouse then it needs the tiger."
    },
    {
        "id": 9755,
        "statement": "is(erin, nice) :- is(erin, red), is(erin, kind).",
        "description": "If Erin is red and Erin is kind then Erin is nice."
    },
    {
        "id": 9756,
        "statement": "is(X, blue) :- is(X, red), is(X, kind).",
        "description": "If something is red and kind then it is blue."
    },
    {
        "id": 9757,
        "statement": "is(X, red) :- is(X, nice), is(X, quiet).",
        "description": "If something is nice and quiet then it is red."
    },
    {
        "id": 9758,
        "statement": "is(X, quiet) :- is(X, nice).",
        "description": "Nice things are quiet."
    },
    {
        "id": 9759,
        "statement": "is(X, red) :- is(X, big), is(X, rough).",
        "description": "If something is big and rough then it is red."
    },
    {
        "id": 9760,
        "statement": "is(fiona, kind) :- is(fiona, red), is(fiona, rough).",
        "description": "If Fiona is red and Fiona is rough then Fiona is kind."
    },
    {
        "id": 9761,
        "statement": "is(X, rough) :- is(X, round), is(X, big).",
        "description": "If something is round and big then it is rough."
    },
    {
        "id": 9762,
        "statement": "is(X, smart) :- is(X, big), is(X, round).",
        "description": "All big, round things are smart."
    },
    {
        "id": 9763,
        "statement": "is(X, smart) :- is(X, rough), not is(X, big).",
        "description": "If something is rough and not big then it is smart."
    },
    {
        "id": 9764,
        "statement": "is(X, blue) :- is(X, green), is(X, young).",
        "description": "Green, young things are blue."
    },
    {
        "id": 9765,
        "statement": "is(charlie, kind) :- is(charlie, blue), is(charlie, big).",
        "description": "If Charlie is blue and Charlie is big then Charlie is kind."
    },
    {
        "id": 9766,
        "statement": "is(X, white) :- is(X, round), is(X, cold).",
        "description": "Round, cold things are white."
    },
    {
        "id": 9767,
        "statement": "is(gary, kind) :- is(gary, cold).",
        "description": "If Gary is cold then Gary is kind."
    },
    {
        "id": 9768,
        "statement": "is(X, white) :- is(X, kind), is(X, cold).",
        "description": "If something is kind and cold then it is white."
    },
    {
        "id": 9769,
        "statement": "is(X, rough) :- is(X, kind), is(X, white).",
        "description": "If something is kind and white then it is rough."
    },
    {
        "id": 9770,
        "statement": "is(gary, round) :- is(gary, rough), is(gary, white).",
        "description": "If Gary is rough and Gary is white then Gary is round."
    },
    {
        "id": 9771,
        "statement": "is(X, furry) :- is(X, kind), is(X, smart).",
        "description": "Kind, smart things are furry."
    },
    {
        "id": 9772,
        "statement": "is(X, kind) :- is(X, rough), is(X, nice).",
        "description": "Rough, nice people are kind."
    },
    {
        "id": 9773,
        "statement": "is(X, green) :- is(X, nice), is(X, red).",
        "description": "Nice, red people are green."
    },
    {
        "id": 9774,
        "statement": "is(X, nice) :- is(X, white).",
        "description": "White people are nice."
    },
    {
        "id": 9775,
        "statement": "is(X, cold) :- is(X, blue), is(X, green).",
        "description": "Blue, green things are cold."
    },
    {
        "id": 9776,
        "statement": "is(X, green) :- is(X, red), is(X, young).",
        "description": "Red, young things are green."
    },
    {
        "id": 9777,
        "statement": "is(bob, quiet) :- is(bob, young).",
        "description": "If Bob is young then Bob is quiet."
    },
    {
        "id": 9778,
        "statement": "is(X, red) :- is(X, quiet).",
        "description": "All quiet things are red."
    },
    {
        "id": 9779,
        "statement": "is(X, blue) :- is(X, green), is(X, young).",
        "description": "If something is green and young then it is blue."
    },
    {
        "id": 9780,
        "statement": "is(erin, green) :- is(erin, kind).",
        "description": "If Erin is kind then Erin is green."
    },
    {
        "id": 9781,
        "statement": "is(erin, quiet) :- is(erin, green).",
        "description": "If Erin is green then Erin is quiet."
    },
    {
        "id": 9782,
        "statement": "eats(cat, mouse) :- not eats(cat, lion).",
        "description": "If the cat does not eat the lion then the cat eats the mouse."
    },
    {
        "id": 9783,
        "statement": "is(X, kind) :- chases(X, mouse).",
        "description": "If someone chases the mouse then they are kind."
    },
    {
        "id": 9784,
        "statement": "is(X, blue) :- eats(X, mouse), sees(mouse, tiger).",
        "description": "If someone eats the mouse and the mouse sees the tiger then they are blue."
    },
    {
        "id": 9785,
        "statement": "is(cat, round) :- is(X, big), sees(X, cat).",
        "description": "If someone is big and they see the cat then the cat is round."
    },
    {
        "id": 9786,
        "statement": "chases(mouse, lion) :- is(X, red), chases(X, mouse).",
        "description": "If someone is red and they chase the mouse then the mouse chases the lion."
    },
    {
        "id": 9787,
        "statement": "chases(lion, cat) :- chases(X, lion).",
        "description": "If someone chases the lion then the lion chases the cat."
    },
    {
        "id": 9788,
        "statement": "sees(X, mouse) :- sees(X, cat).",
        "description": "If something sees the cat then it sees the mouse."
    },
    {
        "id": 9789,
        "statement": "is(rabbit, nice) :- sees(X, rabbit), is(rabbit, big).",
        "description": "If something sees the rabbit and the rabbit is big then the rabbit is nice."
    },
    {
        "id": 9790,
        "statement": "likes(mouse, cat) :- likes(X, mouse), sees(X, mouse).",
        "description": "If something likes the mouse and it sees the mouse then the mouse likes the cat."
    },
    {
        "id": 9791,
        "statement": "likes(cat, squirrel) :- sees(X, cat), is(X, nice).",
        "description": "If something sees the cat and it is nice then the cat likes the squirrel."
    },
    {
        "id": 9792,
        "statement": "is(mouse, nice) :- sees(X, mouse).",
        "description": "If something sees the mouse then the mouse is nice."
    },
    {
        "id": 9793,
        "statement": "is(rabbit, rough) :- eats(X, mouse), eats(X, rabbit).",
        "description": "If something eats the mouse and it eats the rabbit then the rabbit is rough."
    },
    {
        "id": 9794,
        "statement": "likes(mouse, rabbit) :- sees(squirrel, mouse).",
        "description": "If the squirrel sees the mouse then the mouse likes the rabbit."
    },
    {
        "id": 9795,
        "statement": "sees(X, cat) :- likes(X, rabbit).",
        "description": "If something likes the rabbit then it sees the cat."
    },
    {
        "id": 9796,
        "statement": "sees(squirrel, rabbit) :- likes(X, squirrel).",
        "description": "If something likes the squirrel then the squirrel sees the rabbit."
    },
    {
        "id": 9797,
        "statement": "is(erin, round) :- is(erin, quiet).",
        "description": "If Erin is quiet then Erin is round."
    },
    {
        "id": 9798,
        "statement": "is(X, green) :- is(X, round), is(X, big).",
        "description": "All round, big people are green."
    },
    {
        "id": 9799,
        "statement": "is(X, kind) :- is(X, red), is(X, green).",
        "description": "Red, green people are kind."
    },
    {
        "id": 9800,
        "statement": "is(X, red) :- is(X, green), not is(X, round).",
        "description": "If someone is green and not round then they are red."
    },
    {
        "id": 9801,
        "statement": "is(X, cold) :- is(X, red), not is(X, big).",
        "description": "If someone is red and not big then they are cold."
    },
    {
        "id": 9802,
        "statement": "is(X, green) :- is(X, cold), is(X, white).",
        "description": "If something is cold and white then it is green."
    },
    {
        "id": 9803,
        "statement": "is(charlie, cold) :- is(charlie, nice).",
        "description": "If Charlie is nice then Charlie is cold."
    },
    {
        "id": 9804,
        "statement": "is(rabbit, rough) :- likes(dog, rabbit), needs(dog, bear).",
        "description": "If the dog likes the rabbit and the dog needs the bear then the rabbit is rough."
    },
    {
        "id": 9805,
        "statement": "is(bear, young) :- sees(X, bear), is(X, cold).",
        "description": "If someone sees the bear and they are cold then the bear is young."
    },
    {
        "id": 9806,
        "statement": "is(dog, cold) :- sees(X, dog).",
        "description": "If someone sees the dog then the dog is cold."
    },
    {
        "id": 9807,
        "statement": "is(X, rough) :- sees(X, lion).",
        "description": "If someone sees the lion then they are rough."
    },
    {
        "id": 9808,
        "statement": "sees(X, bear) :- needs(X, dog).",
        "description": "If someone needs the dog then they see the bear."
    },
    {
        "id": 9809,
        "statement": "likes(rabbit, lion) :- is(rabbit, young).",
        "description": "If the rabbit is young then the rabbit likes the lion."
    },
    {
        "id": 9810,
        "statement": "needs(X, bear) :- sees(X, dog).",
        "description": "If someone sees the dog then they need the bear."
    },
    {
        "id": 9811,
        "statement": "is(X, furry) :- is(X, rough), is(X, nice).",
        "description": "All rough, nice things are furry."
    },
    {
        "id": 9812,
        "statement": "is(X, kind) :- is(X, furry), is(X, red).",
        "description": "Furry, red things are kind."
    },
    {
        "id": 9813,
        "statement": "is(gary, nice) :- is(gary, kind), is(gary, furry).",
        "description": "If Gary is kind and Gary is furry then Gary is nice."
    },
    {
        "id": 9814,
        "statement": "is(X, furry) :- is(X, nice), is(X, white).",
        "description": "Nice, white things are furry."
    },
    {
        "id": 9815,
        "statement": "is(X, furry) :- is(X, green), is(X, white).",
        "description": "If something is green and white then it is furry."
    },
    {
        "id": 9816,
        "statement": "likes(X, bear) :- eats(X, lion).",
        "description": "If someone eats the lion then they like the bear."
    },
    {
        "id": 9817,
        "statement": "likes(X, bear) :- is(X, red), is(X, big).",
        "description": "If someone is red and big then they like the bear."
    },
    {
        "id": 9818,
        "statement": "sees(X, lion) :- likes(X, bear).",
        "description": "If someone likes the bear then they see the lion."
    },
    {
        "id": 9819,
        "statement": "sees(bear, rabbit) :- eats(rabbit, bear), sees(rabbit, bear).",
        "description": "If the rabbit eats the bear and the rabbit sees the bear then the bear sees the rabbit."
    },
    {
        "id": 9820,
        "statement": "is(lion, kind) :- likes(lion, bear).",
        "description": "If the lion likes the bear then the lion is kind."
    },
    {
        "id": 9821,
        "statement": "eats(lion, bear) :- likes(lion, rabbit).",
        "description": "If the lion likes the rabbit then the lion eats the bear."
    },
    {
        "id": 9822,
        "statement": "sees(lion, rabbit) :- sees(X, lion), likes(X, bear).",
        "description": "If someone sees the lion and they like the bear then the lion sees the rabbit."
    },
    {
        "id": 9823,
        "statement": "sees(X, squirrel) :- is(X, big), sees(X, rabbit).",
        "description": "If someone is big and they see the rabbit then they see the squirrel."
    },
    {
        "id": 9824,
        "statement": "sees(squirrel, cat) :- visits(X, squirrel), is(squirrel, young).",
        "description": "If something visits the squirrel and the squirrel is young then the squirrel sees the cat."
    },
    {
        "id": 9825,
        "statement": "sees(X, squirrel) :- visits(X, tiger).",
        "description": "If something visits the tiger then it sees the squirrel."
    },
    {
        "id": 9826,
        "statement": "visits(tiger, cow) :- visits(X, tiger).",
        "description": "If something visits the tiger then the tiger visits the cow."
    },
    {
        "id": 9827,
        "statement": "visits(X, tiger) :- sees(X, cow).",
        "description": "If something sees the cow then it visits the tiger."
    },
    {
        "id": 9828,
        "statement": "is(X, young) :- likes(X, cow).",
        "description": "If something likes the cow then it is young."
    },
    {
        "id": 9829,
        "statement": "is(cow, nice) :- visits(X, cow).",
        "description": "If something visits the cow then the cow is nice."
    },
    {
        "id": 9830,
        "statement": "is(X, smart) :- is(X, blue), is(X, young).",
        "description": "All blue, young things are smart."
    },
    {
        "id": 9831,
        "statement": "is(bob, round) :- is(bob, quiet), is(bob, blue).",
        "description": "If Bob is quiet and Bob is blue then Bob is round."
    },
    {
        "id": 9832,
        "statement": "is(dave, cold) :- is(dave, big).",
        "description": "If Dave is big then Dave is cold."
    },
    {
        "id": 9833,
        "statement": "is(X, big) :- is(X, cold), is(X, round).",
        "description": "All cold, round things are big."
    },
    {
        "id": 9834,
        "statement": "visits(X, mouse) :- visits(X, bald_eagle), not needs(bald_eagle, lion).",
        "description": "If something visits the bald eagle and the bald eagle does not need the lion then it visits the mouse."
    },
    {
        "id": 9835,
        "statement": "visits(bear, lion) :- is(bear, red).",
        "description": "If the bear is red then the bear visits the lion."
    },
    {
        "id": 9836,
        "statement": "likes(bald_eagle, bear) :- needs(X, bald_eagle).",
        "description": "If something needs the bald eagle then the bald eagle likes the bear."
    },
    {
        "id": 9837,
        "statement": "is(lion, red) :- likes(X, lion).",
        "description": "If something likes the lion then the lion is red."
    },
    {
        "id": 9838,
        "statement": "visits(X, bald_eagle) :- is(X, red).",
        "description": "If something is red then it visits the bald eagle."
    },
    {
        "id": 9839,
        "statement": "likes(X, bald_eagle) :- is(X, rough), is(X, round).",
        "description": "If something is rough and round then it likes the bald eagle."
    },
    {
        "id": 9840,
        "statement": "likes(X, lion) :- visits(X, mouse).",
        "description": "If something visits the mouse then it likes the lion."
    },
    {
        "id": 9841,
        "statement": "needs(mouse, lion) :- needs(X, bear), not visits(X, mouse).",
        "description": "If something needs the bear and it does not visit the mouse then the mouse needs the lion."
    },
    {
        "id": 9842,
        "statement": "likes(lion, bear) :- likes(X, lion), not needs(X, lion).",
        "description": "If something likes the lion and it does not need the lion then the lion likes the bear."
    },
    {
        "id": 9843,
        "statement": "needs(mouse, cow) :- eats(mouse, cow), needs(cow, squirrel).",
        "description": "If the mouse eats the cow and the cow needs the squirrel then the mouse needs the cow."
    },
    {
        "id": 9844,
        "statement": "eats(X, cow) :- is(X, nice), is(X, red).",
        "description": "If someone is nice and red then they eat the cow."
    },
    {
        "id": 9845,
        "statement": "visits(mouse, cow) :- eats(X, cow), needs(X, mouse).",
        "description": "If someone eats the cow and they need the mouse then the mouse visits the cow."
    },
    {
        "id": 9846,
        "statement": "is(cow, big) :- visits(X, cow).",
        "description": "If someone visits the cow then the cow is big."
    },
    {
        "id": 9847,
        "statement": "is(X, smart) :- is(X, nice), is(X, white).",
        "description": "All nice, white things are smart."
    },
    {
        "id": 9848,
        "statement": "is(X, rough) :- is(X, red), is(X, nice).",
        "description": "Red, nice things are rough."
    },
    {
        "id": 9849,
        "statement": "is(X, rough) :- is(X, white), is(X, nice).",
        "description": "White, nice things are rough."
    },
    {
        "id": 9850,
        "statement": "is(X, cold) :- is(X, red), is(X, rough).",
        "description": "If something is red and rough then it is cold."
    },
    {
        "id": 9851,
        "statement": "is(X, green) :- is(X, white), is(X, young).",
        "description": "All white, young things are green."
    },
    {
        "id": 9852,
        "statement": "is(X, nice) :- is(X, red), is(X, green).",
        "description": "All red, green things are nice."
    },
    {
        "id": 9853,
        "statement": "is(mouse, green) :- is(X, rough), eats(X, mouse).",
        "description": "If something is rough and it eats the mouse then the mouse is green."
    },
    {
        "id": 9854,
        "statement": "chases(lion, bald_eagle) :- chases(X, lion).",
        "description": "If something chases the lion then the lion chases the bald eagle."
    },
    {
        "id": 9855,
        "statement": "is(lion, nice) :- chases(X, lion).",
        "description": "If something chases the lion then the lion is nice."
    },
    {
        "id": 9856,
        "statement": "needs(cow, bald_eagle) :- chases(X, mouse), needs(X, cow).",
        "description": "If something chases the mouse and it needs the cow then the cow needs the bald eagle."
    },
    {
        "id": 9857,
        "statement": "eats(lion, mouse) :- needs(lion, cow).",
        "description": "If the lion needs the cow then the lion eats the mouse."
    },
    {
        "id": 9858,
        "statement": "is(X, round) :- is(X, quiet), is(X, big).",
        "description": "Quiet, big people are round."
    },
    {
        "id": 9859,
        "statement": "is(X, red) :- is(X, big), is(X, furry).",
        "description": "All big, furry people are red."
    },
    {
        "id": 9860,
        "statement": "is(anne, nice) :- is(anne, round), is(anne, quiet).",
        "description": "If Anne is round and Anne is quiet then Anne is nice."
    },
    {
        "id": 9861,
        "statement": "is(X, big) :- is(X, cold), is(X, young).",
        "description": "Cold, young people are big."
    },
    {
        "id": 9862,
        "statement": "is(erin, big) :- is(erin, kind).",
        "description": "If Erin is kind then Erin is big."
    },
    {
        "id": 9863,
        "statement": "is(X, white) :- is(X, quiet), is(X, cold).",
        "description": "All quiet, cold people are white."
    },
    {
        "id": 9864,
        "statement": "is(harry, big) :- is(harry, cold).",
        "description": "If Harry is cold then Harry is big."
    },
    {
        "id": 9865,
        "statement": "chases(X, squirrel) :- is(X, blue).",
        "description": "If someone is blue then they chase the squirrel."
    },
    {
        "id": 9866,
        "statement": "is(cow, round) :- chases(X, cow).",
        "description": "If someone chases the cow then the cow is round."
    },
    {
        "id": 9867,
        "statement": "chases(rabbit, cow) :- is(rabbit, cold).",
        "description": "If the rabbit is cold then the rabbit chases the cow."
    },
    {
        "id": 9868,
        "statement": "is(X, round) :- likes(X, rabbit).",
        "description": "If someone likes the rabbit then they are round."
    },
    {
        "id": 9869,
        "statement": "is(cow, kind) :- likes(X, cow).",
        "description": "If someone likes the cow then the cow is kind."
    },
    {
        "id": 9870,
        "statement": "chases(X, cow) :- chases(X, squirrel).",
        "description": "If someone chases the squirrel then they chase the cow."
    },
    {
        "id": 9871,
        "statement": "visits(X, cow) :- chases(X, cow).",
        "description": "If someone chases the cow then they visit the cow."
    },
    {
        "id": 9872,
        "statement": "likes(cow, tiger) :- is(X, big), visits(X, cow).",
        "description": "If something is big and it visits the cow then the cow likes the tiger."
    },
    {
        "id": 9873,
        "statement": "likes(cow, bald_eagle) :- likes(X, lion), needs(lion, cow).",
        "description": "If something likes the lion and the lion needs the cow then the cow likes the bald eagle."
    },
    {
        "id": 9874,
        "statement": "likes(X, tiger) :- visits(X, cow).",
        "description": "If something visits the cow then it likes the tiger."
    },
    {
        "id": 9875,
        "statement": "is(lion, green) :- is(X, big), not needs(X, lion).",
        "description": "If something is big and it does not need the lion then the lion is green."
    },
    {
        "id": 9876,
        "statement": "visits(X, tiger) :- likes(X, tiger).",
        "description": "If something likes the tiger then it visits the tiger."
    },
    {
        "id": 9877,
        "statement": "needs(lion, tiger) :- likes(X, lion), needs(X, lion).",
        "description": "If something likes the lion and it needs the lion then the lion needs the tiger."
    },
    {
        "id": 9878,
        "statement": "chases(X, bald_eagle) :- is(X, cold), is(X, green).",
        "description": "If something is cold and green then it chases the bald eagle."
    },
    {
        "id": 9879,
        "statement": "eats(X, bear) :- is(X, green), chases(X, bear).",
        "description": "If something is green and it chases the bear then it eats the bear."
    },
    {
        "id": 9880,
        "statement": "sees(X, bear) :- chases(X, bald_eagle).",
        "description": "If something chases the bald eagle then it sees the bear."
    },
    {
        "id": 9881,
        "statement": "eats(X, squirrel) :- is(X, blue).",
        "description": "If something is blue then it eats the squirrel."
    },
    {
        "id": 9882,
        "statement": "is(X, blue) :- sees(X, bear).",
        "description": "If something sees the bear then it is blue."
    },
    {
        "id": 9883,
        "statement": "is(bald_eagle, blue) :- chases(X, bear), eats(bear, bald_eagle).",
        "description": "If something chases the bear and the bear eats the bald eagle then the bald eagle is blue."
    },
    {
        "id": 9884,
        "statement": "is(X, big) :- sees(X, dog), chases(dog, bear).",
        "description": "If something sees the dog and the dog chases the bear then it is big."
    },
    {
        "id": 9885,
        "statement": "is(X, smart) :- is(X, blue), is(X, green).",
        "description": "Blue, green people are smart."
    },
    {
        "id": 9886,
        "statement": "is(X, green) :- is(X, blue), is(X, red).",
        "description": "All blue, red people are green."
    },
    {
        "id": 9887,
        "statement": "is(bob, blue) :- is(bob, furry), is(bob, green).",
        "description": "If Bob is furry and Bob is green then Bob is blue."
    },
    {
        "id": 9888,
        "statement": "chases(X, cow) :- chases(X, mouse).",
        "description": "If something chases the mouse then it chases the cow."
    },
    {
        "id": 9889,
        "statement": "is(bear, round) :- visits(X, lion), visits(X, bear).",
        "description": "If something visits the lion and it visits the bear then the bear is round."
    },
    {
        "id": 9890,
        "statement": "is(lion, big) :- chases(lion, mouse), chases(lion, cow).",
        "description": "If the lion chases the mouse and the lion chases the cow then the lion is big."
    },
    {
        "id": 9891,
        "statement": "likes(bear, lion) :- likes(X, bear).",
        "description": "If something likes the bear then the bear likes the lion."
    },
    {
        "id": 9892,
        "statement": "is(bear, cold) :- chases(bear, cow).",
        "description": "If the bear chases the cow then the bear is cold."
    },
    {
        "id": 9893,
        "statement": "likes(lion, bear) :- chases(X, bear), chases(X, lion).",
        "description": "If something chases the bear and it chases the lion then the lion likes the bear."
    },
    {
        "id": 9894,
        "statement": "chases(X, lion) :- is(X, big).",
        "description": "If something is big then it chases the lion."
    },
    {
        "id": 9895,
        "statement": "likes(X, lion) :- is(X, rough), not chases(X, cow).",
        "description": "If something is rough and it does not chase the cow then it likes the lion."
    },
    {
        "id": 9896,
        "statement": "is(X, young) :- is(X, nice), is(X, big).",
        "description": "All nice, big people are young."
    },
    {
        "id": 9897,
        "statement": "is(X, nice) :- is(X, big), is(X, green).",
        "description": "Big, green people are nice."
    },
    {
        "id": 9898,
        "statement": "is(X, red) :- is(X, white), is(X, young).",
        "description": "If someone is white and young then they are red."
    },
    {
        "id": 9899,
        "statement": "is(X, green) :- is(X, cold), is(X, red).",
        "description": "Cold, red people are green."
    },
    {
        "id": 9900,
        "statement": "is(X, cold) :- is(X, young), is(X, nice).",
        "description": "If someone is young and nice then they are cold."
    },
    {
        "id": 9901,
        "statement": "chases(squirrel, bald_eagle) :- chases(X, squirrel), chases(X, mouse).",
        "description": "If something chases the squirrel and it chases the mouse then the squirrel chases the bald eagle."
    },
    {
        "id": 9902,
        "statement": "chases(X, mouse) :- needs(X, mouse).",
        "description": "If something needs the mouse then it chases the mouse."
    },
    {
        "id": 9903,
        "statement": "chases(mouse, squirrel) :- chases(X, mouse).",
        "description": "If something chases the mouse then the mouse chases the squirrel."
    },
    {
        "id": 9904,
        "statement": "is(squirrel, green) :- chases(X, squirrel), chases(X, rabbit).",
        "description": "If something chases the squirrel and it chases the rabbit then the squirrel is green."
    },
    {
        "id": 9905,
        "statement": "sees(rabbit, bald_eagle) :- needs(X, rabbit), is(X, red).",
        "description": "If something needs the rabbit and it is red then the rabbit sees the bald eagle."
    },
    {
        "id": 9906,
        "statement": "needs(X, mouse) :- sees(X, bald_eagle).",
        "description": "If something sees the bald eagle then it needs the mouse."
    },
    {
        "id": 9907,
        "statement": "needs(squirrel, bald_eagle) :- is(squirrel, green).",
        "description": "If the squirrel is green then the squirrel needs the bald eagle."
    },
    {
        "id": 9908,
        "statement": "is(bald_eagle, red) :- needs(squirrel, bald_eagle).",
        "description": "If the squirrel needs the bald eagle then the bald eagle is red."
    },
    {
        "id": 9909,
        "statement": "needs(X, tiger) :- eats(X, tiger).",
        "description": "If someone eats the tiger then they need the tiger."
    },
    {
        "id": 9910,
        "statement": "eats(X, tiger) :- is(X, rough).",
        "description": "If someone is rough then they eat the tiger."
    },
    {
        "id": 9911,
        "statement": "is(bear, round) :- chases(X, bear).",
        "description": "If someone chases the bear then the bear is round."
    },
    {
        "id": 9912,
        "statement": "chases(X, squirrel) :- is(X, rough), is(X, blue).",
        "description": "If someone is rough and blue then they chase the squirrel."
    },
    {
        "id": 9913,
        "statement": "is(X, blue) :- needs(X, tiger), needs(tiger, squirrel).",
        "description": "If someone needs the tiger and the tiger needs the squirrel then they are blue."
    },
    {
        "id": 9914,
        "statement": "eats(squirrel, bear) :- is(squirrel, young).",
        "description": "If the squirrel is young then the squirrel eats the bear."
    },
    {
        "id": 9915,
        "statement": "eats(cow, tiger) :- eats(X, cow).",
        "description": "If someone eats the cow then the cow eats the tiger."
    },
    {
        "id": 9916,
        "statement": "is(bear, rough) :- is(bear, green), eats(bear, cow).",
        "description": "If the bear is green and the bear eats the cow then the bear is rough."
    },
    {
        "id": 9917,
        "statement": "is(X, red) :- is(X, white), is(X, kind).",
        "description": "All white, kind people are red."
    },
    {
        "id": 9918,
        "statement": "is(X, rough) :- is(X, green), is(X, nice).",
        "description": "All green, nice people are rough."
    },
    {
        "id": 9919,
        "statement": "is(charlie, red) :- is(charlie, blue), is(charlie, nice).",
        "description": "If Charlie is blue and Charlie is nice then Charlie is red."
    },
    {
        "id": 9920,
        "statement": "is(X, round) :- is(X, smart), is(X, red).",
        "description": "If someone is smart and red then they are round."
    },
    {
        "id": 9921,
        "statement": "is(erin, red) :- is(erin, furry).",
        "description": "If Erin is furry then Erin is red."
    },
    {
        "id": 9922,
        "statement": "likes(X, bald_eagle) :- sees(X, mouse).",
        "description": "If something sees the mouse then it likes the bald eagle."
    },
    {
        "id": 9923,
        "statement": "sees(X, cow) :- is(X, cold).",
        "description": "If something is cold then it sees the cow."
    },
    {
        "id": 9924,
        "statement": "likes(mouse, cat) :- sees(X, mouse), is(X, cold).",
        "description": "If something sees the mouse and it is cold then the mouse likes the cat."
    },
    {
        "id": 9925,
        "statement": "needs(mouse, cow) :- needs(X, mouse), likes(mouse, cow).",
        "description": "If something needs the mouse and the mouse likes the cow then the mouse needs the cow."
    },
    {
        "id": 9926,
        "statement": "sees(mouse, cat) :- is(X, cold), needs(X, mouse).",
        "description": "If something is cold and it needs the mouse then the mouse sees the cat."
    },
    {
        "id": 9927,
        "statement": "is(X, cold) :- sees(X, cat), needs(cat, cow).",
        "description": "If something sees the cat and the cat needs the cow then it is cold."
    },
    {
        "id": 9928,
        "statement": "likes(mouse, cow) :- sees(X, mouse), needs(X, cow).",
        "description": "If something sees the mouse and it needs the cow then the mouse likes the cow."
    },
    {
        "id": 9929,
        "statement": "needs(X, mouse) :- likes(X, bald_eagle).",
        "description": "If something likes the bald eagle then it needs the mouse."
    },
    {
        "id": 9930,
        "statement": "is(X, young) :- eats(X, bear).",
        "description": "If someone eats the bear then they are young."
    },
    {
        "id": 9931,
        "statement": "chases(dog, cat) :- needs(cat, dog).",
        "description": "If the cat needs the dog then the dog chases the cat."
    },
    {
        "id": 9932,
        "statement": "eats(dog, cat) :- eats(X, dog).",
        "description": "If someone eats the dog then the dog eats the cat."
    },
    {
        "id": 9933,
        "statement": "chases(X, rabbit) :- is(X, young).",
        "description": "If someone is young then they chase the rabbit."
    },
    {
        "id": 9934,
        "statement": "is(X, blue) :- chases(X, rabbit), not is(X, big).",
        "description": "If someone chases the rabbit and they are not big then they are blue."
    },
    {
        "id": 9935,
        "statement": "eats(X, cat) :- is(X, cold).",
        "description": "If someone is cold then they eat the cat."
    },
    {
        "id": 9936,
        "statement": "needs(X, dog) :- is(X, red).",
        "description": "If someone is red then they need the dog."
    },
    {
        "id": 9937,
        "statement": "is(X, rough) :- is(X, cold), is(X, round).",
        "description": "All cold, round people are rough."
    },
    {
        "id": 9938,
        "statement": "is(X, furry) :- is(X, kind), is(X, rough).",
        "description": "All kind, rough people are furry."
    },
    {
        "id": 9939,
        "statement": "is(gary, rough) :- is(gary, round), is(gary, nice).",
        "description": "If Gary is round and Gary is nice then Gary is rough."
    },
    {
        "id": 9940,
        "statement": "is(gary, rough) :- is(gary, cold), is(gary, round).",
        "description": "If Gary is cold and Gary is round then Gary is rough."
    },
    {
        "id": 9941,
        "statement": "eats(X, cow) :- sees(X, lion).",
        "description": "If someone sees the lion then they eat the cow."
    },
    {
        "id": 9942,
        "statement": "is(lion, big) :- sees(X, lion).",
        "description": "If someone sees the lion then the lion is big."
    },
    {
        "id": 9943,
        "statement": "is(X, green) :- is(X, red), eats(X, lion).",
        "description": "If someone is red and they eat the lion then they are green."
    },
    {
        "id": 9944,
        "statement": "chases(X, cat) :- is(X, young).",
        "description": "If someone is young then they chase the cat."
    },
    {
        "id": 9945,
        "statement": "is(X, red) :- chases(X, cow), is(cow, kind).",
        "description": "If someone chases the cow and the cow is kind then they are red."
    },
    {
        "id": 9946,
        "statement": "is(cat, kind) :- eats(X, cat).",
        "description": "If someone eats the cat then the cat is kind."
    },
    {
        "id": 9947,
        "statement": "sees(X, cow) :- eats(X, cat).",
        "description": "If someone eats the cat then they see the cow."
    },
    {
        "id": 9948,
        "statement": "visits(X, rabbit) :- is(X, green).",
        "description": "If something is green then it visits the rabbit."
    },
    {
        "id": 9949,
        "statement": "chases(dog, rabbit) :- visits(X, dog), eats(X, dog).",
        "description": "If something visits the dog and it eats the dog then the dog chases the rabbit."
    },
    {
        "id": 9950,
        "statement": "visits(rabbit, dog) :- visits(X, rabbit), not visits(rabbit, cow).",
        "description": "If something visits the rabbit and the rabbit does not visit the cow then the rabbit visits the dog."
    },
    {
        "id": 9951,
        "statement": "is(X, green) :- visits(X, dog), eats(dog, cow).",
        "description": "If something visits the dog and the dog eats the cow then it is green."
    },
    {
        "id": 9952,
        "statement": "chases(cow, dog) :- visits(dog, cow), is(dog, blue).",
        "description": "If the dog visits the cow and the dog is blue then the cow chases the dog."
    },
    {
        "id": 9953,
        "statement": "visits(X, cat) :- eats(X, rabbit), not visits(X, rabbit).",
        "description": "If something eats the rabbit and it does not visit the rabbit then it visits the cat."
    },
    {
        "id": 9954,
        "statement": "chases(cat, rabbit) :- visits(X, rabbit), eats(rabbit, cat).",
        "description": "If something visits the rabbit and the rabbit eats the cat then the cat chases the rabbit."
    },
    {
        "id": 9955,
        "statement": "eats(X, cat) :- visits(X, cat).",
        "description": "If something visits the cat then it eats the cat."
    },
    {
        "id": 9956,
        "statement": "sees(bald_eagle, bear) :- needs(X, bald_eagle), not is(X, young).",
        "description": "If someone needs the bald eagle and they are not young then the bald eagle sees the bear."
    },
    {
        "id": 9957,
        "statement": "eats(cow, bald_eagle) :- eats(bald_eagle, cow).",
        "description": "If the bald eagle eats the cow then the cow eats the bald eagle."
    },
    {
        "id": 9958,
        "statement": "needs(X, bald_eagle) :- sees(X, bear), eats(X, bald_eagle).",
        "description": "If someone sees the bear and they eat the bald eagle then they need the bald eagle."
    },
    {
        "id": 9959,
        "statement": "is(X, red) :- needs(X, cow), needs(cow, bald_eagle).",
        "description": "If someone needs the cow and the cow needs the bald eagle then they are red."
    },
    {
        "id": 9960,
        "statement": "needs(X, bear) :- sees(X, cow).",
        "description": "If someone sees the cow then they need the bear."
    },
    {
        "id": 9961,
        "statement": "sees(X, cow) :- is(X, big), not is(X, red).",
        "description": "If someone is big and not red then they see the cow."
    },
    {
        "id": 9962,
        "statement": "sees(X, cow) :- is(X, kind).",
        "description": "If someone is kind then they see the cow."
    },
    {
        "id": 9963,
        "statement": "is(erin, blue) :- is(erin, rough).",
        "description": "If Erin is rough then Erin is blue."
    },
    {
        "id": 9964,
        "statement": "is(erin, rough) :- is(erin, kind).",
        "description": "If Erin is kind then Erin is rough."
    },
    {
        "id": 9965,
        "statement": "is(charlie, rough) :- is(charlie, red), is(charlie, cold).",
        "description": "If Charlie is red and Charlie is cold then Charlie is rough."
    },
    {
        "id": 9966,
        "statement": "is(X, kind) :- is(X, rough), is(X, red).",
        "description": "Rough, red people are kind."
    },
    {
        "id": 9967,
        "statement": "is(cat, young) :- is(X, young), likes(X, cat).",
        "description": "If something is young and it likes the cat then the cat is young."
    },
    {
        "id": 9968,
        "statement": "is(cat, young) :- likes(dog, cat).",
        "description": "If the dog likes the cat then the cat is young."
    },
    {
        "id": 9969,
        "statement": "likes(X, cat) :- eats(X, rabbit).",
        "description": "If something eats the rabbit then it likes the cat."
    },
    {
        "id": 9970,
        "statement": "needs(dog, cat) :- is(X, rough), likes(X, dog).",
        "description": "If something is rough and it likes the dog then the dog needs the cat."
    },
    {
        "id": 9971,
        "statement": "eats(lion, rabbit) :- needs(X, rabbit), needs(rabbit, lion).",
        "description": "If something needs the rabbit and the rabbit needs the lion then the lion eats the rabbit."
    },
    {
        "id": 9972,
        "statement": "eats(X, rabbit) :- is(X, big), needs(X, rabbit).",
        "description": "If something is big and it needs the rabbit then it eats the rabbit."
    },
    {
        "id": 9973,
        "statement": "eats(cow, dog) :- chases(lion, cow), is(cow, kind).",
        "description": "If the lion chases the cow and the cow is kind then the cow eats the dog."
    },
    {
        "id": 9974,
        "statement": "is(tiger, round) :- is(tiger, blue), eats(tiger, cow).",
        "description": "If the tiger is blue and the tiger eats the cow then the tiger is round."
    },
    {
        "id": 9975,
        "statement": "eats(tiger, dog) :- visits(cow, tiger), chases(cow, tiger).",
        "description": "If the cow visits the tiger and the cow chases the tiger then the tiger eats the dog."
    },
    {
        "id": 9976,
        "statement": "visits(lion, dog) :- is(X, round), not chases(X, lion).",
        "description": "If something is round and it does not chase the lion then the lion visits the dog."
    },
    {
        "id": 9977,
        "statement": "visits(X, tiger) :- visits(X, dog).",
        "description": "If something visits the dog then it visits the tiger."
    },
    {
        "id": 9978,
        "statement": "eats(X, lion) :- is(X, round), not visits(X, tiger).",
        "description": "If something is round and it does not visit the tiger then it eats the lion."
    },
    {
        "id": 9979,
        "statement": "likes(X, bear) :- eats(X, lion).",
        "description": "If something eats the lion then it likes the bear."
    },
    {
        "id": 9980,
        "statement": "is(cow, kind) :- is(X, round), likes(X, cow).",
        "description": "If something is round and it likes the cow then the cow is kind."
    },
    {
        "id": 9981,
        "statement": "likes(X, lion) :- is(X, round).",
        "description": "If something is round then it likes the lion."
    },
    {
        "id": 9982,
        "statement": "is(X, blue) :- is(X, kind), likes(X, bear).",
        "description": "If something is kind and it likes the bear then it is blue."
    },
    {
        "id": 9983,
        "statement": "needs(X, cow) :- eats(X, cow).",
        "description": "If something eats the cow then it needs the cow."
    },
    {
        "id": 9984,
        "statement": "eats(lion, bear) :- is(lion, young).",
        "description": "If the lion is young then the lion eats the bear."
    },
    {
        "id": 9985,
        "statement": "sees(cat, bear) :- is(cat, kind).",
        "description": "If the cat is kind then the cat sees the bear."
    },
    {
        "id": 9986,
        "statement": "sees(X, lion) :- is(X, cold).",
        "description": "If something is cold then it sees the lion."
    },
    {
        "id": 9987,
        "statement": "is(bear, nice) :- sees(X, bear).",
        "description": "If something sees the bear then the bear is nice."
    },
    {
        "id": 9988,
        "statement": "sees(cat, bear) :- sees(X, cat), is(cat, blue).",
        "description": "If something sees the cat and the cat is blue then the cat sees the bear."
    },
    {
        "id": 9989,
        "statement": "likes(X, lion) :- is(X, nice).",
        "description": "If something is nice then it likes the lion."
    },
    {
        "id": 9990,
        "statement": "is(bear, blue) :- visits(X, bear).",
        "description": "If something visits the bear then the bear is blue."
    },
    {
        "id": 9991,
        "statement": "is(X, nice) :- is(X, white).",
        "description": "All white things are nice."
    },
    {
        "id": 9992,
        "statement": "is(X, cold) :- is(X, young), is(X, nice).",
        "description": "If something is young and nice then it is cold."
    },
    {
        "id": 9993,
        "statement": "is(erin, furry) :- is(erin, young), is(erin, cold).",
        "description": "If Erin is young and Erin is cold then Erin is furry."
    },
    {
        "id": 9994,
        "statement": "is(erin, white) :- is(erin, furry), is(erin, cold).",
        "description": "If Erin is furry and Erin is cold then Erin is white."
    },
    {
        "id": 9995,
        "statement": "is(X, cold) :- is(X, white), is(X, nice).",
        "description": "If something is white and nice then it is cold."
    },
    {
        "id": 9996,
        "statement": "is(dave, furry) :- is(dave, smart), is(dave, blue).",
        "description": "If Dave is smart and Dave is blue then Dave is furry."
    },
    {
        "id": 9997,
        "statement": "is(X, blue) :- is(X, kind), is(X, cold).",
        "description": "All kind, cold people are blue."
    },
    {
        "id": 9998,
        "statement": "is(X, green) :- is(X, blue), is(X, kind).",
        "description": "All blue, kind people are green."
    },
    {
        "id": 9999,
        "statement": "is(X, cold) :- is(X, furry), is(X, blue).",
        "description": "All furry, blue people are cold."
    },
    {
        "id": 10000,
        "statement": "is(X, rough) :- is(X, green), is(X, red).",
        "description": "All green, red people are rough."
    },
    {
        "id": 10001,
        "statement": "is(X, nice) :- is(X, rough), is(X, quiet).",
        "description": "If someone is rough and quiet then they are nice."
    },
    {
        "id": 10002,
        "statement": "eats(mouse, cow) :- needs(mouse, cow), is(mouse, young).",
        "description": "If the mouse needs the cow and the mouse is young then the mouse eats the cow."
    },
    {
        "id": 10003,
        "statement": "sees(bald_eagle, mouse) :- eats(X, bald_eagle).",
        "description": "If someone eats the bald eagle then the bald eagle sees the mouse."
    },
    {
        "id": 10004,
        "statement": "is(mouse, cold) :- is(mouse, red).",
        "description": "If the mouse is red then the mouse is cold."
    },
    {
        "id": 10005,
        "statement": "is(X, young) :- sees(X, bald_eagle), is(X, red).",
        "description": "If someone sees the bald eagle and they are red then they are young."
    },
    {
        "id": 10006,
        "statement": "is(X, young) :- eats(X, bald_eagle).",
        "description": "If someone eats the bald eagle then they are young."
    },
    {
        "id": 10007,
        "statement": "sees(cow, bald_eagle) :- eats(X, cow).",
        "description": "If someone eats the cow then the cow sees the bald eagle."
    },
    {
        "id": 10008,
        "statement": "needs(cat, mouse) :- sees(X, cow), needs(cow, cat).",
        "description": "If someone sees the cow and the cow needs the cat then the cat needs the mouse."
    },
    {
        "id": 10009,
        "statement": "is(mouse, blue) :- eats(bald_eagle, mouse), not is(bald_eagle, blue).",
        "description": "If the bald eagle eats the mouse and the bald eagle is not blue then the mouse is blue."
    },
    {
        "id": 10010,
        "statement": "eats(mouse, bald_eagle) :- sees(X, mouse), not eats(X, mouse).",
        "description": "If someone sees the mouse and they do not eat the mouse then the mouse eats the bald eagle."
    },
    {
        "id": 10011,
        "statement": "is(X, smart) :- is(X, kind), is(X, young).",
        "description": "If someone is kind and young then they are smart."
    },
    {
        "id": 10012,
        "statement": "is(X, blue) :- is(X, red), is(X, green).",
        "description": "If someone is red and green then they are blue."
    },
    {
        "id": 10013,
        "statement": "is(X, green) :- likes(X, bald_eagle).",
        "description": "If something likes the bald eagle then it is green."
    },
    {
        "id": 10014,
        "statement": "eats(X, squirrel) :- is(X, rough).",
        "description": "If something is rough then it eats the squirrel."
    },
    {
        "id": 10015,
        "statement": "likes(rabbit, cow) :- is(X, young), likes(X, rabbit).",
        "description": "If something is young and it likes the rabbit then the rabbit likes the cow."
    },
    {
        "id": 10016,
        "statement": "likes(cow, squirrel) :- eats(X, bald_eagle), chases(X, cow).",
        "description": "If something eats the bald eagle and it chases the cow then the cow likes the squirrel."
    },
    {
        "id": 10017,
        "statement": "is(cow, red) :- eats(cow, squirrel).",
        "description": "If the cow eats the squirrel then the cow is red."
    },
    {
        "id": 10018,
        "statement": "is(X, red) :- likes(X, cow).",
        "description": "If something likes the cow then it is red."
    },
    {
        "id": 10019,
        "statement": "is(X, young) :- eats(X, squirrel).",
        "description": "If something eats the squirrel then it is young."
    },
    {
        "id": 10020,
        "statement": "eats(X, squirrel) :- is(X, red).",
        "description": "If something is red then it eats the squirrel."
    },
    {
        "id": 10021,
        "statement": "is(X, red) :- is(X, rough), is(X, quiet).",
        "description": "If someone is rough and quiet then they are red."
    },
    {
        "id": 10022,
        "statement": "is(charlie, kind) :- is(charlie, nice).",
        "description": "If Charlie is nice then Charlie is kind."
    },
    {
        "id": 10023,
        "statement": "is(dave, blue) :- is(dave, rough), is(dave, kind).",
        "description": "If Dave is rough and Dave is kind then Dave is blue."
    },
    {
        "id": 10024,
        "statement": "chases(X, lion) :- sees(X, bear), is(X, blue).",
        "description": "If something sees the bear and it is blue then it chases the lion."
    },
    {
        "id": 10025,
        "statement": "sees(X, rabbit) :- is(X, red).",
        "description": "If something is red then it sees the rabbit."
    },
    {
        "id": 10026,
        "statement": "is(dog, red) :- chases(X, dog), not sees(X, dog).",
        "description": "If something chases the dog and it does not see the dog then the dog is red."
    },
    {
        "id": 10027,
        "statement": "is(anne, blue) :- is(anne, round).",
        "description": "If Anne is round then Anne is blue."
    },
    {
        "id": 10028,
        "statement": "is(X, rough) :- is(X, blue), is(X, white).",
        "description": "All blue, white people are rough."
    },
    {
        "id": 10029,
        "statement": "is(X, kind) :- is(X, white), is(X, nice).",
        "description": "All white, nice people are kind."
    },
    {
        "id": 10030,
        "statement": "is(dog, green) :- sees(bear, dog).",
        "description": "If the bear sees the dog then the dog is green."
    },
    {
        "id": 10031,
        "statement": "sees(dog, mouse) :- sees(mouse, dog).",
        "description": "If the mouse sees the dog then the dog sees the mouse."
    },
    {
        "id": 10032,
        "statement": "needs(cow, mouse) :- is(X, green), needs(X, cow).",
        "description": "If something is green and it needs the cow then the cow needs the mouse."
    },
    {
        "id": 10033,
        "statement": "sees(X, dog) :- visits(X, cow).",
        "description": "If something visits the cow then it sees the dog."
    },
    {
        "id": 10034,
        "statement": "is(X, nice) :- sees(X, mouse).",
        "description": "If something sees the mouse then it is nice."
    },
    {
        "id": 10035,
        "statement": "visits(mouse, cow) :- needs(X, mouse).",
        "description": "If something needs the mouse then the mouse visits the cow."
    },
    {
        "id": 10036,
        "statement": "is(dog, kind) :- visits(X, dog), sees(X, mouse).",
        "description": "If something visits the dog and it sees the mouse then the dog is kind."
    },
    {
        "id": 10037,
        "statement": "is(tiger, round) :- visits(X, tiger), is(X, kind).",
        "description": "If someone visits the tiger and they are kind then the tiger is round."
    },
    {
        "id": 10038,
        "statement": "needs(bald_eagle, cat) :- visits(X, cat), needs(cat, bald_eagle).",
        "description": "If someone visits the cat and the cat needs the bald eagle then the bald eagle needs the cat."
    },
    {
        "id": 10039,
        "statement": "is(dog, big) :- sees(X, dog), is(dog, blue).",
        "description": "If someone sees the dog and the dog is blue then the dog is big."
    },
    {
        "id": 10040,
        "statement": "needs(X, dog) :- visits(X, tiger), needs(tiger, dog).",
        "description": "If someone visits the tiger and the tiger needs the dog then they need the dog."
    },
    {
        "id": 10041,
        "statement": "needs(dog, tiger) :- needs(bald_eagle, dog).",
        "description": "If the bald eagle needs the dog then the dog needs the tiger."
    },
    {
        "id": 10042,
        "statement": "is(bald_eagle, kind) :- sees(cat, bald_eagle), needs(cat, bald_eagle).",
        "description": "If the cat sees the bald eagle and the cat needs the bald eagle then the bald eagle is kind."
    },
    {
        "id": 10043,
        "statement": "visits(X, tiger) :- needs(X, bald_eagle), is(X, big).",
        "description": "If someone needs the bald eagle and they are big then they visit the tiger."
    },
    {
        "id": 10044,
        "statement": "visits(X, tiger) :- is(X, round), is(X, kind).",
        "description": "If someone is round and kind then they visit the tiger."
    },
    {
        "id": 10045,
        "statement": "is(X, green) :- is(X, furry), is(X, white).",
        "description": "Furry, white things are green."
    },
    {
        "id": 10046,
        "statement": "is(bob, blue) :- is(bob, nice).",
        "description": "If Bob is nice then Bob is blue."
    },
    {
        "id": 10047,
        "statement": "chases(X, cow) :- is(X, green).",
        "description": "If something is green then it chases the cow."
    },
    {
        "id": 10048,
        "statement": "chases(X, cow) :- sees(X, lion).",
        "description": "If something sees the lion then it chases the cow."
    },
    {
        "id": 10049,
        "statement": "is(X, nice) :- is(X, big), eats(X, dog).",
        "description": "If something is big and it eats the dog then it is nice."
    },
    {
        "id": 10050,
        "statement": "sees(cow, lion) :- is(cow, big).",
        "description": "If the cow is big then the cow sees the lion."
    },
    {
        "id": 10051,
        "statement": "eats(cow, lion) :- eats(cow, bear), eats(bear, cow).",
        "description": "If the cow eats the bear and the bear eats the cow then the cow eats the lion."
    },
    {
        "id": 10052,
        "statement": "is(bear, green) :- chases(X, cow), sees(X, bear).",
        "description": "If something chases the cow and it sees the bear then the bear is green."
    },
    {
        "id": 10053,
        "statement": "is(X, big) :- eats(X, bear), eats(X, lion).",
        "description": "If something eats the bear and it eats the lion then it is big."
    },
    {
        "id": 10054,
        "statement": "eats(cow, bear) :- eats(X, cow).",
        "description": "If something eats the cow then the cow eats the bear."
    },
    {
        "id": 10055,
        "statement": "is(cow, red) :- not eats(dog, lion), not chases(dog, cow).",
        "description": "If the dog does not eat the lion and the dog does not chase the cow then the cow is red."
    },
    {
        "id": 10056,
        "statement": "eats(X, squirrel) :- chases(X, squirrel), eats(X, bald_eagle).",
        "description": "If something chases the squirrel and it eats the bald eagle then it eats the squirrel."
    },
    {
        "id": 10057,
        "statement": "chases(X, mouse) :- is(X, young).",
        "description": "If something is young then it chases the mouse."
    },
    {
        "id": 10058,
        "statement": "eats(squirrel, bear) :- is(X, young), chases(X, squirrel).",
        "description": "If something is young and it chases the squirrel then the squirrel eats the bear."
    },
    {
        "id": 10059,
        "statement": "chases(mouse, squirrel) :- chases(mouse, bald_eagle), is(bald_eagle, young).",
        "description": "If the mouse chases the bald eagle and the bald eagle is young then the mouse chases the squirrel."
    },
    {
        "id": 10060,
        "statement": "is(bear, young) :- eats(X, bear).",
        "description": "If something eats the bear then the bear is young."
    },
    {
        "id": 10061,
        "statement": "is(bald_eagle, young) :- chases(X, bald_eagle).",
        "description": "If something chases the bald eagle then the bald eagle is young."
    },
    {
        "id": 10062,
        "statement": "is(X, rough) :- is(X, red), is(X, young).",
        "description": "Red, young people are rough."
    },
    {
        "id": 10063,
        "statement": "is(X, rough) :- is(X, green), not is(X, kind).",
        "description": "If someone is green and not kind then they are rough."
    },
    {
        "id": 10064,
        "statement": "is(erin, white) :- is(erin, quiet).",
        "description": "If Erin is quiet then Erin is white."
    },
    {
        "id": 10065,
        "statement": "is(harry, rough) :- is(harry, green).",
        "description": "If Harry is green then Harry is rough."
    },
    {
        "id": 10066,
        "statement": "is(X, red) :- is(X, quiet), is(X, white).",
        "description": "Quiet, white people are red."
    },
    {
        "id": 10067,
        "statement": "is(X, quiet) :- is(X, green), is(X, rough).",
        "description": "Green, rough people are quiet."
    },
    {
        "id": 10068,
        "statement": "is(X, white) :- is(X, quiet), is(X, nice).",
        "description": "All quiet, nice people are white."
    },
    {
        "id": 10069,
        "statement": "is(X, nice) :- is(X, rough), is(X, smart).",
        "description": "Rough, smart people are nice."
    },
    {
        "id": 10070,
        "statement": "is(X, red) :- is(X, big), not is(X, blue).",
        "description": "If something is big and not blue then it is red."
    },
    {
        "id": 10071,
        "statement": "is(X, red) :- is(X, big), is(X, young).",
        "description": "If something is big and young then it is red."
    },
    {
        "id": 10072,
        "statement": "is(X, cold) :- is(X, young), is(X, green).",
        "description": "Young, green things are cold."
    },
    {
        "id": 10073,
        "statement": "is(X, cold) :- is(X, red), not is(X, big).",
        "description": "If something is red and not big then it is cold."
    },
    {
        "id": 10074,
        "statement": "is(X, cold) :- is(X, green), is(X, blue).",
        "description": "Green, blue things are cold."
    },
    {
        "id": 10075,
        "statement": "is(X, green) :- is(X, red), is(X, round).",
        "description": "Red, round things are green."
    },
    {
        "id": 10076,
        "statement": "is(anne, green) :- is(anne, cold).",
        "description": "If Anne is cold then Anne is green."
    },
    {
        "id": 10077,
        "statement": "is(X, young) :- is(X, big), is(X, cold).",
        "description": "If something is big and cold then it is young."
    },
    {
        "id": 10078,
        "statement": "is(X, big) :- is(X, furry), is(X, cold).",
        "description": "All furry, cold things are big."
    },
    {
        "id": 10079,
        "statement": "is(X, cold) :- is(X, smart), is(X, green).",
        "description": "If something is smart and green then it is cold."
    },
    {
        "id": 10080,
        "statement": "is(X, smart) :- is(X, cold), not is(X, white).",
        "description": "If something is cold and not white then it is smart."
    },
    {
        "id": 10081,
        "statement": "is(dave, furry) :- is(dave, quiet).",
        "description": "If Dave is quiet then Dave is furry."
    },
    {
        "id": 10082,
        "statement": "is(charlie, smart) :- is(charlie, white).",
        "description": "If Charlie is white then Charlie is smart."
    },
    {
        "id": 10083,
        "statement": "is(X, blue) :- is(X, kind), is(X, quiet).",
        "description": "All kind, quiet people are blue."
    },
    {
        "id": 10084,
        "statement": "is(X, white) :- is(X, blue), is(X, quiet).",
        "description": "Blue, quiet people are white."
    },
    {
        "id": 10085,
        "statement": "is(X, green) :- is(X, furry), is(X, smart).",
        "description": "Furry, smart people are green."
    },
    {
        "id": 10086,
        "statement": "is(X, green) :- is(X, white), is(X, quiet).",
        "description": "If someone is white and quiet then they are green."
    },
    {
        "id": 10087,
        "statement": "sees(cat, dog) :- eats(X, cow), sees(cow, cat).",
        "description": "If someone eats the cow and the cow sees the cat then the cat sees the dog."
    },
    {
        "id": 10088,
        "statement": "visits(cat, cow) :- visits(lion, cat), not sees(cat, lion).",
        "description": "If the lion visits the cat and the cat does not see the lion then the cat visits the cow."
    },
    {
        "id": 10089,
        "statement": "visits(cat, cow) :- visits(cat, dog), not eats(dog, cow).",
        "description": "If the cat visits the dog and the dog does not eat the cow then the cat visits the cow."
    },
    {
        "id": 10090,
        "statement": "sees(X, cat) :- sees(X, dog).",
        "description": "If someone sees the dog then they see the cat."
    },
    {
        "id": 10091,
        "statement": "is(lion, blue) :- sees(lion, cow).",
        "description": "If the lion sees the cow then the lion is blue."
    },
    {
        "id": 10092,
        "statement": "visits(X, lion) :- is(X, kind).",
        "description": "If someone is kind then they visit the lion."
    },
    {
        "id": 10093,
        "statement": "sees(lion, dog) :- sees(X, lion).",
        "description": "If someone sees the lion then the lion sees the dog."
    },
    {
        "id": 10094,
        "statement": "eats(cat, cow) :- is(X, cold), sees(X, cat).",
        "description": "If someone is cold and they see the cat then the cat eats the cow."
    },
    {
        "id": 10095,
        "statement": "visits(lion, cow) :- visits(X, cow), not visits(cow, lion).",
        "description": "If someone visits the cow and the cow does not visit the lion then the lion visits the cow."
    },
    {
        "id": 10096,
        "statement": "is(X, red) :- is(X, white), is(X, quiet).",
        "description": "White, quiet things are red."
    },
    {
        "id": 10097,
        "statement": "is(X, quiet) :- is(X, green), is(X, white).",
        "description": "Green, white things are quiet."
    },
    {
        "id": 10098,
        "statement": "is(X, quiet) :- is(X, white), not is(X, green).",
        "description": "If something is white and not green then it is quiet."
    },
    {
        "id": 10099,
        "statement": "is(X, young) :- is(X, rough), not is(X, nice).",
        "description": "If something is rough and not nice then it is young."
    },
    {
        "id": 10100,
        "statement": "is(X, round) :- is(X, nice), is(X, cold).",
        "description": "If someone is nice and cold then they are round."
    },
    {
        "id": 10101,
        "statement": "is(harry, red) :- is(harry, smart), is(harry, young).",
        "description": "If Harry is smart and Harry is young then Harry is red."
    },
    {
        "id": 10102,
        "statement": "is(X, rough) :- is(X, cold), is(X, smart).",
        "description": "All cold, smart people are rough."
    },
    {
        "id": 10103,
        "statement": "is(dave, cold) :- is(dave, green).",
        "description": "If Dave is green then Dave is cold."
    },
    {
        "id": 10104,
        "statement": "is(X, blue) :- is(X, nice), is(X, rough).",
        "description": "Nice, rough things are blue."
    },
    {
        "id": 10105,
        "statement": "is(X, blue) :- is(X, red), is(X, rough).",
        "description": "All red, rough things are blue."
    },
    {
        "id": 10106,
        "statement": "is(anne, red) :- is(anne, nice), is(anne, rough).",
        "description": "If Anne is nice and Anne is rough then Anne is red."
    },
    {
        "id": 10107,
        "statement": "is(X, kind) :- is(X, rough), is(X, nice).",
        "description": "All rough, nice people are kind."
    },
    {
        "id": 10108,
        "statement": "is(X, nice) :- is(X, white).",
        "description": "If someone is white then they are nice."
    },
    {
        "id": 10109,
        "statement": "is(X, rough) :- is(X, nice), is(X, young).",
        "description": "All nice, young people are rough."
    },
    {
        "id": 10110,
        "statement": "is(gary, kind) :- is(gary, young).",
        "description": "If Gary is young then Gary is kind."
    },
    {
        "id": 10111,
        "statement": "is(X, blue) :- is(X, young), is(X, furry).",
        "description": "If someone is young and furry then they are blue."
    },
    {
        "id": 10112,
        "statement": "is(X, young) :- is(X, white), is(X, furry).",
        "description": "All white, furry people are young."
    },
    {
        "id": 10113,
        "statement": "is(X, cold) :- is(X, blue).",
        "description": "If someone is blue then they are cold."
    },
    {
        "id": 10114,
        "statement": "is(X, round) :- is(X, cold), is(X, kind).",
        "description": "All cold, kind people are round."
    },
    {
        "id": 10115,
        "statement": "is(X, white) :- is(X, kind), is(X, blue).",
        "description": "If someone is kind and blue then they are white."
    },
    {
        "id": 10116,
        "statement": "is(X, white) :- is(X, kind), is(X, green).",
        "description": "All kind, green people are white."
    },
    {
        "id": 10117,
        "statement": "is(X, cold) :- is(X, big), is(X, round).",
        "description": "Big, round people are cold."
    },
    {
        "id": 10118,
        "statement": "is(X, blue) :- is(X, big), is(X, kind).",
        "description": "All big, kind people are blue."
    },
    {
        "id": 10119,
        "statement": "is(X, green) :- is(X, round), is(X, nice).",
        "description": "All round, nice things are green."
    },
    {
        "id": 10120,
        "statement": "is(X, nice) :- is(X, furry), is(X, rough).",
        "description": "If something is furry and rough then it is nice."
    },
    {
        "id": 10121,
        "statement": "is(dave, furry) :- is(dave, green), is(dave, round).",
        "description": "If Dave is green and Dave is round then Dave is furry."
    },
    {
        "id": 10122,
        "statement": "is(X, furry) :- is(X, round), is(X, red).",
        "description": "Round, red things are furry."
    },
    {
        "id": 10123,
        "statement": "is(X, red) :- is(X, green), is(X, nice).",
        "description": "If something is green and nice then it is red."
    },
    {
        "id": 10124,
        "statement": "is(X, white) :- is(X, rough), is(X, furry).",
        "description": "If something is rough and furry then it is white."
    },
    {
        "id": 10125,
        "statement": "is(X, nice) :- is(X, blue), not is(X, rough).",
        "description": "If something is blue and not rough then it is nice."
    },
    {
        "id": 10126,
        "statement": "is(X, smart) :- is(X, white).",
        "description": "If something is white then it is smart."
    },
    {
        "id": 10127,
        "statement": "is(X, smart) :- is(X, nice), not is(X, white).",
        "description": "If something is nice and not white then it is smart."
    },
    {
        "id": 10128,
        "statement": "is(X, young) :- is(X, nice), is(X, smart).",
        "description": "If something is nice and smart then it is young."
    },
    {
        "id": 10129,
        "statement": "sees(dog, squirrel) :- sees(X, dog), eats(dog, cow).",
        "description": "If something sees the dog and the dog eats the cow then the dog sees the squirrel."
    },
    {
        "id": 10130,
        "statement": "sees(X, cow) :- eats(X, cow).",
        "description": "If something eats the cow then it sees the cow."
    },
    {
        "id": 10131,
        "statement": "eats(X, cow) :- sees(X, rabbit), visits(X, dog).",
        "description": "If something sees the rabbit and it visits the dog then it eats the cow."
    },
    {
        "id": 10132,
        "statement": "is(rabbit, kind) :- is(X, kind), sees(X, rabbit).",
        "description": "If something is kind and it sees the rabbit then the rabbit is kind."
    },
    {
        "id": 10133,
        "statement": "eats(cow, dog) :- sees(rabbit, cow).",
        "description": "If the rabbit sees the cow then the cow eats the dog."
    },
    {
        "id": 10134,
        "statement": "sees(X, squirrel) :- is(X, nice).",
        "description": "If something is nice then it sees the squirrel."
    },
    {
        "id": 10135,
        "statement": "eats(X, cow) :- eats(X, dog).",
        "description": "If something eats the dog then it eats the cow."
    },
    {
        "id": 10136,
        "statement": "is(X, blue) :- visits(X, lion).",
        "description": "If someone visits the lion then they are blue."
    },
    {
        "id": 10137,
        "statement": "is(X, young) :- eats(X, lion).",
        "description": "If someone eats the lion then they are young."
    },
    {
        "id": 10138,
        "statement": "visits(X, lion) :- is(X, young), not eats(X, cow).",
        "description": "If someone is young and they do not eat the cow then they visit the lion."
    },
    {
        "id": 10139,
        "statement": "eats(tiger, lion) :- sees(X, tiger), not sees(tiger, cow).",
        "description": "If someone sees the tiger and the tiger does not see the cow then the tiger eats the lion."
    },
    {
        "id": 10140,
        "statement": "visits(cow, tiger) :- is(X, big), sees(X, cow).",
        "description": "If someone is big and they see the cow then the cow visits the tiger."
    },
    {
        "id": 10141,
        "statement": "sees(lion, tiger) :- eats(X, lion), sees(X, cow).",
        "description": "If someone eats the lion and they see the cow then the lion sees the tiger."
    },
    {
        "id": 10142,
        "statement": "is(tiger, young) :- is(tiger, kind).",
        "description": "If the tiger is kind then the tiger is young."
    },
    {
        "id": 10143,
        "statement": "sees(bear, cow) :- visits(X, bear).",
        "description": "If someone visits the bear then the bear sees the cow."
    },
    {
        "id": 10144,
        "statement": "is(X, furry) :- is(X, blue), is(X, round).",
        "description": "Blue, round things are furry."
    },
    {
        "id": 10145,
        "statement": "is(gary, big) :- is(gary, round).",
        "description": "If Gary is round then Gary is big."
    },
    {
        "id": 10146,
        "statement": "is(gary, big) :- is(gary, white).",
        "description": "If Gary is white then Gary is big."
    },
    {
        "id": 10147,
        "statement": "is(harry, smart) :- is(harry, red).",
        "description": "If Harry is red then Harry is smart."
    },
    {
        "id": 10148,
        "statement": "is(anne, smart) :- is(anne, cold), is(anne, green).",
        "description": "If Anne is cold and Anne is green then Anne is smart."
    },
    {
        "id": 10149,
        "statement": "is(X, green) :- is(X, red), not is(X, cold).",
        "description": "If someone is red and not cold then they are green."
    },
    {
        "id": 10150,
        "statement": "is(X, young) :- is(X, smart), is(X, red).",
        "description": "Smart, red people are young."
    },
    {
        "id": 10151,
        "statement": "is(X, young) :- is(X, smart), not is(X, green).",
        "description": "If someone is smart and not green then they are young."
    },
    {
        "id": 10152,
        "statement": "is(X, kind) :- is(X, smart), is(X, young).",
        "description": "Smart, young people are kind."
    },
    {
        "id": 10153,
        "statement": "eats(X, bald_eagle) :- is(X, kind), is(X, blue).",
        "description": "If something is kind and blue then it eats the bald eagle."
    },
    {
        "id": 10154,
        "statement": "is(tiger, young) :- is(X, blue), needs(X, tiger).",
        "description": "If something is blue and it needs the tiger then the tiger is young."
    },
    {
        "id": 10155,
        "statement": "is(bald_eagle, green) :- eats(X, bald_eagle), is(X, kind).",
        "description": "If something eats the bald eagle and it is kind then the bald eagle is green."
    },
    {
        "id": 10156,
        "statement": "is(lion, young) :- needs(X, lion).",
        "description": "If something needs the lion then the lion is young."
    },
    {
        "id": 10157,
        "statement": "likes(lion, cow) :- needs(X, bald_eagle), needs(X, lion).",
        "description": "If something needs the bald eagle and it needs the lion then the lion likes the cow."
    },
    {
        "id": 10158,
        "statement": "eats(lion, tiger) :- likes(X, lion).",
        "description": "If something likes the lion then the lion eats the tiger."
    },
    {
        "id": 10159,
        "statement": "likes(squirrel, lion) :- likes(X, bear), eats(X, squirrel).",
        "description": "If someone likes the bear and they eat the squirrel then the squirrel likes the lion."
    },
    {
        "id": 10160,
        "statement": "eats(X, tiger) :- is(X, green).",
        "description": "If someone is green then they eat the tiger."
    },
    {
        "id": 10161,
        "statement": "sees(bear, lion) :- likes(tiger, squirrel), likes(tiger, bear).",
        "description": "If the tiger likes the squirrel and the tiger likes the bear then the bear sees the lion."
    },
    {
        "id": 10162,
        "statement": "likes(lion, squirrel) :- is(lion, kind).",
        "description": "If the lion is kind then the lion likes the squirrel."
    },
    {
        "id": 10163,
        "statement": "sees(X, tiger) :- sees(X, lion).",
        "description": "If someone sees the lion then they see the tiger."
    },
    {
        "id": 10164,
        "statement": "eats(bear, lion) :- is(bear, red).",
        "description": "If the bear is red then the bear eats the lion."
    },
    {
        "id": 10165,
        "statement": "likes(tiger, bear) :- is(X, red), eats(X, tiger).",
        "description": "If someone is red and they eat the tiger then the tiger likes the bear."
    },
    {
        "id": 10166,
        "statement": "is(squirrel, green) :- eats(X, squirrel).",
        "description": "If someone eats the squirrel then the squirrel is green."
    },
    {
        "id": 10167,
        "statement": "is(X, smart) :- is(X, round), is(X, green).",
        "description": "All round, green people are smart."
    },
    {
        "id": 10168,
        "statement": "is(gary, green) :- is(gary, white).",
        "description": "If Gary is white then Gary is green."
    },
    {
        "id": 10169,
        "statement": "is(X, green) :- is(X, smart), is(X, big).",
        "description": "Smart, big people are green."
    },
    {
        "id": 10170,
        "statement": "is(gary, cold) :- is(gary, green), is(gary, white).",
        "description": "If Gary is green and Gary is white then Gary is cold."
    },
    {
        "id": 10171,
        "statement": "is(X, round) :- is(X, quiet), is(X, cold).",
        "description": "Quiet, cold people are round."
    },
    {
        "id": 10172,
        "statement": "is(X, nice) :- is(X, quiet), is(X, rough).",
        "description": "If something is quiet and rough then it is nice."
    },
    {
        "id": 10173,
        "statement": "is(X, rough) :- is(X, furry), is(X, quiet).",
        "description": "All furry, quiet things are rough."
    },
    {
        "id": 10174,
        "statement": "is(X, young) :- is(X, rough), is(X, furry).",
        "description": "All rough, furry things are young."
    },
    {
        "id": 10175,
        "statement": "is(charlie, rough) :- is(charlie, nice).",
        "description": "If Charlie is nice then Charlie is rough."
    },
    {
        "id": 10176,
        "statement": "is(X, furry) :- is(X, rough).",
        "description": "All rough things are furry."
    },
    {
        "id": 10177,
        "statement": "is(charlie, cold) :- is(charlie, quiet), is(charlie, furry).",
        "description": "If Charlie is quiet and Charlie is furry then Charlie is cold."
    },
    {
        "id": 10178,
        "statement": "eats(X, lion) :- needs(X, lion).",
        "description": "If someone needs the lion then they eat the lion."
    },
    {
        "id": 10179,
        "statement": "is(X, round) :- is(X, kind), not is(X, green).",
        "description": "If someone is kind and not green then they are round."
    },
    {
        "id": 10180,
        "statement": "is(X, kind) :- visits(X, mouse).",
        "description": "If someone visits the mouse then they are kind."
    },
    {
        "id": 10181,
        "statement": "visits(lion, tiger) :- needs(lion, mouse), visits(lion, rabbit).",
        "description": "If the lion needs the mouse and the lion visits the rabbit then the lion visits the tiger."
    },
    {
        "id": 10182,
        "statement": "needs(lion, mouse) :- visits(X, lion), needs(X, tiger).",
        "description": "If someone visits the lion and they need the tiger then the lion needs the mouse."
    },
    {
        "id": 10183,
        "statement": "visits(X, lion) :- visits(X, rabbit).",
        "description": "If someone visits the rabbit then they visit the lion."
    },
    {
        "id": 10184,
        "statement": "visits(X, lion) :- is(X, round), visits(X, mouse).",
        "description": "If someone is round and they visit the mouse then they visit the lion."
    },
    {
        "id": 10185,
        "statement": "needs(X, tiger) :- is(X, round).",
        "description": "If someone is round then they need the tiger."
    },
    {
        "id": 10186,
        "statement": "visits(rabbit, mouse) :- needs(X, rabbit), not eats(rabbit, lion).",
        "description": "If someone needs the rabbit and the rabbit does not eat the lion then the rabbit visits the mouse."
    },
    {
        "id": 10187,
        "statement": "is(X, young) :- is(X, smart), is(X, blue).",
        "description": "All smart, blue people are young."
    },
    {
        "id": 10188,
        "statement": "is(harry, white) :- is(harry, kind), is(harry, big).",
        "description": "If Harry is kind and Harry is big then Harry is white."
    },
    {
        "id": 10189,
        "statement": "is(X, big) :- is(X, blue), is(X, smart).",
        "description": "All blue, smart things are big."
    },
    {
        "id": 10190,
        "statement": "is(X, smart) :- is(X, rough), is(X, big).",
        "description": "Rough, big things are smart."
    },
    {
        "id": 10191,
        "statement": "is(X, rough) :- is(X, furry), is(X, blue).",
        "description": "All furry, blue things are rough."
    },
    {
        "id": 10192,
        "statement": "chases(lion, dog) :- is(lion, blue).",
        "description": "If the lion is blue then the lion chases the dog."
    },
    {
        "id": 10193,
        "statement": "is(X, round) :- needs(X, squirrel).",
        "description": "If something needs the squirrel then it is round."
    },
    {
        "id": 10194,
        "statement": "needs(dog, lion) :- visits(X, lion), needs(lion, dog).",
        "description": "If something visits the lion and the lion needs the dog then the dog needs the lion."
    },
    {
        "id": 10195,
        "statement": "needs(X, lion) :- is(X, green), is(X, round).",
        "description": "If something is green and round then it needs the lion."
    },
    {
        "id": 10196,
        "statement": "visits(squirrel, rabbit) :- needs(squirrel, lion).",
        "description": "If the squirrel needs the lion then the squirrel visits the rabbit."
    },
    {
        "id": 10197,
        "statement": "is(squirrel, green) :- chases(squirrel, lion), visits(squirrel, dog).",
        "description": "If the squirrel chases the lion and the squirrel visits the dog then the squirrel is green."
    },
    {
        "id": 10198,
        "statement": "needs(dog, lion) :- is(X, round), chases(X, dog).",
        "description": "If something is round and it chases the dog then the dog needs the lion."
    },
    {
        "id": 10199,
        "statement": "chases(X, lion) :- needs(X, dog), chases(X, dog).",
        "description": "If something needs the dog and it chases the dog then it chases the lion."
    },
    {
        "id": 10200,
        "statement": "needs(lion, squirrel) :- visits(X, rabbit), needs(X, lion).",
        "description": "If something visits the rabbit and it needs the lion then the lion needs the squirrel."
    },
    {
        "id": 10201,
        "statement": "is(X, red) :- is(X, kind), is(X, rough).",
        "description": "If something is kind and rough then it is red."
    },
    {
        "id": 10202,
        "statement": "is(X, round) :- is(X, kind), is(X, furry).",
        "description": "Kind, furry things are round."
    },
    {
        "id": 10203,
        "statement": "is(X, big) :- is(X, red), is(X, blue).",
        "description": "Red, blue things are big."
    },
    {
        "id": 10204,
        "statement": "is(X, rough) :- is(X, blue), is(X, round).",
        "description": "Blue, round things are rough."
    },
    {
        "id": 10205,
        "statement": "is(X, kind) :- is(X, big), is(X, blue).",
        "description": "All big, blue things are kind."
    },
    {
        "id": 10206,
        "statement": "is(X, rough) :- is(X, red), is(X, kind).",
        "description": "All red, kind things are rough."
    },
    {
        "id": 10207,
        "statement": "is(X, round) :- is(X, blue).",
        "description": "If something is blue then it is round."
    },
    {
        "id": 10208,
        "statement": "is(X, blue) :- is(X, young), is(X, kind).",
        "description": "Young, kind people are blue."
    },
    {
        "id": 10209,
        "statement": "is(X, furry) :- is(X, blue), is(X, red).",
        "description": "All blue, red people are furry."
    },
    {
        "id": 10210,
        "statement": "is(X, white) :- is(X, green), is(X, young).",
        "description": "Green, young people are white."
    },
    {
        "id": 10211,
        "statement": "is(X, red) :- is(X, furry), is(X, kind).",
        "description": "If someone is furry and kind then they are red."
    },
    {
        "id": 10212,
        "statement": "is(X, young) :- is(X, green), is(X, blue).",
        "description": "If someone is green and blue then they are young."
    },
    {
        "id": 10213,
        "statement": "is(charlie, big) :- not is(charlie, kind), not is(charlie, white).",
        "description": "If Charlie is not kind and Charlie is not white then Charlie is big."
    },
    {
        "id": 10214,
        "statement": "is(X, big) :- is(X, blue), is(X, kind).",
        "description": "If something is blue and kind then it is big."
    },
    {
        "id": 10215,
        "statement": "is(X, big) :- is(X, kind), is(X, nice).",
        "description": "Kind, nice things are big."
    },
    {
        "id": 10216,
        "statement": "is(X, red) :- is(X, green), is(X, white).",
        "description": "All green, white things are red."
    },
    {
        "id": 10217,
        "statement": "is(X, red) :- is(X, green), is(X, big).",
        "description": "Green, big things are red."
    },
    {
        "id": 10218,
        "statement": "is(X, red) :- is(X, rough).",
        "description": "All rough people are red."
    },
    {
        "id": 10219,
        "statement": "is(X, red) :- is(X, rough), is(X, kind).",
        "description": "All rough, kind people are red."
    },
    {
        "id": 10220,
        "statement": "is(X, rough) :- is(X, smart).",
        "description": "Smart people are rough."
    },
    {
        "id": 10221,
        "statement": "is(harry, blue) :- is(harry, smart), not is(harry, nice).",
        "description": "If Harry is smart and Harry is not nice then Harry is blue."
    },
    {
        "id": 10222,
        "statement": "chases(X, mouse) :- likes(X, dog).",
        "description": "If someone likes the dog then they chase the mouse."
    },
    {
        "id": 10223,
        "statement": "is(bear, rough) :- needs(X, bear).",
        "description": "If someone needs the bear then the bear is rough."
    },
    {
        "id": 10224,
        "statement": "chases(dog, bald_eagle) :- is(dog, young).",
        "description": "If the dog is young then the dog chases the bald eagle."
    },
    {
        "id": 10225,
        "statement": "likes(X, dog) :- is(X, cold), chases(X, bald_eagle).",
        "description": "If someone is cold and they chase the bald eagle then they like the dog."
    },
    {
        "id": 10226,
        "statement": "needs(bear, dog) :- likes(X, mouse), chases(mouse, bear).",
        "description": "If someone likes the mouse and the mouse chases the bear then the bear needs the dog."
    },
    {
        "id": 10227,
        "statement": "chases(X, bald_eagle) :- is(X, red), likes(X, bear).",
        "description": "If someone is red and they like the bear then they chase the bald eagle."
    },
    {
        "id": 10228,
        "statement": "likes(bear, dog) :- needs(bear, dog).",
        "description": "If the bear needs the dog then the bear likes the dog."
    },
    {
        "id": 10229,
        "statement": "likes(dog, bear) :- needs(X, dog), likes(dog, mouse).",
        "description": "If someone needs the dog and the dog likes the mouse then the dog likes the bear."
    },
    {
        "id": 10230,
        "statement": "is(X, round) :- is(X, cold), is(X, kind).",
        "description": "Cold, kind people are round."
    },
    {
        "id": 10231,
        "statement": "is(gary, cold) :- is(gary, quiet), is(gary, big).",
        "description": "If Gary is quiet and Gary is big then Gary is cold."
    },
    {
        "id": 10232,
        "statement": "is(X, nice) :- is(X, quiet), is(X, cold).",
        "description": "All quiet, cold people are nice."
    },
    {
        "id": 10233,
        "statement": "is(X, rough) :- is(X, cold), is(X, round).",
        "description": "Cold, round people are rough."
    },
    {
        "id": 10234,
        "statement": "is(dog, red) :- visits(X, dog).",
        "description": "If someone visits the dog then the dog is red."
    },
    {
        "id": 10235,
        "statement": "visits(mouse, lion) :- eats(X, bald_eagle), eats(bald_eagle, mouse).",
        "description": "If someone eats the bald eagle and the bald eagle eats the mouse then the mouse visits the lion."
    },
    {
        "id": 10236,
        "statement": "visits(X, mouse) :- is(X, green).",
        "description": "If someone is green then they visit the mouse."
    },
    {
        "id": 10237,
        "statement": "is(bald_eagle, green) :- eats(X, bald_eagle).",
        "description": "If someone eats the bald eagle then the bald eagle is green."
    },
    {
        "id": 10238,
        "statement": "eats(X, bald_eagle) :- is(X, young), visits(X, mouse).",
        "description": "If someone is young and they visit the mouse then they eat the bald eagle."
    },
    {
        "id": 10239,
        "statement": "chases(lion, mouse) :- chases(mouse, lion).",
        "description": "If the mouse chases the lion then the lion chases the mouse."
    },
    {
        "id": 10240,
        "statement": "is(bald_eagle, cold) :- is(X, red), eats(X, bald_eagle).",
        "description": "If someone is red and they eat the bald eagle then the bald eagle is cold."
    },
    {
        "id": 10241,
        "statement": "is(bald_eagle, young) :- chases(X, bald_eagle), visits(X, dog).",
        "description": "If someone chases the bald eagle and they visit the dog then the bald eagle is young."
    },
    {
        "id": 10242,
        "statement": "is(X, red) :- is(X, smart), is(X, kind).",
        "description": "Smart, kind things are red."
    },
    {
        "id": 10243,
        "statement": "is(X, smart) :- is(X, red), is(X, rough).",
        "description": "All red, rough things are smart."
    },
    {
        "id": 10244,
        "statement": "is(gary, rough) :- is(gary, quiet).",
        "description": "If Gary is quiet then Gary is rough."
    },
    {
        "id": 10245,
        "statement": "is(charlie, big) :- is(charlie, blue).",
        "description": "If Charlie is blue then Charlie is big."
    },
    {
        "id": 10246,
        "statement": "is(charlie, quiet) :- is(charlie, green).",
        "description": "If Charlie is green then Charlie is quiet."
    },
    {
        "id": 10247,
        "statement": "is(charlie, smart) :- is(charlie, white), is(charlie, quiet).",
        "description": "If Charlie is white and Charlie is quiet then Charlie is smart."
    },
    {
        "id": 10248,
        "statement": "is(bob, rough) :- is(bob, furry), is(bob, quiet).",
        "description": "If Bob is furry and Bob is quiet then Bob is rough."
    },
    {
        "id": 10249,
        "statement": "is(X, red) :- is(X, kind), is(X, round).",
        "description": "Kind, round things are red."
    },
    {
        "id": 10250,
        "statement": "is(bob, round) :- is(bob, furry), is(bob, quiet).",
        "description": "If Bob is furry and Bob is quiet then Bob is round."
    },
    {
        "id": 10251,
        "statement": "is(X, nice) :- is(X, quiet).",
        "description": "If something is quiet then it is nice."
    },
    {
        "id": 10252,
        "statement": "is(harry, kind) :- is(harry, nice), is(harry, round).",
        "description": "If Harry is nice and Harry is round then Harry is kind."
    },
    {
        "id": 10253,
        "statement": "is(X, big) :- is(X, cold), is(X, furry).",
        "description": "Cold, furry people are big."
    },
    {
        "id": 10254,
        "statement": "is(X, quiet) :- is(X, green), is(X, young).",
        "description": "All green, young people are quiet."
    },
    {
        "id": 10255,
        "statement": "is(X, furry) :- is(X, cold), is(X, big).",
        "description": "Cold, big people are furry."
    },
    {
        "id": 10256,
        "statement": "is(dave, furry) :- is(dave, young), is(dave, cold).",
        "description": "If Dave is young and Dave is cold then Dave is furry."
    },
    {
        "id": 10257,
        "statement": "chases(X, lion) :- is(X, young).",
        "description": "If something is young then it chases the lion."
    },
    {
        "id": 10258,
        "statement": "is(lion, young) :- chases(X, lion).",
        "description": "If something chases the lion then the lion is young."
    },
    {
        "id": 10259,
        "statement": "is(lion, young) :- chases(X, lion), not is(X, cold).",
        "description": "If something chases the lion and it is not cold then the lion is young."
    },
    {
        "id": 10260,
        "statement": "needs(bear, squirrel) :- eats(X, bear), chases(X, squirrel).",
        "description": "If something eats the bear and it chases the squirrel then the bear needs the squirrel."
    },
    {
        "id": 10261,
        "statement": "eats(lion, bald_eagle) :- eats(X, lion).",
        "description": "If something eats the lion then the lion eats the bald eagle."
    },
    {
        "id": 10262,
        "statement": "needs(squirrel, lion) :- chases(bald_eagle, squirrel), is(bald_eagle, rough).",
        "description": "If the bald eagle chases the squirrel and the bald eagle is rough then the squirrel needs the lion."
    },
    {
        "id": 10263,
        "statement": "needs(X, bald_eagle) :- needs(X, lion).",
        "description": "If something needs the lion then it needs the bald eagle."
    },
    {
        "id": 10264,
        "statement": "is(bald_eagle, young) :- eats(lion, bald_eagle).",
        "description": "If the lion eats the bald eagle then the bald eagle is young."
    },
    {
        "id": 10265,
        "statement": "is(X, rough) :- is(X, furry), is(X, big).",
        "description": "All furry, big people are rough."
    },
    {
        "id": 10266,
        "statement": "is(X, big) :- is(X, red), is(X, rough).",
        "description": "Red, rough people are big."
    },
    {
        "id": 10267,
        "statement": "is(dave, rough) :- is(dave, red), is(dave, blue).",
        "description": "If Dave is red and Dave is blue then Dave is rough."
    },
    {
        "id": 10268,
        "statement": "is(X, rough) :- is(X, blue), is(X, green).",
        "description": "All blue, green people are rough."
    },
    {
        "id": 10269,
        "statement": "is(X, kind) :- is(X, rough), is(X, blue).",
        "description": "If someone is rough and blue then they are kind."
    },
    {
        "id": 10270,
        "statement": "is(X, nice) :- is(X, blue), is(X, young).",
        "description": "All blue, young people are nice."
    },
    {
        "id": 10271,
        "statement": "is(X, kind) :- is(X, furry), is(X, nice).",
        "description": "Furry, nice people are kind."
    },
    {
        "id": 10272,
        "statement": "is(X, cold) :- is(X, rough), is(X, kind).",
        "description": "Rough, kind people are cold."
    },
    {
        "id": 10273,
        "statement": "is(X, smart) :- is(X, rough), is(X, big).",
        "description": "All rough, big people are smart."
    },
    {
        "id": 10274,
        "statement": "is(X, big) :- is(X, furry).",
        "description": "Furry people are big."
    },
    {
        "id": 10275,
        "statement": "is(X, big) :- is(X, rough), is(X, smart).",
        "description": "Rough, smart people are big."
    },
    {
        "id": 10276,
        "statement": "is(X, big) :- is(X, kind), is(X, cold).",
        "description": "If someone is kind and cold then they are big."
    },
    {
        "id": 10277,
        "statement": "chases(X, dog) :- is(X, red), is(X, big).",
        "description": "If something is red and big then it chases the dog."
    },
    {
        "id": 10278,
        "statement": "is(X, green) :- needs(X, bald_eagle).",
        "description": "If something needs the bald eagle then it is green."
    },
    {
        "id": 10279,
        "statement": "needs(X, squirrel) :- chases(X, dog).",
        "description": "If something chases the dog then it needs the squirrel."
    },
    {
        "id": 10280,
        "statement": "chases(X, bald_eagle) :- needs(X, squirrel).",
        "description": "If something needs the squirrel then it chases the bald eagle."
    },
    {
        "id": 10281,
        "statement": "is(X, young) :- chases(X, tiger), needs(X, bald_eagle).",
        "description": "If something chases the tiger and it needs the bald eagle then it is young."
    },
    {
        "id": 10282,
        "statement": "needs(bald_eagle, tiger) :- is(bald_eagle, big), is(bald_eagle, red).",
        "description": "If the bald eagle is big and the bald eagle is red then the bald eagle needs the tiger."
    },
    {
        "id": 10283,
        "statement": "is(X, young) :- likes(X, squirrel).",
        "description": "If something likes the squirrel then it is young."
    },
    {
        "id": 10284,
        "statement": "needs(cow, mouse) :- needs(X, squirrel), eats(squirrel, cow).",
        "description": "If something needs the squirrel and the squirrel eats the cow then the cow needs the mouse."
    },
    {
        "id": 10285,
        "statement": "sees(X, cow) :- is(X, blue).",
        "description": "If something is blue then it sees the cow."
    },
    {
        "id": 10286,
        "statement": "is(X, blue) :- sees(X, mouse).",
        "description": "If something sees the mouse then it is blue."
    },
    {
        "id": 10287,
        "statement": "sees(cow, mouse) :- is(cow, big).",
        "description": "If the cow is big then the cow sees the mouse."
    },
    {
        "id": 10288,
        "statement": "sees(mouse, tiger) :- sees(X, mouse), sees(mouse, squirrel).",
        "description": "If something sees the mouse and the mouse sees the squirrel then the mouse sees the tiger."
    },
    {
        "id": 10289,
        "statement": "eats(X, squirrel) :- is(X, green).",
        "description": "If something is green then it eats the squirrel."
    },
    {
        "id": 10290,
        "statement": "needs(mouse, tiger) :- sees(X, mouse).",
        "description": "If something sees the mouse then the mouse needs the tiger."
    },
    {
        "id": 10291,
        "statement": "is(anne, big) :- is(anne, white).",
        "description": "If Anne is white then Anne is big."
    },
    {
        "id": 10292,
        "statement": "is(dave, blue) :- is(dave, white), is(dave, young).",
        "description": "If Dave is white and Dave is young then Dave is blue."
    },
    {
        "id": 10293,
        "statement": "is(X, white) :- is(X, quiet), is(X, big).",
        "description": "Quiet, big things are white."
    },
    {
        "id": 10294,
        "statement": "is(X, white) :- is(X, quiet), is(X, blue).",
        "description": "If something is quiet and blue then it is white."
    },
    {
        "id": 10295,
        "statement": "is(harry, red) :- is(harry, nice), is(harry, round).",
        "description": "If Harry is nice and Harry is round then Harry is red."
    },
    {
        "id": 10296,
        "statement": "is(X, white) :- is(X, rough), is(X, quiet).",
        "description": "If something is rough and quiet then it is white."
    },
    {
        "id": 10297,
        "statement": "is(X, round) :- is(X, white), is(X, quiet).",
        "description": "If something is white and quiet then it is round."
    },
    {
        "id": 10298,
        "statement": "is(squirrel, green) :- is(X, blue), sees(X, squirrel).",
        "description": "If someone is blue and they see the squirrel then the squirrel is green."
    },
    {
        "id": 10299,
        "statement": "eats(squirrel, cat) :- sees(X, squirrel).",
        "description": "If someone sees the squirrel then the squirrel eats the cat."
    },
    {
        "id": 10300,
        "statement": "is(X, young) :- eats(X, cat), sees(X, bald_eagle).",
        "description": "If someone eats the cat and they see the bald eagle then they are young."
    },
    {
        "id": 10301,
        "statement": "sees(X, squirrel) :- needs(X, bald_eagle).",
        "description": "If someone needs the bald eagle then they see the squirrel."
    },
    {
        "id": 10302,
        "statement": "is(bald_eagle, green) :- sees(X, squirrel), sees(X, bald_eagle).",
        "description": "If someone sees the squirrel and they see the bald eagle then the bald eagle is green."
    },
    {
        "id": 10303,
        "statement": "needs(X, bald_eagle) :- is(X, green).",
        "description": "If someone is green then they need the bald eagle."
    },
    {
        "id": 10304,
        "statement": "is(X, white) :- is(X, kind), is(X, round).",
        "description": "If something is kind and round then it is white."
    },
    {
        "id": 10305,
        "statement": "is(X, green) :- is(X, white), is(X, furry).",
        "description": "If something is white and furry then it is green."
    },
    {
        "id": 10306,
        "statement": "is(X, round) :- is(X, green), is(X, cold).",
        "description": "If something is green and cold then it is round."
    },
    {
        "id": 10307,
        "statement": "is(X, quiet) :- is(X, cold), is(X, round).",
        "description": "All cold, round things are quiet."
    },
    {
        "id": 10308,
        "statement": "is(X, round) :- is(X, cold), is(X, green).",
        "description": "Cold, green things are round."
    },
    {
        "id": 10309,
        "statement": "is(X, kind) :- is(X, big), is(X, nice).",
        "description": "Big, nice things are kind."
    },
    {
        "id": 10310,
        "statement": "is(bob, nice) :- is(bob, big), is(bob, kind).",
        "description": "If Bob is big and Bob is kind then Bob is nice."
    },
    {
        "id": 10311,
        "statement": "is(X, big) :- needs(X, bald_eagle).",
        "description": "If someone needs the bald eagle then they are big."
    },
    {
        "id": 10312,
        "statement": "sees(X, bear) :- is(X, red), needs(X, tiger).",
        "description": "If someone is red and they need the tiger then they see the bear."
    },
    {
        "id": 10313,
        "statement": "is(X, blue) :- sees(X, dog).",
        "description": "If someone sees the dog then they are blue."
    },
    {
        "id": 10314,
        "statement": "needs(X, tiger) :- is(X, blue), sees(X, bald_eagle).",
        "description": "If someone is blue and they see the bald eagle then they need the tiger."
    },
    {
        "id": 10315,
        "statement": "is(X, round) :- sees(X, bear), is(X, big).",
        "description": "If someone sees the bear and they are big then they are round."
    },
    {
        "id": 10316,
        "statement": "sees(bald_eagle, bear) :- is(tiger, round), needs(tiger, bald_eagle).",
        "description": "If the tiger is round and the tiger needs the bald eagle then the bald eagle sees the bear."
    },
    {
        "id": 10317,
        "statement": "needs(bear, bald_eagle) :- visits(dog, bear).",
        "description": "If the dog visits the bear then the bear needs the bald eagle."
    },
    {
        "id": 10318,
        "statement": "eats(X, mouse) :- sees(X, bear), is(X, young).",
        "description": "If something sees the bear and it is young then it eats the mouse."
    },
    {
        "id": 10319,
        "statement": "needs(X, bear) :- needs(X, mouse).",
        "description": "If something needs the mouse then it needs the bear."
    },
    {
        "id": 10320,
        "statement": "needs(X, bear) :- eats(X, bear), sees(X, mouse).",
        "description": "If something eats the bear and it sees the mouse then it needs the bear."
    },
    {
        "id": 10321,
        "statement": "needs(X, mouse) :- is(X, kind).",
        "description": "If something is kind then it needs the mouse."
    },
    {
        "id": 10322,
        "statement": "sees(cat, bear) :- eats(X, cat).",
        "description": "If something eats the cat then the cat sees the bear."
    },
    {
        "id": 10323,
        "statement": "eats(lion, mouse) :- needs(X, lion).",
        "description": "If something needs the lion then the lion eats the mouse."
    },
    {
        "id": 10324,
        "statement": "is(mouse, kind) :- eats(X, mouse).",
        "description": "If something eats the mouse then the mouse is kind."
    },
    {
        "id": 10325,
        "statement": "is(X, nice) :- is(X, cold), is(X, big).",
        "description": "If someone is cold and big then they are nice."
    },
    {
        "id": 10326,
        "statement": "is(X, big) :- is(X, quiet), is(X, white).",
        "description": "Quiet, white people are big."
    },
    {
        "id": 10327,
        "statement": "is(erin, cold) :- is(erin, quiet), is(erin, kind).",
        "description": "If Erin is quiet and Erin is kind then Erin is cold."
    },
    {
        "id": 10328,
        "statement": "is(X, round) :- is(X, quiet), is(X, kind).",
        "description": "All quiet, kind people are round."
    },
    {
        "id": 10329,
        "statement": "chases(mouse, squirrel) :- is(X, cold), chases(X, mouse).",
        "description": "If someone is cold and they chase the mouse then the mouse chases the squirrel."
    },
    {
        "id": 10330,
        "statement": "is(mouse, red) :- chases(mouse, bear).",
        "description": "If the mouse chases the bear then the mouse is red."
    },
    {
        "id": 10331,
        "statement": "is(bear, rough) :- is(X, red), chases(X, bear).",
        "description": "If someone is red and they chase the bear then the bear is rough."
    },
    {
        "id": 10332,
        "statement": "is(X, big) :- visits(X, squirrel), is(X, rough).",
        "description": "If someone visits the squirrel and they are rough then they are big."
    },
    {
        "id": 10333,
        "statement": "is(lion, big) :- visits(X, lion).",
        "description": "If someone visits the lion then the lion is big."
    },
    {
        "id": 10334,
        "statement": "visits(squirrel, bear) :- is(squirrel, green), is(squirrel, cold).",
        "description": "If the squirrel is green and the squirrel is cold then the squirrel visits the bear."
    },
    {
        "id": 10335,
        "statement": "chases(X, bear) :- is(X, rough), is(X, cold).",
        "description": "If someone is rough and cold then they chase the bear."
    },
    {
        "id": 10336,
        "statement": "is(X, green) :- sees(X, squirrel).",
        "description": "If someone sees the squirrel then they are green."
    },
    {
        "id": 10337,
        "statement": "needs(X, tiger) :- is(X, green).",
        "description": "If someone is green then they need the tiger."
    },
    {
        "id": 10338,
        "statement": "sees(X, tiger) :- is(X, nice).",
        "description": "If someone is nice then they see the tiger."
    },
    {
        "id": 10339,
        "statement": "sees(X, squirrel) :- sees(X, tiger).",
        "description": "If someone sees the tiger then they see the squirrel."
    },
    {
        "id": 10340,
        "statement": "eats(X, tiger) :- is(X, nice).",
        "description": "If someone is nice then they eat the tiger."
    },
    {
        "id": 10341,
        "statement": "is(tiger, nice) :- needs(X, tiger), eats(tiger, bald_eagle).",
        "description": "If someone needs the tiger and the tiger eats the bald eagle then the tiger is nice."
    },
    {
        "id": 10342,
        "statement": "sees(X, bear) :- needs(X, tiger), needs(tiger, bald_eagle).",
        "description": "If someone needs the tiger and the tiger needs the bald eagle then they see the bear."
    },
    {
        "id": 10343,
        "statement": "is(anne, green) :- is(anne, cold), is(anne, round).",
        "description": "If Anne is cold and Anne is round then Anne is green."
    },
    {
        "id": 10344,
        "statement": "is(X, smart) :- is(X, rough), is(X, round).",
        "description": "If something is rough and round then it is smart."
    },
    {
        "id": 10345,
        "statement": "is(erin, round) :- is(erin, kind), is(erin, rough).",
        "description": "If Erin is kind and Erin is rough then Erin is round."
    },
    {
        "id": 10346,
        "statement": "is(X, cold) :- is(X, rough), is(X, smart).",
        "description": "If something is rough and smart then it is cold."
    },
    {
        "id": 10347,
        "statement": "is(squirrel, cold) :- chases(squirrel, cat).",
        "description": "If the squirrel chases the cat then the squirrel is cold."
    },
    {
        "id": 10348,
        "statement": "is(mouse, cold) :- chases(X, mouse).",
        "description": "If someone chases the mouse then the mouse is cold."
    },
    {
        "id": 10349,
        "statement": "needs(X, squirrel) :- is(X, kind).",
        "description": "If someone is kind then they need the squirrel."
    },
    {
        "id": 10350,
        "statement": "is(cat, kind) :- is(X, cold), chases(X, cat).",
        "description": "If someone is cold and they chase the cat then the cat is kind."
    },
    {
        "id": 10351,
        "statement": "chases(squirrel, cat) :- visits(X, bear), needs(bear, squirrel).",
        "description": "If someone visits the bear and the bear needs the squirrel then the squirrel chases the cat."
    },
    {
        "id": 10352,
        "statement": "chases(X, dog) :- is(X, cold).",
        "description": "If something is cold then it chases the dog."
    },
    {
        "id": 10353,
        "statement": "is(cow, round) :- sees(X, cow), is(cow, green).",
        "description": "If something sees the cow and the cow is green then the cow is round."
    },
    {
        "id": 10354,
        "statement": "is(X, young) :- chases(X, dog), not chases(X, cow).",
        "description": "If something chases the dog and it does not chase the cow then it is young."
    },
    {
        "id": 10355,
        "statement": "chases(X, rabbit) :- eats(X, rabbit).",
        "description": "If something eats the rabbit then it chases the rabbit."
    },
    {
        "id": 10356,
        "statement": "eats(dog, cow) :- eats(mouse, dog).",
        "description": "If the mouse eats the dog then the dog eats the cow."
    },
    {
        "id": 10357,
        "statement": "is(X, round) :- sees(X, rabbit).",
        "description": "If something sees the rabbit then it is round."
    },
    {
        "id": 10358,
        "statement": "is(bear, cold) :- eats(X, bear).",
        "description": "If something eats the bear then the bear is cold."
    },
    {
        "id": 10359,
        "statement": "chases(mouse, bald_eagle) :- chases(X, bear), not needs(X, mouse).",
        "description": "If something chases the bear and it does not need the mouse then the mouse chases the bald eagle."
    },
    {
        "id": 10360,
        "statement": "eats(bald_eagle, bear) :- eats(X, bald_eagle), is(bald_eagle, green).",
        "description": "If something eats the bald eagle and the bald eagle is green then the bald eagle eats the bear."
    },
    {
        "id": 10361,
        "statement": "eats(X, bear) :- needs(X, dog).",
        "description": "If something needs the dog then it eats the bear."
    },
    {
        "id": 10362,
        "statement": "eats(X, dog) :- is(X, cold).",
        "description": "If something is cold then it eats the dog."
    },
    {
        "id": 10363,
        "statement": "needs(X, dog) :- eats(X, dog), not needs(X, mouse).",
        "description": "If something eats the dog and it does not need the mouse then it needs the dog."
    },
    {
        "id": 10364,
        "statement": "needs(X, dog) :- chases(X, mouse).",
        "description": "If something chases the mouse then it needs the dog."
    },
    {
        "id": 10365,
        "statement": "needs(bald_eagle, bear) :- chases(X, bald_eagle).",
        "description": "If something chases the bald eagle then the bald eagle needs the bear."
    },
    {
        "id": 10366,
        "statement": "is(mouse, kind) :- eats(X, mouse), not eats(X, bear).",
        "description": "If something eats the mouse and it does not eat the bear then the mouse is kind."
    },
    {
        "id": 10367,
        "statement": "likes(cat, bear) :- likes(X, cat).",
        "description": "If something likes the cat then the cat likes the bear."
    },
    {
        "id": 10368,
        "statement": "is(X, blue) :- needs(X, bear), eats(X, bear).",
        "description": "If something needs the bear and it eats the bear then it is blue."
    },
    {
        "id": 10369,
        "statement": "eats(rabbit, bear) :- is(X, round), likes(X, rabbit).",
        "description": "If something is round and it likes the rabbit then the rabbit eats the bear."
    },
    {
        "id": 10370,
        "statement": "is(rabbit, cold) :- eats(X, rabbit), is(rabbit, young).",
        "description": "If something eats the rabbit and the rabbit is young then the rabbit is cold."
    },
    {
        "id": 10371,
        "statement": "likes(X, rabbit) :- is(X, round).",
        "description": "If something is round then it likes the rabbit."
    },
    {
        "id": 10372,
        "statement": "eats(cat, bear) :- is(cat, young), eats(cat, rabbit).",
        "description": "If the cat is young and the cat eats the rabbit then the cat eats the bear."
    },
    {
        "id": 10373,
        "statement": "eats(bear, rabbit) :- likes(X, bear), is(X, young).",
        "description": "If something likes the bear and it is young then the bear eats the rabbit."
    },
    {
        "id": 10374,
        "statement": "is(squirrel, rough) :- likes(X, squirrel).",
        "description": "If someone likes the squirrel then the squirrel is rough."
    },
    {
        "id": 10375,
        "statement": "is(cow, green) :- chases(X, cow), is(cow, big).",
        "description": "If someone chases the cow and the cow is big then the cow is green."
    },
    {
        "id": 10376,
        "statement": "sees(rabbit, cow) :- is(rabbit, green).",
        "description": "If the rabbit is green then the rabbit sees the cow."
    },
    {
        "id": 10377,
        "statement": "likes(X, dog) :- chases(X, rabbit).",
        "description": "If someone chases the rabbit then they like the dog."
    },
    {
        "id": 10378,
        "statement": "chases(X, rabbit) :- is(X, rough).",
        "description": "If someone is rough then they chase the rabbit."
    },
    {
        "id": 10379,
        "statement": "is(X, rough) :- likes(X, squirrel), chases(squirrel, rabbit).",
        "description": "If someone likes the squirrel and the squirrel chases the rabbit then they are rough."
    },
    {
        "id": 10380,
        "statement": "likes(dog, rabbit) :- likes(X, dog), is(X, big).",
        "description": "If someone likes the dog and they are big then the dog likes the rabbit."
    },
    {
        "id": 10381,
        "statement": "is(X, white) :- is(X, red), is(X, big).",
        "description": "All red, big people are white."
    },
    {
        "id": 10382,
        "statement": "is(charlie, round) :- is(charlie, cold), is(charlie, smart).",
        "description": "If Charlie is cold and Charlie is smart then Charlie is round."
    },
    {
        "id": 10383,
        "statement": "is(charlie, young) :- is(charlie, cold).",
        "description": "If Charlie is cold then Charlie is young."
    },
    {
        "id": 10384,
        "statement": "is(X, big) :- is(X, young), is(X, smart).",
        "description": "All young, smart people are big."
    },
    {
        "id": 10385,
        "statement": "is(X, cold) :- is(X, red), not is(X, smart).",
        "description": "If someone is red and not smart then they are cold."
    },
    {
        "id": 10386,
        "statement": "is(erin, quiet) :- is(erin, kind), is(erin, furry).",
        "description": "If Erin is kind and Erin is furry then Erin is quiet."
    },
    {
        "id": 10387,
        "statement": "is(X, cold) :- is(X, green), is(X, round).",
        "description": "Green, round people are cold."
    },
    {
        "id": 10388,
        "statement": "is(X, quiet) :- is(X, kind), is(X, cold).",
        "description": "If someone is kind and cold then they are quiet."
    },
    {
        "id": 10389,
        "statement": "is(X, quiet) :- is(X, furry), is(X, cold).",
        "description": "All furry, cold people are quiet."
    },
    {
        "id": 10390,
        "statement": "is(X, white) :- is(X, quiet), is(X, big).",
        "description": "If something is quiet and big then it is white."
    },
    {
        "id": 10391,
        "statement": "is(bob, kind) :- is(bob, quiet), is(bob, furry).",
        "description": "If Bob is quiet and Bob is furry then Bob is kind."
    },
    {
        "id": 10392,
        "statement": "is(X, red) :- is(X, white), is(X, furry).",
        "description": "White, furry things are red."
    },
    {
        "id": 10393,
        "statement": "chases(mouse, bear) :- chases(mouse, squirrel).",
        "description": "If the mouse chases the squirrel then the mouse chases the bear."
    },
    {
        "id": 10394,
        "statement": "needs(X, tiger) :- is(X, red), sees(X, tiger).",
        "description": "If something is red and it sees the tiger then it needs the tiger."
    },
    {
        "id": 10395,
        "statement": "sees(X, bear) :- sees(X, squirrel).",
        "description": "If something sees the squirrel then it sees the bear."
    },
    {
        "id": 10396,
        "statement": "chases(bear, tiger) :- sees(tiger, bear).",
        "description": "If the tiger sees the bear then the bear chases the tiger."
    },
    {
        "id": 10397,
        "statement": "chases(mouse, tiger) :- chases(bear, mouse).",
        "description": "If the bear chases the mouse then the mouse chases the tiger."
    },
    {
        "id": 10398,
        "statement": "sees(mouse, bear) :- sees(X, mouse).",
        "description": "If something sees the mouse then the mouse sees the bear."
    },
    {
        "id": 10399,
        "statement": "chases(X, bear) :- is(X, green), is(X, round).",
        "description": "If something is green and round then it chases the bear."
    },
    {
        "id": 10400,
        "statement": "sees(X, mouse) :- sees(X, bear), chases(X, tiger).",
        "description": "If something sees the bear and it chases the tiger then it sees the mouse."
    },
    {
        "id": 10401,
        "statement": "is(X, red) :- is(X, nice), is(X, white).",
        "description": "All nice, white things are red."
    },
    {
        "id": 10402,
        "statement": "is(X, quiet) :- is(X, red), is(X, kind).",
        "description": "If something is red and kind then it is quiet."
    },
    {
        "id": 10403,
        "statement": "is(X, white) :- is(X, rough), is(X, red).",
        "description": "Rough, red things are white."
    },
    {
        "id": 10404,
        "statement": "is(X, kind) :- is(X, green), not is(X, red).",
        "description": "If something is green and not red then it is kind."
    },
    {
        "id": 10405,
        "statement": "is(X, round) :- is(X, kind), is(X, green).",
        "description": "All kind, green things are round."
    },
    {
        "id": 10406,
        "statement": "is(X, round) :- is(X, red), is(X, kind).",
        "description": "If something is red and kind then it is round."
    },
    {
        "id": 10407,
        "statement": "is(X, smart) :- is(X, round), is(X, big).",
        "description": "Round, big things are smart."
    },
    {
        "id": 10408,
        "statement": "is(bob, cold) :- not is(bob, red).",
        "description": "If Bob is not red then Bob is cold."
    },
    {
        "id": 10409,
        "statement": "is(X, cold) :- is(X, green), is(X, red).",
        "description": "Green, red things are cold."
    },
    {
        "id": 10410,
        "statement": "is(X, big) :- is(X, green), is(X, red).",
        "description": "If something is green and red then it is big."
    },
    {
        "id": 10411,
        "statement": "is(X, cold) :- is(X, big), not is(X, green).",
        "description": "If something is big and not green then it is cold."
    },
    {
        "id": 10412,
        "statement": "is(X, white) :- is(X, green), not is(X, blue).",
        "description": "If something is green and not blue then it is white."
    },
    {
        "id": 10413,
        "statement": "is(X, white) :- is(X, cold), is(X, blue).",
        "description": "Cold, blue things are white."
    },
    {
        "id": 10414,
        "statement": "is(X, big) :- is(X, round), is(X, white).",
        "description": "All round, white people are big."
    },
    {
        "id": 10415,
        "statement": "is(X, smart) :- is(X, round), is(X, white).",
        "description": "All round, white people are smart."
    },
    {
        "id": 10416,
        "statement": "is(X, nice) :- is(X, cold), is(X, rough).",
        "description": "Cold, rough people are nice."
    },
    {
        "id": 10417,
        "statement": "is(X, rough) :- is(X, round), not is(X, white).",
        "description": "If someone is round and not white then they are rough."
    },
    {
        "id": 10418,
        "statement": "likes(X, bald_eagle) :- chases(X, bald_eagle).",
        "description": "If someone chases the bald eagle then they like the bald eagle."
    },
    {
        "id": 10419,
        "statement": "is(bear, blue) :- eats(bear, bald_eagle).",
        "description": "If the bear eats the bald eagle then the bear is blue."
    },
    {
        "id": 10420,
        "statement": "chases(X, bald_eagle) :- likes(X, dog), not eats(X, dog).",
        "description": "If someone likes the dog and they do not eat the dog then they chase the bald eagle."
    },
    {
        "id": 10421,
        "statement": "chases(mouse, bear) :- likes(bear, mouse), not is(mouse, round).",
        "description": "If the bear likes the mouse and the mouse is not round then the mouse chases the bear."
    },
    {
        "id": 10422,
        "statement": "likes(bald_eagle, dog) :- likes(X, bald_eagle).",
        "description": "If someone likes the bald eagle then the bald eagle likes the dog."
    },
    {
        "id": 10423,
        "statement": "likes(bald_eagle, bear) :- chases(X, bear), chases(X, bald_eagle).",
        "description": "If someone chases the bear and they chase the bald eagle then the bald eagle likes the bear."
    },
    {
        "id": 10424,
        "statement": "chases(mouse, dog) :- chases(bear, mouse).",
        "description": "If the bear chases the mouse then the mouse chases the dog."
    },
    {
        "id": 10425,
        "statement": "eats(bald_eagle, bear) :- is(X, round), eats(X, bald_eagle).",
        "description": "If someone is round and they eat the bald eagle then the bald eagle eats the bear."
    },
    {
        "id": 10426,
        "statement": "is(harry, furry) :- is(harry, kind), is(harry, quiet).",
        "description": "If Harry is kind and Harry is quiet then Harry is furry."
    },
    {
        "id": 10427,
        "statement": "is(X, cold) :- is(X, quiet), is(X, smart).",
        "description": "If something is quiet and smart then it is cold."
    },
    {
        "id": 10428,
        "statement": "is(X, green) :- is(X, cold), is(X, furry).",
        "description": "All cold, furry things are green."
    },
    {
        "id": 10429,
        "statement": "is(X, rough) :- is(X, blue), is(X, furry).",
        "description": "Blue, furry people are rough."
    },
    {
        "id": 10430,
        "statement": "is(X, blue) :- is(X, nice), is(X, rough).",
        "description": "Nice, rough people are blue."
    },
    {
        "id": 10431,
        "statement": "is(X, blue) :- is(X, quiet), is(X, rough).",
        "description": "If someone is quiet and rough then they are blue."
    },
    {
        "id": 10432,
        "statement": "eats(X, tiger) :- sees(X, mouse).",
        "description": "If someone sees the mouse then they eat the tiger."
    },
    {
        "id": 10433,
        "statement": "visits(X, mouse) :- eats(X, mouse), sees(X, mouse).",
        "description": "If someone eats the mouse and they see the mouse then they visit the mouse."
    },
    {
        "id": 10434,
        "statement": "sees(mouse, lion) :- visits(X, mouse).",
        "description": "If someone visits the mouse then the mouse sees the lion."
    },
    {
        "id": 10435,
        "statement": "is(mouse, blue) :- visits(X, mouse).",
        "description": "If someone visits the mouse then the mouse is blue."
    },
    {
        "id": 10436,
        "statement": "sees(bear, lion) :- eats(X, bear).",
        "description": "If someone eats the bear then the bear sees the lion."
    },
    {
        "id": 10437,
        "statement": "sees(X, mouse) :- sees(X, lion).",
        "description": "If someone sees the lion then they see the mouse."
    },
    {
        "id": 10438,
        "statement": "is(tiger, red) :- eats(X, tiger), is(tiger, cold).",
        "description": "If someone eats the tiger and the tiger is cold then the tiger is red."
    },
    {
        "id": 10439,
        "statement": "is(X, blue) :- eats(X, lion), likes(X, lion).",
        "description": "If something eats the lion and it likes the lion then it is blue."
    },
    {
        "id": 10440,
        "statement": "likes(X, dog) :- needs(X, cat), eats(cat, cow).",
        "description": "If something needs the cat and the cat eats the cow then it likes the dog."
    },
    {
        "id": 10441,
        "statement": "likes(dog, lion) :- likes(X, dog), likes(X, cat).",
        "description": "If something likes the dog and it likes the cat then the dog likes the lion."
    },
    {
        "id": 10442,
        "statement": "needs(cow, dog) :- needs(X, cow), likes(X, cow).",
        "description": "If something needs the cow and it likes the cow then the cow needs the dog."
    },
    {
        "id": 10443,
        "statement": "eats(X, dog) :- likes(X, dog).",
        "description": "If something likes the dog then it eats the dog."
    },
    {
        "id": 10444,
        "statement": "is(fiona, furry) :- is(fiona, green).",
        "description": "If Fiona is green then Fiona is furry."
    },
    {
        "id": 10445,
        "statement": "is(X, furry) :- is(X, smart), is(X, green).",
        "description": "All smart, green things are furry."
    },
    {
        "id": 10446,
        "statement": "is(X, green) :- is(X, smart), is(X, cold).",
        "description": "All smart, cold things are green."
    },
    {
        "id": 10447,
        "statement": "is(X, smart) :- is(X, quiet), is(X, kind).",
        "description": "If something is quiet and kind then it is smart."
    },
    {
        "id": 10448,
        "statement": "is(X, blue) :- is(X, cold), is(X, furry).",
        "description": "All cold, furry things are blue."
    },
    {
        "id": 10449,
        "statement": "is(gary, blue) :- is(gary, green), is(gary, quiet).",
        "description": "If Gary is green and Gary is quiet then Gary is blue."
    },
    {
        "id": 10450,
        "statement": "is(anne, nice) :- is(anne, furry), is(anne, big).",
        "description": "If Anne is furry and Anne is big then Anne is nice."
    },
    {
        "id": 10451,
        "statement": "is(X, blue) :- is(X, nice), is(X, big).",
        "description": "All nice, big people are blue."
    },
    {
        "id": 10452,
        "statement": "is(harry, big) :- is(harry, white).",
        "description": "If Harry is white then Harry is big."
    },
    {
        "id": 10453,
        "statement": "is(anne, big) :- is(anne, cold).",
        "description": "If Anne is cold then Anne is big."
    },
    {
        "id": 10454,
        "statement": "likes(bear, bald_eagle) :- is(X, red), not visits(X, bear).",
        "description": "If someone is red and they do not visit the bear then the bear likes the bald eagle."
    },
    {
        "id": 10455,
        "statement": "sees(X, lion) :- likes(X, bear), is(X, kind).",
        "description": "If someone likes the bear and they are kind then they see the lion."
    },
    {
        "id": 10456,
        "statement": "sees(X, bear) :- is(X, cold), not is(X, kind).",
        "description": "If someone is cold and not kind then they see the bear."
    },
    {
        "id": 10457,
        "statement": "visits(X, bald_eagle) :- is(X, kind).",
        "description": "If someone is kind then they visit the bald eagle."
    },
    {
        "id": 10458,
        "statement": "is(lion, red) :- likes(X, bear), not visits(X, lion).",
        "description": "If someone likes the bear and they do not visit the lion then the lion is red."
    },
    {
        "id": 10459,
        "statement": "likes(X, lion) :- is(X, cold).",
        "description": "If someone is cold then they like the lion."
    },
    {
        "id": 10460,
        "statement": "is(X, kind) :- is(X, nice), is(X, furry).",
        "description": "Nice, furry things are kind."
    },
    {
        "id": 10461,
        "statement": "is(X, smart) :- is(X, furry), is(X, kind).",
        "description": "Furry, kind things are smart."
    },
    {
        "id": 10462,
        "statement": "is(X, young) :- is(X, red), is(X, cold).",
        "description": "If something is red and cold then it is young."
    },
    {
        "id": 10463,
        "statement": "is(X, young) :- is(X, big), is(X, round).",
        "description": "Big, round things are young."
    },
    {
        "id": 10464,
        "statement": "is(X, red) :- is(X, blue), is(X, young).",
        "description": "Blue, young things are red."
    },
    {
        "id": 10465,
        "statement": "is(bob, cold) :- is(bob, red), is(bob, big).",
        "description": "If Bob is red and Bob is big then Bob is cold."
    },
    {
        "id": 10466,
        "statement": "visits(X, rabbit) :- is(X, big), visits(X, mouse).",
        "description": "If something is big and it visits the mouse then it visits the rabbit."
    },
    {
        "id": 10467,
        "statement": "needs(dog, cat) :- eats(X, dog).",
        "description": "If something eats the dog then the dog needs the cat."
    },
    {
        "id": 10468,
        "statement": "needs(rabbit, dog) :- is(rabbit, nice), is(rabbit, big).",
        "description": "If the rabbit is nice and the rabbit is big then the rabbit needs the dog."
    },
    {
        "id": 10469,
        "statement": "eats(X, rabbit) :- is(X, blue).",
        "description": "If something is blue then it eats the rabbit."
    },
    {
        "id": 10470,
        "statement": "is(X, big) :- eats(X, rabbit), is(rabbit, round).",
        "description": "If something eats the rabbit and the rabbit is round then it is big."
    },
    {
        "id": 10471,
        "statement": "visits(X, mouse) :- visits(X, dog).",
        "description": "If something visits the dog then it visits the mouse."
    },
    {
        "id": 10472,
        "statement": "is(cat, big) :- eats(X, cat), is(X, big).",
        "description": "If something eats the cat and it is big then the cat is big."
    },
    {
        "id": 10473,
        "statement": "needs(X, squirrel) :- needs(X, rabbit), not is(X, kind).",
        "description": "If someone needs the rabbit and they are not kind then they need the squirrel."
    },
    {
        "id": 10474,
        "statement": "needs(rabbit, cat) :- visits(rabbit, lion).",
        "description": "If the rabbit visits the lion then the rabbit needs the cat."
    },
    {
        "id": 10475,
        "statement": "is(X, round) :- visits(X, rabbit), needs(rabbit, squirrel).",
        "description": "If someone visits the rabbit and the rabbit needs the squirrel then they are round."
    },
    {
        "id": 10476,
        "statement": "is(X, rough) :- needs(X, squirrel).",
        "description": "If someone needs the squirrel then they are rough."
    },
    {
        "id": 10477,
        "statement": "needs(X, rabbit) :- is(X, round).",
        "description": "If someone is round then they need the rabbit."
    },
    {
        "id": 10478,
        "statement": "visits(X, lion) :- visits(X, cat), visits(X, rabbit).",
        "description": "If someone visits the cat and they visit the rabbit then they visit the lion."
    },
    {
        "id": 10479,
        "statement": "visits(squirrel, rabbit) :- is(X, cold), not chases(X, squirrel).",
        "description": "If someone is cold and they do not chase the squirrel then the squirrel visits the rabbit."
    },
    {
        "id": 10480,
        "statement": "is(X, cold) :- is(X, red), is(X, kind).",
        "description": "Red, kind things are cold."
    },
    {
        "id": 10481,
        "statement": "eats(cow, squirrel) :- eats(X, cow).",
        "description": "If something eats the cow then the cow eats the squirrel."
    },
    {
        "id": 10482,
        "statement": "eats(cow, squirrel) :- chases(X, cow).",
        "description": "If something chases the cow then the cow eats the squirrel."
    },
    {
        "id": 10483,
        "statement": "chases(X, squirrel) :- eats(X, cow).",
        "description": "If something eats the cow then it chases the squirrel."
    },
    {
        "id": 10484,
        "statement": "is(squirrel, big) :- visits(cow, squirrel).",
        "description": "If the cow visits the squirrel then the squirrel is big."
    },
    {
        "id": 10485,
        "statement": "is(squirrel, green) :- chases(X, squirrel).",
        "description": "If something chases the squirrel then the squirrel is green."
    },
    {
        "id": 10486,
        "statement": "eats(X, cow) :- is(X, green).",
        "description": "If something is green then it eats the cow."
    },
    {
        "id": 10487,
        "statement": "is(bald_eagle, big) :- visits(X, tiger), not visits(tiger, bald_eagle).",
        "description": "If something visits the tiger and the tiger does not visit the bald eagle then the bald eagle is big."
    },
    {
        "id": 10488,
        "statement": "visits(cow, tiger) :- eats(cow, bald_eagle), chases(cow, tiger).",
        "description": "If the cow eats the bald eagle and the cow chases the tiger then the cow visits the tiger."
    },
    {
        "id": 10489,
        "statement": "is(rabbit, red) :- eats(X, rabbit), is(X, cold).",
        "description": "If something eats the rabbit and it is cold then the rabbit is red."
    },
    {
        "id": 10490,
        "statement": "likes(rabbit, bald_eagle) :- likes(bald_eagle, rabbit).",
        "description": "If the bald eagle likes the rabbit then the rabbit likes the bald eagle."
    },
    {
        "id": 10491,
        "statement": "likes(X, cat) :- likes(X, bald_eagle), likes(bald_eagle, cat).",
        "description": "If something likes the bald eagle and the bald eagle likes the cat then it likes the cat."
    },
    {
        "id": 10492,
        "statement": "likes(bald_eagle, dog) :- eats(rabbit, bald_eagle).",
        "description": "If the rabbit eats the bald eagle then the bald eagle likes the dog."
    },
    {
        "id": 10493,
        "statement": "is(X, round) :- is(X, young), is(X, cold).",
        "description": "If something is young and cold then it is round."
    },
    {
        "id": 10494,
        "statement": "is(rabbit, round) :- eats(X, rabbit).",
        "description": "If something eats the rabbit then the rabbit is round."
    },
    {
        "id": 10495,
        "statement": "is(X, quiet) :- is(X, kind), is(X, round).",
        "description": "Kind, round people are quiet."
    },
    {
        "id": 10496,
        "statement": "is(X, quiet) :- is(X, kind), is(X, green).",
        "description": "All kind, green people are quiet."
    },
    {
        "id": 10497,
        "statement": "is(X, nice) :- is(X, kind), is(X, furry).",
        "description": "Kind, furry people are nice."
    },
    {
        "id": 10498,
        "statement": "is(X, furry) :- is(X, green), is(X, white).",
        "description": "All green, white people are furry."
    },
    {
        "id": 10499,
        "statement": "is(dave, green) :- is(dave, round).",
        "description": "If Dave is round then Dave is green."
    },
    {
        "id": 10500,
        "statement": "is(X, green) :- is(X, kind), is(X, round).",
        "description": "If someone is kind and round then they are green."
    },
    {
        "id": 10501,
        "statement": "is(fiona, green) :- is(fiona, quiet), is(fiona, nice).",
        "description": "If Fiona is quiet and Fiona is nice then Fiona is green."
    },
    {
        "id": 10502,
        "statement": "is(X, white) :- is(X, round), is(X, green).",
        "description": "If someone is round and green then they are white."
    },
    {
        "id": 10503,
        "statement": "visits(X, bear) :- eats(X, bear).",
        "description": "If something eats the bear then it visits the bear."
    },
    {
        "id": 10504,
        "statement": "visits(X, mouse) :- visits(X, cow).",
        "description": "If something visits the cow then it visits the mouse."
    },
    {
        "id": 10505,
        "statement": "visits(X, cow) :- eats(X, mouse).",
        "description": "If something eats the mouse then it visits the cow."
    },
    {
        "id": 10506,
        "statement": "chases(rabbit, cow) :- is(X, round), eats(X, rabbit).",
        "description": "If something is round and it eats the rabbit then the rabbit chases the cow."
    },
    {
        "id": 10507,
        "statement": "eats(X, mouse) :- chases(X, cow).",
        "description": "If something chases the cow then it eats the mouse."
    },
    {
        "id": 10508,
        "statement": "eats(X, squirrel) :- is(X, rough), needs(X, bear).",
        "description": "If something is rough and it needs the bear then it eats the squirrel."
    },
    {
        "id": 10509,
        "statement": "likes(X, lion) :- needs(X, bear).",
        "description": "If something needs the bear then it likes the lion."
    },
    {
        "id": 10510,
        "statement": "is(squirrel, big) :- eats(X, squirrel).",
        "description": "If something eats the squirrel then the squirrel is big."
    },
    {
        "id": 10511,
        "statement": "needs(X, lion) :- is(X, cold).",
        "description": "If something is cold then it needs the lion."
    },
    {
        "id": 10512,
        "statement": "is(X, round) :- likes(X, lion).",
        "description": "If something likes the lion then it is round."
    },
    {
        "id": 10513,
        "statement": "is(squirrel, red) :- likes(squirrel, lion), eats(squirrel, lion).",
        "description": "If the squirrel likes the lion and the squirrel eats the lion then the squirrel is red."
    },
    {
        "id": 10514,
        "statement": "likes(bear, squirrel) :- eats(squirrel, lion), needs(lion, bear).",
        "description": "If the squirrel eats the lion and the lion needs the bear then the bear likes the squirrel."
    },
    {
        "id": 10515,
        "statement": "is(X, nice) :- is(X, blue), is(X, young).",
        "description": "If someone is blue and young then they are nice."
    },
    {
        "id": 10516,
        "statement": "is(X, furry) :- is(X, nice), is(X, kind).",
        "description": "All nice, kind things are furry."
    },
    {
        "id": 10517,
        "statement": "is(dog, green) :- sees(X, dog).",
        "description": "If someone sees the dog then the dog is green."
    },
    {
        "id": 10518,
        "statement": "needs(X, tiger) :- sees(X, dog).",
        "description": "If someone sees the dog then they need the tiger."
    },
    {
        "id": 10519,
        "statement": "sees(X, squirrel) :- is(X, blue).",
        "description": "If someone is blue then they see the squirrel."
    },
    {
        "id": 10520,
        "statement": "is(X, nice) :- sees(X, squirrel), needs(squirrel, bear).",
        "description": "If someone sees the squirrel and the squirrel needs the bear then they are nice."
    },
    {
        "id": 10521,
        "statement": "is(bear, blue) :- sees(X, bear), needs(X, bear).",
        "description": "If someone sees the bear and they need the bear then the bear is blue."
    },
    {
        "id": 10522,
        "statement": "needs(X, bear) :- is(X, nice).",
        "description": "If someone is nice then they need the bear."
    },
    {
        "id": 10523,
        "statement": "needs(X, bear) :- sees(X, bear).",
        "description": "If someone sees the bear then they need the bear."
    },
    {
        "id": 10524,
        "statement": "chases(squirrel, bear) :- chases(tiger, squirrel), not is(squirrel, green).",
        "description": "If the tiger chases the squirrel and the squirrel is not green then the squirrel chases the bear."
    },
    {
        "id": 10525,
        "statement": "is(X, nice) :- is(X, red), is(X, kind).",
        "description": "Red, kind people are nice."
    },
    {
        "id": 10526,
        "statement": "is(X, young) :- is(X, big), is(X, quiet).",
        "description": "If someone is big and quiet then they are young."
    },
    {
        "id": 10527,
        "statement": "is(fiona, quiet) :- is(fiona, red).",
        "description": "If Fiona is red then Fiona is quiet."
    },
    {
        "id": 10528,
        "statement": "is(X, kind) :- is(X, quiet), is(X, big).",
        "description": "All quiet, big people are kind."
    },
    {
        "id": 10529,
        "statement": "is(harry, green) :- is(harry, round).",
        "description": "If Harry is round then Harry is green."
    },
    {
        "id": 10530,
        "statement": "is(X, cold) :- is(X, white), not is(X, big).",
        "description": "If someone is white and not big then they are cold."
    },
    {
        "id": 10531,
        "statement": "is(X, green) :- is(X, furry), not is(X, big).",
        "description": "If someone is furry and not big then they are green."
    },
    {
        "id": 10532,
        "statement": "is(X, round) :- is(X, furry), is(X, big).",
        "description": "If someone is furry and big then they are round."
    },
    {
        "id": 10533,
        "statement": "is(X, round) :- is(X, blue), not is(X, big).",
        "description": "If someone is blue and not big then they are round."
    },
    {
        "id": 10534,
        "statement": "is(bald_eagle, round) :- sees(X, bald_eagle).",
        "description": "If something sees the bald eagle then the bald eagle is round."
    },
    {
        "id": 10535,
        "statement": "sees(X, cat) :- needs(X, bald_eagle).",
        "description": "If something needs the bald eagle then it sees the cat."
    },
    {
        "id": 10536,
        "statement": "needs(mouse, bald_eagle) :- sees(bald_eagle, mouse).",
        "description": "If the bald eagle sees the mouse then the mouse needs the bald eagle."
    },
    {
        "id": 10537,
        "statement": "needs(mouse, cat) :- is(bald_eagle, big), chases(bald_eagle, mouse).",
        "description": "If the bald eagle is big and the bald eagle chases the mouse then the mouse needs the cat."
    },
    {
        "id": 10538,
        "statement": "chases(mouse, bald_eagle) :- is(bald_eagle, green), sees(bald_eagle, mouse).",
        "description": "If the bald eagle is green and the bald eagle sees the mouse then the mouse chases the bald eagle."
    },
    {
        "id": 10539,
        "statement": "is(X, green) :- sees(X, bald_eagle).",
        "description": "If something sees the bald eagle then it is green."
    },
    {
        "id": 10540,
        "statement": "sees(cat, bald_eagle) :- is(X, young), chases(X, cat).",
        "description": "If something is young and it chases the cat then the cat sees the bald eagle."
    },
    {
        "id": 10541,
        "statement": "is(X, kind) :- is(X, rough), is(X, big).",
        "description": "All rough, big people are kind."
    },
    {
        "id": 10542,
        "statement": "is(X, big) :- is(X, rough), is(X, kind).",
        "description": "If someone is rough and kind then they are big."
    },
    {
        "id": 10543,
        "statement": "sees(X, squirrel) :- likes(X, bald_eagle), eats(X, squirrel).",
        "description": "If someone likes the bald eagle and they eat the squirrel then they see the squirrel."
    },
    {
        "id": 10544,
        "statement": "likes(X, lion) :- eats(X, lion).",
        "description": "If someone eats the lion then they like the lion."
    },
    {
        "id": 10545,
        "statement": "is(X, big) :- is(X, kind), eats(X, lion).",
        "description": "If someone is kind and they eat the lion then they are big."
    },
    {
        "id": 10546,
        "statement": "eats(X, lion) :- is(X, rough).",
        "description": "If someone is rough then they eat the lion."
    },
    {
        "id": 10547,
        "statement": "is(squirrel, rough) :- sees(X, bald_eagle), likes(bald_eagle, squirrel).",
        "description": "If someone sees the bald eagle and the bald eagle likes the squirrel then the squirrel is rough."
    },
    {
        "id": 10548,
        "statement": "is(X, cold) :- chases(X, rabbit).",
        "description": "If something chases the rabbit then it is cold."
    },
    {
        "id": 10549,
        "statement": "is(cow, rough) :- eats(tiger, cow), is(cow, blue).",
        "description": "If the tiger eats the cow and the cow is blue then the cow is rough."
    },
    {
        "id": 10550,
        "statement": "visits(X, cow) :- is(X, blue).",
        "description": "If something is blue then it visits the cow."
    },
    {
        "id": 10551,
        "statement": "chases(bald_eagle, rabbit) :- visits(X, bald_eagle), eats(X, bald_eagle).",
        "description": "If something visits the bald eagle and it eats the bald eagle then the bald eagle chases the rabbit."
    },
    {
        "id": 10552,
        "statement": "visits(tiger, cow) :- is(X, rough), visits(X, tiger).",
        "description": "If something is rough and it visits the tiger then the tiger visits the cow."
    },
    {
        "id": 10553,
        "statement": "visits(X, bald_eagle) :- chases(X, tiger).",
        "description": "If something chases the tiger then it visits the bald eagle."
    },
    {
        "id": 10554,
        "statement": "visits(tiger, rabbit) :- not visits(bald_eagle, tiger).",
        "description": "If the bald eagle does not visit the tiger then the tiger visits the rabbit."
    },
    {
        "id": 10555,
        "statement": "visits(X, tiger) :- chases(X, tiger).",
        "description": "If someone chases the tiger then they visit the tiger."
    },
    {
        "id": 10556,
        "statement": "sees(X, cow) :- visits(X, mouse), sees(X, mouse).",
        "description": "If someone visits the mouse and they see the mouse then they see the cow."
    },
    {
        "id": 10557,
        "statement": "visits(X, cat) :- is(X, blue), is(X, young).",
        "description": "If someone is blue and young then they visit the cat."
    },
    {
        "id": 10558,
        "statement": "visits(X, mouse) :- is(X, blue).",
        "description": "If someone is blue then they visit the mouse."
    },
    {
        "id": 10559,
        "statement": "is(mouse, blue) :- sees(X, mouse), sees(mouse, cat).",
        "description": "If someone sees the mouse and the mouse sees the cat then the mouse is blue."
    },
    {
        "id": 10560,
        "statement": "sees(cow, tiger) :- chases(X, cat), sees(cat, cow).",
        "description": "If someone chases the cat and the cat sees the cow then the cow sees the tiger."
    },
    {
        "id": 10561,
        "statement": "sees(X, cow) :- chases(X, cat).",
        "description": "If someone chases the cat then they see the cow."
    },
    {
        "id": 10562,
        "statement": "visits(tiger, mouse) :- is(tiger, nice).",
        "description": "If the tiger is nice then the tiger visits the mouse."
    },
    {
        "id": 10563,
        "statement": "is(X, white) :- is(X, smart), is(X, furry).",
        "description": "All smart, furry people are white."
    },
    {
        "id": 10564,
        "statement": "is(X, smart) :- is(X, blue), is(X, white).",
        "description": "If someone is blue and white then they are smart."
    },
    {
        "id": 10565,
        "statement": "is(X, blue) :- is(X, big), is(X, furry).",
        "description": "If someone is big and furry then they are blue."
    },
    {
        "id": 10566,
        "statement": "is(erin, white) :- is(erin, kind), is(erin, green).",
        "description": "If Erin is kind and Erin is green then Erin is white."
    },
    {
        "id": 10567,
        "statement": "is(X, big) :- is(X, smart), is(X, kind).",
        "description": "All smart, kind people are big."
    },
    {
        "id": 10568,
        "statement": "is(harry, round) :- is(harry, quiet), is(harry, nice).",
        "description": "If Harry is quiet and Harry is nice then Harry is round."
    },
    {
        "id": 10569,
        "statement": "is(X, quiet) :- is(X, red), is(X, round).",
        "description": "Red, round things are quiet."
    },
    {
        "id": 10570,
        "statement": "is(harry, red) :- is(harry, nice).",
        "description": "If Harry is nice then Harry is red."
    },
    {
        "id": 10571,
        "statement": "is(fiona, furry) :- is(fiona, round).",
        "description": "If Fiona is round then Fiona is furry."
    },
    {
        "id": 10572,
        "statement": "is(X, round) :- is(X, kind), is(X, furry).",
        "description": "All kind, furry things are round."
    },
    {
        "id": 10573,
        "statement": "is(erin, furry) :- is(erin, green).",
        "description": "If Erin is green then Erin is furry."
    },
    {
        "id": 10574,
        "statement": "is(X, smart) :- is(X, kind), is(X, round).",
        "description": "If something is kind and round then it is smart."
    },
    {
        "id": 10575,
        "statement": "is(fiona, round) :- is(fiona, blue).",
        "description": "If Fiona is blue then Fiona is round."
    },
    {
        "id": 10576,
        "statement": "is(X, kind) :- is(X, quiet), is(X, blue).",
        "description": "Quiet, blue things are kind."
    },
    {
        "id": 10577,
        "statement": "is(X, green) :- is(X, nice), not is(X, round).",
        "description": "If someone is nice and not round then they are green."
    },
    {
        "id": 10578,
        "statement": "is(X, green) :- is(X, kind), is(X, nice).",
        "description": "Kind, nice people are green."
    },
    {
        "id": 10579,
        "statement": "is(X, rough) :- is(X, round), is(X, nice).",
        "description": "All round, nice people are rough."
    },
    {
        "id": 10580,
        "statement": "is(X, white) :- is(X, nice), is(X, quiet).",
        "description": "All nice, quiet people are white."
    },
    {
        "id": 10581,
        "statement": "is(X, nice) :- is(X, quiet), is(X, kind).",
        "description": "If someone is quiet and kind then they are nice."
    },
    {
        "id": 10582,
        "statement": "is(X, nice) :- is(X, blue).",
        "description": "If something is blue then it is nice."
    },
    {
        "id": 10583,
        "statement": "is(dave, smart) :- is(dave, round).",
        "description": "If Dave is round then Dave is smart."
    },
    {
        "id": 10584,
        "statement": "chases(tiger, bear) :- sees(X, bear), chases(X, tiger).",
        "description": "If someone sees the bear and they chase the tiger then the tiger chases the bear."
    },
    {
        "id": 10585,
        "statement": "is(tiger, kind) :- chases(X, tiger).",
        "description": "If someone chases the tiger then the tiger is kind."
    },
    {
        "id": 10586,
        "statement": "is(lion, big) :- is(X, kind), sees(X, lion).",
        "description": "If someone is kind and they see the lion then the lion is big."
    },
    {
        "id": 10587,
        "statement": "chases(bear, bald_eagle) :- chases(X, bear), needs(bear, tiger).",
        "description": "If someone chases the bear and the bear needs the tiger then the bear chases the bald eagle."
    },
    {
        "id": 10588,
        "statement": "needs(X, lion) :- is(X, big).",
        "description": "If someone is big then they need the lion."
    },
    {
        "id": 10589,
        "statement": "is(X, blue) :- needs(X, lion).",
        "description": "If someone needs the lion then they are blue."
    },
    {
        "id": 10590,
        "statement": "chases(X, tiger) :- is(X, kind), is(X, blue).",
        "description": "If someone is kind and blue then they chase the tiger."
    },
    {
        "id": 10591,
        "statement": "sees(X, bald_eagle) :- is(X, cold), not needs(X, lion).",
        "description": "If someone is cold and they do not need the lion then they see the bald eagle."
    },
    {
        "id": 10592,
        "statement": "is(dog, cold) :- needs(mouse, dog), chases(dog, squirrel).",
        "description": "If the mouse needs the dog and the dog chases the squirrel then the dog is cold."
    },
    {
        "id": 10593,
        "statement": "needs(X, cat) :- is(X, young), visits(X, squirrel).",
        "description": "If something is young and it visits the squirrel then it needs the cat."
    },
    {
        "id": 10594,
        "statement": "is(squirrel, young) :- needs(X, squirrel).",
        "description": "If something needs the squirrel then the squirrel is young."
    },
    {
        "id": 10595,
        "statement": "visits(X, mouse) :- is(X, green), is(X, cold).",
        "description": "If something is green and cold then it visits the mouse."
    },
    {
        "id": 10596,
        "statement": "needs(cat, dog) :- is(X, young), needs(X, cat).",
        "description": "If something is young and it needs the cat then the cat needs the dog."
    },
    {
        "id": 10597,
        "statement": "visits(X, squirrel) :- is(X, rough).",
        "description": "If something is rough then it visits the squirrel."
    },
    {
        "id": 10598,
        "statement": "is(dog, rough) :- needs(X, dog).",
        "description": "If something needs the dog then the dog is rough."
    },
    {
        "id": 10599,
        "statement": "needs(squirrel, mouse) :- chases(squirrel, cat).",
        "description": "If the squirrel chases the cat then the squirrel needs the mouse."
    },
    {
        "id": 10600,
        "statement": "chases(X, tiger) :- is(X, rough).",
        "description": "If something is rough then it chases the tiger."
    },
    {
        "id": 10601,
        "statement": "is(tiger, nice) :- not chases(tiger, lion).",
        "description": "If the tiger does not chase the lion then the tiger is nice."
    },
    {
        "id": 10602,
        "statement": "chases(tiger, mouse) :- is(X, nice), needs(X, tiger).",
        "description": "If something is nice and it needs the tiger then the tiger chases the mouse."
    },
    {
        "id": 10603,
        "statement": "chases(rabbit, tiger) :- likes(X, rabbit).",
        "description": "If something likes the rabbit then the rabbit chases the tiger."
    },
    {
        "id": 10604,
        "statement": "likes(X, rabbit) :- is(X, nice), is(X, cold).",
        "description": "If something is nice and cold then it likes the rabbit."
    },
    {
        "id": 10605,
        "statement": "chases(X, mouse) :- needs(X, rabbit).",
        "description": "If something needs the rabbit then it chases the mouse."
    },
    {
        "id": 10606,
        "statement": "is(erin, cold) :- is(erin, kind).",
        "description": "If Erin is kind then Erin is cold."
    },
    {
        "id": 10607,
        "statement": "is(X, kind) :- is(X, green), is(X, nice).",
        "description": "Green, nice people are kind."
    },
    {
        "id": 10608,
        "statement": "is(X, cold) :- is(X, kind), is(X, big).",
        "description": "If someone is kind and big then they are cold."
    },
    {
        "id": 10609,
        "statement": "is(X, quiet) :- is(X, blue), is(X, young).",
        "description": "Blue, young things are quiet."
    },
    {
        "id": 10610,
        "statement": "is(X, kind) :- is(X, quiet), is(X, blue).",
        "description": "If something is quiet and blue then it is kind."
    },
    {
        "id": 10611,
        "statement": "is(X, young) :- is(X, cold).",
        "description": "Cold things are young."
    },
    {
        "id": 10612,
        "statement": "is(X, blue) :- is(X, quiet), is(X, young).",
        "description": "If something is quiet and young then it is blue."
    },
    {
        "id": 10613,
        "statement": "is(fiona, cold) :- is(fiona, kind).",
        "description": "If Fiona is kind then Fiona is cold."
    },
    {
        "id": 10614,
        "statement": "is(X, blue) :- eats(X, bald_eagle).",
        "description": "If someone eats the bald eagle then they are blue."
    },
    {
        "id": 10615,
        "statement": "is(bald_eagle, blue) :- sees(bald_eagle, mouse).",
        "description": "If the bald eagle sees the mouse then the bald eagle is blue."
    },
    {
        "id": 10616,
        "statement": "eats(X, bald_eagle) :- likes(X, bald_eagle), not sees(bald_eagle, mouse).",
        "description": "If someone likes the bald eagle and the bald eagle does not see the mouse then they eat the bald eagle."
    },
    {
        "id": 10617,
        "statement": "sees(X, rabbit) :- is(X, round), eats(X, bald_eagle).",
        "description": "If someone is round and they eat the bald eagle then they see the rabbit."
    },
    {
        "id": 10618,
        "statement": "likes(X, bald_eagle) :- sees(X, squirrel), eats(X, rabbit).",
        "description": "If someone sees the squirrel and they eat the rabbit then they like the bald eagle."
    },
    {
        "id": 10619,
        "statement": "visits(X, dog) :- is(X, rough).",
        "description": "If someone is rough then they visit the dog."
    },
    {
        "id": 10620,
        "statement": "visits(X, dog) :- eats(X, squirrel).",
        "description": "If someone eats the squirrel then they visit the dog."
    },
    {
        "id": 10621,
        "statement": "visits(dog, mouse) :- chases(mouse, dog), visits(mouse, dog).",
        "description": "If the mouse chases the dog and the mouse visits the dog then the dog visits the mouse."
    },
    {
        "id": 10622,
        "statement": "is(mouse, rough) :- chases(mouse, dog).",
        "description": "If the mouse chases the dog then the mouse is rough."
    },
    {
        "id": 10623,
        "statement": "visits(mouse, squirrel) :- visits(X, mouse), is(X, cold).",
        "description": "If someone visits the mouse and they are cold then the mouse visits the squirrel."
    },
    {
        "id": 10624,
        "statement": "is(X, cold) :- is(X, young), not is(X, blue).",
        "description": "If someone is young and not blue then they are cold."
    },
    {
        "id": 10625,
        "statement": "visits(cow, dog) :- chases(X, squirrel), not chases(X, cow).",
        "description": "If someone chases the squirrel and they do not chase the cow then the cow visits the dog."
    },
    {
        "id": 10626,
        "statement": "is(gary, blue) :- is(gary, round).",
        "description": "If Gary is round then Gary is blue."
    },
    {
        "id": 10627,
        "statement": "is(X, smart) :- is(X, white), is(X, blue).",
        "description": "White, blue people are smart."
    },
    {
        "id": 10628,
        "statement": "is(X, white) :- is(X, smart), is(X, rough).",
        "description": "All smart, rough people are white."
    },
    {
        "id": 10629,
        "statement": "is(X, kind) :- is(X, round), is(X, red).",
        "description": "All round, red things are kind."
    },
    {
        "id": 10630,
        "statement": "is(X, round) :- is(X, furry), is(X, cold).",
        "description": "If something is furry and cold then it is round."
    },
    {
        "id": 10631,
        "statement": "chases(rabbit, mouse) :- needs(X, lion), likes(lion, rabbit).",
        "description": "If someone needs the lion and the lion likes the rabbit then the rabbit chases the mouse."
    },
    {
        "id": 10632,
        "statement": "likes(rabbit, mouse) :- needs(X, rabbit), is(X, round).",
        "description": "If someone needs the rabbit and they are round then the rabbit likes the mouse."
    },
    {
        "id": 10633,
        "statement": "needs(lion, mouse) :- needs(X, cat), likes(X, lion).",
        "description": "If someone needs the cat and they like the lion then the lion needs the mouse."
    },
    {
        "id": 10634,
        "statement": "is(X, rough) :- is(X, red), chases(X, mouse).",
        "description": "If someone is red and they chase the mouse then they are rough."
    },
    {
        "id": 10635,
        "statement": "needs(X, mouse) :- likes(X, cat).",
        "description": "If someone likes the cat then they need the mouse."
    },
    {
        "id": 10636,
        "statement": "chases(X, mouse) :- chases(X, lion), is(lion, big).",
        "description": "If someone chases the lion and the lion is big then they chase the mouse."
    },
    {
        "id": 10637,
        "statement": "sees(bear, cat) :- sees(X, cat), eats(cat, bear).",
        "description": "If someone sees the cat and the cat eats the bear then the bear sees the cat."
    },
    {
        "id": 10638,
        "statement": "eats(lion, rabbit) :- eats(X, lion).",
        "description": "If someone eats the lion then the lion eats the rabbit."
    },
    {
        "id": 10639,
        "statement": "likes(bear, cat) :- sees(lion, bear).",
        "description": "If the lion sees the bear then the bear likes the cat."
    },
    {
        "id": 10640,
        "statement": "likes(bear, cat) :- is(lion, green), sees(lion, bear).",
        "description": "If the lion is green and the lion sees the bear then the bear likes the cat."
    },
    {
        "id": 10641,
        "statement": "sees(X, bear) :- likes(X, cat), not likes(X, rabbit).",
        "description": "If someone likes the cat and they do not like the rabbit then they see the bear."
    },
    {
        "id": 10642,
        "statement": "sees(X, lion) :- is(X, green).",
        "description": "If someone is green then they see the lion."
    },
    {
        "id": 10643,
        "statement": "likes(lion, cat) :- sees(rabbit, bear), not likes(rabbit, lion).",
        "description": "If the rabbit sees the bear and the rabbit does not like the lion then the lion likes the cat."
    },
    {
        "id": 10644,
        "statement": "sees(bear, rabbit) :- likes(bear, cat).",
        "description": "If the bear likes the cat then the bear sees the rabbit."
    },
    {
        "id": 10645,
        "statement": "is(dave, big) :- is(dave, nice), is(dave, quiet).",
        "description": "If Dave is nice and Dave is quiet then Dave is big."
    },
    {
        "id": 10646,
        "statement": "is(X, green) :- is(X, white), is(X, red).",
        "description": "If someone is white and red then they are green."
    },
    {
        "id": 10647,
        "statement": "is(X, nice) :- is(X, smart), is(X, young).",
        "description": "All smart, young people are nice."
    },
    {
        "id": 10648,
        "statement": "is(X, cold) :- is(X, nice), is(X, green).",
        "description": "Nice, green people are cold."
    },
    {
        "id": 10649,
        "statement": "is(erin, red) :- is(erin, cold).",
        "description": "If Erin is cold then Erin is red."
    },
    {
        "id": 10650,
        "statement": "chases(X, bald_eagle) :- is(X, blue), visits(X, cow).",
        "description": "If someone is blue and they visit the cow then they chase the bald eagle."
    },
    {
        "id": 10651,
        "statement": "eats(X, dog) :- eats(X, bald_eagle).",
        "description": "If someone eats the bald eagle then they eat the dog."
    },
    {
        "id": 10652,
        "statement": "chases(X, lion) :- chases(X, bald_eagle).",
        "description": "If someone chases the bald eagle then they chase the lion."
    },
    {
        "id": 10653,
        "statement": "chases(X, cow) :- is(X, green).",
        "description": "If someone is green then they chase the cow."
    },
    {
        "id": 10654,
        "statement": "eats(X, lion) :- chases(X, bald_eagle), is(X, red).",
        "description": "If someone chases the bald eagle and they are red then they eat the lion."
    },
    {
        "id": 10655,
        "statement": "is(dog, cold) :- visits(X, bald_eagle), chases(X, dog).",
        "description": "If someone visits the bald eagle and they chase the dog then the dog is cold."
    },
    {
        "id": 10656,
        "statement": "chases(lion, dog) :- eats(X, cow), chases(X, lion).",
        "description": "If someone eats the cow and they chase the lion then the lion chases the dog."
    },
    {
        "id": 10657,
        "statement": "needs(X, tiger) :- needs(X, bald_eagle).",
        "description": "If something needs the bald eagle then it needs the tiger."
    },
    {
        "id": 10658,
        "statement": "needs(tiger, bald_eagle) :- visits(X, tiger).",
        "description": "If something visits the tiger then the tiger needs the bald eagle."
    },
    {
        "id": 10659,
        "statement": "needs(tiger, bald_eagle) :- chases(tiger, rabbit).",
        "description": "If the tiger chases the rabbit then the tiger needs the bald eagle."
    },
    {
        "id": 10660,
        "statement": "needs(tiger, bald_eagle) :- needs(X, tiger).",
        "description": "If something needs the tiger then the tiger needs the bald eagle."
    },
    {
        "id": 10661,
        "statement": "visits(tiger, bald_eagle) :- needs(X, tiger).",
        "description": "If something needs the tiger then the tiger visits the bald eagle."
    },
    {
        "id": 10662,
        "statement": "visits(dog, rabbit) :- chases(dog, bald_eagle).",
        "description": "If the dog chases the bald eagle then the dog visits the rabbit."
    },
    {
        "id": 10663,
        "statement": "visits(X, bald_eagle) :- visits(X, rabbit), chases(X, bald_eagle).",
        "description": "If something visits the rabbit and it chases the bald eagle then it visits the bald eagle."
    },
    {
        "id": 10664,
        "statement": "is(X, big) :- needs(X, tiger).",
        "description": "If something needs the tiger then it is big."
    },
    {
        "id": 10665,
        "statement": "is(charlie, rough) :- is(charlie, kind).",
        "description": "If Charlie is kind then Charlie is rough."
    },
    {
        "id": 10666,
        "statement": "is(X, round) :- is(X, nice), is(X, blue).",
        "description": "All nice, blue things are round."
    },
    {
        "id": 10667,
        "statement": "is(X, kind) :- is(X, furry), is(X, rough).",
        "description": "If something is furry and rough then it is kind."
    },
    {
        "id": 10668,
        "statement": "is(X, rough) :- is(X, round), is(X, young).",
        "description": "Round, young things are rough."
    },
    {
        "id": 10669,
        "statement": "is(X, rough) :- is(X, blue), not is(X, young).",
        "description": "If something is blue and not young then it is rough."
    },
    {
        "id": 10670,
        "statement": "is(X, red) :- is(X, nice), is(X, young).",
        "description": "Nice, young people are red."
    },
    {
        "id": 10671,
        "statement": "is(X, smart) :- is(X, red), is(X, young).",
        "description": "All red, young people are smart."
    },
    {
        "id": 10672,
        "statement": "is(X, furry) :- is(X, red), is(X, big).",
        "description": "All red, big people are furry."
    },
    {
        "id": 10673,
        "statement": "is(X, quiet) :- is(X, big), is(X, round).",
        "description": "If someone is big and round then they are quiet."
    },
    {
        "id": 10674,
        "statement": "is(X, round) :- is(X, big), is(X, furry).",
        "description": "All big, furry people are round."
    },
    {
        "id": 10675,
        "statement": "is(X, rough) :- is(X, red), not is(X, furry).",
        "description": "If someone is red and not furry then they are rough."
    },
    {
        "id": 10676,
        "statement": "is(X, cold) :- is(X, rough), is(X, quiet).",
        "description": "All rough, quiet things are cold."
    },
    {
        "id": 10677,
        "statement": "is(X, kind) :- is(X, white), is(X, rough).",
        "description": "White, rough things are kind."
    },
    {
        "id": 10678,
        "statement": "is(X, quiet) :- is(X, furry), is(X, blue).",
        "description": "Furry, blue things are quiet."
    },
    {
        "id": 10679,
        "statement": "likes(X, cow) :- is(X, young), not likes(X, tiger).",
        "description": "If someone is young and they do not like the tiger then they like the cow."
    },
    {
        "id": 10680,
        "statement": "likes(X, mouse) :- is(X, nice).",
        "description": "If someone is nice then they like the mouse."
    },
    {
        "id": 10681,
        "statement": "likes(X, mouse) :- likes(X, bald_eagle).",
        "description": "If someone likes the bald eagle then they like the mouse."
    },
    {
        "id": 10682,
        "statement": "sees(tiger, mouse) :- likes(X, tiger).",
        "description": "If someone likes the tiger then the tiger sees the mouse."
    },
    {
        "id": 10683,
        "statement": "needs(X, cow) :- likes(X, mouse).",
        "description": "If someone likes the mouse then they need the cow."
    },
    {
        "id": 10684,
        "statement": "is(bald_eagle, big) :- likes(X, bald_eagle), is(bald_eagle, nice).",
        "description": "If someone likes the bald eagle and the bald eagle is nice then the bald eagle is big."
    },
    {
        "id": 10685,
        "statement": "is(X, big) :- needs(X, tiger), needs(X, cow).",
        "description": "If someone needs the tiger and they need the cow then they are big."
    },
    {
        "id": 10686,
        "statement": "is(cow, nice) :- likes(X, cow).",
        "description": "If someone likes the cow then the cow is nice."
    },
    {
        "id": 10687,
        "statement": "is(charlie, quiet) :- is(charlie, kind), not is(charlie, cold).",
        "description": "If Charlie is kind and Charlie is not cold then Charlie is quiet."
    },
    {
        "id": 10688,
        "statement": "is(X, young) :- is(X, rough), is(X, nice).",
        "description": "Rough, nice people are young."
    },
    {
        "id": 10689,
        "statement": "is(erin, smart) :- is(erin, quiet).",
        "description": "If Erin is quiet then Erin is smart."
    },
    {
        "id": 10690,
        "statement": "is(X, smart) :- is(X, rough), is(X, quiet).",
        "description": "If someone is rough and quiet then they are smart."
    },
    {
        "id": 10691,
        "statement": "is(dave, smart) :- is(dave, big), is(dave, cold).",
        "description": "If Dave is big and Dave is cold then Dave is smart."
    },
    {
        "id": 10692,
        "statement": "is(X, green) :- is(X, big), is(X, quiet).",
        "description": "Big, quiet people are green."
    },
    {
        "id": 10693,
        "statement": "is(X, rough) :- is(X, young), is(X, green).",
        "description": "If something is young and green then it is rough."
    },
    {
        "id": 10694,
        "statement": "is(X, furry) :- is(X, rough), is(X, young).",
        "description": "Rough, young things are furry."
    },
    {
        "id": 10695,
        "statement": "is(X, young) :- is(X, green).",
        "description": "If something is green then it is young."
    },
    {
        "id": 10696,
        "statement": "is(bob, round) :- is(bob, young).",
        "description": "If Bob is young then Bob is round."
    },
    {
        "id": 10697,
        "statement": "is(X, cold) :- is(X, furry), is(X, green).",
        "description": "Furry, green things are cold."
    },
    {
        "id": 10698,
        "statement": "is(dave, cold) :- is(dave, rough).",
        "description": "If Dave is rough then Dave is cold."
    },
    {
        "id": 10699,
        "statement": "needs(bald_eagle, lion) :- needs(lion, bald_eagle).",
        "description": "If the lion needs the bald eagle then the bald eagle needs the lion."
    },
    {
        "id": 10700,
        "statement": "likes(X, bald_eagle) :- is(X, nice), not visits(X, lion).",
        "description": "If someone is nice and they do not visit the lion then they like the bald eagle."
    },
    {
        "id": 10701,
        "statement": "needs(dog, lion) :- needs(X, dog), not needs(dog, cat).",
        "description": "If someone needs the dog and the dog does not need the cat then the dog needs the lion."
    },
    {
        "id": 10702,
        "statement": "needs(X, dog) :- needs(X, bald_eagle).",
        "description": "If someone needs the bald eagle then they need the dog."
    },
    {
        "id": 10703,
        "statement": "visits(dog, bald_eagle) :- visits(dog, cat).",
        "description": "If the dog visits the cat then the dog visits the bald eagle."
    },
    {
        "id": 10704,
        "statement": "needs(X, lion) :- is(X, young), visits(X, cat).",
        "description": "If someone is young and they visit the cat then they need the lion."
    },
    {
        "id": 10705,
        "statement": "is(bald_eagle, kind) :- visits(dog, bald_eagle), not needs(bald_eagle, dog).",
        "description": "If the dog visits the bald eagle and the bald eagle does not need the dog then the bald eagle is kind."
    },
    {
        "id": 10706,
        "statement": "chases(X, mouse) :- eats(X, bald_eagle).",
        "description": "If something eats the bald eagle then it chases the mouse."
    },
    {
        "id": 10707,
        "statement": "eats(squirrel, bald_eagle) :- eats(X, squirrel).",
        "description": "If something eats the squirrel then the squirrel eats the bald eagle."
    },
    {
        "id": 10708,
        "statement": "eats(X, rabbit) :- chases(X, mouse).",
        "description": "If something chases the mouse then it eats the rabbit."
    },
    {
        "id": 10709,
        "statement": "eats(rabbit, bald_eagle) :- eats(squirrel, rabbit).",
        "description": "If the squirrel eats the rabbit then the rabbit eats the bald eagle."
    },
    {
        "id": 10710,
        "statement": "needs(X, bald_eagle) :- is(X, cold).",
        "description": "If something is cold then it needs the bald eagle."
    },
    {
        "id": 10711,
        "statement": "eats(X, mouse) :- is(X, cold).",
        "description": "If something is cold then it eats the mouse."
    },
    {
        "id": 10712,
        "statement": "is(bald_eagle, cold) :- needs(bald_eagle, mouse).",
        "description": "If the bald eagle needs the mouse then the bald eagle is cold."
    },
    {
        "id": 10713,
        "statement": "is(X, nice) :- eats(X, squirrel), needs(squirrel, mouse).",
        "description": "If something eats the squirrel and the squirrel needs the mouse then it is nice."
    },
    {
        "id": 10714,
        "statement": "chases(bald_eagle, lion) :- visits(X, bald_eagle).",
        "description": "If someone visits the bald eagle then the bald eagle chases the lion."
    },
    {
        "id": 10715,
        "statement": "visits(X, bald_eagle) :- eats(X, lion).",
        "description": "If someone eats the lion then they visit the bald eagle."
    },
    {
        "id": 10716,
        "statement": "eats(squirrel, lion) :- visits(X, squirrel).",
        "description": "If someone visits the squirrel then the squirrel eats the lion."
    },
    {
        "id": 10717,
        "statement": "chases(squirrel, bald_eagle) :- eats(X, squirrel), chases(X, lion).",
        "description": "If someone eats the squirrel and they chase the lion then the squirrel chases the bald eagle."
    },
    {
        "id": 10718,
        "statement": "visits(X, squirrel) :- visits(X, bald_eagle).",
        "description": "If someone visits the bald eagle then they visit the squirrel."
    },
    {
        "id": 10719,
        "statement": "visits(dog, squirrel) :- eats(X, dog).",
        "description": "If someone eats the dog then the dog visits the squirrel."
    },
    {
        "id": 10720,
        "statement": "visits(X, squirrel) :- visits(X, mouse), likes(X, squirrel).",
        "description": "If something visits the mouse and it likes the squirrel then it visits the squirrel."
    },
    {
        "id": 10721,
        "statement": "is(X, kind) :- likes(X, cat).",
        "description": "If something likes the cat then it is kind."
    },
    {
        "id": 10722,
        "statement": "visits(X, mouse) :- is(X, kind), is(X, red).",
        "description": "If something is kind and red then it visits the mouse."
    },
    {
        "id": 10723,
        "statement": "likes(X, cat) :- sees(X, squirrel).",
        "description": "If something sees the squirrel then it likes the cat."
    },
    {
        "id": 10724,
        "statement": "sees(squirrel, tiger) :- likes(X, squirrel).",
        "description": "If something likes the squirrel then the squirrel sees the tiger."
    },
    {
        "id": 10725,
        "statement": "visits(tiger, cat) :- likes(X, tiger), is(X, kind).",
        "description": "If something likes the tiger and it is kind then the tiger visits the cat."
    },
    {
        "id": 10726,
        "statement": "sees(X, mouse) :- visits(X, squirrel), visits(X, mouse).",
        "description": "If something visits the squirrel and it visits the mouse then it sees the mouse."
    },
    {
        "id": 10727,
        "statement": "sees(X, squirrel) :- sees(X, cat), visits(X, cat).",
        "description": "If something sees the cat and it visits the cat then it sees the squirrel."
    },
    {
        "id": 10728,
        "statement": "is(gary, young) :- is(gary, green).",
        "description": "If Gary is green then Gary is young."
    },
    {
        "id": 10729,
        "statement": "is(X, big) :- is(X, quiet), is(X, green).",
        "description": "Quiet, green people are big."
    },
    {
        "id": 10730,
        "statement": "is(X, quiet) :- is(X, big), is(X, green).",
        "description": "If someone is big and green then they are quiet."
    },
    {
        "id": 10731,
        "statement": "is(X, white) :- is(X, young), is(X, green).",
        "description": "All young, green people are white."
    },
    {
        "id": 10732,
        "statement": "is(X, big) :- is(X, rough), is(X, green).",
        "description": "Rough, green people are big."
    },
    {
        "id": 10733,
        "statement": "is(bob, cold) :- is(bob, quiet), is(bob, green).",
        "description": "If Bob is quiet and Bob is green then Bob is cold."
    },
    {
        "id": 10734,
        "statement": "is(charlie, furry) :- is(charlie, cold).",
        "description": "If Charlie is cold then Charlie is furry."
    },
    {
        "id": 10735,
        "statement": "is(X, quiet) :- is(X, big), is(X, cold).",
        "description": "All big, cold people are quiet."
    },
    {
        "id": 10736,
        "statement": "is(X, furry) :- is(X, rough), is(X, green).",
        "description": "Rough, green people are furry."
    },
    {
        "id": 10737,
        "statement": "is(X, rough) :- is(X, furry), is(X, green).",
        "description": "All furry, green people are rough."
    },
    {
        "id": 10738,
        "statement": "is(bob, green) :- is(bob, furry), is(bob, cold).",
        "description": "If Bob is furry and Bob is cold then Bob is green."
    },
    {
        "id": 10739,
        "statement": "is(X, smart) :- is(X, nice), is(X, white).",
        "description": "If someone is nice and white then they are smart."
    },
    {
        "id": 10740,
        "statement": "is(X, cold) :- is(X, green), is(X, smart).",
        "description": "Green, smart people are cold."
    },
    {
        "id": 10741,
        "statement": "is(gary, green) :- is(gary, smart).",
        "description": "If Gary is smart then Gary is green."
    },
    {
        "id": 10742,
        "statement": "is(X, white) :- is(X, nice), is(X, green).",
        "description": "Nice, green people are white."
    },
    {
        "id": 10743,
        "statement": "is(charlie, nice) :- is(charlie, young).",
        "description": "If Charlie is young then Charlie is nice."
    },
    {
        "id": 10744,
        "statement": "is(X, nice) :- is(X, smart), is(X, cold).",
        "description": "All smart, cold people are nice."
    },
    {
        "id": 10745,
        "statement": "is(X, furry) :- is(X, red), is(X, blue).",
        "description": "If someone is red and blue then they are furry."
    },
    {
        "id": 10746,
        "statement": "is(X, quiet) :- is(X, red), is(X, white).",
        "description": "Red, white people are quiet."
    },
    {
        "id": 10747,
        "statement": "is(X, quiet) :- is(X, nice), is(X, round).",
        "description": "All nice, round things are quiet."
    },
    {
        "id": 10748,
        "statement": "is(X, nice) :- is(X, blue), is(X, kind).",
        "description": "Blue, kind things are nice."
    },
    {
        "id": 10749,
        "statement": "is(X, nice) :- is(X, quiet), not is(X, round).",
        "description": "If something is quiet and not round then it is nice."
    },
    {
        "id": 10750,
        "statement": "is(gary, big) :- is(gary, quiet).",
        "description": "If Gary is quiet then Gary is big."
    },
    {
        "id": 10751,
        "statement": "is(X, blue) :- is(X, quiet), is(X, furry).",
        "description": "If something is quiet and furry then it is blue."
    },
    {
        "id": 10752,
        "statement": "is(erin, blue) :- is(erin, kind), is(erin, nice).",
        "description": "If Erin is kind and Erin is nice then Erin is blue."
    },
    {
        "id": 10753,
        "statement": "is(X, furry) :- is(X, kind), is(X, round).",
        "description": "If something is kind and round then it is furry."
    },
    {
        "id": 10754,
        "statement": "is(dave, rough) :- is(dave, nice), is(dave, furry).",
        "description": "If Dave is nice and Dave is furry then Dave is rough."
    },
    {
        "id": 10755,
        "statement": "is(X, rough) :- is(X, furry), is(X, nice).",
        "description": "Furry, nice things are rough."
    },
    {
        "id": 10756,
        "statement": "is(dave, nice) :- is(dave, rough), is(dave, big).",
        "description": "If Dave is rough and Dave is big then Dave is nice."
    },
    {
        "id": 10757,
        "statement": "likes(squirrel, bald_eagle) :- likes(X, squirrel), is(squirrel, round).",
        "description": "If someone likes the squirrel and the squirrel is round then the squirrel likes the bald eagle."
    },
    {
        "id": 10758,
        "statement": "is(bald_eagle, blue) :- chases(bear, bald_eagle), chases(bald_eagle, squirrel).",
        "description": "If the bear chases the bald eagle and the bald eagle chases the squirrel then the bald eagle is blue."
    },
    {
        "id": 10759,
        "statement": "chases(X, squirrel) :- likes(X, dog).",
        "description": "If someone likes the dog then they chase the squirrel."
    },
    {
        "id": 10760,
        "statement": "is(bald_eagle, kind) :- is(bear, blue), not chases(bald_eagle, bear).",
        "description": "If the bear is blue and the bald eagle does not chase the bear then the bald eagle is kind."
    },
    {
        "id": 10761,
        "statement": "likes(X, squirrel) :- eats(X, bald_eagle), chases(X, bear).",
        "description": "If someone eats the bald eagle and they chase the bear then they like the squirrel."
    },
    {
        "id": 10762,
        "statement": "eats(X, bald_eagle) :- likes(X, bald_eagle).",
        "description": "If someone likes the bald eagle then they eat the bald eagle."
    },
    {
        "id": 10763,
        "statement": "is(X, nice) :- is(X, blue), likes(X, bald_eagle).",
        "description": "If someone is blue and they like the bald eagle then they are nice."
    },
    {
        "id": 10764,
        "statement": "is(X, blue) :- is(X, rough), is(X, nice).",
        "description": "All rough, nice things are blue."
    },
    {
        "id": 10765,
        "statement": "is(X, furry) :- is(X, nice), is(X, blue).",
        "description": "All nice, blue things are furry."
    },
    {
        "id": 10766,
        "statement": "is(X, round) :- is(X, rough), is(X, smart).",
        "description": "If something is rough and smart then it is round."
    },
    {
        "id": 10767,
        "statement": "is(X, rough) :- is(X, furry).",
        "description": "All furry things are rough."
    },
    {
        "id": 10768,
        "statement": "is(X, blue) :- is(X, kind), is(X, white).",
        "description": "All kind, white things are blue."
    },
    {
        "id": 10769,
        "statement": "is(X, blue) :- is(X, kind), not is(X, big).",
        "description": "If something is kind and not big then it is blue."
    },
    {
        "id": 10770,
        "statement": "is(X, blue) :- is(X, big), not is(X, round).",
        "description": "If something is big and not round then it is blue."
    },
    {
        "id": 10771,
        "statement": "is(X, cold) :- is(X, smart), is(X, big).",
        "description": "All smart, big things are cold."
    },
    {
        "id": 10772,
        "statement": "is(X, smart) :- is(X, white), is(X, quiet).",
        "description": "All white, quiet things are smart."
    },
    {
        "id": 10773,
        "statement": "is(bear, round) :- needs(X, rabbit), eats(rabbit, bear).",
        "description": "If something needs the rabbit and the rabbit eats the bear then the bear is round."
    },
    {
        "id": 10774,
        "statement": "visits(rabbit, dog) :- not is(rabbit, round), not is(rabbit, young).",
        "description": "If the rabbit is not round and the rabbit is not young then the rabbit visits the dog."
    },
    {
        "id": 10775,
        "statement": "needs(bald_eagle, rabbit) :- eats(X, bald_eagle).",
        "description": "If something eats the bald eagle then the bald eagle needs the rabbit."
    },
    {
        "id": 10776,
        "statement": "eats(X, rabbit) :- visits(X, bear).",
        "description": "If something visits the bear then it eats the rabbit."
    },
    {
        "id": 10777,
        "statement": "eats(dog, bald_eagle) :- visits(X, dog), eats(dog, bear).",
        "description": "If something visits the dog and the dog eats the bear then the dog eats the bald eagle."
    },
    {
        "id": 10778,
        "statement": "visits(X, bear) :- needs(X, rabbit).",
        "description": "If something needs the rabbit then it visits the bear."
    },
    {
        "id": 10779,
        "statement": "visits(dog, rabbit) :- eats(bald_eagle, dog), not eats(dog, bald_eagle).",
        "description": "If the bald eagle eats the dog and the dog does not eat the bald eagle then the dog visits the rabbit."
    },
    {
        "id": 10780,
        "statement": "is(X, big) :- is(X, quiet), is(X, cold).",
        "description": "All quiet, cold people are big."
    },
    {
        "id": 10781,
        "statement": "is(X, round) :- is(X, blue), is(X, kind).",
        "description": "Blue, kind people are round."
    },
    {
        "id": 10782,
        "statement": "is(X, nice) :- is(X, cold), is(X, round).",
        "description": "Cold, round people are nice."
    },
    {
        "id": 10783,
        "statement": "is(X, nice) :- is(X, cold), is(X, kind).",
        "description": "All cold, kind people are nice."
    },
    {
        "id": 10784,
        "statement": "is(X, cold) :- is(X, kind), is(X, round).",
        "description": "All kind, round people are cold."
    },
    {
        "id": 10785,
        "statement": "chases(X, tiger) :- chases(X, bald_eagle).",
        "description": "If something chases the bald eagle then it chases the tiger."
    },
    {
        "id": 10786,
        "statement": "is(X, big) :- chases(X, tiger).",
        "description": "If something chases the tiger then it is big."
    },
    {
        "id": 10787,
        "statement": "chases(bear, bald_eagle) :- visits(X, bear).",
        "description": "If something visits the bear then the bear chases the bald eagle."
    },
    {
        "id": 10788,
        "statement": "visits(X, bear) :- is(X, round).",
        "description": "If something is round then it visits the bear."
    },
    {
        "id": 10789,
        "statement": "is(X, round) :- chases(X, bald_eagle).",
        "description": "If something chases the bald eagle then it is round."
    },
    {
        "id": 10790,
        "statement": "needs(bear, bald_eagle) :- visits(tiger, bear).",
        "description": "If the tiger visits the bear then the bear needs the bald eagle."
    },
    {
        "id": 10791,
        "statement": "chases(X, lion) :- likes(X, squirrel).",
        "description": "If something likes the squirrel then it chases the lion."
    },
    {
        "id": 10792,
        "statement": "is(lion, green) :- likes(X, lion), is(X, green).",
        "description": "If something likes the lion and it is green then the lion is green."
    },
    {
        "id": 10793,
        "statement": "likes(lion, bear) :- likes(X, lion), is(X, nice).",
        "description": "If something likes the lion and it is nice then the lion likes the bear."
    },
    {
        "id": 10794,
        "statement": "is(lion, nice) :- visits(X, lion), not is(X, round).",
        "description": "If something visits the lion and it is not round then the lion is nice."
    },
    {
        "id": 10795,
        "statement": "is(squirrel, rough) :- is(X, nice), chases(X, squirrel).",
        "description": "If something is nice and it chases the squirrel then the squirrel is rough."
    },
    {
        "id": 10796,
        "statement": "visits(bald_eagle, bear) :- visits(X, bald_eagle).",
        "description": "If something visits the bald eagle then the bald eagle visits the bear."
    },
    {
        "id": 10797,
        "statement": "is(X, green) :- is(X, kind), visits(X, bear).",
        "description": "If something is kind and it visits the bear then it is green."
    },
    {
        "id": 10798,
        "statement": "visits(X, squirrel) :- is(X, green).",
        "description": "If something is green then it visits the squirrel."
    },
    {
        "id": 10799,
        "statement": "needs(X, rabbit) :- needs(X, mouse), is(X, rough).",
        "description": "If someone needs the mouse and they are rough then they need the rabbit."
    },
    {
        "id": 10800,
        "statement": "is(rabbit, big) :- visits(X, mouse), likes(X, rabbit).",
        "description": "If someone visits the mouse and they like the rabbit then the rabbit is big."
    },
    {
        "id": 10801,
        "statement": "is(X, rough) :- needs(X, mouse).",
        "description": "If someone needs the mouse then they are rough."
    },
    {
        "id": 10802,
        "statement": "is(X, blue) :- likes(X, squirrel), likes(X, rabbit).",
        "description": "If someone likes the squirrel and they like the rabbit then they are blue."
    },
    {
        "id": 10803,
        "statement": "likes(mouse, squirrel) :- visits(X, mouse), needs(X, rabbit).",
        "description": "If someone visits the mouse and they need the rabbit then the mouse likes the squirrel."
    },
    {
        "id": 10804,
        "statement": "is(X, big) :- visits(X, rabbit).",
        "description": "If someone visits the rabbit then they are big."
    },
    {
        "id": 10805,
        "statement": "is(X, rough) :- is(X, young), is(X, furry).",
        "description": "If someone is young and furry then they are rough."
    },
    {
        "id": 10806,
        "statement": "is(charlie, quiet) :- is(charlie, young), not is(charlie, white).",
        "description": "If Charlie is young and Charlie is not white then Charlie is quiet."
    },
    {
        "id": 10807,
        "statement": "is(erin, quiet) :- is(erin, young), is(erin, big).",
        "description": "If Erin is young and Erin is big then Erin is quiet."
    },
    {
        "id": 10808,
        "statement": "is(X, blue) :- is(X, red), is(X, quiet).",
        "description": "If someone is red and quiet then they are blue."
    },
    {
        "id": 10809,
        "statement": "is(X, cold) :- is(X, blue), is(X, quiet).",
        "description": "If someone is blue and quiet then they are cold."
    },
    {
        "id": 10810,
        "statement": "is(X, red) :- is(X, furry), is(X, blue).",
        "description": "If someone is furry and blue then they are red."
    },
    {
        "id": 10811,
        "statement": "is(X, green) :- is(X, cold), is(X, blue).",
        "description": "If someone is cold and blue then they are green."
    },
    {
        "id": 10812,
        "statement": "chases(bear, lion) :- chases(X, cat), likes(X, bear).",
        "description": "If someone chases the cat and they like the bear then the bear chases the lion."
    },
    {
        "id": 10813,
        "statement": "sees(dog, cat) :- sees(bear, dog).",
        "description": "If the bear sees the dog then the dog sees the cat."
    },
    {
        "id": 10814,
        "statement": "chases(cat, lion) :- chases(X, cat).",
        "description": "If someone chases the cat then the cat chases the lion."
    },
    {
        "id": 10815,
        "statement": "sees(X, lion) :- is(X, young).",
        "description": "If someone is young then they see the lion."
    },
    {
        "id": 10816,
        "statement": "chases(X, cat) :- is(X, rough).",
        "description": "If someone is rough then they chase the cat."
    },
    {
        "id": 10817,
        "statement": "is(cat, rough) :- likes(X, cat), chases(cat, lion).",
        "description": "If someone likes the cat and the cat chases the lion then the cat is rough."
    },
    {
        "id": 10818,
        "statement": "is(X, young) :- chases(X, cat).",
        "description": "If someone chases the cat then they are young."
    },
    {
        "id": 10819,
        "statement": "likes(X, bear) :- is(X, cold), sees(X, cat).",
        "description": "If someone is cold and they see the cat then they like the bear."
    },
    {
        "id": 10820,
        "statement": "eats(rabbit, lion) :- is(X, big), visits(X, rabbit).",
        "description": "If something is big and it visits the rabbit then the rabbit eats the lion."
    },
    {
        "id": 10821,
        "statement": "visits(X, dog) :- eats(X, bear), is(X, rough).",
        "description": "If something eats the bear and it is rough then it visits the dog."
    },
    {
        "id": 10822,
        "statement": "eats(X, bear) :- eats(X, lion).",
        "description": "If something eats the lion then it eats the bear."
    },
    {
        "id": 10823,
        "statement": "visits(X, bear) :- is(X, kind).",
        "description": "If something is kind then it visits the bear."
    },
    {
        "id": 10824,
        "statement": "visits(X, rabbit) :- is(X, young).",
        "description": "If something is young then it visits the rabbit."
    },
    {
        "id": 10825,
        "statement": "visits(bear, rabbit) :- visits(X, bear).",
        "description": "If something visits the bear then the bear visits the rabbit."
    },
    {
        "id": 10826,
        "statement": "is(rabbit, big) :- eats(bear, rabbit).",
        "description": "If the bear eats the rabbit then the rabbit is big."
    },
    {
        "id": 10827,
        "statement": "likes(X, lion) :- eats(X, bear).",
        "description": "If something eats the bear then it likes the lion."
    },
    {
        "id": 10828,
        "statement": "is(X, nice) :- is(X, red), is(X, green).",
        "description": "All red, green people are nice."
    },
    {
        "id": 10829,
        "statement": "is(X, rough) :- is(X, red), is(X, nice).",
        "description": "Red, nice people are rough."
    },
    {
        "id": 10830,
        "statement": "is(X, smart) :- is(X, round), is(X, cold).",
        "description": "Round, cold people are smart."
    },
    {
        "id": 10831,
        "statement": "is(charlie, smart) :- is(charlie, quiet), is(charlie, kind).",
        "description": "If Charlie is quiet and Charlie is kind then Charlie is smart."
    },
    {
        "id": 10832,
        "statement": "is(bob, blue) :- is(bob, quiet).",
        "description": "If Bob is quiet then Bob is blue."
    },
    {
        "id": 10833,
        "statement": "is(X, furry) :- is(X, kind), is(X, rough).",
        "description": "If someone is kind and rough then they are furry."
    },
    {
        "id": 10834,
        "statement": "visits(dog, bear) :- needs(dog, bald_eagle).",
        "description": "If the dog needs the bald eagle then the dog visits the bear."
    },
    {
        "id": 10835,
        "statement": "likes(tiger, bear) :- needs(tiger, bald_eagle), is(tiger, blue).",
        "description": "If the tiger needs the bald eagle and the tiger is blue then the tiger likes the bear."
    },
    {
        "id": 10836,
        "statement": "likes(X, dog) :- is(X, round).",
        "description": "If something is round then it likes the dog."
    },
    {
        "id": 10837,
        "statement": "likes(bear, dog) :- needs(dog, bear).",
        "description": "If the dog needs the bear then the bear likes the dog."
    },
    {
        "id": 10838,
        "statement": "visits(X, bald_eagle) :- needs(X, dog).",
        "description": "If something needs the dog then it visits the bald eagle."
    },
    {
        "id": 10839,
        "statement": "visits(bear, tiger) :- visits(X, bear).",
        "description": "If something visits the bear then the bear visits the tiger."
    },
    {
        "id": 10840,
        "statement": "needs(X, dog) :- likes(X, bald_eagle), not is(X, big).",
        "description": "If something likes the bald eagle and it is not big then it needs the dog."
    },
    {
        "id": 10841,
        "statement": "needs(X, bald_eagle) :- visits(X, tiger), needs(tiger, dog).",
        "description": "If something visits the tiger and the tiger needs the dog then it needs the bald eagle."
    },
    {
        "id": 10842,
        "statement": "is(X, cold) :- visits(X, dog), not needs(X, dog).",
        "description": "If something visits the dog and it does not need the dog then it is cold."
    },
    {
        "id": 10843,
        "statement": "needs(X, cat) :- eats(X, cat).",
        "description": "If someone eats the cat then they need the cat."
    },
    {
        "id": 10844,
        "statement": "needs(lion, tiger) :- needs(X, lion), sees(lion, tiger).",
        "description": "If someone needs the lion and the lion sees the tiger then the lion needs the tiger."
    },
    {
        "id": 10845,
        "statement": "sees(cow, lion) :- not eats(cat, cow).",
        "description": "If the cat does not eat the cow then the cow sees the lion."
    },
    {
        "id": 10846,
        "statement": "needs(cow, lion) :- eats(X, cow).",
        "description": "If someone eats the cow then the cow needs the lion."
    },
    {
        "id": 10847,
        "statement": "needs(lion, cat) :- needs(X, cat), needs(X, lion).",
        "description": "If someone needs the cat and they need the lion then the lion needs the cat."
    },
    {
        "id": 10848,
        "statement": "eats(X, lion) :- needs(X, cat), not needs(cat, cow).",
        "description": "If someone needs the cat and the cat does not need the cow then they eat the lion."
    },
    {
        "id": 10849,
        "statement": "eats(X, lion) :- needs(X, lion), needs(lion, cow).",
        "description": "If someone needs the lion and the lion needs the cow then they eat the lion."
    },
    {
        "id": 10850,
        "statement": "is(erin, white) :- is(erin, round), is(erin, nice).",
        "description": "If Erin is round and Erin is nice then Erin is white."
    },
    {
        "id": 10851,
        "statement": "is(X, green) :- is(X, red), not is(X, big).",
        "description": "If something is red and not big then it is green."
    },
    {
        "id": 10852,
        "statement": "is(X, green) :- is(X, big), not is(X, red).",
        "description": "If something is big and not red then it is green."
    },
    {
        "id": 10853,
        "statement": "is(bear, blue) :- is(rabbit, rough), needs(rabbit, bear).",
        "description": "If the rabbit is rough and the rabbit needs the bear then the bear is blue."
    },
    {
        "id": 10854,
        "statement": "chases(tiger, bear) :- is(tiger, blue).",
        "description": "If the tiger is blue then the tiger chases the bear."
    },
    {
        "id": 10855,
        "statement": "needs(X, tiger) :- is(X, kind).",
        "description": "If someone is kind then they need the tiger."
    },
    {
        "id": 10856,
        "statement": "is(X, blue) :- sees(X, rabbit), chases(rabbit, tiger).",
        "description": "If someone sees the rabbit and the rabbit chases the tiger then they are blue."
    },
    {
        "id": 10857,
        "statement": "sees(X, rabbit) :- sees(X, cat).",
        "description": "If someone sees the cat then they see the rabbit."
    },
    {
        "id": 10858,
        "statement": "chases(rabbit, tiger) :- is(X, blue), chases(X, rabbit).",
        "description": "If someone is blue and they chase the rabbit then the rabbit chases the tiger."
    },
    {
        "id": 10859,
        "statement": "is(squirrel, round) :- eats(squirrel, tiger).",
        "description": "If the squirrel eats the tiger then the squirrel is round."
    },
    {
        "id": 10860,
        "statement": "is(cow, young) :- sees(X, cat), sees(X, cow).",
        "description": "If someone sees the cat and they see the cow then the cow is young."
    },
    {
        "id": 10861,
        "statement": "eats(squirrel, cat) :- eats(X, squirrel).",
        "description": "If someone eats the squirrel then the squirrel eats the cat."
    },
    {
        "id": 10862,
        "statement": "is(squirrel, green) :- chases(X, squirrel).",
        "description": "If someone chases the squirrel then the squirrel is green."
    },
    {
        "id": 10863,
        "statement": "is(tiger, green) :- sees(X, tiger).",
        "description": "If someone sees the tiger then the tiger is green."
    },
    {
        "id": 10864,
        "statement": "is(X, cold) :- is(X, blue), likes(X, cow).",
        "description": "If something is blue and it likes the cow then it is cold."
    },
    {
        "id": 10865,
        "statement": "needs(X, lion) :- is(X, green).",
        "description": "If something is green then it needs the lion."
    },
    {
        "id": 10866,
        "statement": "sees(tiger, cow) :- sees(X, tiger), is(tiger, cold).",
        "description": "If something sees the tiger and the tiger is cold then the tiger sees the cow."
    },
    {
        "id": 10867,
        "statement": "is(X, kind) :- likes(X, lion).",
        "description": "If something likes the lion then it is kind."
    },
    {
        "id": 10868,
        "statement": "likes(X, cow) :- is(X, kind), sees(X, dog).",
        "description": "If something is kind and it sees the dog then it likes the cow."
    },
    {
        "id": 10869,
        "statement": "is(X, blue) :- likes(X, cow).",
        "description": "If something likes the cow then it is blue."
    },
    {
        "id": 10870,
        "statement": "is(dog, young) :- needs(X, dog), sees(dog, cow).",
        "description": "If something needs the dog and the dog sees the cow then the dog is young."
    },
    {
        "id": 10871,
        "statement": "likes(X, lion) :- needs(X, dog).",
        "description": "If something needs the dog then it likes the lion."
    },
    {
        "id": 10872,
        "statement": "is(X, blue) :- is(X, furry), is(X, nice).",
        "description": "All furry, nice things are blue."
    },
    {
        "id": 10873,
        "statement": "is(bob, furry) :- is(bob, blue), is(bob, white).",
        "description": "If Bob is blue and Bob is white then Bob is furry."
    },
    {
        "id": 10874,
        "statement": "is(harry, furry) :- is(harry, green).",
        "description": "If Harry is green then Harry is furry."
    },
    {
        "id": 10875,
        "statement": "is(X, white) :- is(X, furry), is(X, young).",
        "description": "All furry, young things are white."
    },
    {
        "id": 10876,
        "statement": "is(X, green) :- is(X, young), is(X, nice).",
        "description": "Young, nice things are green."
    },
    {
        "id": 10877,
        "statement": "is(X, white) :- is(X, nice), is(X, green).",
        "description": "All nice, green things are white."
    },
    {
        "id": 10878,
        "statement": "needs(X, tiger) :- is(X, young), visits(X, cat).",
        "description": "If someone is young and they visit the cat then they need the tiger."
    },
    {
        "id": 10879,
        "statement": "needs(X, tiger) :- is(X, rough).",
        "description": "If someone is rough then they need the tiger."
    },
    {
        "id": 10880,
        "statement": "visits(X, dog) :- needs(X, bald_eagle), is(X, big).",
        "description": "If someone needs the bald eagle and they are big then they visit the dog."
    },
    {
        "id": 10881,
        "statement": "is(dog, young) :- likes(X, dog).",
        "description": "If someone likes the dog then the dog is young."
    },
    {
        "id": 10882,
        "statement": "likes(tiger, cat) :- visits(cat, tiger), not is(cat, cold).",
        "description": "If the cat visits the tiger and the cat is not cold then the tiger likes the cat."
    },
    {
        "id": 10883,
        "statement": "likes(bald_eagle, dog) :- visits(dog, tiger), not needs(dog, bald_eagle).",
        "description": "If the dog visits the tiger and the dog does not need the bald eagle then the bald eagle likes the dog."
    },
    {
        "id": 10884,
        "statement": "is(X, blue) :- needs(X, tiger), not visits(X, bald_eagle).",
        "description": "If someone needs the tiger and they do not visit the bald eagle then they are blue."
    },
    {
        "id": 10885,
        "statement": "needs(bald_eagle, cat) :- not visits(bald_eagle, cat), not is(cat, blue).",
        "description": "If the bald eagle does not visit the cat and the cat is not blue then the bald eagle needs the cat."
    },
    {
        "id": 10886,
        "statement": "is(rabbit, rough) :- likes(X, rabbit), sees(X, rabbit).",
        "description": "If something likes the rabbit and it sees the rabbit then the rabbit is rough."
    },
    {
        "id": 10887,
        "statement": "likes(X, rabbit) :- is(X, green).",
        "description": "If something is green then it likes the rabbit."
    },
    {
        "id": 10888,
        "statement": "likes(bear, bald_eagle) :- is(bear, cold).",
        "description": "If the bear is cold then the bear likes the bald eagle."
    },
    {
        "id": 10889,
        "statement": "likes(bald_eagle, rabbit) :- is(bald_eagle, cold).",
        "description": "If the bald eagle is cold then the bald eagle likes the rabbit."
    },
    {
        "id": 10890,
        "statement": "is(X, cold) :- visits(X, bear).",
        "description": "If something visits the bear then it is cold."
    },
    {
        "id": 10891,
        "statement": "sees(X, rabbit) :- visits(X, bear), likes(bear, bald_eagle).",
        "description": "If something visits the bear and the bear likes the bald eagle then it sees the rabbit."
    },
    {
        "id": 10892,
        "statement": "visits(bear, cow) :- visits(bear, bald_eagle).",
        "description": "If the bear visits the bald eagle then the bear visits the cow."
    },
    {
        "id": 10893,
        "statement": "is(cow, blue) :- visits(X, cow), not is(X, cold).",
        "description": "If something visits the cow and it is not cold then the cow is blue."
    },
    {
        "id": 10894,
        "statement": "is(X, nice) :- is(X, smart), is(X, red).",
        "description": "If someone is smart and red then they are nice."
    },
    {
        "id": 10895,
        "statement": "is(X, white) :- is(X, nice), is(X, big).",
        "description": "Nice, big people are white."
    },
    {
        "id": 10896,
        "statement": "is(X, white) :- is(X, green), is(X, rough).",
        "description": "All green, rough people are white."
    },
    {
        "id": 10897,
        "statement": "is(fiona, rough) :- is(fiona, white).",
        "description": "If Fiona is white then Fiona is rough."
    },
    {
        "id": 10898,
        "statement": "is(X, smart) :- is(X, cold), is(X, round).",
        "description": "All cold, round things are smart."
    },
    {
        "id": 10899,
        "statement": "is(X, round) :- is(X, blue), is(X, cold).",
        "description": "If something is blue and cold then it is round."
    },
    {
        "id": 10900,
        "statement": "is(X, cold) :- is(X, red), is(X, green).",
        "description": "Red, green things are cold."
    },
    {
        "id": 10901,
        "statement": "needs(X, tiger) :- is(X, nice).",
        "description": "If something is nice then it needs the tiger."
    },
    {
        "id": 10902,
        "statement": "is(dog, nice) :- needs(X, dog), likes(dog, lion).",
        "description": "If something needs the dog and the dog likes the lion then the dog is nice."
    },
    {
        "id": 10903,
        "statement": "visits(lion, bald_eagle) :- is(tiger, round), needs(tiger, lion).",
        "description": "If the tiger is round and the tiger needs the lion then the lion visits the bald eagle."
    },
    {
        "id": 10904,
        "statement": "likes(X, bald_eagle) :- visits(X, tiger), is(X, cold).",
        "description": "If something visits the tiger and it is cold then it likes the bald eagle."
    },
    {
        "id": 10905,
        "statement": "likes(dog, lion) :- is(X, nice), needs(X, dog).",
        "description": "If something is nice and it needs the dog then the dog likes the lion."
    },
    {
        "id": 10906,
        "statement": "is(X, nice) :- likes(X, dog).",
        "description": "If something likes the dog then it is nice."
    },
    {
        "id": 10907,
        "statement": "needs(cat, squirrel) :- is(cat, round).",
        "description": "If the cat is round then the cat needs the squirrel."
    },
    {
        "id": 10908,
        "statement": "needs(X, tiger) :- is(X, blue).",
        "description": "If something is blue then it needs the tiger."
    },
    {
        "id": 10909,
        "statement": "is(cat, kind) :- eats(cow, cat).",
        "description": "If the cow eats the cat then the cat is kind."
    },
    {
        "id": 10910,
        "statement": "likes(cat, squirrel) :- eats(X, cat).",
        "description": "If something eats the cat then the cat likes the squirrel."
    },
    {
        "id": 10911,
        "statement": "is(squirrel, blue) :- likes(cow, cat), likes(cow, squirrel).",
        "description": "If the cow likes the cat and the cow likes the squirrel then the squirrel is blue."
    },
    {
        "id": 10912,
        "statement": "is(X, nice) :- needs(X, tiger), is(X, blue).",
        "description": "If something needs the tiger and it is blue then it is nice."
    },
    {
        "id": 10913,
        "statement": "likes(cat, tiger) :- needs(X, cat), not is(X, kind).",
        "description": "If something needs the cat and it is not kind then the cat likes the tiger."
    },
    {
        "id": 10914,
        "statement": "is(X, rough) :- needs(X, bear).",
        "description": "If something needs the bear then it is rough."
    },
    {
        "id": 10915,
        "statement": "is(bear, big) :- sees(X, bear).",
        "description": "If something sees the bear then the bear is big."
    },
    {
        "id": 10916,
        "statement": "sees(rabbit, bear) :- visits(X, rabbit).",
        "description": "If something visits the rabbit then the rabbit sees the bear."
    },
    {
        "id": 10917,
        "statement": "needs(X, mouse) :- is(X, cold), visits(X, cat).",
        "description": "If something is cold and it visits the cat then it needs the mouse."
    },
    {
        "id": 10918,
        "statement": "sees(X, mouse) :- needs(X, cat).",
        "description": "If something needs the cat then it sees the mouse."
    },
    {
        "id": 10919,
        "statement": "sees(X, cat) :- is(X, big).",
        "description": "If something is big then it sees the cat."
    },
    {
        "id": 10920,
        "statement": "visits(X, bear) :- sees(X, cat).",
        "description": "If something sees the cat then it visits the bear."
    },
    {
        "id": 10921,
        "statement": "needs(bear, mouse) :- sees(X, bear).",
        "description": "If something sees the bear then the bear needs the mouse."
    },
    {
        "id": 10922,
        "statement": "is(X, smart) :- is(X, blue), is(X, big).",
        "description": "If someone is blue and big then they are smart."
    },
    {
        "id": 10923,
        "statement": "is(X, blue) :- is(X, quiet), is(X, cold).",
        "description": "Quiet, cold people are blue."
    },
    {
        "id": 10924,
        "statement": "is(erin, young) :- is(erin, furry).",
        "description": "If Erin is furry then Erin is young."
    },
    {
        "id": 10925,
        "statement": "is(X, quiet) :- is(X, blue), is(X, big).",
        "description": "Blue, big people are quiet."
    },
    {
        "id": 10926,
        "statement": "is(X, cold) :- is(X, smart), is(X, quiet).",
        "description": "If someone is smart and quiet then they are cold."
    },
    {
        "id": 10927,
        "statement": "is(X, rough) :- is(X, young), is(X, smart).",
        "description": "All young, smart people are rough."
    },
    {
        "id": 10928,
        "statement": "is(X, young) :- is(X, smart), is(X, rough).",
        "description": "Smart, rough people are young."
    },
    {
        "id": 10929,
        "statement": "is(X, rough) :- is(X, smart).",
        "description": "If someone is smart then they are rough."
    },
    {
        "id": 10930,
        "statement": "is(X, blue) :- is(X, rough), is(X, kind).",
        "description": "All rough, kind people are blue."
    },
    {
        "id": 10931,
        "statement": "is(X, quiet) :- is(X, furry), is(X, young).",
        "description": "If someone is furry and young then they are quiet."
    },
    {
        "id": 10932,
        "statement": "is(X, cold) :- is(X, furry), is(X, young).",
        "description": "If someone is furry and young then they are cold."
    },
    {
        "id": 10933,
        "statement": "is(X, round) :- is(X, quiet), is(X, red).",
        "description": "If someone is quiet and red then they are round."
    },
    {
        "id": 10934,
        "statement": "is(dave, quiet) :- is(dave, blue), is(dave, cold).",
        "description": "If Dave is blue and Dave is cold then Dave is quiet."
    },
    {
        "id": 10935,
        "statement": "is(X, blue) :- is(X, red), is(X, green).",
        "description": "All red, green things are blue."
    },
    {
        "id": 10936,
        "statement": "is(X, round) :- is(X, cold), is(X, rough).",
        "description": "If something is cold and rough then it is round."
    },
    {
        "id": 10937,
        "statement": "is(X, round) :- is(X, nice), is(X, furry).",
        "description": "If something is nice and furry then it is round."
    },
    {
        "id": 10938,
        "statement": "is(X, green) :- is(X, rough), is(X, kind).",
        "description": "All rough, kind things are green."
    },
    {
        "id": 10939,
        "statement": "is(fiona, young) :- is(fiona, white).",
        "description": "If Fiona is white then Fiona is young."
    },
    {
        "id": 10940,
        "statement": "is(X, young) :- is(X, green), is(X, quiet).",
        "description": "All green, quiet things are young."
    },
    {
        "id": 10941,
        "statement": "is(X, white) :- is(X, red), is(X, smart).",
        "description": "If something is red and smart then it is white."
    },
    {
        "id": 10942,
        "statement": "is(X, smart) :- is(X, young), is(X, green).",
        "description": "If something is young and green then it is smart."
    },
    {
        "id": 10943,
        "statement": "is(X, young) :- is(X, nice).",
        "description": "All nice things are young."
    },
    {
        "id": 10944,
        "statement": "is(X, red) :- is(X, nice), is(X, smart).",
        "description": "Nice, smart things are red."
    },
    {
        "id": 10945,
        "statement": "is(harry, quiet) :- is(harry, round).",
        "description": "If Harry is round then Harry is quiet."
    },
    {
        "id": 10946,
        "statement": "is(X, round) :- is(X, big), is(X, young).",
        "description": "All big, young people are round."
    },
    {
        "id": 10947,
        "statement": "is(X, big) :- is(X, nice), is(X, rough).",
        "description": "Nice, rough people are big."
    },
    {
        "id": 10948,
        "statement": "is(X, red) :- is(X, quiet), is(X, rough).",
        "description": "Quiet, rough people are red."
    },
    {
        "id": 10949,
        "statement": "is(X, kind) :- is(X, red), is(X, quiet).",
        "description": "If someone is red and quiet then they are kind."
    },
    {
        "id": 10950,
        "statement": "is(harry, blue) :- is(harry, big), not is(harry, kind).",
        "description": "If Harry is big and Harry is not kind then Harry is blue."
    },
    {
        "id": 10951,
        "statement": "is(harry, blue) :- is(harry, rough), is(harry, red).",
        "description": "If Harry is rough and Harry is red then Harry is blue."
    },
    {
        "id": 10952,
        "statement": "is(X, quiet) :- is(X, red), is(X, white).",
        "description": "All red, white things are quiet."
    },
    {
        "id": 10953,
        "statement": "is(X, nice) :- is(X, red).",
        "description": "All red things are nice."
    },
    {
        "id": 10954,
        "statement": "visits(X, bear) :- likes(X, dog), not is(dog, nice).",
        "description": "If someone likes the dog and the dog is not nice then they visit the bear."
    },
    {
        "id": 10955,
        "statement": "visits(X, bear) :- is(X, big).",
        "description": "If someone is big then they visit the bear."
    },
    {
        "id": 10956,
        "statement": "is(tiger, red) :- is(X, red), sees(X, tiger).",
        "description": "If someone is red and they see the tiger then the tiger is red."
    },
    {
        "id": 10957,
        "statement": "sees(X, dog) :- visits(X, bear).",
        "description": "If someone visits the bear then they see the dog."
    },
    {
        "id": 10958,
        "statement": "likes(X, dog) :- sees(X, tiger).",
        "description": "If someone sees the tiger then they like the dog."
    },
    {
        "id": 10959,
        "statement": "sees(X, bear) :- likes(X, cat).",
        "description": "If someone likes the cat then they see the bear."
    },
    {
        "id": 10960,
        "statement": "is(bear, big) :- visits(dog, bear).",
        "description": "If the dog visits the bear then the bear is big."
    },
    {
        "id": 10961,
        "statement": "visits(bear, tiger) :- sees(X, bear), not likes(X, dog).",
        "description": "If someone sees the bear and they do not like the dog then the bear visits the tiger."
    },
    {
        "id": 10962,
        "statement": "is(dave, blue) :- is(dave, rough), is(dave, white).",
        "description": "If Dave is rough and Dave is white then Dave is blue."
    },
    {
        "id": 10963,
        "statement": "is(X, blue) :- is(X, rough), is(X, young).",
        "description": "All rough, young people are blue."
    },
    {
        "id": 10964,
        "statement": "is(fiona, white) :- is(fiona, round).",
        "description": "If Fiona is round then Fiona is white."
    },
    {
        "id": 10965,
        "statement": "likes(X, bald_eagle) :- likes(X, rabbit).",
        "description": "If something likes the rabbit then it likes the bald eagle."
    },
    {
        "id": 10966,
        "statement": "needs(X, rabbit) :- likes(X, bear), likes(bear, bald_eagle).",
        "description": "If something likes the bear and the bear likes the bald eagle then it needs the rabbit."
    },
    {
        "id": 10967,
        "statement": "likes(bald_eagle, cat) :- likes(X, bald_eagle).",
        "description": "If something likes the bald eagle then the bald eagle likes the cat."
    },
    {
        "id": 10968,
        "statement": "likes(X, bear) :- chases(X, cat).",
        "description": "If something chases the cat then it likes the bear."
    },
    {
        "id": 10969,
        "statement": "is(X, nice) :- needs(X, rabbit), needs(rabbit, cat).",
        "description": "If something needs the rabbit and the rabbit needs the cat then it is nice."
    },
    {
        "id": 10970,
        "statement": "is(bald_eagle, blue) :- is(X, nice), not chases(X, bald_eagle).",
        "description": "If something is nice and it does not chase the bald eagle then the bald eagle is blue."
    },
    {
        "id": 10971,
        "statement": "is(X, red) :- is(X, nice), is(X, smart).",
        "description": "All nice, smart things are red."
    },
    {
        "id": 10972,
        "statement": "is(X, nice) :- is(X, red), is(X, furry).",
        "description": "Red, furry things are nice."
    },
    {
        "id": 10973,
        "statement": "visits(mouse, cat) :- chases(X, mouse).",
        "description": "If something chases the mouse then the mouse visits the cat."
    },
    {
        "id": 10974,
        "statement": "eats(bald_eagle, cat) :- eats(X, bald_eagle), not is(bald_eagle, green).",
        "description": "If something eats the bald eagle and the bald eagle is not green then the bald eagle eats the cat."
    },
    {
        "id": 10975,
        "statement": "eats(X, mouse) :- visits(X, cat).",
        "description": "If something visits the cat then it eats the mouse."
    },
    {
        "id": 10976,
        "statement": "chases(mouse, dog) :- eats(X, mouse).",
        "description": "If something eats the mouse then the mouse chases the dog."
    },
    {
        "id": 10977,
        "statement": "is(bald_eagle, nice) :- chases(X, bald_eagle).",
        "description": "If something chases the bald eagle then the bald eagle is nice."
    },
    {
        "id": 10978,
        "statement": "chases(cat, mouse) :- eats(bald_eagle, cat).",
        "description": "If the bald eagle eats the cat then the cat chases the mouse."
    },
    {
        "id": 10979,
        "statement": "visits(mouse, dog) :- chases(X, bald_eagle), chases(bald_eagle, mouse).",
        "description": "If something chases the bald eagle and the bald eagle chases the mouse then the mouse visits the dog."
    },
    {
        "id": 10980,
        "statement": "visits(dog, cat) :- visits(X, cat), visits(X, dog).",
        "description": "If something visits the cat and it visits the dog then the dog visits the cat."
    },
    {
        "id": 10981,
        "statement": "is(X, nice) :- chases(X, mouse), is(X, kind).",
        "description": "If something chases the mouse and it is kind then it is nice."
    },
    {
        "id": 10982,
        "statement": "is(X, cold) :- is(X, nice), is(X, round).",
        "description": "All nice, round things are cold."
    },
    {
        "id": 10983,
        "statement": "is(X, young) :- is(X, nice), not is(X, green).",
        "description": "If something is nice and not green then it is young."
    },
    {
        "id": 10984,
        "statement": "chases(X, tiger) :- visits(X, bald_eagle), chases(X, cow).",
        "description": "If something visits the bald eagle and it chases the cow then it chases the tiger."
    },
    {
        "id": 10985,
        "statement": "chases(dog, bald_eagle) :- sees(X, dog), is(X, round).",
        "description": "If something sees the dog and it is round then the dog chases the bald eagle."
    },
    {
        "id": 10986,
        "statement": "sees(tiger, dog) :- sees(X, tiger).",
        "description": "If something sees the tiger then the tiger sees the dog."
    },
    {
        "id": 10987,
        "statement": "chases(X, bald_eagle) :- chases(X, tiger).",
        "description": "If something chases the tiger then it chases the bald eagle."
    },
    {
        "id": 10988,
        "statement": "is(X, rough) :- visits(X, lion).",
        "description": "If someone visits the lion then they are rough."
    },
    {
        "id": 10989,
        "statement": "visits(cow, rabbit) :- is(lion, green), sees(lion, cow).",
        "description": "If the lion is green and the lion sees the cow then the cow visits the rabbit."
    },
    {
        "id": 10990,
        "statement": "visits(X, bear) :- is(X, young).",
        "description": "If someone is young then they visit the bear."
    },
    {
        "id": 10991,
        "statement": "visits(cow, bear) :- visits(cow, lion).",
        "description": "If the cow visits the lion then the cow visits the bear."
    },
    {
        "id": 10992,
        "statement": "is(X, young) :- visits(X, cow), not visits(cow, lion).",
        "description": "If someone visits the cow and the cow does not visit the lion then they are young."
    },
    {
        "id": 10993,
        "statement": "is(mouse, green) :- needs(X, mouse), not eats(mouse, squirrel).",
        "description": "If someone needs the mouse and the mouse does not eat the squirrel then the mouse is green."
    },
    {
        "id": 10994,
        "statement": "likes(X, mouse) :- is(X, nice), eats(X, lion).",
        "description": "If someone is nice and they eat the lion then they like the mouse."
    },
    {
        "id": 10995,
        "statement": "needs(squirrel, dog) :- is(X, round), eats(X, squirrel).",
        "description": "If someone is round and they eat the squirrel then the squirrel needs the dog."
    },
    {
        "id": 10996,
        "statement": "likes(squirrel, lion) :- is(dog, nice), likes(dog, squirrel).",
        "description": "If the dog is nice and the dog likes the squirrel then the squirrel likes the lion."
    },
    {
        "id": 10997,
        "statement": "likes(dog, squirrel) :- needs(X, dog).",
        "description": "If someone needs the dog then the dog likes the squirrel."
    },
    {
        "id": 10998,
        "statement": "likes(mouse, lion) :- eats(X, mouse).",
        "description": "If someone eats the mouse then the mouse likes the lion."
    },
    {
        "id": 10999,
        "statement": "needs(X, dog) :- likes(X, lion).",
        "description": "If someone likes the lion then they need the dog."
    },
    {
        "id": 11000,
        "statement": "is(X, rough) :- is(X, nice), eats(X, mouse).",
        "description": "If someone is nice and they eat the mouse then they are rough."
    },
    {
        "id": 11001,
        "statement": "eats(X, dog) :- eats(X, squirrel), likes(X, squirrel).",
        "description": "If someone eats the squirrel and they like the squirrel then they eat the dog."
    },
    {
        "id": 11002,
        "statement": "eats(X, mouse) :- needs(X, rabbit), is(rabbit, big).",
        "description": "If something needs the rabbit and the rabbit is big then it eats the mouse."
    },
    {
        "id": 11003,
        "statement": "needs(X, mouse) :- likes(X, mouse), is(mouse, big).",
        "description": "If something likes the mouse and the mouse is big then it needs the mouse."
    },
    {
        "id": 11004,
        "statement": "needs(mouse, lion) :- needs(X, mouse).",
        "description": "If something needs the mouse then the mouse needs the lion."
    },
    {
        "id": 11005,
        "statement": "is(lion, kind) :- needs(mouse, lion).",
        "description": "If the mouse needs the lion then the lion is kind."
    },
    {
        "id": 11006,
        "statement": "likes(X, mouse) :- is(X, big).",
        "description": "If something is big then it likes the mouse."
    },
    {
        "id": 11007,
        "statement": "eats(rabbit, tiger) :- needs(tiger, rabbit), eats(rabbit, lion).",
        "description": "If the tiger needs the rabbit and the rabbit eats the lion then the rabbit eats the tiger."
    },
    {
        "id": 11008,
        "statement": "is(X, rough) :- is(X, nice), is(X, big).",
        "description": "All nice, big people are rough."
    },
    {
        "id": 11009,
        "statement": "is(X, red) :- is(X, big), is(X, green).",
        "description": "All big, green people are red."
    },
    {
        "id": 11010,
        "statement": "visits(bear, rabbit) :- likes(X, lion), likes(X, bear).",
        "description": "If someone likes the lion and they like the bear then the bear visits the rabbit."
    },
    {
        "id": 11011,
        "statement": "chases(rabbit, cow) :- chases(X, rabbit).",
        "description": "If someone chases the rabbit then the rabbit chases the cow."
    },
    {
        "id": 11012,
        "statement": "is(X, blue) :- visits(X, rabbit).",
        "description": "If someone visits the rabbit then they are blue."
    },
    {
        "id": 11013,
        "statement": "likes(rabbit, cow) :- chases(lion, rabbit), is(lion, red).",
        "description": "If the lion chases the rabbit and the lion is red then the rabbit likes the cow."
    },
    {
        "id": 11014,
        "statement": "likes(lion, bear) :- likes(X, lion).",
        "description": "If someone likes the lion then the lion likes the bear."
    },
    {
        "id": 11015,
        "statement": "is(X, round) :- needs(X, mouse).",
        "description": "If something needs the mouse then it is round."
    },
    {
        "id": 11016,
        "statement": "chases(X, rabbit) :- chases(X, mouse).",
        "description": "If something chases the mouse then it chases the rabbit."
    },
    {
        "id": 11017,
        "statement": "is(rabbit, red) :- chases(X, rabbit).",
        "description": "If something chases the rabbit then the rabbit is red."
    },
    {
        "id": 11018,
        "statement": "chases(bear, mouse) :- needs(X, bear), is(bear, rough).",
        "description": "If something needs the bear and the bear is rough then the bear chases the mouse."
    },
    {
        "id": 11019,
        "statement": "likes(tiger, rabbit) :- is(X, big), needs(X, tiger).",
        "description": "If something is big and it needs the tiger then the tiger likes the rabbit."
    },
    {
        "id": 11020,
        "statement": "is(erin, white) :- is(erin, big), is(erin, young).",
        "description": "If Erin is big and Erin is young then Erin is white."
    },
    {
        "id": 11021,
        "statement": "is(anne, young) :- is(anne, green).",
        "description": "If Anne is green then Anne is young."
    },
    {
        "id": 11022,
        "statement": "is(X, round) :- is(X, big), is(X, smart).",
        "description": "Big, smart things are round."
    },
    {
        "id": 11023,
        "statement": "chases(rabbit, tiger) :- sees(X, rabbit).",
        "description": "If someone sees the rabbit then the rabbit chases the tiger."
    },
    {
        "id": 11024,
        "statement": "sees(dog, squirrel) :- needs(X, dog), chases(dog, tiger).",
        "description": "If someone needs the dog and the dog chases the tiger then the dog sees the squirrel."
    },
    {
        "id": 11025,
        "statement": "needs(rabbit, tiger) :- chases(squirrel, rabbit).",
        "description": "If the squirrel chases the rabbit then the rabbit needs the tiger."
    },
    {
        "id": 11026,
        "statement": "chases(X, rabbit) :- is(X, cold).",
        "description": "If someone is cold then they chase the rabbit."
    },
    {
        "id": 11027,
        "statement": "sees(X, dog) :- is(X, rough).",
        "description": "If someone is rough then they see the dog."
    },
    {
        "id": 11028,
        "statement": "needs(tiger, squirrel) :- sees(X, rabbit), not chases(X, tiger).",
        "description": "If someone sees the rabbit and they do not chase the tiger then the tiger needs the squirrel."
    },
    {
        "id": 11029,
        "statement": "is(X, rough) :- needs(X, tiger), not chases(X, rabbit).",
        "description": "If someone needs the tiger and they do not chase the rabbit then they are rough."
    },
    {
        "id": 11030,
        "statement": "chases(squirrel, dog) :- chases(X, squirrel), is(X, rough).",
        "description": "If someone chases the squirrel and they are rough then the squirrel chases the dog."
    },
    {
        "id": 11031,
        "statement": "chases(cow, mouse) :- likes(X, cow), sees(cow, mouse).",
        "description": "If something likes the cow and the cow sees the mouse then the cow chases the mouse."
    },
    {
        "id": 11032,
        "statement": "likes(cow, dog) :- likes(X, cow), sees(cow, bald_eagle).",
        "description": "If something likes the cow and the cow sees the bald eagle then the cow likes the dog."
    },
    {
        "id": 11033,
        "statement": "sees(cow, bald_eagle) :- chases(X, cow), sees(X, cow).",
        "description": "If something chases the cow and it sees the cow then the cow sees the bald eagle."
    },
    {
        "id": 11034,
        "statement": "sees(X, cow) :- is(X, green).",
        "description": "If something is green then it sees the cow."
    },
    {
        "id": 11035,
        "statement": "likes(cow, bald_eagle) :- is(cow, kind).",
        "description": "If the cow is kind then the cow likes the bald eagle."
    },
    {
        "id": 11036,
        "statement": "chases(X, mouse) :- sees(X, dog).",
        "description": "If something sees the dog then it chases the mouse."
    },
    {
        "id": 11037,
        "statement": "sees(X, cow) :- likes(X, dog).",
        "description": "If something likes the dog then it sees the cow."
    },
    {
        "id": 11038,
        "statement": "is(X, white) :- is(X, nice), is(X, round).",
        "description": "If something is nice and round then it is white."
    },
    {
        "id": 11039,
        "statement": "is(X, round) :- is(X, nice), is(X, white).",
        "description": "Nice, white things are round."
    },
    {
        "id": 11040,
        "statement": "sees(tiger, cow) :- is(X, kind), eats(X, tiger).",
        "description": "If something is kind and it eats the tiger then the tiger sees the cow."
    },
    {
        "id": 11041,
        "statement": "eats(X, dog) :- is(X, green).",
        "description": "If something is green then it eats the dog."
    },
    {
        "id": 11042,
        "statement": "needs(X, dog) :- eats(X, cow).",
        "description": "If something eats the cow then it needs the dog."
    },
    {
        "id": 11043,
        "statement": "eats(X, cow) :- is(X, rough).",
        "description": "If something is rough then it eats the cow."
    },
    {
        "id": 11044,
        "statement": "eats(tiger, cow) :- sees(X, tiger).",
        "description": "If something sees the tiger then the tiger eats the cow."
    },
    {
        "id": 11045,
        "statement": "eats(cow, bear) :- is(X, red), sees(X, cow).",
        "description": "If something is red and it sees the cow then the cow eats the bear."
    },
    {
        "id": 11046,
        "statement": "is(X, rough) :- eats(X, bear).",
        "description": "If something eats the bear then it is rough."
    },
    {
        "id": 11047,
        "statement": "is(X, green) :- is(X, furry), is(X, nice).",
        "description": "All furry, nice people are green."
    },
    {
        "id": 11048,
        "statement": "is(X, white) :- is(X, green), is(X, furry).",
        "description": "Green, furry people are white."
    },
    {
        "id": 11049,
        "statement": "is(X, red) :- is(X, green), is(X, nice).",
        "description": "All green, nice people are red."
    },
    {
        "id": 11050,
        "statement": "is(X, big) :- is(X, furry), is(X, red).",
        "description": "All furry, red things are big."
    },
    {
        "id": 11051,
        "statement": "is(X, quiet) :- is(X, kind), is(X, rough).",
        "description": "Kind, rough people are quiet."
    },
    {
        "id": 11052,
        "statement": "is(dave, red) :- is(dave, rough), is(dave, nice).",
        "description": "If Dave is rough and Dave is nice then Dave is red."
    },
    {
        "id": 11053,
        "statement": "is(X, big) :- is(X, red), not is(X, kind).",
        "description": "If someone is red and not kind then they are big."
    },
    {
        "id": 11054,
        "statement": "is(X, cold) :- is(X, rough), is(X, green).",
        "description": "If someone is rough and green then they are cold."
    },
    {
        "id": 11055,
        "statement": "is(X, nice) :- is(X, green), is(X, red).",
        "description": "All green, red people are nice."
    },
    {
        "id": 11056,
        "statement": "is(X, red) :- is(X, white), not is(X, young).",
        "description": "If someone is white and not young then they are red."
    },
    {
        "id": 11057,
        "statement": "is(X, blue) :- is(X, cold), is(X, smart).",
        "description": "All cold, smart people are blue."
    },
    {
        "id": 11058,
        "statement": "is(X, round) :- is(X, nice), not is(X, smart).",
        "description": "If someone is nice and not smart then they are round."
    },
    {
        "id": 11059,
        "statement": "is(X, round) :- is(X, blue), is(X, smart).",
        "description": "If someone is blue and smart then they are round."
    },
    {
        "id": 11060,
        "statement": "visits(X, cow) :- eats(X, rabbit).",
        "description": "If someone eats the rabbit then they visit the cow."
    },
    {
        "id": 11061,
        "statement": "eats(cow, lion) :- visits(X, cow), not is(X, big).",
        "description": "If someone visits the cow and they are not big then the cow eats the lion."
    },
    {
        "id": 11062,
        "statement": "is(rabbit, rough) :- is(mouse, red), visits(mouse, rabbit).",
        "description": "If the mouse is red and the mouse visits the rabbit then the rabbit is rough."
    },
    {
        "id": 11063,
        "statement": "is(mouse, rough) :- eats(X, lion), not visits(lion, mouse).",
        "description": "If someone eats the lion and the lion does not visit the mouse then the mouse is rough."
    },
    {
        "id": 11064,
        "statement": "visits(lion, cow) :- likes(X, lion).",
        "description": "If someone likes the lion then the lion visits the cow."
    },
    {
        "id": 11065,
        "statement": "likes(X, lion) :- is(X, rough).",
        "description": "If someone is rough then they like the lion."
    },
    {
        "id": 11066,
        "statement": "sees(X, dog) :- is(X, blue).",
        "description": "If something is blue then it sees the dog."
    },
    {
        "id": 11067,
        "statement": "likes(X, mouse) :- sees(X, dog), likes(X, bald_eagle).",
        "description": "If something sees the dog and it likes the bald eagle then it likes the mouse."
    },
    {
        "id": 11068,
        "statement": "needs(mouse, dog) :- needs(dog, mouse).",
        "description": "If the dog needs the mouse then the mouse needs the dog."
    },
    {
        "id": 11069,
        "statement": "sees(X, bald_eagle) :- needs(X, mouse), sees(X, dog).",
        "description": "If something needs the mouse and it sees the dog then it sees the bald eagle."
    },
    {
        "id": 11070,
        "statement": "needs(squirrel, dog) :- likes(X, squirrel).",
        "description": "If something likes the squirrel then the squirrel needs the dog."
    },
    {
        "id": 11071,
        "statement": "sees(X, squirrel) :- sees(X, mouse), is(X, rough).",
        "description": "If something sees the mouse and it is rough then it sees the squirrel."
    },
    {
        "id": 11072,
        "statement": "sees(X, squirrel) :- sees(X, dog).",
        "description": "If something sees the dog then it sees the squirrel."
    },
    {
        "id": 11073,
        "statement": "needs(bald_eagle, squirrel) :- sees(mouse, squirrel), not needs(mouse, bald_eagle).",
        "description": "If the mouse sees the squirrel and the mouse does not need the bald eagle then the bald eagle needs the squirrel."
    },
    {
        "id": 11074,
        "statement": "needs(X, mouse) :- needs(X, squirrel), not is(X, cold).",
        "description": "If something needs the squirrel and it is not cold then it needs the mouse."
    },
    {
        "id": 11075,
        "statement": "eats(lion, cow) :- is(X, kind), likes(X, lion).",
        "description": "If something is kind and it likes the lion then the lion eats the cow."
    },
    {
        "id": 11076,
        "statement": "eats(cow, lion) :- eats(X, rabbit), eats(X, cow).",
        "description": "If something eats the rabbit and it eats the cow then the cow eats the lion."
    },
    {
        "id": 11077,
        "statement": "likes(lion, rabbit) :- eats(X, lion), is(X, rough).",
        "description": "If something eats the lion and it is rough then the lion likes the rabbit."
    },
    {
        "id": 11078,
        "statement": "chases(rabbit, bald_eagle) :- chases(X, rabbit), likes(rabbit, cow).",
        "description": "If something chases the rabbit and the rabbit likes the cow then the rabbit chases the bald eagle."
    },
    {
        "id": 11079,
        "statement": "eats(X, rabbit) :- eats(X, bald_eagle), likes(bald_eagle, rabbit).",
        "description": "If something eats the bald eagle and the bald eagle likes the rabbit then it eats the rabbit."
    },
    {
        "id": 11080,
        "statement": "is(X, kind) :- eats(X, lion).",
        "description": "If something eats the lion then it is kind."
    },
    {
        "id": 11081,
        "statement": "likes(X, lion) :- eats(X, lion).",
        "description": "If something eats the lion then it likes the lion."
    },
    {
        "id": 11082,
        "statement": "is(charlie, white) :- is(charlie, big), is(charlie, rough).",
        "description": "If Charlie is big and Charlie is rough then Charlie is white."
    },
    {
        "id": 11083,
        "statement": "is(dave, big) :- is(dave, white), is(dave, quiet).",
        "description": "If Dave is white and Dave is quiet then Dave is big."
    },
    {
        "id": 11084,
        "statement": "is(X, cold) :- is(X, round), is(X, white).",
        "description": "If something is round and white then it is cold."
    },
    {
        "id": 11085,
        "statement": "is(anne, kind) :- is(anne, green).",
        "description": "If Anne is green then Anne is kind."
    },
    {
        "id": 11086,
        "statement": "is(X, green) :- is(X, young), is(X, rough).",
        "description": "All young, rough things are green."
    },
    {
        "id": 11087,
        "statement": "is(anne, round) :- is(anne, red).",
        "description": "If Anne is red then Anne is round."
    },
    {
        "id": 11088,
        "statement": "is(X, blue) :- is(X, green), is(X, kind).",
        "description": "Green, kind things are blue."
    },
    {
        "id": 11089,
        "statement": "is(X, smart) :- is(X, green), is(X, quiet).",
        "description": "If something is green and quiet then it is smart."
    },
    {
        "id": 11090,
        "statement": "is(X, quiet) :- is(X, white).",
        "description": "White things are quiet."
    },
    {
        "id": 11091,
        "statement": "is(erin, rough) :- is(erin, smart).",
        "description": "If Erin is smart then Erin is rough."
    },
    {
        "id": 11092,
        "statement": "is(X, rough) :- is(X, quiet), is(X, red).",
        "description": "All quiet, red things are rough."
    },
    {
        "id": 11093,
        "statement": "is(X, nice) :- is(X, smart), is(X, kind).",
        "description": "If something is smart and kind then it is nice."
    },
    {
        "id": 11094,
        "statement": "is(X, big) :- is(X, young).",
        "description": "Young things are big."
    },
    {
        "id": 11095,
        "statement": "is(X, kind) :- is(X, smart), is(X, white).",
        "description": "Smart, white things are kind."
    },
    {
        "id": 11096,
        "statement": "is(X, young) :- is(X, smart), is(X, furry).",
        "description": "All smart, furry things are young."
    },
    {
        "id": 11097,
        "statement": "is(X, white) :- is(X, smart), is(X, quiet).",
        "description": "All smart, quiet people are white."
    },
    {
        "id": 11098,
        "statement": "is(X, cold) :- is(X, smart), is(X, green).",
        "description": "If someone is smart and green then they are cold."
    },
    {
        "id": 11099,
        "statement": "is(charlie, cold) :- is(charlie, green), is(charlie, white).",
        "description": "If Charlie is green and Charlie is white then Charlie is cold."
    },
    {
        "id": 11100,
        "statement": "is(X, green) :- is(X, white), is(X, rough).",
        "description": "All white, rough people are green."
    },
    {
        "id": 11101,
        "statement": "is(dave, smart) :- is(dave, cold), is(dave, red).",
        "description": "If Dave is cold and Dave is red then Dave is smart."
    },
    {
        "id": 11102,
        "statement": "is(X, rough) :- is(X, smart), not is(X, red).",
        "description": "If someone is smart and not red then they are rough."
    },
    {
        "id": 11103,
        "statement": "is(X, rough) :- is(X, smart), is(X, kind).",
        "description": "If someone is smart and kind then they are rough."
    },
    {
        "id": 11104,
        "statement": "is(gary, kind) :- is(gary, rough), is(gary, blue).",
        "description": "If Gary is rough and Gary is blue then Gary is kind."
    },
    {
        "id": 11105,
        "statement": "is(dave, kind) :- is(dave, quiet), is(dave, rough).",
        "description": "If Dave is quiet and Dave is rough then Dave is kind."
    },
    {
        "id": 11106,
        "statement": "is(X, kind) :- is(X, blue), is(X, cold).",
        "description": "If someone is blue and cold then they are kind."
    },
    {
        "id": 11107,
        "statement": "chases(X, cow) :- is(X, blue).",
        "description": "If someone is blue then they chase the cow."
    },
    {
        "id": 11108,
        "statement": "likes(cow, bald_eagle) :- not eats(dog, cow).",
        "description": "If the dog does not eat the cow then the cow likes the bald eagle."
    },
    {
        "id": 11109,
        "statement": "chases(cat, dog) :- not is(cow, young), not eats(cow, cat).",
        "description": "If the cow is not young and the cow does not eat the cat then the cat chases the dog."
    },
    {
        "id": 11110,
        "statement": "is(X, cold) :- likes(X, cat).",
        "description": "If someone likes the cat then they are cold."
    },
    {
        "id": 11111,
        "statement": "chases(cat, cow) :- is(cat, cold).",
        "description": "If the cat is cold then the cat chases the cow."
    },
    {
        "id": 11112,
        "statement": "is(X, green) :- is(X, nice), chases(X, cat).",
        "description": "If someone is nice and they chase the cat then they are green."
    },
    {
        "id": 11113,
        "statement": "chases(dog, cat) :- is(dog, cold).",
        "description": "If the dog is cold then the dog chases the cat."
    },
    {
        "id": 11114,
        "statement": "chases(X, bald_eagle) :- is(X, young).",
        "description": "If someone is young then they chase the bald eagle."
    },
    {
        "id": 11115,
        "statement": "is(X, blue) :- is(X, green), not likes(X, cow).",
        "description": "If someone is green and they do not like the cow then they are blue."
    },
    {
        "id": 11116,
        "statement": "is(erin, furry) :- is(erin, round).",
        "description": "If Erin is round then Erin is furry."
    },
    {
        "id": 11117,
        "statement": "is(X, round) :- is(X, kind), is(X, furry).",
        "description": "If someone is kind and furry then they are round."
    },
    {
        "id": 11118,
        "statement": "is(X, quiet) :- is(X, nice), is(X, white).",
        "description": "If someone is nice and white then they are quiet."
    },
    {
        "id": 11119,
        "statement": "is(X, cold) :- is(X, nice), is(X, quiet).",
        "description": "All nice, quiet people are cold."
    },
    {
        "id": 11120,
        "statement": "is(X, big) :- is(X, young), is(X, green).",
        "description": "If something is young and green then it is big."
    },
    {
        "id": 11121,
        "statement": "is(erin, big) :- is(erin, furry).",
        "description": "If Erin is furry then Erin is big."
    },
    {
        "id": 11122,
        "statement": "is(X, white) :- is(X, kind), not is(X, green).",
        "description": "If something is kind and not green then it is white."
    },
    {
        "id": 11123,
        "statement": "is(X, white) :- is(X, big), is(X, young).",
        "description": "Big, young things are white."
    },
    {
        "id": 11124,
        "statement": "eats(bald_eagle, tiger) :- sees(X, bald_eagle).",
        "description": "If something sees the bald eagle then the bald eagle eats the tiger."
    },
    {
        "id": 11125,
        "statement": "sees(X, tiger) :- is(X, rough).",
        "description": "If something is rough then it sees the tiger."
    },
    {
        "id": 11126,
        "statement": "is(bear, rough) :- is(X, big), likes(X, bear).",
        "description": "If something is big and it likes the bear then the bear is rough."
    },
    {
        "id": 11127,
        "statement": "eats(tiger, dog) :- sees(tiger, bear).",
        "description": "If the tiger sees the bear then the tiger eats the dog."
    },
    {
        "id": 11128,
        "statement": "sees(tiger, bear) :- sees(X, tiger), not eats(X, tiger).",
        "description": "If something sees the tiger and it does not eat the tiger then the tiger sees the bear."
    },
    {
        "id": 11129,
        "statement": "sees(dog, bear) :- eats(X, dog).",
        "description": "If something eats the dog then the dog sees the bear."
    },
    {
        "id": 11130,
        "statement": "eats(X, bald_eagle) :- is(X, big), eats(X, dog).",
        "description": "If something is big and it eats the dog then it eats the bald eagle."
    },
    {
        "id": 11131,
        "statement": "is(bear, young) :- is(dog, rough), sees(dog, bear).",
        "description": "If the dog is rough and the dog sees the bear then the bear is young."
    },
    {
        "id": 11132,
        "statement": "eats(X, bear) :- eats(X, bald_eagle), not is(X, young).",
        "description": "If something eats the bald eagle and it is not young then it eats the bear."
    },
    {
        "id": 11133,
        "statement": "needs(X, tiger) :- eats(X, rabbit).",
        "description": "If something eats the rabbit then it needs the tiger."
    },
    {
        "id": 11134,
        "statement": "chases(tiger, rabbit) :- is(tiger, big).",
        "description": "If the tiger is big then the tiger chases the rabbit."
    },
    {
        "id": 11135,
        "statement": "eats(X, squirrel) :- chases(X, mouse).",
        "description": "If something chases the mouse then it eats the squirrel."
    },
    {
        "id": 11136,
        "statement": "is(X, red) :- eats(X, squirrel), eats(X, mouse).",
        "description": "If something eats the squirrel and it eats the mouse then it is red."
    },
    {
        "id": 11137,
        "statement": "chases(rabbit, tiger) :- chases(tiger, rabbit).",
        "description": "If the tiger chases the rabbit then the rabbit chases the tiger."
    },
    {
        "id": 11138,
        "statement": "needs(rabbit, tiger) :- chases(rabbit, tiger).",
        "description": "If the rabbit chases the tiger then the rabbit needs the tiger."
    },
    {
        "id": 11139,
        "statement": "is(tiger, big) :- needs(X, tiger), needs(tiger, mouse).",
        "description": "If something needs the tiger and the tiger needs the mouse then the tiger is big."
    },
    {
        "id": 11140,
        "statement": "chases(X, rabbit) :- is(X, big), needs(X, rabbit).",
        "description": "If something is big and it needs the rabbit then it chases the rabbit."
    },
    {
        "id": 11141,
        "statement": "visits(cat, cow) :- is(X, round), visits(X, cat).",
        "description": "If someone is round and they visit the cat then the cat visits the cow."
    },
    {
        "id": 11142,
        "statement": "is(X, rough) :- needs(X, squirrel), not is(squirrel, blue).",
        "description": "If someone needs the squirrel and the squirrel is not blue then they are rough."
    },
    {
        "id": 11143,
        "statement": "is(cow, red) :- chases(X, cow).",
        "description": "If someone chases the cow then the cow is red."
    },
    {
        "id": 11144,
        "statement": "chases(X, cat) :- visits(X, cat).",
        "description": "If someone visits the cat then they chase the cat."
    },
    {
        "id": 11145,
        "statement": "is(X, round) :- chases(X, cat), is(X, green).",
        "description": "If someone chases the cat and they are green then they are round."
    },
    {
        "id": 11146,
        "statement": "visits(X, cat) :- is(X, round).",
        "description": "If someone is round then they visit the cat."
    },
    {
        "id": 11147,
        "statement": "needs(cat, squirrel) :- chases(X, cat), chases(cat, cow).",
        "description": "If someone chases the cat and the cat chases the cow then the cat needs the squirrel."
    },
    {
        "id": 11148,
        "statement": "eats(X, cow) :- is(X, red).",
        "description": "If something is red then it eats the cow."
    },
    {
        "id": 11149,
        "statement": "chases(cow, mouse) :- is(cow, nice).",
        "description": "If the cow is nice then the cow chases the mouse."
    },
    {
        "id": 11150,
        "statement": "chases(mouse, tiger) :- chases(cow, mouse).",
        "description": "If the cow chases the mouse then the mouse chases the tiger."
    },
    {
        "id": 11151,
        "statement": "is(cow, rough) :- eats(X, cow).",
        "description": "If something eats the cow then the cow is rough."
    },
    {
        "id": 11152,
        "statement": "sees(tiger, cow) :- is(tiger, kind), eats(tiger, mouse).",
        "description": "If the tiger is kind and the tiger eats the mouse then the tiger sees the cow."
    },
    {
        "id": 11153,
        "statement": "is(X, nice) :- eats(X, tiger).",
        "description": "If something eats the tiger then it is nice."
    },
    {
        "id": 11154,
        "statement": "is(X, quiet) :- is(X, white), is(X, round).",
        "description": "If someone is white and round then they are quiet."
    },
    {
        "id": 11155,
        "statement": "is(charlie, green) :- is(charlie, cold), is(charlie, furry).",
        "description": "If Charlie is cold and Charlie is furry then Charlie is green."
    },
    {
        "id": 11156,
        "statement": "is(X, quiet) :- is(X, round), is(X, smart).",
        "description": "All round, smart things are quiet."
    },
    {
        "id": 11157,
        "statement": "is(X, young) :- is(X, blue), is(X, quiet).",
        "description": "All blue, quiet things are young."
    },
    {
        "id": 11158,
        "statement": "is(X, rough) :- is(X, young), is(X, cold).",
        "description": "All young, cold things are rough."
    },
    {
        "id": 11159,
        "statement": "is(bob, round) :- is(bob, young), is(bob, blue).",
        "description": "If Bob is young and Bob is blue then Bob is round."
    },
    {
        "id": 11160,
        "statement": "is(fiona, smart) :- is(fiona, rough), is(fiona, blue).",
        "description": "If Fiona is rough and Fiona is blue then Fiona is smart."
    },
    {
        "id": 11161,
        "statement": "is(X, blue) :- is(X, kind), is(X, young).",
        "description": "Kind, young people are blue."
    },
    {
        "id": 11162,
        "statement": "is(X, kind) :- is(X, nice), is(X, quiet).",
        "description": "Nice, quiet people are kind."
    },
    {
        "id": 11163,
        "statement": "is(X, blue) :- is(X, round), is(X, nice).",
        "description": "Round, nice people are blue."
    },
    {
        "id": 11164,
        "statement": "is(X, round) :- is(X, red), is(X, blue).",
        "description": "All red, blue people are round."
    },
    {
        "id": 11165,
        "statement": "visits(squirrel, dog) :- chases(X, tiger), chases(tiger, squirrel).",
        "description": "If someone chases the tiger and the tiger chases the squirrel then the squirrel visits the dog."
    },
    {
        "id": 11166,
        "statement": "chases(dog, squirrel) :- chases(X, squirrel), visits(X, dog).",
        "description": "If someone chases the squirrel and they visit the dog then the dog chases the squirrel."
    },
    {
        "id": 11167,
        "statement": "eats(dog, tiger) :- chases(X, dog).",
        "description": "If someone chases the dog then the dog eats the tiger."
    },
    {
        "id": 11168,
        "statement": "eats(X, squirrel) :- chases(X, dog).",
        "description": "If someone chases the dog then they eat the squirrel."
    },
    {
        "id": 11169,
        "statement": "is(X, kind) :- eats(X, lion).",
        "description": "If someone eats the lion then they are kind."
    },
    {
        "id": 11170,
        "statement": "is(X, rough) :- chases(X, tiger), is(tiger, green).",
        "description": "If someone chases the tiger and the tiger is green then they are rough."
    },
    {
        "id": 11171,
        "statement": "is(X, young) :- is(X, round), is(X, green).",
        "description": "All round, green things are young."
    },
    {
        "id": 11172,
        "statement": "is(X, green) :- is(X, cold), is(X, white).",
        "description": "Cold, white things are green."
    },
    {
        "id": 11173,
        "statement": "sees(X, bald_eagle) :- sees(X, lion).",
        "description": "If someone sees the lion then they see the bald eagle."
    },
    {
        "id": 11174,
        "statement": "chases(X, bald_eagle) :- is(X, cold), sees(X, bald_eagle).",
        "description": "If someone is cold and they see the bald eagle then they chase the bald eagle."
    },
    {
        "id": 11175,
        "statement": "is(tiger, nice) :- sees(bald_eagle, tiger), chases(bald_eagle, lion).",
        "description": "If the bald eagle sees the tiger and the bald eagle chases the lion then the tiger is nice."
    },
    {
        "id": 11176,
        "statement": "sees(bald_eagle, lion) :- chases(X, bald_eagle), likes(X, tiger).",
        "description": "If someone chases the bald eagle and they like the tiger then the bald eagle sees the lion."
    },
    {
        "id": 11177,
        "statement": "chases(mouse, bald_eagle) :- is(X, cold), sees(X, mouse).",
        "description": "If someone is cold and they see the mouse then the mouse chases the bald eagle."
    },
    {
        "id": 11178,
        "statement": "chases(tiger, mouse) :- likes(X, tiger).",
        "description": "If someone likes the tiger then the tiger chases the mouse."
    },
    {
        "id": 11179,
        "statement": "sees(bald_eagle, tiger) :- chases(bald_eagle, tiger).",
        "description": "If the bald eagle chases the tiger then the bald eagle sees the tiger."
    },
    {
        "id": 11180,
        "statement": "is(X, cold) :- chases(X, tiger).",
        "description": "If someone chases the tiger then they are cold."
    },
    {
        "id": 11181,
        "statement": "likes(X, squirrel) :- needs(X, rabbit), is(rabbit, nice).",
        "description": "If someone needs the rabbit and the rabbit is nice then they like the squirrel."
    },
    {
        "id": 11182,
        "statement": "likes(X, squirrel) :- is(X, blue), is(X, young).",
        "description": "If someone is blue and young then they like the squirrel."
    },
    {
        "id": 11183,
        "statement": "is(tiger, young) :- likes(X, bald_eagle), not likes(X, tiger).",
        "description": "If someone likes the bald eagle and they do not like the tiger then the tiger is young."
    },
    {
        "id": 11184,
        "statement": "sees(X, bald_eagle) :- needs(X, squirrel), not sees(X, tiger).",
        "description": "If someone needs the squirrel and they do not see the tiger then they see the bald eagle."
    },
    {
        "id": 11185,
        "statement": "is(X, nice) :- likes(X, squirrel).",
        "description": "If someone likes the squirrel then they are nice."
    },
    {
        "id": 11186,
        "statement": "is(X, smart) :- is(X, cold), is(X, red).",
        "description": "If someone is cold and red then they are smart."
    },
    {
        "id": 11187,
        "statement": "is(erin, kind) :- is(erin, furry).",
        "description": "If Erin is furry then Erin is kind."
    },
    {
        "id": 11188,
        "statement": "is(X, kind) :- is(X, cold), is(X, furry).",
        "description": "All cold, furry people are kind."
    },
    {
        "id": 11189,
        "statement": "is(X, smart) :- is(X, rough), is(X, big).",
        "description": "If someone is rough and big then they are smart."
    },
    {
        "id": 11190,
        "statement": "is(X, rough) :- is(X, nice), is(X, cold).",
        "description": "If someone is nice and cold then they are rough."
    },
    {
        "id": 11191,
        "statement": "is(X, big) :- is(X, rough), is(X, white).",
        "description": "All rough, white people are big."
    },
    {
        "id": 11192,
        "statement": "is(X, cold) :- is(X, rough), is(X, white).",
        "description": "All rough, white people are cold."
    },
    {
        "id": 11193,
        "statement": "is(dave, white) :- is(dave, green).",
        "description": "If Dave is green then Dave is white."
    },
    {
        "id": 11194,
        "statement": "is(X, white) :- is(X, cold), is(X, quiet).",
        "description": "If something is cold and quiet then it is white."
    },
    {
        "id": 11195,
        "statement": "is(X, white) :- is(X, young), is(X, big).",
        "description": "If something is young and big then it is white."
    },
    {
        "id": 11196,
        "statement": "is(X, furry) :- is(X, young), is(X, smart).",
        "description": "Young, smart things are furry."
    },
    {
        "id": 11197,
        "statement": "is(erin, big) :- is(erin, smart), is(erin, furry).",
        "description": "If Erin is smart and Erin is furry then Erin is big."
    },
    {
        "id": 11198,
        "statement": "is(X, smart) :- is(X, young), is(X, quiet).",
        "description": "If something is young and quiet then it is smart."
    },
    {
        "id": 11199,
        "statement": "is(X, young) :- is(X, cold), is(X, white).",
        "description": "Cold, white things are young."
    },
    {
        "id": 11200,
        "statement": "is(X, nice) :- visits(X, tiger).",
        "description": "If something visits the tiger then it is nice."
    },
    {
        "id": 11201,
        "statement": "is(X, blue) :- sees(X, tiger), is(X, young).",
        "description": "If something sees the tiger and it is young then it is blue."
    },
    {
        "id": 11202,
        "statement": "sees(X, tiger) :- is(X, nice).",
        "description": "If something is nice then it sees the tiger."
    },
    {
        "id": 11203,
        "statement": "visits(X, tiger) :- likes(X, squirrel), likes(X, cow).",
        "description": "If something likes the squirrel and it likes the cow then it visits the tiger."
    },
    {
        "id": 11204,
        "statement": "is(X, young) :- is(X, nice), sees(X, tiger).",
        "description": "If something is nice and it sees the tiger then it is young."
    },
    {
        "id": 11205,
        "statement": "sees(lion, squirrel) :- is(cow, cold), visits(cow, lion).",
        "description": "If the cow is cold and the cow visits the lion then the lion sees the squirrel."
    },
    {
        "id": 11206,
        "statement": "is(X, kind) :- is(X, smart), is(X, white).",
        "description": "If someone is smart and white then they are kind."
    },
    {
        "id": 11207,
        "statement": "is(X, round) :- is(X, smart), is(X, white).",
        "description": "All smart, white people are round."
    },
    {
        "id": 11208,
        "statement": "is(bob, young) :- is(bob, smart), is(bob, white).",
        "description": "If Bob is smart and Bob is white then Bob is young."
    },
    {
        "id": 11209,
        "statement": "is(X, young) :- is(X, green), is(X, smart).",
        "description": "If someone is green and smart then they are young."
    },
    {
        "id": 11210,
        "statement": "chases(X, mouse) :- likes(X, lion).",
        "description": "If something likes the lion then it chases the mouse."
    },
    {
        "id": 11211,
        "statement": "is(mouse, kind) :- eats(X, mouse), is(X, green).",
        "description": "If something eats the mouse and it is green then the mouse is kind."
    },
    {
        "id": 11212,
        "statement": "chases(X, dog) :- is(X, kind).",
        "description": "If something is kind then it chases the dog."
    },
    {
        "id": 11213,
        "statement": "is(X, blue) :- is(X, big), is(X, kind).",
        "description": "Big, kind things are blue."
    },
    {
        "id": 11214,
        "statement": "is(X, big) :- is(X, blue), is(X, red).",
        "description": "All blue, red things are big."
    },
    {
        "id": 11215,
        "statement": "is(X, big) :- is(X, furry), is(X, cold).",
        "description": "If someone is furry and cold then they are big."
    },
    {
        "id": 11216,
        "statement": "is(X, furry) :- is(X, red), is(X, smart).",
        "description": "If someone is red and smart then they are furry."
    },
    {
        "id": 11217,
        "statement": "is(X, furry) :- is(X, smart), not is(X, red).",
        "description": "If someone is smart and not red then they are furry."
    },
    {
        "id": 11218,
        "statement": "is(X, cold) :- is(X, rough), is(X, white).",
        "description": "If someone is rough and white then they are cold."
    },
    {
        "id": 11219,
        "statement": "eats(lion, cow) :- is(lion, green).",
        "description": "If the lion is green then the lion eats the cow."
    },
    {
        "id": 11220,
        "statement": "is(cow, kind) :- likes(X, cow), eats(cow, mouse).",
        "description": "If someone likes the cow and the cow eats the mouse then the cow is kind."
    },
    {
        "id": 11221,
        "statement": "likes(cow, tiger) :- eats(X, cow), likes(cow, lion).",
        "description": "If someone eats the cow and the cow likes the lion then the cow likes the tiger."
    },
    {
        "id": 11222,
        "statement": "eats(X, lion) :- needs(X, mouse).",
        "description": "If someone needs the mouse then they eat the lion."
    },
    {
        "id": 11223,
        "statement": "needs(X, tiger) :- needs(X, mouse).",
        "description": "If someone needs the mouse then they need the tiger."
    },
    {
        "id": 11224,
        "statement": "is(tiger, big) :- needs(X, tiger).",
        "description": "If someone needs the tiger then the tiger is big."
    },
    {
        "id": 11225,
        "statement": "chases(rabbit, dog) :- chases(X, rabbit).",
        "description": "If something chases the rabbit then the rabbit chases the dog."
    },
    {
        "id": 11226,
        "statement": "is(dog, red) :- chases(rabbit, dog).",
        "description": "If the rabbit chases the dog then the dog is red."
    },
    {
        "id": 11227,
        "statement": "likes(cat, dog) :- is(X, big), likes(X, cat).",
        "description": "If something is big and it likes the cat then the cat likes the dog."
    },
    {
        "id": 11228,
        "statement": "needs(rabbit, dog) :- is(rabbit, big).",
        "description": "If the rabbit is big then the rabbit needs the dog."
    },
    {
        "id": 11229,
        "statement": "chases(cat, rabbit) :- likes(X, dog), chases(X, cat).",
        "description": "If something likes the dog and it chases the cat then the cat chases the rabbit."
    },
    {
        "id": 11230,
        "statement": "chases(cat, dog) :- chases(X, cat), likes(cat, squirrel).",
        "description": "If something chases the cat and the cat likes the squirrel then the cat chases the dog."
    },
    {
        "id": 11231,
        "statement": "chases(X, rabbit) :- needs(X, rabbit).",
        "description": "If something needs the rabbit then it chases the rabbit."
    },
    {
        "id": 11232,
        "statement": "needs(X, squirrel) :- is(X, green), visits(X, bear).",
        "description": "If someone is green and they visit the bear then they need the squirrel."
    },
    {
        "id": 11233,
        "statement": "needs(X, mouse) :- needs(X, bear).",
        "description": "If someone needs the bear then they need the mouse."
    },
    {
        "id": 11234,
        "statement": "is(bear, rough) :- visits(X, cow), not sees(X, bear).",
        "description": "If someone visits the cow and they do not see the bear then the bear is rough."
    },
    {
        "id": 11235,
        "statement": "visits(mouse, cow) :- is(mouse, big).",
        "description": "If the mouse is big then the mouse visits the cow."
    },
    {
        "id": 11236,
        "statement": "needs(mouse, bear) :- is(mouse, red).",
        "description": "If the mouse is red then the mouse needs the bear."
    },
    {
        "id": 11237,
        "statement": "is(X, round) :- needs(X, bear), is(X, red).",
        "description": "If someone needs the bear and they are red then they are round."
    },
    {
        "id": 11238,
        "statement": "visits(dog, bald_eagle) :- likes(cow, dog).",
        "description": "If the cow likes the dog then the dog visits the bald eagle."
    },
    {
        "id": 11239,
        "statement": "is(cow, cold) :- likes(X, cow), is(X, nice).",
        "description": "If someone likes the cow and they are nice then the cow is cold."
    },
    {
        "id": 11240,
        "statement": "visits(bear, bald_eagle) :- needs(X, bear).",
        "description": "If someone needs the bear then the bear visits the bald eagle."
    },
    {
        "id": 11241,
        "statement": "likes(X, bald_eagle) :- visits(X, cow), not is(cow, red).",
        "description": "If someone visits the cow and the cow is not red then they like the bald eagle."
    },
    {
        "id": 11242,
        "statement": "is(X, nice) :- visits(X, bald_eagle).",
        "description": "If someone visits the bald eagle then they are nice."
    },
    {
        "id": 11243,
        "statement": "visits(X, cow) :- likes(X, dog).",
        "description": "If someone likes the dog then they visit the cow."
    },
    {
        "id": 11244,
        "statement": "is(X, big) :- is(X, smart), is(X, quiet).",
        "description": "All smart, quiet people are big."
    },
    {
        "id": 11245,
        "statement": "is(X, furry) :- is(X, big), is(X, quiet).",
        "description": "Big, quiet people are furry."
    },
    {
        "id": 11246,
        "statement": "is(fiona, smart) :- is(fiona, quiet), is(fiona, young).",
        "description": "If Fiona is quiet and Fiona is young then Fiona is smart."
    },
    {
        "id": 11247,
        "statement": "is(X, rough) :- is(X, smart), is(X, round).",
        "description": "Smart, round things are rough."
    },
    {
        "id": 11248,
        "statement": "is(X, rough) :- is(X, kind).",
        "description": "If something is kind then it is rough."
    },
    {
        "id": 11249,
        "statement": "is(X, big) :- is(X, kind), is(X, smart).",
        "description": "Kind, smart things are big."
    },
    {
        "id": 11250,
        "statement": "is(charlie, white) :- is(charlie, smart), is(charlie, quiet).",
        "description": "If Charlie is smart and Charlie is quiet then Charlie is white."
    },
    {
        "id": 11251,
        "statement": "is(X, young) :- is(X, blue), is(X, white).",
        "description": "All blue, white things are young."
    },
    {
        "id": 11252,
        "statement": "is(X, smart) :- is(X, cold), is(X, blue).",
        "description": "If something is cold and blue then it is smart."
    },
    {
        "id": 11253,
        "statement": "is(X, young) :- is(X, kind), is(X, cold).",
        "description": "All kind, cold things are young."
    },
    {
        "id": 11254,
        "statement": "is(X, nice) :- is(X, green), is(X, rough).",
        "description": "All green, rough things are nice."
    },
    {
        "id": 11255,
        "statement": "is(X, quiet) :- is(X, nice), is(X, green).",
        "description": "All nice, green things are quiet."
    },
    {
        "id": 11256,
        "statement": "is(bob, young) :- is(bob, rough).",
        "description": "If Bob is rough then Bob is young."
    },
    {
        "id": 11257,
        "statement": "likes(X, cow) :- likes(X, dog).",
        "description": "If something likes the dog then it likes the cow."
    },
    {
        "id": 11258,
        "statement": "is(rabbit, kind) :- likes(X, rabbit).",
        "description": "If something likes the rabbit then the rabbit is kind."
    },
    {
        "id": 11259,
        "statement": "eats(X, dog) :- likes(X, cow).",
        "description": "If something likes the cow then it eats the dog."
    },
    {
        "id": 11260,
        "statement": "eats(cow, rabbit) :- likes(X, cow).",
        "description": "If something likes the cow then the cow eats the rabbit."
    },
    {
        "id": 11261,
        "statement": "is(rabbit, nice) :- likes(rabbit, bear).",
        "description": "If the rabbit likes the bear then the rabbit is nice."
    },
    {
        "id": 11262,
        "statement": "likes(rabbit, bear) :- eats(X, rabbit), likes(X, dog).",
        "description": "If something eats the rabbit and it likes the dog then the rabbit likes the bear."
    },
    {
        "id": 11263,
        "statement": "sees(X, dog) :- is(X, young).",
        "description": "If something is young then it sees the dog."
    },
    {
        "id": 11264,
        "statement": "likes(X, dog) :- sees(X, cow), likes(cow, rabbit).",
        "description": "If something sees the cow and the cow likes the rabbit then it likes the dog."
    },
    {
        "id": 11265,
        "statement": "is(erin, rough) :- is(erin, green), is(erin, big).",
        "description": "If Erin is green and Erin is big then Erin is rough."
    },
    {
        "id": 11266,
        "statement": "is(X, green) :- is(X, kind), is(X, red).",
        "description": "Kind, red people are green."
    },
    {
        "id": 11267,
        "statement": "is(X, rough) :- is(X, red), is(X, quiet).",
        "description": "All red, quiet people are rough."
    },
    {
        "id": 11268,
        "statement": "is(X, rough) :- is(X, white), is(X, big).",
        "description": "White, big people are rough."
    },
    {
        "id": 11269,
        "statement": "is(anne, young) :- is(anne, smart), is(anne, round).",
        "description": "If Anne is smart and Anne is round then Anne is young."
    },
    {
        "id": 11270,
        "statement": "is(X, young) :- is(X, rough), is(X, red).",
        "description": "All rough, red things are young."
    },
    {
        "id": 11271,
        "statement": "is(X, young) :- is(X, round), is(X, green).",
        "description": "If something is round and green then it is young."
    },
    {
        "id": 11272,
        "statement": "is(dave, smart) :- is(dave, young).",
        "description": "If Dave is young then Dave is smart."
    },
    {
        "id": 11273,
        "statement": "sees(X, mouse) :- likes(X, tiger), is(X, red).",
        "description": "If someone likes the tiger and they are red then they see the mouse."
    },
    {
        "id": 11274,
        "statement": "is(mouse, blue) :- sees(X, mouse).",
        "description": "If someone sees the mouse then the mouse is blue."
    },
    {
        "id": 11275,
        "statement": "likes(X, tiger) :- chases(X, squirrel), sees(squirrel, dog).",
        "description": "If someone chases the squirrel and the squirrel sees the dog then they like the tiger."
    },
    {
        "id": 11276,
        "statement": "sees(X, dog) :- sees(X, mouse).",
        "description": "If someone sees the mouse then they see the dog."
    },
    {
        "id": 11277,
        "statement": "is(tiger, red) :- is(X, rough), not sees(X, tiger).",
        "description": "If someone is rough and they do not see the tiger then the tiger is red."
    },
    {
        "id": 11278,
        "statement": "chases(X, mouse) :- is(X, rough), is(X, blue).",
        "description": "If someone is rough and blue then they chase the mouse."
    },
    {
        "id": 11279,
        "statement": "is(squirrel, big) :- needs(tiger, squirrel), is(squirrel, kind).",
        "description": "If the tiger needs the squirrel and the squirrel is kind then the squirrel is big."
    },
    {
        "id": 11280,
        "statement": "is(tiger, kind) :- chases(X, tiger), is(X, cold).",
        "description": "If something chases the tiger and it is cold then the tiger is kind."
    },
    {
        "id": 11281,
        "statement": "is(dog, cold) :- needs(X, dog), is(dog, big).",
        "description": "If something needs the dog and the dog is big then the dog is cold."
    },
    {
        "id": 11282,
        "statement": "likes(X, squirrel) :- needs(X, bald_eagle), not chases(X, squirrel).",
        "description": "If something needs the bald eagle and it does not chase the squirrel then it likes the squirrel."
    },
    {
        "id": 11283,
        "statement": "chases(dog, tiger) :- is(dog, round).",
        "description": "If the dog is round then the dog chases the tiger."
    },
    {
        "id": 11284,
        "statement": "needs(X, dog) :- likes(X, squirrel).",
        "description": "If something likes the squirrel then it needs the dog."
    },
    {
        "id": 11285,
        "statement": "is(X, big) :- needs(X, cat).",
        "description": "If something needs the cat then it is big."
    },
    {
        "id": 11286,
        "statement": "likes(X, lion) :- eats(X, bald_eagle), is(X, kind).",
        "description": "If something eats the bald eagle and it is kind then it likes the lion."
    },
    {
        "id": 11287,
        "statement": "needs(cat, bald_eagle) :- needs(X, cat).",
        "description": "If something needs the cat then the cat needs the bald eagle."
    },
    {
        "id": 11288,
        "statement": "needs(X, bald_eagle) :- is(X, big).",
        "description": "If something is big then it needs the bald eagle."
    },
    {
        "id": 11289,
        "statement": "likes(X, lion) :- needs(X, cat), needs(X, bald_eagle).",
        "description": "If something needs the cat and it needs the bald eagle then it likes the lion."
    },
    {
        "id": 11290,
        "statement": "needs(lion, tiger) :- likes(X, lion), is(X, big).",
        "description": "If something likes the lion and it is big then the lion needs the tiger."
    },
    {
        "id": 11291,
        "statement": "is(X, cold) :- is(X, green), is(X, kind).",
        "description": "If someone is green and kind then they are cold."
    },
    {
        "id": 11292,
        "statement": "is(gary, cold) :- is(gary, nice), is(gary, green).",
        "description": "If Gary is nice and Gary is green then Gary is cold."
    },
    {
        "id": 11293,
        "statement": "is(X, young) :- is(X, cold), is(X, nice).",
        "description": "Cold, nice people are young."
    },
    {
        "id": 11294,
        "statement": "is(gary, young) :- is(gary, cold), not is(gary, kind).",
        "description": "If Gary is cold and Gary is not kind then Gary is young."
    },
    {
        "id": 11295,
        "statement": "likes(bear, squirrel) :- likes(X, bear).",
        "description": "If something likes the bear then the bear likes the squirrel."
    },
    {
        "id": 11296,
        "statement": "likes(dog, bear) :- eats(X, dog).",
        "description": "If something eats the dog then the dog likes the bear."
    },
    {
        "id": 11297,
        "statement": "is(mouse, round) :- eats(mouse, dog), sees(mouse, dog).",
        "description": "If the mouse eats the dog and the mouse sees the dog then the mouse is round."
    },
    {
        "id": 11298,
        "statement": "eats(X, dog) :- is(X, young).",
        "description": "If something is young then it eats the dog."
    },
    {
        "id": 11299,
        "statement": "sees(bear, mouse) :- sees(squirrel, bear), is(bear, cold).",
        "description": "If the squirrel sees the bear and the bear is cold then the bear sees the mouse."
    },
    {
        "id": 11300,
        "statement": "is(mouse, young) :- sees(X, mouse), is(X, cold).",
        "description": "If something sees the mouse and it is cold then the mouse is young."
    },
    {
        "id": 11301,
        "statement": "is(charlie, green) :- is(charlie, white), is(charlie, big).",
        "description": "If Charlie is white and Charlie is big then Charlie is green."
    },
    {
        "id": 11302,
        "statement": "is(erin, furry) :- is(erin, red), is(erin, big).",
        "description": "If Erin is red and Erin is big then Erin is furry."
    },
    {
        "id": 11303,
        "statement": "likes(X, cow) :- chases(X, squirrel).",
        "description": "If someone chases the squirrel then they like the cow."
    },
    {
        "id": 11304,
        "statement": "likes(X, bear) :- is(X, red), is(X, green).",
        "description": "If someone is red and green then they like the bear."
    },
    {
        "id": 11305,
        "statement": "is(X, green) :- is(X, young), chases(X, bald_eagle).",
        "description": "If someone is young and they chase the bald eagle then they are green."
    },
    {
        "id": 11306,
        "statement": "chases(bear, squirrel) :- likes(X, cow), likes(X, bear).",
        "description": "If someone likes the cow and they like the bear then the bear chases the squirrel."
    },
    {
        "id": 11307,
        "statement": "likes(X, squirrel) :- chases(X, squirrel), likes(X, cow).",
        "description": "If someone chases the squirrel and they like the cow then they like the squirrel."
    },
    {
        "id": 11308,
        "statement": "likes(squirrel, bald_eagle) :- chases(X, squirrel), is(squirrel, red).",
        "description": "If someone chases the squirrel and the squirrel is red then the squirrel likes the bald eagle."
    },
    {
        "id": 11309,
        "statement": "eats(X, cow) :- is(X, kind), chases(X, squirrel).",
        "description": "If someone is kind and they chase the squirrel then they eat the cow."
    },
    {
        "id": 11310,
        "statement": "likes(bear, squirrel) :- is(bear, green), eats(bear, bald_eagle).",
        "description": "If the bear is green and the bear eats the bald eagle then the bear likes the squirrel."
    },
    {
        "id": 11311,
        "statement": "likes(cow, bear) :- likes(X, cow), not needs(X, rabbit).",
        "description": "If someone likes the cow and they do not need the rabbit then the cow likes the bear."
    },
    {
        "id": 11312,
        "statement": "likes(bear, squirrel) :- likes(X, squirrel), not sees(squirrel, bear).",
        "description": "If someone likes the squirrel and the squirrel does not see the bear then the bear likes the squirrel."
    },
    {
        "id": 11313,
        "statement": "likes(X, bear) :- needs(X, bear), likes(bear, rabbit).",
        "description": "If someone needs the bear and the bear likes the rabbit then they like the bear."
    },
    {
        "id": 11314,
        "statement": "is(X, red) :- needs(X, squirrel).",
        "description": "If someone needs the squirrel then they are red."
    },
    {
        "id": 11315,
        "statement": "is(X, young) :- needs(X, squirrel).",
        "description": "If someone needs the squirrel then they are young."
    },
    {
        "id": 11316,
        "statement": "needs(X, cat) :- is(X, kind).",
        "description": "If someone is kind then they need the cat."
    },
    {
        "id": 11317,
        "statement": "visits(mouse, cat) :- is(X, young), needs(X, mouse).",
        "description": "If someone is young and they need the mouse then the mouse visits the cat."
    },
    {
        "id": 11318,
        "statement": "visits(cat, lion) :- visits(X, cat), chases(cat, mouse).",
        "description": "If someone visits the cat and the cat chases the mouse then the cat visits the lion."
    },
    {
        "id": 11319,
        "statement": "chases(X, mouse) :- chases(X, lion).",
        "description": "If someone chases the lion then they chase the mouse."
    },
    {
        "id": 11320,
        "statement": "chases(squirrel, lion) :- needs(mouse, squirrel), is(mouse, young).",
        "description": "If the mouse needs the squirrel and the mouse is young then the squirrel chases the lion."
    },
    {
        "id": 11321,
        "statement": "needs(X, cow) :- is(X, young), sees(X, rabbit).",
        "description": "If something is young and it sees the rabbit then it needs the cow."
    },
    {
        "id": 11322,
        "statement": "chases(X, cow) :- needs(X, cow).",
        "description": "If something needs the cow then it chases the cow."
    },
    {
        "id": 11323,
        "statement": "is(X, round) :- chases(X, cow).",
        "description": "If something chases the cow then it is round."
    },
    {
        "id": 11324,
        "statement": "is(cow, round) :- is(X, rough), chases(X, cow).",
        "description": "If something is rough and it chases the cow then the cow is round."
    },
    {
        "id": 11325,
        "statement": "needs(tiger, cow) :- chases(X, tiger), chases(tiger, lion).",
        "description": "If something chases the tiger and the tiger chases the lion then the tiger needs the cow."
    },
    {
        "id": 11326,
        "statement": "is(X, big) :- sees(X, rabbit), sees(rabbit, cow).",
        "description": "If something sees the rabbit and the rabbit sees the cow then it is big."
    },
    {
        "id": 11327,
        "statement": "is(rabbit, rough) :- chases(X, rabbit), is(rabbit, big).",
        "description": "If something chases the rabbit and the rabbit is big then the rabbit is rough."
    },
    {
        "id": 11328,
        "statement": "chases(tiger, lion) :- is(X, young), sees(X, tiger).",
        "description": "If something is young and it sees the tiger then the tiger chases the lion."
    },
    {
        "id": 11329,
        "statement": "is(X, round) :- is(X, furry), is(X, nice).",
        "description": "Furry, nice people are round."
    },
    {
        "id": 11330,
        "statement": "is(X, red) :- is(X, kind), is(X, nice).",
        "description": "Kind, nice people are red."
    },
    {
        "id": 11331,
        "statement": "is(gary, cold) :- is(gary, round), is(gary, green).",
        "description": "If Gary is round and Gary is green then Gary is cold."
    },
    {
        "id": 11332,
        "statement": "is(X, green) :- is(X, white), is(X, big).",
        "description": "White, big people are green."
    },
    {
        "id": 11333,
        "statement": "is(X, kind) :- is(X, furry), is(X, white).",
        "description": "Furry, white people are kind."
    },
    {
        "id": 11334,
        "statement": "is(X, white) :- is(X, kind), is(X, big).",
        "description": "Kind, big people are white."
    },
    {
        "id": 11335,
        "statement": "is(bob, kind) :- is(bob, furry), is(bob, big).",
        "description": "If Bob is furry and Bob is big then Bob is kind."
    },
    {
        "id": 11336,
        "statement": "is(X, young) :- is(X, nice), is(X, green).",
        "description": "If something is nice and green then it is young."
    },
    {
        "id": 11337,
        "statement": "needs(lion, rabbit) :- sees(X, lion), likes(X, dog).",
        "description": "If something sees the lion and it likes the dog then the lion needs the rabbit."
    },
    {
        "id": 11338,
        "statement": "needs(rabbit, dog) :- needs(X, rabbit).",
        "description": "If something needs the rabbit then the rabbit needs the dog."
    },
    {
        "id": 11339,
        "statement": "sees(X, lion) :- likes(X, lion), needs(lion, rabbit).",
        "description": "If something likes the lion and the lion needs the rabbit then it sees the lion."
    },
    {
        "id": 11340,
        "statement": "needs(rabbit, squirrel) :- needs(X, rabbit), is(rabbit, red).",
        "description": "If something needs the rabbit and the rabbit is red then the rabbit needs the squirrel."
    },
    {
        "id": 11341,
        "statement": "likes(squirrel, rabbit) :- sees(lion, squirrel).",
        "description": "If the lion sees the squirrel then the squirrel likes the rabbit."
    },
    {
        "id": 11342,
        "statement": "likes(dog, squirrel) :- needs(rabbit, dog).",
        "description": "If the rabbit needs the dog then the dog likes the squirrel."
    },
    {
        "id": 11343,
        "statement": "likes(squirrel, lion) :- likes(X, squirrel).",
        "description": "If something likes the squirrel then the squirrel likes the lion."
    },
    {
        "id": 11344,
        "statement": "needs(X, rabbit) :- sees(X, squirrel).",
        "description": "If something sees the squirrel then it needs the rabbit."
    },
    {
        "id": 11345,
        "statement": "sees(lion, squirrel) :- likes(X, lion).",
        "description": "If something likes the lion then the lion sees the squirrel."
    },
    {
        "id": 11346,
        "statement": "is(X, green) :- likes(X, mouse), likes(X, cow).",
        "description": "If something likes the mouse and it likes the cow then it is green."
    },
    {
        "id": 11347,
        "statement": "visits(cat, bald_eagle) :- is(mouse, green), likes(mouse, cat).",
        "description": "If the mouse is green and the mouse likes the cat then the cat visits the bald eagle."
    },
    {
        "id": 11348,
        "statement": "likes(X, bald_eagle) :- is(X, green).",
        "description": "If something is green then it likes the bald eagle."
    },
    {
        "id": 11349,
        "statement": "is(bald_eagle, young) :- likes(X, bald_eagle).",
        "description": "If something likes the bald eagle then the bald eagle is young."
    },
    {
        "id": 11350,
        "statement": "likes(X, cow) :- is(X, young), not visits(X, cow).",
        "description": "If something is young and it does not visit the cow then it likes the cow."
    },
    {
        "id": 11351,
        "statement": "chases(dog, bear) :- is(X, kind), eats(X, dog).",
        "description": "If something is kind and it eats the dog then the dog chases the bear."
    },
    {
        "id": 11352,
        "statement": "is(cow, big) :- chases(X, cow).",
        "description": "If something chases the cow then the cow is big."
    },
    {
        "id": 11353,
        "statement": "eats(tiger, dog) :- chases(X, bear), chases(bear, tiger).",
        "description": "If something chases the bear and the bear chases the tiger then the tiger eats the dog."
    },
    {
        "id": 11354,
        "statement": "is(tiger, big) :- is(X, kind), eats(X, tiger).",
        "description": "If something is kind and it eats the tiger then the tiger is big."
    },
    {
        "id": 11355,
        "statement": "eats(X, tiger) :- is(X, big).",
        "description": "If something is big then it eats the tiger."
    },
    {
        "id": 11356,
        "statement": "chases(X, cow) :- eats(X, tiger).",
        "description": "If something eats the tiger then it chases the cow."
    },
    {
        "id": 11357,
        "statement": "needs(X, rabbit) :- eats(X, tiger).",
        "description": "If something eats the tiger then it needs the rabbit."
    },
    {
        "id": 11358,
        "statement": "likes(X, mouse) :- likes(X, rabbit).",
        "description": "If something likes the rabbit then it likes the mouse."
    },
    {
        "id": 11359,
        "statement": "likes(lion, rabbit) :- needs(tiger, rabbit), needs(tiger, lion).",
        "description": "If the tiger needs the rabbit and the tiger needs the lion then the lion likes the rabbit."
    },
    {
        "id": 11360,
        "statement": "is(X, young) :- is(X, big), is(X, rough).",
        "description": "All big, rough things are young."
    },
    {
        "id": 11361,
        "statement": "eats(X, tiger) :- likes(X, mouse).",
        "description": "If something likes the mouse then it eats the tiger."
    },
    {
        "id": 11362,
        "statement": "likes(mouse, rabbit) :- likes(X, mouse).",
        "description": "If something likes the mouse then the mouse likes the rabbit."
    },
    {
        "id": 11363,
        "statement": "likes(X, lion) :- is(X, red).",
        "description": "If something is red then it likes the lion."
    },
    {
        "id": 11364,
        "statement": "is(X, rough) :- needs(X, lion), likes(lion, mouse).",
        "description": "If something needs the lion and the lion likes the mouse then it is rough."
    },
    {
        "id": 11365,
        "statement": "is(X, big) :- needs(X, bear).",
        "description": "If someone needs the bear then they are big."
    },
    {
        "id": 11366,
        "statement": "is(bald_eagle, cold) :- eats(X, bald_eagle).",
        "description": "If someone eats the bald eagle then the bald eagle is cold."
    },
    {
        "id": 11367,
        "statement": "chases(X, mouse) :- needs(X, dog).",
        "description": "If someone needs the dog then they chase the mouse."
    },
    {
        "id": 11368,
        "statement": "needs(bald_eagle, bear) :- eats(X, mouse), needs(X, bald_eagle).",
        "description": "If someone eats the mouse and they need the bald eagle then the bald eagle needs the bear."
    },
    {
        "id": 11369,
        "statement": "is(mouse, rough) :- not needs(bear, mouse), not is(bear, cold).",
        "description": "If the bear does not need the mouse and the bear is not cold then the mouse is rough."
    },
    {
        "id": 11370,
        "statement": "is(X, green) :- is(X, rough), is(X, young).",
        "description": "Rough, young things are green."
    },
    {
        "id": 11371,
        "statement": "chases(cow, tiger) :- visits(cow, squirrel).",
        "description": "If the cow visits the squirrel then the cow chases the tiger."
    },
    {
        "id": 11372,
        "statement": "likes(squirrel, cow) :- likes(X, squirrel), chases(X, bald_eagle).",
        "description": "If something likes the squirrel and it chases the bald eagle then the squirrel likes the cow."
    },
    {
        "id": 11373,
        "statement": "is(tiger, kind) :- likes(X, bald_eagle), likes(bald_eagle, tiger).",
        "description": "If something likes the bald eagle and the bald eagle likes the tiger then the tiger is kind."
    },
    {
        "id": 11374,
        "statement": "is(cow, green) :- chases(X, cow), visits(cow, bald_eagle).",
        "description": "If something chases the cow and the cow visits the bald eagle then the cow is green."
    },
    {
        "id": 11375,
        "statement": "chases(X, tiger) :- likes(X, cow).",
        "description": "If something likes the cow then it chases the tiger."
    },
    {
        "id": 11376,
        "statement": "chases(X, cow) :- is(X, green), chases(X, tiger).",
        "description": "If something is green and it chases the tiger then it chases the cow."
    },
    {
        "id": 11377,
        "statement": "is(tiger, green) :- chases(cow, tiger).",
        "description": "If the cow chases the tiger then the tiger is green."
    },
    {
        "id": 11378,
        "statement": "likes(tiger, cow) :- chases(X, tiger), visits(X, tiger).",
        "description": "If something chases the tiger and it visits the tiger then the tiger likes the cow."
    },
    {
        "id": 11379,
        "statement": "is(gary, big) :- is(gary, green), is(gary, round).",
        "description": "If Gary is green and Gary is round then Gary is big."
    },
    {
        "id": 11380,
        "statement": "is(X, red) :- is(X, cold), is(X, green).",
        "description": "Cold, green things are red."
    },
    {
        "id": 11381,
        "statement": "is(X, young) :- is(X, red), is(X, big).",
        "description": "All red, big things are young."
    },
    {
        "id": 11382,
        "statement": "is(fiona, round) :- is(fiona, young), is(fiona, green).",
        "description": "If Fiona is young and Fiona is green then Fiona is round."
    },
    {
        "id": 11383,
        "statement": "visits(X, mouse) :- is(X, round).",
        "description": "If something is round then it visits the mouse."
    },
    {
        "id": 11384,
        "statement": "chases(tiger, mouse) :- chases(X, tiger), visits(tiger, bear).",
        "description": "If something chases the tiger and the tiger visits the bear then the tiger chases the mouse."
    },
    {
        "id": 11385,
        "statement": "is(X, round) :- is(X, nice), is(X, rough).",
        "description": "Nice, rough things are round."
    },
    {
        "id": 11386,
        "statement": "is(tiger, nice) :- needs(X, bear), visits(X, tiger).",
        "description": "If something needs the bear and it visits the tiger then the tiger is nice."
    },
    {
        "id": 11387,
        "statement": "chases(X, tiger) :- visits(X, mouse).",
        "description": "If something visits the mouse then it chases the tiger."
    },
    {
        "id": 11388,
        "statement": "is(mouse, nice) :- chases(X, mouse).",
        "description": "If something chases the mouse then the mouse is nice."
    },
    {
        "id": 11389,
        "statement": "chases(cat, mouse) :- chases(X, cat).",
        "description": "If something chases the cat then the cat chases the mouse."
    },
    {
        "id": 11390,
        "statement": "is(X, smart) :- is(X, blue), not is(X, green).",
        "description": "If someone is blue and not green then they are smart."
    },
    {
        "id": 11391,
        "statement": "is(X, round) :- is(X, rough), is(X, smart).",
        "description": "Rough, smart people are round."
    },
    {
        "id": 11392,
        "statement": "is(X, blue) :- is(X, rough), is(X, round).",
        "description": "All rough, round people are blue."
    },
    {
        "id": 11393,
        "statement": "is(X, kind) :- is(X, round), is(X, red).",
        "description": "All round, red people are kind."
    },
    {
        "id": 11394,
        "statement": "is(dave, furry) :- is(dave, rough).",
        "description": "If Dave is rough then Dave is furry."
    },
    {
        "id": 11395,
        "statement": "is(charlie, cold) :- is(charlie, kind).",
        "description": "If Charlie is kind then Charlie is cold."
    },
    {
        "id": 11396,
        "statement": "is(X, cold) :- is(X, quiet), is(X, rough).",
        "description": "Quiet, rough things are cold."
    },
    {
        "id": 11397,
        "statement": "is(rabbit, cold) :- sees(X, rabbit), chases(X, lion).",
        "description": "If something sees the rabbit and it chases the lion then the rabbit is cold."
    },
    {
        "id": 11398,
        "statement": "likes(X, rabbit) :- chases(X, dog).",
        "description": "If something chases the dog then it likes the rabbit."
    },
    {
        "id": 11399,
        "statement": "chases(dog, tiger) :- sees(X, dog).",
        "description": "If something sees the dog then the dog chases the tiger."
    },
    {
        "id": 11400,
        "statement": "sees(X, dog) :- likes(X, rabbit).",
        "description": "If something likes the rabbit then it sees the dog."
    },
    {
        "id": 11401,
        "statement": "likes(X, tiger) :- is(X, cold).",
        "description": "If something is cold then it likes the tiger."
    },
    {
        "id": 11402,
        "statement": "is(tiger, cold) :- chases(X, tiger).",
        "description": "If something chases the tiger then the tiger is cold."
    },
    {
        "id": 11403,
        "statement": "likes(dog, lion) :- sees(X, dog), not likes(X, rabbit).",
        "description": "If something sees the dog and it does not like the rabbit then the dog likes the lion."
    },
    {
        "id": 11404,
        "statement": "eats(X, bald_eagle) :- chases(X, tiger).",
        "description": "If something chases the tiger then it eats the bald eagle."
    },
    {
        "id": 11405,
        "statement": "is(mouse, blue) :- chases(X, mouse), chases(X, bald_eagle).",
        "description": "If something chases the mouse and it chases the bald eagle then the mouse is blue."
    },
    {
        "id": 11406,
        "statement": "sees(X, tiger) :- is(X, blue).",
        "description": "If something is blue then it sees the tiger."
    },
    {
        "id": 11407,
        "statement": "chases(X, mouse) :- eats(X, tiger).",
        "description": "If something eats the tiger then it chases the mouse."
    },
    {
        "id": 11408,
        "statement": "is(tiger, kind) :- chases(X, mouse), sees(mouse, tiger).",
        "description": "If something chases the mouse and the mouse sees the tiger then the tiger is kind."
    },
    {
        "id": 11409,
        "statement": "is(erin, green) :- is(erin, rough), not is(erin, quiet).",
        "description": "If Erin is rough and Erin is not quiet then Erin is green."
    },
    {
        "id": 11410,
        "statement": "is(X, nice) :- is(X, rough), is(X, blue).",
        "description": "Rough, blue people are nice."
    },
    {
        "id": 11411,
        "statement": "is(X, rough) :- is(X, quiet), not is(X, white).",
        "description": "If someone is quiet and not white then they are rough."
    },
    {
        "id": 11412,
        "statement": "is(X, red) :- is(X, quiet), is(X, green).",
        "description": "If someone is quiet and green then they are red."
    },
    {
        "id": 11413,
        "statement": "is(X, nice) :- is(X, red), is(X, green).",
        "description": "If someone is red and green then they are nice."
    },
    {
        "id": 11414,
        "statement": "is(X, green) :- is(X, rough), not is(X, quiet).",
        "description": "If someone is rough and not quiet then they are green."
    },
    {
        "id": 11415,
        "statement": "is(bob, red) :- is(bob, kind), not is(bob, quiet).",
        "description": "If Bob is kind and Bob is not quiet then Bob is red."
    },
    {
        "id": 11416,
        "statement": "is(X, big) :- is(X, nice), is(X, round).",
        "description": "All nice, round things are big."
    },
    {
        "id": 11417,
        "statement": "is(X, round) :- is(X, nice), is(X, rough).",
        "description": "If something is nice and rough then it is round."
    },
    {
        "id": 11418,
        "statement": "is(fiona, big) :- is(fiona, round), is(fiona, rough).",
        "description": "If Fiona is round and Fiona is rough then Fiona is big."
    },
    {
        "id": 11419,
        "statement": "is(X, red) :- is(X, blue), is(X, big).",
        "description": "All blue, big things are red."
    },
    {
        "id": 11420,
        "statement": "is(fiona, red) :- is(fiona, blue), is(fiona, nice).",
        "description": "If Fiona is blue and Fiona is nice then Fiona is red."
    },
    {
        "id": 11421,
        "statement": "is(X, nice) :- is(X, big), not is(X, rough).",
        "description": "If something is big and not rough then it is nice."
    },
    {
        "id": 11422,
        "statement": "is(X, round) :- is(X, furry), is(X, green).",
        "description": "If something is furry and green then it is round."
    },
    {
        "id": 11423,
        "statement": "is(X, cold) :- is(X, red), is(X, kind).",
        "description": "All red, kind things are cold."
    },
    {
        "id": 11424,
        "statement": "is(anne, blue) :- is(anne, green).",
        "description": "If Anne is green then Anne is blue."
    },
    {
        "id": 11425,
        "statement": "is(X, green) :- is(X, kind), is(X, cold).",
        "description": "If something is kind and cold then it is green."
    },
    {
        "id": 11426,
        "statement": "likes(rabbit, mouse) :- likes(X, rabbit), is(rabbit, round).",
        "description": "If someone likes the rabbit and the rabbit is round then the rabbit likes the mouse."
    },
    {
        "id": 11427,
        "statement": "visits(X, rabbit) :- likes(X, mouse).",
        "description": "If someone likes the mouse then they visit the rabbit."
    },
    {
        "id": 11428,
        "statement": "chases(mouse, rabbit) :- is(X, rough), likes(X, mouse).",
        "description": "If someone is rough and they like the mouse then the mouse chases the rabbit."
    },
    {
        "id": 11429,
        "statement": "is(lion, nice) :- is(lion, round), is(lion, kind).",
        "description": "If the lion is round and the lion is kind then the lion is nice."
    },
    {
        "id": 11430,
        "statement": "chases(cow, rabbit) :- chases(cow, lion), is(cow, kind).",
        "description": "If the cow chases the lion and the cow is kind then the cow chases the rabbit."
    },
    {
        "id": 11431,
        "statement": "visits(mouse, lion) :- visits(X, cow), visits(cow, mouse).",
        "description": "If someone visits the cow and the cow visits the mouse then the mouse visits the lion."
    },
    {
        "id": 11432,
        "statement": "likes(X, cow) :- visits(X, rabbit), visits(rabbit, mouse).",
        "description": "If someone visits the rabbit and the rabbit visits the mouse then they like the cow."
    },
    {
        "id": 11433,
        "statement": "likes(cow, mouse) :- likes(X, cow), visits(X, mouse).",
        "description": "If someone likes the cow and they visit the mouse then the cow likes the mouse."
    },
    {
        "id": 11434,
        "statement": "is(X, big) :- is(X, young), is(X, round).",
        "description": "Young, round people are big."
    },
    {
        "id": 11435,
        "statement": "is(X, red) :- is(X, round), is(X, rough).",
        "description": "All round, rough people are red."
    },
    {
        "id": 11436,
        "statement": "is(X, smart) :- is(X, red), is(X, young).",
        "description": "Red, young people are smart."
    },
    {
        "id": 11437,
        "statement": "is(X, rough) :- is(X, smart), is(X, furry).",
        "description": "All smart, furry people are rough."
    },
    {
        "id": 11438,
        "statement": "is(cow, big) :- visits(X, cow), eats(X, cat).",
        "description": "If someone visits the cow and they eat the cat then the cow is big."
    },
    {
        "id": 11439,
        "statement": "eats(X, bald_eagle) :- is(X, big), eats(X, cat).",
        "description": "If someone is big and they eat the cat then they eat the bald eagle."
    },
    {
        "id": 11440,
        "statement": "likes(X, cow) :- eats(X, cow), likes(cow, cat).",
        "description": "If someone eats the cow and the cow likes the cat then they like the cow."
    },
    {
        "id": 11441,
        "statement": "eats(bear, cow) :- eats(X, cat), eats(X, bear).",
        "description": "If someone eats the cat and they eat the bear then the bear eats the cow."
    },
    {
        "id": 11442,
        "statement": "visits(X, bear) :- is(X, big), likes(X, cat).",
        "description": "If someone is big and they like the cat then they visit the bear."
    },
    {
        "id": 11443,
        "statement": "eats(cat, bald_eagle) :- visits(X, cat).",
        "description": "If someone visits the cat then the cat eats the bald eagle."
    },
    {
        "id": 11444,
        "statement": "eats(X, bear) :- visits(X, cow), visits(cow, bear).",
        "description": "If someone visits the cow and the cow visits the bear then they eat the bear."
    },
    {
        "id": 11445,
        "statement": "likes(X, cat) :- visits(X, bear), eats(bear, bald_eagle).",
        "description": "If someone visits the bear and the bear eats the bald eagle then they like the cat."
    },
    {
        "id": 11446,
        "statement": "is(X, kind) :- is(X, furry), is(X, round).",
        "description": "Furry, round people are kind."
    },
    {
        "id": 11447,
        "statement": "is(X, white) :- is(X, cold), is(X, smart).",
        "description": "If someone is cold and smart then they are white."
    },
    {
        "id": 11448,
        "statement": "is(dog, blue) :- sees(X, dog).",
        "description": "If someone sees the dog then the dog is blue."
    },
    {
        "id": 11449,
        "statement": "needs(X, bear) :- likes(X, dog).",
        "description": "If someone likes the dog then they need the bear."
    },
    {
        "id": 11450,
        "statement": "needs(squirrel, rabbit) :- is(X, rough), sees(X, squirrel).",
        "description": "If someone is rough and they see the squirrel then the squirrel needs the rabbit."
    },
    {
        "id": 11451,
        "statement": "likes(squirrel, rabbit) :- likes(X, squirrel).",
        "description": "If someone likes the squirrel then the squirrel likes the rabbit."
    },
    {
        "id": 11452,
        "statement": "sees(bear, squirrel) :- is(squirrel, kind), likes(squirrel, bear).",
        "description": "If the squirrel is kind and the squirrel likes the bear then the bear sees the squirrel."
    },
    {
        "id": 11453,
        "statement": "needs(X, lion) :- visits(X, cow).",
        "description": "If someone visits the cow then they need the lion."
    },
    {
        "id": 11454,
        "statement": "needs(lion, rabbit) :- needs(X, lion).",
        "description": "If someone needs the lion then the lion needs the rabbit."
    },
    {
        "id": 11455,
        "statement": "sees(X, rabbit) :- is(X, round), is(X, cold).",
        "description": "If someone is round and cold then they see the rabbit."
    },
    {
        "id": 11456,
        "statement": "sees(X, tiger) :- visits(X, cow).",
        "description": "If someone visits the cow then they see the tiger."
    },
    {
        "id": 11457,
        "statement": "sees(tiger, rabbit) :- sees(X, tiger).",
        "description": "If someone sees the tiger then the tiger sees the rabbit."
    },
    {
        "id": 11458,
        "statement": "visits(rabbit, cow) :- sees(X, rabbit).",
        "description": "If someone sees the rabbit then the rabbit visits the cow."
    },
    {
        "id": 11459,
        "statement": "is(rabbit, young) :- is(rabbit, cold), sees(rabbit, tiger).",
        "description": "If the rabbit is cold and the rabbit sees the tiger then the rabbit is young."
    },
    {
        "id": 11460,
        "statement": "visits(lion, cow) :- needs(lion, rabbit).",
        "description": "If the lion needs the rabbit then the lion visits the cow."
    },
    {
        "id": 11461,
        "statement": "is(X, white) :- is(X, blue), is(X, kind).",
        "description": "If someone is blue and kind then they are white."
    },
    {
        "id": 11462,
        "statement": "is(X, big) :- is(X, young), not is(X, smart).",
        "description": "If someone is young and not smart then they are big."
    },
    {
        "id": 11463,
        "statement": "is(X, big) :- is(X, young), is(X, white).",
        "description": "If someone is young and white then they are big."
    },
    {
        "id": 11464,
        "statement": "is(harry, blue) :- is(harry, young), is(harry, smart).",
        "description": "If Harry is young and Harry is smart then Harry is blue."
    },
    {
        "id": 11465,
        "statement": "is(X, kind) :- is(X, furry).",
        "description": "If someone is furry then they are kind."
    },
    {
        "id": 11466,
        "statement": "is(dave, green) :- is(dave, cold), is(dave, young).",
        "description": "If Dave is cold and Dave is young then Dave is green."
    },
    {
        "id": 11467,
        "statement": "is(fiona, round) :- is(fiona, green).",
        "description": "If Fiona is green then Fiona is round."
    },
    {
        "id": 11468,
        "statement": "is(dave, furry) :- is(dave, round).",
        "description": "If Dave is round then Dave is furry."
    },
    {
        "id": 11469,
        "statement": "is(X, round) :- is(X, red), is(X, green).",
        "description": "All red, green things are round."
    },
    {
        "id": 11470,
        "statement": "is(X, red) :- is(X, kind), is(X, quiet).",
        "description": "If something is kind and quiet then it is red."
    },
    {
        "id": 11471,
        "statement": "is(X, smart) :- is(X, rough), is(X, red).",
        "description": "If something is rough and red then it is smart."
    },
    {
        "id": 11472,
        "statement": "chases(dog, mouse) :- not sees(cow, dog).",
        "description": "If the cow does not see the dog then the dog chases the mouse."
    },
    {
        "id": 11473,
        "statement": "chases(X, cow) :- needs(X, mouse).",
        "description": "If something needs the mouse then it chases the cow."
    },
    {
        "id": 11474,
        "statement": "needs(X, mouse) :- is(X, kind), sees(X, cow).",
        "description": "If something is kind and it sees the cow then it needs the mouse."
    },
    {
        "id": 11475,
        "statement": "is(lion, kind) :- needs(X, lion).",
        "description": "If something needs the lion then the lion is kind."
    },
    {
        "id": 11476,
        "statement": "is(mouse, kind) :- is(X, red), chases(X, mouse).",
        "description": "If something is red and it chases the mouse then the mouse is kind."
    },
    {
        "id": 11477,
        "statement": "sees(X, lion) :- is(X, cold), not sees(X, mouse).",
        "description": "If something is cold and it does not see the mouse then it sees the lion."
    },
    {
        "id": 11478,
        "statement": "is(X, cold) :- chases(X, cow).",
        "description": "If something chases the cow then it is cold."
    },
    {
        "id": 11479,
        "statement": "is(X, kind) :- is(X, quiet), is(X, blue).",
        "description": "All quiet, blue people are kind."
    },
    {
        "id": 11480,
        "statement": "is(X, blue) :- is(X, round), is(X, red).",
        "description": "Round, red people are blue."
    },
    {
        "id": 11481,
        "statement": "is(erin, quiet) :- is(erin, blue), is(erin, rough).",
        "description": "If Erin is blue and Erin is rough then Erin is quiet."
    },
    {
        "id": 11482,
        "statement": "is(X, rough) :- is(X, white), is(X, cold).",
        "description": "If someone is white and cold then they are rough."
    },
    {
        "id": 11483,
        "statement": "is(X, white) :- is(X, blue), is(X, smart).",
        "description": "All blue, smart people are white."
    },
    {
        "id": 11484,
        "statement": "is(X, red) :- is(X, smart), is(X, green).",
        "description": "If someone is smart and green then they are red."
    },
    {
        "id": 11485,
        "statement": "is(X, quiet) :- is(X, green), is(X, big).",
        "description": "Green, big people are quiet."
    },
    {
        "id": 11486,
        "statement": "is(X, big) :- is(X, green), is(X, young).",
        "description": "Green, young people are big."
    },
    {
        "id": 11487,
        "statement": "eats(X, bald_eagle) :- eats(X, cat).",
        "description": "If someone eats the cat then they eat the bald eagle."
    },
    {
        "id": 11488,
        "statement": "likes(X, cat) :- chases(X, lion).",
        "description": "If someone chases the lion then they like the cat."
    },
    {
        "id": 11489,
        "statement": "chases(X, bear) :- eats(X, lion).",
        "description": "If someone eats the lion then they chase the bear."
    },
    {
        "id": 11490,
        "statement": "eats(lion, bear) :- likes(lion, bald_eagle).",
        "description": "If the lion likes the bald eagle then the lion eats the bear."
    },
    {
        "id": 11491,
        "statement": "likes(X, bear) :- eats(X, bald_eagle).",
        "description": "If someone eats the bald eagle then they like the bear."
    },
    {
        "id": 11492,
        "statement": "likes(cat, bear) :- eats(bald_eagle, lion), likes(lion, cat).",
        "description": "If the bald eagle eats the lion and the lion likes the cat then the cat likes the bear."
    },
    {
        "id": 11493,
        "statement": "eats(bear, cat) :- likes(X, bear), eats(X, bear).",
        "description": "If someone likes the bear and they eat the bear then the bear eats the cat."
    },
    {
        "id": 11494,
        "statement": "eats(X, bald_eagle) :- eats(X, bear), likes(X, cat).",
        "description": "If someone eats the bear and they like the cat then they eat the bald eagle."
    },
    {
        "id": 11495,
        "statement": "likes(bald_eagle, lion) :- likes(X, bald_eagle).",
        "description": "If someone likes the bald eagle then the bald eagle likes the lion."
    },
    {
        "id": 11496,
        "statement": "sees(X, cow) :- eats(X, mouse).",
        "description": "If someone eats the mouse then they see the cow."
    },
    {
        "id": 11497,
        "statement": "sees(cow, squirrel) :- sees(X, cow).",
        "description": "If someone sees the cow then the cow sees the squirrel."
    },
    {
        "id": 11498,
        "statement": "is(squirrel, nice) :- is(X, nice), likes(X, squirrel).",
        "description": "If someone is nice and they like the squirrel then the squirrel is nice."
    },
    {
        "id": 11499,
        "statement": "eats(X, mouse) :- likes(X, mouse).",
        "description": "If someone likes the mouse then they eat the mouse."
    },
    {
        "id": 11500,
        "statement": "sees(X, cow) :- is(X, red).",
        "description": "If someone is red then they see the cow."
    },
    {
        "id": 11501,
        "statement": "likes(cow, squirrel) :- likes(X, cow).",
        "description": "If someone likes the cow then the cow likes the squirrel."
    },
    {
        "id": 11502,
        "statement": "is(X, rough) :- is(X, white), is(X, quiet).",
        "description": "All white, quiet people are rough."
    },
    {
        "id": 11503,
        "statement": "is(anne, furry) :- is(anne, white), is(anne, big).",
        "description": "If Anne is white and Anne is big then Anne is furry."
    },
    {
        "id": 11504,
        "statement": "is(X, furry) :- is(X, round), is(X, green).",
        "description": "If someone is round and green then they are furry."
    },
    {
        "id": 11505,
        "statement": "is(X, white) :- is(X, big), is(X, round).",
        "description": "All big, round people are white."
    },
    {
        "id": 11506,
        "statement": "is(X, quiet) :- is(X, round), is(X, big).",
        "description": "Round, big people are quiet."
    },
    {
        "id": 11507,
        "statement": "is(X, white) :- is(X, rough), is(X, quiet).",
        "description": "All rough, quiet people are white."
    },
    {
        "id": 11508,
        "statement": "chases(dog, tiger) :- is(tiger, green), chases(tiger, dog).",
        "description": "If the tiger is green and the tiger chases the dog then the dog chases the tiger."
    },
    {
        "id": 11509,
        "statement": "likes(tiger, rabbit) :- chases(X, tiger).",
        "description": "If something chases the tiger then the tiger likes the rabbit."
    },
    {
        "id": 11510,
        "statement": "is(X, rough) :- sees(X, rabbit), is(X, green).",
        "description": "If something sees the rabbit and it is green then it is rough."
    },
    {
        "id": 11511,
        "statement": "sees(mouse, dog) :- is(mouse, young).",
        "description": "If the mouse is young then the mouse sees the dog."
    },
    {
        "id": 11512,
        "statement": "likes(X, dog) :- is(X, rough).",
        "description": "If something is rough then it likes the dog."
    },
    {
        "id": 11513,
        "statement": "is(mouse, green) :- is(X, big), not likes(X, mouse).",
        "description": "If something is big and it does not like the mouse then the mouse is green."
    },
    {
        "id": 11514,
        "statement": "sees(mouse, rabbit) :- not sees(dog, tiger), not likes(tiger, mouse).",
        "description": "If the dog does not see the tiger and the tiger does not like the mouse then the mouse sees the rabbit."
    },
    {
        "id": 11515,
        "statement": "is(tiger, big) :- likes(mouse, tiger), likes(tiger, rabbit).",
        "description": "If the mouse likes the tiger and the tiger likes the rabbit then the tiger is big."
    },
    {
        "id": 11516,
        "statement": "chases(rabbit, mouse) :- sees(X, dog), not sees(X, rabbit).",
        "description": "If something sees the dog and it does not see the rabbit then the rabbit chases the mouse."
    },
    {
        "id": 11517,
        "statement": "needs(cat, dog) :- eats(X, cat).",
        "description": "If something eats the cat then the cat needs the dog."
    },
    {
        "id": 11518,
        "statement": "eats(X, dog) :- eats(X, mouse), needs(X, rabbit).",
        "description": "If something eats the mouse and it needs the rabbit then it eats the dog."
    },
    {
        "id": 11519,
        "statement": "eats(X, dog) :- is(X, red).",
        "description": "If something is red then it eats the dog."
    },
    {
        "id": 11520,
        "statement": "needs(X, mouse) :- is(X, green).",
        "description": "If something is green then it needs the mouse."
    },
    {
        "id": 11521,
        "statement": "is(X, green) :- visits(X, cat), is(cat, blue).",
        "description": "If something visits the cat and the cat is blue then it is green."
    },
    {
        "id": 11522,
        "statement": "needs(X, mouse) :- needs(X, dog).",
        "description": "If something needs the dog then it needs the mouse."
    },
    {
        "id": 11523,
        "statement": "is(X, big) :- is(X, nice), is(X, quiet).",
        "description": "If something is nice and quiet then it is big."
    },
    {
        "id": 11524,
        "statement": "is(X, nice) :- is(X, furry), is(X, blue).",
        "description": "If something is furry and blue then it is nice."
    },
    {
        "id": 11525,
        "statement": "is(erin, green) :- is(erin, kind), not is(erin, blue).",
        "description": "If Erin is kind and Erin is not blue then Erin is green."
    },
    {
        "id": 11526,
        "statement": "is(X, green) :- is(X, young), is(X, blue).",
        "description": "Young, blue things are green."
    },
    {
        "id": 11527,
        "statement": "is(X, rough) :- is(X, green), is(X, blue).",
        "description": "Green, blue things are rough."
    },
    {
        "id": 11528,
        "statement": "is(anne, green) :- is(anne, blue).",
        "description": "If Anne is blue then Anne is green."
    },
    {
        "id": 11529,
        "statement": "is(anne, red) :- is(anne, big), is(anne, quiet).",
        "description": "If Anne is big and Anne is quiet then Anne is red."
    },
    {
        "id": 11530,
        "statement": "likes(X, bald_eagle) :- is(X, round).",
        "description": "If something is round then it likes the bald eagle."
    },
    {
        "id": 11531,
        "statement": "likes(X, cat) :- is(X, red).",
        "description": "If something is red then it likes the cat."
    },
    {
        "id": 11532,
        "statement": "chases(X, bald_eagle) :- is(X, round), likes(X, bald_eagle).",
        "description": "If something is round and it likes the bald eagle then it chases the bald eagle."
    },
    {
        "id": 11533,
        "statement": "is(lion, blue) :- likes(X, lion), visits(X, lion).",
        "description": "If something likes the lion and it visits the lion then the lion is blue."
    },
    {
        "id": 11534,
        "statement": "is(bald_eagle, round) :- likes(X, bald_eagle).",
        "description": "If something likes the bald eagle then the bald eagle is round."
    },
    {
        "id": 11535,
        "statement": "likes(X, mouse) :- is(X, kind), is(X, blue).",
        "description": "If something is kind and blue then it likes the mouse."
    },
    {
        "id": 11536,
        "statement": "is(cat, rough) :- is(X, blue), chases(X, cat).",
        "description": "If something is blue and it chases the cat then the cat is rough."
    },
    {
        "id": 11537,
        "statement": "is(X, rough) :- likes(X, mouse).",
        "description": "If something likes the mouse then it is rough."
    },
    {
        "id": 11538,
        "statement": "is(lion, round) :- likes(X, lion).",
        "description": "If something likes the lion then the lion is round."
    },
    {
        "id": 11539,
        "statement": "needs(tiger, dog) :- visits(rabbit, tiger), visits(rabbit, dog).",
        "description": "If the rabbit visits the tiger and the rabbit visits the dog then the tiger needs the dog."
    },
    {
        "id": 11540,
        "statement": "needs(X, bald_eagle) :- is(X, red).",
        "description": "If someone is red then they need the bald eagle."
    },
    {
        "id": 11541,
        "statement": "sees(X, bald_eagle) :- is(X, green).",
        "description": "If someone is green then they see the bald eagle."
    },
    {
        "id": 11542,
        "statement": "is(bald_eagle, big) :- visits(X, bald_eagle), is(X, red).",
        "description": "If someone visits the bald eagle and they are red then the bald eagle is big."
    },
    {
        "id": 11543,
        "statement": "is(X, big) :- visits(X, dog), sees(X, bald_eagle).",
        "description": "If someone visits the dog and they see the bald eagle then they are big."
    },
    {
        "id": 11544,
        "statement": "needs(X, bald_eagle) :- sees(X, tiger).",
        "description": "If someone sees the tiger then they need the bald eagle."
    },
    {
        "id": 11545,
        "statement": "visits(dog, rabbit) :- visits(X, dog), sees(X, bald_eagle).",
        "description": "If someone visits the dog and they see the bald eagle then the dog visits the rabbit."
    },
    {
        "id": 11546,
        "statement": "is(X, quiet) :- is(X, green), not is(X, big).",
        "description": "If someone is green and not big then they are quiet."
    },
    {
        "id": 11547,
        "statement": "is(X, quiet) :- is(X, round), is(X, green).",
        "description": "All round, green people are quiet."
    },
    {
        "id": 11548,
        "statement": "is(X, smart) :- is(X, quiet), not is(X, big).",
        "description": "If someone is quiet and not big then they are smart."
    },
    {
        "id": 11549,
        "statement": "is(dave, quiet) :- is(dave, round).",
        "description": "If Dave is round then Dave is quiet."
    },
    {
        "id": 11550,
        "statement": "is(X, green) :- is(X, quiet), is(X, rough).",
        "description": "Quiet, rough people are green."
    },
    {
        "id": 11551,
        "statement": "likes(X, tiger) :- chases(X, lion).",
        "description": "If someone chases the lion then they like the tiger."
    },
    {
        "id": 11552,
        "statement": "chases(squirrel, lion) :- likes(X, squirrel), sees(X, squirrel).",
        "description": "If someone likes the squirrel and they see the squirrel then the squirrel chases the lion."
    },
    {
        "id": 11553,
        "statement": "sees(X, lion) :- likes(X, tiger), is(tiger, red).",
        "description": "If someone likes the tiger and the tiger is red then they see the lion."
    },
    {
        "id": 11554,
        "statement": "chases(X, lion) :- is(X, big).",
        "description": "If someone is big then they chase the lion."
    },
    {
        "id": 11555,
        "statement": "is(X, rough) :- is(X, blue), is(X, furry).",
        "description": "All blue, furry things are rough."
    },
    {
        "id": 11556,
        "statement": "is(X, furry) :- is(X, blue), not is(X, red).",
        "description": "If something is blue and not red then it is furry."
    },
    {
        "id": 11557,
        "statement": "is(X, white) :- is(X, young), is(X, rough).",
        "description": "Young, rough things are white."
    },
    {
        "id": 11558,
        "statement": "is(dave, young) :- is(dave, rough).",
        "description": "If Dave is rough then Dave is young."
    },
    {
        "id": 11559,
        "statement": "is(X, green) :- is(X, round), is(X, white).",
        "description": "If something is round and white then it is green."
    },
    {
        "id": 11560,
        "statement": "is(X, nice) :- is(X, blue), not is(X, round).",
        "description": "If something is blue and not round then it is nice."
    },
    {
        "id": 11561,
        "statement": "needs(squirrel, dog) :- chases(X, dog), needs(dog, squirrel).",
        "description": "If something chases the dog and the dog needs the squirrel then the squirrel needs the dog."
    },
    {
        "id": 11562,
        "statement": "likes(X, squirrel) :- chases(X, bear), is(X, nice).",
        "description": "If something chases the bear and it is nice then it likes the squirrel."
    },
    {
        "id": 11563,
        "statement": "needs(X, dog) :- is(X, cold).",
        "description": "If something is cold then it needs the dog."
    },
    {
        "id": 11564,
        "statement": "likes(dog, bear) :- is(X, nice), chases(X, dog).",
        "description": "If something is nice and it chases the dog then the dog likes the bear."
    },
    {
        "id": 11565,
        "statement": "needs(X, squirrel) :- is(X, round).",
        "description": "If something is round then it needs the squirrel."
    },
    {
        "id": 11566,
        "statement": "is(X, green) :- needs(X, dog).",
        "description": "If something needs the dog then it is green."
    },
    {
        "id": 11567,
        "statement": "is(X, young) :- is(X, cold), is(X, red).",
        "description": "Cold, red things are young."
    },
    {
        "id": 11568,
        "statement": "sees(bald_eagle, rabbit) :- is(X, blue), sees(X, bald_eagle).",
        "description": "If something is blue and it sees the bald eagle then the bald eagle sees the rabbit."
    },
    {
        "id": 11569,
        "statement": "chases(X, dog) :- sees(X, bald_eagle).",
        "description": "If something sees the bald eagle then it chases the dog."
    },
    {
        "id": 11570,
        "statement": "sees(bald_eagle, dog) :- sees(X, bald_eagle).",
        "description": "If something sees the bald eagle then the bald eagle sees the dog."
    },
    {
        "id": 11571,
        "statement": "is(X, cold) :- chases(X, tiger), is(tiger, big).",
        "description": "If something chases the tiger and the tiger is big then it is cold."
    },
    {
        "id": 11572,
        "statement": "likes(X, tiger) :- sees(X, mouse).",
        "description": "If someone sees the mouse then they like the tiger."
    },
    {
        "id": 11573,
        "statement": "sees(X, mouse) :- likes(X, cow).",
        "description": "If someone likes the cow then they see the mouse."
    },
    {
        "id": 11574,
        "statement": "likes(X, bear) :- likes(X, cow).",
        "description": "If someone likes the cow then they like the bear."
    },
    {
        "id": 11575,
        "statement": "sees(X, mouse) :- eats(X, bear).",
        "description": "If someone eats the bear then they see the mouse."
    },
    {
        "id": 11576,
        "statement": "likes(tiger, cow) :- likes(mouse, tiger).",
        "description": "If the mouse likes the tiger then the tiger likes the cow."
    },
    {
        "id": 11577,
        "statement": "is(X, cold) :- sees(X, mouse).",
        "description": "If someone sees the mouse then they are cold."
    },
    {
        "id": 11578,
        "statement": "is(mouse, green) :- sees(X, mouse), eats(X, mouse).",
        "description": "If someone sees the mouse and they eat the mouse then the mouse is green."
    },
    {
        "id": 11579,
        "statement": "is(X, kind) :- is(X, nice), is(X, white).",
        "description": "If something is nice and white then it is kind."
    },
    {
        "id": 11580,
        "statement": "is(dave, kind) :- is(dave, white).",
        "description": "If Dave is white then Dave is kind."
    },
    {
        "id": 11581,
        "statement": "is(fiona, kind) :- is(fiona, smart), is(fiona, nice).",
        "description": "If Fiona is smart and Fiona is nice then Fiona is kind."
    },
    {
        "id": 11582,
        "statement": "is(X, white) :- is(X, nice), is(X, quiet).",
        "description": "All nice, quiet things are white."
    },
    {
        "id": 11583,
        "statement": "chases(X, dog) :- is(X, young).",
        "description": "If something is young then it chases the dog."
    },
    {
        "id": 11584,
        "statement": "eats(X, lion) :- is(X, round), chases(X, dog).",
        "description": "If something is round and it chases the dog then it eats the lion."
    },
    {
        "id": 11585,
        "statement": "chases(X, squirrel) :- chases(X, dog).",
        "description": "If something chases the dog then it chases the squirrel."
    },
    {
        "id": 11586,
        "statement": "eats(lion, bear) :- chases(lion, squirrel).",
        "description": "If the lion chases the squirrel then the lion eats the bear."
    },
    {
        "id": 11587,
        "statement": "chases(X, lion) :- eats(X, dog), eats(dog, lion).",
        "description": "If something eats the dog and the dog eats the lion then it chases the lion."
    },
    {
        "id": 11588,
        "statement": "is(X, cold) :- chases(X, squirrel).",
        "description": "If something chases the squirrel then it is cold."
    },
    {
        "id": 11589,
        "statement": "chases(squirrel, bear) :- chases(X, squirrel).",
        "description": "If something chases the squirrel then the squirrel chases the bear."
    },
    {
        "id": 11590,
        "statement": "is(X, nice) :- is(X, quiet), is(X, rough).",
        "description": "All quiet, rough people are nice."
    },
    {
        "id": 11591,
        "statement": "is(X, white) :- is(X, quiet), is(X, blue).",
        "description": "If someone is quiet and blue then they are white."
    },
    {
        "id": 11592,
        "statement": "is(X, red) :- is(X, cold), is(X, white).",
        "description": "All cold, white people are red."
    },
    {
        "id": 11593,
        "statement": "is(X, red) :- is(X, rough), is(X, cold).",
        "description": "Rough, cold people are red."
    },
    {
        "id": 11594,
        "statement": "is(X, nice) :- is(X, kind), is(X, young).",
        "description": "All kind, young things are nice."
    },
    {
        "id": 11595,
        "statement": "is(anne, green) :- is(anne, red).",
        "description": "If Anne is red then Anne is green."
    },
    {
        "id": 11596,
        "statement": "is(X, red) :- is(X, nice), is(X, quiet).",
        "description": "All nice, quiet things are red."
    },
    {
        "id": 11597,
        "statement": "is(erin, quiet) :- is(erin, red).",
        "description": "If Erin is red then Erin is quiet."
    },
    {
        "id": 11598,
        "statement": "sees(squirrel, cow) :- sees(X, squirrel).",
        "description": "If someone sees the squirrel then the squirrel sees the cow."
    },
    {
        "id": 11599,
        "statement": "eats(lion, squirrel) :- chases(squirrel, lion).",
        "description": "If the squirrel chases the lion then the lion eats the squirrel."
    },
    {
        "id": 11600,
        "statement": "sees(lion, cow) :- is(X, young), sees(X, lion).",
        "description": "If someone is young and they see the lion then the lion sees the cow."
    },
    {
        "id": 11601,
        "statement": "chases(X, lion) :- is(X, round).",
        "description": "If someone is round then they chase the lion."
    },
    {
        "id": 11602,
        "statement": "is(lion, round) :- sees(lion, squirrel), chases(squirrel, lion).",
        "description": "If the lion sees the squirrel and the squirrel chases the lion then the lion is round."
    },
    {
        "id": 11603,
        "statement": "is(X, red) :- chases(X, lion).",
        "description": "If someone chases the lion then they are red."
    },
    {
        "id": 11604,
        "statement": "sees(X, lion) :- is(X, young), chases(X, mouse).",
        "description": "If someone is young and they chase the mouse then they see the lion."
    },
    {
        "id": 11605,
        "statement": "is(mouse, round) :- chases(mouse, lion).",
        "description": "If the mouse chases the lion then the mouse is round."
    },
    {
        "id": 11606,
        "statement": "is(X, green) :- is(X, red), is(X, blue).",
        "description": "Red, blue things are green."
    },
    {
        "id": 11607,
        "statement": "is(bob, kind) :- is(bob, round).",
        "description": "If Bob is round then Bob is kind."
    },
    {
        "id": 11608,
        "statement": "is(anne, smart) :- is(anne, green).",
        "description": "If Anne is green then Anne is smart."
    },
    {
        "id": 11609,
        "statement": "is(anne, blue) :- is(anne, round), is(anne, kind).",
        "description": "If Anne is round and Anne is kind then Anne is blue."
    },
    {
        "id": 11610,
        "statement": "is(X, big) :- is(X, cold), is(X, quiet).",
        "description": "Cold, quiet people are big."
    },
    {
        "id": 11611,
        "statement": "is(fiona, green) :- is(fiona, nice).",
        "description": "If Fiona is nice then Fiona is green."
    },
    {
        "id": 11612,
        "statement": "is(X, quiet) :- is(X, red), is(X, blue).",
        "description": "All red, blue things are quiet."
    },
    {
        "id": 11613,
        "statement": "is(X, white) :- is(X, round), is(X, blue).",
        "description": "All round, blue things are white."
    },
    {
        "id": 11614,
        "statement": "is(X, green) :- is(X, furry), is(X, round).",
        "description": "Furry, round things are green."
    },
    {
        "id": 11615,
        "statement": "is(X, young) :- is(X, cold), is(X, round).",
        "description": "All cold, round things are young."
    },
    {
        "id": 11616,
        "statement": "is(X, round) :- is(X, young).",
        "description": "Young things are round."
    },
    {
        "id": 11617,
        "statement": "is(X, big) :- is(X, quiet), is(X, rough).",
        "description": "Quiet, rough people are big."
    },
    {
        "id": 11618,
        "statement": "is(X, quiet) :- is(X, round).",
        "description": "Round people are quiet."
    },
    {
        "id": 11619,
        "statement": "is(X, green) :- is(X, nice), is(X, kind).",
        "description": "All nice, kind people are green."
    },
    {
        "id": 11620,
        "statement": "is(X, nice) :- is(X, quiet), is(X, rough).",
        "description": "If someone is quiet and rough then they are nice."
    },
    {
        "id": 11621,
        "statement": "is(X, kind) :- is(X, rough), is(X, furry).",
        "description": "If someone is rough and furry then they are kind."
    },
    {
        "id": 11622,
        "statement": "is(anne, cold) :- is(anne, big), is(anne, furry).",
        "description": "If Anne is big and Anne is furry then Anne is cold."
    },
    {
        "id": 11623,
        "statement": "is(X, white) :- is(X, furry), is(X, green).",
        "description": "All furry, green people are white."
    },
    {
        "id": 11624,
        "statement": "eats(X, dog) :- eats(X, cow).",
        "description": "If something eats the cow then it eats the dog."
    },
    {
        "id": 11625,
        "statement": "is(X, cold) :- needs(X, mouse).",
        "description": "If something needs the mouse then it is cold."
    },
    {
        "id": 11626,
        "statement": "eats(cat, dog) :- is(X, cold), needs(X, cat).",
        "description": "If something is cold and it needs the cat then the cat eats the dog."
    },
    {
        "id": 11627,
        "statement": "is(X, rough) :- needs(X, cow), not eats(X, mouse).",
        "description": "If something needs the cow and it does not eat the mouse then it is rough."
    },
    {
        "id": 11628,
        "statement": "eats(X, cow) :- eats(X, cat).",
        "description": "If something eats the cat then it eats the cow."
    },
    {
        "id": 11629,
        "statement": "eats(cat, cow) :- visits(X, cat).",
        "description": "If something visits the cat then the cat eats the cow."
    },
    {
        "id": 11630,
        "statement": "is(X, kind) :- is(X, young), is(X, furry).",
        "description": "Young, furry people are kind."
    },
    {
        "id": 11631,
        "statement": "is(X, white) :- is(X, cold), is(X, furry).",
        "description": "Cold, furry people are white."
    },
    {
        "id": 11632,
        "statement": "is(harry, young) :- is(harry, white), is(harry, kind).",
        "description": "If Harry is white and Harry is kind then Harry is young."
    },
    {
        "id": 11633,
        "statement": "is(X, cold) :- is(X, round), is(X, white).",
        "description": "Round, white people are cold."
    },
    {
        "id": 11634,
        "statement": "eats(X, cat) :- chases(X, bear).",
        "description": "If something chases the bear then it eats the cat."
    },
    {
        "id": 11635,
        "statement": "eats(X, cat) :- chases(X, cat).",
        "description": "If something chases the cat then it eats the cat."
    },
    {
        "id": 11636,
        "statement": "is(rabbit, young) :- likes(X, rabbit), not is(X, rough).",
        "description": "If something likes the rabbit and it is not rough then the rabbit is young."
    },
    {
        "id": 11637,
        "statement": "is(cat, young) :- eats(X, cat), is(X, rough).",
        "description": "If something eats the cat and it is rough then the cat is young."
    },
    {
        "id": 11638,
        "statement": "chases(X, bear) :- is(X, young).",
        "description": "If something is young then it chases the bear."
    },
    {
        "id": 11639,
        "statement": "is(X, smart) :- is(X, blue), is(X, quiet).",
        "description": "All blue, quiet people are smart."
    },
    {
        "id": 11640,
        "statement": "is(X, smart) :- is(X, blue), is(X, round).",
        "description": "Blue, round people are smart."
    },
    {
        "id": 11641,
        "statement": "is(X, blue) :- is(X, quiet), is(X, red).",
        "description": "All quiet, red people are blue."
    },
    {
        "id": 11642,
        "statement": "is(X, young) :- is(X, nice), is(X, big).",
        "description": "Nice, big people are young."
    },
    {
        "id": 11643,
        "statement": "is(erin, white) :- is(erin, furry).",
        "description": "If Erin is furry then Erin is white."
    },
    {
        "id": 11644,
        "statement": "is(X, big) :- is(X, white), is(X, furry).",
        "description": "All white, furry people are big."
    },
    {
        "id": 11645,
        "statement": "is(X, white) :- is(X, blue), is(X, red).",
        "description": "Blue, red people are white."
    },
    {
        "id": 11646,
        "statement": "is(X, blue) :- is(X, cold), is(X, young).",
        "description": "All cold, young people are blue."
    },
    {
        "id": 11647,
        "statement": "is(X, young) :- is(X, quiet), is(X, green).",
        "description": "All quiet, green people are young."
    },
    {
        "id": 11648,
        "statement": "is(gary, cold) :- is(gary, nice), is(gary, quiet).",
        "description": "If Gary is nice and Gary is quiet then Gary is cold."
    },
    {
        "id": 11649,
        "statement": "is(X, cold) :- is(X, blue), is(X, green).",
        "description": "Blue, green people are cold."
    },
    {
        "id": 11650,
        "statement": "is(X, furry) :- is(X, blue), is(X, round).",
        "description": "All blue, round things are furry."
    },
    {
        "id": 11651,
        "statement": "is(X, round) :- is(X, furry), is(X, quiet).",
        "description": "If something is furry and quiet then it is round."
    },
    {
        "id": 11652,
        "statement": "is(anne, green) :- is(anne, furry).",
        "description": "If Anne is furry then Anne is green."
    },
    {
        "id": 11653,
        "statement": "is(X, nice) :- is(X, blue), is(X, furry).",
        "description": "Blue, furry things are nice."
    },
    {
        "id": 11654,
        "statement": "sees(X, bald_eagle) :- is(X, red), sees(X, tiger).",
        "description": "If someone is red and they see the tiger then they see the bald eagle."
    },
    {
        "id": 11655,
        "statement": "is(tiger, red) :- eats(tiger, rabbit).",
        "description": "If the tiger eats the rabbit then the tiger is red."
    },
    {
        "id": 11656,
        "statement": "sees(bald_eagle, tiger) :- visits(X, bald_eagle), is(bald_eagle, round).",
        "description": "If someone visits the bald eagle and the bald eagle is round then the bald eagle sees the tiger."
    },
    {
        "id": 11657,
        "statement": "eats(rabbit, tiger) :- sees(X, rabbit), is(X, red).",
        "description": "If someone sees the rabbit and they are red then the rabbit eats the tiger."
    },
    {
        "id": 11658,
        "statement": "eats(lion, tiger) :- eats(X, lion), is(lion, kind).",
        "description": "If someone eats the lion and the lion is kind then the lion eats the tiger."
    },
    {
        "id": 11659,
        "statement": "is(bald_eagle, round) :- is(tiger, rough), sees(tiger, bald_eagle).",
        "description": "If the tiger is rough and the tiger sees the bald eagle then the bald eagle is round."
    },
    {
        "id": 11660,
        "statement": "likes(tiger, squirrel) :- likes(X, tiger), is(X, rough).",
        "description": "If someone likes the tiger and they are rough then the tiger likes the squirrel."
    },
    {
        "id": 11661,
        "statement": "is(bear, young) :- sees(X, bear).",
        "description": "If someone sees the bear then the bear is young."
    },
    {
        "id": 11662,
        "statement": "is(bear, big) :- visits(bear, squirrel).",
        "description": "If the bear visits the squirrel then the bear is big."
    },
    {
        "id": 11663,
        "statement": "visits(X, tiger) :- sees(X, dog).",
        "description": "If someone sees the dog then they visit the tiger."
    },
    {
        "id": 11664,
        "statement": "likes(dog, tiger) :- is(dog, young).",
        "description": "If the dog is young then the dog likes the tiger."
    },
    {
        "id": 11665,
        "statement": "sees(X, squirrel) :- is(X, round), is(X, kind).",
        "description": "If someone is round and kind then they see the squirrel."
    },
    {
        "id": 11666,
        "statement": "is(bear, round) :- likes(tiger, squirrel), visits(tiger, bear).",
        "description": "If the tiger likes the squirrel and the tiger visits the bear then the bear is round."
    },
    {
        "id": 11667,
        "statement": "sees(X, dog) :- sees(X, squirrel), not is(X, rough).",
        "description": "If someone sees the squirrel and they are not rough then they see the dog."
    },
    {
        "id": 11668,
        "statement": "is(X, blue) :- is(X, green), is(X, nice).",
        "description": "Green, nice people are blue."
    },
    {
        "id": 11669,
        "statement": "is(X, green) :- is(X, nice), is(X, quiet).",
        "description": "If someone is nice and quiet then they are green."
    },
    {
        "id": 11670,
        "statement": "is(fiona, blue) :- is(fiona, furry).",
        "description": "If Fiona is furry then Fiona is blue."
    },
    {
        "id": 11671,
        "statement": "is(X, furry) :- is(X, quiet), is(X, blue).",
        "description": "If someone is quiet and blue then they are furry."
    },
    {
        "id": 11672,
        "statement": "is(mouse, blue) :- visits(mouse, rabbit), sees(rabbit, bear).",
        "description": "If the mouse visits the rabbit and the rabbit sees the bear then the mouse is blue."
    },
    {
        "id": 11673,
        "statement": "is(X, green) :- is(X, blue), sees(X, rabbit).",
        "description": "If someone is blue and they see the rabbit then they are green."
    },
    {
        "id": 11674,
        "statement": "is(X, cold) :- sees(X, bald_eagle).",
        "description": "If someone sees the bald eagle then they are cold."
    },
    {
        "id": 11675,
        "statement": "needs(rabbit, bald_eagle) :- sees(X, rabbit).",
        "description": "If someone sees the rabbit then the rabbit needs the bald eagle."
    },
    {
        "id": 11676,
        "statement": "needs(rabbit, bear) :- sees(X, rabbit), needs(rabbit, bald_eagle).",
        "description": "If someone sees the rabbit and the rabbit needs the bald eagle then the rabbit needs the bear."
    },
    {
        "id": 11677,
        "statement": "is(X, rough) :- sees(X, mouse), sees(mouse, bear).",
        "description": "If someone sees the mouse and the mouse sees the bear then they are rough."
    },
    {
        "id": 11678,
        "statement": "likes(X, cow) :- likes(X, bear).",
        "description": "If something likes the bear then it likes the cow."
    },
    {
        "id": 11679,
        "statement": "likes(X, bear) :- is(X, big).",
        "description": "If something is big then it likes the bear."
    },
    {
        "id": 11680,
        "statement": "is(X, green) :- likes(X, tiger).",
        "description": "If something likes the tiger then it is green."
    },
    {
        "id": 11681,
        "statement": "is(cow, big) :- likes(tiger, cow).",
        "description": "If the tiger likes the cow then the cow is big."
    },
    {
        "id": 11682,
        "statement": "chases(tiger, bald_eagle) :- likes(X, tiger), needs(tiger, bald_eagle).",
        "description": "If something likes the tiger and the tiger needs the bald eagle then the tiger chases the bald eagle."
    },
    {
        "id": 11683,
        "statement": "visits(cow, bear) :- sees(X, cow).",
        "description": "If something sees the cow then the cow visits the bear."
    },
    {
        "id": 11684,
        "statement": "likes(X, bald_eagle) :- is(X, kind), visits(X, bald_eagle).",
        "description": "If something is kind and it visits the bald eagle then it likes the bald eagle."
    },
    {
        "id": 11685,
        "statement": "is(bald_eagle, young) :- sees(X, bear), visits(X, bald_eagle).",
        "description": "If something sees the bear and it visits the bald eagle then the bald eagle is young."
    },
    {
        "id": 11686,
        "statement": "sees(X, cow) :- likes(X, bald_eagle).",
        "description": "If something likes the bald eagle then it sees the cow."
    },
    {
        "id": 11687,
        "statement": "visits(cat, tiger) :- needs(tiger, cat).",
        "description": "If the tiger needs the cat then the cat visits the tiger."
    },
    {
        "id": 11688,
        "statement": "needs(X, rabbit) :- needs(X, tiger).",
        "description": "If someone needs the tiger then they need the rabbit."
    },
    {
        "id": 11689,
        "statement": "needs(cow, cat) :- eats(X, cow), not is(X, green).",
        "description": "If someone eats the cow and they are not green then the cow needs the cat."
    },
    {
        "id": 11690,
        "statement": "eats(X, rabbit) :- eats(X, tiger).",
        "description": "If someone eats the tiger then they eat the rabbit."
    },
    {
        "id": 11691,
        "statement": "needs(X, cat) :- eats(X, rabbit).",
        "description": "If someone eats the rabbit then they need the cat."
    },
    {
        "id": 11692,
        "statement": "needs(cat, tiger) :- eats(X, rabbit), eats(rabbit, cat).",
        "description": "If someone eats the rabbit and the rabbit eats the cat then the cat needs the tiger."
    },
    {
        "id": 11693,
        "statement": "eats(cat, tiger) :- needs(cow, cat).",
        "description": "If the cow needs the cat then the cat eats the tiger."
    },
    {
        "id": 11694,
        "statement": "is(harry, young) :- is(harry, rough).",
        "description": "If Harry is rough then Harry is young."
    },
    {
        "id": 11695,
        "statement": "is(fiona, smart) :- is(fiona, rough), not is(fiona, white).",
        "description": "If Fiona is rough and Fiona is not white then Fiona is smart."
    },
    {
        "id": 11696,
        "statement": "is(harry, quiet) :- is(harry, red), not is(harry, smart).",
        "description": "If Harry is red and Harry is not smart then Harry is quiet."
    },
    {
        "id": 11697,
        "statement": "is(X, red) :- sees(X, squirrel).",
        "description": "If something sees the squirrel then it is red."
    },
    {
        "id": 11698,
        "statement": "needs(X, lion) :- needs(X, squirrel).",
        "description": "If something needs the squirrel then it needs the lion."
    },
    {
        "id": 11699,
        "statement": "is(squirrel, red) :- chases(cow, mouse), needs(mouse, squirrel).",
        "description": "If the cow chases the mouse and the mouse needs the squirrel then the squirrel is red."
    },
    {
        "id": 11700,
        "statement": "is(X, kind) :- needs(X, mouse).",
        "description": "If something needs the mouse then it is kind."
    },
    {
        "id": 11701,
        "statement": "needs(X, squirrel) :- is(X, red).",
        "description": "If something is red then it needs the squirrel."
    },
    {
        "id": 11702,
        "statement": "chases(mouse, lion) :- chases(mouse, squirrel).",
        "description": "If the mouse chases the squirrel then the mouse chases the lion."
    },
    {
        "id": 11703,
        "statement": "sees(mouse, squirrel) :- sees(X, mouse), is(X, blue).",
        "description": "If something sees the mouse and it is blue then the mouse sees the squirrel."
    },
    {
        "id": 11704,
        "statement": "chases(X, mouse) :- needs(X, squirrel).",
        "description": "If something needs the squirrel then it chases the mouse."
    },
    {
        "id": 11705,
        "statement": "is(X, smart) :- is(X, white), is(X, nice).",
        "description": "White, nice things are smart."
    },
    {
        "id": 11706,
        "statement": "is(X, young) :- is(X, quiet), is(X, white).",
        "description": "If something is quiet and white then it is young."
    },
    {
        "id": 11707,
        "statement": "is(cow, cold) :- chases(cow, tiger).",
        "description": "If the cow chases the tiger then the cow is cold."
    },
    {
        "id": 11708,
        "statement": "eats(cow, lion) :- eats(X, cow), chases(cow, bald_eagle).",
        "description": "If someone eats the cow and the cow chases the bald eagle then the cow eats the lion."
    },
    {
        "id": 11709,
        "statement": "sees(lion, cow) :- eats(X, lion), eats(lion, bald_eagle).",
        "description": "If someone eats the lion and the lion eats the bald eagle then the lion sees the cow."
    },
    {
        "id": 11710,
        "statement": "eats(X, cow) :- is(X, round), is(X, big).",
        "description": "If someone is round and big then they eat the cow."
    },
    {
        "id": 11711,
        "statement": "chases(cow, bald_eagle) :- eats(X, cow).",
        "description": "If someone eats the cow then the cow chases the bald eagle."
    },
    {
        "id": 11712,
        "statement": "sees(X, cow) :- is(X, young), is(X, cold).",
        "description": "If someone is young and cold then they see the cow."
    },
    {
        "id": 11713,
        "statement": "chases(X, tiger) :- eats(X, lion), is(X, big).",
        "description": "If someone eats the lion and they are big then they chase the tiger."
    },
    {
        "id": 11714,
        "statement": "is(gary, big) :- is(gary, white), is(gary, smart).",
        "description": "If Gary is white and Gary is smart then Gary is big."
    },
    {
        "id": 11715,
        "statement": "is(X, young) :- is(X, white), is(X, red).",
        "description": "White, red things are young."
    },
    {
        "id": 11716,
        "statement": "is(fiona, rough) :- is(fiona, red).",
        "description": "If Fiona is red then Fiona is rough."
    },
    {
        "id": 11717,
        "statement": "is(X, young) :- is(X, rough), is(X, green).",
        "description": "Rough, green things are young."
    },
    {
        "id": 11718,
        "statement": "is(gary, red) :- is(gary, rough).",
        "description": "If Gary is rough then Gary is red."
    },
    {
        "id": 11719,
        "statement": "is(gary, rough) :- is(gary, green), is(gary, red).",
        "description": "If Gary is green and Gary is red then Gary is rough."
    },
    {
        "id": 11720,
        "statement": "is(X, smart) :- is(X, white), is(X, red).",
        "description": "White, red things are smart."
    },
    {
        "id": 11721,
        "statement": "is(gary, big) :- is(gary, smart), is(gary, young).",
        "description": "If Gary is smart and Gary is young then Gary is big."
    },
    {
        "id": 11722,
        "statement": "is(X, blue) :- is(X, cold), is(X, furry).",
        "description": "All cold, furry people are blue."
    },
    {
        "id": 11723,
        "statement": "is(X, rough) :- is(X, quiet), not is(X, furry).",
        "description": "If someone is quiet and not furry then they are rough."
    },
    {
        "id": 11724,
        "statement": "is(X, cold) :- is(X, rough), not is(X, furry).",
        "description": "If someone is rough and not furry then they are cold."
    },
    {
        "id": 11725,
        "statement": "is(anne, red) :- is(anne, smart).",
        "description": "If Anne is smart then Anne is red."
    },
    {
        "id": 11726,
        "statement": "needs(dog, squirrel) :- eats(X, dog), eats(X, cat).",
        "description": "If someone eats the dog and they eat the cat then the dog needs the squirrel."
    },
    {
        "id": 11727,
        "statement": "is(X, kind) :- likes(X, dog).",
        "description": "If someone likes the dog then they are kind."
    },
    {
        "id": 11728,
        "statement": "eats(lion, dog) :- likes(X, lion).",
        "description": "If someone likes the lion then the lion eats the dog."
    },
    {
        "id": 11729,
        "statement": "is(X, big) :- is(X, cold), is(X, nice).",
        "description": "All cold, nice people are big."
    },
    {
        "id": 11730,
        "statement": "needs(lion, cat) :- likes(X, lion), is(lion, big).",
        "description": "If someone likes the lion and the lion is big then the lion needs the cat."
    },
    {
        "id": 11731,
        "statement": "needs(X, squirrel) :- is(X, rough).",
        "description": "If someone is rough then they need the squirrel."
    },
    {
        "id": 11732,
        "statement": "eats(dog, lion) :- is(X, cold), eats(X, dog).",
        "description": "If someone is cold and they eat the dog then the dog eats the lion."
    },
    {
        "id": 11733,
        "statement": "is(erin, kind) :- is(erin, quiet), is(erin, big).",
        "description": "If Erin is quiet and Erin is big then Erin is kind."
    },
    {
        "id": 11734,
        "statement": "is(X, rough) :- is(X, green), not is(X, round).",
        "description": "If something is green and not round then it is rough."
    },
    {
        "id": 11735,
        "statement": "is(X, rough) :- is(X, kind), not is(X, green).",
        "description": "If something is kind and not green then it is rough."
    },
    {
        "id": 11736,
        "statement": "chases(rabbit, cat) :- chases(X, rabbit).",
        "description": "If someone chases the rabbit then the rabbit chases the cat."
    },
    {
        "id": 11737,
        "statement": "likes(rabbit, cat) :- chases(X, squirrel), chases(squirrel, rabbit).",
        "description": "If someone chases the squirrel and the squirrel chases the rabbit then the rabbit likes the cat."
    },
    {
        "id": 11738,
        "statement": "likes(X, squirrel) :- chases(X, rabbit), not is(X, nice).",
        "description": "If someone chases the rabbit and they are not nice then they like the squirrel."
    },
    {
        "id": 11739,
        "statement": "is(X, cold) :- likes(X, rabbit).",
        "description": "If someone likes the rabbit then they are cold."
    },
    {
        "id": 11740,
        "statement": "likes(cat, rabbit) :- visits(X, cat), is(X, blue).",
        "description": "If someone visits the cat and they are blue then the cat likes the rabbit."
    },
    {
        "id": 11741,
        "statement": "chases(X, bald_eagle) :- visits(X, cat).",
        "description": "If someone visits the cat then they chase the bald eagle."
    },
    {
        "id": 11742,
        "statement": "likes(X, cat) :- is(X, big), is(X, nice).",
        "description": "If someone is big and nice then they like the cat."
    },
    {
        "id": 11743,
        "statement": "likes(cat, bald_eagle) :- is(cat, cold).",
        "description": "If the cat is cold then the cat likes the bald eagle."
    },
    {
        "id": 11744,
        "statement": "is(X, cold) :- is(X, rough), chases(X, dog).",
        "description": "If something is rough and it chases the dog then it is cold."
    },
    {
        "id": 11745,
        "statement": "sees(X, cat) :- chases(X, cow).",
        "description": "If something chases the cow then it sees the cat."
    },
    {
        "id": 11746,
        "statement": "is(X, rough) :- is(X, blue), likes(X, cow).",
        "description": "If something is blue and it likes the cow then it is rough."
    },
    {
        "id": 11747,
        "statement": "chases(cat, cow) :- sees(X, cat).",
        "description": "If something sees the cat then the cat chases the cow."
    },
    {
        "id": 11748,
        "statement": "chases(cat, dog) :- likes(X, cat), likes(X, cow).",
        "description": "If something likes the cat and it likes the cow then the cat chases the dog."
    },
    {
        "id": 11749,
        "statement": "is(X, green) :- sees(X, cat), not is(X, rough).",
        "description": "If something sees the cat and it is not rough then it is green."
    },
    {
        "id": 11750,
        "statement": "likes(X, dog) :- sees(X, tiger).",
        "description": "If something sees the tiger then it likes the dog."
    },
    {
        "id": 11751,
        "statement": "sees(X, tiger) :- is(X, green), is(X, cold).",
        "description": "If something is green and cold then it sees the tiger."
    },
    {
        "id": 11752,
        "statement": "sees(dog, tiger) :- is(dog, green).",
        "description": "If the dog is green then the dog sees the tiger."
    },
    {
        "id": 11753,
        "statement": "is(X, blue) :- is(X, cold), is(X, quiet).",
        "description": "Cold, quiet things are blue."
    },
    {
        "id": 11754,
        "statement": "is(X, white) :- is(X, nice), is(X, blue).",
        "description": "If something is nice and blue then it is white."
    },
    {
        "id": 11755,
        "statement": "visits(X, mouse) :- sees(X, bald_eagle).",
        "description": "If someone sees the bald eagle then they visit the mouse."
    },
    {
        "id": 11756,
        "statement": "sees(bear, bald_eagle) :- sees(X, bear).",
        "description": "If someone sees the bear then the bear sees the bald eagle."
    },
    {
        "id": 11757,
        "statement": "sees(mouse, bear) :- visits(X, mouse).",
        "description": "If someone visits the mouse then the mouse sees the bear."
    },
    {
        "id": 11758,
        "statement": "is(tiger, young) :- is(X, green), sees(X, tiger).",
        "description": "If someone is green and they see the tiger then the tiger is young."
    },
    {
        "id": 11759,
        "statement": "chases(tiger, mouse) :- chases(mouse, tiger), sees(mouse, bear).",
        "description": "If the mouse chases the tiger and the mouse sees the bear then the tiger chases the mouse."
    },
    {
        "id": 11760,
        "statement": "chases(mouse, tiger) :- visits(X, mouse).",
        "description": "If someone visits the mouse then the mouse chases the tiger."
    },
    {
        "id": 11761,
        "statement": "sees(bald_eagle, mouse) :- is(tiger, green), visits(tiger, bald_eagle).",
        "description": "If the tiger is green and the tiger visits the bald eagle then the bald eagle sees the mouse."
    },
    {
        "id": 11762,
        "statement": "is(tiger, big) :- sees(bear, tiger), is(bear, big).",
        "description": "If the bear sees the tiger and the bear is big then the tiger is big."
    },
    {
        "id": 11763,
        "statement": "is(X, big) :- chases(X, cat), is(cat, nice).",
        "description": "If something chases the cat and the cat is nice then it is big."
    },
    {
        "id": 11764,
        "statement": "visits(dog, bear) :- visits(dog, squirrel).",
        "description": "If the dog visits the squirrel then the dog visits the bear."
    },
    {
        "id": 11765,
        "statement": "is(cat, big) :- likes(cat, bear).",
        "description": "If the cat likes the bear then the cat is big."
    },
    {
        "id": 11766,
        "statement": "visits(X, bear) :- visits(X, squirrel).",
        "description": "If something visits the squirrel then it visits the bear."
    },
    {
        "id": 11767,
        "statement": "chases(X, squirrel) :- likes(X, squirrel).",
        "description": "If something likes the squirrel then it chases the squirrel."
    },
    {
        "id": 11768,
        "statement": "is(erin, blue) :- is(erin, young), is(erin, nice).",
        "description": "If Erin is young and Erin is nice then Erin is blue."
    },
    {
        "id": 11769,
        "statement": "is(charlie, blue) :- is(charlie, young), is(charlie, rough).",
        "description": "If Charlie is young and Charlie is rough then Charlie is blue."
    },
    {
        "id": 11770,
        "statement": "is(charlie, furry) :- is(charlie, young), is(charlie, blue).",
        "description": "If Charlie is young and Charlie is blue then Charlie is furry."
    },
    {
        "id": 11771,
        "statement": "is(anne, round) :- not is(anne, rough).",
        "description": "If Anne is not rough then Anne is round."
    },
    {
        "id": 11772,
        "statement": "is(X, rough) :- is(X, smart), is(X, big).",
        "description": "All smart, big things are rough."
    },
    {
        "id": 11773,
        "statement": "is(X, big) :- is(X, kind), is(X, white).",
        "description": "Kind, white things are big."
    },
    {
        "id": 11774,
        "statement": "is(X, green) :- is(X, white).",
        "description": "All white things are green."
    },
    {
        "id": 11775,
        "statement": "is(X, kind) :- is(X, white), is(X, big).",
        "description": "All white, big things are kind."
    },
    {
        "id": 11776,
        "statement": "is(X, big) :- is(X, white), is(X, green).",
        "description": "All white, green things are big."
    },
    {
        "id": 11777,
        "statement": "is(X, young) :- is(X, green), is(X, white).",
        "description": "If something is green and white then it is young."
    },
    {
        "id": 11778,
        "statement": "is(X, smart) :- is(X, kind), is(X, white).",
        "description": "If something is kind and white then it is smart."
    },
    {
        "id": 11779,
        "statement": "visits(X, cow) :- is(X, kind), needs(X, cat).",
        "description": "If someone is kind and they need the cat then they visit the cow."
    },
    {
        "id": 11780,
        "statement": "visits(X, cat) :- is(X, rough).",
        "description": "If someone is rough then they visit the cat."
    },
    {
        "id": 11781,
        "statement": "is(cat, kind) :- needs(X, cat).",
        "description": "If someone needs the cat then the cat is kind."
    },
    {
        "id": 11782,
        "statement": "is(X, kind) :- is(X, rough), not is(X, young).",
        "description": "If someone is rough and not young then they are kind."
    },
    {
        "id": 11783,
        "statement": "eats(cat, mouse) :- eats(X, cat).",
        "description": "If someone eats the cat then the cat eats the mouse."
    },
    {
        "id": 11784,
        "statement": "visits(cat, mouse) :- eats(cow, cat).",
        "description": "If the cow eats the cat then the cat visits the mouse."
    },
    {
        "id": 11785,
        "statement": "is(cat, red) :- eats(X, cat).",
        "description": "If someone eats the cat then the cat is red."
    },
    {
        "id": 11786,
        "statement": "is(X, blue) :- is(X, rough), is(X, nice).",
        "description": "Rough, nice people are blue."
    },
    {
        "id": 11787,
        "statement": "is(charlie, red) :- is(charlie, nice), is(charlie, blue).",
        "description": "If Charlie is nice and Charlie is blue then Charlie is red."
    },
    {
        "id": 11788,
        "statement": "needs(X, cow) :- is(X, round).",
        "description": "If someone is round then they need the cow."
    },
    {
        "id": 11789,
        "statement": "sees(bald_eagle, cow) :- sees(bald_eagle, lion), is(bald_eagle, red).",
        "description": "If the bald eagle sees the lion and the bald eagle is red then the bald eagle sees the cow."
    },
    {
        "id": 11790,
        "statement": "needs(X, cow) :- is(X, young).",
        "description": "If someone is young then they need the cow."
    },
    {
        "id": 11791,
        "statement": "sees(X, bald_eagle) :- is(X, round).",
        "description": "If someone is round then they see the bald eagle."
    },
    {
        "id": 11792,
        "statement": "chases(X, lion) :- needs(X, bald_eagle), sees(bald_eagle, lion).",
        "description": "If someone needs the bald eagle and the bald eagle sees the lion then they chase the lion."
    },
    {
        "id": 11793,
        "statement": "is(bald_eagle, round) :- chases(cow, mouse), needs(cow, bald_eagle).",
        "description": "If the cow chases the mouse and the cow needs the bald eagle then the bald eagle is round."
    },
    {
        "id": 11794,
        "statement": "is(X, round) :- is(X, young), is(X, green).",
        "description": "All young, green things are round."
    },
    {
        "id": 11795,
        "statement": "is(X, green) :- is(X, smart), is(X, white).",
        "description": "If something is smart and white then it is green."
    },
    {
        "id": 11796,
        "statement": "is(gary, quiet) :- is(gary, cold), is(gary, green).",
        "description": "If Gary is cold and Gary is green then Gary is quiet."
    },
    {
        "id": 11797,
        "statement": "is(X, smart) :- is(X, round), is(X, white).",
        "description": "Round, white things are smart."
    },
    {
        "id": 11798,
        "statement": "is(harry, smart) :- is(harry, cold), is(harry, young).",
        "description": "If Harry is cold and Harry is young then Harry is smart."
    },
    {
        "id": 11799,
        "statement": "needs(X, cat) :- is(X, nice).",
        "description": "If someone is nice then they need the cat."
    },
    {
        "id": 11800,
        "statement": "needs(dog, cow) :- visits(X, dog).",
        "description": "If someone visits the dog then the dog needs the cow."
    },
    {
        "id": 11801,
        "statement": "needs(cow, squirrel) :- eats(squirrel, cow), not needs(squirrel, cow).",
        "description": "If the squirrel eats the cow and the squirrel does not need the cow then the cow needs the squirrel."
    },
    {
        "id": 11802,
        "statement": "eats(dog, squirrel) :- visits(dog, cow), is(cow, nice).",
        "description": "If the dog visits the cow and the cow is nice then the dog eats the squirrel."
    },
    {
        "id": 11803,
        "statement": "eats(cat, squirrel) :- needs(X, cat).",
        "description": "If someone needs the cat then the cat eats the squirrel."
    },
    {
        "id": 11804,
        "statement": "is(squirrel, blue) :- eats(X, squirrel).",
        "description": "If someone eats the squirrel then the squirrel is blue."
    },
    {
        "id": 11805,
        "statement": "needs(X, dog) :- is(X, nice), not is(X, blue).",
        "description": "If someone is nice and not blue then they need the dog."
    },
    {
        "id": 11806,
        "statement": "is(X, round) :- is(X, green), is(X, rough).",
        "description": "If something is green and rough then it is round."
    },
    {
        "id": 11807,
        "statement": "is(X, blue) :- is(X, round), is(X, smart).",
        "description": "If something is round and smart then it is blue."
    },
    {
        "id": 11808,
        "statement": "is(X, rough) :- is(X, white), is(X, nice).",
        "description": "All white, nice people are rough."
    },
    {
        "id": 11809,
        "statement": "is(X, smart) :- is(X, kind), is(X, white).",
        "description": "All kind, white people are smart."
    },
    {
        "id": 11810,
        "statement": "is(dave, furry) :- is(dave, white), is(dave, smart).",
        "description": "If Dave is white and Dave is smart then Dave is furry."
    },
    {
        "id": 11811,
        "statement": "chases(X, bear) :- visits(X, dog).",
        "description": "If someone visits the dog then they chase the bear."
    },
    {
        "id": 11812,
        "statement": "visits(mouse, dog) :- chases(X, mouse).",
        "description": "If someone chases the mouse then the mouse visits the dog."
    },
    {
        "id": 11813,
        "statement": "chases(dog, mouse) :- visits(X, dog).",
        "description": "If someone visits the dog then the dog chases the mouse."
    },
    {
        "id": 11814,
        "statement": "visits(X, dog) :- is(X, rough), chases(X, mouse).",
        "description": "If someone is rough and they chase the mouse then they visit the dog."
    },
    {
        "id": 11815,
        "statement": "visits(dog, bear) :- visits(X, dog).",
        "description": "If someone visits the dog then the dog visits the bear."
    },
    {
        "id": 11816,
        "statement": "eats(cow, bear) :- is(rabbit, blue), not likes(cow, rabbit).",
        "description": "If the rabbit is blue and the cow does not like the rabbit then the cow eats the bear."
    },
    {
        "id": 11817,
        "statement": "likes(bear, rabbit) :- eats(X, bear).",
        "description": "If someone eats the bear then the bear likes the rabbit."
    },
    {
        "id": 11818,
        "statement": "is(cat, red) :- visits(X, cat).",
        "description": "If someone visits the cat then the cat is red."
    },
    {
        "id": 11819,
        "statement": "likes(rabbit, cat) :- eats(rabbit, cat).",
        "description": "If the rabbit eats the cat then the rabbit likes the cat."
    },
    {
        "id": 11820,
        "statement": "is(bear, red) :- eats(X, bear).",
        "description": "If someone eats the bear then the bear is red."
    },
    {
        "id": 11821,
        "statement": "is(rabbit, green) :- likes(X, rabbit), not likes(X, bear).",
        "description": "If someone likes the rabbit and they do not like the bear then the rabbit is green."
    },
    {
        "id": 11822,
        "statement": "is(X, rough) :- is(X, round), is(X, cold).",
        "description": "If someone is round and cold then they are rough."
    },
    {
        "id": 11823,
        "statement": "is(X, rough) :- is(X, quiet), is(X, green).",
        "description": "If someone is quiet and green then they are rough."
    },
    {
        "id": 11824,
        "statement": "is(fiona, white) :- is(fiona, rough), is(fiona, red).",
        "description": "If Fiona is rough and Fiona is red then Fiona is white."
    },
    {
        "id": 11825,
        "statement": "is(gary, red) :- is(gary, quiet), is(gary, round).",
        "description": "If Gary is quiet and Gary is round then Gary is red."
    },
    {
        "id": 11826,
        "statement": "is(X, kind) :- is(X, nice), is(X, quiet).",
        "description": "All nice, quiet things are kind."
    },
    {
        "id": 11827,
        "statement": "is(fiona, kind) :- is(fiona, white), is(fiona, rough).",
        "description": "If Fiona is white and Fiona is rough then Fiona is kind."
    },
    {
        "id": 11828,
        "statement": "chases(X, lion) :- is(X, young).",
        "description": "If someone is young then they chase the lion."
    },
    {
        "id": 11829,
        "statement": "chases(X, squirrel) :- needs(X, cow).",
        "description": "If someone needs the cow then they chase the squirrel."
    },
    {
        "id": 11830,
        "statement": "chases(X, bald_eagle) :- chases(X, cow), is(X, green).",
        "description": "If someone chases the cow and they are green then they chase the bald eagle."
    },
    {
        "id": 11831,
        "statement": "chases(X, cow) :- chases(X, lion).",
        "description": "If someone chases the lion then they chase the cow."
    },
    {
        "id": 11832,
        "statement": "chases(X, cow) :- likes(X, squirrel), chases(squirrel, cow).",
        "description": "If someone likes the squirrel and the squirrel chases the cow then they chase the cow."
    },
    {
        "id": 11833,
        "statement": "needs(X, bald_eagle) :- chases(X, lion), is(lion, green).",
        "description": "If someone chases the lion and the lion is green then they need the bald eagle."
    },
    {
        "id": 11834,
        "statement": "is(squirrel, young) :- needs(X, squirrel).",
        "description": "If someone needs the squirrel then the squirrel is young."
    },
    {
        "id": 11835,
        "statement": "is(bald_eagle, green) :- needs(bald_eagle, squirrel), needs(bald_eagle, cow).",
        "description": "If the bald eagle needs the squirrel and the bald eagle needs the cow then the bald eagle is green."
    },
    {
        "id": 11836,
        "statement": "chases(bald_eagle, cow) :- likes(X, bald_eagle), is(X, young).",
        "description": "If someone likes the bald eagle and they are young then the bald eagle chases the cow."
    },
    {
        "id": 11837,
        "statement": "needs(bear, tiger) :- needs(X, bear).",
        "description": "If something needs the bear then the bear needs the tiger."
    },
    {
        "id": 11838,
        "statement": "chases(X, tiger) :- sees(X, bear), is(X, young).",
        "description": "If something sees the bear and it is young then it chases the tiger."
    },
    {
        "id": 11839,
        "statement": "is(dog, red) :- chases(tiger, dog).",
        "description": "If the tiger chases the dog then the dog is red."
    },
    {
        "id": 11840,
        "statement": "sees(X, bear) :- is(X, nice), not needs(X, bear).",
        "description": "If something is nice and it does not need the bear then it sees the bear."
    },
    {
        "id": 11841,
        "statement": "needs(X, dog) :- sees(X, bear), not is(X, young).",
        "description": "If something sees the bear and it is not young then it needs the dog."
    },
    {
        "id": 11842,
        "statement": "sees(tiger, bear) :- needs(X, dog), sees(dog, tiger).",
        "description": "If something needs the dog and the dog sees the tiger then the tiger sees the bear."
    },
    {
        "id": 11843,
        "statement": "is(dog, nice) :- chases(X, tiger), not sees(X, dog).",
        "description": "If something chases the tiger and it does not see the dog then the dog is nice."
    },
    {
        "id": 11844,
        "statement": "is(gary, young) :- is(gary, green), is(gary, blue).",
        "description": "If Gary is green and Gary is blue then Gary is young."
    },
    {
        "id": 11845,
        "statement": "is(X, smart) :- is(X, red), is(X, young).",
        "description": "All red, young things are smart."
    },
    {
        "id": 11846,
        "statement": "is(X, green) :- is(X, furry), is(X, young).",
        "description": "Furry, young things are green."
    },
    {
        "id": 11847,
        "statement": "is(X, smart) :- is(X, white), is(X, kind).",
        "description": "If someone is white and kind then they are smart."
    },
    {
        "id": 11848,
        "statement": "is(X, smart) :- is(X, kind).",
        "description": "Kind people are smart."
    },
    {
        "id": 11849,
        "statement": "is(X, green) :- is(X, cold), is(X, smart).",
        "description": "If someone is cold and smart then they are green."
    },
    {
        "id": 11850,
        "statement": "is(anne, white) :- is(anne, round).",
        "description": "If Anne is round then Anne is white."
    },
    {
        "id": 11851,
        "statement": "is(X, rough) :- is(X, round), is(X, green).",
        "description": "All round, green people are rough."
    },
    {
        "id": 11852,
        "statement": "eats(rabbit, cow) :- is(rabbit, round), eats(rabbit, dog).",
        "description": "If the rabbit is round and the rabbit eats the dog then the rabbit eats the cow."
    },
    {
        "id": 11853,
        "statement": "is(dog, cold) :- is(X, young), chases(X, dog).",
        "description": "If something is young and it chases the dog then the dog is cold."
    },
    {
        "id": 11854,
        "statement": "is(X, young) :- sees(X, tiger).",
        "description": "If something sees the tiger then it is young."
    },
    {
        "id": 11855,
        "statement": "chases(dog, rabbit) :- chases(X, dog), is(X, cold).",
        "description": "If something chases the dog and it is cold then the dog chases the rabbit."
    },
    {
        "id": 11856,
        "statement": "sees(tiger, rabbit) :- eats(tiger, rabbit), sees(rabbit, dog).",
        "description": "If the tiger eats the rabbit and the rabbit sees the dog then the tiger sees the rabbit."
    },
    {
        "id": 11857,
        "statement": "is(rabbit, young) :- chases(X, rabbit).",
        "description": "If something chases the rabbit then the rabbit is young."
    },
    {
        "id": 11858,
        "statement": "is(X, green) :- is(X, nice), is(X, blue).",
        "description": "If something is nice and blue then it is green."
    },
    {
        "id": 11859,
        "statement": "is(X, smart) :- is(X, young), is(X, blue).",
        "description": "If something is young and blue then it is smart."
    },
    {
        "id": 11860,
        "statement": "is(X, blue) :- is(X, cold), not is(X, rough).",
        "description": "If something is cold and not rough then it is blue."
    },
    {
        "id": 11861,
        "statement": "eats(cat, squirrel) :- visits(X, cow), visits(cow, cat).",
        "description": "If someone visits the cow and the cow visits the cat then the cat eats the squirrel."
    },
    {
        "id": 11862,
        "statement": "sees(X, squirrel) :- visits(X, squirrel), eats(squirrel, cat).",
        "description": "If someone visits the squirrel and the squirrel eats the cat then they see the squirrel."
    },
    {
        "id": 11863,
        "statement": "eats(cat, cow) :- visits(squirrel, cat).",
        "description": "If the squirrel visits the cat then the cat eats the cow."
    },
    {
        "id": 11864,
        "statement": "eats(X, dog) :- is(X, blue), eats(X, cat).",
        "description": "If someone is blue and they eat the cat then they eat the dog."
    },
    {
        "id": 11865,
        "statement": "sees(X, dog) :- is(X, red), is(X, young).",
        "description": "If someone is red and young then they see the dog."
    },
    {
        "id": 11866,
        "statement": "sees(X, squirrel) :- sees(X, cow), visits(X, cat).",
        "description": "If someone sees the cow and they visit the cat then they see the squirrel."
    },
    {
        "id": 11867,
        "statement": "sees(X, squirrel) :- is(X, big), eats(X, dog).",
        "description": "If someone is big and they eat the dog then they see the squirrel."
    },
    {
        "id": 11868,
        "statement": "visits(X, cat) :- eats(X, cow), is(cow, nice).",
        "description": "If someone eats the cow and the cow is nice then they visit the cat."
    },
    {
        "id": 11869,
        "statement": "is(cow, blue) :- needs(X, cow), is(X, rough).",
        "description": "If something needs the cow and it is rough then the cow is blue."
    },
    {
        "id": 11870,
        "statement": "is(lion, blue) :- is(X, blue), likes(X, lion).",
        "description": "If something is blue and it likes the lion then the lion is blue."
    },
    {
        "id": 11871,
        "statement": "eats(X, cow) :- is(X, blue).",
        "description": "If something is blue then it eats the cow."
    },
    {
        "id": 11872,
        "statement": "needs(dog, cow) :- needs(X, dog), is(X, kind).",
        "description": "If something needs the dog and it is kind then the dog needs the cow."
    },
    {
        "id": 11873,
        "statement": "needs(lion, bear) :- eats(X, dog), likes(dog, lion).",
        "description": "If something eats the dog and the dog likes the lion then the lion needs the bear."
    },
    {
        "id": 11874,
        "statement": "likes(X, lion) :- eats(X, cow).",
        "description": "If something eats the cow then it likes the lion."
    },
    {
        "id": 11875,
        "statement": "needs(X, lion) :- is(X, blue).",
        "description": "If something is blue then it needs the lion."
    },
    {
        "id": 11876,
        "statement": "is(charlie, quiet) :- is(charlie, red), is(charlie, young).",
        "description": "If Charlie is red and Charlie is young then Charlie is quiet."
    },
    {
        "id": 11877,
        "statement": "is(X, round) :- is(X, nice), is(X, young).",
        "description": "Nice, young people are round."
    },
    {
        "id": 11878,
        "statement": "is(charlie, red) :- is(charlie, round).",
        "description": "If Charlie is round then Charlie is red."
    },
    {
        "id": 11879,
        "statement": "is(X, round) :- is(X, red), is(X, cold).",
        "description": "All red, cold people are round."
    },
    {
        "id": 11880,
        "statement": "is(X, red) :- is(X, nice), is(X, quiet).",
        "description": "Nice, quiet people are red."
    },
    {
        "id": 11881,
        "statement": "is(X, furry) :- is(X, round), is(X, red).",
        "description": "Round, red people are furry."
    },
    {
        "id": 11882,
        "statement": "is(X, cold) :- is(X, white), is(X, green).",
        "description": "If someone is white and green then they are cold."
    },
    {
        "id": 11883,
        "statement": "is(X, green) :- is(X, red), is(X, young).",
        "description": "Red, young people are green."
    },
    {
        "id": 11884,
        "statement": "is(X, white) :- is(X, cold), is(X, red).",
        "description": "If someone is cold and red then they are white."
    },
    {
        "id": 11885,
        "statement": "is(X, young) :- is(X, red), is(X, rough).",
        "description": "Red, rough people are young."
    },
    {
        "id": 11886,
        "statement": "is(cat, rough) :- visits(cat, tiger), is(cat, round).",
        "description": "If the cat visits the tiger and the cat is round then the cat is rough."
    },
    {
        "id": 11887,
        "statement": "eats(squirrel, cat) :- eats(X, squirrel), eats(X, cat).",
        "description": "If something eats the squirrel and it eats the cat then the squirrel eats the cat."
    },
    {
        "id": 11888,
        "statement": "visits(X, squirrel) :- is(X, red).",
        "description": "If something is red then it visits the squirrel."
    },
    {
        "id": 11889,
        "statement": "needs(cat, squirrel) :- eats(cat, lion), is(cat, round).",
        "description": "If the cat eats the lion and the cat is round then the cat needs the squirrel."
    },
    {
        "id": 11890,
        "statement": "eats(squirrel, lion) :- visits(X, squirrel), visits(X, tiger).",
        "description": "If something visits the squirrel and it visits the tiger then the squirrel eats the lion."
    },
    {
        "id": 11891,
        "statement": "eats(X, lion) :- needs(X, tiger), eats(tiger, cat).",
        "description": "If something needs the tiger and the tiger eats the cat then it eats the lion."
    },
    {
        "id": 11892,
        "statement": "is(squirrel, round) :- visits(X, squirrel).",
        "description": "If something visits the squirrel then the squirrel is round."
    },
    {
        "id": 11893,
        "statement": "is(X, furry) :- is(X, nice), is(X, white).",
        "description": "If something is nice and white then it is furry."
    },
    {
        "id": 11894,
        "statement": "is(X, furry) :- is(X, red).",
        "description": "If something is red then it is furry."
    },
    {
        "id": 11895,
        "statement": "is(X, quiet) :- is(X, white), is(X, red).",
        "description": "White, red things are quiet."
    },
    {
        "id": 11896,
        "statement": "is(X, quiet) :- is(X, big), is(X, nice).",
        "description": "Big, nice things are quiet."
    },
    {
        "id": 11897,
        "statement": "is(X, white) :- is(X, quiet), not is(X, big).",
        "description": "If something is quiet and not big then it is white."
    },
    {
        "id": 11898,
        "statement": "is(mouse, young) :- eats(X, tiger), chases(X, mouse).",
        "description": "If something eats the tiger and it chases the mouse then the mouse is young."
    },
    {
        "id": 11899,
        "statement": "sees(X, mouse) :- sees(X, lion).",
        "description": "If something sees the lion then it sees the mouse."
    },
    {
        "id": 11900,
        "statement": "sees(X, lion) :- is(X, rough), not eats(X, tiger).",
        "description": "If something is rough and it does not eat the tiger then it sees the lion."
    },
    {
        "id": 11901,
        "statement": "sees(X, lion) :- is(X, young), chases(X, tiger).",
        "description": "If something is young and it chases the tiger then it sees the lion."
    },
    {
        "id": 11902,
        "statement": "chases(cat, tiger) :- eats(X, cat), not chases(X, mouse).",
        "description": "If something eats the cat and it does not chase the mouse then the cat chases the tiger."
    },
    {
        "id": 11903,
        "statement": "eats(X, mouse) :- eats(X, lion), not chases(lion, cat).",
        "description": "If something eats the lion and the lion does not chase the cat then it eats the mouse."
    },
    {
        "id": 11904,
        "statement": "is(mouse, rough) :- eats(mouse, cat), sees(cat, lion).",
        "description": "If the mouse eats the cat and the cat sees the lion then the mouse is rough."
    },
    {
        "id": 11905,
        "statement": "likes(X, tiger) :- eats(X, bear).",
        "description": "If someone eats the bear then they like the tiger."
    },
    {
        "id": 11906,
        "statement": "visits(bear, dog) :- eats(X, lion), visits(lion, bear).",
        "description": "If someone eats the lion and the lion visits the bear then the bear visits the dog."
    },
    {
        "id": 11907,
        "statement": "is(X, big) :- is(X, round), is(X, blue).",
        "description": "If someone is round and blue then they are big."
    },
    {
        "id": 11908,
        "statement": "likes(bear, tiger) :- visits(X, bear).",
        "description": "If someone visits the bear then the bear likes the tiger."
    },
    {
        "id": 11909,
        "statement": "likes(lion, bear) :- eats(bear, lion).",
        "description": "If the bear eats the lion then the lion likes the bear."
    },
    {
        "id": 11910,
        "statement": "eats(X, lion) :- likes(X, tiger).",
        "description": "If someone likes the tiger then they eat the lion."
    },
    {
        "id": 11911,
        "statement": "is(bear, round) :- eats(X, bear), eats(X, lion).",
        "description": "If someone eats the bear and they eat the lion then the bear is round."
    },
    {
        "id": 11912,
        "statement": "is(X, red) :- is(X, cold), is(X, furry).",
        "description": "If someone is cold and furry then they are red."
    },
    {
        "id": 11913,
        "statement": "is(X, furry) :- is(X, cold), is(X, red).",
        "description": "If someone is cold and red then they are furry."
    },
    {
        "id": 11914,
        "statement": "is(X, cold) :- is(X, kind), is(X, furry).",
        "description": "All kind, furry people are cold."
    },
    {
        "id": 11915,
        "statement": "is(charlie, kind) :- is(charlie, big).",
        "description": "If Charlie is big then Charlie is kind."
    },
    {
        "id": 11916,
        "statement": "is(X, quiet) :- is(X, cold), is(X, kind).",
        "description": "All cold, kind people are quiet."
    },
    {
        "id": 11917,
        "statement": "is(fiona, furry) :- is(fiona, big), is(fiona, red).",
        "description": "If Fiona is big and Fiona is red then Fiona is furry."
    },
    {
        "id": 11918,
        "statement": "is(X, cold) :- is(X, green), is(X, young).",
        "description": "Green, young people are cold."
    },
    {
        "id": 11919,
        "statement": "is(charlie, red) :- is(charlie, kind).",
        "description": "If Charlie is kind then Charlie is red."
    },
    {
        "id": 11920,
        "statement": "visits(X, tiger) :- visits(X, lion).",
        "description": "If something visits the lion then it visits the tiger."
    },
    {
        "id": 11921,
        "statement": "needs(tiger, squirrel) :- chases(X, lion), needs(X, tiger).",
        "description": "If something chases the lion and it needs the tiger then the tiger needs the squirrel."
    },
    {
        "id": 11922,
        "statement": "is(X, cold) :- is(X, rough), chases(X, lion).",
        "description": "If something is rough and it chases the lion then it is cold."
    },
    {
        "id": 11923,
        "statement": "is(X, kind) :- is(X, big), is(X, young).",
        "description": "Big, young things are kind."
    },
    {
        "id": 11924,
        "statement": "chases(bear, squirrel) :- chases(X, bear).",
        "description": "If something chases the bear then the bear chases the squirrel."
    },
    {
        "id": 11925,
        "statement": "visits(X, squirrel) :- chases(X, tiger), is(tiger, kind).",
        "description": "If something chases the tiger and the tiger is kind then it visits the squirrel."
    },
    {
        "id": 11926,
        "statement": "is(X, round) :- is(X, quiet), is(X, blue).",
        "description": "If someone is quiet and blue then they are round."
    },
    {
        "id": 11927,
        "statement": "is(charlie, furry) :- is(charlie, quiet), is(charlie, round).",
        "description": "If Charlie is quiet and Charlie is round then Charlie is furry."
    },
    {
        "id": 11928,
        "statement": "is(X, blue) :- is(X, quiet), is(X, smart).",
        "description": "Quiet, smart people are blue."
    },
    {
        "id": 11929,
        "statement": "is(X, big) :- is(X, blue), is(X, round).",
        "description": "If someone is blue and round then they are big."
    },
    {
        "id": 11930,
        "statement": "is(X, smart) :- is(X, white), is(X, big).",
        "description": "All white, big people are smart."
    },
    {
        "id": 11931,
        "statement": "is(harry, white) :- is(harry, blue).",
        "description": "If Harry is blue then Harry is white."
    },
    {
        "id": 11932,
        "statement": "is(X, furry) :- is(X, blue), is(X, cold).",
        "description": "If someone is blue and cold then they are furry."
    },
    {
        "id": 11933,
        "statement": "is(X, furry) :- is(X, red), is(X, quiet).",
        "description": "If someone is red and quiet then they are furry."
    },
    {
        "id": 11934,
        "statement": "is(X, white) :- is(X, red), is(X, blue).",
        "description": "Red, blue people are white."
    },
    {
        "id": 11935,
        "statement": "sees(X, cat) :- sees(X, squirrel).",
        "description": "If someone sees the squirrel then they see the cat."
    },
    {
        "id": 11936,
        "statement": "likes(bear, squirrel) :- is(X, blue), eats(X, bear).",
        "description": "If someone is blue and they eat the bear then the bear likes the squirrel."
    },
    {
        "id": 11937,
        "statement": "sees(rabbit, bear) :- likes(X, rabbit), sees(rabbit, cat).",
        "description": "If someone likes the rabbit and the rabbit sees the cat then the rabbit sees the bear."
    },
    {
        "id": 11938,
        "statement": "likes(X, bear) :- is(X, nice), sees(X, bear).",
        "description": "If someone is nice and they see the bear then they like the bear."
    },
    {
        "id": 11939,
        "statement": "likes(squirrel, bear) :- likes(squirrel, cat), not is(squirrel, big).",
        "description": "If the squirrel likes the cat and the squirrel is not big then the squirrel likes the bear."
    },
    {
        "id": 11940,
        "statement": "likes(squirrel, rabbit) :- sees(X, squirrel), sees(X, bear).",
        "description": "If someone sees the squirrel and they see the bear then the squirrel likes the rabbit."
    },
    {
        "id": 11941,
        "statement": "likes(X, cat) :- likes(X, rabbit), not is(X, big).",
        "description": "If someone likes the rabbit and they are not big then they like the cat."
    },
    {
        "id": 11942,
        "statement": "chases(X, mouse) :- is(X, blue).",
        "description": "If something is blue then it chases the mouse."
    },
    {
        "id": 11943,
        "statement": "is(lion, round) :- sees(X, lion), likes(lion, mouse).",
        "description": "If something sees the lion and the lion likes the mouse then the lion is round."
    },
    {
        "id": 11944,
        "statement": "sees(bald_eagle, mouse) :- likes(X, mouse), sees(X, bald_eagle).",
        "description": "If something likes the mouse and it sees the bald eagle then the bald eagle sees the mouse."
    },
    {
        "id": 11945,
        "statement": "likes(X, bald_eagle) :- is(X, rough).",
        "description": "If something is rough then it likes the bald eagle."
    },
    {
        "id": 11946,
        "statement": "is(X, rough) :- sees(X, cow), likes(cow, bald_eagle).",
        "description": "If something sees the cow and the cow likes the bald eagle then it is rough."
    },
    {
        "id": 11947,
        "statement": "sees(lion, cow) :- chases(X, lion).",
        "description": "If something chases the lion then the lion sees the cow."
    },
    {
        "id": 11948,
        "statement": "chases(cow, lion) :- likes(cow, bald_eagle).",
        "description": "If the cow likes the bald eagle then the cow chases the lion."
    },
    {
        "id": 11949,
        "statement": "is(mouse, blue) :- chases(mouse, cow).",
        "description": "If the mouse chases the cow then the mouse is blue."
    },
    {
        "id": 11950,
        "statement": "is(X, kind) :- is(X, nice), is(X, blue).",
        "description": "If something is nice and blue then it is kind."
    },
    {
        "id": 11951,
        "statement": "is(X, nice) :- is(X, round), is(X, quiet).",
        "description": "All round, quiet things are nice."
    },
    {
        "id": 11952,
        "statement": "is(bob, nice) :- is(bob, kind).",
        "description": "If Bob is kind then Bob is nice."
    },
    {
        "id": 11953,
        "statement": "is(harry, round) :- is(harry, kind).",
        "description": "If Harry is kind then Harry is round."
    },
    {
        "id": 11954,
        "statement": "needs(tiger, bald_eagle) :- likes(X, bear), needs(bear, tiger).",
        "description": "If something likes the bear and the bear needs the tiger then the tiger needs the bald eagle."
    },
    {
        "id": 11955,
        "statement": "likes(X, rabbit) :- is(X, big).",
        "description": "If something is big then it likes the rabbit."
    },
    {
        "id": 11956,
        "statement": "chases(X, rabbit) :- likes(X, rabbit).",
        "description": "If something likes the rabbit then it chases the rabbit."
    },
    {
        "id": 11957,
        "statement": "is(X, green) :- is(X, big), needs(X, tiger).",
        "description": "If something is big and it needs the tiger then it is green."
    },
    {
        "id": 11958,
        "statement": "likes(bear, bald_eagle) :- chases(X, bear), is(X, big).",
        "description": "If something chases the bear and it is big then the bear likes the bald eagle."
    },
    {
        "id": 11959,
        "statement": "likes(X, bald_eagle) :- is(X, big), chases(X, bear).",
        "description": "If something is big and it chases the bear then it likes the bald eagle."
    },
    {
        "id": 11960,
        "statement": "chases(X, bald_eagle) :- chases(X, tiger), is(tiger, big).",
        "description": "If something chases the tiger and the tiger is big then it chases the bald eagle."
    },
    {
        "id": 11961,
        "statement": "is(X, cold) :- is(X, quiet), is(X, furry).",
        "description": "All quiet, furry people are cold."
    },
    {
        "id": 11962,
        "statement": "is(X, white) :- is(X, furry), is(X, kind).",
        "description": "Furry, kind people are white."
    },
    {
        "id": 11963,
        "statement": "is(erin, quiet) :- is(erin, nice).",
        "description": "If Erin is nice then Erin is quiet."
    },
    {
        "id": 11964,
        "statement": "is(X, smart) :- is(X, furry), is(X, green).",
        "description": "All furry, green things are smart."
    },
    {
        "id": 11965,
        "statement": "is(X, white) :- is(X, rough), is(X, big).",
        "description": "If something is rough and big then it is white."
    },
    {
        "id": 11966,
        "statement": "is(X, quiet) :- is(X, kind), is(X, red).",
        "description": "Kind, red things are quiet."
    },
    {
        "id": 11967,
        "statement": "is(fiona, kind) :- is(fiona, young), is(fiona, rough).",
        "description": "If Fiona is young and Fiona is rough then Fiona is kind."
    },
    {
        "id": 11968,
        "statement": "is(X, cold) :- is(X, smart), is(X, big).",
        "description": "If something is smart and big then it is cold."
    },
    {
        "id": 11969,
        "statement": "is(dave, young) :- is(dave, rough), is(dave, big).",
        "description": "If Dave is rough and Dave is big then Dave is young."
    },
    {
        "id": 11970,
        "statement": "is(charlie, young) :- is(charlie, rough).",
        "description": "If Charlie is rough then Charlie is young."
    },
    {
        "id": 11971,
        "statement": "is(fiona, green) :- is(fiona, furry), is(fiona, smart).",
        "description": "If Fiona is furry and Fiona is smart then Fiona is green."
    },
    {
        "id": 11972,
        "statement": "is(X, smart) :- is(X, blue).",
        "description": "All blue things are smart."
    },
    {
        "id": 11973,
        "statement": "is(X, smart) :- is(X, quiet), is(X, blue).",
        "description": "All quiet, blue things are smart."
    },
    {
        "id": 11974,
        "statement": "is(X, big) :- is(X, blue), is(X, cold).",
        "description": "If something is blue and cold then it is big."
    },
    {
        "id": 11975,
        "statement": "is(X, blue) :- is(X, furry), is(X, quiet).",
        "description": "Furry, quiet things are blue."
    },
    {
        "id": 11976,
        "statement": "is(X, green) :- is(X, blue), is(X, smart).",
        "description": "If something is blue and smart then it is green."
    },
    {
        "id": 11977,
        "statement": "is(X, quiet) :- is(X, rough), is(X, young).",
        "description": "If something is rough and young then it is quiet."
    },
    {
        "id": 11978,
        "statement": "is(X, young) :- is(X, red), is(X, quiet).",
        "description": "If something is red and quiet then it is young."
    },
    {
        "id": 11979,
        "statement": "is(X, furry) :- is(X, round), is(X, young).",
        "description": "All round, young things are furry."
    },
    {
        "id": 11980,
        "statement": "is(X, round) :- is(X, young), is(X, red).",
        "description": "Young, red things are round."
    },
    {
        "id": 11981,
        "statement": "is(erin, big) :- is(erin, rough), is(erin, blue).",
        "description": "If Erin is rough and Erin is blue then Erin is big."
    },
    {
        "id": 11982,
        "statement": "is(X, young) :- is(X, big), is(X, rough).",
        "description": "If someone is big and rough then they are young."
    },
    {
        "id": 11983,
        "statement": "is(X, blue) :- is(X, green), is(X, kind).",
        "description": "Green, kind people are blue."
    },
    {
        "id": 11984,
        "statement": "is(lion, nice) :- needs(X, tiger), not eats(tiger, lion).",
        "description": "If something needs the tiger and the tiger does not eat the lion then the lion is nice."
    },
    {
        "id": 11985,
        "statement": "eats(lion, squirrel) :- needs(X, mouse), needs(X, lion).",
        "description": "If something needs the mouse and it needs the lion then the lion eats the squirrel."
    },
    {
        "id": 11986,
        "statement": "eats(lion, tiger) :- eats(X, lion), likes(X, tiger).",
        "description": "If something eats the lion and it likes the tiger then the lion eats the tiger."
    },
    {
        "id": 11987,
        "statement": "likes(X, tiger) :- needs(X, tiger).",
        "description": "If something needs the tiger then it likes the tiger."
    },
    {
        "id": 11988,
        "statement": "likes(X, lion) :- likes(X, squirrel), not is(X, young).",
        "description": "If something likes the squirrel and it is not young then it likes the lion."
    },
    {
        "id": 11989,
        "statement": "is(X, white) :- is(X, nice), is(X, red).",
        "description": "All nice, red things are white."
    },
    {
        "id": 11990,
        "statement": "is(X, rough) :- is(X, nice), is(X, cold).",
        "description": "If something is nice and cold then it is rough."
    },
    {
        "id": 11991,
        "statement": "likes(X, tiger) :- visits(X, cat).",
        "description": "If someone visits the cat then they like the tiger."
    },
    {
        "id": 11992,
        "statement": "is(X, round) :- is(X, red), visits(X, cat).",
        "description": "If someone is red and they visit the cat then they are round."
    },
    {
        "id": 11993,
        "statement": "is(X, round) :- visits(X, cat), is(cat, cold).",
        "description": "If someone visits the cat and the cat is cold then they are round."
    },
    {
        "id": 11994,
        "statement": "visits(X, cat) :- needs(X, cat), is(cat, red).",
        "description": "If someone needs the cat and the cat is red then they visit the cat."
    },
    {
        "id": 11995,
        "statement": "needs(rabbit, tiger) :- likes(X, cat), not visits(X, rabbit).",
        "description": "If someone likes the cat and they do not visit the rabbit then the rabbit needs the tiger."
    },
    {
        "id": 11996,
        "statement": "needs(tiger, mouse) :- visits(X, tiger).",
        "description": "If someone visits the tiger then the tiger needs the mouse."
    },
    {
        "id": 11997,
        "statement": "is(X, red) :- is(X, nice), is(X, young).",
        "description": "All nice, young things are red."
    },
    {
        "id": 11998,
        "statement": "is(X, round) :- is(X, nice), is(X, red).",
        "description": "If something is nice and red then it is round."
    },
    {
        "id": 11999,
        "statement": "visits(lion, tiger) :- eats(X, lion).",
        "description": "If someone eats the lion then the lion visits the tiger."
    },
    {
        "id": 12000,
        "statement": "chases(lion, dog) :- is(lion, cold).",
        "description": "If the lion is cold then the lion chases the dog."
    },
    {
        "id": 12001,
        "statement": "is(X, nice) :- chases(X, cat).",
        "description": "If someone chases the cat then they are nice."
    },
    {
        "id": 12002,
        "statement": "chases(tiger, cat) :- visits(X, tiger).",
        "description": "If someone visits the tiger then the tiger chases the cat."
    },
    {
        "id": 12003,
        "statement": "is(X, cold) :- is(X, nice), chases(X, dog).",
        "description": "If someone is nice and they chase the dog then they are cold."
    },
    {
        "id": 12004,
        "statement": "chases(cat, dog) :- is(cat, cold), visits(cat, lion).",
        "description": "If the cat is cold and the cat visits the lion then the cat chases the dog."
    },
    {
        "id": 12005,
        "statement": "is(squirrel, kind) :- eats(X, squirrel), eats(squirrel, rabbit).",
        "description": "If something eats the squirrel and the squirrel eats the rabbit then the squirrel is kind."
    },
    {
        "id": 12006,
        "statement": "needs(X, squirrel) :- is(X, kind).",
        "description": "If something is kind then it needs the squirrel."
    },
    {
        "id": 12007,
        "statement": "is(X, round) :- is(X, cold), needs(X, rabbit).",
        "description": "If something is cold and it needs the rabbit then it is round."
    },
    {
        "id": 12008,
        "statement": "is(X, red) :- needs(X, squirrel).",
        "description": "If something needs the squirrel then it is red."
    },
    {
        "id": 12009,
        "statement": "eats(squirrel, dog) :- visits(bear, squirrel), eats(squirrel, bear).",
        "description": "If the bear visits the squirrel and the squirrel eats the bear then the squirrel eats the dog."
    },
    {
        "id": 12010,
        "statement": "is(X, green) :- is(X, smart), is(X, white).",
        "description": "Smart, white people are green."
    },
    {
        "id": 12011,
        "statement": "is(X, young) :- is(X, green), is(X, smart).",
        "description": "All green, smart people are young."
    },
    {
        "id": 12012,
        "statement": "is(X, cold) :- is(X, quiet), is(X, furry).",
        "description": "If something is quiet and furry then it is cold."
    },
    {
        "id": 12013,
        "statement": "is(bob, smart) :- is(bob, blue), is(bob, green).",
        "description": "If Bob is blue and Bob is green then Bob is smart."
    },
    {
        "id": 12014,
        "statement": "is(gary, smart) :- is(gary, green).",
        "description": "If Gary is green then Gary is smart."
    },
    {
        "id": 12015,
        "statement": "is(bob, smart) :- is(bob, round).",
        "description": "If Bob is round then Bob is smart."
    },
    {
        "id": 12016,
        "statement": "is(X, green) :- is(X, round), is(X, blue).",
        "description": "If something is round and blue then it is green."
    },
    {
        "id": 12017,
        "statement": "is(X, round) :- is(X, blue), is(X, green).",
        "description": "Blue, green things are round."
    },
    {
        "id": 12018,
        "statement": "is(bob, big) :- is(bob, blue).",
        "description": "If Bob is blue then Bob is big."
    },
    {
        "id": 12019,
        "statement": "is(X, cold) :- is(X, blue), is(X, white).",
        "description": "All blue, white people are cold."
    },
    {
        "id": 12020,
        "statement": "is(X, white) :- is(X, big), is(X, blue).",
        "description": "Big, blue people are white."
    },
    {
        "id": 12021,
        "statement": "is(X, furry) :- is(X, quiet), is(X, blue).",
        "description": "Quiet, blue things are furry."
    },
    {
        "id": 12022,
        "statement": "is(X, blue) :- is(X, cold), is(X, big).",
        "description": "Cold, big things are blue."
    },
    {
        "id": 12023,
        "statement": "is(X, quiet) :- is(X, big), is(X, furry).",
        "description": "If something is big and furry then it is quiet."
    },
    {
        "id": 12024,
        "statement": "sees(dog, tiger) :- chases(X, dog).",
        "description": "If someone chases the dog then the dog sees the tiger."
    },
    {
        "id": 12025,
        "statement": "is(squirrel, cold) :- sees(X, squirrel).",
        "description": "If someone sees the squirrel then the squirrel is cold."
    },
    {
        "id": 12026,
        "statement": "likes(squirrel, cow) :- likes(X, squirrel), is(squirrel, nice).",
        "description": "If someone likes the squirrel and the squirrel is nice then the squirrel likes the cow."
    },
    {
        "id": 12027,
        "statement": "chases(X, dog) :- is(X, big).",
        "description": "If someone is big then they chase the dog."
    },
    {
        "id": 12028,
        "statement": "sees(X, squirrel) :- chases(X, dog).",
        "description": "If someone chases the dog then they see the squirrel."
    },
    {
        "id": 12029,
        "statement": "chases(X, squirrel) :- sees(X, dog), not chases(X, cow).",
        "description": "If someone sees the dog and they do not chase the cow then they chase the squirrel."
    },
    {
        "id": 12030,
        "statement": "is(X, cold) :- sees(X, squirrel).",
        "description": "If someone sees the squirrel then they are cold."
    },
    {
        "id": 12031,
        "statement": "is(squirrel, red) :- eats(X, squirrel), not is(squirrel, big).",
        "description": "If something eats the squirrel and the squirrel is not big then the squirrel is red."
    },
    {
        "id": 12032,
        "statement": "likes(rabbit, cow) :- not visits(bald_eagle, rabbit).",
        "description": "If the bald eagle does not visit the rabbit then the rabbit likes the cow."
    },
    {
        "id": 12033,
        "statement": "is(X, young) :- likes(X, cow), not likes(cow, rabbit).",
        "description": "If something likes the cow and the cow does not like the rabbit then it is young."
    },
    {
        "id": 12034,
        "statement": "visits(squirrel, bald_eagle) :- is(squirrel, red).",
        "description": "If the squirrel is red then the squirrel visits the bald eagle."
    },
    {
        "id": 12035,
        "statement": "likes(X, cow) :- eats(X, cow).",
        "description": "If something eats the cow then it likes the cow."
    },
    {
        "id": 12036,
        "statement": "likes(bald_eagle, cow) :- likes(X, cow), not eats(X, bald_eagle).",
        "description": "If something likes the cow and it does not eat the bald eagle then the bald eagle likes the cow."
    },
    {
        "id": 12037,
        "statement": "likes(bald_eagle, squirrel) :- is(bald_eagle, red), eats(bald_eagle, rabbit).",
        "description": "If the bald eagle is red and the bald eagle eats the rabbit then the bald eagle likes the squirrel."
    },
    {
        "id": 12038,
        "statement": "eats(X, squirrel) :- is(X, young).",
        "description": "If something is young then it eats the squirrel."
    },
    {
        "id": 12039,
        "statement": "is(X, young) :- is(X, red), is(X, kind).",
        "description": "If someone is red and kind then they are young."
    },
    {
        "id": 12040,
        "statement": "is(X, kind) :- is(X, young), is(X, round).",
        "description": "All young, round people are kind."
    },
    {
        "id": 12041,
        "statement": "is(anne, round) :- is(anne, green).",
        "description": "If Anne is green then Anne is round."
    },
    {
        "id": 12042,
        "statement": "is(harry, red) :- is(harry, kind), is(harry, cold).",
        "description": "If Harry is kind and Harry is cold then Harry is red."
    },
    {
        "id": 12043,
        "statement": "is(harry, kind) :- is(harry, cold).",
        "description": "If Harry is cold then Harry is kind."
    },
    {
        "id": 12044,
        "statement": "is(X, rough) :- is(X, nice), is(X, furry).",
        "description": "If someone is nice and furry then they are rough."
    },
    {
        "id": 12045,
        "statement": "is(X, cold) :- is(X, white), is(X, kind).",
        "description": "If someone is white and kind then they are cold."
    },
    {
        "id": 12046,
        "statement": "is(dave, furry) :- is(dave, green), is(dave, rough).",
        "description": "If Dave is green and Dave is rough then Dave is furry."
    },
    {
        "id": 12047,
        "statement": "is(bob, rough) :- is(bob, furry), is(bob, cold).",
        "description": "If Bob is furry and Bob is cold then Bob is rough."
    },
    {
        "id": 12048,
        "statement": "is(X, green) :- is(X, rough), is(X, white).",
        "description": "All rough, white people are green."
    },
    {
        "id": 12049,
        "statement": "is(erin, red) :- is(erin, round), is(erin, quiet).",
        "description": "If Erin is round and Erin is quiet then Erin is red."
    },
    {
        "id": 12050,
        "statement": "is(X, big) :- is(X, kind), is(X, red).",
        "description": "All kind, red things are big."
    },
    {
        "id": 12051,
        "statement": "likes(X, squirrel) :- is(X, round).",
        "description": "If someone is round then they like the squirrel."
    },
    {
        "id": 12052,
        "statement": "eats(squirrel, dog) :- is(X, round), likes(X, squirrel).",
        "description": "If someone is round and they like the squirrel then the squirrel eats the dog."
    },
    {
        "id": 12053,
        "statement": "likes(cow, squirrel) :- eats(X, cow).",
        "description": "If someone eats the cow then the cow likes the squirrel."
    },
    {
        "id": 12054,
        "statement": "likes(cow, squirrel) :- eats(cow, dog), is(cow, big).",
        "description": "If the cow eats the dog and the cow is big then the cow likes the squirrel."
    },
    {
        "id": 12055,
        "statement": "is(X, round) :- eats(X, mouse).",
        "description": "If someone eats the mouse then they are round."
    },
    {
        "id": 12056,
        "statement": "likes(dog, mouse) :- likes(squirrel, dog).",
        "description": "If the squirrel likes the dog then the dog likes the mouse."
    },
    {
        "id": 12057,
        "statement": "is(X, nice) :- is(X, blue), is(X, green).",
        "description": "If someone is blue and green then they are nice."
    },
    {
        "id": 12058,
        "statement": "eats(dog, mouse) :- eats(X, dog), is(X, round).",
        "description": "If someone eats the dog and they are round then the dog eats the mouse."
    },
    {
        "id": 12059,
        "statement": "is(X, big) :- is(X, nice), is(X, kind).",
        "description": "If something is nice and kind then it is big."
    },
    {
        "id": 12060,
        "statement": "is(X, smart) :- is(X, blue), is(X, kind).",
        "description": "All blue, kind things are smart."
    },
    {
        "id": 12061,
        "statement": "is(X, smart) :- is(X, white), is(X, cold).",
        "description": "All white, cold things are smart."
    },
    {
        "id": 12062,
        "statement": "visits(X, bald_eagle) :- visits(X, cow).",
        "description": "If something visits the cow then it visits the bald eagle."
    },
    {
        "id": 12063,
        "statement": "visits(X, bald_eagle) :- likes(X, bald_eagle), chases(bald_eagle, tiger).",
        "description": "If something likes the bald eagle and the bald eagle chases the tiger then it visits the bald eagle."
    },
    {
        "id": 12064,
        "statement": "visits(bald_eagle, tiger) :- likes(mouse, tiger), chases(tiger, bald_eagle).",
        "description": "If the mouse likes the tiger and the tiger chases the bald eagle then the bald eagle visits the tiger."
    },
    {
        "id": 12065,
        "statement": "likes(mouse, tiger) :- visits(X, mouse), not is(mouse, green).",
        "description": "If something visits the mouse and the mouse is not green then the mouse likes the tiger."
    },
    {
        "id": 12066,
        "statement": "chases(X, tiger) :- visits(X, bald_eagle).",
        "description": "If something visits the bald eagle then it chases the tiger."
    },
    {
        "id": 12067,
        "statement": "visits(cow, tiger) :- is(cow, green), visits(cow, mouse).",
        "description": "If the cow is green and the cow visits the mouse then the cow visits the tiger."
    },
    {
        "id": 12068,
        "statement": "visits(bald_eagle, cow) :- chases(X, bald_eagle), visits(X, tiger).",
        "description": "If something chases the bald eagle and it visits the tiger then the bald eagle visits the cow."
    },
    {
        "id": 12069,
        "statement": "likes(cow, tiger) :- visits(X, mouse), chases(X, cow).",
        "description": "If something visits the mouse and it chases the cow then the cow likes the tiger."
    },
    {
        "id": 12070,
        "statement": "is(X, green) :- is(X, furry), is(X, big).",
        "description": "Furry, big people are green."
    },
    {
        "id": 12071,
        "statement": "is(X, cold) :- is(X, young), is(X, green).",
        "description": "Young, green people are cold."
    },
    {
        "id": 12072,
        "statement": "sees(X, bear) :- is(X, young), is(X, round).",
        "description": "If someone is young and round then they see the bear."
    },
    {
        "id": 12073,
        "statement": "likes(cat, tiger) :- eats(bear, cat), is(bear, round).",
        "description": "If the bear eats the cat and the bear is round then the cat likes the tiger."
    },
    {
        "id": 12074,
        "statement": "eats(X, cat) :- likes(X, bald_eagle).",
        "description": "If someone likes the bald eagle then they eat the cat."
    },
    {
        "id": 12075,
        "statement": "likes(bald_eagle, cat) :- is(bear, round), sees(bear, bald_eagle).",
        "description": "If the bear is round and the bear sees the bald eagle then the bald eagle likes the cat."
    },
    {
        "id": 12076,
        "statement": "is(bald_eagle, young) :- eats(X, bald_eagle), is(X, blue).",
        "description": "If someone eats the bald eagle and they are blue then the bald eagle is young."
    },
    {
        "id": 12077,
        "statement": "sees(cat, bear) :- eats(X, cat).",
        "description": "If someone eats the cat then the cat sees the bear."
    },
    {
        "id": 12078,
        "statement": "eats(cat, bald_eagle) :- eats(cat, tiger).",
        "description": "If the cat eats the tiger then the cat eats the bald eagle."
    },
    {
        "id": 12079,
        "statement": "sees(bald_eagle, bear) :- eats(X, bald_eagle), is(X, young).",
        "description": "If someone eats the bald eagle and they are young then the bald eagle sees the bear."
    },
    {
        "id": 12080,
        "statement": "likes(X, bald_eagle) :- sees(X, bear).",
        "description": "If someone sees the bear then they like the bald eagle."
    },
    {
        "id": 12081,
        "statement": "likes(X, cow) :- likes(X, cat).",
        "description": "If something likes the cat then it likes the cow."
    },
    {
        "id": 12082,
        "statement": "eats(X, bear) :- needs(X, bear).",
        "description": "If something needs the bear then it eats the bear."
    },
    {
        "id": 12083,
        "statement": "needs(cow, bear) :- needs(X, cow).",
        "description": "If something needs the cow then the cow needs the bear."
    },
    {
        "id": 12084,
        "statement": "is(X, cold) :- needs(X, bear).",
        "description": "If something needs the bear then it is cold."
    },
    {
        "id": 12085,
        "statement": "likes(bear, cat) :- eats(X, bear), eats(bear, cow).",
        "description": "If something eats the bear and the bear eats the cow then the bear likes the cat."
    },
    {
        "id": 12086,
        "statement": "needs(X, cow) :- eats(X, bear).",
        "description": "If something eats the bear then it needs the cow."
    },
    {
        "id": 12087,
        "statement": "likes(cow, bear) :- eats(X, squirrel), not needs(X, cow).",
        "description": "If something eats the squirrel and it does not need the cow then the cow likes the bear."
    },
    {
        "id": 12088,
        "statement": "is(X, furry) :- is(X, kind), is(X, red).",
        "description": "If someone is kind and red then they are furry."
    },
    {
        "id": 12089,
        "statement": "is(X, nice) :- is(X, green), is(X, round).",
        "description": "If something is green and round then it is nice."
    },
    {
        "id": 12090,
        "statement": "is(X, kind) :- is(X, cold), not is(X, furry).",
        "description": "If something is cold and not furry then it is kind."
    },
    {
        "id": 12091,
        "statement": "is(anne, nice) :- is(anne, green), is(anne, round).",
        "description": "If Anne is green and Anne is round then Anne is nice."
    },
    {
        "id": 12092,
        "statement": "is(X, cold) :- is(X, kind), is(X, furry).",
        "description": "Kind, furry things are cold."
    },
    {
        "id": 12093,
        "statement": "is(X, nice) :- is(X, furry), is(X, young).",
        "description": "Furry, young things are nice."
    },
    {
        "id": 12094,
        "statement": "is(X, rough) :- is(X, quiet), is(X, nice).",
        "description": "If something is quiet and nice then it is rough."
    },
    {
        "id": 12095,
        "statement": "is(X, green) :- is(X, blue), is(X, young).",
        "description": "Blue, young things are green."
    },
    {
        "id": 12096,
        "statement": "is(X, young) :- is(X, blue), is(X, quiet).",
        "description": "Blue, quiet things are young."
    },
    {
        "id": 12097,
        "statement": "is(X, rough) :- is(X, red), is(X, furry).",
        "description": "All red, furry things are rough."
    },
    {
        "id": 12098,
        "statement": "is(anne, quiet) :- is(anne, red), is(anne, furry).",
        "description": "If Anne is red and Anne is furry then Anne is quiet."
    },
    {
        "id": 12099,
        "statement": "is(X, young) :- is(X, furry), is(X, quiet).",
        "description": "All furry, quiet things are young."
    },
    {
        "id": 12100,
        "statement": "is(dave, quiet) :- is(dave, blue), is(dave, white).",
        "description": "If Dave is blue and Dave is white then Dave is quiet."
    },
    {
        "id": 12101,
        "statement": "is(X, blue) :- is(X, cold), is(X, nice).",
        "description": "If something is cold and nice then it is blue."
    },
    {
        "id": 12102,
        "statement": "is(X, big) :- is(X, white), is(X, nice).",
        "description": "All white, nice things are big."
    },
    {
        "id": 12103,
        "statement": "is(X, kind) :- is(X, nice), not is(X, big).",
        "description": "If something is nice and not big then it is kind."
    },
    {
        "id": 12104,
        "statement": "eats(dog, bear) :- needs(dog, bear).",
        "description": "If the dog needs the bear then the dog eats the bear."
    },
    {
        "id": 12105,
        "statement": "visits(X, dog) :- is(X, big), is(X, blue).",
        "description": "If someone is big and blue then they visit the dog."
    },
    {
        "id": 12106,
        "statement": "visits(bear, dog) :- needs(dog, bear).",
        "description": "If the dog needs the bear then the bear visits the dog."
    },
    {
        "id": 12107,
        "statement": "visits(X, mouse) :- visits(X, dog), is(X, blue).",
        "description": "If someone visits the dog and they are blue then they visit the mouse."
    },
    {
        "id": 12108,
        "statement": "needs(X, bear) :- eats(X, dog).",
        "description": "If someone eats the dog then they need the bear."
    },
    {
        "id": 12109,
        "statement": "is(X, red) :- needs(X, lion).",
        "description": "If someone needs the lion then they are red."
    },
    {
        "id": 12110,
        "statement": "visits(mouse, dog) :- needs(mouse, dog).",
        "description": "If the mouse needs the dog then the mouse visits the dog."
    },
    {
        "id": 12111,
        "statement": "eats(X, cow) :- eats(X, bald_eagle).",
        "description": "If someone eats the bald eagle then they eat the cow."
    },
    {
        "id": 12112,
        "statement": "eats(X, mouse) :- visits(X, bald_eagle).",
        "description": "If someone visits the bald eagle then they eat the mouse."
    },
    {
        "id": 12113,
        "statement": "is(X, green) :- sees(X, mouse), visits(X, mouse).",
        "description": "If someone sees the mouse and they visit the mouse then they are green."
    },
    {
        "id": 12114,
        "statement": "is(X, green) :- eats(X, cow).",
        "description": "If someone eats the cow then they are green."
    },
    {
        "id": 12115,
        "statement": "is(X, green) :- sees(X, cow).",
        "description": "If someone sees the cow then they are green."
    },
    {
        "id": 12116,
        "statement": "visits(mouse, cow) :- is(X, rough), visits(X, mouse).",
        "description": "If someone is rough and they visit the mouse then the mouse visits the cow."
    },
    {
        "id": 12117,
        "statement": "eats(cow, bald_eagle) :- is(X, green), sees(X, cow).",
        "description": "If someone is green and they see the cow then the cow eats the bald eagle."
    },
    {
        "id": 12118,
        "statement": "is(cow, nice) :- eats(X, cow).",
        "description": "If someone eats the cow then the cow is nice."
    },
    {
        "id": 12119,
        "statement": "sees(X, bald_eagle) :- is(X, big), is(X, cold).",
        "description": "If something is big and cold then it sees the bald eagle."
    },
    {
        "id": 12120,
        "statement": "visits(bear, tiger) :- chases(tiger, dog), sees(tiger, bear).",
        "description": "If the tiger chases the dog and the tiger sees the bear then the bear visits the tiger."
    },
    {
        "id": 12121,
        "statement": "sees(X, dog) :- chases(X, bear).",
        "description": "If something chases the bear then it sees the dog."
    },
    {
        "id": 12122,
        "statement": "chases(bald_eagle, bear) :- chases(X, bald_eagle).",
        "description": "If something chases the bald eagle then the bald eagle chases the bear."
    },
    {
        "id": 12123,
        "statement": "chases(dog, bear) :- sees(X, bald_eagle), visits(X, dog).",
        "description": "If something sees the bald eagle and it visits the dog then the dog chases the bear."
    },
    {
        "id": 12124,
        "statement": "chases(X, bald_eagle) :- sees(X, dog).",
        "description": "If something sees the dog then it chases the bald eagle."
    },
    {
        "id": 12125,
        "statement": "sees(bear, bald_eagle) :- sees(bear, tiger), visits(tiger, bear).",
        "description": "If the bear sees the tiger and the tiger visits the bear then the bear sees the bald eagle."
    },
    {
        "id": 12126,
        "statement": "sees(X, bald_eagle) :- chases(X, bald_eagle).",
        "description": "If something chases the bald eagle then it sees the bald eagle."
    },
    {
        "id": 12127,
        "statement": "is(X, nice) :- is(X, rough), is(X, cold).",
        "description": "All rough, cold things are nice."
    },
    {
        "id": 12128,
        "statement": "is(X, furry) :- is(X, green), is(X, big).",
        "description": "Green, big things are furry."
    },
    {
        "id": 12129,
        "statement": "is(X, red) :- is(X, nice), is(X, blue).",
        "description": "Nice, blue things are red."
    },
    {
        "id": 12130,
        "statement": "is(X, white) :- is(X, blue), not is(X, nice).",
        "description": "If something is blue and not nice then it is white."
    },
    {
        "id": 12131,
        "statement": "is(squirrel, round) :- is(squirrel, big), not visits(squirrel, tiger).",
        "description": "If the squirrel is big and the squirrel does not visit the tiger then the squirrel is round."
    },
    {
        "id": 12132,
        "statement": "visits(bald_eagle, squirrel) :- visits(mouse, bald_eagle), is(bald_eagle, round).",
        "description": "If the mouse visits the bald eagle and the bald eagle is round then the bald eagle visits the squirrel."
    },
    {
        "id": 12133,
        "statement": "needs(X, mouse) :- sees(X, mouse).",
        "description": "If something sees the mouse then it needs the mouse."
    },
    {
        "id": 12134,
        "statement": "needs(X, mouse) :- is(X, nice), needs(X, tiger).",
        "description": "If something is nice and it needs the tiger then it needs the mouse."
    },
    {
        "id": 12135,
        "statement": "sees(X, tiger) :- is(X, red), needs(X, squirrel).",
        "description": "If something is red and it needs the squirrel then it sees the tiger."
    },
    {
        "id": 12136,
        "statement": "needs(mouse, bald_eagle) :- visits(bald_eagle, mouse).",
        "description": "If the bald eagle visits the mouse then the mouse needs the bald eagle."
    },
    {
        "id": 12137,
        "statement": "is(squirrel, red) :- sees(X, bald_eagle), visits(X, squirrel).",
        "description": "If something sees the bald eagle and it visits the squirrel then the squirrel is red."
    },
    {
        "id": 12138,
        "statement": "is(mouse, green) :- eats(X, mouse).",
        "description": "If someone eats the mouse then the mouse is green."
    },
    {
        "id": 12139,
        "statement": "is(tiger, nice) :- eats(X, tiger), sees(tiger, rabbit).",
        "description": "If someone eats the tiger and the tiger sees the rabbit then the tiger is nice."
    },
    {
        "id": 12140,
        "statement": "sees(X, mouse) :- is(X, nice).",
        "description": "If someone is nice then they see the mouse."
    },
    {
        "id": 12141,
        "statement": "eats(X, rabbit) :- needs(X, tiger), not is(tiger, round).",
        "description": "If someone needs the tiger and the tiger is not round then they eat the rabbit."
    },
    {
        "id": 12142,
        "statement": "is(gary, smart) :- is(gary, blue), is(gary, young).",
        "description": "If Gary is blue and Gary is young then Gary is smart."
    },
    {
        "id": 12143,
        "statement": "is(erin, blue) :- is(erin, smart).",
        "description": "If Erin is smart then Erin is blue."
    },
    {
        "id": 12144,
        "statement": "is(X, young) :- is(X, green), is(X, blue).",
        "description": "All green, blue things are young."
    },
    {
        "id": 12145,
        "statement": "is(X, blue) :- is(X, big), is(X, young).",
        "description": "All big, young things are blue."
    },
    {
        "id": 12146,
        "statement": "is(X, quiet) :- is(X, smart).",
        "description": "All smart things are quiet."
    },
    {
        "id": 12147,
        "statement": "is(X, blue) :- is(X, cold), is(X, red).",
        "description": "If something is cold and red then it is blue."
    },
    {
        "id": 12148,
        "statement": "is(X, red) :- is(X, smart), is(X, big).",
        "description": "All smart, big things are red."
    },
    {
        "id": 12149,
        "statement": "is(X, red) :- is(X, cold), is(X, big).",
        "description": "Cold, big things are red."
    },
    {
        "id": 12150,
        "statement": "is(X, smart) :- is(X, blue), is(X, big).",
        "description": "All blue, big things are smart."
    },
    {
        "id": 12151,
        "statement": "sees(X, squirrel) :- is(X, rough).",
        "description": "If something is rough then it sees the squirrel."
    },
    {
        "id": 12152,
        "statement": "is(X, young) :- visits(X, tiger).",
        "description": "If something visits the tiger then it is young."
    },
    {
        "id": 12153,
        "statement": "is(X, rough) :- is(X, cold), sees(X, squirrel).",
        "description": "If something is cold and it sees the squirrel then it is rough."
    },
    {
        "id": 12154,
        "statement": "eats(X, tiger) :- eats(X, squirrel).",
        "description": "If something eats the squirrel then it eats the tiger."
    },
    {
        "id": 12155,
        "statement": "visits(X, tiger) :- is(X, cold), is(X, rough).",
        "description": "If something is cold and rough then it visits the tiger."
    },
    {
        "id": 12156,
        "statement": "sees(X, mouse) :- is(X, young).",
        "description": "If something is young then it sees the mouse."
    },
    {
        "id": 12157,
        "statement": "sees(X, squirrel) :- is(X, cold).",
        "description": "If something is cold then it sees the squirrel."
    },
    {
        "id": 12158,
        "statement": "sees(tiger, squirrel) :- sees(X, tiger), is(X, big).",
        "description": "If someone sees the tiger and they are big then the tiger sees the squirrel."
    },
    {
        "id": 12159,
        "statement": "is(X, big) :- sees(X, squirrel), likes(X, squirrel).",
        "description": "If someone sees the squirrel and they like the squirrel then they are big."
    },
    {
        "id": 12160,
        "statement": "sees(squirrel, lion) :- likes(X, squirrel), is(X, nice).",
        "description": "If someone likes the squirrel and they are nice then the squirrel sees the lion."
    },
    {
        "id": 12161,
        "statement": "sees(lion, squirrel) :- sees(lion, bald_eagle).",
        "description": "If the lion sees the bald eagle then the lion sees the squirrel."
    },
    {
        "id": 12162,
        "statement": "sees(lion, bald_eagle) :- likes(X, bald_eagle), likes(X, lion).",
        "description": "If someone likes the bald eagle and they like the lion then the lion sees the bald eagle."
    },
    {
        "id": 12163,
        "statement": "is(X, furry) :- is(X, quiet), is(X, rough).",
        "description": "All quiet, rough things are furry."
    },
    {
        "id": 12164,
        "statement": "is(X, nice) :- is(X, rough), is(X, furry).",
        "description": "All rough, furry things are nice."
    },
    {
        "id": 12165,
        "statement": "is(X, cold) :- is(X, quiet).",
        "description": "All quiet things are cold."
    },
    {
        "id": 12166,
        "statement": "is(anne, kind) :- is(anne, quiet).",
        "description": "If Anne is quiet then Anne is kind."
    },
    {
        "id": 12167,
        "statement": "is(X, quiet) :- is(X, kind), is(X, nice).",
        "description": "All kind, nice things are quiet."
    },
    {
        "id": 12168,
        "statement": "is(X, white) :- is(X, young).",
        "description": "All young people are white."
    },
    {
        "id": 12169,
        "statement": "is(X, young) :- is(X, white), is(X, round).",
        "description": "White, round people are young."
    },
    {
        "id": 12170,
        "statement": "is(dave, quiet) :- is(dave, furry).",
        "description": "If Dave is furry then Dave is quiet."
    },
    {
        "id": 12171,
        "statement": "is(X, furry) :- is(X, round), is(X, white).",
        "description": "Round, white people are furry."
    },
    {
        "id": 12172,
        "statement": "is(X, quiet) :- is(X, round), is(X, furry).",
        "description": "All round, furry people are quiet."
    },
    {
        "id": 12173,
        "statement": "is(X, white) :- is(X, quiet), is(X, rough).",
        "description": "All quiet, rough people are white."
    },
    {
        "id": 12174,
        "statement": "is(X, rough) :- is(X, green), is(X, red).",
        "description": "If someone is green and red then they are rough."
    },
    {
        "id": 12175,
        "statement": "is(X, big) :- is(X, rough), is(X, blue).",
        "description": "All rough, blue people are big."
    },
    {
        "id": 12176,
        "statement": "is(X, red) :- is(X, blue), is(X, big).",
        "description": "All blue, big people are red."
    },
    {
        "id": 12177,
        "statement": "is(X, quiet) :- is(X, blue), is(X, nice).",
        "description": "If someone is blue and nice then they are quiet."
    },
    {
        "id": 12178,
        "statement": "is(X, blue) :- is(X, big), is(X, round).",
        "description": "Big, round things are blue."
    },
    {
        "id": 12179,
        "statement": "is(X, big) :- is(X, rough), is(X, quiet).",
        "description": "All rough, quiet things are big."
    },
    {
        "id": 12180,
        "statement": "is(X, rough) :- is(X, young), is(X, green).",
        "description": "All young, green things are rough."
    },
    {
        "id": 12181,
        "statement": "is(bob, green) :- is(bob, kind).",
        "description": "If Bob is kind then Bob is green."
    },
    {
        "id": 12182,
        "statement": "is(X, kind) :- is(X, blue), is(X, quiet).",
        "description": "All blue, quiet things are kind."
    },
    {
        "id": 12183,
        "statement": "is(X, red) :- is(X, green), not is(X, cold).",
        "description": "If something is green and not cold then it is red."
    },
    {
        "id": 12184,
        "statement": "is(X, green) :- is(X, red), is(X, quiet).",
        "description": "Red, quiet things are green."
    },
    {
        "id": 12185,
        "statement": "is(X, rough) :- is(X, kind), is(X, young).",
        "description": "All kind, young people are rough."
    },
    {
        "id": 12186,
        "statement": "is(X, furry) :- is(X, kind), is(X, rough).",
        "description": "Kind, rough people are furry."
    },
    {
        "id": 12187,
        "statement": "is(X, quiet) :- is(X, kind), is(X, rough).",
        "description": "All kind, rough people are quiet."
    },
    {
        "id": 12188,
        "statement": "visits(squirrel, bear) :- visits(X, squirrel), is(X, green).",
        "description": "If something visits the squirrel and it is green then the squirrel visits the bear."
    },
    {
        "id": 12189,
        "statement": "is(cat, cold) :- visits(bear, squirrel), not eats(bear, cat).",
        "description": "If the bear visits the squirrel and the bear does not eat the cat then the cat is cold."
    },
    {
        "id": 12190,
        "statement": "visits(X, squirrel) :- chases(X, mouse).",
        "description": "If something chases the mouse then it visits the squirrel."
    },
    {
        "id": 12191,
        "statement": "eats(mouse, bear) :- is(mouse, green).",
        "description": "If the mouse is green then the mouse eats the bear."
    },
    {
        "id": 12192,
        "statement": "chases(squirrel, mouse) :- visits(squirrel, cat).",
        "description": "If the squirrel visits the cat then the squirrel chases the mouse."
    },
    {
        "id": 12193,
        "statement": "is(bear, round) :- chases(bear, squirrel).",
        "description": "If the bear chases the squirrel then the bear is round."
    },
    {
        "id": 12194,
        "statement": "eats(mouse, squirrel) :- visits(squirrel, mouse), eats(squirrel, mouse).",
        "description": "If the squirrel visits the mouse and the squirrel eats the mouse then the mouse eats the squirrel."
    },
    {
        "id": 12195,
        "statement": "likes(dog, bald_eagle) :- not is(dog, big).",
        "description": "If the dog is not big then the dog likes the bald eagle."
    },
    {
        "id": 12196,
        "statement": "chases(cow, dog) :- likes(X, cow).",
        "description": "If someone likes the cow then the cow chases the dog."
    },
    {
        "id": 12197,
        "statement": "chases(cow, squirrel) :- chases(dog, cow), not is(dog, blue).",
        "description": "If the dog chases the cow and the dog is not blue then the cow chases the squirrel."
    },
    {
        "id": 12198,
        "statement": "chases(squirrel, cow) :- is(squirrel, big).",
        "description": "If the squirrel is big then the squirrel chases the cow."
    },
    {
        "id": 12199,
        "statement": "likes(squirrel, cow) :- is(squirrel, red), not is(squirrel, blue).",
        "description": "If the squirrel is red and the squirrel is not blue then the squirrel likes the cow."
    },
    {
        "id": 12200,
        "statement": "visits(X, squirrel) :- chases(X, squirrel), not is(X, cold).",
        "description": "If someone chases the squirrel and they are not cold then they visit the squirrel."
    },
    {
        "id": 12201,
        "statement": "chases(X, cow) :- visits(X, squirrel).",
        "description": "If someone visits the squirrel then they chase the cow."
    },
    {
        "id": 12202,
        "statement": "likes(cow, dog) :- visits(bald_eagle, cow).",
        "description": "If the bald eagle visits the cow then the cow likes the dog."
    },
    {
        "id": 12203,
        "statement": "is(X, red) :- is(X, nice), is(X, cold).",
        "description": "All nice, cold things are red."
    },
    {
        "id": 12204,
        "statement": "is(X, kind) :- is(X, quiet), is(X, red).",
        "description": "All quiet, red things are kind."
    },
    {
        "id": 12205,
        "statement": "is(X, green) :- is(X, kind), is(X, cold).",
        "description": "Kind, cold things are green."
    },
    {
        "id": 12206,
        "statement": "is(dave, white) :- is(dave, quiet), is(dave, nice).",
        "description": "If Dave is quiet and Dave is nice then Dave is white."
    },
    {
        "id": 12207,
        "statement": "is(X, quiet) :- is(X, rough), is(X, red).",
        "description": "If something is rough and red then it is quiet."
    },
    {
        "id": 12208,
        "statement": "is(X, white) :- is(X, nice), is(X, quiet).",
        "description": "If something is nice and quiet then it is white."
    },
    {
        "id": 12209,
        "statement": "is(cow, kind) :- visits(X, cow), visits(X, dog).",
        "description": "If someone visits the cow and they visit the dog then the cow is kind."
    },
    {
        "id": 12210,
        "statement": "eats(X, cow) :- sees(X, bear).",
        "description": "If someone sees the bear then they eat the cow."
    },
    {
        "id": 12211,
        "statement": "is(X, blue) :- sees(X, cow).",
        "description": "If someone sees the cow then they are blue."
    },
    {
        "id": 12212,
        "statement": "eats(X, dog) :- is(X, round), visits(X, bear).",
        "description": "If someone is round and they visit the bear then they eat the dog."
    },
    {
        "id": 12213,
        "statement": "sees(X, bear) :- is(X, round).",
        "description": "If someone is round then they see the bear."
    },
    {
        "id": 12214,
        "statement": "visits(cow, dog) :- sees(X, cow), visits(X, mouse).",
        "description": "If someone sees the cow and they visit the mouse then the cow visits the dog."
    },
    {
        "id": 12215,
        "statement": "is(X, rough) :- is(X, big), is(X, smart).",
        "description": "If someone is big and smart then they are rough."
    },
    {
        "id": 12216,
        "statement": "is(X, kind) :- is(X, green), is(X, furry).",
        "description": "All green, furry people are kind."
    },
    {
        "id": 12217,
        "statement": "is(X, furry) :- is(X, big), is(X, green).",
        "description": "Big, green people are furry."
    },
    {
        "id": 12218,
        "statement": "is(bob, big) :- is(bob, quiet), is(bob, red).",
        "description": "If Bob is quiet and Bob is red then Bob is big."
    },
    {
        "id": 12219,
        "statement": "is(X, furry) :- is(X, kind), is(X, big).",
        "description": "Kind, big things are furry."
    },
    {
        "id": 12220,
        "statement": "is(X, furry) :- is(X, green), is(X, nice).",
        "description": "Green, nice things are furry."
    },
    {
        "id": 12221,
        "statement": "is(X, blue) :- is(X, white), is(X, green).",
        "description": "If something is white and green then it is blue."
    },
    {
        "id": 12222,
        "statement": "is(fiona, green) :- is(fiona, white).",
        "description": "If Fiona is white then Fiona is green."
    },
    {
        "id": 12223,
        "statement": "is(tiger, rough) :- not needs(squirrel, bald_eagle), not eats(squirrel, tiger).",
        "description": "If the squirrel does not need the bald eagle and the squirrel does not eat the tiger then the tiger is rough."
    },
    {
        "id": 12224,
        "statement": "sees(X, bald_eagle) :- is(X, red), is(X, green).",
        "description": "If something is red and green then it sees the bald eagle."
    },
    {
        "id": 12225,
        "statement": "sees(X, bald_eagle) :- sees(X, dog).",
        "description": "If something sees the dog then it sees the bald eagle."
    },
    {
        "id": 12226,
        "statement": "is(X, red) :- needs(X, squirrel), sees(X, bald_eagle).",
        "description": "If something needs the squirrel and it sees the bald eagle then it is red."
    },
    {
        "id": 12227,
        "statement": "sees(squirrel, bald_eagle) :- is(tiger, rough), not sees(tiger, squirrel).",
        "description": "If the tiger is rough and the tiger does not see the squirrel then the squirrel sees the bald eagle."
    },
    {
        "id": 12228,
        "statement": "needs(X, dog) :- is(X, big), not eats(X, squirrel).",
        "description": "If something is big and it does not eat the squirrel then it needs the dog."
    },
    {
        "id": 12229,
        "statement": "sees(dog, squirrel) :- eats(X, dog), is(X, red).",
        "description": "If something eats the dog and it is red then the dog sees the squirrel."
    },
    {
        "id": 12230,
        "statement": "sees(bald_eagle, dog) :- sees(X, bald_eagle), not is(X, cold).",
        "description": "If something sees the bald eagle and it is not cold then the bald eagle sees the dog."
    },
    {
        "id": 12231,
        "statement": "eats(X, dog) :- needs(X, dog).",
        "description": "If something needs the dog then it eats the dog."
    },
    {
        "id": 12232,
        "statement": "is(erin, kind) :- is(erin, white), is(erin, green).",
        "description": "If Erin is white and Erin is green then Erin is kind."
    },
    {
        "id": 12233,
        "statement": "is(X, young) :- is(X, smart), is(X, kind).",
        "description": "If someone is smart and kind then they are young."
    },
    {
        "id": 12234,
        "statement": "is(anne, kind) :- is(anne, young).",
        "description": "If Anne is young then Anne is kind."
    },
    {
        "id": 12235,
        "statement": "is(X, blue) :- is(X, young), is(X, green).",
        "description": "Young, green people are blue."
    },
    {
        "id": 12236,
        "statement": "is(X, smart) :- is(X, quiet), is(X, rough).",
        "description": "All quiet, rough things are smart."
    },
    {
        "id": 12237,
        "statement": "is(charlie, cold) :- is(charlie, smart), is(charlie, white).",
        "description": "If Charlie is smart and Charlie is white then Charlie is cold."
    },
    {
        "id": 12238,
        "statement": "is(X, rough) :- is(X, white), is(X, blue).",
        "description": "White, blue things are rough."
    },
    {
        "id": 12239,
        "statement": "is(X, blue) :- is(X, red), is(X, cold).",
        "description": "All red, cold things are blue."
    },
    {
        "id": 12240,
        "statement": "is(dave, quiet) :- is(dave, smart).",
        "description": "If Dave is smart then Dave is quiet."
    },
    {
        "id": 12241,
        "statement": "is(X, green) :- eats(X, mouse).",
        "description": "If someone eats the mouse then they are green."
    },
    {
        "id": 12242,
        "statement": "is(bear, green) :- needs(X, mouse), not sees(X, bear).",
        "description": "If someone needs the mouse and they do not see the bear then the bear is green."
    },
    {
        "id": 12243,
        "statement": "is(X, rough) :- is(X, green), is(X, nice).",
        "description": "If someone is green and nice then they are rough."
    },
    {
        "id": 12244,
        "statement": "is(X, rough) :- needs(X, bear).",
        "description": "If someone needs the bear then they are rough."
    },
    {
        "id": 12245,
        "statement": "needs(X, mouse) :- needs(X, cow), not is(X, big).",
        "description": "If someone needs the cow and they are not big then they need the mouse."
    },
    {
        "id": 12246,
        "statement": "is(bear, nice) :- sees(X, mouse), needs(X, bear).",
        "description": "If someone sees the mouse and they need the bear then the bear is nice."
    },
    {
        "id": 12247,
        "statement": "needs(cow, mouse) :- sees(X, cow), is(X, big).",
        "description": "If someone sees the cow and they are big then the cow needs the mouse."
    },
    {
        "id": 12248,
        "statement": "eats(X, bear) :- is(X, rough).",
        "description": "If someone is rough then they eat the bear."
    },
    {
        "id": 12249,
        "statement": "is(X, white) :- is(X, nice), is(X, furry).",
        "description": "If something is nice and furry then it is white."
    },
    {
        "id": 12250,
        "statement": "is(X, white) :- is(X, cold), is(X, furry).",
        "description": "If something is cold and furry then it is white."
    },
    {
        "id": 12251,
        "statement": "is(X, nice) :- is(X, white), is(X, cold).",
        "description": "All white, cold things are nice."
    },
    {
        "id": 12252,
        "statement": "is(gary, nice) :- is(gary, round).",
        "description": "If Gary is round then Gary is nice."
    },
    {
        "id": 12253,
        "statement": "is(X, red) :- chases(X, tiger), needs(X, cow).",
        "description": "If someone chases the tiger and they need the cow then they are red."
    },
    {
        "id": 12254,
        "statement": "is(mouse, big) :- needs(X, mouse).",
        "description": "If someone needs the mouse then the mouse is big."
    },
    {
        "id": 12255,
        "statement": "is(lion, red) :- needs(lion, mouse), is(lion, round).",
        "description": "If the lion needs the mouse and the lion is round then the lion is red."
    },
    {
        "id": 12256,
        "statement": "needs(cow, mouse) :- is(cow, red).",
        "description": "If the cow is red then the cow needs the mouse."
    },
    {
        "id": 12257,
        "statement": "is(cow, round) :- needs(X, cow).",
        "description": "If someone needs the cow then the cow is round."
    },
    {
        "id": 12258,
        "statement": "eats(X, mouse) :- eats(X, lion).",
        "description": "If someone eats the lion then they eat the mouse."
    },
    {
        "id": 12259,
        "statement": "chases(X, lion) :- needs(X, cow).",
        "description": "If someone needs the cow then they chase the lion."
    },
    {
        "id": 12260,
        "statement": "is(X, nice) :- sees(X, squirrel), needs(squirrel, mouse).",
        "description": "If someone sees the squirrel and the squirrel needs the mouse then they are nice."
    },
    {
        "id": 12261,
        "statement": "needs(mouse, cow) :- is(X, young), visits(X, mouse).",
        "description": "If someone is young and they visit the mouse then the mouse needs the cow."
    },
    {
        "id": 12262,
        "statement": "visits(X, dog) :- sees(X, dog).",
        "description": "If someone sees the dog then they visit the dog."
    },
    {
        "id": 12263,
        "statement": "visits(X, mouse) :- needs(X, mouse).",
        "description": "If someone needs the mouse then they visit the mouse."
    },
    {
        "id": 12264,
        "statement": "needs(dog, mouse) :- is(dog, nice).",
        "description": "If the dog is nice then the dog needs the mouse."
    },
    {
        "id": 12265,
        "statement": "is(X, nice) :- needs(X, cow).",
        "description": "If someone needs the cow then they are nice."
    },
    {
        "id": 12266,
        "statement": "is(X, smart) :- is(X, young), is(X, big).",
        "description": "If someone is young and big then they are smart."
    },
    {
        "id": 12267,
        "statement": "is(X, big) :- is(X, blue).",
        "description": "If someone is blue then they are big."
    },
    {
        "id": 12268,
        "statement": "is(charlie, quiet) :- is(charlie, blue), is(charlie, big).",
        "description": "If Charlie is blue and Charlie is big then Charlie is quiet."
    },
    {
        "id": 12269,
        "statement": "is(fiona, big) :- is(fiona, smart), is(fiona, nice).",
        "description": "If Fiona is smart and Fiona is nice then Fiona is big."
    },
    {
        "id": 12270,
        "statement": "is(X, blue) :- is(X, round), is(X, quiet).",
        "description": "All round, quiet things are blue."
    },
    {
        "id": 12271,
        "statement": "is(X, furry) :- is(X, red), is(X, blue).",
        "description": "If something is red and blue then it is furry."
    },
    {
        "id": 12272,
        "statement": "is(charlie, furry) :- is(charlie, blue), is(charlie, green).",
        "description": "If Charlie is blue and Charlie is green then Charlie is furry."
    },
    {
        "id": 12273,
        "statement": "is(anne, red) :- is(anne, quiet).",
        "description": "If Anne is quiet then Anne is red."
    },
    {
        "id": 12274,
        "statement": "is(X, white) :- is(X, furry), is(X, quiet).",
        "description": "If someone is furry and quiet then they are white."
    },
    {
        "id": 12275,
        "statement": "is(X, rough) :- is(X, young), is(X, white).",
        "description": "If someone is young and white then they are rough."
    },
    {
        "id": 12276,
        "statement": "is(X, cold) :- is(X, green), is(X, furry).",
        "description": "If something is green and furry then it is cold."
    },
    {
        "id": 12277,
        "statement": "is(erin, furry) :- is(erin, white), is(erin, green).",
        "description": "If Erin is white and Erin is green then Erin is furry."
    },
    {
        "id": 12278,
        "statement": "is(X, furry) :- is(X, green), is(X, rough).",
        "description": "All green, rough things are furry."
    },
    {
        "id": 12279,
        "statement": "is(erin, green) :- is(erin, white).",
        "description": "If Erin is white then Erin is green."
    },
    {
        "id": 12280,
        "statement": "is(X, green) :- likes(X, squirrel), sees(X, squirrel).",
        "description": "If someone likes the squirrel and they see the squirrel then they are green."
    },
    {
        "id": 12281,
        "statement": "is(X, cold) :- likes(X, dog).",
        "description": "If someone likes the dog then they are cold."
    },
    {
        "id": 12282,
        "statement": "likes(X, bear) :- is(X, round), not is(X, big).",
        "description": "If someone is round and not big then they like the bear."
    },
    {
        "id": 12283,
        "statement": "likes(squirrel, bear) :- is(squirrel, green).",
        "description": "If the squirrel is green then the squirrel likes the bear."
    },
    {
        "id": 12284,
        "statement": "sees(X, squirrel) :- is(X, cold).",
        "description": "If someone is cold then they see the squirrel."
    },
    {
        "id": 12285,
        "statement": "is(X, red) :- is(X, kind), is(X, nice).",
        "description": "Kind, nice things are red."
    },
    {
        "id": 12286,
        "statement": "is(X, round) :- is(X, furry), is(X, red).",
        "description": "All furry, red things are round."
    },
    {
        "id": 12287,
        "statement": "sees(X, bear) :- needs(X, dog), is(X, young).",
        "description": "If something needs the dog and it is young then it sees the bear."
    },
    {
        "id": 12288,
        "statement": "needs(X, bear) :- needs(X, lion), is(X, green).",
        "description": "If something needs the lion and it is green then it needs the bear."
    },
    {
        "id": 12289,
        "statement": "sees(dog, tiger) :- needs(dog, lion).",
        "description": "If the dog needs the lion then the dog sees the tiger."
    },
    {
        "id": 12290,
        "statement": "needs(tiger, bear) :- sees(lion, tiger), is(lion, green).",
        "description": "If the lion sees the tiger and the lion is green then the tiger needs the bear."
    },
    {
        "id": 12291,
        "statement": "is(bear, green) :- needs(tiger, bear).",
        "description": "If the tiger needs the bear then the bear is green."
    },
    {
        "id": 12292,
        "statement": "visits(X, bear) :- is(X, young), not sees(X, lion).",
        "description": "If something is young and it does not see the lion then it visits the bear."
    },
    {
        "id": 12293,
        "statement": "sees(X, mouse) :- is(X, red), is(X, round).",
        "description": "If something is red and round then it sees the mouse."
    },
    {
        "id": 12294,
        "statement": "sees(cow, cat) :- sees(cow, mouse), likes(cow, mouse).",
        "description": "If the cow sees the mouse and the cow likes the mouse then the cow sees the cat."
    },
    {
        "id": 12295,
        "statement": "likes(X, mouse) :- is(X, cold).",
        "description": "If something is cold then it likes the mouse."
    },
    {
        "id": 12296,
        "statement": "visits(cow, cat) :- likes(mouse, cow), is(mouse, round).",
        "description": "If the mouse likes the cow and the mouse is round then the cow visits the cat."
    },
    {
        "id": 12297,
        "statement": "is(mouse, kind) :- visits(X, dog), likes(X, mouse).",
        "description": "If something visits the dog and it likes the mouse then the mouse is kind."
    },
    {
        "id": 12298,
        "statement": "sees(cat, cow) :- chases(cat, dog), not likes(dog, cat).",
        "description": "If the cat chases the dog and the dog does not like the cat then the cat sees the cow."
    },
    {
        "id": 12299,
        "statement": "likes(bald_eagle, cow) :- chases(dog, cat), not chases(cat, bald_eagle).",
        "description": "If the dog chases the cat and the cat does not chase the bald eagle then the bald eagle likes the cow."
    },
    {
        "id": 12300,
        "statement": "likes(X, dog) :- chases(X, dog), chases(dog, cow).",
        "description": "If something chases the dog and the dog chases the cow then it likes the dog."
    },
    {
        "id": 12301,
        "statement": "chases(cow, dog) :- is(cow, big).",
        "description": "If the cow is big then the cow chases the dog."
    },
    {
        "id": 12302,
        "statement": "sees(cat, bald_eagle) :- sees(X, cat).",
        "description": "If something sees the cat then the cat sees the bald eagle."
    },
    {
        "id": 12303,
        "statement": "is(X, big) :- sees(X, cat).",
        "description": "If something sees the cat then it is big."
    },
    {
        "id": 12304,
        "statement": "is(X, green) :- likes(X, cat).",
        "description": "If something likes the cat then it is green."
    },
    {
        "id": 12305,
        "statement": "sees(X, cat) :- likes(X, bald_eagle).",
        "description": "If something likes the bald eagle then it sees the cat."
    },
    {
        "id": 12306,
        "statement": "eats(mouse, tiger) :- visits(tiger, mouse).",
        "description": "If the tiger visits the mouse then the mouse eats the tiger."
    },
    {
        "id": 12307,
        "statement": "visits(cow, mouse) :- eats(cow, tiger), chases(cow, tiger).",
        "description": "If the cow eats the tiger and the cow chases the tiger then the cow visits the mouse."
    },
    {
        "id": 12308,
        "statement": "eats(cow, mouse) :- visits(X, tiger), chases(tiger, cow).",
        "description": "If something visits the tiger and the tiger chases the cow then the cow eats the mouse."
    },
    {
        "id": 12309,
        "statement": "chases(bald_eagle, cow) :- visits(X, bald_eagle).",
        "description": "If something visits the bald eagle then the bald eagle chases the cow."
    },
    {
        "id": 12310,
        "statement": "visits(X, mouse) :- eats(X, mouse).",
        "description": "If something eats the mouse then it visits the mouse."
    },
    {
        "id": 12311,
        "statement": "visits(cow, tiger) :- eats(X, cow), not is(X, blue).",
        "description": "If something eats the cow and it is not blue then the cow visits the tiger."
    },
    {
        "id": 12312,
        "statement": "eats(X, cow) :- chases(X, mouse), visits(X, mouse).",
        "description": "If something chases the mouse and it visits the mouse then it eats the cow."
    },
    {
        "id": 12313,
        "statement": "chases(X, cow) :- eats(X, cow).",
        "description": "If something eats the cow then it chases the cow."
    },
    {
        "id": 12314,
        "statement": "visits(X, tiger) :- visits(X, mouse).",
        "description": "If something visits the mouse then it visits the tiger."
    },
    {
        "id": 12315,
        "statement": "is(X, cold) :- is(X, white), is(X, young).",
        "description": "White, young things are cold."
    },
    {
        "id": 12316,
        "statement": "is(charlie, blue) :- is(charlie, green), is(charlie, kind).",
        "description": "If Charlie is green and Charlie is kind then Charlie is blue."
    },
    {
        "id": 12317,
        "statement": "is(charlie, red) :- is(charlie, young), is(charlie, cold).",
        "description": "If Charlie is young and Charlie is cold then Charlie is red."
    },
    {
        "id": 12318,
        "statement": "is(X, blue) :- is(X, cold), not is(X, green).",
        "description": "If something is cold and not green then it is blue."
    },
    {
        "id": 12319,
        "statement": "is(gary, kind) :- is(gary, blue), is(gary, cold).",
        "description": "If Gary is blue and Gary is cold then Gary is kind."
    },
    {
        "id": 12320,
        "statement": "is(X, young) :- is(X, blue), is(X, green).",
        "description": "If something is blue and green then it is young."
    },
    {
        "id": 12321,
        "statement": "is(charlie, smart) :- is(charlie, furry).",
        "description": "If Charlie is furry then Charlie is smart."
    },
    {
        "id": 12322,
        "statement": "is(X, green) :- is(X, smart), is(X, furry).",
        "description": "If someone is smart and furry then they are green."
    },
    {
        "id": 12323,
        "statement": "is(X, rough) :- is(X, nice), is(X, furry).",
        "description": "Nice, furry things are rough."
    },
    {
        "id": 12324,
        "statement": "is(X, rough) :- is(X, young), is(X, cold).",
        "description": "Young, cold things are rough."
    },
    {
        "id": 12325,
        "statement": "is(X, white) :- is(X, blue), is(X, nice).",
        "description": "If something is blue and nice then it is white."
    },
    {
        "id": 12326,
        "statement": "is(X, cold) :- is(X, rough), not is(X, red).",
        "description": "If something is rough and not red then it is cold."
    },
    {
        "id": 12327,
        "statement": "is(X, green) :- needs(X, tiger).",
        "description": "If something needs the tiger then it is green."
    },
    {
        "id": 12328,
        "statement": "is(bear, rough) :- needs(X, bear), chases(X, squirrel).",
        "description": "If something needs the bear and it chases the squirrel then the bear is rough."
    },
    {
        "id": 12329,
        "statement": "eats(tiger, bald_eagle) :- eats(bear, tiger).",
        "description": "If the bear eats the tiger then the tiger eats the bald eagle."
    },
    {
        "id": 12330,
        "statement": "is(squirrel, big) :- needs(bear, squirrel).",
        "description": "If the bear needs the squirrel then the squirrel is big."
    },
    {
        "id": 12331,
        "statement": "chases(tiger, squirrel) :- eats(X, squirrel), needs(squirrel, tiger).",
        "description": "If something eats the squirrel and the squirrel needs the tiger then the tiger chases the squirrel."
    },
    {
        "id": 12332,
        "statement": "is(X, green) :- is(X, round), is(X, red).",
        "description": "Round, red people are green."
    },
    {
        "id": 12333,
        "statement": "is(X, green) :- is(X, round), is(X, furry).",
        "description": "If someone is round and furry then they are green."
    },
    {
        "id": 12334,
        "statement": "is(X, blue) :- is(X, big), is(X, smart).",
        "description": "If someone is big and smart then they are blue."
    },
    {
        "id": 12335,
        "statement": "is(X, round) :- is(X, smart), is(X, young).",
        "description": "Smart, young people are round."
    },
    {
        "id": 12336,
        "statement": "is(X, young) :- is(X, green), is(X, blue).",
        "description": "All green, blue people are young."
    },
    {
        "id": 12337,
        "statement": "is(X, big) :- is(X, blue), is(X, young).",
        "description": "If someone is blue and young then they are big."
    },
    {
        "id": 12338,
        "statement": "is(harry, big) :- is(harry, round), is(harry, green).",
        "description": "If Harry is round and Harry is green then Harry is big."
    },
    {
        "id": 12339,
        "statement": "is(X, red) :- is(X, blue), is(X, quiet).",
        "description": "If someone is blue and quiet then they are red."
    },
    {
        "id": 12340,
        "statement": "is(X, red) :- is(X, nice), is(X, blue).",
        "description": "Nice, blue people are red."
    },
    {
        "id": 12341,
        "statement": "is(erin, white) :- is(erin, blue).",
        "description": "If Erin is blue then Erin is white."
    },
    {
        "id": 12342,
        "statement": "is(anne, quiet) :- is(anne, blue).",
        "description": "If Anne is blue then Anne is quiet."
    },
    {
        "id": 12343,
        "statement": "is(X, quiet) :- is(X, furry), is(X, red).",
        "description": "If someone is furry and red then they are quiet."
    },
    {
        "id": 12344,
        "statement": "is(erin, red) :- is(erin, nice).",
        "description": "If Erin is nice then Erin is red."
    },
    {
        "id": 12345,
        "statement": "sees(dog, cat) :- not sees(tiger, dog), not eats(dog, cat).",
        "description": "If the tiger does not see the dog and the dog does not eat the cat then the dog sees the cat."
    },
    {
        "id": 12346,
        "statement": "is(X, round) :- eats(X, cat), is(cat, round).",
        "description": "If something eats the cat and the cat is round then it is round."
    },
    {
        "id": 12347,
        "statement": "is(X, round) :- eats(X, mouse).",
        "description": "If something eats the mouse then it is round."
    },
    {
        "id": 12348,
        "statement": "eats(dog, mouse) :- visits(X, dog).",
        "description": "If something visits the dog then the dog eats the mouse."
    },
    {
        "id": 12349,
        "statement": "is(mouse, young) :- eats(X, mouse).",
        "description": "If something eats the mouse then the mouse is young."
    },
    {
        "id": 12350,
        "statement": "visits(cat, dog) :- is(X, round), not sees(X, cat).",
        "description": "If something is round and it does not see the cat then the cat visits the dog."
    },
    {
        "id": 12351,
        "statement": "visits(dog, mouse) :- is(dog, round), visits(dog, cat).",
        "description": "If the dog is round and the dog visits the cat then the dog visits the mouse."
    },
    {
        "id": 12352,
        "statement": "is(X, red) :- is(X, round), is(X, rough).",
        "description": "All round, rough things are red."
    },
    {
        "id": 12353,
        "statement": "is(X, smart) :- is(X, furry), is(X, round).",
        "description": "Furry, round things are smart."
    },
    {
        "id": 12354,
        "statement": "is(harry, rough) :- is(harry, smart), is(harry, furry).",
        "description": "If Harry is smart and Harry is furry then Harry is rough."
    },
    {
        "id": 12355,
        "statement": "likes(cow, cat) :- likes(X, cow), likes(X, lion).",
        "description": "If someone likes the cow and they like the lion then the cow likes the cat."
    },
    {
        "id": 12356,
        "statement": "needs(cat, lion) :- sees(lion, cat), not likes(lion, cow).",
        "description": "If the lion sees the cat and the lion does not like the cow then the cat needs the lion."
    },
    {
        "id": 12357,
        "statement": "needs(mouse, cat) :- likes(cat, mouse), likes(mouse, cat).",
        "description": "If the cat likes the mouse and the mouse likes the cat then the mouse needs the cat."
    },
    {
        "id": 12358,
        "statement": "likes(X, mouse) :- needs(X, cat).",
        "description": "If someone needs the cat then they like the mouse."
    },
    {
        "id": 12359,
        "statement": "needs(X, cat) :- likes(X, lion), not likes(X, cat).",
        "description": "If someone likes the lion and they do not like the cat then they need the cat."
    },
    {
        "id": 12360,
        "statement": "sees(X, cat) :- is(X, green), likes(X, mouse).",
        "description": "If someone is green and they like the mouse then they see the cat."
    },
    {
        "id": 12361,
        "statement": "sees(mouse, lion) :- needs(X, mouse), likes(X, mouse).",
        "description": "If someone needs the mouse and they like the mouse then the mouse sees the lion."
    },
    {
        "id": 12362,
        "statement": "is(mouse, round) :- needs(X, mouse), not sees(mouse, cat).",
        "description": "If someone needs the mouse and the mouse does not see the cat then the mouse is round."
    },
    {
        "id": 12363,
        "statement": "is(X, quiet) :- is(X, red), is(X, furry).",
        "description": "All red, furry people are quiet."
    },
    {
        "id": 12364,
        "statement": "is(bob, round) :- is(bob, rough), is(bob, quiet).",
        "description": "If Bob is rough and Bob is quiet then Bob is round."
    },
    {
        "id": 12365,
        "statement": "is(X, red) :- is(X, rough), is(X, round).",
        "description": "All rough, round people are red."
    },
    {
        "id": 12366,
        "statement": "is(X, kind) :- is(X, nice), chases(X, rabbit).",
        "description": "If someone is nice and they chase the rabbit then they are kind."
    },
    {
        "id": 12367,
        "statement": "needs(rabbit, bald_eagle) :- is(X, cold), visits(X, rabbit).",
        "description": "If someone is cold and they visit the rabbit then the rabbit needs the bald eagle."
    },
    {
        "id": 12368,
        "statement": "needs(X, lion) :- is(X, nice).",
        "description": "If someone is nice then they need the lion."
    },
    {
        "id": 12369,
        "statement": "is(X, young) :- needs(X, lion).",
        "description": "If someone needs the lion then they are young."
    },
    {
        "id": 12370,
        "statement": "is(X, blue) :- needs(X, rabbit).",
        "description": "If someone needs the rabbit then they are blue."
    },
    {
        "id": 12371,
        "statement": "visits(X, bald_eagle) :- visits(X, rabbit), is(rabbit, blue).",
        "description": "If someone visits the rabbit and the rabbit is blue then they visit the bald eagle."
    },
    {
        "id": 12372,
        "statement": "needs(X, rabbit) :- is(X, young).",
        "description": "If someone is young then they need the rabbit."
    },
    {
        "id": 12373,
        "statement": "needs(bald_eagle, lion) :- needs(X, bald_eagle), not is(bald_eagle, kind).",
        "description": "If someone needs the bald eagle and the bald eagle is not kind then the bald eagle needs the lion."
    },
    {
        "id": 12374,
        "statement": "is(X, furry) :- is(X, young), is(X, smart).",
        "description": "All young, smart things are furry."
    },
    {
        "id": 12375,
        "statement": "is(X, smart) :- is(X, young), is(X, blue).",
        "description": "Young, blue things are smart."
    },
    {
        "id": 12376,
        "statement": "is(harry, round) :- is(harry, nice), is(harry, rough).",
        "description": "If Harry is nice and Harry is rough then Harry is round."
    },
    {
        "id": 12377,
        "statement": "is(X, young) :- is(X, blue), is(X, nice).",
        "description": "All blue, nice things are young."
    },
    {
        "id": 12378,
        "statement": "is(X, furry) :- is(X, young), is(X, rough).",
        "description": "All young, rough things are furry."
    },
    {
        "id": 12379,
        "statement": "is(X, nice) :- is(X, rough), is(X, furry).",
        "description": "If something is rough and furry then it is nice."
    },
    {
        "id": 12380,
        "statement": "is(X, round) :- is(X, furry), is(X, nice).",
        "description": "If something is furry and nice then it is round."
    },
    {
        "id": 12381,
        "statement": "is(dave, blue) :- is(dave, young), is(dave, furry).",
        "description": "If Dave is young and Dave is furry then Dave is blue."
    },
    {
        "id": 12382,
        "statement": "likes(X, rabbit) :- chases(X, rabbit), sees(X, mouse).",
        "description": "If something chases the rabbit and it sees the mouse then it likes the rabbit."
    },
    {
        "id": 12383,
        "statement": "chases(rabbit, mouse) :- likes(X, rabbit).",
        "description": "If something likes the rabbit then the rabbit chases the mouse."
    },
    {
        "id": 12384,
        "statement": "likes(X, bear) :- chases(X, mouse).",
        "description": "If something chases the mouse then it likes the bear."
    },
    {
        "id": 12385,
        "statement": "likes(X, cow) :- is(X, cold).",
        "description": "If something is cold then it likes the cow."
    },
    {
        "id": 12386,
        "statement": "chases(cow, rabbit) :- is(X, nice), likes(X, cow).",
        "description": "If something is nice and it likes the cow then the cow chases the rabbit."
    },
    {
        "id": 12387,
        "statement": "chases(X, rabbit) :- likes(X, bear).",
        "description": "If something likes the bear then it chases the rabbit."
    },
    {
        "id": 12388,
        "statement": "chases(cow, mouse) :- sees(rabbit, cow).",
        "description": "If the rabbit sees the cow then the cow chases the mouse."
    },
    {
        "id": 12389,
        "statement": "is(X, rough) :- is(X, kind), is(X, red).",
        "description": "All kind, red things are rough."
    },
    {
        "id": 12390,
        "statement": "is(X, rough) :- is(X, kind), is(X, red).",
        "description": "Kind, red things are rough."
    },
    {
        "id": 12391,
        "statement": "is(fiona, round) :- is(fiona, furry), is(fiona, kind).",
        "description": "If Fiona is furry and Fiona is kind then Fiona is round."
    },
    {
        "id": 12392,
        "statement": "is(X, white) :- is(X, furry), is(X, round).",
        "description": "All furry, round things are white."
    },
    {
        "id": 12393,
        "statement": "is(dave, white) :- is(dave, furry), is(dave, nice).",
        "description": "If Dave is furry and Dave is nice then Dave is white."
    },
    {
        "id": 12394,
        "statement": "is(X, round) :- is(X, nice), is(X, furry).",
        "description": "Nice, furry things are round."
    },
    {
        "id": 12395,
        "statement": "is(X, nice) :- is(X, smart), is(X, kind).",
        "description": "All smart, kind things are nice."
    },
    {
        "id": 12396,
        "statement": "is(X, young) :- is(X, nice), is(X, furry).",
        "description": "If something is nice and furry then it is young."
    },
    {
        "id": 12397,
        "statement": "is(X, furry) :- is(X, nice), not is(X, smart).",
        "description": "If something is nice and not smart then it is furry."
    },
    {
        "id": 12398,
        "statement": "is(bob, red) :- is(bob, young).",
        "description": "If Bob is young then Bob is red."
    },
    {
        "id": 12399,
        "statement": "is(bob, blue) :- is(bob, kind), is(bob, nice).",
        "description": "If Bob is kind and Bob is nice then Bob is blue."
    },
    {
        "id": 12400,
        "statement": "is(X, round) :- is(X, white), is(X, cold).",
        "description": "White, cold things are round."
    },
    {
        "id": 12401,
        "statement": "is(bob, red) :- is(bob, kind), is(bob, round).",
        "description": "If Bob is kind and Bob is round then Bob is red."
    },
    {
        "id": 12402,
        "statement": "is(harry, smart) :- is(harry, white), is(harry, round).",
        "description": "If Harry is white and Harry is round then Harry is smart."
    },
    {
        "id": 12403,
        "statement": "is(harry, red) :- is(harry, young), is(harry, round).",
        "description": "If Harry is young and Harry is round then Harry is red."
    },
    {
        "id": 12404,
        "statement": "is(X, cold) :- is(X, red), is(X, white).",
        "description": "Red, white things are cold."
    },
    {
        "id": 12405,
        "statement": "is(X, smart) :- is(X, young), is(X, red).",
        "description": "If something is young and red then it is smart."
    },
    {
        "id": 12406,
        "statement": "chases(X, rabbit) :- visits(X, bald_eagle), likes(X, rabbit).",
        "description": "If someone visits the bald eagle and they like the rabbit then they chase the rabbit."
    },
    {
        "id": 12407,
        "statement": "is(mouse, rough) :- chases(X, bald_eagle), visits(bald_eagle, mouse).",
        "description": "If someone chases the bald eagle and the bald eagle visits the mouse then the mouse is rough."
    },
    {
        "id": 12408,
        "statement": "chases(mouse, tiger) :- visits(X, mouse), is(X, rough).",
        "description": "If someone visits the mouse and they are rough then the mouse chases the tiger."
    },
    {
        "id": 12409,
        "statement": "visits(X, mouse) :- is(X, kind), is(X, round).",
        "description": "If someone is kind and round then they visit the mouse."
    },
    {
        "id": 12410,
        "statement": "chases(X, bald_eagle) :- is(X, young), chases(X, squirrel).",
        "description": "If something is young and it chases the squirrel then it chases the bald eagle."
    },
    {
        "id": 12411,
        "statement": "chases(X, squirrel) :- is(X, rough), not is(X, big).",
        "description": "If something is rough and not big then it chases the squirrel."
    },
    {
        "id": 12412,
        "statement": "needs(X, squirrel) :- is(X, big), chases(X, rabbit).",
        "description": "If something is big and it chases the rabbit then it needs the squirrel."
    },
    {
        "id": 12413,
        "statement": "is(bald_eagle, rough) :- chases(X, bald_eagle).",
        "description": "If something chases the bald eagle then the bald eagle is rough."
    },
    {
        "id": 12414,
        "statement": "likes(X, rabbit) :- chases(X, bald_eagle).",
        "description": "If something chases the bald eagle then it likes the rabbit."
    },
    {
        "id": 12415,
        "statement": "chases(rabbit, bald_eagle) :- chases(X, rabbit).",
        "description": "If something chases the rabbit then the rabbit chases the bald eagle."
    },
    {
        "id": 12416,
        "statement": "chases(X, tiger) :- is(X, young).",
        "description": "If something is young then it chases the tiger."
    },
    {
        "id": 12417,
        "statement": "needs(X, bald_eagle) :- is(X, round).",
        "description": "If someone is round then they need the bald eagle."
    },
    {
        "id": 12418,
        "statement": "is(bald_eagle, round) :- needs(cow, bald_eagle).",
        "description": "If the cow needs the bald eagle then the bald eagle is round."
    },
    {
        "id": 12419,
        "statement": "needs(X, bald_eagle) :- sees(X, squirrel).",
        "description": "If someone sees the squirrel then they need the bald eagle."
    },
    {
        "id": 12420,
        "statement": "visits(cow, squirrel) :- visits(X, cow), is(cow, blue).",
        "description": "If someone visits the cow and the cow is blue then the cow visits the squirrel."
    },
    {
        "id": 12421,
        "statement": "is(cow, round) :- sees(X, cow).",
        "description": "If someone sees the cow then the cow is round."
    },
    {
        "id": 12422,
        "statement": "is(X, blue) :- visits(X, cow).",
        "description": "If someone visits the cow then they are blue."
    },
    {
        "id": 12423,
        "statement": "is(X, cold) :- needs(X, squirrel), sees(X, cow).",
        "description": "If someone needs the squirrel and they see the cow then they are cold."
    },
    {
        "id": 12424,
        "statement": "sees(squirrel, cow) :- needs(X, squirrel).",
        "description": "If someone needs the squirrel then the squirrel sees the cow."
    },
    {
        "id": 12425,
        "statement": "likes(dog, tiger) :- sees(X, dog), is(X, kind).",
        "description": "If something sees the dog and it is kind then the dog likes the tiger."
    },
    {
        "id": 12426,
        "statement": "is(X, kind) :- likes(X, tiger), needs(tiger, bald_eagle).",
        "description": "If something likes the tiger and the tiger needs the bald eagle then it is kind."
    },
    {
        "id": 12427,
        "statement": "likes(bald_eagle, cat) :- is(bald_eagle, blue), is(bald_eagle, kind).",
        "description": "If the bald eagle is blue and the bald eagle is kind then the bald eagle likes the cat."
    },
    {
        "id": 12428,
        "statement": "needs(X, dog) :- sees(X, bald_eagle).",
        "description": "If something sees the bald eagle then it needs the dog."
    },
    {
        "id": 12429,
        "statement": "sees(X, dog) :- is(X, kind).",
        "description": "If something is kind then it sees the dog."
    },
    {
        "id": 12430,
        "statement": "likes(X, cat) :- likes(X, bald_eagle), sees(bald_eagle, tiger).",
        "description": "If something likes the bald eagle and the bald eagle sees the tiger then it likes the cat."
    },
    {
        "id": 12431,
        "statement": "sees(tiger, dog) :- is(X, nice), likes(X, tiger).",
        "description": "If something is nice and it likes the tiger then the tiger sees the dog."
    },
    {
        "id": 12432,
        "statement": "sees(bald_eagle, cat) :- sees(X, bald_eagle), needs(bald_eagle, cat).",
        "description": "If something sees the bald eagle and the bald eagle needs the cat then the bald eagle sees the cat."
    },
    {
        "id": 12433,
        "statement": "is(X, nice) :- is(X, white), is(X, quiet).",
        "description": "All white, quiet people are nice."
    },
    {
        "id": 12434,
        "statement": "is(fiona, red) :- is(fiona, nice), is(fiona, young).",
        "description": "If Fiona is nice and Fiona is young then Fiona is red."
    },
    {
        "id": 12435,
        "statement": "is(X, red) :- is(X, nice), is(X, white).",
        "description": "All nice, white people are red."
    },
    {
        "id": 12436,
        "statement": "is(X, rough) :- is(X, nice), is(X, white).",
        "description": "All nice, white people are rough."
    },
    {
        "id": 12437,
        "statement": "is(bald_eagle, blue) :- likes(X, bald_eagle).",
        "description": "If someone likes the bald eagle then the bald eagle is blue."
    },
    {
        "id": 12438,
        "statement": "sees(bald_eagle, rabbit) :- is(bald_eagle, rough).",
        "description": "If the bald eagle is rough then the bald eagle sees the rabbit."
    },
    {
        "id": 12439,
        "statement": "needs(cow, rabbit) :- needs(X, cow), needs(X, bald_eagle).",
        "description": "If someone needs the cow and they need the bald eagle then the cow needs the rabbit."
    },
    {
        "id": 12440,
        "statement": "needs(X, bald_eagle) :- likes(X, rabbit).",
        "description": "If someone likes the rabbit then they need the bald eagle."
    },
    {
        "id": 12441,
        "statement": "is(X, blue) :- is(X, green), not sees(X, rabbit).",
        "description": "If someone is green and they do not see the rabbit then they are blue."
    },
    {
        "id": 12442,
        "statement": "is(rabbit, green) :- needs(X, rabbit).",
        "description": "If someone needs the rabbit then the rabbit is green."
    },
    {
        "id": 12443,
        "statement": "is(X, kind) :- is(X, quiet).",
        "description": "If something is quiet then it is kind."
    },
    {
        "id": 12444,
        "statement": "is(X, nice) :- is(X, smart), is(X, furry).",
        "description": "Smart, furry things are nice."
    },
    {
        "id": 12445,
        "statement": "is(X, kind) :- is(X, nice), is(X, smart).",
        "description": "If something is nice and smart then it is kind."
    },
    {
        "id": 12446,
        "statement": "is(X, rough) :- is(X, kind), is(X, nice).",
        "description": "If something is kind and nice then it is rough."
    },
    {
        "id": 12447,
        "statement": "is(X, smart) :- is(X, kind), is(X, round).",
        "description": "Kind, round things are smart."
    },
    {
        "id": 12448,
        "statement": "is(X, cold) :- is(X, round), not is(X, rough).",
        "description": "If something is round and not rough then it is cold."
    },
    {
        "id": 12449,
        "statement": "is(X, rough) :- is(X, red), is(X, furry).",
        "description": "All red, furry people are rough."
    },
    {
        "id": 12450,
        "statement": "is(X, white) :- is(X, rough), is(X, furry).",
        "description": "Rough, furry people are white."
    },
    {
        "id": 12451,
        "statement": "is(dave, round) :- is(dave, red).",
        "description": "If Dave is red then Dave is round."
    },
    {
        "id": 12452,
        "statement": "is(X, furry) :- is(X, nice), is(X, round).",
        "description": "Nice, round people are furry."
    },
    {
        "id": 12453,
        "statement": "is(X, white) :- is(X, blue), is(X, rough).",
        "description": "All blue, rough things are white."
    },
    {
        "id": 12454,
        "statement": "is(X, big) :- is(X, rough), is(X, quiet).",
        "description": "Rough, quiet things are big."
    },
    {
        "id": 12455,
        "statement": "is(X, quiet) :- is(X, smart), is(X, blue).",
        "description": "All smart, blue things are quiet."
    },
    {
        "id": 12456,
        "statement": "is(X, smart) :- is(X, blue), is(X, red).",
        "description": "All blue, red things are smart."
    },
    {
        "id": 12457,
        "statement": "is(X, red) :- is(X, rough), is(X, white).",
        "description": "All rough, white things are red."
    },
    {
        "id": 12458,
        "statement": "is(X, nice) :- is(X, red), is(X, cold).",
        "description": "All red, cold people are nice."
    },
    {
        "id": 12459,
        "statement": "is(X, kind) :- is(X, white), is(X, rough).",
        "description": "All white, rough people are kind."
    },
    {
        "id": 12460,
        "statement": "is(erin, rough) :- is(erin, white), is(erin, red).",
        "description": "If Erin is white and Erin is red then Erin is rough."
    },
    {
        "id": 12461,
        "statement": "is(fiona, red) :- is(fiona, cold).",
        "description": "If Fiona is cold then Fiona is red."
    },
    {
        "id": 12462,
        "statement": "needs(X, cat) :- is(X, green), needs(X, cow).",
        "description": "If someone is green and they need the cow then they need the cat."
    },
    {
        "id": 12463,
        "statement": "chases(bear, cat) :- needs(X, bear), is(X, kind).",
        "description": "If someone needs the bear and they are kind then the bear chases the cat."
    },
    {
        "id": 12464,
        "statement": "visits(bear, cow) :- is(bear, big).",
        "description": "If the bear is big then the bear visits the cow."
    },
    {
        "id": 12465,
        "statement": "needs(bear, cow) :- visits(X, rabbit), chases(X, bear).",
        "description": "If someone visits the rabbit and they chase the bear then the bear needs the cow."
    },
    {
        "id": 12466,
        "statement": "chases(cow, bear) :- is(X, green), chases(X, cow).",
        "description": "If someone is green and they chase the cow then the cow chases the bear."
    },
    {
        "id": 12467,
        "statement": "is(rabbit, red) :- needs(X, rabbit).",
        "description": "If someone needs the rabbit then the rabbit is red."
    },
    {
        "id": 12468,
        "statement": "needs(X, rabbit) :- is(X, rough), needs(X, cow).",
        "description": "If someone is rough and they need the cow then they need the rabbit."
    },
    {
        "id": 12469,
        "statement": "chases(rabbit, dog) :- is(rabbit, kind).",
        "description": "If the rabbit is kind then the rabbit chases the dog."
    },
    {
        "id": 12470,
        "statement": "is(X, kind) :- chases(X, squirrel).",
        "description": "If something chases the squirrel then it is kind."
    },
    {
        "id": 12471,
        "statement": "likes(rabbit, squirrel) :- is(X, green), chases(X, rabbit).",
        "description": "If something is green and it chases the rabbit then the rabbit likes the squirrel."
    },
    {
        "id": 12472,
        "statement": "chases(dog, rabbit) :- is(dog, kind).",
        "description": "If the dog is kind then the dog chases the rabbit."
    },
    {
        "id": 12473,
        "statement": "chases(rabbit, squirrel) :- visits(squirrel, rabbit).",
        "description": "If the squirrel visits the rabbit then the rabbit chases the squirrel."
    },
    {
        "id": 12474,
        "statement": "is(squirrel, kind) :- chases(rabbit, squirrel).",
        "description": "If the rabbit chases the squirrel then the squirrel is kind."
    },
    {
        "id": 12475,
        "statement": "is(X, red) :- is(X, smart), is(X, young).",
        "description": "If something is smart and young then it is red."
    },
    {
        "id": 12476,
        "statement": "is(X, round) :- is(X, red), not is(X, young).",
        "description": "If something is red and not young then it is round."
    },
    {
        "id": 12477,
        "statement": "is(X, green) :- is(X, young), is(X, kind).",
        "description": "Young, kind things are green."
    },
    {
        "id": 12478,
        "statement": "is(X, green) :- is(X, quiet), is(X, round).",
        "description": "If something is quiet and round then it is green."
    },
    {
        "id": 12479,
        "statement": "is(X, kind) :- is(X, green), is(X, young).",
        "description": "Green, young things are kind."
    },
    {
        "id": 12480,
        "statement": "likes(lion, cow) :- likes(X, lion).",
        "description": "If someone likes the lion then the lion likes the cow."
    },
    {
        "id": 12481,
        "statement": "likes(tiger, cow) :- is(X, green), eats(X, tiger).",
        "description": "If someone is green and they eat the tiger then the tiger likes the cow."
    },
    {
        "id": 12482,
        "statement": "eats(lion, cow) :- is(lion, young), chases(lion, rabbit).",
        "description": "If the lion is young and the lion chases the rabbit then the lion eats the cow."
    },
    {
        "id": 12483,
        "statement": "likes(X, lion) :- eats(X, cow).",
        "description": "If someone eats the cow then they like the lion."
    },
    {
        "id": 12484,
        "statement": "is(X, green) :- likes(X, cow).",
        "description": "If someone likes the cow then they are green."
    },
    {
        "id": 12485,
        "statement": "eats(rabbit, tiger) :- is(X, young), eats(X, rabbit).",
        "description": "If someone is young and they eat the rabbit then the rabbit eats the tiger."
    },
    {
        "id": 12486,
        "statement": "likes(X, tiger) :- chases(X, tiger), chases(tiger, rabbit).",
        "description": "If someone chases the tiger and the tiger chases the rabbit then they like the tiger."
    },
    {
        "id": 12487,
        "statement": "chases(X, lion) :- is(X, green).",
        "description": "If someone is green then they chase the lion."
    },
    {
        "id": 12488,
        "statement": "is(X, furry) :- is(X, young), is(X, round).",
        "description": "Young, round things are furry."
    },
    {
        "id": 12489,
        "statement": "is(X, furry) :- is(X, round), is(X, red).",
        "description": "If something is round and red then it is furry."
    },
    {
        "id": 12490,
        "statement": "is(dave, blue) :- is(dave, round).",
        "description": "If Dave is round then Dave is blue."
    },
    {
        "id": 12491,
        "statement": "is(X, rough) :- is(X, smart), is(X, round).",
        "description": "Smart, round people are rough."
    },
    {
        "id": 12492,
        "statement": "is(X, smart) :- is(X, round), not is(X, furry).",
        "description": "If someone is round and not furry then they are smart."
    },
    {
        "id": 12493,
        "statement": "is(X, red) :- is(X, kind), is(X, blue).",
        "description": "Kind, blue people are red."
    },
    {
        "id": 12494,
        "statement": "is(X, red) :- is(X, furry), not is(X, smart).",
        "description": "If someone is furry and not smart then they are red."
    },
    {
        "id": 12495,
        "statement": "is(gary, young) :- is(gary, red).",
        "description": "If Gary is red then Gary is young."
    },
    {
        "id": 12496,
        "statement": "is(gary, smart) :- is(gary, green), is(gary, rough).",
        "description": "If Gary is green and Gary is rough then Gary is smart."
    },
    {
        "id": 12497,
        "statement": "is(dave, nice) :- is(dave, green), is(dave, round).",
        "description": "If Dave is green and Dave is round then Dave is nice."
    },
    {
        "id": 12498,
        "statement": "is(X, young) :- is(X, round), is(X, white).",
        "description": "All round, white things are young."
    },
    {
        "id": 12499,
        "statement": "is(X, white) :- is(X, green), is(X, young).",
        "description": "Green, young things are white."
    },
    {
        "id": 12500,
        "statement": "is(X, young) :- is(X, big), is(X, kind).",
        "description": "If something is big and kind then it is young."
    },
    {
        "id": 12501,
        "statement": "is(X, round) :- sees(X, cat), sees(cat, dog).",
        "description": "If something sees the cat and the cat sees the dog then it is round."
    },
    {
        "id": 12502,
        "statement": "sees(dog, cat) :- eats(X, dog).",
        "description": "If something eats the dog then the dog sees the cat."
    },
    {
        "id": 12503,
        "statement": "likes(rabbit, cat) :- eats(cat, rabbit), sees(cat, dog).",
        "description": "If the cat eats the rabbit and the cat sees the dog then the rabbit likes the cat."
    },
    {
        "id": 12504,
        "statement": "sees(X, rabbit) :- eats(X, dog).",
        "description": "If something eats the dog then it sees the rabbit."
    },
    {
        "id": 12505,
        "statement": "likes(X, rabbit) :- sees(X, cat), sees(cat, dog).",
        "description": "If something sees the cat and the cat sees the dog then it likes the rabbit."
    },
    {
        "id": 12506,
        "statement": "eats(rabbit, dog) :- eats(X, rabbit).",
        "description": "If something eats the rabbit then the rabbit eats the dog."
    },
    {
        "id": 12507,
        "statement": "is(X, blue) :- likes(X, bald_eagle), likes(bald_eagle, rabbit).",
        "description": "If something likes the bald eagle and the bald eagle likes the rabbit then it is blue."
    },
    {
        "id": 12508,
        "statement": "sees(X, cat) :- is(X, blue).",
        "description": "If something is blue then it sees the cat."
    },
    {
        "id": 12509,
        "statement": "is(bald_eagle, blue) :- sees(bald_eagle, rabbit).",
        "description": "If the bald eagle sees the rabbit then the bald eagle is blue."
    },
    {
        "id": 12510,
        "statement": "is(X, quiet) :- is(X, red), is(X, blue).",
        "description": "If something is red and blue then it is quiet."
    },
    {
        "id": 12511,
        "statement": "is(erin, cold) :- is(erin, smart), is(erin, blue).",
        "description": "If Erin is smart and Erin is blue then Erin is cold."
    },
    {
        "id": 12512,
        "statement": "is(X, young) :- is(X, smart), is(X, nice).",
        "description": "If something is smart and nice then it is young."
    },
    {
        "id": 12513,
        "statement": "is(X, big) :- is(X, smart), is(X, round).",
        "description": "All smart, round things are big."
    },
    {
        "id": 12514,
        "statement": "is(X, furry) :- is(X, quiet), is(X, rough).",
        "description": "Quiet, rough people are furry."
    },
    {
        "id": 12515,
        "statement": "is(fiona, green) :- is(fiona, blue), is(fiona, quiet).",
        "description": "If Fiona is blue and Fiona is quiet then Fiona is green."
    },
    {
        "id": 12516,
        "statement": "is(X, rough) :- is(X, green), is(X, blue).",
        "description": "If someone is green and blue then they are rough."
    },
    {
        "id": 12517,
        "statement": "is(X, blue) :- is(X, cold).",
        "description": "If someone is cold then they are blue."
    },
    {
        "id": 12518,
        "statement": "eats(X, lion) :- is(X, nice).",
        "description": "If something is nice then it eats the lion."
    },
    {
        "id": 12519,
        "statement": "eats(X, lion) :- is(X, big), not eats(X, squirrel).",
        "description": "If something is big and it does not eat the squirrel then it eats the lion."
    },
    {
        "id": 12520,
        "statement": "eats(X, lion) :- sees(X, cat), sees(X, lion).",
        "description": "If something sees the cat and it sees the lion then it eats the lion."
    },
    {
        "id": 12521,
        "statement": "likes(X, lion) :- sees(X, cat).",
        "description": "If something sees the cat then it likes the lion."
    },
    {
        "id": 12522,
        "statement": "is(X, rough) :- eats(X, lion).",
        "description": "If something eats the lion then it is rough."
    },
    {
        "id": 12523,
        "statement": "is(cat, nice) :- is(X, rough), sees(X, cat).",
        "description": "If something is rough and it sees the cat then the cat is nice."
    },
    {
        "id": 12524,
        "statement": "is(squirrel, nice) :- eats(bald_eagle, squirrel), not likes(bald_eagle, squirrel).",
        "description": "If the bald eagle eats the squirrel and the bald eagle does not like the squirrel then the squirrel is nice."
    },
    {
        "id": 12525,
        "statement": "likes(squirrel, lion) :- sees(X, bald_eagle), not sees(bald_eagle, squirrel).",
        "description": "If something sees the bald eagle and the bald eagle does not see the squirrel then the squirrel likes the lion."
    },
    {
        "id": 12526,
        "statement": "eats(squirrel, bald_eagle) :- likes(X, squirrel), not is(squirrel, nice).",
        "description": "If something likes the squirrel and the squirrel is not nice then the squirrel eats the bald eagle."
    },
    {
        "id": 12527,
        "statement": "is(X, kind) :- is(X, quiet), is(X, white).",
        "description": "Quiet, white people are kind."
    },
    {
        "id": 12528,
        "statement": "is(X, round) :- is(X, red), is(X, white).",
        "description": "All red, white people are round."
    },
    {
        "id": 12529,
        "statement": "is(X, round) :- is(X, quiet), is(X, young).",
        "description": "All quiet, young people are round."
    },
    {
        "id": 12530,
        "statement": "is(X, young) :- is(X, quiet), is(X, cold).",
        "description": "Quiet, cold people are young."
    },
    {
        "id": 12531,
        "statement": "is(X, young) :- is(X, green), is(X, big).",
        "description": "Green, big things are young."
    },
    {
        "id": 12532,
        "statement": "is(harry, young) :- is(harry, kind), is(harry, green).",
        "description": "If Harry is kind and Harry is green then Harry is young."
    },
    {
        "id": 12533,
        "statement": "is(bob, big) :- is(bob, kind).",
        "description": "If Bob is kind then Bob is big."
    },
    {
        "id": 12534,
        "statement": "is(X, big) :- is(X, rough), is(X, green).",
        "description": "If something is rough and green then it is big."
    },
    {
        "id": 12535,
        "statement": "is(X, big) :- is(X, kind), is(X, blue).",
        "description": "All kind, blue things are big."
    },
    {
        "id": 12536,
        "statement": "is(X, green) :- is(X, young), is(X, furry).",
        "description": "Young, furry things are green."
    },
    {
        "id": 12537,
        "statement": "is(X, furry) :- is(X, nice), is(X, white).",
        "description": "All nice, white things are furry."
    },
    {
        "id": 12538,
        "statement": "is(X, white) :- is(X, young), is(X, quiet).",
        "description": "Young, quiet things are white."
    },
    {
        "id": 12539,
        "statement": "is(X, smart) :- is(X, young), is(X, green).",
        "description": "All young, green people are smart."
    },
    {
        "id": 12540,
        "statement": "is(X, blue) :- is(X, round), is(X, smart).",
        "description": "All round, smart people are blue."
    },
    {
        "id": 12541,
        "statement": "is(X, green) :- is(X, nice), is(X, young).",
        "description": "If someone is nice and young then they are green."
    },
    {
        "id": 12542,
        "statement": "chases(X, tiger) :- sees(X, bear), sees(X, tiger).",
        "description": "If someone sees the bear and they see the tiger then they chase the tiger."
    },
    {
        "id": 12543,
        "statement": "chases(X, lion) :- sees(X, mouse), sees(mouse, tiger).",
        "description": "If someone sees the mouse and the mouse sees the tiger then they chase the lion."
    },
    {
        "id": 12544,
        "statement": "is(lion, red) :- chases(X, mouse), sees(X, lion).",
        "description": "If someone chases the mouse and they see the lion then the lion is red."
    },
    {
        "id": 12545,
        "statement": "chases(X, mouse) :- likes(X, bear).",
        "description": "If someone likes the bear then they chase the mouse."
    },
    {
        "id": 12546,
        "statement": "is(bear, big) :- sees(X, bear), chases(bear, lion).",
        "description": "If someone sees the bear and the bear chases the lion then the bear is big."
    },
    {
        "id": 12547,
        "statement": "sees(tiger, lion) :- chases(X, tiger).",
        "description": "If someone chases the tiger then the tiger sees the lion."
    },
    {
        "id": 12548,
        "statement": "sees(X, tiger) :- chases(X, mouse).",
        "description": "If someone chases the mouse then they see the tiger."
    },
    {
        "id": 12549,
        "statement": "chases(X, bear) :- likes(X, mouse).",
        "description": "If someone likes the mouse then they chase the bear."
    },
    {
        "id": 12550,
        "statement": "is(X, green) :- is(X, cold), is(X, smart).",
        "description": "If something is cold and smart then it is green."
    },
    {
        "id": 12551,
        "statement": "is(X, cold) :- is(X, blue), is(X, green).",
        "description": "All blue, green things are cold."
    },
    {
        "id": 12552,
        "statement": "is(X, smart) :- is(X, white), is(X, cold).",
        "description": "If something is white and cold then it is smart."
    },
    {
        "id": 12553,
        "statement": "is(X, white) :- is(X, cold), is(X, nice).",
        "description": "Cold, nice things are white."
    },
    {
        "id": 12554,
        "statement": "is(X, nice) :- is(X, blue), is(X, cold).",
        "description": "Blue, cold things are nice."
    },
    {
        "id": 12555,
        "statement": "is(gary, nice) :- is(gary, smart), is(gary, white).",
        "description": "If Gary is smart and Gary is white then Gary is nice."
    },
    {
        "id": 12556,
        "statement": "is(X, big) :- is(X, blue), is(X, cold).",
        "description": "Blue, cold people are big."
    },
    {
        "id": 12557,
        "statement": "is(X, quiet) :- is(X, big), is(X, kind).",
        "description": "Big, kind people are quiet."
    },
    {
        "id": 12558,
        "statement": "is(X, blue) :- is(X, green), is(X, quiet).",
        "description": "If someone is green and quiet then they are blue."
    },
    {
        "id": 12559,
        "statement": "is(charlie, smart) :- is(charlie, kind), is(charlie, big).",
        "description": "If Charlie is kind and Charlie is big then Charlie is smart."
    },
    {
        "id": 12560,
        "statement": "is(X, smart) :- is(X, big), is(X, green).",
        "description": "All big, green people are smart."
    },
    {
        "id": 12561,
        "statement": "is(X, smart) :- is(X, green), is(X, blue).",
        "description": "Green, blue people are smart."
    },
    {
        "id": 12562,
        "statement": "is(X, kind) :- is(X, big), is(X, red).",
        "description": "Big, red people are kind."
    },
    {
        "id": 12563,
        "statement": "is(X, big) :- is(X, smart), is(X, furry).",
        "description": "Smart, furry people are big."
    },
    {
        "id": 12564,
        "statement": "is(X, kind) :- is(X, smart), is(X, young).",
        "description": "All smart, young people are kind."
    },
    {
        "id": 12565,
        "statement": "is(rabbit, green) :- is(rabbit, cold), not likes(rabbit, cow).",
        "description": "If the rabbit is cold and the rabbit does not like the cow then the rabbit is green."
    },
    {
        "id": 12566,
        "statement": "is(cow, nice) :- is(X, cold), chases(X, cow).",
        "description": "If something is cold and it chases the cow then the cow is nice."
    },
    {
        "id": 12567,
        "statement": "is(lion, cold) :- needs(lion, mouse), not chases(lion, mouse).",
        "description": "If the lion needs the mouse and the lion does not chase the mouse then the lion is cold."
    },
    {
        "id": 12568,
        "statement": "is(X, rough) :- chases(X, cow), chases(cow, lion).",
        "description": "If something chases the cow and the cow chases the lion then it is rough."
    },
    {
        "id": 12569,
        "statement": "is(X, rough) :- chases(X, lion), needs(X, cow).",
        "description": "If something chases the lion and it needs the cow then it is rough."
    },
    {
        "id": 12570,
        "statement": "likes(X, rabbit) :- is(X, nice), is(X, rough).",
        "description": "If something is nice and rough then it likes the rabbit."
    },
    {
        "id": 12571,
        "statement": "needs(mouse, lion) :- likes(X, mouse).",
        "description": "If something likes the mouse then the mouse needs the lion."
    },
    {
        "id": 12572,
        "statement": "chases(X, cow) :- is(X, rough), is(X, nice).",
        "description": "If something is rough and nice then it chases the cow."
    },
    {
        "id": 12573,
        "statement": "is(cat, young) :- not visits(rabbit, cat).",
        "description": "If the rabbit does not visit the cat then the cat is young."
    },
    {
        "id": 12574,
        "statement": "chases(X, mouse) :- is(X, big), is(X, rough).",
        "description": "If something is big and rough then it chases the mouse."
    },
    {
        "id": 12575,
        "statement": "chases(tiger, rabbit) :- eats(X, cat), not visits(X, tiger).",
        "description": "If something eats the cat and it does not visit the tiger then the tiger chases the rabbit."
    },
    {
        "id": 12576,
        "statement": "is(rabbit, big) :- eats(X, rabbit).",
        "description": "If something eats the rabbit then the rabbit is big."
    },
    {
        "id": 12577,
        "statement": "is(rabbit, blue) :- eats(cat, rabbit), eats(cat, tiger).",
        "description": "If the cat eats the rabbit and the cat eats the tiger then the rabbit is blue."
    },
    {
        "id": 12578,
        "statement": "eats(rabbit, tiger) :- visits(X, rabbit), is(X, big).",
        "description": "If something visits the rabbit and it is big then the rabbit eats the tiger."
    },
    {
        "id": 12579,
        "statement": "visits(rabbit, mouse) :- chases(X, rabbit), not eats(rabbit, tiger).",
        "description": "If something chases the rabbit and the rabbit does not eat the tiger then the rabbit visits the mouse."
    },
    {
        "id": 12580,
        "statement": "is(X, white) :- is(X, red), is(X, nice).",
        "description": "If someone is red and nice then they are white."
    },
    {
        "id": 12581,
        "statement": "is(X, round) :- is(X, smart), is(X, red).",
        "description": "All smart, red people are round."
    },
    {
        "id": 12582,
        "statement": "is(X, red) :- is(X, round), is(X, white).",
        "description": "All round, white people are red."
    },
    {
        "id": 12583,
        "statement": "is(charlie, round) :- is(charlie, cold).",
        "description": "If Charlie is cold then Charlie is round."
    },
    {
        "id": 12584,
        "statement": "is(X, round) :- is(X, green), is(X, white).",
        "description": "All green, white things are round."
    },
    {
        "id": 12585,
        "statement": "is(X, green) :- is(X, red), is(X, big).",
        "description": "Red, big things are green."
    },
    {
        "id": 12586,
        "statement": "is(fiona, red) :- is(fiona, green).",
        "description": "If Fiona is green then Fiona is red."
    },
    {
        "id": 12587,
        "statement": "is(X, cold) :- is(X, blue), is(X, nice).",
        "description": "If something is blue and nice then it is cold."
    },
    {
        "id": 12588,
        "statement": "is(X, quiet) :- is(X, rough), is(X, young).",
        "description": "Rough, young things are quiet."
    },
    {
        "id": 12589,
        "statement": "is(X, cold) :- is(X, nice), is(X, blue).",
        "description": "Nice, blue things are cold."
    },
    {
        "id": 12590,
        "statement": "is(X, young) :- is(X, smart), is(X, quiet).",
        "description": "Smart, quiet things are young."
    },
    {
        "id": 12591,
        "statement": "is(bob, kind) :- is(bob, young).",
        "description": "If Bob is young then Bob is kind."
    },
    {
        "id": 12592,
        "statement": "is(X, cold) :- is(X, kind), is(X, big).",
        "description": "All kind, big people are cold."
    },
    {
        "id": 12593,
        "statement": "is(X, kind) :- is(X, green), is(X, big).",
        "description": "All green, big people are kind."
    },
    {
        "id": 12594,
        "statement": "is(X, round) :- is(X, cold), is(X, big).",
        "description": "Cold, big people are round."
    },
    {
        "id": 12595,
        "statement": "is(X, red) :- is(X, young), is(X, kind).",
        "description": "If someone is young and kind then they are red."
    },
    {
        "id": 12596,
        "statement": "is(X, nice) :- is(X, furry), is(X, green).",
        "description": "Furry, green people are nice."
    },
    {
        "id": 12597,
        "statement": "is(X, blue) :- is(X, nice), is(X, rough).",
        "description": "All nice, rough people are blue."
    },
    {
        "id": 12598,
        "statement": "is(X, blue) :- is(X, white), is(X, green).",
        "description": "All white, green people are blue."
    },
    {
        "id": 12599,
        "statement": "is(X, green) :- is(X, nice), is(X, white).",
        "description": "All nice, white people are green."
    },
    {
        "id": 12600,
        "statement": "is(X, white) :- is(X, blue), is(X, green).",
        "description": "If someone is blue and green then they are white."
    },
    {
        "id": 12601,
        "statement": "is(X, cold) :- is(X, white), is(X, red).",
        "description": "All white, red things are cold."
    },
    {
        "id": 12602,
        "statement": "is(X, red) :- is(X, white), is(X, rough).",
        "description": "If something is white and rough then it is red."
    },
    {
        "id": 12603,
        "statement": "is(X, white) :- is(X, kind), is(X, nice).",
        "description": "All kind, nice things are white."
    },
    {
        "id": 12604,
        "statement": "is(dave, rough) :- is(dave, furry), is(dave, nice).",
        "description": "If Dave is furry and Dave is nice then Dave is rough."
    },
    {
        "id": 12605,
        "statement": "is(anne, white) :- is(anne, cold), is(anne, nice).",
        "description": "If Anne is cold and Anne is nice then Anne is white."
    },
    {
        "id": 12606,
        "statement": "is(X, blue) :- is(X, young), is(X, nice).",
        "description": "Young, nice people are blue."
    },
    {
        "id": 12607,
        "statement": "is(X, green) :- is(X, young), is(X, blue).",
        "description": "If someone is young and blue then they are green."
    },
    {
        "id": 12608,
        "statement": "sees(X, bald_eagle) :- is(X, cold).",
        "description": "If someone is cold then they see the bald eagle."
    },
    {
        "id": 12609,
        "statement": "eats(cow, bald_eagle) :- is(cat, round), sees(cat, cow).",
        "description": "If the cat is round and the cat sees the cow then the cow eats the bald eagle."
    },
    {
        "id": 12610,
        "statement": "eats(X, bald_eagle) :- visits(X, bald_eagle).",
        "description": "If someone visits the bald eagle then they eat the bald eagle."
    },
    {
        "id": 12611,
        "statement": "sees(X, cat) :- sees(X, cow).",
        "description": "If someone sees the cow then they see the cat."
    },
    {
        "id": 12612,
        "statement": "visits(cow, bald_eagle) :- is(X, young), visits(X, cow).",
        "description": "If someone is young and they visit the cow then the cow visits the bald eagle."
    },
    {
        "id": 12613,
        "statement": "is(X, cold) :- visits(X, cow).",
        "description": "If someone visits the cow then they are cold."
    },
    {
        "id": 12614,
        "statement": "is(cow, red) :- visits(X, cow), sees(X, bald_eagle).",
        "description": "If someone visits the cow and they see the bald eagle then the cow is red."
    },
    {
        "id": 12615,
        "statement": "needs(X, dog) :- needs(X, cow).",
        "description": "If someone needs the cow then they need the dog."
    },
    {
        "id": 12616,
        "statement": "is(X, young) :- needs(X, lion), needs(X, mouse).",
        "description": "If someone needs the lion and they need the mouse then they are young."
    },
    {
        "id": 12617,
        "statement": "is(X, green) :- sees(X, dog), chases(dog, cow).",
        "description": "If someone sees the dog and the dog chases the cow then they are green."
    },
    {
        "id": 12618,
        "statement": "is(dog, red) :- sees(X, mouse), needs(mouse, dog).",
        "description": "If someone sees the mouse and the mouse needs the dog then the dog is red."
    },
    {
        "id": 12619,
        "statement": "needs(X, cow) :- needs(X, mouse), sees(mouse, dog).",
        "description": "If someone needs the mouse and the mouse sees the dog then they need the cow."
    },
    {
        "id": 12620,
        "statement": "is(X, young) :- chases(X, dog), is(dog, green).",
        "description": "If someone chases the dog and the dog is green then they are young."
    },
    {
        "id": 12621,
        "statement": "is(X, green) :- sees(X, lion), chases(lion, dog).",
        "description": "If someone sees the lion and the lion chases the dog then they are green."
    },
    {
        "id": 12622,
        "statement": "chases(mouse, lion) :- chases(mouse, cow), is(mouse, young).",
        "description": "If the mouse chases the cow and the mouse is young then the mouse chases the lion."
    },
    {
        "id": 12623,
        "statement": "is(X, blue) :- is(X, nice), is(X, smart).",
        "description": "Nice, smart people are blue."
    },
    {
        "id": 12624,
        "statement": "is(X, young) :- is(X, quiet), is(X, smart).",
        "description": "If someone is quiet and smart then they are young."
    },
    {
        "id": 12625,
        "statement": "is(X, nice) :- is(X, smart), is(X, young).",
        "description": "If someone is smart and young then they are nice."
    },
    {
        "id": 12626,
        "statement": "is(X, white) :- is(X, rough), is(X, smart).",
        "description": "All rough, smart people are white."
    },
    {
        "id": 12627,
        "statement": "is(X, young) :- is(X, cold), is(X, furry).",
        "description": "If something is cold and furry then it is young."
    },
    {
        "id": 12628,
        "statement": "is(X, quiet) :- is(X, white), is(X, young).",
        "description": "All white, young things are quiet."
    },
    {
        "id": 12629,
        "statement": "is(X, cold) :- is(X, young), is(X, furry).",
        "description": "Young, furry things are cold."
    },
    {
        "id": 12630,
        "statement": "is(erin, red) :- is(erin, kind).",
        "description": "If Erin is kind then Erin is red."
    },
    {
        "id": 12631,
        "statement": "is(X, rough) :- is(X, red), is(X, furry).",
        "description": "Red, furry things are rough."
    },
    {
        "id": 12632,
        "statement": "is(X, cold) :- is(X, furry), is(X, big).",
        "description": "All furry, big things are cold."
    },
    {
        "id": 12633,
        "statement": "needs(X, cow) :- needs(X, bear).",
        "description": "If something needs the bear then it needs the cow."
    },
    {
        "id": 12634,
        "statement": "needs(X, cow) :- sees(X, bear), sees(X, cow).",
        "description": "If something sees the bear and it sees the cow then it needs the cow."
    },
    {
        "id": 12635,
        "statement": "sees(X, lion) :- is(X, young).",
        "description": "If something is young then it sees the lion."
    },
    {
        "id": 12636,
        "statement": "sees(X, lion) :- sees(X, bear).",
        "description": "If something sees the bear then it sees the lion."
    },
    {
        "id": 12637,
        "statement": "visits(X, lion) :- needs(X, cow).",
        "description": "If something needs the cow then it visits the lion."
    },
    {
        "id": 12638,
        "statement": "sees(X, cow) :- is(X, big), is(X, young).",
        "description": "If something is big and young then it sees the cow."
    },
    {
        "id": 12639,
        "statement": "visits(bear, lion) :- sees(X, bear).",
        "description": "If something sees the bear then the bear visits the lion."
    },
    {
        "id": 12640,
        "statement": "needs(X, bear) :- sees(X, lion).",
        "description": "If something sees the lion then it needs the bear."
    },
    {
        "id": 12641,
        "statement": "is(X, green) :- is(X, big), is(X, smart).",
        "description": "If someone is big and smart then they are green."
    },
    {
        "id": 12642,
        "statement": "is(X, big) :- is(X, young), is(X, blue).",
        "description": "If someone is young and blue then they are big."
    },
    {
        "id": 12643,
        "statement": "is(X, blue) :- is(X, quiet), is(X, smart).",
        "description": "If someone is quiet and smart then they are blue."
    },
    {
        "id": 12644,
        "statement": "is(gary, blue) :- is(gary, green), is(gary, big).",
        "description": "If Gary is green and Gary is big then Gary is blue."
    },
    {
        "id": 12645,
        "statement": "is(X, round) :- is(X, big), is(X, quiet).",
        "description": "All big, quiet things are round."
    },
    {
        "id": 12646,
        "statement": "is(X, rough) :- is(X, quiet), is(X, young).",
        "description": "If something is quiet and young then it is rough."
    },
    {
        "id": 12647,
        "statement": "is(X, green) :- is(X, young), is(X, big).",
        "description": "All young, big things are green."
    },
    {
        "id": 12648,
        "statement": "is(harry, green) :- is(harry, round), is(harry, kind).",
        "description": "If Harry is round and Harry is kind then Harry is green."
    },
    {
        "id": 12649,
        "statement": "is(X, big) :- is(X, green), is(X, quiet).",
        "description": "All green, quiet people are big."
    },
    {
        "id": 12650,
        "statement": "is(X, big) :- is(X, green).",
        "description": "Green people are big."
    },
    {
        "id": 12651,
        "statement": "is(anne, red) :- is(anne, big), is(anne, white).",
        "description": "If Anne is big and Anne is white then Anne is red."
    },
    {
        "id": 12652,
        "statement": "is(X, big) :- is(X, green), is(X, furry).",
        "description": "If someone is green and furry then they are big."
    },
    {
        "id": 12653,
        "statement": "is(bob, green) :- is(bob, quiet), is(bob, big).",
        "description": "If Bob is quiet and Bob is big then Bob is green."
    },
    {
        "id": 12654,
        "statement": "is(bob, round) :- is(bob, red), is(bob, cold).",
        "description": "If Bob is red and Bob is cold then Bob is round."
    },
    {
        "id": 12655,
        "statement": "is(X, cold) :- sees(X, bear), visits(X, rabbit).",
        "description": "If someone sees the bear and they visit the rabbit then they are cold."
    },
    {
        "id": 12656,
        "statement": "sees(X, mouse) :- is(X, round), visits(X, bald_eagle).",
        "description": "If someone is round and they visit the bald eagle then they see the mouse."
    },
    {
        "id": 12657,
        "statement": "sees(bald_eagle, rabbit) :- is(X, kind), visits(X, bald_eagle).",
        "description": "If someone is kind and they visit the bald eagle then the bald eagle sees the rabbit."
    },
    {
        "id": 12658,
        "statement": "sees(rabbit, bear) :- sees(rabbit, bald_eagle), is(rabbit, kind).",
        "description": "If the rabbit sees the bald eagle and the rabbit is kind then the rabbit sees the bear."
    },
    {
        "id": 12659,
        "statement": "is(X, cold) :- sees(X, rabbit).",
        "description": "If someone sees the rabbit then they are cold."
    },
    {
        "id": 12660,
        "statement": "sees(X, rabbit) :- is(X, red).",
        "description": "If someone is red then they see the rabbit."
    },
    {
        "id": 12661,
        "statement": "is(X, nice) :- is(X, furry), is(X, cold).",
        "description": "Furry, cold people are nice."
    },
    {
        "id": 12662,
        "statement": "is(anne, round) :- not is(anne, smart).",
        "description": "If Anne is not smart then Anne is round."
    },
    {
        "id": 12663,
        "statement": "is(charlie, green) :- is(charlie, big).",
        "description": "If Charlie is big then Charlie is green."
    },
    {
        "id": 12664,
        "statement": "is(X, nice) :- is(X, round), is(X, green).",
        "description": "Round, green things are nice."
    },
    {
        "id": 12665,
        "statement": "is(X, cold) :- is(X, smart), is(X, green).",
        "description": "All smart, green people are cold."
    },
    {
        "id": 12666,
        "statement": "is(X, round) :- is(X, big), is(X, green).",
        "description": "All big, green people are round."
    },
    {
        "id": 12667,
        "statement": "is(X, big) :- is(X, round), is(X, young).",
        "description": "If someone is round and young then they are big."
    },
    {
        "id": 12668,
        "statement": "sees(cow, bear) :- visits(cow, dog).",
        "description": "If the cow visits the dog then the cow sees the bear."
    },
    {
        "id": 12669,
        "statement": "sees(tiger, cow) :- is(tiger, green), not is(tiger, kind).",
        "description": "If the tiger is green and the tiger is not kind then the tiger sees the cow."
    },
    {
        "id": 12670,
        "statement": "is(X, blue) :- sees(X, dog).",
        "description": "If something sees the dog then it is blue."
    },
    {
        "id": 12671,
        "statement": "sees(bear, tiger) :- needs(X, bear), visits(bear, cow).",
        "description": "If something needs the bear and the bear visits the cow then the bear sees the tiger."
    },
    {
        "id": 12672,
        "statement": "sees(cow, dog) :- needs(X, cow).",
        "description": "If something needs the cow then the cow sees the dog."
    },
    {
        "id": 12673,
        "statement": "visits(X, tiger) :- sees(X, dog).",
        "description": "If something sees the dog then it visits the tiger."
    },
    {
        "id": 12674,
        "statement": "eats(squirrel, rabbit) :- is(squirrel, blue), eats(squirrel, dog).",
        "description": "If the squirrel is blue and the squirrel eats the dog then the squirrel eats the rabbit."
    },
    {
        "id": 12675,
        "statement": "is(rabbit, round) :- eats(X, rabbit).",
        "description": "If someone eats the rabbit then the rabbit is round."
    },
    {
        "id": 12676,
        "statement": "visits(squirrel, tiger) :- eats(X, rabbit), visits(rabbit, squirrel).",
        "description": "If someone eats the rabbit and the rabbit visits the squirrel then the squirrel visits the tiger."
    },
    {
        "id": 12677,
        "statement": "visits(X, rabbit) :- is(X, round).",
        "description": "If someone is round then they visit the rabbit."
    },
    {
        "id": 12678,
        "statement": "is(squirrel, blue) :- visits(dog, squirrel).",
        "description": "If the dog visits the squirrel then the squirrel is blue."
    },
    {
        "id": 12679,
        "statement": "is(tiger, cold) :- visits(X, tiger).",
        "description": "If someone visits the tiger then the tiger is cold."
    },
    {
        "id": 12680,
        "statement": "is(X, cold) :- visits(X, tiger).",
        "description": "If someone visits the tiger then they are cold."
    },
    {
        "id": 12681,
        "statement": "visits(X, squirrel) :- is(X, cold), is(X, kind).",
        "description": "If someone is cold and kind then they visit the squirrel."
    },
    {
        "id": 12682,
        "statement": "is(erin, cold) :- is(erin, red).",
        "description": "If Erin is red then Erin is cold."
    },
    {
        "id": 12683,
        "statement": "is(X, green) :- is(X, rough), is(X, round).",
        "description": "If someone is rough and round then they are green."
    },
    {
        "id": 12684,
        "statement": "is(X, red) :- is(X, cold), is(X, green).",
        "description": "If someone is cold and green then they are red."
    },
    {
        "id": 12685,
        "statement": "likes(X, cat) :- sees(X, dog).",
        "description": "If something sees the dog then it likes the cat."
    },
    {
        "id": 12686,
        "statement": "needs(X, cat) :- sees(X, squirrel).",
        "description": "If something sees the squirrel then it needs the cat."
    },
    {
        "id": 12687,
        "statement": "is(X, kind) :- is(X, nice), needs(X, cat).",
        "description": "If something is nice and it needs the cat then it is kind."
    },
    {
        "id": 12688,
        "statement": "likes(dog, tiger) :- likes(cat, dog), is(cat, young).",
        "description": "If the cat likes the dog and the cat is young then the dog likes the tiger."
    },
    {
        "id": 12689,
        "statement": "is(cat, kind) :- is(cat, rough).",
        "description": "If the cat is rough then the cat is kind."
    },
    {
        "id": 12690,
        "statement": "visits(rabbit, cat) :- eats(rabbit, cat), is(cat, green).",
        "description": "If the rabbit eats the cat and the cat is green then the rabbit visits the cat."
    },
    {
        "id": 12691,
        "statement": "visits(X, bald_eagle) :- needs(X, lion), is(X, rough).",
        "description": "If something needs the lion and it is rough then it visits the bald eagle."
    },
    {
        "id": 12692,
        "statement": "is(cat, green) :- visits(X, cat).",
        "description": "If something visits the cat then the cat is green."
    },
    {
        "id": 12693,
        "statement": "eats(X, bald_eagle) :- needs(X, lion).",
        "description": "If something needs the lion then it eats the bald eagle."
    },
    {
        "id": 12694,
        "statement": "visits(lion, cat) :- eats(X, lion).",
        "description": "If something eats the lion then the lion visits the cat."
    },
    {
        "id": 12695,
        "statement": "visits(X, rabbit) :- visits(X, cat), not eats(X, cat).",
        "description": "If something visits the cat and it does not eat the cat then it visits the rabbit."
    },
    {
        "id": 12696,
        "statement": "likes(rabbit, squirrel) :- likes(X, rabbit), not is(X, round).",
        "description": "If someone likes the rabbit and they are not round then the rabbit likes the squirrel."
    },
    {
        "id": 12697,
        "statement": "is(dog, nice) :- chases(X, dog).",
        "description": "If someone chases the dog then the dog is nice."
    },
    {
        "id": 12698,
        "statement": "likes(squirrel, tiger) :- needs(X, squirrel), not needs(squirrel, dog).",
        "description": "If someone needs the squirrel and the squirrel does not need the dog then the squirrel likes the tiger."
    },
    {
        "id": 12699,
        "statement": "is(X, green) :- chases(X, tiger), not needs(X, dog).",
        "description": "If someone chases the tiger and they do not need the dog then they are green."
    },
    {
        "id": 12700,
        "statement": "likes(X, dog) :- is(X, green).",
        "description": "If someone is green then they like the dog."
    },
    {
        "id": 12701,
        "statement": "needs(squirrel, rabbit) :- likes(squirrel, dog), not is(squirrel, nice).",
        "description": "If the squirrel likes the dog and the squirrel is not nice then the squirrel needs the rabbit."
    },
    {
        "id": 12702,
        "statement": "chases(X, tiger) :- is(X, nice).",
        "description": "If someone is nice then they chase the tiger."
    },
    {
        "id": 12703,
        "statement": "needs(rabbit, tiger) :- chases(X, rabbit), not is(X, nice).",
        "description": "If someone chases the rabbit and they are not nice then the rabbit needs the tiger."
    },
    {
        "id": 12704,
        "statement": "is(X, rough) :- is(X, smart), is(X, big).",
        "description": "If someone is smart and big then they are rough."
    },
    {
        "id": 12705,
        "statement": "is(anne, nice) :- not is(anne, big).",
        "description": "If Anne is not big then Anne is nice."
    },
    {
        "id": 12706,
        "statement": "visits(mouse, rabbit) :- visits(X, mouse), is(X, kind).",
        "description": "If something visits the mouse and it is kind then the mouse visits the rabbit."
    },
    {
        "id": 12707,
        "statement": "likes(rabbit, mouse) :- needs(lion, rabbit).",
        "description": "If the lion needs the rabbit then the rabbit likes the mouse."
    },
    {
        "id": 12708,
        "statement": "needs(X, rabbit) :- needs(X, mouse), not needs(mouse, tiger).",
        "description": "If something needs the mouse and the mouse does not need the tiger then it needs the rabbit."
    },
    {
        "id": 12709,
        "statement": "visits(tiger, rabbit) :- is(X, green), needs(X, tiger).",
        "description": "If something is green and it needs the tiger then the tiger visits the rabbit."
    },
    {
        "id": 12710,
        "statement": "needs(X, mouse) :- visits(X, rabbit).",
        "description": "If something visits the rabbit then it needs the mouse."
    },
    {
        "id": 12711,
        "statement": "likes(X, mouse) :- is(X, red).",
        "description": "If something is red then it likes the mouse."
    },
    {
        "id": 12712,
        "statement": "is(X, red) :- needs(X, rabbit).",
        "description": "If something needs the rabbit then it is red."
    },
    {
        "id": 12713,
        "statement": "visits(X, rabbit) :- needs(X, mouse).",
        "description": "If something needs the mouse then it visits the rabbit."
    },
    {
        "id": 12714,
        "statement": "chases(X, cow) :- likes(X, dog).",
        "description": "If something likes the dog then it chases the cow."
    },
    {
        "id": 12715,
        "statement": "likes(tiger, cow) :- sees(X, squirrel), not sees(X, tiger).",
        "description": "If something sees the squirrel and it does not see the tiger then the tiger likes the cow."
    },
    {
        "id": 12716,
        "statement": "sees(X, cow) :- chases(X, tiger).",
        "description": "If something chases the tiger then it sees the cow."
    },
    {
        "id": 12717,
        "statement": "is(X, big) :- likes(X, tiger).",
        "description": "If something likes the tiger then it is big."
    },
    {
        "id": 12718,
        "statement": "chases(X, squirrel) :- chases(X, dog), likes(dog, tiger).",
        "description": "If something chases the dog and the dog likes the tiger then it chases the squirrel."
    },
    {
        "id": 12719,
        "statement": "chases(X, squirrel) :- sees(X, cow), sees(cow, tiger).",
        "description": "If something sees the cow and the cow sees the tiger then it chases the squirrel."
    },
    {
        "id": 12720,
        "statement": "likes(cow, squirrel) :- chases(X, squirrel), likes(X, cow).",
        "description": "If something chases the squirrel and it likes the cow then the cow likes the squirrel."
    },
    {
        "id": 12721,
        "statement": "chases(squirrel, tiger) :- likes(X, squirrel), likes(squirrel, tiger).",
        "description": "If something likes the squirrel and the squirrel likes the tiger then the squirrel chases the tiger."
    },
    {
        "id": 12722,
        "statement": "is(squirrel, kind) :- sees(tiger, squirrel).",
        "description": "If the tiger sees the squirrel then the squirrel is kind."
    },
    {
        "id": 12723,
        "statement": "eats(X, mouse) :- visits(X, mouse).",
        "description": "If something visits the mouse then it eats the mouse."
    },
    {
        "id": 12724,
        "statement": "visits(bald_eagle, mouse) :- needs(lion, bald_eagle).",
        "description": "If the lion needs the bald eagle then the bald eagle visits the mouse."
    },
    {
        "id": 12725,
        "statement": "needs(X, bear) :- is(X, cold), is(X, round).",
        "description": "If something is cold and round then it needs the bear."
    },
    {
        "id": 12726,
        "statement": "is(mouse, red) :- eats(X, mouse).",
        "description": "If something eats the mouse then the mouse is red."
    },
    {
        "id": 12727,
        "statement": "eats(lion, bald_eagle) :- needs(lion, mouse), eats(mouse, lion).",
        "description": "If the lion needs the mouse and the mouse eats the lion then the lion eats the bald eagle."
    },
    {
        "id": 12728,
        "statement": "is(X, young) :- is(X, kind), is(X, white).",
        "description": "All kind, white things are young."
    },
    {
        "id": 12729,
        "statement": "is(X, kind) :- is(X, big), is(X, quiet).",
        "description": "If something is big and quiet then it is kind."
    },
    {
        "id": 12730,
        "statement": "is(X, red) :- is(X, young), is(X, white).",
        "description": "Young, white things are red."
    },
    {
        "id": 12731,
        "statement": "is(X, nice) :- is(X, young), is(X, red).",
        "description": "If something is young and red then it is nice."
    },
    {
        "id": 12732,
        "statement": "is(X, round) :- is(X, quiet), is(X, rough).",
        "description": "Quiet, rough people are round."
    },
    {
        "id": 12733,
        "statement": "is(X, rough) :- is(X, kind), is(X, blue).",
        "description": "Kind, blue people are rough."
    },
    {
        "id": 12734,
        "statement": "is(X, round) :- is(X, big), is(X, blue).",
        "description": "If someone is big and blue then they are round."
    },
    {
        "id": 12735,
        "statement": "is(X, big) :- is(X, kind), is(X, rough).",
        "description": "All kind, rough people are big."
    },
    {
        "id": 12736,
        "statement": "is(charlie, quiet) :- is(charlie, round), is(charlie, blue).",
        "description": "If Charlie is round and Charlie is blue then Charlie is quiet."
    },
    {
        "id": 12737,
        "statement": "chases(X, dog) :- visits(X, lion).",
        "description": "If someone visits the lion then they chase the dog."
    },
    {
        "id": 12738,
        "statement": "is(lion, rough) :- chases(X, lion).",
        "description": "If someone chases the lion then the lion is rough."
    },
    {
        "id": 12739,
        "statement": "is(X, green) :- chases(X, dog).",
        "description": "If someone chases the dog then they are green."
    },
    {
        "id": 12740,
        "statement": "is(X, big) :- chases(X, dog), not is(X, blue).",
        "description": "If someone chases the dog and they are not blue then they are big."
    },
    {
        "id": 12741,
        "statement": "chases(X, dog) :- is(X, rough).",
        "description": "If someone is rough then they chase the dog."
    },
    {
        "id": 12742,
        "statement": "needs(dog, rabbit) :- chases(X, dog).",
        "description": "If someone chases the dog then the dog needs the rabbit."
    },
    {
        "id": 12743,
        "statement": "sees(rabbit, dog) :- needs(bear, rabbit), is(rabbit, blue).",
        "description": "If the bear needs the rabbit and the rabbit is blue then the rabbit sees the dog."
    },
    {
        "id": 12744,
        "statement": "is(X, rough) :- needs(X, rabbit).",
        "description": "If someone needs the rabbit then they are rough."
    },
    {
        "id": 12745,
        "statement": "needs(bear, dog) :- needs(X, bear), chases(bear, lion).",
        "description": "If someone needs the bear and the bear chases the lion then the bear needs the dog."
    },
    {
        "id": 12746,
        "statement": "needs(rabbit, lion) :- chases(rabbit, dog).",
        "description": "If the rabbit chases the dog then the rabbit needs the lion."
    },
    {
        "id": 12747,
        "statement": "visits(X, cow) :- is(X, red), is(X, blue).",
        "description": "If something is red and blue then it visits the cow."
    },
    {
        "id": 12748,
        "statement": "eats(cat, cow) :- visits(X, cat), eats(cat, bald_eagle).",
        "description": "If something visits the cat and the cat eats the bald eagle then the cat eats the cow."
    },
    {
        "id": 12749,
        "statement": "eats(X, cat) :- visits(X, bald_eagle).",
        "description": "If something visits the bald eagle then it eats the cat."
    },
    {
        "id": 12750,
        "statement": "eats(X, bald_eagle) :- eats(X, cat).",
        "description": "If something eats the cat then it eats the bald eagle."
    },
    {
        "id": 12751,
        "statement": "chases(bear, cow) :- chases(X, bear), eats(X, cow).",
        "description": "If something chases the bear and it eats the cow then the bear chases the cow."
    },
    {
        "id": 12752,
        "statement": "visits(cow, bald_eagle) :- visits(X, cow), visits(X, bear).",
        "description": "If something visits the cow and it visits the bear then the cow visits the bald eagle."
    },
    {
        "id": 12753,
        "statement": "is(X, young) :- eats(X, bald_eagle), not visits(X, bald_eagle).",
        "description": "If something eats the bald eagle and it does not visit the bald eagle then it is young."
    },
    {
        "id": 12754,
        "statement": "chases(cow, cat) :- is(cow, young).",
        "description": "If the cow is young then the cow chases the cat."
    },
    {
        "id": 12755,
        "statement": "is(X, kind) :- is(X, furry), is(X, big).",
        "description": "All furry, big people are kind."
    },
    {
        "id": 12756,
        "statement": "is(gary, rough) :- is(gary, furry), not is(gary, red).",
        "description": "If Gary is furry and Gary is not red then Gary is rough."
    },
    {
        "id": 12757,
        "statement": "eats(X, squirrel) :- eats(X, mouse).",
        "description": "If someone eats the mouse then they eat the squirrel."
    },
    {
        "id": 12758,
        "statement": "eats(tiger, bald_eagle) :- eats(X, tiger), is(tiger, young).",
        "description": "If someone eats the tiger and the tiger is young then the tiger eats the bald eagle."
    },
    {
        "id": 12759,
        "statement": "is(tiger, cold) :- chases(bald_eagle, tiger).",
        "description": "If the bald eagle chases the tiger then the tiger is cold."
    },
    {
        "id": 12760,
        "statement": "eats(X, mouse) :- needs(X, bald_eagle).",
        "description": "If someone needs the bald eagle then they eat the mouse."
    },
    {
        "id": 12761,
        "statement": "needs(squirrel, bald_eagle) :- chases(X, squirrel).",
        "description": "If someone chases the squirrel then the squirrel needs the bald eagle."
    },
    {
        "id": 12762,
        "statement": "is(X, green) :- needs(X, squirrel), not needs(X, mouse).",
        "description": "If someone needs the squirrel and they do not need the mouse then they are green."
    },
    {
        "id": 12763,
        "statement": "chases(bald_eagle, mouse) :- needs(X, bald_eagle), eats(X, squirrel).",
        "description": "If someone needs the bald eagle and they eat the squirrel then the bald eagle chases the mouse."
    },
    {
        "id": 12764,
        "statement": "needs(X, squirrel) :- chases(X, mouse).",
        "description": "If someone chases the mouse then they need the squirrel."
    },
    {
        "id": 12765,
        "statement": "chases(X, squirrel) :- needs(X, tiger).",
        "description": "If someone needs the tiger then they chase the squirrel."
    },
    {
        "id": 12766,
        "statement": "is(X, nice) :- is(X, white), is(X, red).",
        "description": "White, red things are nice."
    },
    {
        "id": 12767,
        "statement": "is(X, rough) :- is(X, kind), not is(X, white).",
        "description": "If something is kind and not white then it is rough."
    },
    {
        "id": 12768,
        "statement": "is(bob, white) :- is(bob, green).",
        "description": "If Bob is green then Bob is white."
    },
    {
        "id": 12769,
        "statement": "is(X, nice) :- is(X, green), is(X, white).",
        "description": "Green, white people are nice."
    },
    {
        "id": 12770,
        "statement": "is(gary, rough) :- is(gary, furry), is(gary, nice).",
        "description": "If Gary is furry and Gary is nice then Gary is rough."
    },
    {
        "id": 12771,
        "statement": "is(X, red) :- is(X, white), is(X, furry).",
        "description": "All white, furry people are red."
    },
    {
        "id": 12772,
        "statement": "is(X, white) :- is(X, kind), is(X, furry).",
        "description": "If someone is kind and furry then they are white."
    },
    {
        "id": 12773,
        "statement": "is(X, kind) :- is(X, red), is(X, furry).",
        "description": "If someone is red and furry then they are kind."
    },
    {
        "id": 12774,
        "statement": "chases(X, squirrel) :- is(X, nice).",
        "description": "If something is nice then it chases the squirrel."
    },
    {
        "id": 12775,
        "statement": "is(cow, green) :- chases(X, cow), likes(X, squirrel).",
        "description": "If something chases the cow and it likes the squirrel then the cow is green."
    },
    {
        "id": 12776,
        "statement": "chases(X, cow) :- chases(X, squirrel).",
        "description": "If something chases the squirrel then it chases the cow."
    },
    {
        "id": 12777,
        "statement": "likes(squirrel, lion) :- visits(lion, squirrel).",
        "description": "If the lion visits the squirrel then the squirrel likes the lion."
    },
    {
        "id": 12778,
        "statement": "chases(cow, lion) :- visits(cow, squirrel).",
        "description": "If the cow visits the squirrel then the cow chases the lion."
    },
    {
        "id": 12779,
        "statement": "visits(X, cow) :- chases(X, cow).",
        "description": "If something chases the cow then it visits the cow."
    },
    {
        "id": 12780,
        "statement": "is(X, red) :- is(X, rough), is(X, big).",
        "description": "Rough, big things are red."
    },
    {
        "id": 12781,
        "statement": "is(dave, rough) :- is(dave, red).",
        "description": "If Dave is red then Dave is rough."
    },
    {
        "id": 12782,
        "statement": "is(X, white) :- is(X, kind).",
        "description": "Kind people are white."
    },
    {
        "id": 12783,
        "statement": "is(X, red) :- is(X, white), is(X, quiet).",
        "description": "White, quiet people are red."
    },
    {
        "id": 12784,
        "statement": "likes(X, squirrel) :- is(X, green), eats(X, bald_eagle).",
        "description": "If something is green and it eats the bald eagle then it likes the squirrel."
    },
    {
        "id": 12785,
        "statement": "is(mouse, round) :- likes(mouse, squirrel), needs(mouse, bald_eagle).",
        "description": "If the mouse likes the squirrel and the mouse needs the bald eagle then the mouse is round."
    },
    {
        "id": 12786,
        "statement": "eats(bald_eagle, mouse) :- likes(bald_eagle, cat), likes(bald_eagle, mouse).",
        "description": "If the bald eagle likes the cat and the bald eagle likes the mouse then the bald eagle eats the mouse."
    },
    {
        "id": 12787,
        "statement": "eats(X, bald_eagle) :- is(X, green).",
        "description": "If something is green then it eats the bald eagle."
    },
    {
        "id": 12788,
        "statement": "needs(bald_eagle, mouse) :- eats(X, mouse), eats(X, bald_eagle).",
        "description": "If something eats the mouse and it eats the bald eagle then the bald eagle needs the mouse."
    },
    {
        "id": 12789,
        "statement": "likes(X, bald_eagle) :- eats(X, bald_eagle).",
        "description": "If something eats the bald eagle then it likes the bald eagle."
    },
    {
        "id": 12790,
        "statement": "needs(X, mouse) :- needs(X, cat).",
        "description": "If something needs the cat then it needs the mouse."
    },
    {
        "id": 12791,
        "statement": "is(squirrel, green) :- needs(X, bald_eagle), likes(bald_eagle, squirrel).",
        "description": "If something needs the bald eagle and the bald eagle likes the squirrel then the squirrel is green."
    },
    {
        "id": 12792,
        "statement": "likes(squirrel, mouse) :- is(squirrel, nice).",
        "description": "If the squirrel is nice then the squirrel likes the mouse."
    },
    {
        "id": 12793,
        "statement": "is(X, smart) :- is(X, blue), is(X, furry).",
        "description": "Blue, furry people are smart."
    },
    {
        "id": 12794,
        "statement": "is(X, white) :- is(X, green), not is(X, round).",
        "description": "If someone is green and not round then they are white."
    },
    {
        "id": 12795,
        "statement": "is(fiona, furry) :- is(fiona, white).",
        "description": "If Fiona is white then Fiona is furry."
    },
    {
        "id": 12796,
        "statement": "is(X, green) :- is(X, round), is(X, smart).",
        "description": "Round, smart people are green."
    },
    {
        "id": 12797,
        "statement": "is(fiona, young) :- is(fiona, furry).",
        "description": "If Fiona is furry then Fiona is young."
    },
    {
        "id": 12798,
        "statement": "is(X, green) :- is(X, white), is(X, quiet).",
        "description": "White, quiet things are green."
    },
    {
        "id": 12799,
        "statement": "is(X, big) :- is(X, quiet), is(X, furry).",
        "description": "Quiet, furry things are big."
    },
    {
        "id": 12800,
        "statement": "is(X, furry) :- is(X, rough), is(X, young).",
        "description": "If something is rough and young then it is furry."
    },
    {
        "id": 12801,
        "statement": "is(X, furry) :- is(X, big), is(X, quiet).",
        "description": "If something is big and quiet then it is furry."
    },
    {
        "id": 12802,
        "statement": "is(gary, white) :- is(gary, furry).",
        "description": "If Gary is furry then Gary is white."
    },
    {
        "id": 12803,
        "statement": "sees(cow, bald_eagle) :- sees(X, cow), is(X, green).",
        "description": "If something sees the cow and it is green then the cow sees the bald eagle."
    },
    {
        "id": 12804,
        "statement": "is(X, nice) :- needs(X, bald_eagle), needs(bald_eagle, bear).",
        "description": "If something needs the bald eagle and the bald eagle needs the bear then it is nice."
    },
    {
        "id": 12805,
        "statement": "chases(X, bear) :- is(X, nice), is(X, green).",
        "description": "If something is nice and green then it chases the bear."
    },
    {
        "id": 12806,
        "statement": "needs(bear, bald_eagle) :- needs(bald_eagle, bear), chases(bear, bald_eagle).",
        "description": "If the bald eagle needs the bear and the bear chases the bald eagle then the bear needs the bald eagle."
    },
    {
        "id": 12807,
        "statement": "needs(X, bear) :- chases(X, bear).",
        "description": "If something chases the bear then it needs the bear."
    },
    {
        "id": 12808,
        "statement": "is(tiger, big) :- sees(X, bald_eagle), needs(bald_eagle, tiger).",
        "description": "If something sees the bald eagle and the bald eagle needs the tiger then the tiger is big."
    },
    {
        "id": 12809,
        "statement": "is(X, furry) :- is(X, big), is(X, blue).",
        "description": "Big, blue things are furry."
    },
    {
        "id": 12810,
        "statement": "is(lion, round) :- is(X, round), sees(X, lion).",
        "description": "If something is round and it sees the lion then the lion is round."
    },
    {
        "id": 12811,
        "statement": "visits(X, lion) :- visits(X, bear), is(X, rough).",
        "description": "If something visits the bear and it is rough then it visits the lion."
    },
    {
        "id": 12812,
        "statement": "chases(cow, lion) :- sees(mouse, cow).",
        "description": "If the mouse sees the cow then the cow chases the lion."
    },
    {
        "id": 12813,
        "statement": "chases(cow, lion) :- sees(X, lion), sees(lion, cow).",
        "description": "If something sees the lion and the lion sees the cow then the cow chases the lion."
    },
    {
        "id": 12814,
        "statement": "visits(mouse, bear) :- is(X, round), sees(X, mouse).",
        "description": "If something is round and it sees the mouse then the mouse visits the bear."
    },
    {
        "id": 12815,
        "statement": "sees(X, bear) :- is(X, round).",
        "description": "If something is round then it sees the bear."
    },
    {
        "id": 12816,
        "statement": "is(X, round) :- sees(X, cow), not is(X, rough).",
        "description": "If something sees the cow and it is not rough then it is round."
    },
    {
        "id": 12817,
        "statement": "chases(mouse, lion) :- sees(X, mouse), not visits(X, mouse).",
        "description": "If something sees the mouse and it does not visit the mouse then the mouse chases the lion."
    },
    {
        "id": 12818,
        "statement": "is(X, young) :- visits(X, dog).",
        "description": "If something visits the dog then it is young."
    },
    {
        "id": 12819,
        "statement": "is(dog, big) :- visits(X, dog).",
        "description": "If something visits the dog then the dog is big."
    },
    {
        "id": 12820,
        "statement": "sees(X, mouse) :- is(X, big), sees(X, cow).",
        "description": "If something is big and it sees the cow then it sees the mouse."
    },
    {
        "id": 12821,
        "statement": "visits(X, dog) :- is(X, nice), likes(X, dog).",
        "description": "If something is nice and it likes the dog then it visits the dog."
    },
    {
        "id": 12822,
        "statement": "sees(X, cow) :- is(X, young), visits(X, cow).",
        "description": "If something is young and it visits the cow then it sees the cow."
    },
    {
        "id": 12823,
        "statement": "is(X, red) :- sees(X, mouse).",
        "description": "If something sees the mouse then it is red."
    },
    {
        "id": 12824,
        "statement": "likes(dog, mouse) :- visits(X, dog).",
        "description": "If something visits the dog then the dog likes the mouse."
    },
    {
        "id": 12825,
        "statement": "visits(mouse, dog) :- visits(X, mouse), likes(mouse, dog).",
        "description": "If something visits the mouse and the mouse likes the dog then the mouse visits the dog."
    },
    {
        "id": 12826,
        "statement": "likes(X, dog) :- is(X, nice).",
        "description": "If something is nice then it likes the dog."
    },
    {
        "id": 12827,
        "statement": "is(erin, cold) :- is(erin, round), is(erin, green).",
        "description": "If Erin is round and Erin is green then Erin is cold."
    },
    {
        "id": 12828,
        "statement": "is(anne, furry) :- is(anne, big).",
        "description": "If Anne is big then Anne is furry."
    },
    {
        "id": 12829,
        "statement": "is(X, furry) :- is(X, cold), is(X, green).",
        "description": "All cold, green things are furry."
    },
    {
        "id": 12830,
        "statement": "is(X, furry) :- is(X, red), not is(X, green).",
        "description": "If something is red and not green then it is furry."
    },
    {
        "id": 12831,
        "statement": "is(erin, big) :- is(erin, kind), not is(erin, red).",
        "description": "If Erin is kind and Erin is not red then Erin is big."
    },
    {
        "id": 12832,
        "statement": "is(X, green) :- is(X, quiet), is(X, blue).",
        "description": "All quiet, blue people are green."
    },
    {
        "id": 12833,
        "statement": "is(X, quiet) :- is(X, blue), is(X, cold).",
        "description": "Blue, cold people are quiet."
    },
    {
        "id": 12834,
        "statement": "is(X, quiet) :- is(X, big), is(X, blue).",
        "description": "Big, blue people are quiet."
    },
    {
        "id": 12835,
        "statement": "is(X, blue) :- is(X, green), is(X, white).",
        "description": "If someone is green and white then they are blue."
    },
    {
        "id": 12836,
        "statement": "is(X, blue) :- is(X, quiet), is(X, big).",
        "description": "If someone is quiet and big then they are blue."
    },
    {
        "id": 12837,
        "statement": "is(X, big) :- is(X, quiet), is(X, white).",
        "description": "All quiet, white people are big."
    },
    {
        "id": 12838,
        "statement": "is(X, rough) :- is(X, red), is(X, quiet).",
        "description": "Red, quiet things are rough."
    },
    {
        "id": 12839,
        "statement": "is(X, cold) :- is(X, blue), is(X, red).",
        "description": "Blue, red things are cold."
    },
    {
        "id": 12840,
        "statement": "is(X, rough) :- is(X, white), not is(X, big).",
        "description": "If someone is white and not big then they are rough."
    },
    {
        "id": 12841,
        "statement": "is(X, rough) :- is(X, big), is(X, nice).",
        "description": "All big, nice people are rough."
    },
    {
        "id": 12842,
        "statement": "is(X, young) :- is(X, white), is(X, big).",
        "description": "All white, big people are young."
    },
    {
        "id": 12843,
        "statement": "is(X, young) :- is(X, blue), is(X, red).",
        "description": "All blue, red people are young."
    },
    {
        "id": 12844,
        "statement": "is(X, nice) :- is(X, young), is(X, blue).",
        "description": "Young, blue people are nice."
    },
    {
        "id": 12845,
        "statement": "is(X, white) :- is(X, big).",
        "description": "Big people are white."
    },
    {
        "id": 12846,
        "statement": "is(X, white) :- is(X, rough), not is(X, big).",
        "description": "If someone is rough and not big then they are white."
    },
    {
        "id": 12847,
        "statement": "is(X, blue) :- is(X, young).",
        "description": "If someone is young then they are blue."
    },
    {
        "id": 12848,
        "statement": "is(X, young) :- is(X, quiet), is(X, round).",
        "description": "If something is quiet and round then it is young."
    },
    {
        "id": 12849,
        "statement": "is(X, young) :- is(X, cold).",
        "description": "All cold things are young."
    },
    {
        "id": 12850,
        "statement": "is(X, cold) :- is(X, round), is(X, big).",
        "description": "Round, big things are cold."
    },
    {
        "id": 12851,
        "statement": "is(X, white) :- is(X, kind), is(X, rough).",
        "description": "Kind, rough things are white."
    },
    {
        "id": 12852,
        "statement": "is(X, cold) :- is(X, nice), is(X, young).",
        "description": "If something is nice and young then it is cold."
    },
    {
        "id": 12853,
        "statement": "is(X, cold) :- is(X, rough), is(X, nice).",
        "description": "All rough, nice things are cold."
    },
    {
        "id": 12854,
        "statement": "is(X, furry) :- is(X, green), is(X, round).",
        "description": "All green, round people are furry."
    },
    {
        "id": 12855,
        "statement": "is(X, round) :- is(X, quiet), is(X, cold).",
        "description": "All quiet, cold people are round."
    },
    {
        "id": 12856,
        "statement": "is(erin, white) :- is(erin, red), is(erin, green).",
        "description": "If Erin is red and Erin is green then Erin is white."
    },
    {
        "id": 12857,
        "statement": "visits(lion, tiger) :- visits(X, lion), chases(lion, cow).",
        "description": "If someone visits the lion and the lion chases the cow then the lion visits the tiger."
    },
    {
        "id": 12858,
        "statement": "visits(tiger, lion) :- needs(X, tiger).",
        "description": "If someone needs the tiger then the tiger visits the lion."
    },
    {
        "id": 12859,
        "statement": "is(bear, round) :- is(tiger, big), needs(tiger, bear).",
        "description": "If the tiger is big and the tiger needs the bear then the bear is round."
    },
    {
        "id": 12860,
        "statement": "is(X, green) :- is(X, round), not is(X, nice).",
        "description": "If someone is round and not nice then they are green."
    },
    {
        "id": 12861,
        "statement": "is(lion, cold) :- needs(X, lion).",
        "description": "If someone needs the lion then the lion is cold."
    },
    {
        "id": 12862,
        "statement": "is(X, cold) :- chases(X, tiger), is(X, nice).",
        "description": "If someone chases the tiger and they are nice then they are cold."
    },
    {
        "id": 12863,
        "statement": "visits(X, bear) :- visits(X, lion), not chases(lion, tiger).",
        "description": "If someone visits the lion and the lion does not chase the tiger then they visit the bear."
    },
    {
        "id": 12864,
        "statement": "needs(X, tiger) :- visits(X, bear).",
        "description": "If someone visits the bear then they need the tiger."
    },
    {
        "id": 12865,
        "statement": "is(X, round) :- is(X, cold), is(X, white).",
        "description": "All cold, white people are round."
    },
    {
        "id": 12866,
        "statement": "is(X, furry) :- is(X, white), is(X, rough).",
        "description": "If someone is white and rough then they are furry."
    },
    {
        "id": 12867,
        "statement": "is(X, cold) :- is(X, blue), is(X, white).",
        "description": "If someone is blue and white then they are cold."
    },
    {
        "id": 12868,
        "statement": "is(X, furry) :- is(X, round), is(X, blue).",
        "description": "Round, blue people are furry."
    },
    {
        "id": 12869,
        "statement": "is(erin, blue) :- is(erin, round).",
        "description": "If Erin is round then Erin is blue."
    },
    {
        "id": 12870,
        "statement": "is(X, smart) :- is(X, red), not is(X, rough).",
        "description": "If someone is red and not rough then they are smart."
    },
    {
        "id": 12871,
        "statement": "is(X, blue) :- is(X, quiet), not is(X, furry).",
        "description": "If someone is quiet and not furry then they are blue."
    },
    {
        "id": 12872,
        "statement": "is(X, blue) :- is(X, red), is(X, smart).",
        "description": "If someone is red and smart then they are blue."
    },
    {
        "id": 12873,
        "statement": "is(bob, cold) :- is(bob, red), is(bob, nice).",
        "description": "If Bob is red and Bob is nice then Bob is cold."
    },
    {
        "id": 12874,
        "statement": "is(dave, kind) :- is(dave, green), is(dave, red).",
        "description": "If Dave is green and Dave is red then Dave is kind."
    },
    {
        "id": 12875,
        "statement": "is(X, young) :- is(X, green), is(X, nice).",
        "description": "Green, nice people are young."
    },
    {
        "id": 12876,
        "statement": "is(X, red) :- is(X, green), is(X, furry).",
        "description": "If someone is green and furry then they are red."
    },
    {
        "id": 12877,
        "statement": "is(X, cold) :- is(X, round), is(X, furry).",
        "description": "Round, furry people are cold."
    },
    {
        "id": 12878,
        "statement": "is(X, cold) :- is(X, kind), is(X, furry).",
        "description": "If someone is kind and furry then they are cold."
    },
    {
        "id": 12879,
        "statement": "is(X, green) :- is(X, furry), is(X, round).",
        "description": "If someone is furry and round then they are green."
    },
    {
        "id": 12880,
        "statement": "is(X, kind) :- is(X, green), is(X, round).",
        "description": "All green, round people are kind."
    },
    {
        "id": 12881,
        "statement": "is(X, red) :- is(X, quiet), is(X, rough).",
        "description": "All quiet, rough things are red."
    },
    {
        "id": 12882,
        "statement": "is(X, nice) :- is(X, red), is(X, green).",
        "description": "Red, green things are nice."
    },
    {
        "id": 12883,
        "statement": "is(X, round) :- is(X, quiet), is(X, red).",
        "description": "All quiet, red things are round."
    },
    {
        "id": 12884,
        "statement": "is(X, rough) :- is(X, green), is(X, round).",
        "description": "If something is green and round then it is rough."
    },
    {
        "id": 12885,
        "statement": "is(harry, green) :- is(harry, red), is(harry, quiet).",
        "description": "If Harry is red and Harry is quiet then Harry is green."
    },
    {
        "id": 12886,
        "statement": "is(X, red) :- is(X, green), is(X, white).",
        "description": "Green, white things are red."
    },
    {
        "id": 12887,
        "statement": "is(X, rough) :- is(X, cold), is(X, furry).",
        "description": "All cold, furry things are rough."
    },
    {
        "id": 12888,
        "statement": "is(X, red) :- is(X, round), is(X, furry).",
        "description": "If something is round and furry then it is red."
    },
    {
        "id": 12889,
        "statement": "is(X, white) :- is(X, red), is(X, round).",
        "description": "If someone is red and round then they are white."
    },
    {
        "id": 12890,
        "statement": "is(X, red) :- is(X, white), is(X, blue).",
        "description": "White, blue people are red."
    },
    {
        "id": 12891,
        "statement": "is(gary, cold) :- is(gary, green), is(gary, quiet).",
        "description": "If Gary is green and Gary is quiet then Gary is cold."
    },
    {
        "id": 12892,
        "statement": "is(fiona, rough) :- is(fiona, smart).",
        "description": "If Fiona is smart then Fiona is rough."
    },
    {
        "id": 12893,
        "statement": "is(X, nice) :- is(X, smart), is(X, green).",
        "description": "Smart, green things are nice."
    },
    {
        "id": 12894,
        "statement": "is(X, quiet) :- is(X, green), is(X, white).",
        "description": "All green, white things are quiet."
    },
    {
        "id": 12895,
        "statement": "is(X, quiet) :- is(X, white), is(X, nice).",
        "description": "If something is white and nice then it is quiet."
    },
    {
        "id": 12896,
        "statement": "is(bob, white) :- is(bob, nice).",
        "description": "If Bob is nice then Bob is white."
    },
    {
        "id": 12897,
        "statement": "is(X, kind) :- is(X, quiet), is(X, white).",
        "description": "If something is quiet and white then it is kind."
    },
    {
        "id": 12898,
        "statement": "needs(rabbit, squirrel) :- eats(rabbit, bald_eagle).",
        "description": "If the rabbit eats the bald eagle then the rabbit needs the squirrel."
    },
    {
        "id": 12899,
        "statement": "needs(X, tiger) :- is(X, kind), is(X, big).",
        "description": "If something is kind and big then it needs the tiger."
    },
    {
        "id": 12900,
        "statement": "needs(rabbit, tiger) :- needs(X, rabbit), is(rabbit, rough).",
        "description": "If something needs the rabbit and the rabbit is rough then the rabbit needs the tiger."
    },
    {
        "id": 12901,
        "statement": "eats(tiger, bald_eagle) :- needs(X, tiger).",
        "description": "If something needs the tiger then the tiger eats the bald eagle."
    },
    {
        "id": 12902,
        "statement": "is(X, kind) :- likes(X, squirrel), eats(X, bald_eagle).",
        "description": "If something likes the squirrel and it eats the bald eagle then it is kind."
    },
    {
        "id": 12903,
        "statement": "needs(tiger, squirrel) :- likes(X, tiger).",
        "description": "If something likes the tiger then the tiger needs the squirrel."
    },
    {
        "id": 12904,
        "statement": "eats(squirrel, bald_eagle) :- eats(squirrel, tiger), is(tiger, rough).",
        "description": "If the squirrel eats the tiger and the tiger is rough then the squirrel eats the bald eagle."
    },
    {
        "id": 12905,
        "statement": "is(X, red) :- is(X, rough), is(X, cold).",
        "description": "All rough, cold people are red."
    },
    {
        "id": 12906,
        "statement": "is(gary, green) :- is(gary, furry), is(gary, nice).",
        "description": "If Gary is furry and Gary is nice then Gary is green."
    },
    {
        "id": 12907,
        "statement": "is(X, cold) :- is(X, kind), is(X, furry).",
        "description": "If something is kind and furry then it is cold."
    },
    {
        "id": 12908,
        "statement": "is(X, kind) :- is(X, quiet), is(X, nice).",
        "description": "If something is quiet and nice then it is kind."
    },
    {
        "id": 12909,
        "statement": "is(X, kind) :- is(X, furry), is(X, young).",
        "description": "All furry, young things are kind."
    },
    {
        "id": 12910,
        "statement": "is(X, quiet) :- is(X, kind), is(X, cold).",
        "description": "If something is kind and cold then it is quiet."
    },
    {
        "id": 12911,
        "statement": "is(X, quiet) :- is(X, kind), is(X, cold).",
        "description": "Kind, cold things are quiet."
    },
    {
        "id": 12912,
        "statement": "is(bob, cold) :- is(bob, quiet).",
        "description": "If Bob is quiet then Bob is cold."
    },
    {
        "id": 12913,
        "statement": "is(X, rough) :- chases(X, cat), likes(X, cat).",
        "description": "If something chases the cat and it likes the cat then it is rough."
    },
    {
        "id": 12914,
        "statement": "chases(X, mouse) :- is(X, green), likes(X, mouse).",
        "description": "If something is green and it likes the mouse then it chases the mouse."
    },
    {
        "id": 12915,
        "statement": "chases(X, mouse) :- needs(X, mouse), is(mouse, green).",
        "description": "If something needs the mouse and the mouse is green then it chases the mouse."
    },
    {
        "id": 12916,
        "statement": "chases(rabbit, mouse) :- is(rabbit, kind).",
        "description": "If the rabbit is kind then the rabbit chases the mouse."
    },
    {
        "id": 12917,
        "statement": "likes(cat, mouse) :- is(cat, nice).",
        "description": "If the cat is nice then the cat likes the mouse."
    },
    {
        "id": 12918,
        "statement": "likes(mouse, cat) :- chases(X, mouse).",
        "description": "If something chases the mouse then the mouse likes the cat."
    },
    {
        "id": 12919,
        "statement": "is(X, cold) :- likes(X, bald_eagle).",
        "description": "If something likes the bald eagle then it is cold."
    },
    {
        "id": 12920,
        "statement": "is(X, cold) :- sees(X, mouse), sees(mouse, dog).",
        "description": "If something sees the mouse and the mouse sees the dog then it is cold."
    },
    {
        "id": 12921,
        "statement": "sees(X, bald_eagle) :- is(X, nice), is(X, big).",
        "description": "If something is nice and big then it sees the bald eagle."
    },
    {
        "id": 12922,
        "statement": "sees(X, bald_eagle) :- likes(X, mouse).",
        "description": "If something likes the mouse then it sees the bald eagle."
    },
    {
        "id": 12923,
        "statement": "likes(mouse, bald_eagle) :- sees(X, mouse).",
        "description": "If something sees the mouse then the mouse likes the bald eagle."
    },
    {
        "id": 12924,
        "statement": "sees(X, dog) :- is(X, cold).",
        "description": "If something is cold then it sees the dog."
    },
    {
        "id": 12925,
        "statement": "sees(bald_eagle, dog) :- is(bald_eagle, big).",
        "description": "If the bald eagle is big then the bald eagle sees the dog."
    },
    {
        "id": 12926,
        "statement": "is(X, big) :- sees(X, bald_eagle).",
        "description": "If something sees the bald eagle then it is big."
    },
    {
        "id": 12927,
        "statement": "sees(bear, mouse) :- likes(X, bear).",
        "description": "If something likes the bear then the bear sees the mouse."
    },
    {
        "id": 12928,
        "statement": "is(X, big) :- is(X, quiet), is(X, blue).",
        "description": "Quiet, blue people are big."
    },
    {
        "id": 12929,
        "statement": "needs(X, lion) :- needs(X, bear), needs(bear, tiger).",
        "description": "If something needs the bear and the bear needs the tiger then it needs the lion."
    },
    {
        "id": 12930,
        "statement": "needs(X, bear) :- chases(X, lion).",
        "description": "If something chases the lion then it needs the bear."
    },
    {
        "id": 12931,
        "statement": "is(lion, green) :- is(X, green), chases(X, lion).",
        "description": "If something is green and it chases the lion then the lion is green."
    },
    {
        "id": 12932,
        "statement": "chases(lion, cow) :- is(lion, cold).",
        "description": "If the lion is cold then the lion chases the cow."
    },
    {
        "id": 12933,
        "statement": "is(lion, cold) :- is(X, young), needs(X, lion).",
        "description": "If something is young and it needs the lion then the lion is cold."
    },
    {
        "id": 12934,
        "statement": "needs(X, tiger) :- is(X, round).",
        "description": "If something is round then it needs the tiger."
    },
    {
        "id": 12935,
        "statement": "needs(X, tiger) :- chases(X, cow).",
        "description": "If something chases the cow then it needs the tiger."
    },
    {
        "id": 12936,
        "statement": "chases(X, bear) :- is(X, red), sees(X, bear).",
        "description": "If something is red and it sees the bear then it chases the bear."
    },
    {
        "id": 12937,
        "statement": "is(X, green) :- is(X, rough), is(X, big).",
        "description": "If someone is rough and big then they are green."
    },
    {
        "id": 12938,
        "statement": "is(erin, big) :- is(erin, quiet).",
        "description": "If Erin is quiet then Erin is big."
    },
    {
        "id": 12939,
        "statement": "is(X, young) :- is(X, quiet), not is(X, round).",
        "description": "If someone is quiet and not round then they are young."
    },
    {
        "id": 12940,
        "statement": "sees(squirrel, mouse) :- eats(X, squirrel).",
        "description": "If something eats the squirrel then the squirrel sees the mouse."
    },
    {
        "id": 12941,
        "statement": "sees(cat, mouse) :- is(cat, green).",
        "description": "If the cat is green then the cat sees the mouse."
    },
    {
        "id": 12942,
        "statement": "is(lion, round) :- eats(X, lion).",
        "description": "If something eats the lion then the lion is round."
    },
    {
        "id": 12943,
        "statement": "eats(X, mouse) :- is(X, green).",
        "description": "If something is green then it eats the mouse."
    },
    {
        "id": 12944,
        "statement": "is(X, blue) :- is(X, round), eats(X, mouse).",
        "description": "If something is round and it eats the mouse then it is blue."
    },
    {
        "id": 12945,
        "statement": "is(lion, green) :- eats(X, lion), is(X, red).",
        "description": "If something eats the lion and it is red then the lion is green."
    },
    {
        "id": 12946,
        "statement": "eats(mouse, squirrel) :- visits(X, mouse), is(X, red).",
        "description": "If something visits the mouse and it is red then the mouse eats the squirrel."
    },
    {
        "id": 12947,
        "statement": "sees(X, cat) :- sees(X, lion), sees(lion, cat).",
        "description": "If something sees the lion and the lion sees the cat then it sees the cat."
    },
    {
        "id": 12948,
        "statement": "is(dog, nice) :- chases(X, dog).",
        "description": "If something chases the dog then the dog is nice."
    },
    {
        "id": 12949,
        "statement": "likes(bear, dog) :- chases(X, bear).",
        "description": "If something chases the bear then the bear likes the dog."
    },
    {
        "id": 12950,
        "statement": "is(bear, round) :- likes(bear, dog), eats(dog, bear).",
        "description": "If the bear likes the dog and the dog eats the bear then the bear is round."
    },
    {
        "id": 12951,
        "statement": "chases(bald_eagle, bear) :- is(X, young), likes(X, bald_eagle).",
        "description": "If something is young and it likes the bald eagle then the bald eagle chases the bear."
    },
    {
        "id": 12952,
        "statement": "is(dog, round) :- likes(X, dog).",
        "description": "If something likes the dog then the dog is round."
    },
    {
        "id": 12953,
        "statement": "eats(bear, dog) :- likes(X, cat), chases(X, bear).",
        "description": "If something likes the cat and it chases the bear then the bear eats the dog."
    },
    {
        "id": 12954,
        "statement": "eats(X, bald_eagle) :- is(X, young).",
        "description": "If something is young then it eats the bald eagle."
    },
    {
        "id": 12955,
        "statement": "likes(bear, bald_eagle) :- eats(X, lion), visits(X, bear).",
        "description": "If something eats the lion and it visits the bear then the bear likes the bald eagle."
    },
    {
        "id": 12956,
        "statement": "likes(bald_eagle, bear) :- eats(X, bald_eagle).",
        "description": "If something eats the bald eagle then the bald eagle likes the bear."
    },
    {
        "id": 12957,
        "statement": "is(lion, cold) :- likes(X, bear), visits(bear, lion).",
        "description": "If something likes the bear and the bear visits the lion then the lion is cold."
    },
    {
        "id": 12958,
        "statement": "likes(lion, bear) :- likes(bear, lion).",
        "description": "If the bear likes the lion then the lion likes the bear."
    },
    {
        "id": 12959,
        "statement": "eats(bear, dog) :- likes(X, bear), is(X, cold).",
        "description": "If something likes the bear and it is cold then the bear eats the dog."
    },
    {
        "id": 12960,
        "statement": "likes(lion, bear) :- eats(X, lion).",
        "description": "If something eats the lion then the lion likes the bear."
    },
    {
        "id": 12961,
        "statement": "eats(cat, cow) :- eats(X, cat).",
        "description": "If something eats the cat then the cat eats the cow."
    },
    {
        "id": 12962,
        "statement": "eats(X, bald_eagle) :- chases(X, cat).",
        "description": "If something chases the cat then it eats the bald eagle."
    },
    {
        "id": 12963,
        "statement": "eats(rabbit, cow) :- chases(cat, rabbit), is(cat, cold).",
        "description": "If the cat chases the rabbit and the cat is cold then the rabbit eats the cow."
    },
    {
        "id": 12964,
        "statement": "needs(cow, rabbit) :- needs(cat, cow).",
        "description": "If the cat needs the cow then the cow needs the rabbit."
    },
    {
        "id": 12965,
        "statement": "is(X, nice) :- chases(X, bald_eagle).",
        "description": "If something chases the bald eagle then it is nice."
    },
    {
        "id": 12966,
        "statement": "is(cow, kind) :- is(cow, nice).",
        "description": "If the cow is nice then the cow is kind."
    },
    {
        "id": 12967,
        "statement": "needs(cat, cow) :- eats(cow, cat), is(cow, nice).",
        "description": "If the cow eats the cat and the cow is nice then the cat needs the cow."
    },
    {
        "id": 12968,
        "statement": "chases(cow, bald_eagle) :- eats(cat, cow).",
        "description": "If the cat eats the cow then the cow chases the bald eagle."
    },
    {
        "id": 12969,
        "statement": "is(X, young) :- is(X, green), is(X, furry).",
        "description": "All green, furry things are young."
    },
    {
        "id": 12970,
        "statement": "is(X, young) :- is(X, white), is(X, cold).",
        "description": "If something is white and cold then it is young."
    },
    {
        "id": 12971,
        "statement": "is(erin, cold) :- is(erin, green), is(erin, young).",
        "description": "If Erin is green and Erin is young then Erin is cold."
    },
    {
        "id": 12972,
        "statement": "is(X, cold) :- is(X, young), is(X, red).",
        "description": "Young, red things are cold."
    },
    {
        "id": 12973,
        "statement": "is(X, furry) :- is(X, red), is(X, young).",
        "description": "Red, young things are furry."
    },
    {
        "id": 12974,
        "statement": "is(X, red) :- is(X, young), is(X, cold).",
        "description": "Young, cold things are red."
    },
    {
        "id": 12975,
        "statement": "is(X, kind) :- is(X, green), is(X, nice).",
        "description": "All green, nice people are kind."
    },
    {
        "id": 12976,
        "statement": "is(charlie, green) :- is(charlie, nice), is(charlie, kind).",
        "description": "If Charlie is nice and Charlie is kind then Charlie is green."
    },
    {
        "id": 12977,
        "statement": "is(erin, kind) :- is(erin, red), is(erin, white).",
        "description": "If Erin is red and Erin is white then Erin is kind."
    },
    {
        "id": 12978,
        "statement": "is(X, red) :- is(X, young), is(X, kind).",
        "description": "Young, kind people are red."
    },
    {
        "id": 12979,
        "statement": "is(X, red) :- sees(X, tiger).",
        "description": "If something sees the tiger then it is red."
    },
    {
        "id": 12980,
        "statement": "is(dog, round) :- likes(X, dog), is(X, big).",
        "description": "If something likes the dog and it is big then the dog is round."
    },
    {
        "id": 12981,
        "statement": "sees(X, cow) :- is(X, big), is(X, red).",
        "description": "If something is big and red then it sees the cow."
    },
    {
        "id": 12982,
        "statement": "eats(tiger, squirrel) :- is(tiger, big), sees(tiger, dog).",
        "description": "If the tiger is big and the tiger sees the dog then the tiger eats the squirrel."
    },
    {
        "id": 12983,
        "statement": "sees(X, tiger) :- is(X, big).",
        "description": "If something is big then it sees the tiger."
    },
    {
        "id": 12984,
        "statement": "likes(squirrel, dog) :- eats(X, dog), likes(dog, squirrel).",
        "description": "If something eats the dog and the dog likes the squirrel then the squirrel likes the dog."
    },
    {
        "id": 12985,
        "statement": "is(dog, big) :- likes(X, dog), sees(X, tiger).",
        "description": "If something likes the dog and it sees the tiger then the dog is big."
    },
    {
        "id": 12986,
        "statement": "is(X, nice) :- is(X, blue), is(X, cold).",
        "description": "If something is blue and cold then it is nice."
    },
    {
        "id": 12987,
        "statement": "is(X, nice) :- is(X, cold), is(X, young).",
        "description": "Cold, young things are nice."
    },
    {
        "id": 12988,
        "statement": "is(X, blue) :- is(X, cold), is(X, green).",
        "description": "All cold, green things are blue."
    },
    {
        "id": 12989,
        "statement": "is(harry, nice) :- is(harry, furry), is(harry, blue).",
        "description": "If Harry is furry and Harry is blue then Harry is nice."
    },
    {
        "id": 12990,
        "statement": "is(gary, green) :- is(gary, furry).",
        "description": "If Gary is furry then Gary is green."
    },
    {
        "id": 12991,
        "statement": "is(X, furry) :- is(X, green), is(X, white).",
        "description": "If someone is green and white then they are furry."
    },
    {
        "id": 12992,
        "statement": "is(X, round) :- is(X, green), is(X, quiet).",
        "description": "All green, quiet people are round."
    },
    {
        "id": 12993,
        "statement": "is(X, smart) :- is(X, round), is(X, furry).",
        "description": "If someone is round and furry then they are smart."
    },
    {
        "id": 12994,
        "statement": "is(X, rough) :- is(X, quiet), is(X, smart).",
        "description": "Quiet, smart people are rough."
    },
    {
        "id": 12995,
        "statement": "is(X, smart) :- is(X, big), is(X, quiet).",
        "description": "All big, quiet things are smart."
    },
    {
        "id": 12996,
        "statement": "is(X, big) :- is(X, white), is(X, quiet).",
        "description": "White, quiet things are big."
    },
    {
        "id": 12997,
        "statement": "is(X, big) :- is(X, smart), not is(X, white).",
        "description": "If something is smart and not white then it is big."
    },
    {
        "id": 12998,
        "statement": "is(X, quiet) :- is(X, big), is(X, white).",
        "description": "All big, white things are quiet."
    },
    {
        "id": 12999,
        "statement": "is(X, red) :- is(X, green), is(X, cold).",
        "description": "All green, cold people are red."
    },
    {
        "id": 13000,
        "statement": "is(X, cold) :- is(X, rough), is(X, furry).",
        "description": "Rough, furry people are cold."
    },
    {
        "id": 13001,
        "statement": "is(bob, cold) :- is(bob, white).",
        "description": "If Bob is white then Bob is cold."
    },
    {
        "id": 13002,
        "statement": "is(fiona, young) :- is(fiona, green).",
        "description": "If Fiona is green then Fiona is young."
    },
    {
        "id": 13003,
        "statement": "is(X, rough) :- is(X, green), is(X, nice).",
        "description": "All green, nice things are rough."
    },
    {
        "id": 13004,
        "statement": "is(X, quiet) :- is(X, nice), not is(X, blue).",
        "description": "If something is nice and not blue then it is quiet."
    },
    {
        "id": 13005,
        "statement": "is(X, quiet) :- is(X, green), is(X, rough).",
        "description": "All green, rough things are quiet."
    },
    {
        "id": 13006,
        "statement": "chases(X, squirrel) :- is(X, nice).",
        "description": "If someone is nice then they chase the squirrel."
    },
    {
        "id": 13007,
        "statement": "sees(X, bald_eagle) :- needs(X, cow), is(cow, nice).",
        "description": "If someone needs the cow and the cow is nice then they see the bald eagle."
    },
    {
        "id": 13008,
        "statement": "sees(bald_eagle, bear) :- needs(bald_eagle, cow).",
        "description": "If the bald eagle needs the cow then the bald eagle sees the bear."
    },
    {
        "id": 13009,
        "statement": "is(squirrel, blue) :- chases(X, cow), needs(X, squirrel).",
        "description": "If someone chases the cow and they need the squirrel then the squirrel is blue."
    },
    {
        "id": 13010,
        "statement": "is(X, nice) :- sees(X, bald_eagle).",
        "description": "If someone sees the bald eagle then they are nice."
    },
    {
        "id": 13011,
        "statement": "is(X, nice) :- chases(X, squirrel), is(X, young).",
        "description": "If someone chases the squirrel and they are young then they are nice."
    },
    {
        "id": 13012,
        "statement": "sees(X, bear) :- chases(X, bald_eagle).",
        "description": "If someone chases the bald eagle then they see the bear."
    },
    {
        "id": 13013,
        "statement": "is(cow, blue) :- sees(cow, bald_eagle).",
        "description": "If the cow sees the bald eagle then the cow is blue."
    },
    {
        "id": 13014,
        "statement": "is(lion, rough) :- needs(X, lion), likes(lion, bald_eagle).",
        "description": "If someone needs the lion and the lion likes the bald eagle then the lion is rough."
    },
    {
        "id": 13015,
        "statement": "likes(bald_eagle, cow) :- eats(X, bald_eagle), is(bald_eagle, kind).",
        "description": "If someone eats the bald eagle and the bald eagle is kind then the bald eagle likes the cow."
    },
    {
        "id": 13016,
        "statement": "is(lion, kind) :- likes(X, lion).",
        "description": "If someone likes the lion then the lion is kind."
    },
    {
        "id": 13017,
        "statement": "eats(cow, bald_eagle) :- likes(X, cow), is(cow, kind).",
        "description": "If someone likes the cow and the cow is kind then the cow eats the bald eagle."
    },
    {
        "id": 13018,
        "statement": "is(X, kind) :- likes(X, bald_eagle).",
        "description": "If someone likes the bald eagle then they are kind."
    },
    {
        "id": 13019,
        "statement": "likes(cow, bald_eagle) :- likes(X, cow).",
        "description": "If someone likes the cow then the cow likes the bald eagle."
    },
    {
        "id": 13020,
        "statement": "is(fiona, white) :- is(fiona, blue).",
        "description": "If Fiona is blue then Fiona is white."
    },
    {
        "id": 13021,
        "statement": "is(charlie, blue) :- is(charlie, kind).",
        "description": "If Charlie is kind then Charlie is blue."
    },
    {
        "id": 13022,
        "statement": "is(X, rough) :- is(X, white), is(X, cold).",
        "description": "All white, cold things are rough."
    },
    {
        "id": 13023,
        "statement": "is(X, nice) :- is(X, blue), is(X, cold).",
        "description": "All blue, cold things are nice."
    },
    {
        "id": 13024,
        "statement": "is(dave, quiet) :- is(dave, round), is(dave, green).",
        "description": "If Dave is round and Dave is green then Dave is quiet."
    },
    {
        "id": 13025,
        "statement": "is(X, round) :- is(X, young), is(X, kind).",
        "description": "If someone is young and kind then they are round."
    },
    {
        "id": 13026,
        "statement": "is(X, young) :- is(X, kind), is(X, white).",
        "description": "Kind, white people are young."
    },
    {
        "id": 13027,
        "statement": "sees(X, bald_eagle) :- visits(X, dog).",
        "description": "If someone visits the dog then they see the bald eagle."
    },
    {
        "id": 13028,
        "statement": "visits(X, bald_eagle) :- visits(X, tiger).",
        "description": "If someone visits the tiger then they visit the bald eagle."
    },
    {
        "id": 13029,
        "statement": "sees(X, bald_eagle) :- visits(X, bald_eagle), sees(bald_eagle, tiger).",
        "description": "If someone visits the bald eagle and the bald eagle sees the tiger then they see the bald eagle."
    },
    {
        "id": 13030,
        "statement": "needs(X, bald_eagle) :- sees(X, cow).",
        "description": "If someone sees the cow then they need the bald eagle."
    },
    {
        "id": 13031,
        "statement": "is(X, blue) :- needs(X, tiger), visits(tiger, bald_eagle).",
        "description": "If someone needs the tiger and the tiger visits the bald eagle then they are blue."
    },
    {
        "id": 13032,
        "statement": "eats(bald_eagle, tiger) :- eats(X, tiger), needs(X, bald_eagle).",
        "description": "If something eats the tiger and it needs the bald eagle then the bald eagle eats the tiger."
    },
    {
        "id": 13033,
        "statement": "needs(bald_eagle, lion) :- is(bald_eagle, nice), needs(bald_eagle, tiger).",
        "description": "If the bald eagle is nice and the bald eagle needs the tiger then the bald eagle needs the lion."
    },
    {
        "id": 13034,
        "statement": "eats(X, tiger) :- needs(X, tiger).",
        "description": "If something needs the tiger then it eats the tiger."
    },
    {
        "id": 13035,
        "statement": "eats(lion, tiger) :- is(X, nice), eats(X, lion).",
        "description": "If something is nice and it eats the lion then the lion eats the tiger."
    },
    {
        "id": 13036,
        "statement": "needs(lion, tiger) :- eats(lion, squirrel), is(squirrel, nice).",
        "description": "If the lion eats the squirrel and the squirrel is nice then the lion needs the tiger."
    },
    {
        "id": 13037,
        "statement": "is(X, big) :- eats(X, tiger).",
        "description": "If something eats the tiger then it is big."
    },
    {
        "id": 13038,
        "statement": "eats(cat, cow) :- sees(rabbit, cat).",
        "description": "If the rabbit sees the cat then the cat eats the cow."
    },
    {
        "id": 13039,
        "statement": "is(X, cold) :- eats(X, cat).",
        "description": "If someone eats the cat then they are cold."
    },
    {
        "id": 13040,
        "statement": "is(cat, green) :- is(X, nice), needs(X, cat).",
        "description": "If someone is nice and they need the cat then the cat is green."
    },
    {
        "id": 13041,
        "statement": "eats(X, cat) :- eats(X, rabbit).",
        "description": "If someone eats the rabbit then they eat the cat."
    },
    {
        "id": 13042,
        "statement": "eats(X, cat) :- is(X, green).",
        "description": "If someone is green then they eat the cat."
    },
    {
        "id": 13043,
        "statement": "eats(X, tiger) :- sees(X, cat).",
        "description": "If someone sees the cat then they eat the tiger."
    },
    {
        "id": 13044,
        "statement": "needs(tiger, rabbit) :- sees(cow, tiger), needs(tiger, cat).",
        "description": "If the cow sees the tiger and the tiger needs the cat then the tiger needs the rabbit."
    },
    {
        "id": 13045,
        "statement": "needs(X, cat) :- eats(X, tiger).",
        "description": "If someone eats the tiger then they need the cat."
    },
    {
        "id": 13046,
        "statement": "is(bald_eagle, red) :- visits(X, bald_eagle), not sees(X, bald_eagle).",
        "description": "If something visits the bald eagle and it does not see the bald eagle then the bald eagle is red."
    },
    {
        "id": 13047,
        "statement": "sees(X, mouse) :- is(X, nice).",
        "description": "If something is nice then it sees the mouse."
    },
    {
        "id": 13048,
        "statement": "eats(X, cow) :- sees(X, mouse).",
        "description": "If something sees the mouse then it eats the cow."
    },
    {
        "id": 13049,
        "statement": "sees(bear, mouse) :- sees(X, bear).",
        "description": "If something sees the bear then the bear sees the mouse."
    },
    {
        "id": 13050,
        "statement": "eats(X, bear) :- sees(X, bald_eagle).",
        "description": "If something sees the bald eagle then it eats the bear."
    },
    {
        "id": 13051,
        "statement": "is(cow, nice) :- eats(X, bear), eats(X, cow).",
        "description": "If something eats the bear and it eats the cow then the cow is nice."
    },
    {
        "id": 13052,
        "statement": "is(X, rough) :- is(X, nice), is(X, smart).",
        "description": "All nice, smart things are rough."
    },
    {
        "id": 13053,
        "statement": "is(X, nice) :- is(X, round), is(X, big).",
        "description": "All round, big things are nice."
    },
    {
        "id": 13054,
        "statement": "is(X, red) :- is(X, big), not is(X, rough).",
        "description": "If something is big and not rough then it is red."
    },
    {
        "id": 13055,
        "statement": "is(X, red) :- is(X, cold), is(X, round).",
        "description": "Cold, round things are red."
    },
    {
        "id": 13056,
        "statement": "is(X, quiet) :- is(X, nice), is(X, blue).",
        "description": "All nice, blue things are quiet."
    },
    {
        "id": 13057,
        "statement": "is(X, blue) :- is(X, rough), is(X, nice).",
        "description": "Rough, nice things are blue."
    },
    {
        "id": 13058,
        "statement": "is(X, nice) :- is(X, quiet), is(X, blue).",
        "description": "Quiet, blue things are nice."
    },
    {
        "id": 13059,
        "statement": "is(charlie, rough) :- is(charlie, nice), is(charlie, kind).",
        "description": "If Charlie is nice and Charlie is kind then Charlie is rough."
    },
    {
        "id": 13060,
        "statement": "is(X, smart) :- is(X, nice), is(X, round).",
        "description": "All nice, round people are smart."
    },
    {
        "id": 13061,
        "statement": "is(X, rough) :- is(X, nice), is(X, kind).",
        "description": "All nice, kind people are rough."
    },
    {
        "id": 13062,
        "statement": "is(X, round) :- is(X, smart), is(X, kind).",
        "description": "All smart, kind people are round."
    },
    {
        "id": 13063,
        "statement": "is(fiona, kind) :- is(fiona, green).",
        "description": "If Fiona is green then Fiona is kind."
    },
    {
        "id": 13064,
        "statement": "is(X, nice) :- is(X, green), is(X, kind).",
        "description": "All green, kind people are nice."
    },
    {
        "id": 13065,
        "statement": "eats(X, bear) :- chases(X, bear), is(X, red).",
        "description": "If someone chases the bear and they are red then they eat the bear."
    },
    {
        "id": 13066,
        "statement": "is(X, cold) :- eats(X, bear), not chases(X, tiger).",
        "description": "If someone eats the bear and they do not chase the tiger then they are cold."
    },
    {
        "id": 13067,
        "statement": "is(bear, kind) :- needs(dog, bear).",
        "description": "If the dog needs the bear then the bear is kind."
    },
    {
        "id": 13068,
        "statement": "is(dog, red) :- needs(dog, bear), not eats(bear, tiger).",
        "description": "If the dog needs the bear and the bear does not eat the tiger then the dog is red."
    },
    {
        "id": 13069,
        "statement": "is(X, green) :- chases(X, bald_eagle).",
        "description": "If someone chases the bald eagle then they are green."
    },
    {
        "id": 13070,
        "statement": "is(X, red) :- chases(X, bear).",
        "description": "If someone chases the bear then they are red."
    },
    {
        "id": 13071,
        "statement": "chases(X, bear) :- is(X, green), needs(X, tiger).",
        "description": "If someone is green and they need the tiger then they chase the bear."
    },
    {
        "id": 13072,
        "statement": "chases(X, bald_eagle) :- is(X, kind), needs(X, dog).",
        "description": "If someone is kind and they need the dog then they chase the bald eagle."
    },
    {
        "id": 13073,
        "statement": "is(X, blue) :- is(X, quiet), is(X, rough).",
        "description": "All quiet, rough people are blue."
    },
    {
        "id": 13074,
        "statement": "is(X, rough) :- is(X, kind), is(X, quiet).",
        "description": "Kind, quiet people are rough."
    },
    {
        "id": 13075,
        "statement": "is(erin, furry) :- is(erin, round), is(erin, kind).",
        "description": "If Erin is round and Erin is kind then Erin is furry."
    },
    {
        "id": 13076,
        "statement": "is(X, kind) :- is(X, round), is(X, big).",
        "description": "Round, big people are kind."
    },
    {
        "id": 13077,
        "statement": "is(erin, rough) :- is(erin, round), is(erin, blue).",
        "description": "If Erin is round and Erin is blue then Erin is rough."
    },
    {
        "id": 13078,
        "statement": "is(X, round) :- is(X, big), is(X, furry).",
        "description": "Big, furry people are round."
    },
    {
        "id": 13079,
        "statement": "is(X, quiet) :- is(X, big), is(X, furry).",
        "description": "All big, furry people are quiet."
    },
    {
        "id": 13080,
        "statement": "sees(tiger, cow) :- sees(X, tiger).",
        "description": "If something sees the tiger then the tiger sees the cow."
    },
    {
        "id": 13081,
        "statement": "is(cow, big) :- eats(rabbit, cow).",
        "description": "If the rabbit eats the cow then the cow is big."
    },
    {
        "id": 13082,
        "statement": "eats(X, rabbit) :- sees(X, cow), is(cow, cold).",
        "description": "If something sees the cow and the cow is cold then it eats the rabbit."
    },
    {
        "id": 13083,
        "statement": "sees(dog, cow) :- is(dog, young), not is(dog, cold).",
        "description": "If the dog is young and the dog is not cold then the dog sees the cow."
    },
    {
        "id": 13084,
        "statement": "is(X, green) :- eats(X, rabbit), not chases(X, rabbit).",
        "description": "If something eats the rabbit and it does not chase the rabbit then it is green."
    },
    {
        "id": 13085,
        "statement": "sees(X, dog) :- sees(X, tiger), is(tiger, blue).",
        "description": "If something sees the tiger and the tiger is blue then it sees the dog."
    },
    {
        "id": 13086,
        "statement": "eats(rabbit, tiger) :- chases(X, rabbit), not is(X, young).",
        "description": "If something chases the rabbit and it is not young then the rabbit eats the tiger."
    },
    {
        "id": 13087,
        "statement": "sees(rabbit, cow) :- eats(X, rabbit).",
        "description": "If something eats the rabbit then the rabbit sees the cow."
    },
    {
        "id": 13088,
        "statement": "chases(X, tiger) :- sees(X, rabbit), sees(X, cow).",
        "description": "If something sees the rabbit and it sees the cow then it chases the tiger."
    },
    {
        "id": 13089,
        "statement": "visits(cat, squirrel) :- visits(X, squirrel), chases(X, cat).",
        "description": "If something visits the squirrel and it chases the cat then the cat visits the squirrel."
    },
    {
        "id": 13090,
        "statement": "eats(X, cat) :- is(X, kind).",
        "description": "If something is kind then it eats the cat."
    },
    {
        "id": 13091,
        "statement": "chases(X, squirrel) :- visits(X, rabbit), is(rabbit, round).",
        "description": "If something visits the rabbit and the rabbit is round then it chases the squirrel."
    },
    {
        "id": 13092,
        "statement": "is(X, round) :- is(X, kind), not is(X, blue).",
        "description": "If something is kind and not blue then it is round."
    },
    {
        "id": 13093,
        "statement": "is(X, cold) :- visits(X, cat).",
        "description": "If something visits the cat then it is cold."
    },
    {
        "id": 13094,
        "statement": "is(X, red) :- is(X, green), is(X, smart).",
        "description": "If something is green and smart then it is red."
    },
    {
        "id": 13095,
        "statement": "is(X, round) :- is(X, smart), is(X, furry).",
        "description": "If something is smart and furry then it is round."
    },
    {
        "id": 13096,
        "statement": "is(X, cold) :- is(X, blue), is(X, nice).",
        "description": "All blue, nice things are cold."
    },
    {
        "id": 13097,
        "statement": "is(X, big) :- is(X, green), is(X, nice).",
        "description": "Green, nice things are big."
    },
    {
        "id": 13098,
        "statement": "is(X, round) :- is(X, smart), is(X, nice).",
        "description": "If something is smart and nice then it is round."
    },
    {
        "id": 13099,
        "statement": "is(X, cold) :- is(X, furry), is(X, rough).",
        "description": "Furry, rough things are cold."
    },
    {
        "id": 13100,
        "statement": "is(erin, white) :- is(erin, smart).",
        "description": "If Erin is smart then Erin is white."
    },
    {
        "id": 13101,
        "statement": "is(bob, young) :- is(bob, furry).",
        "description": "If Bob is furry then Bob is young."
    },
    {
        "id": 13102,
        "statement": "is(X, kind) :- is(X, smart), is(X, young).",
        "description": "Smart, young things are kind."
    },
    {
        "id": 13103,
        "statement": "chases(rabbit, dog) :- eats(X, rabbit).",
        "description": "If something eats the rabbit then the rabbit chases the dog."
    },
    {
        "id": 13104,
        "statement": "visits(X, cat) :- is(X, rough).",
        "description": "If something is rough then it visits the cat."
    },
    {
        "id": 13105,
        "statement": "is(tiger, kind) :- eats(dog, tiger), eats(tiger, dog).",
        "description": "If the dog eats the tiger and the tiger eats the dog then the tiger is kind."
    },
    {
        "id": 13106,
        "statement": "eats(X, tiger) :- chases(X, dog).",
        "description": "If something chases the dog then it eats the tiger."
    },
    {
        "id": 13107,
        "statement": "chases(X, cat) :- visits(X, cat), eats(cat, tiger).",
        "description": "If something visits the cat and the cat eats the tiger then it chases the cat."
    },
    {
        "id": 13108,
        "statement": "chases(X, cat) :- chases(X, rabbit).",
        "description": "If something chases the rabbit then it chases the cat."
    },
    {
        "id": 13109,
        "statement": "is(dog, kind) :- visits(X, dog).",
        "description": "If something visits the dog then the dog is kind."
    },
    {
        "id": 13110,
        "statement": "chases(rabbit, cow) :- chases(X, rabbit).",
        "description": "If something chases the rabbit then the rabbit chases the cow."
    },
    {
        "id": 13111,
        "statement": "is(X, nice) :- likes(X, bear), not eats(bear, cow).",
        "description": "If something likes the bear and the bear does not eat the cow then it is nice."
    },
    {
        "id": 13112,
        "statement": "chases(X, cat) :- is(X, blue).",
        "description": "If something is blue then it chases the cat."
    },
    {
        "id": 13113,
        "statement": "eats(cat, bear) :- eats(X, cat), not chases(X, rabbit).",
        "description": "If something eats the cat and it does not chase the rabbit then the cat eats the bear."
    },
    {
        "id": 13114,
        "statement": "eats(X, bear) :- likes(X, cow), not is(cow, nice).",
        "description": "If something likes the cow and the cow is not nice then it eats the bear."
    },
    {
        "id": 13115,
        "statement": "is(gary, quiet) :- is(gary, green).",
        "description": "If Gary is green then Gary is quiet."
    },
    {
        "id": 13116,
        "statement": "is(X, young) :- is(X, white), is(X, kind).",
        "description": "White, kind things are young."
    },
    {
        "id": 13117,
        "statement": "is(X, white) :- is(X, nice), is(X, green).",
        "description": "Nice, green things are white."
    },
    {
        "id": 13118,
        "statement": "is(X, green) :- is(X, white).",
        "description": "If something is white then it is green."
    },
    {
        "id": 13119,
        "statement": "is(X, nice) :- is(X, green), is(X, kind).",
        "description": "If something is green and kind then it is nice."
    },
    {
        "id": 13120,
        "statement": "is(X, green) :- is(X, rough), is(X, red).",
        "description": "All rough, red things are green."
    },
    {
        "id": 13121,
        "statement": "is(X, rough) :- is(X, blue), is(X, green).",
        "description": "Blue, green things are rough."
    },
    {
        "id": 13122,
        "statement": "is(X, rough) :- is(X, blue), is(X, young).",
        "description": "All blue, young things are rough."
    },
    {
        "id": 13123,
        "statement": "is(X, smart) :- is(X, round), is(X, green).",
        "description": "If something is round and green then it is smart."
    },
    {
        "id": 13124,
        "statement": "is(X, green) :- is(X, smart), is(X, red).",
        "description": "If something is smart and red then it is green."
    },
    {
        "id": 13125,
        "statement": "is(harry, round) :- is(harry, cold), is(harry, kind).",
        "description": "If Harry is cold and Harry is kind then Harry is round."
    },
    {
        "id": 13126,
        "statement": "is(X, big) :- is(X, green), is(X, smart).",
        "description": "If something is green and smart then it is big."
    },
    {
        "id": 13127,
        "statement": "is(anne, smart) :- is(anne, kind).",
        "description": "If Anne is kind then Anne is smart."
    },
    {
        "id": 13128,
        "statement": "is(X, white) :- is(X, cold), is(X, blue).",
        "description": "Cold, blue people are white."
    },
    {
        "id": 13129,
        "statement": "is(X, smart) :- is(X, young), is(X, cold).",
        "description": "If someone is young and cold then they are smart."
    },
    {
        "id": 13130,
        "statement": "eats(mouse, tiger) :- not sees(mouse, tiger).",
        "description": "If the mouse does not see the tiger then the mouse eats the tiger."
    },
    {
        "id": 13131,
        "statement": "eats(bald_eagle, mouse) :- is(bald_eagle, big), not is(bald_eagle, round).",
        "description": "If the bald eagle is big and the bald eagle is not round then the bald eagle eats the mouse."
    },
    {
        "id": 13132,
        "statement": "is(mouse, cold) :- eats(X, mouse).",
        "description": "If something eats the mouse then the mouse is cold."
    },
    {
        "id": 13133,
        "statement": "visits(X, tiger) :- eats(X, bear), not eats(bear, bald_eagle).",
        "description": "If something eats the bear and the bear does not eat the bald eagle then it visits the tiger."
    },
    {
        "id": 13134,
        "statement": "is(bald_eagle, cold) :- eats(X, bald_eagle), is(bald_eagle, nice).",
        "description": "If something eats the bald eagle and the bald eagle is nice then the bald eagle is cold."
    },
    {
        "id": 13135,
        "statement": "visits(bald_eagle, tiger) :- is(mouse, rough), sees(mouse, bald_eagle).",
        "description": "If the mouse is rough and the mouse sees the bald eagle then the bald eagle visits the tiger."
    },
    {
        "id": 13136,
        "statement": "visits(X, bear) :- sees(X, tiger), eats(X, mouse).",
        "description": "If something sees the tiger and it eats the mouse then it visits the bear."
    },
    {
        "id": 13137,
        "statement": "is(X, cold) :- is(X, green), is(X, smart).",
        "description": "Green, smart things are cold."
    },
    {
        "id": 13138,
        "statement": "is(X, green) :- is(X, smart), is(X, furry).",
        "description": "All smart, furry things are green."
    },
    {
        "id": 13139,
        "statement": "is(anne, quiet) :- is(anne, furry).",
        "description": "If Anne is furry then Anne is quiet."
    },
    {
        "id": 13140,
        "statement": "is(fiona, nice) :- is(fiona, cold), is(fiona, smart).",
        "description": "If Fiona is cold and Fiona is smart then Fiona is nice."
    },
    {
        "id": 13141,
        "statement": "is(X, cold) :- is(X, quiet), is(X, white).",
        "description": "If something is quiet and white then it is cold."
    },
    {
        "id": 13142,
        "statement": "is(anne, smart) :- is(anne, quiet).",
        "description": "If Anne is quiet then Anne is smart."
    },
    {
        "id": 13143,
        "statement": "is(X, cold) :- sees(X, bear), is(bear, green).",
        "description": "If something sees the bear and the bear is green then it is cold."
    },
    {
        "id": 13144,
        "statement": "sees(X, squirrel) :- sees(X, cow).",
        "description": "If something sees the cow then it sees the squirrel."
    },
    {
        "id": 13145,
        "statement": "eats(cow, squirrel) :- chases(X, cow), sees(X, bear).",
        "description": "If something chases the cow and it sees the bear then the cow eats the squirrel."
    },
    {
        "id": 13146,
        "statement": "is(X, nice) :- sees(X, cow), is(X, young).",
        "description": "If something sees the cow and it is young then it is nice."
    },
    {
        "id": 13147,
        "statement": "eats(X, cow) :- is(X, big), sees(X, dog).",
        "description": "If something is big and it sees the dog then it eats the cow."
    },
    {
        "id": 13148,
        "statement": "is(fiona, big) :- is(fiona, nice), is(fiona, red).",
        "description": "If Fiona is nice and Fiona is red then Fiona is big."
    },
    {
        "id": 13149,
        "statement": "is(dave, smart) :- is(dave, blue), not is(dave, big).",
        "description": "If Dave is blue and Dave is not big then Dave is smart."
    },
    {
        "id": 13150,
        "statement": "is(X, smart) :- is(X, green), is(X, big).",
        "description": "Green, big things are smart."
    },
    {
        "id": 13151,
        "statement": "is(X, red) :- is(X, furry), is(X, green).",
        "description": "If something is furry and green then it is red."
    },
    {
        "id": 13152,
        "statement": "is(X, rough) :- is(X, red), is(X, furry).",
        "description": "If something is red and furry then it is rough."
    },
    {
        "id": 13153,
        "statement": "is(bob, green) :- is(bob, smart).",
        "description": "If Bob is smart then Bob is green."
    },
    {
        "id": 13154,
        "statement": "is(X, red) :- is(X, furry), is(X, green).",
        "description": "Furry, green things are red."
    },
    {
        "id": 13155,
        "statement": "is(bob, green) :- is(bob, rough).",
        "description": "If Bob is rough then Bob is green."
    },
    {
        "id": 13156,
        "statement": "is(X, kind) :- is(X, furry), is(X, blue).",
        "description": "All furry, blue people are kind."
    },
    {
        "id": 13157,
        "statement": "is(X, rough) :- is(X, furry), is(X, kind).",
        "description": "All furry, kind people are rough."
    },
    {
        "id": 13158,
        "statement": "eats(X, bear) :- visits(X, tiger).",
        "description": "If something visits the tiger then it eats the bear."
    },
    {
        "id": 13159,
        "statement": "eats(lion, squirrel) :- visits(X, lion), eats(X, bear).",
        "description": "If something visits the lion and it eats the bear then the lion eats the squirrel."
    },
    {
        "id": 13160,
        "statement": "is(X, round) :- is(X, nice), needs(X, squirrel).",
        "description": "If something is nice and it needs the squirrel then it is round."
    },
    {
        "id": 13161,
        "statement": "is(squirrel, kind) :- needs(squirrel, tiger).",
        "description": "If the squirrel needs the tiger then the squirrel is kind."
    },
    {
        "id": 13162,
        "statement": "needs(X, squirrel) :- eats(X, lion).",
        "description": "If something eats the lion then it needs the squirrel."
    },
    {
        "id": 13163,
        "statement": "is(tiger, nice) :- needs(X, squirrel), not eats(X, tiger).",
        "description": "If something needs the squirrel and it does not eat the tiger then the tiger is nice."
    },
    {
        "id": 13164,
        "statement": "visits(X, bald_eagle) :- is(X, young).",
        "description": "If something is young then it visits the bald eagle."
    },
    {
        "id": 13165,
        "statement": "is(tiger, big) :- likes(X, tiger), is(X, big).",
        "description": "If something likes the tiger and it is big then the tiger is big."
    },
    {
        "id": 13166,
        "statement": "needs(X, squirrel) :- needs(X, bald_eagle), is(bald_eagle, young).",
        "description": "If something needs the bald eagle and the bald eagle is young then it needs the squirrel."
    },
    {
        "id": 13167,
        "statement": "needs(X, squirrel) :- visits(X, bald_eagle).",
        "description": "If something visits the bald eagle then it needs the squirrel."
    },
    {
        "id": 13168,
        "statement": "visits(X, cat) :- likes(X, bald_eagle).",
        "description": "If something likes the bald eagle then it visits the cat."
    },
    {
        "id": 13169,
        "statement": "is(squirrel, big) :- needs(X, squirrel).",
        "description": "If something needs the squirrel then the squirrel is big."
    },
    {
        "id": 13170,
        "statement": "visits(bald_eagle, tiger) :- is(X, big), likes(X, bald_eagle).",
        "description": "If something is big and it likes the bald eagle then the bald eagle visits the tiger."
    },
    {
        "id": 13171,
        "statement": "is(charlie, cold) :- is(charlie, round), is(charlie, green).",
        "description": "If Charlie is round and Charlie is green then Charlie is cold."
    },
    {
        "id": 13172,
        "statement": "is(X, white) :- is(X, cold), is(X, young).",
        "description": "Cold, young things are white."
    },
    {
        "id": 13173,
        "statement": "is(X, rough) :- is(X, white), is(X, round).",
        "description": "All white, round things are rough."
    },
    {
        "id": 13174,
        "statement": "is(erin, cold) :- not is(erin, young).",
        "description": "If Erin is not young then Erin is cold."
    },
    {
        "id": 13175,
        "statement": "is(charlie, blue) :- is(charlie, young), is(charlie, round).",
        "description": "If Charlie is young and Charlie is round then Charlie is blue."
    },
    {
        "id": 13176,
        "statement": "is(X, green) :- is(X, rough), is(X, cold).",
        "description": "All rough, cold things are green."
    },
    {
        "id": 13177,
        "statement": "is(charlie, green) :- is(charlie, blue).",
        "description": "If Charlie is blue then Charlie is green."
    },
    {
        "id": 13178,
        "statement": "is(gary, quiet) :- is(gary, red).",
        "description": "If Gary is red then Gary is quiet."
    },
    {
        "id": 13179,
        "statement": "is(X, big) :- is(X, quiet), is(X, round).",
        "description": "All quiet, round things are big."
    },
    {
        "id": 13180,
        "statement": "is(X, blue) :- is(X, white), is(X, young).",
        "description": "White, young things are blue."
    },
    {
        "id": 13181,
        "statement": "is(X, red) :- is(X, round), is(X, young).",
        "description": "All round, young things are red."
    },
    {
        "id": 13182,
        "statement": "is(gary, young) :- is(gary, round), is(gary, big).",
        "description": "If Gary is round and Gary is big then Gary is young."
    },
    {
        "id": 13183,
        "statement": "likes(X, tiger) :- is(X, rough), likes(X, cow).",
        "description": "If something is rough and it likes the cow then it likes the tiger."
    },
    {
        "id": 13184,
        "statement": "chases(tiger, squirrel) :- likes(dog, tiger), chases(dog, tiger).",
        "description": "If the dog likes the tiger and the dog chases the tiger then the tiger chases the squirrel."
    },
    {
        "id": 13185,
        "statement": "likes(X, cow) :- visits(X, squirrel), chases(X, tiger).",
        "description": "If something visits the squirrel and it chases the tiger then it likes the cow."
    },
    {
        "id": 13186,
        "statement": "likes(cow, tiger) :- chases(X, squirrel), likes(squirrel, cow).",
        "description": "If something chases the squirrel and the squirrel likes the cow then the cow likes the tiger."
    },
    {
        "id": 13187,
        "statement": "is(dog, kind) :- likes(X, dog).",
        "description": "If something likes the dog then the dog is kind."
    },
    {
        "id": 13188,
        "statement": "is(cow, kind) :- likes(squirrel, cow), chases(squirrel, tiger).",
        "description": "If the squirrel likes the cow and the squirrel chases the tiger then the cow is kind."
    },
    {
        "id": 13189,
        "statement": "chases(tiger, dog) :- visits(tiger, cow).",
        "description": "If the tiger visits the cow then the tiger chases the dog."
    },
    {
        "id": 13190,
        "statement": "visits(X, squirrel) :- is(X, kind).",
        "description": "If something is kind then it visits the squirrel."
    },
    {
        "id": 13191,
        "statement": "chases(dog, cow) :- likes(X, dog).",
        "description": "If something likes the dog then the dog chases the cow."
    },
    {
        "id": 13192,
        "statement": "is(X, round) :- is(X, red), is(X, smart).",
        "description": "Red, smart people are round."
    },
    {
        "id": 13193,
        "statement": "is(X, red) :- is(X, big), is(X, round).",
        "description": "Big, round people are red."
    },
    {
        "id": 13194,
        "statement": "is(X, red) :- is(X, big), is(X, rough).",
        "description": "All big, rough people are red."
    },
    {
        "id": 13195,
        "statement": "is(dave, rough) :- is(dave, white), is(dave, round).",
        "description": "If Dave is white and Dave is round then Dave is rough."
    },
    {
        "id": 13196,
        "statement": "is(X, quiet) :- is(X, big), is(X, smart).",
        "description": "Big, smart people are quiet."
    },
    {
        "id": 13197,
        "statement": "is(X, round) :- is(X, white), is(X, green).",
        "description": "White, green things are round."
    },
    {
        "id": 13198,
        "statement": "is(dave, kind) :- is(dave, smart), is(dave, green).",
        "description": "If Dave is smart and Dave is green then Dave is kind."
    },
    {
        "id": 13199,
        "statement": "is(X, big) :- is(X, young), is(X, cold).",
        "description": "If someone is young and cold then they are big."
    },
    {
        "id": 13200,
        "statement": "is(X, cold) :- is(X, white), is(X, round).",
        "description": "If someone is white and round then they are cold."
    },
    {
        "id": 13201,
        "statement": "is(charlie, furry) :- is(charlie, cold), is(charlie, white).",
        "description": "If Charlie is cold and Charlie is white then Charlie is furry."
    },
    {
        "id": 13202,
        "statement": "is(X, white) :- is(X, round), is(X, nice).",
        "description": "All round, nice people are white."
    },
    {
        "id": 13203,
        "statement": "is(X, nice) :- is(X, furry), is(X, smart).",
        "description": "If someone is furry and smart then they are nice."
    },
    {
        "id": 13204,
        "statement": "is(X, nice) :- is(X, furry), is(X, big).",
        "description": "All furry, big people are nice."
    },
    {
        "id": 13205,
        "statement": "is(X, rough) :- is(X, red), is(X, nice).",
        "description": "All red, nice people are rough."
    },
    {
        "id": 13206,
        "statement": "is(X, big) :- is(X, green), is(X, red).",
        "description": "If someone is green and red then they are big."
    },
    {
        "id": 13207,
        "statement": "is(anne, furry) :- is(anne, big), not is(anne, young).",
        "description": "If Anne is big and Anne is not young then Anne is furry."
    },
    {
        "id": 13208,
        "statement": "is(X, big) :- is(X, blue), is(X, young).",
        "description": "All blue, young things are big."
    },
    {
        "id": 13209,
        "statement": "is(gary, blue) :- is(gary, white), is(gary, smart).",
        "description": "If Gary is white and Gary is smart then Gary is blue."
    },
    {
        "id": 13210,
        "statement": "is(X, furry) :- is(X, big), is(X, rough).",
        "description": "If something is big and rough then it is furry."
    },
    {
        "id": 13211,
        "statement": "is(X, furry) :- is(X, big), is(X, white).",
        "description": "Big, white things are furry."
    },
    {
        "id": 13212,
        "statement": "sees(X, cow) :- eats(X, lion), sees(lion, cow).",
        "description": "If someone eats the lion and the lion sees the cow then they see the cow."
    },
    {
        "id": 13213,
        "statement": "sees(X, cow) :- likes(X, bald_eagle).",
        "description": "If someone likes the bald eagle then they see the cow."
    },
    {
        "id": 13214,
        "statement": "likes(bald_eagle, lion) :- is(X, young), sees(X, bald_eagle).",
        "description": "If someone is young and they see the bald eagle then the bald eagle likes the lion."
    },
    {
        "id": 13215,
        "statement": "sees(dog, lion) :- eats(X, dog), eats(dog, cow).",
        "description": "If someone eats the dog and the dog eats the cow then the dog sees the lion."
    },
    {
        "id": 13216,
        "statement": "sees(X, bald_eagle) :- is(X, young), likes(X, lion).",
        "description": "If someone is young and they like the lion then they see the bald eagle."
    },
    {
        "id": 13217,
        "statement": "eats(X, dog) :- likes(X, lion).",
        "description": "If someone likes the lion then they eat the dog."
    },
    {
        "id": 13218,
        "statement": "sees(cow, dog) :- is(X, rough), eats(X, cow).",
        "description": "If someone is rough and they eat the cow then the cow sees the dog."
    },
    {
        "id": 13219,
        "statement": "is(X, green) :- is(X, furry), is(X, round).",
        "description": "All furry, round things are green."
    },
    {
        "id": 13220,
        "statement": "is(X, furry) :- is(X, smart), is(X, round).",
        "description": "Smart, round things are furry."
    },
    {
        "id": 13221,
        "statement": "is(X, cold) :- is(X, smart), is(X, nice).",
        "description": "All smart, nice people are cold."
    },
    {
        "id": 13222,
        "statement": "is(X, young) :- is(X, cold), is(X, green).",
        "description": "Cold, green people are young."
    },
    {
        "id": 13223,
        "statement": "is(X, smart) :- is(X, white), is(X, quiet).",
        "description": "White, quiet things are smart."
    },
    {
        "id": 13224,
        "statement": "is(X, quiet) :- is(X, smart), is(X, nice).",
        "description": "Smart, nice things are quiet."
    },
    {
        "id": 13225,
        "statement": "is(X, blue) :- is(X, quiet), is(X, big).",
        "description": "If something is quiet and big then it is blue."
    },
    {
        "id": 13226,
        "statement": "is(X, cold) :- is(X, big), is(X, quiet).",
        "description": "If something is big and quiet then it is cold."
    },
    {
        "id": 13227,
        "statement": "is(anne, nice) :- is(anne, smart), is(anne, cold).",
        "description": "If Anne is smart and Anne is cold then Anne is nice."
    },
    {
        "id": 13228,
        "statement": "is(X, green) :- is(X, nice), is(X, kind).",
        "description": "If something is nice and kind then it is green."
    },
    {
        "id": 13229,
        "statement": "is(X, quiet) :- is(X, nice), is(X, kind).",
        "description": "If something is nice and kind then it is quiet."
    },
    {
        "id": 13230,
        "statement": "is(mouse, rough) :- sees(X, mouse), chases(X, bear).",
        "description": "If something sees the mouse and it chases the bear then the mouse is rough."
    },
    {
        "id": 13231,
        "statement": "sees(X, mouse) :- likes(X, bear).",
        "description": "If something likes the bear then it sees the mouse."
    },
    {
        "id": 13232,
        "statement": "sees(rabbit, tiger) :- chases(X, mouse), chases(mouse, rabbit).",
        "description": "If something chases the mouse and the mouse chases the rabbit then the rabbit sees the tiger."
    },
    {
        "id": 13233,
        "statement": "likes(tiger, mouse) :- chases(X, tiger), is(tiger, rough).",
        "description": "If something chases the tiger and the tiger is rough then the tiger likes the mouse."
    },
    {
        "id": 13234,
        "statement": "chases(rabbit, mouse) :- chases(X, bear), likes(bear, rabbit).",
        "description": "If something chases the bear and the bear likes the rabbit then the rabbit chases the mouse."
    },
    {
        "id": 13235,
        "statement": "likes(X, rabbit) :- sees(X, mouse).",
        "description": "If something sees the mouse then it likes the rabbit."
    },
    {
        "id": 13236,
        "statement": "chases(rabbit, tiger) :- is(rabbit, cold).",
        "description": "If the rabbit is cold then the rabbit chases the tiger."
    },
    {
        "id": 13237,
        "statement": "likes(rabbit, bear) :- likes(X, rabbit).",
        "description": "If something likes the rabbit then the rabbit likes the bear."
    },
    {
        "id": 13238,
        "statement": "is(X, cold) :- likes(X, squirrel).",
        "description": "If someone likes the squirrel then they are cold."
    },
    {
        "id": 13239,
        "statement": "visits(mouse, squirrel) :- is(X, green), likes(X, mouse).",
        "description": "If someone is green and they like the mouse then the mouse visits the squirrel."
    },
    {
        "id": 13240,
        "statement": "needs(lion, rabbit) :- visits(X, lion).",
        "description": "If someone visits the lion then the lion needs the rabbit."
    },
    {
        "id": 13241,
        "statement": "needs(X, squirrel) :- is(X, round).",
        "description": "If someone is round then they need the squirrel."
    },
    {
        "id": 13242,
        "statement": "is(X, kind) :- needs(X, rabbit).",
        "description": "If someone needs the rabbit then they are kind."
    },
    {
        "id": 13243,
        "statement": "is(mouse, red) :- is(X, cold), needs(X, mouse).",
        "description": "If someone is cold and they need the mouse then the mouse is red."
    },
    {
        "id": 13244,
        "statement": "likes(X, squirrel) :- is(X, green).",
        "description": "If someone is green then they like the squirrel."
    },
    {
        "id": 13245,
        "statement": "is(X, kind) :- is(X, furry), is(X, red).",
        "description": "Furry, red people are kind."
    },
    {
        "id": 13246,
        "statement": "is(anne, red) :- is(anne, kind).",
        "description": "If Anne is kind then Anne is red."
    },
    {
        "id": 13247,
        "statement": "is(gary, furry) :- is(gary, cold).",
        "description": "If Gary is cold then Gary is furry."
    },
    {
        "id": 13248,
        "statement": "is(harry, red) :- is(harry, furry), is(harry, young).",
        "description": "If Harry is furry and Harry is young then Harry is red."
    },
    {
        "id": 13249,
        "statement": "is(X, cold) :- is(X, young), is(X, furry).",
        "description": "Young, furry people are cold."
    },
    {
        "id": 13250,
        "statement": "is(X, young) :- is(X, cold), is(X, nice).",
        "description": "All cold, nice people are young."
    },
    {
        "id": 13251,
        "statement": "is(X, nice) :- is(X, kind), is(X, big).",
        "description": "All kind, big people are nice."
    },
    {
        "id": 13252,
        "statement": "is(X, smart) :- is(X, round), is(X, white).",
        "description": "If someone is round and white then they are smart."
    },
    {
        "id": 13253,
        "statement": "is(X, kind) :- is(X, round), is(X, blue).",
        "description": "If someone is round and blue then they are kind."
    },
    {
        "id": 13254,
        "statement": "is(X, round) :- is(X, kind), is(X, smart).",
        "description": "If someone is kind and smart then they are round."
    },
    {
        "id": 13255,
        "statement": "is(charlie, green) :- is(charlie, round), is(charlie, blue).",
        "description": "If Charlie is round and Charlie is blue then Charlie is green."
    },
    {
        "id": 13256,
        "statement": "is(X, blue) :- is(X, green), is(X, furry).",
        "description": "If someone is green and furry then they are blue."
    },
    {
        "id": 13257,
        "statement": "is(X, furry) :- is(X, round), is(X, green).",
        "description": "All round, green people are furry."
    },
    {
        "id": 13258,
        "statement": "is(squirrel, nice) :- chases(X, squirrel).",
        "description": "If someone chases the squirrel then the squirrel is nice."
    },
    {
        "id": 13259,
        "statement": "eats(bald_eagle, tiger) :- eats(X, bald_eagle), eats(X, tiger).",
        "description": "If someone eats the bald eagle and they eat the tiger then the bald eagle eats the tiger."
    },
    {
        "id": 13260,
        "statement": "chases(X, squirrel) :- chases(X, bald_eagle).",
        "description": "If someone chases the bald eagle then they chase the squirrel."
    },
    {
        "id": 13261,
        "statement": "eats(X, bald_eagle) :- eats(X, tiger).",
        "description": "If someone eats the tiger then they eat the bald eagle."
    },
    {
        "id": 13262,
        "statement": "is(lion, round) :- chases(X, lion).",
        "description": "If someone chases the lion then the lion is round."
    },
    {
        "id": 13263,
        "statement": "eats(lion, tiger) :- needs(X, lion).",
        "description": "If someone needs the lion then the lion eats the tiger."
    },
    {
        "id": 13264,
        "statement": "chases(X, bald_eagle) :- eats(X, bald_eagle).",
        "description": "If someone eats the bald eagle then they chase the bald eagle."
    },
    {
        "id": 13265,
        "statement": "chases(tiger, squirrel) :- chases(X, tiger), needs(tiger, bald_eagle).",
        "description": "If someone chases the tiger and the tiger needs the bald eagle then the tiger chases the squirrel."
    },
    {
        "id": 13266,
        "statement": "eats(lion, tiger) :- eats(squirrel, lion).",
        "description": "If the squirrel eats the lion then the lion eats the tiger."
    },
    {
        "id": 13267,
        "statement": "eats(X, tiger) :- eats(X, mouse), is(mouse, rough).",
        "description": "If someone eats the mouse and the mouse is rough then they eat the tiger."
    },
    {
        "id": 13268,
        "statement": "needs(bear, cow) :- eats(bear, cow).",
        "description": "If the bear eats the cow then the bear needs the cow."
    },
    {
        "id": 13269,
        "statement": "is(cow, nice) :- needs(X, mouse), needs(mouse, cow).",
        "description": "If someone needs the mouse and the mouse needs the cow then the cow is nice."
    },
    {
        "id": 13270,
        "statement": "is(X, rough) :- eats(X, tiger).",
        "description": "If someone eats the tiger then they are rough."
    },
    {
        "id": 13271,
        "statement": "eats(cow, bear) :- sees(X, cow).",
        "description": "If someone sees the cow then the cow eats the bear."
    },
    {
        "id": 13272,
        "statement": "eats(tiger, mouse) :- is(tiger, blue).",
        "description": "If the tiger is blue then the tiger eats the mouse."
    },
    {
        "id": 13273,
        "statement": "eats(mouse, tiger) :- not needs(cow, mouse).",
        "description": "If the cow does not need the mouse then the mouse eats the tiger."
    },
    {
        "id": 13274,
        "statement": "sees(X, tiger) :- is(X, rough).",
        "description": "If someone is rough then they see the tiger."
    },
    {
        "id": 13275,
        "statement": "eats(mouse, bear) :- needs(mouse, tiger).",
        "description": "If the mouse needs the tiger then the mouse eats the bear."
    },
    {
        "id": 13276,
        "statement": "is(X, white) :- is(X, red), is(X, rough).",
        "description": "If something is red and rough then it is white."
    },
    {
        "id": 13277,
        "statement": "is(bob, nice) :- is(bob, round), is(bob, red).",
        "description": "If Bob is round and Bob is red then Bob is nice."
    },
    {
        "id": 13278,
        "statement": "is(X, nice) :- is(X, white), is(X, rough).",
        "description": "White, rough things are nice."
    },
    {
        "id": 13279,
        "statement": "is(X, white) :- is(X, red), is(X, nice).",
        "description": "All red, nice things are white."
    },
    {
        "id": 13280,
        "statement": "is(X, young) :- is(X, rough), sees(X, cat).",
        "description": "If someone is rough and they see the cat then they are young."
    },
    {
        "id": 13281,
        "statement": "needs(mouse, bald_eagle) :- is(X, kind), likes(X, mouse).",
        "description": "If someone is kind and they like the mouse then the mouse needs the bald eagle."
    },
    {
        "id": 13282,
        "statement": "sees(bald_eagle, cow) :- likes(X, bald_eagle), needs(X, bald_eagle).",
        "description": "If someone likes the bald eagle and they need the bald eagle then the bald eagle sees the cow."
    },
    {
        "id": 13283,
        "statement": "sees(X, mouse) :- sees(X, bald_eagle).",
        "description": "If someone sees the bald eagle then they see the mouse."
    },
    {
        "id": 13284,
        "statement": "needs(bald_eagle, mouse) :- needs(X, cow), not likes(X, bald_eagle).",
        "description": "If someone needs the cow and they do not like the bald eagle then the bald eagle needs the mouse."
    },
    {
        "id": 13285,
        "statement": "needs(mouse, cat) :- needs(mouse, bald_eagle), not is(mouse, young).",
        "description": "If the mouse needs the bald eagle and the mouse is not young then the mouse needs the cat."
    },
    {
        "id": 13286,
        "statement": "likes(cat, cow) :- is(X, kind), needs(X, cat).",
        "description": "If someone is kind and they need the cat then the cat likes the cow."
    },
    {
        "id": 13287,
        "statement": "is(X, nice) :- is(X, smart), is(X, rough).",
        "description": "All smart, rough people are nice."
    },
    {
        "id": 13288,
        "statement": "is(fiona, smart) :- is(fiona, nice), is(fiona, cold).",
        "description": "If Fiona is nice and Fiona is cold then Fiona is smart."
    },
    {
        "id": 13289,
        "statement": "is(X, white) :- is(X, cold), is(X, smart).",
        "description": "All cold, smart things are white."
    },
    {
        "id": 13290,
        "statement": "is(X, nice) :- is(X, white), is(X, rough).",
        "description": "If something is white and rough then it is nice."
    },
    {
        "id": 13291,
        "statement": "is(X, nice) :- is(X, furry), is(X, blue).",
        "description": "All furry, blue things are nice."
    },
    {
        "id": 13292,
        "statement": "is(X, cold) :- is(X, rough), is(X, young).",
        "description": "Rough, young things are cold."
    },
    {
        "id": 13293,
        "statement": "is(X, kind) :- is(X, young), is(X, white).",
        "description": "All young, white things are kind."
    },
    {
        "id": 13294,
        "statement": "is(X, nice) :- eats(X, squirrel).",
        "description": "If someone eats the squirrel then they are nice."
    },
    {
        "id": 13295,
        "statement": "eats(X, squirrel) :- needs(X, bald_eagle).",
        "description": "If someone needs the bald eagle then they eat the squirrel."
    },
    {
        "id": 13296,
        "statement": "is(X, kind) :- is(X, nice), needs(X, bald_eagle).",
        "description": "If someone is nice and they need the bald eagle then they are kind."
    },
    {
        "id": 13297,
        "statement": "chases(X, bald_eagle) :- is(X, kind).",
        "description": "If someone is kind then they chase the bald eagle."
    },
    {
        "id": 13298,
        "statement": "needs(bald_eagle, cat) :- eats(X, bald_eagle), is(bald_eagle, green).",
        "description": "If someone eats the bald eagle and the bald eagle is green then the bald eagle needs the cat."
    },
    {
        "id": 13299,
        "statement": "is(squirrel, cold) :- eats(X, squirrel).",
        "description": "If someone eats the squirrel then the squirrel is cold."
    },
    {
        "id": 13300,
        "statement": "needs(bald_eagle, squirrel) :- chases(X, bald_eagle).",
        "description": "If someone chases the bald eagle then the bald eagle needs the squirrel."
    },
    {
        "id": 13301,
        "statement": "needs(bald_eagle, cat) :- is(bald_eagle, green), chases(bald_eagle, lion).",
        "description": "If the bald eagle is green and the bald eagle chases the lion then the bald eagle needs the cat."
    },
    {
        "id": 13302,
        "statement": "chases(X, bear) :- eats(X, bear), chases(bear, squirrel).",
        "description": "If something eats the bear and the bear chases the squirrel then it chases the bear."
    },
    {
        "id": 13303,
        "statement": "eats(X, squirrel) :- needs(X, mouse), is(X, round).",
        "description": "If something needs the mouse and it is round then it eats the squirrel."
    },
    {
        "id": 13304,
        "statement": "chases(squirrel, mouse) :- needs(squirrel, lion), chases(lion, bear).",
        "description": "If the squirrel needs the lion and the lion chases the bear then the squirrel chases the mouse."
    },
    {
        "id": 13305,
        "statement": "eats(X, mouse) :- chases(X, squirrel).",
        "description": "If something chases the squirrel then it eats the mouse."
    },
    {
        "id": 13306,
        "statement": "eats(X, bear) :- eats(X, mouse).",
        "description": "If something eats the mouse then it eats the bear."
    },
    {
        "id": 13307,
        "statement": "chases(bear, squirrel) :- needs(X, bear), eats(X, bear).",
        "description": "If something needs the bear and it eats the bear then the bear chases the squirrel."
    },
    {
        "id": 13308,
        "statement": "is(mouse, nice) :- eats(X, mouse).",
        "description": "If something eats the mouse then the mouse is nice."
    },
    {
        "id": 13309,
        "statement": "eats(X, bear) :- is(X, big), eats(X, squirrel).",
        "description": "If something is big and it eats the squirrel then it eats the bear."
    },
    {
        "id": 13310,
        "statement": "needs(lion, bear) :- needs(X, lion), chases(X, mouse).",
        "description": "If something needs the lion and it chases the mouse then the lion needs the bear."
    },
    {
        "id": 13311,
        "statement": "is(X, big) :- eats(X, rabbit).",
        "description": "If something eats the rabbit then it is big."
    },
    {
        "id": 13312,
        "statement": "sees(rabbit, tiger) :- needs(X, cat), sees(cat, rabbit).",
        "description": "If something needs the cat and the cat sees the rabbit then the rabbit sees the tiger."
    },
    {
        "id": 13313,
        "statement": "sees(rabbit, tiger) :- eats(X, rabbit).",
        "description": "If something eats the rabbit then the rabbit sees the tiger."
    },
    {
        "id": 13314,
        "statement": "needs(X, cat) :- needs(X, rabbit).",
        "description": "If something needs the rabbit then it needs the cat."
    },
    {
        "id": 13315,
        "statement": "needs(X, rabbit) :- is(X, green).",
        "description": "If something is green then it needs the rabbit."
    },
    {
        "id": 13316,
        "statement": "eats(X, rabbit) :- is(X, cold).",
        "description": "If something is cold then it eats the rabbit."
    },
    {
        "id": 13317,
        "statement": "is(tiger, green) :- is(X, rough), not eats(X, tiger).",
        "description": "If something is rough and it does not eat the tiger then the tiger is green."
    },
    {
        "id": 13318,
        "statement": "eats(cat, lion) :- needs(X, tiger), sees(X, cat).",
        "description": "If something needs the tiger and it sees the cat then the cat eats the lion."
    },
    {
        "id": 13319,
        "statement": "is(erin, rough) :- is(erin, blue), is(erin, white).",
        "description": "If Erin is blue and Erin is white then Erin is rough."
    },
    {
        "id": 13320,
        "statement": "is(X, blue) :- is(X, red), is(X, white).",
        "description": "If someone is red and white then they are blue."
    },
    {
        "id": 13321,
        "statement": "is(X, quiet) :- is(X, white), is(X, red).",
        "description": "If someone is white and red then they are quiet."
    },
    {
        "id": 13322,
        "statement": "is(fiona, young) :- is(fiona, quiet), is(fiona, white).",
        "description": "If Fiona is quiet and Fiona is white then Fiona is young."
    },
    {
        "id": 13323,
        "statement": "is(fiona, nice) :- is(fiona, white), is(fiona, kind).",
        "description": "If Fiona is white and Fiona is kind then Fiona is nice."
    },
    {
        "id": 13324,
        "statement": "is(X, cold) :- is(X, kind), is(X, green).",
        "description": "Kind, green people are cold."
    },
    {
        "id": 13325,
        "statement": "visits(X, bald_eagle) :- is(X, green).",
        "description": "If someone is green then they visit the bald eagle."
    },
    {
        "id": 13326,
        "statement": "visits(X, bear) :- is(X, red).",
        "description": "If someone is red then they visit the bear."
    },
    {
        "id": 13327,
        "statement": "is(bald_eagle, green) :- needs(X, bald_eagle), visits(bald_eagle, lion).",
        "description": "If someone needs the bald eagle and the bald eagle visits the lion then the bald eagle is green."
    },
    {
        "id": 13328,
        "statement": "is(bear, big) :- needs(bear, lion).",
        "description": "If the bear needs the lion then the bear is big."
    },
    {
        "id": 13329,
        "statement": "needs(X, bald_eagle) :- visits(X, bald_eagle).",
        "description": "If someone visits the bald eagle then they need the bald eagle."
    },
    {
        "id": 13330,
        "statement": "chases(X, bear) :- eats(X, squirrel).",
        "description": "If someone eats the squirrel then they chase the bear."
    },
    {
        "id": 13331,
        "statement": "chases(tiger, mouse) :- is(X, red), not eats(X, tiger).",
        "description": "If someone is red and they do not eat the tiger then the tiger chases the mouse."
    },
    {
        "id": 13332,
        "statement": "is(bear, big) :- chases(X, bear).",
        "description": "If someone chases the bear then the bear is big."
    },
    {
        "id": 13333,
        "statement": "is(tiger, big) :- eats(X, tiger), eats(X, bear).",
        "description": "If someone eats the tiger and they eat the bear then the tiger is big."
    },
    {
        "id": 13334,
        "statement": "eats(X, bear) :- is(X, kind), not eats(X, squirrel).",
        "description": "If someone is kind and they do not eat the squirrel then they eat the bear."
    },
    {
        "id": 13335,
        "statement": "is(squirrel, kind) :- sees(squirrel, bear), not chases(squirrel, bear).",
        "description": "If the squirrel sees the bear and the squirrel does not chase the bear then the squirrel is kind."
    },
    {
        "id": 13336,
        "statement": "sees(tiger, squirrel) :- not is(tiger, big), not is(tiger, round).",
        "description": "If the tiger is not big and the tiger is not round then the tiger sees the squirrel."
    },
    {
        "id": 13337,
        "statement": "is(harry, rough) :- is(harry, cold).",
        "description": "If Harry is cold then Harry is rough."
    },
    {
        "id": 13338,
        "statement": "is(X, cold) :- is(X, big), is(X, furry).",
        "description": "If something is big and furry then it is cold."
    },
    {
        "id": 13339,
        "statement": "is(harry, rough) :- is(harry, big), is(harry, furry).",
        "description": "If Harry is big and Harry is furry then Harry is rough."
    },
    {
        "id": 13340,
        "statement": "is(anne, rough) :- is(anne, furry), is(anne, blue).",
        "description": "If Anne is furry and Anne is blue then Anne is rough."
    },
    {
        "id": 13341,
        "statement": "is(dave, furry) :- is(dave, blue).",
        "description": "If Dave is blue then Dave is furry."
    },
    {
        "id": 13342,
        "statement": "is(X, quiet) :- is(X, blue), is(X, cold).",
        "description": "Blue, cold things are quiet."
    },
    {
        "id": 13343,
        "statement": "needs(X, lion) :- likes(X, lion).",
        "description": "If something likes the lion then it needs the lion."
    },
    {
        "id": 13344,
        "statement": "likes(cat, cow) :- needs(X, cat), is(cat, rough).",
        "description": "If something needs the cat and the cat is rough then the cat likes the cow."
    },
    {
        "id": 13345,
        "statement": "likes(cow, squirrel) :- needs(X, lion), not sees(lion, cow).",
        "description": "If something needs the lion and the lion does not see the cow then the cow likes the squirrel."
    },
    {
        "id": 13346,
        "statement": "likes(cow, squirrel) :- is(cow, cold).",
        "description": "If the cow is cold then the cow likes the squirrel."
    },
    {
        "id": 13347,
        "statement": "likes(cat, lion) :- needs(X, cat), likes(cat, cow).",
        "description": "If something needs the cat and the cat likes the cow then the cat likes the lion."
    },
    {
        "id": 13348,
        "statement": "is(cat, rough) :- is(X, green), not needs(X, cat).",
        "description": "If something is green and it does not need the cat then the cat is rough."
    },
    {
        "id": 13349,
        "statement": "is(squirrel, cold) :- likes(X, squirrel), needs(X, cow).",
        "description": "If something likes the squirrel and it needs the cow then the squirrel is cold."
    },
    {
        "id": 13350,
        "statement": "likes(lion, cat) :- is(X, cold), not likes(X, lion).",
        "description": "If something is cold and it does not like the lion then the lion likes the cat."
    },
    {
        "id": 13351,
        "statement": "is(cat, nice) :- is(X, cold), needs(X, cat).",
        "description": "If something is cold and it needs the cat then the cat is nice."
    },
    {
        "id": 13352,
        "statement": "visits(X, dog) :- needs(X, dog), needs(X, squirrel).",
        "description": "If something needs the dog and it needs the squirrel then it visits the dog."
    },
    {
        "id": 13353,
        "statement": "visits(squirrel, bear) :- is(X, nice), visits(X, squirrel).",
        "description": "If something is nice and it visits the squirrel then the squirrel visits the bear."
    },
    {
        "id": 13354,
        "statement": "visits(bear, cat) :- not visits(bear, squirrel).",
        "description": "If the bear does not visit the squirrel then the bear visits the cat."
    },
    {
        "id": 13355,
        "statement": "is(squirrel, cold) :- not visits(squirrel, cat).",
        "description": "If the squirrel does not visit the cat then the squirrel is cold."
    },
    {
        "id": 13356,
        "statement": "likes(X, tiger) :- chases(X, dog).",
        "description": "If someone chases the dog then they like the tiger."
    },
    {
        "id": 13357,
        "statement": "is(X, young) :- is(X, blue), not visits(X, dog).",
        "description": "If someone is blue and they do not visit the dog then they are young."
    },
    {
        "id": 13358,
        "statement": "chases(X, dog) :- likes(X, dog), is(X, green).",
        "description": "If someone likes the dog and they are green then they chase the dog."
    },
    {
        "id": 13359,
        "statement": "visits(cow, cat) :- is(cow, green), is(cow, blue).",
        "description": "If the cow is green and the cow is blue then the cow visits the cat."
    },
    {
        "id": 13360,
        "statement": "is(X, blue) :- likes(X, cow).",
        "description": "If someone likes the cow then they are blue."
    },
    {
        "id": 13361,
        "statement": "visits(X, cat) :- is(X, young), is(X, round).",
        "description": "If someone is young and round then they visit the cat."
    },
    {
        "id": 13362,
        "statement": "likes(cat, cow) :- is(cat, young).",
        "description": "If the cat is young then the cat likes the cow."
    },
    {
        "id": 13363,
        "statement": "is(X, green) :- likes(X, dog), is(X, young).",
        "description": "If someone likes the dog and they are young then they are green."
    },
    {
        "id": 13364,
        "statement": "is(X, young) :- is(X, blue), likes(X, bald_eagle).",
        "description": "If something is blue and it likes the bald eagle then it is young."
    },
    {
        "id": 13365,
        "statement": "is(bald_eagle, blue) :- sees(X, bald_eagle), likes(X, tiger).",
        "description": "If something sees the bald eagle and it likes the tiger then the bald eagle is blue."
    },
    {
        "id": 13366,
        "statement": "is(lion, rough) :- likes(X, lion), sees(X, bald_eagle).",
        "description": "If something likes the lion and it sees the bald eagle then the lion is rough."
    },
    {
        "id": 13367,
        "statement": "eats(mouse, tiger) :- eats(X, mouse), sees(X, bald_eagle).",
        "description": "If something eats the mouse and it sees the bald eagle then the mouse eats the tiger."
    },
    {
        "id": 13368,
        "statement": "sees(X, bald_eagle) :- is(X, blue).",
        "description": "If something is blue then it sees the bald eagle."
    },
    {
        "id": 13369,
        "statement": "is(X, blue) :- is(X, rough), eats(X, mouse).",
        "description": "If something is rough and it eats the mouse then it is blue."
    },
    {
        "id": 13370,
        "statement": "sees(bald_eagle, lion) :- is(bald_eagle, green), likes(bald_eagle, lion).",
        "description": "If the bald eagle is green and the bald eagle likes the lion then the bald eagle sees the lion."
    },
    {
        "id": 13371,
        "statement": "is(X, kind) :- is(X, red), is(X, white).",
        "description": "Red, white things are kind."
    },
    {
        "id": 13372,
        "statement": "is(X, furry) :- is(X, quiet), is(X, round).",
        "description": "Quiet, round things are furry."
    },
    {
        "id": 13373,
        "statement": "is(X, red) :- is(X, blue), is(X, white).",
        "description": "All blue, white things are red."
    },
    {
        "id": 13374,
        "statement": "needs(squirrel, dog) :- likes(X, squirrel), likes(X, cow).",
        "description": "If something likes the squirrel and it likes the cow then the squirrel needs the dog."
    },
    {
        "id": 13375,
        "statement": "likes(squirrel, dog) :- needs(cow, squirrel).",
        "description": "If the cow needs the squirrel then the squirrel likes the dog."
    },
    {
        "id": 13376,
        "statement": "is(dog, cold) :- needs(X, dog), needs(dog, mouse).",
        "description": "If something needs the dog and the dog needs the mouse then the dog is cold."
    },
    {
        "id": 13377,
        "statement": "needs(X, squirrel) :- likes(X, squirrel).",
        "description": "If something likes the squirrel then it needs the squirrel."
    },
    {
        "id": 13378,
        "statement": "visits(dog, squirrel) :- not likes(cow, dog).",
        "description": "If the cow does not like the dog then the dog visits the squirrel."
    },
    {
        "id": 13379,
        "statement": "needs(mouse, dog) :- likes(dog, mouse), visits(dog, mouse).",
        "description": "If the dog likes the mouse and the dog visits the mouse then the mouse needs the dog."
    },
    {
        "id": 13380,
        "statement": "needs(squirrel, cow) :- likes(X, squirrel), is(squirrel, nice).",
        "description": "If something likes the squirrel and the squirrel is nice then the squirrel needs the cow."
    },
    {
        "id": 13381,
        "statement": "likes(dog, squirrel) :- needs(squirrel, dog), needs(dog, mouse).",
        "description": "If the squirrel needs the dog and the dog needs the mouse then the dog likes the squirrel."
    },
    {
        "id": 13382,
        "statement": "likes(X, squirrel) :- likes(X, dog).",
        "description": "If something likes the dog then it likes the squirrel."
    },
    {
        "id": 13383,
        "statement": "is(X, nice) :- is(X, young), is(X, green).",
        "description": "Young, green things are nice."
    },
    {
        "id": 13384,
        "statement": "is(X, smart) :- is(X, red), is(X, quiet).",
        "description": "All red, quiet things are smart."
    },
    {
        "id": 13385,
        "statement": "is(fiona, smart) :- is(fiona, red), is(fiona, green).",
        "description": "If Fiona is red and Fiona is green then Fiona is smart."
    },
    {
        "id": 13386,
        "statement": "is(X, smart) :- is(X, nice), is(X, green).",
        "description": "Nice, green things are smart."
    },
    {
        "id": 13387,
        "statement": "is(X, blue) :- is(X, nice), is(X, young).",
        "description": "If something is nice and young then it is blue."
    },
    {
        "id": 13388,
        "statement": "is(X, young) :- is(X, blue), is(X, green).",
        "description": "All blue, green things are young."
    },
    {
        "id": 13389,
        "statement": "likes(rabbit, tiger) :- likes(X, rabbit).",
        "description": "If something likes the rabbit then the rabbit likes the tiger."
    },
    {
        "id": 13390,
        "statement": "sees(rabbit, tiger) :- visits(X, rabbit), is(X, young).",
        "description": "If something visits the rabbit and it is young then the rabbit sees the tiger."
    },
    {
        "id": 13391,
        "statement": "visits(rabbit, tiger) :- visits(X, rabbit).",
        "description": "If something visits the rabbit then the rabbit visits the tiger."
    },
    {
        "id": 13392,
        "statement": "likes(cow, rabbit) :- visits(X, tiger), visits(X, cow).",
        "description": "If something visits the tiger and it visits the cow then the cow likes the rabbit."
    },
    {
        "id": 13393,
        "statement": "is(tiger, young) :- visits(X, tiger).",
        "description": "If something visits the tiger then the tiger is young."
    },
    {
        "id": 13394,
        "statement": "visits(X, cow) :- is(X, round), sees(X, rabbit).",
        "description": "If something is round and it sees the rabbit then it visits the cow."
    },
    {
        "id": 13395,
        "statement": "is(X, big) :- is(X, young), is(X, nice).",
        "description": "All young, nice things are big."
    },
    {
        "id": 13396,
        "statement": "is(X, kind) :- is(X, rough), is(X, quiet).",
        "description": "If something is rough and quiet then it is kind."
    },
    {
        "id": 13397,
        "statement": "is(X, white) :- is(X, big), is(X, nice).",
        "description": "Big, nice things are white."
    },
    {
        "id": 13398,
        "statement": "is(erin, young) :- is(erin, quiet), is(erin, nice).",
        "description": "If Erin is quiet and Erin is nice then Erin is young."
    },
    {
        "id": 13399,
        "statement": "is(X, blue) :- is(X, smart).",
        "description": "If someone is smart then they are blue."
    },
    {
        "id": 13400,
        "statement": "is(X, white) :- is(X, green), not is(X, furry).",
        "description": "If someone is green and not furry then they are white."
    },
    {
        "id": 13401,
        "statement": "is(X, white) :- is(X, smart), is(X, cold).",
        "description": "If someone is smart and cold then they are white."
    },
    {
        "id": 13402,
        "statement": "is(X, smart) :- is(X, cold), is(X, white).",
        "description": "If someone is cold and white then they are smart."
    },
    {
        "id": 13403,
        "statement": "is(X, green) :- is(X, cold), is(X, white).",
        "description": "If someone is cold and white then they are green."
    },
    {
        "id": 13404,
        "statement": "is(harry, cold) :- is(harry, blue), is(harry, round).",
        "description": "If Harry is blue and Harry is round then Harry is cold."
    },
    {
        "id": 13405,
        "statement": "is(X, white) :- is(X, rough), is(X, furry).",
        "description": "All rough, furry things are white."
    },
    {
        "id": 13406,
        "statement": "is(X, furry) :- is(X, red), is(X, rough).",
        "description": "Red, rough things are furry."
    },
    {
        "id": 13407,
        "statement": "is(harry, furry) :- is(harry, white).",
        "description": "If Harry is white then Harry is furry."
    },
    {
        "id": 13408,
        "statement": "is(harry, quiet) :- is(harry, round), is(harry, big).",
        "description": "If Harry is round and Harry is big then Harry is quiet."
    },
    {
        "id": 13409,
        "statement": "is(X, smart) :- is(X, kind), is(X, rough).",
        "description": "If something is kind and rough then it is smart."
    },
    {
        "id": 13410,
        "statement": "is(X, green) :- is(X, smart), is(X, blue).",
        "description": "If someone is smart and blue then they are green."
    },
    {
        "id": 13411,
        "statement": "is(X, blue) :- is(X, furry), is(X, smart).",
        "description": "If someone is furry and smart then they are blue."
    },
    {
        "id": 13412,
        "statement": "is(X, kind) :- is(X, blue), is(X, young).",
        "description": "Blue, young people are kind."
    },
    {
        "id": 13413,
        "statement": "is(X, kind) :- is(X, quiet), is(X, red).",
        "description": "Quiet, red people are kind."
    },
    {
        "id": 13414,
        "statement": "is(X, cold) :- is(X, smart), is(X, young).",
        "description": "All smart, young people are cold."
    },
    {
        "id": 13415,
        "statement": "is(X, round) :- is(X, rough), is(X, kind).",
        "description": "Rough, kind people are round."
    },
    {
        "id": 13416,
        "statement": "is(X, smart) :- is(X, nice), is(X, young).",
        "description": "All nice, young people are smart."
    },
    {
        "id": 13417,
        "statement": "is(X, rough) :- is(X, young), is(X, kind).",
        "description": "Young, kind people are rough."
    },
    {
        "id": 13418,
        "statement": "is(X, nice) :- is(X, round), is(X, cold).",
        "description": "Round, cold people are nice."
    },
    {
        "id": 13419,
        "statement": "is(X, furry) :- is(X, kind), is(X, red).",
        "description": "All kind, red things are furry."
    },
    {
        "id": 13420,
        "statement": "is(X, quiet) :- is(X, furry), is(X, kind).",
        "description": "If something is furry and kind then it is quiet."
    },
    {
        "id": 13421,
        "statement": "likes(lion, squirrel) :- likes(squirrel, lion).",
        "description": "If the squirrel likes the lion then the lion likes the squirrel."
    },
    {
        "id": 13422,
        "statement": "sees(X, squirrel) :- visits(X, bald_eagle).",
        "description": "If something visits the bald eagle then it sees the squirrel."
    },
    {
        "id": 13423,
        "statement": "is(X, red) :- visits(X, bald_eagle), likes(X, bald_eagle).",
        "description": "If something visits the bald eagle and it likes the bald eagle then it is red."
    },
    {
        "id": 13424,
        "statement": "visits(X, lion) :- sees(X, cat).",
        "description": "If something sees the cat then it visits the lion."
    },
    {
        "id": 13425,
        "statement": "is(X, round) :- visits(X, lion), likes(X, squirrel).",
        "description": "If something visits the lion and it likes the squirrel then it is round."
    },
    {
        "id": 13426,
        "statement": "is(X, cold) :- visits(X, lion).",
        "description": "If something visits the lion then it is cold."
    },
    {
        "id": 13427,
        "statement": "likes(X, cat) :- is(X, rough), visits(X, squirrel).",
        "description": "If something is rough and it visits the squirrel then it likes the cat."
    },
    {
        "id": 13428,
        "statement": "sees(X, cat) :- is(X, round), is(X, red).",
        "description": "If something is round and red then it sees the cat."
    },
    {
        "id": 13429,
        "statement": "is(lion, round) :- visits(bald_eagle, lion), sees(lion, squirrel).",
        "description": "If the bald eagle visits the lion and the lion sees the squirrel then the lion is round."
    },
    {
        "id": 13430,
        "statement": "is(X, green) :- is(X, young), is(X, round).",
        "description": "Young, round people are green."
    },
    {
        "id": 13431,
        "statement": "sees(X, bald_eagle) :- is(X, blue).",
        "description": "If someone is blue then they see the bald eagle."
    },
    {
        "id": 13432,
        "statement": "eats(tiger, cat) :- sees(X, bald_eagle), needs(X, tiger).",
        "description": "If someone sees the bald eagle and they need the tiger then the tiger eats the cat."
    },
    {
        "id": 13433,
        "statement": "needs(X, tiger) :- needs(X, cat), sees(cat, cow).",
        "description": "If someone needs the cat and the cat sees the cow then they need the tiger."
    },
    {
        "id": 13434,
        "statement": "sees(cow, cat) :- needs(X, cow).",
        "description": "If someone needs the cow then the cow sees the cat."
    },
    {
        "id": 13435,
        "statement": "is(bald_eagle, blue) :- eats(X, bald_eagle).",
        "description": "If someone eats the bald eagle then the bald eagle is blue."
    },
    {
        "id": 13436,
        "statement": "sees(tiger, cow) :- needs(X, bald_eagle), needs(bald_eagle, tiger).",
        "description": "If someone needs the bald eagle and the bald eagle needs the tiger then the tiger sees the cow."
    },
    {
        "id": 13437,
        "statement": "likes(X, rabbit) :- eats(X, cat).",
        "description": "If someone eats the cat then they like the rabbit."
    },
    {
        "id": 13438,
        "statement": "likes(rabbit, cow) :- eats(X, rabbit).",
        "description": "If someone eats the rabbit then the rabbit likes the cow."
    },
    {
        "id": 13439,
        "statement": "is(X, green) :- likes(X, rabbit), not likes(rabbit, bear).",
        "description": "If someone likes the rabbit and the rabbit does not like the bear then they are green."
    },
    {
        "id": 13440,
        "statement": "is(X, cold) :- is(X, green), is(X, rough).",
        "description": "All green, rough people are cold."
    },
    {
        "id": 13441,
        "statement": "eats(rabbit, cat) :- eats(cat, rabbit), eats(rabbit, bear).",
        "description": "If the cat eats the rabbit and the rabbit eats the bear then the rabbit eats the cat."
    },
    {
        "id": 13442,
        "statement": "eats(rabbit, cat) :- likes(X, rabbit), sees(rabbit, cow).",
        "description": "If someone likes the rabbit and the rabbit sees the cow then the rabbit eats the cat."
    },
    {
        "id": 13443,
        "statement": "is(cat, green) :- is(cat, rough), is(cat, red).",
        "description": "If the cat is rough and the cat is red then the cat is green."
    },
    {
        "id": 13444,
        "statement": "is(X, rough) :- eats(X, cat), is(X, green).",
        "description": "If someone eats the cat and they are green then they are rough."
    },
    {
        "id": 13445,
        "statement": "is(dog, young) :- sees(X, dog), is(X, green).",
        "description": "If something sees the dog and it is green then the dog is young."
    },
    {
        "id": 13446,
        "statement": "sees(X, tiger) :- is(X, young), likes(X, rabbit).",
        "description": "If something is young and it likes the rabbit then it sees the tiger."
    },
    {
        "id": 13447,
        "statement": "likes(X, tiger) :- is(X, young), needs(X, dog).",
        "description": "If something is young and it needs the dog then it likes the tiger."
    },
    {
        "id": 13448,
        "statement": "is(tiger, young) :- likes(X, tiger), needs(tiger, dog).",
        "description": "If something likes the tiger and the tiger needs the dog then the tiger is young."
    },
    {
        "id": 13449,
        "statement": "needs(dog, tiger) :- is(X, rough), likes(X, dog).",
        "description": "If something is rough and it likes the dog then the dog needs the tiger."
    },
    {
        "id": 13450,
        "statement": "is(X, big) :- is(X, nice), is(X, cold).",
        "description": "All nice, cold things are big."
    },
    {
        "id": 13451,
        "statement": "is(bob, young) :- is(bob, round), is(bob, kind).",
        "description": "If Bob is round and Bob is kind then Bob is young."
    },
    {
        "id": 13452,
        "statement": "is(X, green) :- is(X, kind), is(X, rough).",
        "description": "If something is kind and rough then it is green."
    },
    {
        "id": 13453,
        "statement": "is(X, rough) :- is(X, round), is(X, kind).",
        "description": "All round, kind things are rough."
    },
    {
        "id": 13454,
        "statement": "is(X, red) :- is(X, quiet), is(X, nice).",
        "description": "Quiet, nice people are red."
    },
    {
        "id": 13455,
        "statement": "is(X, green) :- is(X, kind), is(X, quiet).",
        "description": "If someone is kind and quiet then they are green."
    },
    {
        "id": 13456,
        "statement": "is(X, kind) :- is(X, red), is(X, nice).",
        "description": "Red, nice people are kind."
    },
    {
        "id": 13457,
        "statement": "is(X, green) :- is(X, kind), is(X, young).",
        "description": "Kind, young people are green."
    },
    {
        "id": 13458,
        "statement": "is(X, nice) :- is(X, big), is(X, quiet).",
        "description": "Big, quiet people are nice."
    },
    {
        "id": 13459,
        "statement": "visits(dog, squirrel) :- visits(X, squirrel), eats(X, dog).",
        "description": "If someone visits the squirrel and they eat the dog then the dog visits the squirrel."
    },
    {
        "id": 13460,
        "statement": "chases(tiger, squirrel) :- eats(X, tiger).",
        "description": "If someone eats the tiger then the tiger chases the squirrel."
    },
    {
        "id": 13461,
        "statement": "eats(X, squirrel) :- chases(X, squirrel), visits(squirrel, cow).",
        "description": "If someone chases the squirrel and the squirrel visits the cow then they eat the squirrel."
    },
    {
        "id": 13462,
        "statement": "is(cow, green) :- chases(X, cow), visits(cow, tiger).",
        "description": "If someone chases the cow and the cow visits the tiger then the cow is green."
    },
    {
        "id": 13463,
        "statement": "visits(X, cow) :- visits(X, tiger), eats(tiger, cow).",
        "description": "If someone visits the tiger and the tiger eats the cow then they visit the cow."
    },
    {
        "id": 13464,
        "statement": "visits(squirrel, tiger) :- eats(X, squirrel).",
        "description": "If someone eats the squirrel then the squirrel visits the tiger."
    },
    {
        "id": 13465,
        "statement": "needs(bear, dog) :- needs(bear, squirrel).",
        "description": "If the bear needs the squirrel then the bear needs the dog."
    },
    {
        "id": 13466,
        "statement": "eats(cow, bear) :- visits(X, bear), eats(X, cow).",
        "description": "If something visits the bear and it eats the cow then the cow eats the bear."
    },
    {
        "id": 13467,
        "statement": "is(cow, young) :- visits(cow, dog), not needs(cow, bear).",
        "description": "If the cow visits the dog and the cow does not need the bear then the cow is young."
    },
    {
        "id": 13468,
        "statement": "visits(cow, dog) :- eats(X, bear), not needs(X, cow).",
        "description": "If something eats the bear and it does not need the cow then the cow visits the dog."
    },
    {
        "id": 13469,
        "statement": "visits(bear, squirrel) :- visits(bear, dog).",
        "description": "If the bear visits the dog then the bear visits the squirrel."
    },
    {
        "id": 13470,
        "statement": "eats(squirrel, dog) :- needs(X, squirrel), is(X, kind).",
        "description": "If something needs the squirrel and it is kind then the squirrel eats the dog."
    },
    {
        "id": 13471,
        "statement": "eats(X, cow) :- needs(X, cow).",
        "description": "If something needs the cow then it eats the cow."
    },
    {
        "id": 13472,
        "statement": "is(dog, rough) :- is(dog, green).",
        "description": "If the dog is green then the dog is rough."
    },
    {
        "id": 13473,
        "statement": "is(cow, big) :- is(X, young), not eats(X, cow).",
        "description": "If something is young and it does not eat the cow then the cow is big."
    },
    {
        "id": 13474,
        "statement": "sees(squirrel, cow) :- is(X, green), needs(X, squirrel).",
        "description": "If someone is green and they need the squirrel then the squirrel sees the cow."
    },
    {
        "id": 13475,
        "statement": "sees(X, cow) :- needs(X, squirrel), chases(squirrel, cow).",
        "description": "If someone needs the squirrel and the squirrel chases the cow then they see the cow."
    },
    {
        "id": 13476,
        "statement": "needs(bear, bald_eagle) :- needs(X, bear), chases(X, bear).",
        "description": "If someone needs the bear and they chase the bear then the bear needs the bald eagle."
    },
    {
        "id": 13477,
        "statement": "sees(bald_eagle, squirrel) :- sees(X, bald_eagle).",
        "description": "If someone sees the bald eagle then the bald eagle sees the squirrel."
    },
    {
        "id": 13478,
        "statement": "needs(X, squirrel) :- sees(X, cow).",
        "description": "If someone sees the cow then they need the squirrel."
    },
    {
        "id": 13479,
        "statement": "is(erin, red) :- is(erin, rough), is(erin, round).",
        "description": "If Erin is rough and Erin is round then Erin is red."
    },
    {
        "id": 13480,
        "statement": "is(X, round) :- is(X, smart), is(X, nice).",
        "description": "If someone is smart and nice then they are round."
    },
    {
        "id": 13481,
        "statement": "is(X, red) :- is(X, rough), not is(X, white).",
        "description": "If someone is rough and not white then they are red."
    },
    {
        "id": 13482,
        "statement": "is(X, kind) :- is(X, red), is(X, round).",
        "description": "Red, round people are kind."
    },
    {
        "id": 13483,
        "statement": "is(anne, smart) :- not is(anne, rough), not is(anne, white).",
        "description": "If Anne is not rough and Anne is not white then Anne is smart."
    },
    {
        "id": 13484,
        "statement": "is(X, red) :- is(X, white), is(X, rough).",
        "description": "White, rough things are red."
    },
    {
        "id": 13485,
        "statement": "is(X, green) :- is(X, young), is(X, kind).",
        "description": "All young, kind things are green."
    },
    {
        "id": 13486,
        "statement": "is(X, green) :- is(X, kind), not is(X, white).",
        "description": "If something is kind and not white then it is green."
    },
    {
        "id": 13487,
        "statement": "is(dave, kind) :- is(dave, young).",
        "description": "If Dave is young then Dave is kind."
    },
    {
        "id": 13488,
        "statement": "needs(X, lion) :- needs(X, cow), is(X, nice).",
        "description": "If something needs the cow and it is nice then it needs the lion."
    },
    {
        "id": 13489,
        "statement": "needs(X, rabbit) :- is(X, cold).",
        "description": "If something is cold then it needs the rabbit."
    },
    {
        "id": 13490,
        "statement": "is(cow, cold) :- needs(cow, bear), is(cow, big).",
        "description": "If the cow needs the bear and the cow is big then the cow is cold."
    },
    {
        "id": 13491,
        "statement": "is(cow, big) :- needs(X, cow), needs(X, bear).",
        "description": "If something needs the cow and it needs the bear then the cow is big."
    },
    {
        "id": 13492,
        "statement": "is(bear, big) :- eats(bear, cow), needs(bear, cow).",
        "description": "If the bear eats the cow and the bear needs the cow then the bear is big."
    },
    {
        "id": 13493,
        "statement": "sees(X, cow) :- sees(X, squirrel).",
        "description": "If something sees the squirrel then it sees the cow."
    },
    {
        "id": 13494,
        "statement": "sees(cow, squirrel) :- chases(squirrel, cow), is(cow, round).",
        "description": "If the squirrel chases the cow and the cow is round then the cow sees the squirrel."
    },
    {
        "id": 13495,
        "statement": "sees(tiger, lion) :- chases(X, cow), sees(cow, tiger).",
        "description": "If something chases the cow and the cow sees the tiger then the tiger sees the lion."
    },
    {
        "id": 13496,
        "statement": "chases(X, lion) :- sees(X, cow).",
        "description": "If something sees the cow then it chases the lion."
    },
    {
        "id": 13497,
        "statement": "sees(tiger, lion) :- sees(X, tiger).",
        "description": "If something sees the tiger then the tiger sees the lion."
    },
    {
        "id": 13498,
        "statement": "is(X, furry) :- is(X, rough), is(X, kind).",
        "description": "If something is rough and kind then it is furry."
    },
    {
        "id": 13499,
        "statement": "is(bob, rough) :- is(bob, kind), is(bob, red).",
        "description": "If Bob is kind and Bob is red then Bob is rough."
    },
    {
        "id": 13500,
        "statement": "is(X, rough) :- is(X, nice), is(X, kind).",
        "description": "Nice, kind things are rough."
    },
    {
        "id": 13501,
        "statement": "is(X, nice) :- is(X, white), is(X, red).",
        "description": "If someone is white and red then they are nice."
    },
    {
        "id": 13502,
        "statement": "is(X, cold) :- is(X, kind), is(X, smart).",
        "description": "If someone is kind and smart then they are cold."
    },
    {
        "id": 13503,
        "statement": "is(X, smart) :- is(X, white), is(X, young).",
        "description": "All white, young people are smart."
    },
    {
        "id": 13504,
        "statement": "is(gary, smart) :- is(gary, kind), is(gary, white).",
        "description": "If Gary is kind and Gary is white then Gary is smart."
    },
    {
        "id": 13505,
        "statement": "chases(X, cow) :- is(X, nice).",
        "description": "If someone is nice then they chase the cow."
    },
    {
        "id": 13506,
        "statement": "needs(mouse, bear) :- is(mouse, big), is(mouse, rough).",
        "description": "If the mouse is big and the mouse is rough then the mouse needs the bear."
    },
    {
        "id": 13507,
        "statement": "needs(X, mouse) :- sees(X, bear), needs(X, cow).",
        "description": "If someone sees the bear and they need the cow then they need the mouse."
    },
    {
        "id": 13508,
        "statement": "sees(cat, bear) :- needs(X, cat).",
        "description": "If someone needs the cat then the cat sees the bear."
    },
    {
        "id": 13509,
        "statement": "is(X, nice) :- chases(X, mouse), not is(X, green).",
        "description": "If someone chases the mouse and they are not green then they are nice."
    },
    {
        "id": 13510,
        "statement": "needs(X, cat) :- is(X, kind), not chases(X, cat).",
        "description": "If someone is kind and they do not chase the cat then they need the cat."
    },
    {
        "id": 13511,
        "statement": "sees(cow, cat) :- chases(bear, cow), is(cow, rough).",
        "description": "If the bear chases the cow and the cow is rough then the cow sees the cat."
    },
    {
        "id": 13512,
        "statement": "is(X, kind) :- is(X, quiet), is(X, red).",
        "description": "If something is quiet and red then it is kind."
    },
    {
        "id": 13513,
        "statement": "is(anne, big) :- not is(anne, furry).",
        "description": "If Anne is not furry then Anne is big."
    },
    {
        "id": 13514,
        "statement": "sees(bear, squirrel) :- eats(bear, squirrel), visits(bear, lion).",
        "description": "If the bear eats the squirrel and the bear visits the lion then the bear sees the squirrel."
    },
    {
        "id": 13515,
        "statement": "visits(cow, lion) :- eats(X, cow).",
        "description": "If something eats the cow then the cow visits the lion."
    },
    {
        "id": 13516,
        "statement": "sees(cow, bear) :- visits(X, cow).",
        "description": "If something visits the cow then the cow sees the bear."
    },
    {
        "id": 13517,
        "statement": "visits(X, cow) :- visits(X, lion), not is(X, nice).",
        "description": "If something visits the lion and it is not nice then it visits the cow."
    },
    {
        "id": 13518,
        "statement": "sees(cow, squirrel) :- visits(bear, squirrel), visits(squirrel, cow).",
        "description": "If the bear visits the squirrel and the squirrel visits the cow then the cow sees the squirrel."
    },
    {
        "id": 13519,
        "statement": "visits(bear, squirrel) :- visits(X, bear), eats(X, bear).",
        "description": "If something visits the bear and it eats the bear then the bear visits the squirrel."
    },
    {
        "id": 13520,
        "statement": "needs(X, rabbit) :- sees(X, squirrel), chases(X, rabbit).",
        "description": "If something sees the squirrel and it chases the rabbit then it needs the rabbit."
    },
    {
        "id": 13521,
        "statement": "chases(rabbit, bald_eagle) :- needs(squirrel, rabbit), chases(squirrel, rabbit).",
        "description": "If the squirrel needs the rabbit and the squirrel chases the rabbit then the rabbit chases the bald eagle."
    },
    {
        "id": 13522,
        "statement": "is(X, blue) :- chases(X, bald_eagle), is(bald_eagle, cold).",
        "description": "If something chases the bald eagle and the bald eagle is cold then it is blue."
    },
    {
        "id": 13523,
        "statement": "sees(squirrel, bear) :- chases(X, squirrel), chases(X, bald_eagle).",
        "description": "If something chases the squirrel and it chases the bald eagle then the squirrel sees the bear."
    },
    {
        "id": 13524,
        "statement": "needs(bald_eagle, rabbit) :- sees(X, bald_eagle), needs(bald_eagle, bear).",
        "description": "If something sees the bald eagle and the bald eagle needs the bear then the bald eagle needs the rabbit."
    },
    {
        "id": 13525,
        "statement": "is(bear, cold) :- sees(X, bear).",
        "description": "If something sees the bear then the bear is cold."
    },
    {
        "id": 13526,
        "statement": "needs(X, cat) :- is(X, red), likes(X, rabbit).",
        "description": "If someone is red and they like the rabbit then they need the cat."
    },
    {
        "id": 13527,
        "statement": "is(rabbit, red) :- likes(X, rabbit).",
        "description": "If someone likes the rabbit then the rabbit is red."
    },
    {
        "id": 13528,
        "statement": "likes(X, tiger) :- likes(X, bear).",
        "description": "If someone likes the bear then they like the tiger."
    },
    {
        "id": 13529,
        "statement": "likes(cat, tiger) :- needs(rabbit, cat), likes(rabbit, tiger).",
        "description": "If the rabbit needs the cat and the rabbit likes the tiger then the cat likes the tiger."
    },
    {
        "id": 13530,
        "statement": "likes(rabbit, bear) :- eats(X, rabbit), is(X, red).",
        "description": "If someone eats the rabbit and they are red then the rabbit likes the bear."
    },
    {
        "id": 13531,
        "statement": "needs(X, rabbit) :- needs(X, tiger), is(tiger, red).",
        "description": "If someone needs the tiger and the tiger is red then they need the rabbit."
    },
    {
        "id": 13532,
        "statement": "is(rabbit, red) :- needs(X, rabbit), is(X, rough).",
        "description": "If someone needs the rabbit and they are rough then the rabbit is red."
    },
    {
        "id": 13533,
        "statement": "eats(tiger, rabbit) :- needs(cat, tiger), likes(cat, rabbit).",
        "description": "If the cat needs the tiger and the cat likes the rabbit then the tiger eats the rabbit."
    },
    {
        "id": 13534,
        "statement": "likes(X, rabbit) :- likes(X, tiger).",
        "description": "If someone likes the tiger then they like the rabbit."
    },
    {
        "id": 13535,
        "statement": "is(X, green) :- likes(X, bear), likes(bear, dog).",
        "description": "If something likes the bear and the bear likes the dog then it is green."
    },
    {
        "id": 13536,
        "statement": "chases(X, dog) :- is(X, green), likes(X, mouse).",
        "description": "If something is green and it likes the mouse then it chases the dog."
    },
    {
        "id": 13537,
        "statement": "likes(cow, mouse) :- is(X, blue), chases(X, cow).",
        "description": "If something is blue and it chases the cow then the cow likes the mouse."
    },
    {
        "id": 13538,
        "statement": "is(X, big) :- eats(X, cow).",
        "description": "If something eats the cow then it is big."
    },
    {
        "id": 13539,
        "statement": "likes(X, dog) :- is(X, green), eats(X, mouse).",
        "description": "If something is green and it eats the mouse then it likes the dog."
    },
    {
        "id": 13540,
        "statement": "is(X, furry) :- is(X, kind), is(X, cold).",
        "description": "All kind, cold people are furry."
    },
    {
        "id": 13541,
        "statement": "is(harry, big) :- is(harry, kind).",
        "description": "If Harry is kind then Harry is big."
    },
    {
        "id": 13542,
        "statement": "is(X, red) :- is(X, furry), not is(X, kind).",
        "description": "If someone is furry and not kind then they are red."
    },
    {
        "id": 13543,
        "statement": "is(X, young) :- is(X, rough), is(X, kind).",
        "description": "Rough, kind people are young."
    },
    {
        "id": 13544,
        "statement": "is(X, green) :- is(X, kind), not is(X, cold).",
        "description": "If someone is kind and not cold then they are green."
    },
    {
        "id": 13545,
        "statement": "is(erin, green) :- is(erin, rough).",
        "description": "If Erin is rough then Erin is green."
    },
    {
        "id": 13546,
        "statement": "is(X, nice) :- is(X, green), is(X, smart).",
        "description": "If someone is green and smart then they are nice."
    },
    {
        "id": 13547,
        "statement": "is(erin, young) :- is(erin, green), is(erin, kind).",
        "description": "If Erin is green and Erin is kind then Erin is young."
    },
    {
        "id": 13548,
        "statement": "is(X, smart) :- is(X, young), is(X, green).",
        "description": "Young, green people are smart."
    },
    {
        "id": 13549,
        "statement": "is(X, kind) :- is(X, blue), is(X, young).",
        "description": "All blue, young things are kind."
    },
    {
        "id": 13550,
        "statement": "is(X, cold) :- is(X, blue), is(X, rough).",
        "description": "All blue, rough things are cold."
    },
    {
        "id": 13551,
        "statement": "is(X, kind) :- is(X, young), is(X, rough).",
        "description": "Young, rough things are kind."
    },
    {
        "id": 13552,
        "statement": "is(X, round) :- is(X, blue), is(X, cold).",
        "description": "All blue, cold things are round."
    },
    {
        "id": 13553,
        "statement": "is(X, round) :- is(X, blue), is(X, green).",
        "description": "All blue, green things are round."
    },
    {
        "id": 13554,
        "statement": "is(dave, blue) :- is(dave, kind), is(dave, white).",
        "description": "If Dave is kind and Dave is white then Dave is blue."
    },
    {
        "id": 13555,
        "statement": "is(erin, smart) :- is(erin, white).",
        "description": "If Erin is white then Erin is smart."
    },
    {
        "id": 13556,
        "statement": "is(X, big) :- is(X, kind), is(X, blue).",
        "description": "Kind, blue things are big."
    },
    {
        "id": 13557,
        "statement": "is(X, big) :- is(X, quiet), is(X, white).",
        "description": "Quiet, white things are big."
    },
    {
        "id": 13558,
        "statement": "is(lion, round) :- needs(X, lion).",
        "description": "If something needs the lion then the lion is round."
    },
    {
        "id": 13559,
        "statement": "is(tiger, kind) :- likes(X, tiger).",
        "description": "If something likes the tiger then the tiger is kind."
    },
    {
        "id": 13560,
        "statement": "needs(tiger, dog) :- likes(X, tiger), is(X, rough).",
        "description": "If something likes the tiger and it is rough then the tiger needs the dog."
    },
    {
        "id": 13561,
        "statement": "likes(lion, rabbit) :- likes(tiger, rabbit), needs(tiger, lion).",
        "description": "If the tiger likes the rabbit and the tiger needs the lion then the lion likes the rabbit."
    },
    {
        "id": 13562,
        "statement": "is(lion, round) :- sees(rabbit, lion).",
        "description": "If the rabbit sees the lion then the lion is round."
    },
    {
        "id": 13563,
        "statement": "sees(rabbit, lion) :- likes(X, rabbit), is(X, round).",
        "description": "If something likes the rabbit and it is round then the rabbit sees the lion."
    },
    {
        "id": 13564,
        "statement": "needs(X, tiger) :- is(X, cold), needs(X, dog).",
        "description": "If something is cold and it needs the dog then it needs the tiger."
    },
    {
        "id": 13565,
        "statement": "is(X, red) :- is(X, blue), is(X, furry).",
        "description": "Blue, furry people are red."
    },
    {
        "id": 13566,
        "statement": "is(X, furry) :- is(X, quiet), is(X, kind).",
        "description": "All quiet, kind people are furry."
    },
    {
        "id": 13567,
        "statement": "is(X, cold) :- is(X, blue), is(X, young).",
        "description": "Blue, young people are cold."
    },
    {
        "id": 13568,
        "statement": "is(X, cold) :- is(X, quiet), not is(X, red).",
        "description": "If someone is quiet and not red then they are cold."
    },
    {
        "id": 13569,
        "statement": "is(charlie, green) :- is(charlie, round).",
        "description": "If Charlie is round then Charlie is green."
    },
    {
        "id": 13570,
        "statement": "is(charlie, round) :- is(charlie, rough), is(charlie, green).",
        "description": "If Charlie is rough and Charlie is green then Charlie is round."
    },
    {
        "id": 13571,
        "statement": "is(X, cold) :- is(X, blue), not is(X, rough).",
        "description": "If someone is blue and not rough then they are cold."
    },
    {
        "id": 13572,
        "statement": "sees(squirrel, lion) :- needs(X, squirrel).",
        "description": "If something needs the squirrel then the squirrel sees the lion."
    },
    {
        "id": 13573,
        "statement": "sees(squirrel, mouse) :- sees(X, squirrel).",
        "description": "If something sees the squirrel then the squirrel sees the mouse."
    },
    {
        "id": 13574,
        "statement": "chases(lion, squirrel) :- chases(X, squirrel), sees(squirrel, lion).",
        "description": "If something chases the squirrel and the squirrel sees the lion then the lion chases the squirrel."
    },
    {
        "id": 13575,
        "statement": "is(bear, round) :- needs(X, bear).",
        "description": "If something needs the bear then the bear is round."
    },
    {
        "id": 13576,
        "statement": "chases(lion, squirrel) :- sees(bear, lion).",
        "description": "If the bear sees the lion then the lion chases the squirrel."
    },
    {
        "id": 13577,
        "statement": "is(X, red) :- sees(X, lion).",
        "description": "If something sees the lion then it is red."
    },
    {
        "id": 13578,
        "statement": "is(lion, young) :- chases(tiger, lion).",
        "description": "If the tiger chases the lion then the lion is young."
    },
    {
        "id": 13579,
        "statement": "is(tiger, young) :- likes(tiger, cow).",
        "description": "If the tiger likes the cow then the tiger is young."
    },
    {
        "id": 13580,
        "statement": "chases(dog, lion) :- is(dog, kind).",
        "description": "If the dog is kind then the dog chases the lion."
    },
    {
        "id": 13581,
        "statement": "likes(X, cow) :- is(X, green).",
        "description": "If someone is green then they like the cow."
    },
    {
        "id": 13582,
        "statement": "is(X, kind) :- is(X, smart), not is(X, furry).",
        "description": "If someone is smart and not furry then they are kind."
    },
    {
        "id": 13583,
        "statement": "is(X, round) :- is(X, kind), is(X, quiet).",
        "description": "All kind, quiet people are round."
    },
    {
        "id": 13584,
        "statement": "is(X, rough) :- is(X, quiet), is(X, furry).",
        "description": "All quiet, furry people are rough."
    },
    {
        "id": 13585,
        "statement": "likes(cat, lion) :- likes(X, cat).",
        "description": "If someone likes the cat then the cat likes the lion."
    },
    {
        "id": 13586,
        "statement": "is(tiger, round) :- eats(X, tiger).",
        "description": "If someone eats the tiger then the tiger is round."
    },
    {
        "id": 13587,
        "statement": "eats(X, tiger) :- is(X, blue).",
        "description": "If someone is blue then they eat the tiger."
    },
    {
        "id": 13588,
        "statement": "likes(rabbit, lion) :- eats(X, rabbit).",
        "description": "If someone eats the rabbit then the rabbit likes the lion."
    },
    {
        "id": 13589,
        "statement": "likes(X, rabbit) :- eats(X, rabbit).",
        "description": "If someone eats the rabbit then they like the rabbit."
    },
    {
        "id": 13590,
        "statement": "likes(X, cat) :- likes(X, lion).",
        "description": "If someone likes the lion then they like the cat."
    },
    {
        "id": 13591,
        "statement": "likes(X, tiger) :- sees(X, rabbit), sees(rabbit, tiger).",
        "description": "If someone sees the rabbit and the rabbit sees the tiger then they like the tiger."
    },
    {
        "id": 13592,
        "statement": "is(X, young) :- likes(X, cat).",
        "description": "If someone likes the cat then they are young."
    },
    {
        "id": 13593,
        "statement": "is(X, cold) :- is(X, kind), is(X, young).",
        "description": "Kind, young things are cold."
    },
    {
        "id": 13594,
        "statement": "is(X, young) :- is(X, smart).",
        "description": "If something is smart then it is young."
    },
    {
        "id": 13595,
        "statement": "is(X, round) :- is(X, young), is(X, smart).",
        "description": "If something is young and smart then it is round."
    },
    {
        "id": 13596,
        "statement": "is(X, rough) :- is(X, smart), is(X, cold).",
        "description": "All smart, cold things are rough."
    },
    {
        "id": 13597,
        "statement": "is(X, rough) :- is(X, smart), is(X, nice).",
        "description": "If something is smart and nice then it is rough."
    },
    {
        "id": 13598,
        "statement": "is(X, smart) :- is(X, white), is(X, nice).",
        "description": "All white, nice things are smart."
    },
    {
        "id": 13599,
        "statement": "is(X, white) :- is(X, red).",
        "description": "All red things are white."
    },
    {
        "id": 13600,
        "statement": "visits(squirrel, tiger) :- likes(X, lion), likes(X, squirrel).",
        "description": "If someone likes the lion and they like the squirrel then the squirrel visits the tiger."
    },
    {
        "id": 13601,
        "statement": "needs(X, lion) :- visits(X, squirrel), visits(X, bald_eagle).",
        "description": "If someone visits the squirrel and they visit the bald eagle then they need the lion."
    },
    {
        "id": 13602,
        "statement": "likes(X, lion) :- needs(X, lion), is(lion, round).",
        "description": "If someone needs the lion and the lion is round then they like the lion."
    },
    {
        "id": 13603,
        "statement": "is(tiger, rough) :- needs(squirrel, tiger), likes(tiger, squirrel).",
        "description": "If the squirrel needs the tiger and the tiger likes the squirrel then the tiger is rough."
    },
    {
        "id": 13604,
        "statement": "is(lion, kind) :- is(X, blue), needs(X, lion).",
        "description": "If someone is blue and they need the lion then the lion is kind."
    },
    {
        "id": 13605,
        "statement": "visits(X, bald_eagle) :- needs(X, tiger).",
        "description": "If someone needs the tiger then they visit the bald eagle."
    },
    {
        "id": 13606,
        "statement": "needs(squirrel, bald_eagle) :- needs(X, squirrel).",
        "description": "If someone needs the squirrel then the squirrel needs the bald eagle."
    },
    {
        "id": 13607,
        "statement": "is(X, blue) :- needs(X, bald_eagle).",
        "description": "If someone needs the bald eagle then they are blue."
    },
    {
        "id": 13608,
        "statement": "likes(X, lion) :- is(X, kind), likes(X, tiger).",
        "description": "If someone is kind and they like the tiger then they like the lion."
    },
    {
        "id": 13609,
        "statement": "is(bob, big) :- is(bob, kind), is(bob, white).",
        "description": "If Bob is kind and Bob is white then Bob is big."
    },
    {
        "id": 13610,
        "statement": "is(X, big) :- is(X, white), is(X, furry).",
        "description": "White, furry people are big."
    },
    {
        "id": 13611,
        "statement": "is(X, kind) :- is(X, big), is(X, nice).",
        "description": "All big, nice people are kind."
    },
    {
        "id": 13612,
        "statement": "visits(X, tiger) :- visits(X, squirrel).",
        "description": "If someone visits the squirrel then they visit the tiger."
    },
    {
        "id": 13613,
        "statement": "is(X, red) :- visits(X, mouse), is(mouse, red).",
        "description": "If someone visits the mouse and the mouse is red then they are red."
    },
    {
        "id": 13614,
        "statement": "chases(squirrel, tiger) :- eats(X, squirrel).",
        "description": "If someone eats the squirrel then the squirrel chases the tiger."
    },
    {
        "id": 13615,
        "statement": "eats(tiger, squirrel) :- visits(X, tiger).",
        "description": "If someone visits the tiger then the tiger eats the squirrel."
    },
    {
        "id": 13616,
        "statement": "visits(X, squirrel) :- is(X, young).",
        "description": "If someone is young then they visit the squirrel."
    },
    {
        "id": 13617,
        "statement": "is(squirrel, kind) :- chases(X, squirrel).",
        "description": "If someone chases the squirrel then the squirrel is kind."
    },
    {
        "id": 13618,
        "statement": "chases(tiger, mouse) :- chases(X, tiger), visits(X, squirrel).",
        "description": "If someone chases the tiger and they visit the squirrel then the tiger chases the mouse."
    },
    {
        "id": 13619,
        "statement": "is(X, blue) :- visits(X, squirrel).",
        "description": "If someone visits the squirrel then they are blue."
    },
    {
        "id": 13620,
        "statement": "needs(bald_eagle, cow) :- needs(X, bald_eagle).",
        "description": "If someone needs the bald eagle then the bald eagle needs the cow."
    },
    {
        "id": 13621,
        "statement": "is(X, nice) :- needs(X, cat), eats(X, bald_eagle).",
        "description": "If someone needs the cat and they eat the bald eagle then they are nice."
    },
    {
        "id": 13622,
        "statement": "is(X, red) :- needs(X, mouse), is(mouse, nice).",
        "description": "If someone needs the mouse and the mouse is nice then they are red."
    },
    {
        "id": 13623,
        "statement": "eats(X, cow) :- needs(X, bald_eagle), is(bald_eagle, cold).",
        "description": "If someone needs the bald eagle and the bald eagle is cold then they eat the cow."
    },
    {
        "id": 13624,
        "statement": "eats(X, bald_eagle) :- eats(X, cow).",
        "description": "If someone eats the cow then they eat the bald eagle."
    },
    {
        "id": 13625,
        "statement": "eats(bald_eagle, mouse) :- likes(X, bald_eagle), is(X, green).",
        "description": "If someone likes the bald eagle and they are green then the bald eagle eats the mouse."
    },
    {
        "id": 13626,
        "statement": "is(bald_eagle, green) :- needs(X, bald_eagle), likes(X, cow).",
        "description": "If someone needs the bald eagle and they like the cow then the bald eagle is green."
    },
    {
        "id": 13627,
        "statement": "is(X, furry) :- is(X, round), is(X, nice).",
        "description": "If someone is round and nice then they are furry."
    },
    {
        "id": 13628,
        "statement": "is(X, green) :- needs(X, cat), eats(cat, tiger).",
        "description": "If someone needs the cat and the cat eats the tiger then they are green."
    },
    {
        "id": 13629,
        "statement": "visits(X, tiger) :- is(X, green).",
        "description": "If someone is green then they visit the tiger."
    },
    {
        "id": 13630,
        "statement": "needs(rabbit, bald_eagle) :- visits(X, rabbit).",
        "description": "If someone visits the rabbit then the rabbit needs the bald eagle."
    },
    {
        "id": 13631,
        "statement": "eats(rabbit, cat) :- is(X, green), eats(X, rabbit).",
        "description": "If someone is green and they eat the rabbit then the rabbit eats the cat."
    },
    {
        "id": 13632,
        "statement": "is(bald_eagle, round) :- needs(cat, rabbit), needs(cat, bald_eagle).",
        "description": "If the cat needs the rabbit and the cat needs the bald eagle then the bald eagle is round."
    },
    {
        "id": 13633,
        "statement": "is(bald_eagle, rough) :- needs(X, tiger), visits(tiger, bald_eagle).",
        "description": "If someone needs the tiger and the tiger visits the bald eagle then the bald eagle is rough."
    },
    {
        "id": 13634,
        "statement": "is(tiger, green) :- visits(X, tiger), eats(X, bald_eagle).",
        "description": "If someone visits the tiger and they eat the bald eagle then the tiger is green."
    },
    {
        "id": 13635,
        "statement": "is(cat, green) :- eats(X, cat).",
        "description": "If someone eats the cat then the cat is green."
    },
    {
        "id": 13636,
        "statement": "chases(X, squirrel) :- sees(X, dog), chases(dog, rabbit).",
        "description": "If something sees the dog and the dog chases the rabbit then it chases the squirrel."
    },
    {
        "id": 13637,
        "statement": "likes(rabbit, dog) :- chases(X, rabbit).",
        "description": "If something chases the rabbit then the rabbit likes the dog."
    },
    {
        "id": 13638,
        "statement": "likes(dog, squirrel) :- sees(dog, squirrel).",
        "description": "If the dog sees the squirrel then the dog likes the squirrel."
    },
    {
        "id": 13639,
        "statement": "likes(X, cow) :- is(X, red), is(X, kind).",
        "description": "If something is red and kind then it likes the cow."
    },
    {
        "id": 13640,
        "statement": "chases(X, rabbit) :- is(X, kind).",
        "description": "If something is kind then it chases the rabbit."
    },
    {
        "id": 13641,
        "statement": "is(X, round) :- is(X, kind), sees(X, rabbit).",
        "description": "If something is kind and it sees the rabbit then it is round."
    },
    {
        "id": 13642,
        "statement": "sees(rabbit, squirrel) :- is(rabbit, round).",
        "description": "If the rabbit is round then the rabbit sees the squirrel."
    },
    {
        "id": 13643,
        "statement": "is(dog, kind) :- likes(rabbit, dog).",
        "description": "If the rabbit likes the dog then the dog is kind."
    },
    {
        "id": 13644,
        "statement": "likes(rabbit, dog) :- chases(X, rabbit), likes(rabbit, squirrel).",
        "description": "If something chases the rabbit and the rabbit likes the squirrel then the rabbit likes the dog."
    },
    {
        "id": 13645,
        "statement": "eats(X, cat) :- eats(X, tiger), eats(tiger, cow).",
        "description": "If something eats the tiger and the tiger eats the cow then it eats the cat."
    },
    {
        "id": 13646,
        "statement": "eats(X, cat) :- sees(X, rabbit).",
        "description": "If something sees the rabbit then it eats the cat."
    },
    {
        "id": 13647,
        "statement": "sees(X, rabbit) :- eats(X, cow).",
        "description": "If something eats the cow then it sees the rabbit."
    },
    {
        "id": 13648,
        "statement": "visits(tiger, cat) :- eats(X, rabbit), eats(X, tiger).",
        "description": "If something eats the rabbit and it eats the tiger then the tiger visits the cat."
    },
    {
        "id": 13649,
        "statement": "eats(X, rabbit) :- sees(X, tiger), not sees(X, cow).",
        "description": "If something sees the tiger and it does not see the cow then it eats the rabbit."
    },
    {
        "id": 13650,
        "statement": "is(X, kind) :- visits(X, tiger).",
        "description": "If something visits the tiger then it is kind."
    },
    {
        "id": 13651,
        "statement": "is(X, blue) :- is(X, big), is(X, white).",
        "description": "All big, white things are blue."
    },
    {
        "id": 13652,
        "statement": "is(X, red) :- is(X, cold), is(X, quiet).",
        "description": "Cold, quiet things are red."
    },
    {
        "id": 13653,
        "statement": "is(X, round) :- is(X, cold), is(X, quiet).",
        "description": "If something is cold and quiet then it is round."
    },
    {
        "id": 13654,
        "statement": "is(X, white) :- is(X, round), is(X, cold).",
        "description": "All round, cold things are white."
    },
    {
        "id": 13655,
        "statement": "is(X, kind) :- is(X, red), is(X, cold).",
        "description": "All red, cold things are kind."
    },
    {
        "id": 13656,
        "statement": "is(X, blue) :- is(X, cold), is(X, round).",
        "description": "All cold, round things are blue."
    },
    {
        "id": 13657,
        "statement": "is(anne, kind) :- is(anne, round), is(anne, rough).",
        "description": "If Anne is round and Anne is rough then Anne is kind."
    },
    {
        "id": 13658,
        "statement": "is(dave, kind) :- is(dave, smart), is(dave, big).",
        "description": "If Dave is smart and Dave is big then Dave is kind."
    },
    {
        "id": 13659,
        "statement": "is(X, green) :- is(X, kind), is(X, big).",
        "description": "Kind, big things are green."
    },
    {
        "id": 13660,
        "statement": "is(X, big) :- is(X, kind), is(X, round).",
        "description": "Kind, round things are big."
    },
    {
        "id": 13661,
        "statement": "is(X, furry) :- is(X, big), is(X, round).",
        "description": "Big, round things are furry."
    },
    {
        "id": 13662,
        "statement": "is(X, kind) :- is(X, young), is(X, round).",
        "description": "All young, round things are kind."
    },
    {
        "id": 13663,
        "statement": "is(harry, nice) :- is(harry, young).",
        "description": "If Harry is young then Harry is nice."
    },
    {
        "id": 13664,
        "statement": "is(erin, round) :- not is(erin, nice).",
        "description": "If Erin is not nice then Erin is round."
    },
    {
        "id": 13665,
        "statement": "is(dave, cold) :- is(dave, kind), not is(dave, furry).",
        "description": "If Dave is kind and Dave is not furry then Dave is cold."
    },
    {
        "id": 13666,
        "statement": "is(X, cold) :- is(X, furry), is(X, nice).",
        "description": "If something is furry and nice then it is cold."
    },
    {
        "id": 13667,
        "statement": "is(X, white) :- is(X, furry), is(X, smart).",
        "description": "Furry, smart things are white."
    },
    {
        "id": 13668,
        "statement": "is(X, nice) :- is(X, blue), is(X, white).",
        "description": "If something is blue and white then it is nice."
    },
    {
        "id": 13669,
        "statement": "is(bob, nice) :- is(bob, young).",
        "description": "If Bob is young then Bob is nice."
    },
    {
        "id": 13670,
        "statement": "eats(X, dog) :- chases(X, dog).",
        "description": "If someone chases the dog then they eat the dog."
    },
    {
        "id": 13671,
        "statement": "eats(X, bald_eagle) :- sees(X, cow), is(cow, kind).",
        "description": "If someone sees the cow and the cow is kind then they eat the bald eagle."
    },
    {
        "id": 13672,
        "statement": "chases(X, bald_eagle) :- chases(X, bear).",
        "description": "If someone chases the bear then they chase the bald eagle."
    },
    {
        "id": 13673,
        "statement": "eats(X, bald_eagle) :- is(X, rough).",
        "description": "If someone is rough then they eat the bald eagle."
    },
    {
        "id": 13674,
        "statement": "is(bald_eagle, rough) :- chases(X, bald_eagle), chases(X, bear).",
        "description": "If someone chases the bald eagle and they chase the bear then the bald eagle is rough."
    },
    {
        "id": 13675,
        "statement": "chases(X, cow) :- sees(X, cow).",
        "description": "If someone sees the cow then they chase the cow."
    },
    {
        "id": 13676,
        "statement": "sees(X, cow) :- eats(X, bald_eagle).",
        "description": "If someone eats the bald eagle then they see the cow."
    },
    {
        "id": 13677,
        "statement": "eats(bald_eagle, cow) :- chases(X, bald_eagle).",
        "description": "If someone chases the bald eagle then the bald eagle eats the cow."
    },
    {
        "id": 13678,
        "statement": "is(X, red) :- is(X, big), is(X, quiet).",
        "description": "If something is big and quiet then it is red."
    },
    {
        "id": 13679,
        "statement": "is(X, nice) :- is(X, red), is(X, white).",
        "description": "All red, white things are nice."
    },
    {
        "id": 13680,
        "statement": "is(X, nice) :- is(X, white), is(X, furry).",
        "description": "White, furry things are nice."
    },
    {
        "id": 13681,
        "statement": "is(X, round) :- is(X, nice), is(X, green).",
        "description": "All nice, green people are round."
    },
    {
        "id": 13682,
        "statement": "is(X, cold) :- is(X, white), is(X, young).",
        "description": "White, young people are cold."
    },
    {
        "id": 13683,
        "statement": "is(X, blue) :- is(X, white), is(X, young).",
        "description": "White, young people are blue."
    },
    {
        "id": 13684,
        "statement": "is(X, white) :- is(X, round), is(X, young).",
        "description": "If something is round and young then it is white."
    },
    {
        "id": 13685,
        "statement": "is(X, round) :- is(X, green), is(X, white).",
        "description": "Green, white things are round."
    },
    {
        "id": 13686,
        "statement": "is(bob, nice) :- is(bob, quiet), is(bob, round).",
        "description": "If Bob is quiet and Bob is round then Bob is nice."
    },
    {
        "id": 13687,
        "statement": "is(X, quiet) :- is(X, round), is(X, young).",
        "description": "All round, young things are quiet."
    },
    {
        "id": 13688,
        "statement": "eats(X, bald_eagle) :- sees(X, bald_eagle).",
        "description": "If something sees the bald eagle then it eats the bald eagle."
    },
    {
        "id": 13689,
        "statement": "is(X, green) :- eats(X, bald_eagle).",
        "description": "If something eats the bald eagle then it is green."
    },
    {
        "id": 13690,
        "statement": "is(tiger, green) :- eats(X, tiger), visits(tiger, bald_eagle).",
        "description": "If something eats the tiger and the tiger visits the bald eagle then the tiger is green."
    },
    {
        "id": 13691,
        "statement": "is(X, cold) :- is(X, young), visits(X, tiger).",
        "description": "If something is young and it visits the tiger then it is cold."
    },
    {
        "id": 13692,
        "statement": "sees(tiger, bald_eagle) :- sees(X, tiger), is(X, green).",
        "description": "If something sees the tiger and it is green then the tiger sees the bald eagle."
    },
    {
        "id": 13693,
        "statement": "visits(X, tiger) :- is(X, young), not is(X, round).",
        "description": "If something is young and not round then it visits the tiger."
    },
    {
        "id": 13694,
        "statement": "is(X, furry) :- is(X, nice), is(X, green).",
        "description": "Nice, green things are furry."
    },
    {
        "id": 13695,
        "statement": "is(X, kind) :- is(X, green), is(X, round).",
        "description": "All green, round things are kind."
    },
    {
        "id": 13696,
        "statement": "is(X, green) :- is(X, nice), is(X, kind).",
        "description": "All nice, kind things are green."
    },
    {
        "id": 13697,
        "statement": "eats(cat, cow) :- likes(X, cow), eats(cow, cat).",
        "description": "If someone likes the cow and the cow eats the cat then the cat eats the cow."
    },
    {
        "id": 13698,
        "statement": "eats(X, cat) :- likes(X, rabbit), not is(X, rough).",
        "description": "If someone likes the rabbit and they are not rough then they eat the cat."
    },
    {
        "id": 13699,
        "statement": "likes(tiger, rabbit) :- likes(X, tiger).",
        "description": "If someone likes the tiger then the tiger likes the rabbit."
    },
    {
        "id": 13700,
        "statement": "is(tiger, blue) :- likes(X, rabbit), eats(X, tiger).",
        "description": "If someone likes the rabbit and they eat the tiger then the tiger is blue."
    },
    {
        "id": 13701,
        "statement": "eats(X, cow) :- likes(X, cat), eats(X, rabbit).",
        "description": "If someone likes the cat and they eat the rabbit then they eat the cow."
    },
    {
        "id": 13702,
        "statement": "likes(X, cat) :- eats(X, cat).",
        "description": "If someone eats the cat then they like the cat."
    },
    {
        "id": 13703,
        "statement": "sees(rabbit, cow) :- eats(X, rabbit), is(X, blue).",
        "description": "If someone eats the rabbit and they are blue then the rabbit sees the cow."
    },
    {
        "id": 13704,
        "statement": "eats(X, tiger) :- likes(X, cat), is(X, blue).",
        "description": "If someone likes the cat and they are blue then they eat the tiger."
    },
    {
        "id": 13705,
        "statement": "chases(X, tiger) :- is(X, big).",
        "description": "If something is big then it chases the tiger."
    },
    {
        "id": 13706,
        "statement": "needs(lion, tiger) :- chases(X, tiger), chases(tiger, lion).",
        "description": "If something chases the tiger and the tiger chases the lion then the lion needs the tiger."
    },
    {
        "id": 13707,
        "statement": "likes(X, bald_eagle) :- is(X, big).",
        "description": "If something is big then it likes the bald eagle."
    },
    {
        "id": 13708,
        "statement": "chases(X, mouse) :- likes(X, lion), chases(lion, bald_eagle).",
        "description": "If something likes the lion and the lion chases the bald eagle then it chases the mouse."
    },
    {
        "id": 13709,
        "statement": "chases(mouse, lion) :- chases(tiger, mouse).",
        "description": "If the tiger chases the mouse then the mouse chases the lion."
    },
    {
        "id": 13710,
        "statement": "chases(tiger, lion) :- chases(X, tiger).",
        "description": "If something chases the tiger then the tiger chases the lion."
    },
    {
        "id": 13711,
        "statement": "is(X, red) :- needs(X, tiger).",
        "description": "If something needs the tiger then it is red."
    },
    {
        "id": 13712,
        "statement": "is(X, cold) :- is(X, round), is(X, smart).",
        "description": "Round, smart things are cold."
    },
    {
        "id": 13713,
        "statement": "is(X, furry) :- is(X, kind), is(X, blue).",
        "description": "If something is kind and blue then it is furry."
    },
    {
        "id": 13714,
        "statement": "is(X, furry) :- is(X, kind), not is(X, young).",
        "description": "If something is kind and not young then it is furry."
    },
    {
        "id": 13715,
        "statement": "is(X, blue) :- is(X, furry), is(X, smart).",
        "description": "All furry, smart things are blue."
    },
    {
        "id": 13716,
        "statement": "is(X, smart) :- is(X, furry), not is(X, young).",
        "description": "If something is furry and not young then it is smart."
    },
    {
        "id": 13717,
        "statement": "is(X, round) :- is(X, blue), is(X, furry).",
        "description": "If something is blue and furry then it is round."
    },
    {
        "id": 13718,
        "statement": "is(X, kind) :- is(X, blue), is(X, smart).",
        "description": "All blue, smart things are kind."
    },
    {
        "id": 13719,
        "statement": "is(X, green) :- is(X, cold), is(X, red).",
        "description": "All cold, red things are green."
    },
    {
        "id": 13720,
        "statement": "is(X, blue) :- is(X, cold), is(X, rough).",
        "description": "Cold, rough things are blue."
    },
    {
        "id": 13721,
        "statement": "is(harry, kind) :- is(harry, red), is(harry, rough).",
        "description": "If Harry is red and Harry is rough then Harry is kind."
    },
    {
        "id": 13722,
        "statement": "is(cow, big) :- needs(X, cow), not is(X, kind).",
        "description": "If something needs the cow and it is not kind then the cow is big."
    },
    {
        "id": 13723,
        "statement": "needs(X, bald_eagle) :- is(X, kind).",
        "description": "If something is kind then it needs the bald eagle."
    },
    {
        "id": 13724,
        "statement": "needs(X, cow) :- needs(X, bald_eagle), chases(X, bald_eagle).",
        "description": "If something needs the bald eagle and it chases the bald eagle then it needs the cow."
    },
    {
        "id": 13725,
        "statement": "is(bald_eagle, big) :- sees(bald_eagle, squirrel).",
        "description": "If the bald eagle sees the squirrel then the bald eagle is big."
    },
    {
        "id": 13726,
        "statement": "sees(squirrel, mouse) :- is(squirrel, nice).",
        "description": "If the squirrel is nice then the squirrel sees the mouse."
    },
    {
        "id": 13727,
        "statement": "chases(squirrel, bald_eagle) :- chases(X, bald_eagle), not sees(X, squirrel).",
        "description": "If something chases the bald eagle and it does not see the squirrel then the squirrel chases the bald eagle."
    },
    {
        "id": 13728,
        "statement": "sees(X, cow) :- is(X, green), not sees(X, mouse).",
        "description": "If something is green and it does not see the mouse then it sees the cow."
    },
    {
        "id": 13729,
        "statement": "needs(mouse, squirrel) :- chases(bald_eagle, mouse), sees(bald_eagle, cow).",
        "description": "If the bald eagle chases the mouse and the bald eagle sees the cow then the mouse needs the squirrel."
    },
    {
        "id": 13730,
        "statement": "is(X, white) :- is(X, kind), not is(X, smart).",
        "description": "If someone is kind and not smart then they are white."
    },
    {
        "id": 13731,
        "statement": "is(X, red) :- is(X, blue), not is(X, furry).",
        "description": "If someone is blue and not furry then they are red."
    },
    {
        "id": 13732,
        "statement": "visits(X, cat) :- is(X, green).",
        "description": "If something is green then it visits the cat."
    },
    {
        "id": 13733,
        "statement": "needs(bald_eagle, cat) :- eats(X, squirrel), eats(X, bald_eagle).",
        "description": "If something eats the squirrel and it eats the bald eagle then the bald eagle needs the cat."
    },
    {
        "id": 13734,
        "statement": "needs(squirrel, cat) :- needs(cow, squirrel).",
        "description": "If the cow needs the squirrel then the squirrel needs the cat."
    },
    {
        "id": 13735,
        "statement": "eats(X, cow) :- visits(X, bald_eagle).",
        "description": "If something visits the bald eagle then it eats the cow."
    },
    {
        "id": 13736,
        "statement": "visits(bald_eagle, squirrel) :- needs(X, cat), needs(cat, bald_eagle).",
        "description": "If something needs the cat and the cat needs the bald eagle then the bald eagle visits the squirrel."
    },
    {
        "id": 13737,
        "statement": "is(X, cold) :- needs(X, cat).",
        "description": "If something needs the cat then it is cold."
    },
    {
        "id": 13738,
        "statement": "is(X, furry) :- is(X, young), is(X, white).",
        "description": "Young, white things are furry."
    },
    {
        "id": 13739,
        "statement": "is(fiona, white) :- is(fiona, rough), is(fiona, young).",
        "description": "If Fiona is rough and Fiona is young then Fiona is white."
    },
    {
        "id": 13740,
        "statement": "is(erin, smart) :- is(erin, cold), is(erin, furry).",
        "description": "If Erin is cold and Erin is furry then Erin is smart."
    },
    {
        "id": 13741,
        "statement": "is(X, rough) :- is(X, blue), is(X, big).",
        "description": "Blue, big people are rough."
    },
    {
        "id": 13742,
        "statement": "is(X, blue) :- is(X, young), is(X, smart).",
        "description": "If someone is young and smart then they are blue."
    },
    {
        "id": 13743,
        "statement": "likes(X, squirrel) :- sees(X, squirrel).",
        "description": "If something sees the squirrel then it likes the squirrel."
    },
    {
        "id": 13744,
        "statement": "is(mouse, blue) :- sees(rabbit, squirrel), likes(rabbit, mouse).",
        "description": "If the rabbit sees the squirrel and the rabbit likes the mouse then the mouse is blue."
    },
    {
        "id": 13745,
        "statement": "is(mouse, green) :- is(squirrel, green), likes(squirrel, mouse).",
        "description": "If the squirrel is green and the squirrel likes the mouse then the mouse is green."
    },
    {
        "id": 13746,
        "statement": "sees(X, squirrel) :- is(X, green), is(X, big).",
        "description": "If something is green and big then it sees the squirrel."
    },
    {
        "id": 13747,
        "statement": "is(X, green) :- likes(X, squirrel).",
        "description": "If something likes the squirrel then it is green."
    },
    {
        "id": 13748,
        "statement": "chases(X, rabbit) :- is(X, red), is(X, green).",
        "description": "If something is red and green then it chases the rabbit."
    },
    {
        "id": 13749,
        "statement": "chases(tiger, squirrel) :- sees(X, tiger).",
        "description": "If something sees the tiger then the tiger chases the squirrel."
    },
    {
        "id": 13750,
        "statement": "likes(squirrel, mouse) :- likes(X, squirrel).",
        "description": "If something likes the squirrel then the squirrel likes the mouse."
    },
    {
        "id": 13751,
        "statement": "sees(X, mouse) :- is(X, big).",
        "description": "If something is big then it sees the mouse."
    },
    {
        "id": 13752,
        "statement": "is(X, smart) :- is(X, nice), is(X, furry).",
        "description": "All nice, furry things are smart."
    },
    {
        "id": 13753,
        "statement": "is(X, big) :- is(X, furry), is(X, green).",
        "description": "Furry, green things are big."
    },
    {
        "id": 13754,
        "statement": "is(X, blue) :- is(X, rough), is(X, kind).",
        "description": "If someone is rough and kind then they are blue."
    },
    {
        "id": 13755,
        "statement": "is(X, rough) :- is(X, smart), is(X, nice).",
        "description": "Smart, nice people are rough."
    },
    {
        "id": 13756,
        "statement": "is(X, kind) :- is(X, blue), is(X, big).",
        "description": "Blue, big people are kind."
    },
    {
        "id": 13757,
        "statement": "is(bald_eagle, round) :- eats(X, cat), needs(cat, bald_eagle).",
        "description": "If someone eats the cat and the cat needs the bald eagle then the bald eagle is round."
    },
    {
        "id": 13758,
        "statement": "visits(X, rabbit) :- is(X, blue), is(X, round).",
        "description": "If someone is blue and round then they visit the rabbit."
    },
    {
        "id": 13759,
        "statement": "visits(X, cow) :- needs(X, cow).",
        "description": "If someone needs the cow then they visit the cow."
    },
    {
        "id": 13760,
        "statement": "eats(cow, rabbit) :- visits(cow, rabbit), is(cow, blue).",
        "description": "If the cow visits the rabbit and the cow is blue then the cow eats the rabbit."
    },
    {
        "id": 13761,
        "statement": "is(bald_eagle, blue) :- needs(X, bald_eagle).",
        "description": "If someone needs the bald eagle then the bald eagle is blue."
    },
    {
        "id": 13762,
        "statement": "eats(X, cat) :- visits(X, cat), needs(X, cow).",
        "description": "If someone visits the cat and they need the cow then they eat the cat."
    },
    {
        "id": 13763,
        "statement": "is(cow, blue) :- is(X, blue), needs(X, cow).",
        "description": "If someone is blue and they need the cow then the cow is blue."
    },
    {
        "id": 13764,
        "statement": "eats(rabbit, dog) :- is(X, kind), visits(X, rabbit).",
        "description": "If someone is kind and they visit the rabbit then the rabbit eats the dog."
    },
    {
        "id": 13765,
        "statement": "eats(rabbit, dog) :- sees(X, rabbit), is(rabbit, nice).",
        "description": "If someone sees the rabbit and the rabbit is nice then the rabbit eats the dog."
    },
    {
        "id": 13766,
        "statement": "is(X, round) :- is(X, green), not sees(X, bear).",
        "description": "If someone is green and they do not see the bear then they are round."
    },
    {
        "id": 13767,
        "statement": "sees(X, dog) :- is(X, green).",
        "description": "If someone is green then they see the dog."
    },
    {
        "id": 13768,
        "statement": "visits(dog, bear) :- eats(X, dog).",
        "description": "If someone eats the dog then the dog visits the bear."
    },
    {
        "id": 13769,
        "statement": "is(tiger, green) :- eats(X, rabbit), sees(rabbit, tiger).",
        "description": "If someone eats the rabbit and the rabbit sees the tiger then the tiger is green."
    },
    {
        "id": 13770,
        "statement": "visits(rabbit, dog) :- visits(X, bear), eats(bear, rabbit).",
        "description": "If someone visits the bear and the bear eats the rabbit then the rabbit visits the dog."
    },
    {
        "id": 13771,
        "statement": "eats(X, rabbit) :- visits(X, bear).",
        "description": "If someone visits the bear then they eat the rabbit."
    },
    {
        "id": 13772,
        "statement": "is(dog, round) :- not eats(tiger, rabbit), not visits(tiger, dog).",
        "description": "If the tiger does not eat the rabbit and the tiger does not visit the dog then the dog is round."
    },
    {
        "id": 13773,
        "statement": "is(cat, round) :- sees(cat, dog), needs(dog, bear).",
        "description": "If the cat sees the dog and the dog needs the bear then the cat is round."
    },
    {
        "id": 13774,
        "statement": "likes(dog, bear) :- likes(cow, dog).",
        "description": "If the cow likes the dog then the dog likes the bear."
    },
    {
        "id": 13775,
        "statement": "needs(dog, cow) :- needs(cow, dog).",
        "description": "If the cow needs the dog then the dog needs the cow."
    },
    {
        "id": 13776,
        "statement": "likes(cat, cow) :- is(bear, round), likes(bear, cat).",
        "description": "If the bear is round and the bear likes the cat then the cat likes the cow."
    },
    {
        "id": 13777,
        "statement": "sees(cat, cow) :- likes(cow, cat).",
        "description": "If the cow likes the cat then the cat sees the cow."
    },
    {
        "id": 13778,
        "statement": "sees(X, cow) :- is(X, round).",
        "description": "If something is round then it sees the cow."
    },
    {
        "id": 13779,
        "statement": "needs(dog, bear) :- sees(X, dog), likes(X, cow).",
        "description": "If something sees the dog and it likes the cow then the dog needs the bear."
    },
    {
        "id": 13780,
        "statement": "likes(cow, dog) :- sees(X, cow).",
        "description": "If something sees the cow then the cow likes the dog."
    },
    {
        "id": 13781,
        "statement": "is(X, furry) :- is(X, nice), is(X, round).",
        "description": "All nice, round things are furry."
    },
    {
        "id": 13782,
        "statement": "is(X, nice) :- is(X, round), is(X, blue).",
        "description": "Round, blue things are nice."
    },
    {
        "id": 13783,
        "statement": "is(X, young) :- is(X, furry), is(X, round).",
        "description": "All furry, round things are young."
    },
    {
        "id": 13784,
        "statement": "is(X, round) :- is(X, kind), is(X, nice).",
        "description": "If someone is kind and nice then they are round."
    },
    {
        "id": 13785,
        "statement": "is(X, nice) :- is(X, cold), is(X, kind).",
        "description": "Cold, kind people are nice."
    },
    {
        "id": 13786,
        "statement": "is(X, cold) :- is(X, red), is(X, white).",
        "description": "All red, white people are cold."
    },
    {
        "id": 13787,
        "statement": "is(X, red) :- is(X, smart), is(X, kind).",
        "description": "All smart, kind people are red."
    },
    {
        "id": 13788,
        "statement": "is(fiona, white) :- is(fiona, nice), is(fiona, red).",
        "description": "If Fiona is nice and Fiona is red then Fiona is white."
    },
    {
        "id": 13789,
        "statement": "is(X, young) :- is(X, red), is(X, round).",
        "description": "Red, round people are young."
    },
    {
        "id": 13790,
        "statement": "is(X, round) :- is(X, nice), is(X, furry).",
        "description": "All nice, furry people are round."
    },
    {
        "id": 13791,
        "statement": "is(X, red) :- is(X, nice), is(X, white).",
        "description": "Nice, white people are red."
    },
    {
        "id": 13792,
        "statement": "is(X, red) :- is(X, white), is(X, green).",
        "description": "If something is white and green then it is red."
    },
    {
        "id": 13793,
        "statement": "is(fiona, white) :- is(fiona, smart).",
        "description": "If Fiona is smart then Fiona is white."
    },
    {
        "id": 13794,
        "statement": "likes(X, tiger) :- is(X, cold), is(X, round).",
        "description": "If something is cold and round then it likes the tiger."
    },
    {
        "id": 13795,
        "statement": "visits(X, rabbit) :- visits(X, tiger).",
        "description": "If something visits the tiger then it visits the rabbit."
    },
    {
        "id": 13796,
        "statement": "visits(dog, tiger) :- likes(X, dog).",
        "description": "If something likes the dog then the dog visits the tiger."
    },
    {
        "id": 13797,
        "statement": "visits(dog, bear) :- visits(X, rabbit), likes(X, dog).",
        "description": "If something visits the rabbit and it likes the dog then the dog visits the bear."
    },
    {
        "id": 13798,
        "statement": "is(X, nice) :- visits(X, rabbit), visits(rabbit, tiger).",
        "description": "If something visits the rabbit and the rabbit visits the tiger then it is nice."
    },
    {
        "id": 13799,
        "statement": "is(X, round) :- visits(X, bear).",
        "description": "If something visits the bear then it is round."
    },
    {
        "id": 13800,
        "statement": "is(X, big) :- is(X, smart), is(X, blue).",
        "description": "All smart, blue people are big."
    },
    {
        "id": 13801,
        "statement": "is(X, cold) :- is(X, smart), is(X, white).",
        "description": "If someone is smart and white then they are cold."
    },
    {
        "id": 13802,
        "statement": "is(X, cold) :- is(X, nice), is(X, blue).",
        "description": "All nice, blue people are cold."
    },
    {
        "id": 13803,
        "statement": "is(X, young) :- is(X, blue), is(X, kind).",
        "description": "If something is blue and kind then it is young."
    },
    {
        "id": 13804,
        "statement": "is(X, blue) :- is(X, kind), is(X, white).",
        "description": "If something is kind and white then it is blue."
    },
    {
        "id": 13805,
        "statement": "is(X, furry) :- is(X, blue), is(X, kind).",
        "description": "Blue, kind things are furry."
    },
    {
        "id": 13806,
        "statement": "is(X, white) :- is(X, cold), is(X, furry).",
        "description": "All cold, furry things are white."
    },
    {
        "id": 13807,
        "statement": "is(cow, rough) :- is(X, round), visits(X, cow).",
        "description": "If someone is round and they visit the cow then the cow is rough."
    },
    {
        "id": 13808,
        "statement": "visits(X, cow) :- likes(X, cow).",
        "description": "If someone likes the cow then they visit the cow."
    },
    {
        "id": 13809,
        "statement": "likes(X, cow) :- is(X, rough).",
        "description": "If someone is rough then they like the cow."
    },
    {
        "id": 13810,
        "statement": "sees(X, rabbit) :- likes(X, bear).",
        "description": "If someone likes the bear then they see the rabbit."
    },
    {
        "id": 13811,
        "statement": "visits(X, mouse) :- chases(X, bald_eagle), is(bald_eagle, nice).",
        "description": "If someone chases the bald eagle and the bald eagle is nice then they visit the mouse."
    },
    {
        "id": 13812,
        "statement": "visits(X, bald_eagle) :- eats(X, mouse), not visits(X, lion).",
        "description": "If someone eats the mouse and they do not visit the lion then they visit the bald eagle."
    },
    {
        "id": 13813,
        "statement": "visits(X, bald_eagle) :- visits(X, cat), not chases(X, lion).",
        "description": "If someone visits the cat and they do not chase the lion then they visit the bald eagle."
    },
    {
        "id": 13814,
        "statement": "visits(lion, bald_eagle) :- visits(X, lion).",
        "description": "If someone visits the lion then the lion visits the bald eagle."
    },
    {
        "id": 13815,
        "statement": "is(mouse, rough) :- chases(X, mouse), not visits(X, mouse).",
        "description": "If someone chases the mouse and they do not visit the mouse then the mouse is rough."
    },
    {
        "id": 13816,
        "statement": "chases(X, mouse) :- is(X, rough).",
        "description": "If someone is rough then they chase the mouse."
    },
    {
        "id": 13817,
        "statement": "visits(cow, tiger) :- is(cow, rough).",
        "description": "If the cow is rough then the cow visits the tiger."
    },
    {
        "id": 13818,
        "statement": "chases(X, bear) :- visits(X, tiger).",
        "description": "If someone visits the tiger then they chase the bear."
    },
    {
        "id": 13819,
        "statement": "sees(X, tiger) :- chases(X, tiger), is(tiger, rough).",
        "description": "If someone chases the tiger and the tiger is rough then they see the tiger."
    },
    {
        "id": 13820,
        "statement": "is(tiger, rough) :- visits(X, bear), chases(bear, tiger).",
        "description": "If someone visits the bear and the bear chases the tiger then the tiger is rough."
    },
    {
        "id": 13821,
        "statement": "is(X, round) :- sees(X, mouse), sees(mouse, cow).",
        "description": "If someone sees the mouse and the mouse sees the cow then they are round."
    },
    {
        "id": 13822,
        "statement": "visits(mouse, cow) :- chases(X, mouse).",
        "description": "If someone chases the mouse then the mouse visits the cow."
    },
    {
        "id": 13823,
        "statement": "is(bear, rough) :- sees(X, bear).",
        "description": "If someone sees the bear then the bear is rough."
    },
    {
        "id": 13824,
        "statement": "is(X, furry) :- is(X, kind), is(X, white).",
        "description": "If someone is kind and white then they are furry."
    },
    {
        "id": 13825,
        "statement": "is(X, young) :- is(X, furry), is(X, big).",
        "description": "All furry, big people are young."
    },
    {
        "id": 13826,
        "statement": "is(X, kind) :- is(X, green), is(X, furry).",
        "description": "Green, furry people are kind."
    },
    {
        "id": 13827,
        "statement": "is(X, kind) :- is(X, round), is(X, nice).",
        "description": "Round, nice people are kind."
    },
    {
        "id": 13828,
        "statement": "is(X, young) :- is(X, round), is(X, blue).",
        "description": "Round, blue people are young."
    },
    {
        "id": 13829,
        "statement": "is(X, young) :- is(X, green), is(X, cold).",
        "description": "If someone is green and cold then they are young."
    },
    {
        "id": 13830,
        "statement": "is(X, smart) :- is(X, big), is(X, green).",
        "description": "If someone is big and green then they are smart."
    },
    {
        "id": 13831,
        "statement": "is(X, round) :- is(X, smart), is(X, green).",
        "description": "Smart, green people are round."
    },
    {
        "id": 13832,
        "statement": "is(X, furry) :- is(X, big), is(X, cold).",
        "description": "If someone is big and cold then they are furry."
    },
    {
        "id": 13833,
        "statement": "is(X, cold) :- is(X, big), is(X, furry).",
        "description": "If someone is big and furry then they are cold."
    },
    {
        "id": 13834,
        "statement": "is(X, red) :- is(X, young), is(X, smart).",
        "description": "All young, smart people are red."
    },
    {
        "id": 13835,
        "statement": "is(X, smart) :- is(X, young), is(X, white).",
        "description": "All young, white people are smart."
    },
    {
        "id": 13836,
        "statement": "is(charlie, furry) :- is(charlie, white), is(charlie, young).",
        "description": "If Charlie is white and Charlie is young then Charlie is furry."
    },
    {
        "id": 13837,
        "statement": "is(X, big) :- is(X, furry), is(X, young).",
        "description": "Furry, young people are big."
    },
    {
        "id": 13838,
        "statement": "is(fiona, big) :- is(fiona, furry), not is(fiona, young).",
        "description": "If Fiona is furry and Fiona is not young then Fiona is big."
    },
    {
        "id": 13839,
        "statement": "is(X, rough) :- is(X, smart), not is(X, white).",
        "description": "If someone is smart and not white then they are rough."
    },
    {
        "id": 13840,
        "statement": "likes(X, rabbit) :- needs(X, rabbit).",
        "description": "If someone needs the rabbit then they like the rabbit."
    },
    {
        "id": 13841,
        "statement": "needs(X, bear) :- is(X, blue), is(X, rough).",
        "description": "If someone is blue and rough then they need the bear."
    },
    {
        "id": 13842,
        "statement": "is(bear, young) :- needs(X, rabbit), needs(rabbit, bear).",
        "description": "If someone needs the rabbit and the rabbit needs the bear then the bear is young."
    },
    {
        "id": 13843,
        "statement": "likes(tiger, lion) :- needs(tiger, lion), is(lion, green).",
        "description": "If the tiger needs the lion and the lion is green then the tiger likes the lion."
    },
    {
        "id": 13844,
        "statement": "needs(X, lion) :- likes(X, rabbit).",
        "description": "If someone likes the rabbit then they need the lion."
    },
    {
        "id": 13845,
        "statement": "is(X, rough) :- needs(X, lion), likes(X, rabbit).",
        "description": "If someone needs the lion and they like the rabbit then they are rough."
    },
    {
        "id": 13846,
        "statement": "sees(X, rabbit) :- sees(X, tiger), sees(X, bear).",
        "description": "If someone sees the tiger and they see the bear then they see the rabbit."
    },
    {
        "id": 13847,
        "statement": "is(erin, smart) :- is(erin, kind), is(erin, red).",
        "description": "If Erin is kind and Erin is red then Erin is smart."
    },
    {
        "id": 13848,
        "statement": "is(X, round) :- is(X, nice).",
        "description": "All nice people are round."
    },
    {
        "id": 13849,
        "statement": "is(X, nice) :- is(X, green), is(X, furry).",
        "description": "All green, furry people are nice."
    },
    {
        "id": 13850,
        "statement": "is(X, round) :- is(X, smart), is(X, blue).",
        "description": "If someone is smart and blue then they are round."
    },
    {
        "id": 13851,
        "statement": "is(X, furry) :- is(X, round), is(X, kind).",
        "description": "Round, kind people are furry."
    },
    {
        "id": 13852,
        "statement": "eats(X, bald_eagle) :- eats(X, squirrel).",
        "description": "If someone eats the squirrel then they eat the bald eagle."
    },
    {
        "id": 13853,
        "statement": "is(bald_eagle, cold) :- eats(X, squirrel), eats(squirrel, bald_eagle).",
        "description": "If someone eats the squirrel and the squirrel eats the bald eagle then the bald eagle is cold."
    },
    {
        "id": 13854,
        "statement": "chases(squirrel, tiger) :- likes(X, squirrel), is(X, cold).",
        "description": "If someone likes the squirrel and they are cold then the squirrel chases the tiger."
    },
    {
        "id": 13855,
        "statement": "is(X, cold) :- eats(X, bald_eagle), eats(bald_eagle, squirrel).",
        "description": "If someone eats the bald eagle and the bald eagle eats the squirrel then they are cold."
    },
    {
        "id": 13856,
        "statement": "likes(squirrel, bald_eagle) :- is(X, cold), not eats(X, squirrel).",
        "description": "If someone is cold and they do not eat the squirrel then the squirrel likes the bald eagle."
    },
    {
        "id": 13857,
        "statement": "chases(dog, bald_eagle) :- likes(X, dog), likes(X, bald_eagle).",
        "description": "If someone likes the dog and they like the bald eagle then the dog chases the bald eagle."
    },
    {
        "id": 13858,
        "statement": "sees(X, tiger) :- is(X, nice), likes(X, dog).",
        "description": "If someone is nice and they like the dog then they see the tiger."
    },
    {
        "id": 13859,
        "statement": "sees(X, dog) :- sees(X, tiger).",
        "description": "If someone sees the tiger then they see the dog."
    },
    {
        "id": 13860,
        "statement": "is(X, nice) :- sees(X, rabbit), is(rabbit, blue).",
        "description": "If someone sees the rabbit and the rabbit is blue then they are nice."
    },
    {
        "id": 13861,
        "statement": "chases(X, lion) :- is(X, nice).",
        "description": "If someone is nice then they chase the lion."
    },
    {
        "id": 13862,
        "statement": "chases(lion, dog) :- chases(X, lion), sees(lion, dog).",
        "description": "If someone chases the lion and the lion sees the dog then the lion chases the dog."
    },
    {
        "id": 13863,
        "statement": "chases(rabbit, lion) :- chases(X, rabbit).",
        "description": "If someone chases the rabbit then the rabbit chases the lion."
    },
    {
        "id": 13864,
        "statement": "sees(dog, tiger) :- chases(X, lion), sees(X, dog).",
        "description": "If someone chases the lion and they see the dog then the dog sees the tiger."
    },
    {
        "id": 13865,
        "statement": "is(X, blue) :- chases(X, lion).",
        "description": "If someone chases the lion then they are blue."
    },
    {
        "id": 13866,
        "statement": "is(dog, red) :- is(X, young), not sees(X, dog).",
        "description": "If someone is young and they do not see the dog then the dog is red."
    },
    {
        "id": 13867,
        "statement": "is(X, green) :- is(X, blue), is(X, red).",
        "description": "If someone is blue and red then they are green."
    },
    {
        "id": 13868,
        "statement": "is(X, young) :- is(X, red), is(X, furry).",
        "description": "If someone is red and furry then they are young."
    },
    {
        "id": 13869,
        "statement": "is(charlie, blue) :- is(charlie, cold), is(charlie, green).",
        "description": "If Charlie is cold and Charlie is green then Charlie is blue."
    },
    {
        "id": 13870,
        "statement": "is(X, blue) :- is(X, rough), is(X, red).",
        "description": "If someone is rough and red then they are blue."
    },
    {
        "id": 13871,
        "statement": "is(X, kind) :- is(X, smart), is(X, cold).",
        "description": "All smart, cold people are kind."
    },
    {
        "id": 13872,
        "statement": "is(X, kind) :- is(X, nice), is(X, green).",
        "description": "If someone is nice and green then they are kind."
    },
    {
        "id": 13873,
        "statement": "is(X, kind) :- is(X, furry), is(X, red).",
        "description": "All furry, red people are kind."
    },
    {
        "id": 13874,
        "statement": "is(X, nice) :- is(X, cold), is(X, red).",
        "description": "Cold, red people are nice."
    },
    {
        "id": 13875,
        "statement": "is(X, smart) :- is(X, nice), is(X, cold).",
        "description": "All nice, cold people are smart."
    },
    {
        "id": 13876,
        "statement": "visits(bear, cat) :- needs(bear, cat), is(bear, green).",
        "description": "If the bear needs the cat and the bear is green then the bear visits the cat."
    },
    {
        "id": 13877,
        "statement": "visits(X, bear) :- chases(X, cat), is(cat, big).",
        "description": "If something chases the cat and the cat is big then it visits the bear."
    },
    {
        "id": 13878,
        "statement": "chases(cow, mouse) :- visits(cow, mouse).",
        "description": "If the cow visits the mouse then the cow chases the mouse."
    },
    {
        "id": 13879,
        "statement": "is(bear, kind) :- needs(X, bear).",
        "description": "If something needs the bear then the bear is kind."
    },
    {
        "id": 13880,
        "statement": "is(cow, young) :- needs(mouse, cow).",
        "description": "If the mouse needs the cow then the cow is young."
    },
    {
        "id": 13881,
        "statement": "needs(X, bear) :- chases(X, mouse).",
        "description": "If something chases the mouse then it needs the bear."
    },
    {
        "id": 13882,
        "statement": "is(charlie, smart) :- is(charlie, furry), is(charlie, round).",
        "description": "If Charlie is furry and Charlie is round then Charlie is smart."
    },
    {
        "id": 13883,
        "statement": "is(X, kind) :- is(X, nice), is(X, furry).",
        "description": "If something is nice and furry then it is kind."
    },
    {
        "id": 13884,
        "statement": "is(X, kind) :- is(X, smart), is(X, furry).",
        "description": "All smart, furry things are kind."
    },
    {
        "id": 13885,
        "statement": "is(X, young) :- is(X, red), likes(X, lion).",
        "description": "If something is red and it likes the lion then it is young."
    },
    {
        "id": 13886,
        "statement": "eats(lion, bald_eagle) :- not likes(dog, lion).",
        "description": "If the dog does not like the lion then the lion eats the bald eagle."
    },
    {
        "id": 13887,
        "statement": "eats(X, lion) :- needs(X, cow).",
        "description": "If something needs the cow then it eats the lion."
    },
    {
        "id": 13888,
        "statement": "needs(X, cow) :- likes(X, cow), not is(cow, kind).",
        "description": "If something likes the cow and the cow is not kind then it needs the cow."
    },
    {
        "id": 13889,
        "statement": "is(bald_eagle, cold) :- eats(X, lion), eats(lion, bald_eagle).",
        "description": "If something eats the lion and the lion eats the bald eagle then the bald eagle is cold."
    },
    {
        "id": 13890,
        "statement": "likes(lion, cow) :- eats(bald_eagle, lion), not is(lion, young).",
        "description": "If the bald eagle eats the lion and the lion is not young then the lion likes the cow."
    },
    {
        "id": 13891,
        "statement": "likes(X, bald_eagle) :- is(X, red), is(X, nice).",
        "description": "If someone is red and nice then they like the bald eagle."
    },
    {
        "id": 13892,
        "statement": "is(X, red) :- likes(X, tiger), is(X, nice).",
        "description": "If someone likes the tiger and they are nice then they are red."
    },
    {
        "id": 13893,
        "statement": "is(X, blue) :- needs(X, mouse).",
        "description": "If someone needs the mouse then they are blue."
    },
    {
        "id": 13894,
        "statement": "eats(X, tiger) :- needs(X, tiger), is(X, blue).",
        "description": "If someone needs the tiger and they are blue then they eat the tiger."
    },
    {
        "id": 13895,
        "statement": "likes(tiger, mouse) :- likes(X, tiger), not needs(X, tiger).",
        "description": "If someone likes the tiger and they do not need the tiger then the tiger likes the mouse."
    },
    {
        "id": 13896,
        "statement": "eats(mouse, bald_eagle) :- likes(X, mouse).",
        "description": "If someone likes the mouse then the mouse eats the bald eagle."
    },
    {
        "id": 13897,
        "statement": "needs(X, mouse) :- needs(X, bear), likes(bear, tiger).",
        "description": "If someone needs the bear and the bear likes the tiger then they need the mouse."
    },
    {
        "id": 13898,
        "statement": "sees(X, cow) :- needs(X, cow), is(cow, kind).",
        "description": "If something needs the cow and the cow is kind then it sees the cow."
    },
    {
        "id": 13899,
        "statement": "sees(X, cow) :- needs(X, mouse).",
        "description": "If something needs the mouse then it sees the cow."
    },
    {
        "id": 13900,
        "statement": "needs(cow, mouse) :- is(X, kind), sees(X, cow).",
        "description": "If something is kind and it sees the cow then the cow needs the mouse."
    },
    {
        "id": 13901,
        "statement": "needs(cow, mouse) :- needs(X, dog), sees(dog, cow).",
        "description": "If something needs the dog and the dog sees the cow then the cow needs the mouse."
    },
    {
        "id": 13902,
        "statement": "is(X, nice) :- is(X, red), visits(X, dog).",
        "description": "If something is red and it visits the dog then it is nice."
    },
    {
        "id": 13903,
        "statement": "is(cow, kind) :- sees(rabbit, cow), not is(rabbit, kind).",
        "description": "If the rabbit sees the cow and the rabbit is not kind then the cow is kind."
    },
    {
        "id": 13904,
        "statement": "sees(X, dog) :- is(X, kind), not sees(X, mouse).",
        "description": "If something is kind and it does not see the mouse then it sees the dog."
    },
    {
        "id": 13905,
        "statement": "sees(dog, rabbit) :- sees(mouse, dog), sees(mouse, cow).",
        "description": "If the mouse sees the dog and the mouse sees the cow then the dog sees the rabbit."
    },
    {
        "id": 13906,
        "statement": "is(X, white) :- is(X, green), is(X, rough).",
        "description": "If something is green and rough then it is white."
    },
    {
        "id": 13907,
        "statement": "is(anne, furry) :- is(anne, white), is(anne, rough).",
        "description": "If Anne is white and Anne is rough then Anne is furry."
    },
    {
        "id": 13908,
        "statement": "is(X, kind) :- is(X, green), is(X, furry).",
        "description": "If something is green and furry then it is kind."
    },
    {
        "id": 13909,
        "statement": "is(dave, kind) :- is(dave, green), is(dave, rough).",
        "description": "If Dave is green and Dave is rough then Dave is kind."
    },
    {
        "id": 13910,
        "statement": "is(lion, big) :- visits(cat, lion), chases(cat, mouse).",
        "description": "If the cat visits the lion and the cat chases the mouse then the lion is big."
    },
    {
        "id": 13911,
        "statement": "is(mouse, big) :- likes(X, mouse).",
        "description": "If something likes the mouse then the mouse is big."
    },
    {
        "id": 13912,
        "statement": "likes(X, tiger) :- visits(X, lion).",
        "description": "If something visits the lion then it likes the tiger."
    },
    {
        "id": 13913,
        "statement": "is(X, rough) :- likes(X, tiger).",
        "description": "If something likes the tiger then it is rough."
    },
    {
        "id": 13914,
        "statement": "visits(tiger, lion) :- is(X, rough), likes(X, tiger).",
        "description": "If something is rough and it likes the tiger then the tiger visits the lion."
    },
    {
        "id": 13915,
        "statement": "chases(mouse, cat) :- not chases(tiger, mouse).",
        "description": "If the tiger does not chase the mouse then the mouse chases the cat."
    },
    {
        "id": 13916,
        "statement": "likes(tiger, mouse) :- is(tiger, rough).",
        "description": "If the tiger is rough then the tiger likes the mouse."
    },
    {
        "id": 13917,
        "statement": "likes(mouse, cat) :- not chases(mouse, cat).",
        "description": "If the mouse does not chase the cat then the mouse likes the cat."
    },
    {
        "id": 13918,
        "statement": "is(cow, big) :- likes(X, cow), sees(X, cow).",
        "description": "If something likes the cow and it sees the cow then the cow is big."
    },
    {
        "id": 13919,
        "statement": "needs(rabbit, cow) :- is(rabbit, rough).",
        "description": "If the rabbit is rough then the rabbit needs the cow."
    },
    {
        "id": 13920,
        "statement": "likes(rabbit, bear) :- is(X, young), needs(X, rabbit).",
        "description": "If something is young and it needs the rabbit then the rabbit likes the bear."
    },
    {
        "id": 13921,
        "statement": "sees(X, rabbit) :- likes(X, rabbit), needs(rabbit, dog).",
        "description": "If something likes the rabbit and the rabbit needs the dog then it sees the rabbit."
    },
    {
        "id": 13922,
        "statement": "is(bear, big) :- likes(X, bear).",
        "description": "If something likes the bear then the bear is big."
    },
    {
        "id": 13923,
        "statement": "needs(X, rabbit) :- needs(X, cow), not likes(X, cow).",
        "description": "If something needs the cow and it does not like the cow then it needs the rabbit."
    },
    {
        "id": 13924,
        "statement": "is(rabbit, rough) :- is(rabbit, young).",
        "description": "If the rabbit is young then the rabbit is rough."
    },
    {
        "id": 13925,
        "statement": "is(mouse, blue) :- visits(mouse, rabbit), likes(rabbit, mouse).",
        "description": "If the mouse visits the rabbit and the rabbit likes the mouse then the mouse is blue."
    },
    {
        "id": 13926,
        "statement": "is(rabbit, blue) :- not chases(cat, rabbit).",
        "description": "If the cat does not chase the rabbit then the rabbit is blue."
    },
    {
        "id": 13927,
        "statement": "visits(X, rabbit) :- chases(X, mouse), likes(X, rabbit).",
        "description": "If someone chases the mouse and they like the rabbit then they visit the rabbit."
    },
    {
        "id": 13928,
        "statement": "chases(X, cat) :- likes(X, rabbit).",
        "description": "If someone likes the rabbit then they chase the cat."
    },
    {
        "id": 13929,
        "statement": "visits(cat, mouse) :- is(X, young), visits(X, cat).",
        "description": "If someone is young and they visit the cat then the cat visits the mouse."
    },
    {
        "id": 13930,
        "statement": "is(lion, blue) :- chases(X, mouse), chases(mouse, lion).",
        "description": "If someone chases the mouse and the mouse chases the lion then the lion is blue."
    },
    {
        "id": 13931,
        "statement": "likes(rabbit, mouse) :- likes(X, rabbit), not is(X, big).",
        "description": "If someone likes the rabbit and they are not big then the rabbit likes the mouse."
    },
    {
        "id": 13932,
        "statement": "likes(cat, rabbit) :- visits(X, cat).",
        "description": "If someone visits the cat then the cat likes the rabbit."
    },
    {
        "id": 13933,
        "statement": "visits(rabbit, cat) :- is(rabbit, blue).",
        "description": "If the rabbit is blue then the rabbit visits the cat."
    },
    {
        "id": 13934,
        "statement": "is(charlie, rough) :- is(charlie, quiet).",
        "description": "If Charlie is quiet then Charlie is rough."
    },
    {
        "id": 13935,
        "statement": "is(X, rough) :- is(X, cold), is(X, white).",
        "description": "All cold, white people are rough."
    },
    {
        "id": 13936,
        "statement": "is(X, quiet) :- is(X, rough), is(X, cold).",
        "description": "If someone is rough and cold then they are quiet."
    },
    {
        "id": 13937,
        "statement": "is(X, round) :- is(X, rough), is(X, quiet).",
        "description": "Rough, quiet people are round."
    },
    {
        "id": 13938,
        "statement": "is(X, rough) :- is(X, round), is(X, big).",
        "description": "If someone is round and big then they are rough."
    },
    {
        "id": 13939,
        "statement": "sees(X, tiger) :- eats(X, tiger).",
        "description": "If something eats the tiger then it sees the tiger."
    },
    {
        "id": 13940,
        "statement": "eats(X, squirrel) :- needs(X, squirrel).",
        "description": "If something needs the squirrel then it eats the squirrel."
    },
    {
        "id": 13941,
        "statement": "is(X, rough) :- is(X, round), needs(X, cow).",
        "description": "If something is round and it needs the cow then it is rough."
    },
    {
        "id": 13942,
        "statement": "needs(tiger, squirrel) :- sees(X, tiger).",
        "description": "If something sees the tiger then the tiger needs the squirrel."
    },
    {
        "id": 13943,
        "statement": "sees(cow, rabbit) :- eats(X, rabbit), eats(rabbit, cow).",
        "description": "If something eats the rabbit and the rabbit eats the cow then the cow sees the rabbit."
    },
    {
        "id": 13944,
        "statement": "sees(cow, tiger) :- eats(X, cow).",
        "description": "If something eats the cow then the cow sees the tiger."
    },
    {
        "id": 13945,
        "statement": "eats(X, tiger) :- chases(X, lion).",
        "description": "If someone chases the lion then they eat the tiger."
    },
    {
        "id": 13946,
        "statement": "is(X, green) :- is(X, nice).",
        "description": "If someone is nice then they are green."
    },
    {
        "id": 13947,
        "statement": "eats(tiger, lion) :- chases(X, tiger), is(X, young).",
        "description": "If someone chases the tiger and they are young then the tiger eats the lion."
    },
    {
        "id": 13948,
        "statement": "chases(tiger, lion) :- eats(X, tiger).",
        "description": "If someone eats the tiger then the tiger chases the lion."
    },
    {
        "id": 13949,
        "statement": "likes(lion, dog) :- chases(X, lion).",
        "description": "If someone chases the lion then the lion likes the dog."
    },
    {
        "id": 13950,
        "statement": "chases(cow, dog) :- eats(X, cow), chases(cow, tiger).",
        "description": "If someone eats the cow and the cow chases the tiger then the cow chases the dog."
    },
    {
        "id": 13951,
        "statement": "is(dog, round) :- is(dog, young).",
        "description": "If the dog is young then the dog is round."
    },
    {
        "id": 13952,
        "statement": "chases(X, lion) :- chases(X, dog).",
        "description": "If someone chases the dog then they chase the lion."
    },
    {
        "id": 13953,
        "statement": "is(X, blue) :- is(X, furry), not is(X, white).",
        "description": "If someone is furry and not white then they are blue."
    },
    {
        "id": 13954,
        "statement": "is(X, smart) :- is(X, rough), is(X, red).",
        "description": "Rough, red people are smart."
    },
    {
        "id": 13955,
        "statement": "is(gary, smart) :- not is(gary, rough).",
        "description": "If Gary is not rough then Gary is smart."
    },
    {
        "id": 13956,
        "statement": "is(X, round) :- eats(X, bear), needs(bear, rabbit).",
        "description": "If someone eats the bear and the bear needs the rabbit then they are round."
    },
    {
        "id": 13957,
        "statement": "sees(X, bald_eagle) :- is(X, rough).",
        "description": "If someone is rough then they see the bald eagle."
    },
    {
        "id": 13958,
        "statement": "sees(bear, lion) :- is(X, cold), sees(X, bear).",
        "description": "If someone is cold and they see the bear then the bear sees the lion."
    },
    {
        "id": 13959,
        "statement": "needs(X, rabbit) :- is(X, blue).",
        "description": "If someone is blue then they need the rabbit."
    },
    {
        "id": 13960,
        "statement": "sees(lion, bald_eagle) :- eats(bear, lion).",
        "description": "If the bear eats the lion then the lion sees the bald eagle."
    },
    {
        "id": 13961,
        "statement": "eats(lion, bear) :- eats(X, lion), sees(lion, bear).",
        "description": "If someone eats the lion and the lion sees the bear then the lion eats the bear."
    },
    {
        "id": 13962,
        "statement": "sees(X, bear) :- needs(X, rabbit).",
        "description": "If someone needs the rabbit then they see the bear."
    },
    {
        "id": 13963,
        "statement": "eats(bear, bald_eagle) :- eats(X, bear), is(bear, big).",
        "description": "If someone eats the bear and the bear is big then the bear eats the bald eagle."
    },
    {
        "id": 13964,
        "statement": "is(X, round) :- is(X, green), is(X, nice).",
        "description": "All green, nice things are round."
    },
    {
        "id": 13965,
        "statement": "is(X, rough) :- is(X, furry), is(X, green).",
        "description": "All furry, green things are rough."
    },
    {
        "id": 13966,
        "statement": "is(anne, blue) :- is(anne, nice).",
        "description": "If Anne is nice then Anne is blue."
    },
    {
        "id": 13967,
        "statement": "needs(X, cow) :- eats(X, mouse).",
        "description": "If something eats the mouse then it needs the cow."
    },
    {
        "id": 13968,
        "statement": "is(X, red) :- chases(X, mouse), is(X, young).",
        "description": "If something chases the mouse and it is young then it is red."
    },
    {
        "id": 13969,
        "statement": "eats(X, cow) :- needs(X, bear).",
        "description": "If something needs the bear then it eats the cow."
    },
    {
        "id": 13970,
        "statement": "eats(X, dog) :- needs(X, cow).",
        "description": "If something needs the cow then it eats the dog."
    },
    {
        "id": 13971,
        "statement": "eats(X, bear) :- eats(X, dog).",
        "description": "If something eats the dog then it eats the bear."
    },
    {
        "id": 13972,
        "statement": "eats(bear, mouse) :- eats(cow, bear).",
        "description": "If the cow eats the bear then the bear eats the mouse."
    },
    {
        "id": 13973,
        "statement": "is(cow, red) :- needs(X, cow).",
        "description": "If something needs the cow then the cow is red."
    },
    {
        "id": 13974,
        "statement": "is(X, quiet) :- is(X, red), is(X, young).",
        "description": "Red, young things are quiet."
    },
    {
        "id": 13975,
        "statement": "is(X, furry) :- is(X, round), is(X, quiet).",
        "description": "If something is round and quiet then it is furry."
    },
    {
        "id": 13976,
        "statement": "is(X, furry) :- is(X, red), is(X, quiet).",
        "description": "All red, quiet things are furry."
    },
    {
        "id": 13977,
        "statement": "is(X, smart) :- is(X, cold), is(X, young).",
        "description": "If something is cold and young then it is smart."
    },
    {
        "id": 13978,
        "statement": "is(X, blue) :- eats(X, bald_eagle).",
        "description": "If something eats the bald eagle then it is blue."
    },
    {
        "id": 13979,
        "statement": "eats(cow, bald_eagle) :- is(cow, kind), eats(cow, bear).",
        "description": "If the cow is kind and the cow eats the bear then the cow eats the bald eagle."
    },
    {
        "id": 13980,
        "statement": "likes(cow, mouse) :- likes(cow, bald_eagle), is(cow, kind).",
        "description": "If the cow likes the bald eagle and the cow is kind then the cow likes the mouse."
    },
    {
        "id": 13981,
        "statement": "eats(cow, bear) :- likes(cow, bear).",
        "description": "If the cow likes the bear then the cow eats the bear."
    },
    {
        "id": 13982,
        "statement": "eats(bear, bald_eagle) :- eats(X, bear), is(X, kind).",
        "description": "If something eats the bear and it is kind then the bear eats the bald eagle."
    },
    {
        "id": 13983,
        "statement": "eats(bald_eagle, cow) :- eats(mouse, bald_eagle), is(mouse, blue).",
        "description": "If the mouse eats the bald eagle and the mouse is blue then the bald eagle eats the cow."
    },
    {
        "id": 13984,
        "statement": "is(erin, young) :- is(erin, nice), is(erin, white).",
        "description": "If Erin is nice and Erin is white then Erin is young."
    },
    {
        "id": 13985,
        "statement": "is(X, nice) :- is(X, cold), is(X, young).",
        "description": "Cold, young people are nice."
    },
    {
        "id": 13986,
        "statement": "is(X, blue) :- is(X, cold), is(X, nice).",
        "description": "Cold, nice people are blue."
    },
    {
        "id": 13987,
        "statement": "is(X, kind) :- is(X, cold), is(X, big).",
        "description": "Cold, big things are kind."
    },
    {
        "id": 13988,
        "statement": "is(X, young) :- is(X, red), is(X, kind).",
        "description": "If something is red and kind then it is young."
    },
    {
        "id": 13989,
        "statement": "is(X, red) :- is(X, green), is(X, nice).",
        "description": "All green, nice things are red."
    },
    {
        "id": 13990,
        "statement": "is(X, red) :- is(X, young), not is(X, kind).",
        "description": "If something is young and not kind then it is red."
    },
    {
        "id": 13991,
        "statement": "is(X, kind) :- is(X, rough), is(X, big).",
        "description": "All rough, big things are kind."
    },
    {
        "id": 13992,
        "statement": "is(erin, kind) :- is(erin, young).",
        "description": "If Erin is young then Erin is kind."
    },
    {
        "id": 13993,
        "statement": "is(X, blue) :- is(X, big), is(X, cold).",
        "description": "Big, cold things are blue."
    },
    {
        "id": 13994,
        "statement": "is(X, red) :- is(X, round), is(X, kind).",
        "description": "Round, kind things are red."
    },
    {
        "id": 13995,
        "statement": "is(X, green) :- is(X, round), is(X, red).",
        "description": "If something is round and red then it is green."
    },
    {
        "id": 13996,
        "statement": "is(bob, round) :- is(bob, kind), is(bob, big).",
        "description": "If Bob is kind and Bob is big then Bob is round."
    },
    {
        "id": 13997,
        "statement": "is(harry, nice) :- is(harry, cold).",
        "description": "If Harry is cold then Harry is nice."
    },
    {
        "id": 13998,
        "statement": "is(X, nice) :- is(X, red), is(X, cold).",
        "description": "Red, cold people are nice."
    },
    {
        "id": 13999,
        "statement": "is(X, nice) :- is(X, red), not is(X, quiet).",
        "description": "If someone is red and not quiet then they are nice."
    },
    {
        "id": 14000,
        "statement": "visits(mouse, bald_eagle) :- chases(X, mouse).",
        "description": "If someone chases the mouse then the mouse visits the bald eagle."
    },
    {
        "id": 14001,
        "statement": "visits(bald_eagle, dog) :- sees(bald_eagle, mouse), visits(bald_eagle, mouse).",
        "description": "If the bald eagle sees the mouse and the bald eagle visits the mouse then the bald eagle visits the dog."
    },
    {
        "id": 14002,
        "statement": "chases(squirrel, mouse) :- sees(X, mouse), visits(X, squirrel).",
        "description": "If someone sees the mouse and they visit the squirrel then the squirrel chases the mouse."
    },
    {
        "id": 14003,
        "statement": "sees(X, bald_eagle) :- visits(X, squirrel), chases(X, squirrel).",
        "description": "If someone visits the squirrel and they chase the squirrel then they see the bald eagle."
    },
    {
        "id": 14004,
        "statement": "chases(X, squirrel) :- is(X, round), visits(X, dog).",
        "description": "If someone is round and they visit the dog then they chase the squirrel."
    },
    {
        "id": 14005,
        "statement": "visits(bald_eagle, squirrel) :- sees(X, bald_eagle).",
        "description": "If someone sees the bald eagle then the bald eagle visits the squirrel."
    },
    {
        "id": 14006,
        "statement": "chases(squirrel, mouse) :- sees(X, squirrel), is(X, rough).",
        "description": "If someone sees the squirrel and they are rough then the squirrel chases the mouse."
    },
    {
        "id": 14007,
        "statement": "is(anne, kind) :- is(anne, cold).",
        "description": "If Anne is cold then Anne is kind."
    },
    {
        "id": 14008,
        "statement": "is(X, kind) :- is(X, blue), is(X, white).",
        "description": "Blue, white things are kind."
    },
    {
        "id": 14009,
        "statement": "sees(mouse, dog) :- sees(cat, mouse), visits(cat, dog).",
        "description": "If the cat sees the mouse and the cat visits the dog then the mouse sees the dog."
    },
    {
        "id": 14010,
        "statement": "sees(X, tiger) :- likes(X, tiger).",
        "description": "If someone likes the tiger then they see the tiger."
    },
    {
        "id": 14011,
        "statement": "visits(X, dog) :- likes(X, mouse).",
        "description": "If someone likes the mouse then they visit the dog."
    },
    {
        "id": 14012,
        "statement": "is(X, big) :- visits(X, dog).",
        "description": "If someone visits the dog then they are big."
    },
    {
        "id": 14013,
        "statement": "likes(cat, tiger) :- likes(X, cat).",
        "description": "If someone likes the cat then the cat likes the tiger."
    },
    {
        "id": 14014,
        "statement": "likes(X, tiger) :- likes(X, dog).",
        "description": "If someone likes the dog then they like the tiger."
    },
    {
        "id": 14015,
        "statement": "likes(dog, mouse) :- visits(X, mouse), likes(mouse, dog).",
        "description": "If someone visits the mouse and the mouse likes the dog then the dog likes the mouse."
    },
    {
        "id": 14016,
        "statement": "visits(X, mouse) :- sees(X, cat).",
        "description": "If someone sees the cat then they visit the mouse."
    },
    {
        "id": 14017,
        "statement": "sees(X, squirrel) :- eats(X, bear).",
        "description": "If someone eats the bear then they see the squirrel."
    },
    {
        "id": 14018,
        "statement": "likes(squirrel, bald_eagle) :- likes(X, squirrel), not sees(X, bear).",
        "description": "If someone likes the squirrel and they do not see the bear then the squirrel likes the bald eagle."
    },
    {
        "id": 14019,
        "statement": "is(X, round) :- sees(X, squirrel).",
        "description": "If someone sees the squirrel then they are round."
    },
    {
        "id": 14020,
        "statement": "eats(squirrel, bald_eagle) :- not sees(mouse, squirrel), not likes(mouse, bald_eagle).",
        "description": "If the mouse does not see the squirrel and the mouse does not like the bald eagle then the squirrel eats the bald eagle."
    },
    {
        "id": 14021,
        "statement": "is(X, green) :- needs(X, bear), likes(bear, bald_eagle).",
        "description": "If something needs the bear and the bear likes the bald eagle then it is green."
    },
    {
        "id": 14022,
        "statement": "needs(X, bald_eagle) :- is(X, rough), is(X, kind).",
        "description": "If something is rough and kind then it needs the bald eagle."
    },
    {
        "id": 14023,
        "statement": "needs(X, cow) :- is(X, nice), is(X, rough).",
        "description": "If something is nice and rough then it needs the cow."
    },
    {
        "id": 14024,
        "statement": "needs(bald_eagle, bear) :- eats(X, bald_eagle).",
        "description": "If something eats the bald eagle then the bald eagle needs the bear."
    },
    {
        "id": 14025,
        "statement": "likes(X, cow) :- likes(X, bald_eagle).",
        "description": "If something likes the bald eagle then it likes the cow."
    },
    {
        "id": 14026,
        "statement": "likes(bear, bald_eagle) :- eats(X, bald_eagle), needs(bald_eagle, bear).",
        "description": "If something eats the bald eagle and the bald eagle needs the bear then the bear likes the bald eagle."
    },
    {
        "id": 14027,
        "statement": "is(X, rough) :- needs(X, dog), is(X, kind).",
        "description": "If something needs the dog and it is kind then it is rough."
    },
    {
        "id": 14028,
        "statement": "likes(X, dog) :- needs(X, bear), is(X, kind).",
        "description": "If something needs the bear and it is kind then it likes the dog."
    },
    {
        "id": 14029,
        "statement": "needs(X, bear) :- is(X, kind).",
        "description": "If something is kind then it needs the bear."
    },
    {
        "id": 14030,
        "statement": "needs(X, bear) :- likes(X, dog).",
        "description": "If something likes the dog then it needs the bear."
    },
    {
        "id": 14031,
        "statement": "needs(X, dog) :- likes(X, dog).",
        "description": "If something likes the dog then it needs the dog."
    },
    {
        "id": 14032,
        "statement": "likes(dog, cow) :- needs(X, dog).",
        "description": "If something needs the dog then the dog likes the cow."
    },
    {
        "id": 14033,
        "statement": "is(cow, kind) :- not is(cow, big).",
        "description": "If the cow is not big then the cow is kind."
    },
    {
        "id": 14034,
        "statement": "likes(X, cow) :- needs(X, bear), sees(X, dog).",
        "description": "If something needs the bear and it sees the dog then it likes the cow."
    },
    {
        "id": 14035,
        "statement": "is(anne, furry) :- is(anne, cold), is(anne, round).",
        "description": "If Anne is cold and Anne is round then Anne is furry."
    },
    {
        "id": 14036,
        "statement": "is(anne, red) :- is(anne, white).",
        "description": "If Anne is white then Anne is red."
    },
    {
        "id": 14037,
        "statement": "is(X, blue) :- sees(X, bear), likes(X, rabbit).",
        "description": "If something sees the bear and it likes the rabbit then it is blue."
    },
    {
        "id": 14038,
        "statement": "is(X, blue) :- visits(X, mouse), is(mouse, rough).",
        "description": "If something visits the mouse and the mouse is rough then it is blue."
    },
    {
        "id": 14039,
        "statement": "sees(X, rabbit) :- visits(X, bear).",
        "description": "If something visits the bear then it sees the rabbit."
    },
    {
        "id": 14040,
        "statement": "sees(X, mouse) :- sees(X, rabbit).",
        "description": "If something sees the rabbit then it sees the mouse."
    },
    {
        "id": 14041,
        "statement": "is(X, blue) :- likes(X, mouse), visits(X, tiger).",
        "description": "If something likes the mouse and it visits the tiger then it is blue."
    },
    {
        "id": 14042,
        "statement": "sees(bear, rabbit) :- visits(X, bear).",
        "description": "If something visits the bear then the bear sees the rabbit."
    },
    {
        "id": 14043,
        "statement": "visits(X, bear) :- sees(X, mouse).",
        "description": "If something sees the mouse then it visits the bear."
    },
    {
        "id": 14044,
        "statement": "visits(X, mouse) :- is(X, round), is(X, rough).",
        "description": "If something is round and rough then it visits the mouse."
    },
    {
        "id": 14045,
        "statement": "is(tiger, blue) :- visits(X, rabbit), likes(rabbit, tiger).",
        "description": "If something visits the rabbit and the rabbit likes the tiger then the tiger is blue."
    },
    {
        "id": 14046,
        "statement": "is(X, round) :- is(X, big), is(X, furry).",
        "description": "All big, furry things are round."
    },
    {
        "id": 14047,
        "statement": "is(gary, furry) :- is(gary, round).",
        "description": "If Gary is round then Gary is furry."
    },
    {
        "id": 14048,
        "statement": "eats(X, cow) :- likes(X, rabbit).",
        "description": "If someone likes the rabbit then they eat the cow."
    },
    {
        "id": 14049,
        "statement": "likes(X, rabbit) :- is(X, big).",
        "description": "If someone is big then they like the rabbit."
    },
    {
        "id": 14050,
        "statement": "is(cow, rough) :- is(X, kind), needs(X, cow).",
        "description": "If someone is kind and they need the cow then the cow is rough."
    },
    {
        "id": 14051,
        "statement": "is(bald_eagle, kind) :- is(X, green), eats(X, bald_eagle).",
        "description": "If someone is green and they eat the bald eagle then the bald eagle is kind."
    },
    {
        "id": 14052,
        "statement": "is(cow, kind) :- needs(bald_eagle, cow).",
        "description": "If the bald eagle needs the cow then the cow is kind."
    },
    {
        "id": 14053,
        "statement": "is(X, big) :- is(X, blue), is(X, white).",
        "description": "If someone is blue and white then they are big."
    },
    {
        "id": 14054,
        "statement": "is(X, red) :- is(X, white), is(X, blue).",
        "description": "If someone is white and blue then they are red."
    },
    {
        "id": 14055,
        "statement": "is(X, white) :- is(X, red), is(X, blue).",
        "description": "If someone is red and blue then they are white."
    },
    {
        "id": 14056,
        "statement": "is(X, blue) :- is(X, nice), is(X, white).",
        "description": "All nice, white people are blue."
    },
    {
        "id": 14057,
        "statement": "likes(X, bear) :- eats(X, bear).",
        "description": "If something eats the bear then it likes the bear."
    },
    {
        "id": 14058,
        "statement": "likes(X, bear) :- likes(X, cat), is(X, round).",
        "description": "If something likes the cat and it is round then it likes the bear."
    },
    {
        "id": 14059,
        "statement": "needs(rabbit, cow) :- likes(cow, rabbit).",
        "description": "If the cow likes the rabbit then the rabbit needs the cow."
    },
    {
        "id": 14060,
        "statement": "needs(rabbit, cow) :- needs(cow, rabbit), is(rabbit, kind).",
        "description": "If the cow needs the rabbit and the rabbit is kind then the rabbit needs the cow."
    },
    {
        "id": 14061,
        "statement": "eats(X, bear) :- is(X, round), not is(X, young).",
        "description": "If something is round and not young then it eats the bear."
    },
    {
        "id": 14062,
        "statement": "needs(cat, rabbit) :- is(cat, big), likes(cat, rabbit).",
        "description": "If the cat is big and the cat likes the rabbit then the cat needs the rabbit."
    },
    {
        "id": 14063,
        "statement": "likes(cat, bear) :- likes(bear, rabbit), likes(bear, cat).",
        "description": "If the bear likes the rabbit and the bear likes the cat then the cat likes the bear."
    },
    {
        "id": 14064,
        "statement": "likes(X, rabbit) :- likes(X, bear).",
        "description": "If something likes the bear then it likes the rabbit."
    },
    {
        "id": 14065,
        "statement": "is(X, quiet) :- is(X, big), is(X, red).",
        "description": "All big, red people are quiet."
    },
    {
        "id": 14066,
        "statement": "is(X, green) :- is(X, rough), not is(X, nice).",
        "description": "If someone is rough and not nice then they are green."
    },
    {
        "id": 14067,
        "statement": "is(X, green) :- is(X, big), not is(X, rough).",
        "description": "If someone is big and not rough then they are green."
    },
    {
        "id": 14068,
        "statement": "is(fiona, red) :- is(fiona, nice), is(fiona, big).",
        "description": "If Fiona is nice and Fiona is big then Fiona is red."
    },
    {
        "id": 14069,
        "statement": "is(X, big) :- is(X, rough), is(X, green).",
        "description": "All rough, green people are big."
    },
    {
        "id": 14070,
        "statement": "eats(lion, bear) :- is(X, kind), not eats(X, lion).",
        "description": "If something is kind and it does not eat the lion then the lion eats the bear."
    },
    {
        "id": 14071,
        "statement": "is(X, kind) :- likes(X, dog), is(dog, green).",
        "description": "If something likes the dog and the dog is green then it is kind."
    },
    {
        "id": 14072,
        "statement": "likes(squirrel, dog) :- chases(X, squirrel).",
        "description": "If something chases the squirrel then the squirrel likes the dog."
    },
    {
        "id": 14073,
        "statement": "likes(dog, bear) :- eats(squirrel, dog), likes(squirrel, dog).",
        "description": "If the squirrel eats the dog and the squirrel likes the dog then the dog likes the bear."
    },
    {
        "id": 14074,
        "statement": "likes(bear, lion) :- is(bear, red), is(bear, rough).",
        "description": "If the bear is red and the bear is rough then the bear likes the lion."
    },
    {
        "id": 14075,
        "statement": "eats(bear, dog) :- likes(X, bear), eats(X, bear).",
        "description": "If something likes the bear and it eats the bear then the bear eats the dog."
    },
    {
        "id": 14076,
        "statement": "sees(X, bear) :- needs(X, dog).",
        "description": "If something needs the dog then it sees the bear."
    },
    {
        "id": 14077,
        "statement": "sees(X, cat) :- sees(X, bear).",
        "description": "If something sees the bear then it sees the cat."
    },
    {
        "id": 14078,
        "statement": "eats(bear, cat) :- not is(bear, rough).",
        "description": "If the bear is not rough then the bear eats the cat."
    },
    {
        "id": 14079,
        "statement": "needs(X, bear) :- is(X, young).",
        "description": "If something is young then it needs the bear."
    },
    {
        "id": 14080,
        "statement": "needs(X, cat) :- needs(X, dog), is(X, round).",
        "description": "If something needs the dog and it is round then it needs the cat."
    },
    {
        "id": 14081,
        "statement": "needs(cat, dog) :- eats(X, cat), needs(X, mouse).",
        "description": "If something eats the cat and it needs the mouse then the cat needs the dog."
    },
    {
        "id": 14082,
        "statement": "needs(dog, mouse) :- is(dog, round).",
        "description": "If the dog is round then the dog needs the mouse."
    },
    {
        "id": 14083,
        "statement": "needs(bear, mouse) :- needs(X, bear), sees(X, cat).",
        "description": "If something needs the bear and it sees the cat then the bear needs the mouse."
    },
    {
        "id": 14084,
        "statement": "is(cow, cold) :- is(dog, nice), eats(dog, cow).",
        "description": "If the dog is nice and the dog eats the cow then the cow is cold."
    },
    {
        "id": 14085,
        "statement": "sees(mouse, squirrel) :- eats(X, dog), eats(X, mouse).",
        "description": "If something eats the dog and it eats the mouse then the mouse sees the squirrel."
    },
    {
        "id": 14086,
        "statement": "eats(squirrel, mouse) :- likes(X, squirrel), is(X, young).",
        "description": "If something likes the squirrel and it is young then the squirrel eats the mouse."
    },
    {
        "id": 14087,
        "statement": "sees(tiger, cat) :- likes(X, tiger).",
        "description": "If someone likes the tiger then the tiger sees the cat."
    },
    {
        "id": 14088,
        "statement": "sees(X, squirrel) :- chases(X, rabbit).",
        "description": "If someone chases the rabbit then they see the squirrel."
    },
    {
        "id": 14089,
        "statement": "chases(cat, rabbit) :- sees(tiger, cat).",
        "description": "If the tiger sees the cat then the cat chases the rabbit."
    },
    {
        "id": 14090,
        "statement": "is(rabbit, big) :- sees(X, rabbit).",
        "description": "If someone sees the rabbit then the rabbit is big."
    },
    {
        "id": 14091,
        "statement": "sees(tiger, rabbit) :- chases(X, tiger).",
        "description": "If someone chases the tiger then the tiger sees the rabbit."
    },
    {
        "id": 14092,
        "statement": "chases(cat, rabbit) :- is(X, big), likes(X, cat).",
        "description": "If someone is big and they like the cat then the cat chases the rabbit."
    },
    {
        "id": 14093,
        "statement": "likes(rabbit, tiger) :- chases(X, rabbit).",
        "description": "If someone chases the rabbit then the rabbit likes the tiger."
    },
    {
        "id": 14094,
        "statement": "is(X, round) :- is(X, smart), is(X, young).",
        "description": "Smart, young things are round."
    },
    {
        "id": 14095,
        "statement": "is(X, round) :- is(X, young), is(X, blue).",
        "description": "All young, blue things are round."
    },
    {
        "id": 14096,
        "statement": "is(X, young) :- is(X, red), is(X, green).",
        "description": "If something is red and green then it is young."
    },
    {
        "id": 14097,
        "statement": "is(bob, blue) :- is(bob, round), is(bob, smart).",
        "description": "If Bob is round and Bob is smart then Bob is blue."
    },
    {
        "id": 14098,
        "statement": "is(dave, round) :- not is(dave, young).",
        "description": "If Dave is not young then Dave is round."
    },
    {
        "id": 14099,
        "statement": "is(X, big) :- is(X, green), is(X, kind).",
        "description": "All green, kind things are big."
    },
    {
        "id": 14100,
        "statement": "is(X, kind) :- is(X, nice), is(X, round).",
        "description": "Nice, round things are kind."
    },
    {
        "id": 14101,
        "statement": "is(X, white) :- is(X, round), is(X, smart).",
        "description": "All round, smart things are white."
    },
    {
        "id": 14102,
        "statement": "is(X, nice) :- is(X, green), not sees(X, rabbit).",
        "description": "If something is green and it does not see the rabbit then it is nice."
    },
    {
        "id": 14103,
        "statement": "sees(mouse, cow) :- sees(X, mouse), not eats(X, rabbit).",
        "description": "If something sees the mouse and it does not eat the rabbit then the mouse sees the cow."
    },
    {
        "id": 14104,
        "statement": "is(cow, kind) :- sees(X, cow).",
        "description": "If something sees the cow then the cow is kind."
    },
    {
        "id": 14105,
        "statement": "eats(mouse, bald_eagle) :- not chases(cow, mouse).",
        "description": "If the cow does not chase the mouse then the mouse eats the bald eagle."
    },
    {
        "id": 14106,
        "statement": "is(bald_eagle, green) :- sees(X, cow), eats(X, bald_eagle).",
        "description": "If something sees the cow and it eats the bald eagle then the bald eagle is green."
    },
    {
        "id": 14107,
        "statement": "sees(bald_eagle, cow) :- eats(bald_eagle, cow).",
        "description": "If the bald eagle eats the cow then the bald eagle sees the cow."
    },
    {
        "id": 14108,
        "statement": "is(X, green) :- chases(X, rabbit).",
        "description": "If something chases the rabbit then it is green."
    },
    {
        "id": 14109,
        "statement": "sees(mouse, rabbit) :- eats(X, mouse), is(mouse, nice).",
        "description": "If someone eats the mouse and the mouse is nice then the mouse sees the rabbit."
    },
    {
        "id": 14110,
        "statement": "eats(X, lion) :- sees(X, rabbit).",
        "description": "If someone sees the rabbit then they eat the lion."
    },
    {
        "id": 14111,
        "statement": "likes(squirrel, rabbit) :- is(squirrel, nice), is(squirrel, big).",
        "description": "If the squirrel is nice and the squirrel is big then the squirrel likes the rabbit."
    },
    {
        "id": 14112,
        "statement": "is(lion, green) :- eats(X, lion).",
        "description": "If someone eats the lion then the lion is green."
    },
    {
        "id": 14113,
        "statement": "likes(mouse, squirrel) :- sees(X, mouse), eats(X, lion).",
        "description": "If someone sees the mouse and they eat the lion then the mouse likes the squirrel."
    },
    {
        "id": 14114,
        "statement": "sees(X, squirrel) :- sees(X, mouse).",
        "description": "If someone sees the mouse then they see the squirrel."
    },
    {
        "id": 14115,
        "statement": "sees(squirrel, mouse) :- likes(X, squirrel), not eats(X, lion).",
        "description": "If someone likes the squirrel and they do not eat the lion then the squirrel sees the mouse."
    },
    {
        "id": 14116,
        "statement": "sees(squirrel, mouse) :- likes(X, squirrel), is(X, nice).",
        "description": "If someone likes the squirrel and they are nice then the squirrel sees the mouse."
    },
    {
        "id": 14117,
        "statement": "likes(bald_eagle, tiger) :- needs(X, cat), likes(cat, bald_eagle).",
        "description": "If something needs the cat and the cat likes the bald eagle then the bald eagle likes the tiger."
    },
    {
        "id": 14118,
        "statement": "is(cat, red) :- chases(X, cat).",
        "description": "If something chases the cat then the cat is red."
    },
    {
        "id": 14119,
        "statement": "chases(X, cat) :- needs(X, bald_eagle).",
        "description": "If something needs the bald eagle then it chases the cat."
    },
    {
        "id": 14120,
        "statement": "chases(X, cat) :- chases(X, dog), is(dog, big).",
        "description": "If something chases the dog and the dog is big then it chases the cat."
    },
    {
        "id": 14121,
        "statement": "chases(X, dog) :- likes(X, cat).",
        "description": "If something likes the cat then it chases the dog."
    },
    {
        "id": 14122,
        "statement": "needs(cat, bald_eagle) :- is(X, green), needs(X, cat).",
        "description": "If something is green and it needs the cat then the cat needs the bald eagle."
    },
    {
        "id": 14123,
        "statement": "likes(X, cat) :- is(X, big), needs(X, dog).",
        "description": "If something is big and it needs the dog then it likes the cat."
    },
    {
        "id": 14124,
        "statement": "is(cat, big) :- chases(X, cat).",
        "description": "If something chases the cat then the cat is big."
    },
    {
        "id": 14125,
        "statement": "is(X, red) :- is(X, furry), is(X, young).",
        "description": "Furry, young people are red."
    },
    {
        "id": 14126,
        "statement": "is(fiona, cold) :- is(fiona, rough), is(fiona, round).",
        "description": "If Fiona is rough and Fiona is round then Fiona is cold."
    },
    {
        "id": 14127,
        "statement": "is(X, furry) :- is(X, young), is(X, red).",
        "description": "Young, red people are furry."
    },
    {
        "id": 14128,
        "statement": "is(X, furry) :- is(X, young), is(X, smart).",
        "description": "Young, smart people are furry."
    },
    {
        "id": 14129,
        "statement": "is(X, rough) :- is(X, young), is(X, red).",
        "description": "If someone is young and red then they are rough."
    },
    {
        "id": 14130,
        "statement": "is(X, cold) :- is(X, rough), is(X, smart).",
        "description": "Rough, smart people are cold."
    },
    {
        "id": 14131,
        "statement": "is(bear, nice) :- visits(bear, bald_eagle).",
        "description": "If the bear visits the bald eagle then the bear is nice."
    },
    {
        "id": 14132,
        "statement": "visits(X, bear) :- is(X, rough).",
        "description": "If something is rough then it visits the bear."
    },
    {
        "id": 14133,
        "statement": "is(bear, blue) :- needs(X, bear), chases(X, rabbit).",
        "description": "If something needs the bear and it chases the rabbit then the bear is blue."
    },
    {
        "id": 14134,
        "statement": "is(X, rough) :- needs(X, squirrel).",
        "description": "If something needs the squirrel then it is rough."
    },
    {
        "id": 14135,
        "statement": "eats(dog, rabbit) :- likes(dog, rabbit).",
        "description": "If the dog likes the rabbit then the dog eats the rabbit."
    },
    {
        "id": 14136,
        "statement": "likes(X, bald_eagle) :- is(X, nice), is(X, cold).",
        "description": "If someone is nice and cold then they like the bald eagle."
    },
    {
        "id": 14137,
        "statement": "is(X, red) :- eats(X, dog), not likes(X, dog).",
        "description": "If someone eats the dog and they do not like the dog then they are red."
    },
    {
        "id": 14138,
        "statement": "chases(dog, rabbit) :- is(X, red), eats(X, dog).",
        "description": "If someone is red and they eat the dog then the dog chases the rabbit."
    },
    {
        "id": 14139,
        "statement": "chases(X, dog) :- likes(X, bald_eagle).",
        "description": "If someone likes the bald eagle then they chase the dog."
    },
    {
        "id": 14140,
        "statement": "is(bob, blue) :- is(bob, big), is(bob, rough).",
        "description": "If Bob is big and Bob is rough then Bob is blue."
    },
    {
        "id": 14141,
        "statement": "is(X, rough) :- is(X, big), is(X, nice).",
        "description": "If something is big and nice then it is rough."
    },
    {
        "id": 14142,
        "statement": "is(bob, white) :- is(bob, blue), is(bob, quiet).",
        "description": "If Bob is blue and Bob is quiet then Bob is white."
    },
    {
        "id": 14143,
        "statement": "is(gary, rough) :- is(gary, nice), is(gary, quiet).",
        "description": "If Gary is nice and Gary is quiet then Gary is rough."
    },
    {
        "id": 14144,
        "statement": "is(dave, nice) :- not is(dave, kind).",
        "description": "If Dave is not kind then Dave is nice."
    },
    {
        "id": 14145,
        "statement": "is(X, nice) :- is(X, green), is(X, blue).",
        "description": "If someone is green and blue then they are nice."
    },
    {
        "id": 14146,
        "statement": "is(X, cold) :- is(X, round), is(X, green).",
        "description": "If someone is round and green then they are cold."
    },
    {
        "id": 14147,
        "statement": "is(X, round) :- is(X, nice), is(X, kind).",
        "description": "All nice, kind people are round."
    },
    {
        "id": 14148,
        "statement": "is(dave, cold) :- is(dave, blue).",
        "description": "If Dave is blue then Dave is cold."
    },
    {
        "id": 14149,
        "statement": "is(X, blue) :- is(X, red), is(X, smart).",
        "description": "Red, smart people are blue."
    },
    {
        "id": 14150,
        "statement": "is(X, smart) :- is(X, quiet), is(X, red).",
        "description": "Quiet, red people are smart."
    },
    {
        "id": 14151,
        "statement": "is(gary, nice) :- is(gary, green).",
        "description": "If Gary is green then Gary is nice."
    },
    {
        "id": 14152,
        "statement": "is(X, red) :- is(X, blue), is(X, nice).",
        "description": "If someone is blue and nice then they are red."
    },
    {
        "id": 14153,
        "statement": "is(X, smart) :- is(X, red), is(X, green).",
        "description": "If someone is red and green then they are smart."
    },
    {
        "id": 14154,
        "statement": "is(X, nice) :- is(X, kind), is(X, rough).",
        "description": "All kind, rough things are nice."
    },
    {
        "id": 14155,
        "statement": "is(gary, rough) :- is(gary, nice), not is(gary, big).",
        "description": "If Gary is nice and Gary is not big then Gary is rough."
    },
    {
        "id": 14156,
        "statement": "is(X, rough) :- is(X, kind), is(X, big).",
        "description": "All kind, big things are rough."
    },
    {
        "id": 14157,
        "statement": "is(X, cold) :- is(X, round), not is(X, young).",
        "description": "If something is round and not young then it is cold."
    },
    {
        "id": 14158,
        "statement": "is(X, smart) :- is(X, round), is(X, blue).",
        "description": "All round, blue things are smart."
    },
    {
        "id": 14159,
        "statement": "chases(X, tiger) :- visits(X, lion).",
        "description": "If something visits the lion then it chases the tiger."
    },
    {
        "id": 14160,
        "statement": "is(X, big) :- visits(X, lion).",
        "description": "If something visits the lion then it is big."
    },
    {
        "id": 14161,
        "statement": "visits(bear, lion) :- visits(tiger, bear).",
        "description": "If the tiger visits the bear then the bear visits the lion."
    },
    {
        "id": 14162,
        "statement": "visits(X, lion) :- is(X, young).",
        "description": "If something is young then it visits the lion."
    },
    {
        "id": 14163,
        "statement": "chases(bear, bald_eagle) :- chases(bald_eagle, bear), visits(bald_eagle, lion).",
        "description": "If the bald eagle chases the bear and the bald eagle visits the lion then the bear chases the bald eagle."
    },
    {
        "id": 14164,
        "statement": "is(X, red) :- is(X, big), not is(X, young).",
        "description": "If something is big and not young then it is red."
    },
    {
        "id": 14165,
        "statement": "visits(bear, bald_eagle) :- not chases(tiger, bear).",
        "description": "If the tiger does not chase the bear then the bear visits the bald eagle."
    },
    {
        "id": 14166,
        "statement": "visits(tiger, bear) :- visits(tiger, lion), is(tiger, big).",
        "description": "If the tiger visits the lion and the tiger is big then the tiger visits the bear."
    },
    {
        "id": 14167,
        "statement": "needs(X, bear) :- visits(X, rabbit), visits(X, bald_eagle).",
        "description": "If something visits the rabbit and it visits the bald eagle then it needs the bear."
    },
    {
        "id": 14168,
        "statement": "sees(X, tiger) :- visits(X, bald_eagle), needs(X, tiger).",
        "description": "If something visits the bald eagle and it needs the tiger then it sees the tiger."
    },
    {
        "id": 14169,
        "statement": "sees(X, tiger) :- is(X, green).",
        "description": "If something is green then it sees the tiger."
    },
    {
        "id": 14170,
        "statement": "visits(rabbit, tiger) :- needs(X, rabbit).",
        "description": "If something needs the rabbit then the rabbit visits the tiger."
    },
    {
        "id": 14171,
        "statement": "visits(bald_eagle, tiger) :- visits(X, rabbit), not sees(rabbit, bald_eagle).",
        "description": "If something visits the rabbit and the rabbit does not see the bald eagle then the bald eagle visits the tiger."
    },
    {
        "id": 14172,
        "statement": "is(X, smart) :- is(X, quiet), is(X, blue).",
        "description": "Quiet, blue people are smart."
    },
    {
        "id": 14173,
        "statement": "is(X, blue) :- is(X, smart), is(X, cold).",
        "description": "If someone is smart and cold then they are blue."
    },
    {
        "id": 14174,
        "statement": "is(X, white) :- is(X, furry), is(X, green).",
        "description": "If someone is furry and green then they are white."
    },
    {
        "id": 14175,
        "statement": "is(fiona, smart) :- is(fiona, blue).",
        "description": "If Fiona is blue then Fiona is smart."
    },
    {
        "id": 14176,
        "statement": "is(X, green) :- is(X, nice), is(X, red).",
        "description": "If something is nice and red then it is green."
    },
    {
        "id": 14177,
        "statement": "is(X, quiet) :- is(X, nice), is(X, furry).",
        "description": "All nice, furry things are quiet."
    },
    {
        "id": 14178,
        "statement": "is(erin, blue) :- is(erin, green), not is(erin, kind).",
        "description": "If Erin is green and Erin is not kind then Erin is blue."
    },
    {
        "id": 14179,
        "statement": "is(X, young) :- is(X, round), is(X, furry).",
        "description": "All round, furry things are young."
    },
    {
        "id": 14180,
        "statement": "is(bob, white) :- is(bob, young), is(bob, cold).",
        "description": "If Bob is young and Bob is cold then Bob is white."
    },
    {
        "id": 14181,
        "statement": "is(X, young) :- is(X, quiet), is(X, green).",
        "description": "Quiet, green people are young."
    },
    {
        "id": 14182,
        "statement": "is(X, nice) :- is(X, young), not is(X, green).",
        "description": "If someone is young and not green then they are nice."
    },
    {
        "id": 14183,
        "statement": "is(X, furry) :- is(X, blue), is(X, quiet).",
        "description": "Blue, quiet people are furry."
    },
    {
        "id": 14184,
        "statement": "is(dave, blue) :- is(dave, quiet), not is(dave, nice).",
        "description": "If Dave is quiet and Dave is not nice then Dave is blue."
    },
    {
        "id": 14185,
        "statement": "visits(X, rabbit) :- visits(X, lion), is(X, blue).",
        "description": "If someone visits the lion and they are blue then they visit the rabbit."
    },
    {
        "id": 14186,
        "statement": "chases(lion, rabbit) :- visits(X, lion).",
        "description": "If someone visits the lion then the lion chases the rabbit."
    },
    {
        "id": 14187,
        "statement": "is(X, young) :- is(X, red), sees(X, lion).",
        "description": "If someone is red and they see the lion then they are young."
    },
    {
        "id": 14188,
        "statement": "visits(bald_eagle, squirrel) :- chases(X, bald_eagle), chases(X, rabbit).",
        "description": "If someone chases the bald eagle and they chase the rabbit then the bald eagle visits the squirrel."
    },
    {
        "id": 14189,
        "statement": "is(X, young) :- visits(X, squirrel).",
        "description": "If someone visits the squirrel then they are young."
    },
    {
        "id": 14190,
        "statement": "visits(rabbit, bald_eagle) :- is(rabbit, round).",
        "description": "If the rabbit is round then the rabbit visits the bald eagle."
    },
    {
        "id": 14191,
        "statement": "sees(X, rabbit) :- visits(X, squirrel).",
        "description": "If someone visits the squirrel then they see the rabbit."
    },
    {
        "id": 14192,
        "statement": "visits(X, rabbit) :- visits(X, bald_eagle), chases(bald_eagle, squirrel).",
        "description": "If someone visits the bald eagle and the bald eagle chases the squirrel then they visit the rabbit."
    },
    {
        "id": 14193,
        "statement": "is(fiona, blue) :- is(fiona, round).",
        "description": "If Fiona is round then Fiona is blue."
    },
    {
        "id": 14194,
        "statement": "is(X, nice) :- is(X, green), is(X, furry).",
        "description": "Green, furry things are nice."
    },
    {
        "id": 14195,
        "statement": "is(gary, furry) :- is(gary, nice).",
        "description": "If Gary is nice then Gary is furry."
    },
    {
        "id": 14196,
        "statement": "is(X, blue) :- is(X, green), is(X, furry).",
        "description": "If something is green and furry then it is blue."
    },
    {
        "id": 14197,
        "statement": "is(dave, green) :- is(dave, furry).",
        "description": "If Dave is furry then Dave is green."
    },
    {
        "id": 14198,
        "statement": "is(X, white) :- is(X, kind), is(X, red).",
        "description": "Kind, red people are white."
    },
    {
        "id": 14199,
        "statement": "is(X, green) :- is(X, quiet), is(X, nice).",
        "description": "If something is quiet and nice then it is green."
    },
    {
        "id": 14200,
        "statement": "is(X, quiet) :- is(X, white), is(X, nice).",
        "description": "All white, nice things are quiet."
    },
    {
        "id": 14201,
        "statement": "is(dave, kind) :- is(dave, quiet).",
        "description": "If Dave is quiet then Dave is kind."
    },
    {
        "id": 14202,
        "statement": "is(X, kind) :- is(X, furry), is(X, quiet).",
        "description": "All furry, quiet things are kind."
    },
    {
        "id": 14203,
        "statement": "is(X, blue) :- is(X, young), is(X, rough).",
        "description": "If something is young and rough then it is blue."
    },
    {
        "id": 14204,
        "statement": "is(gary, blue) :- is(gary, rough), is(gary, quiet).",
        "description": "If Gary is rough and Gary is quiet then Gary is blue."
    },
    {
        "id": 14205,
        "statement": "is(X, quiet) :- is(X, young), is(X, blue).",
        "description": "If something is young and blue then it is quiet."
    },
    {
        "id": 14206,
        "statement": "is(X, furry) :- is(X, rough).",
        "description": "If something is rough then it is furry."
    },
    {
        "id": 14207,
        "statement": "is(bob, quiet) :- is(bob, kind).",
        "description": "If Bob is kind then Bob is quiet."
    },
    {
        "id": 14208,
        "statement": "is(X, kind) :- is(X, rough), chases(X, squirrel).",
        "description": "If something is rough and it chases the squirrel then it is kind."
    },
    {
        "id": 14209,
        "statement": "chases(X, bald_eagle) :- is(X, nice).",
        "description": "If something is nice then it chases the bald eagle."
    },
    {
        "id": 14210,
        "statement": "chases(X, squirrel) :- chases(X, bald_eagle).",
        "description": "If something chases the bald eagle then it chases the squirrel."
    },
    {
        "id": 14211,
        "statement": "is(X, nice) :- is(X, white), is(X, smart).",
        "description": "If something is white and smart then it is nice."
    },
    {
        "id": 14212,
        "statement": "is(X, white) :- is(X, young), is(X, furry).",
        "description": "Young, furry things are white."
    },
    {
        "id": 14213,
        "statement": "is(X, smart) :- is(X, cold), is(X, quiet).",
        "description": "If something is cold and quiet then it is smart."
    },
    {
        "id": 14214,
        "statement": "is(X, round) :- is(X, smart), is(X, cold).",
        "description": "All smart, cold things are round."
    },
    {
        "id": 14215,
        "statement": "is(bear, big) :- eats(X, bear), is(X, rough).",
        "description": "If something eats the bear and it is rough then the bear is big."
    },
    {
        "id": 14216,
        "statement": "is(bear, big) :- is(X, big), sees(X, bear).",
        "description": "If something is big and it sees the bear then the bear is big."
    },
    {
        "id": 14217,
        "statement": "eats(X, cat) :- visits(X, cat), eats(cat, dog).",
        "description": "If something visits the cat and the cat eats the dog then it eats the cat."
    },
    {
        "id": 14218,
        "statement": "sees(X, bear) :- eats(X, cat).",
        "description": "If something eats the cat then it sees the bear."
    },
    {
        "id": 14219,
        "statement": "sees(cow, dog) :- is(X, nice), visits(X, cow).",
        "description": "If something is nice and it visits the cow then the cow sees the dog."
    },
    {
        "id": 14220,
        "statement": "visits(cow, cat) :- sees(X, cow), eats(X, cow).",
        "description": "If something sees the cow and it eats the cow then the cow visits the cat."
    },
    {
        "id": 14221,
        "statement": "eats(X, bear) :- eats(X, cow).",
        "description": "If something eats the cow then it eats the bear."
    },
    {
        "id": 14222,
        "statement": "visits(X, cat) :- is(X, big), is(X, rough).",
        "description": "If something is big and rough then it visits the cat."
    },
    {
        "id": 14223,
        "statement": "is(bald_eagle, green) :- sees(X, bald_eagle), sees(bald_eagle, mouse).",
        "description": "If someone sees the bald eagle and the bald eagle sees the mouse then the bald eagle is green."
    },
    {
        "id": 14224,
        "statement": "likes(bear, dog) :- needs(X, bear), likes(X, mouse).",
        "description": "If someone needs the bear and they like the mouse then the bear likes the dog."
    },
    {
        "id": 14225,
        "statement": "likes(dog, mouse) :- needs(X, bald_eagle), likes(bald_eagle, dog).",
        "description": "If someone needs the bald eagle and the bald eagle likes the dog then the dog likes the mouse."
    },
    {
        "id": 14226,
        "statement": "likes(X, dog) :- is(X, kind).",
        "description": "If someone is kind then they like the dog."
    },
    {
        "id": 14227,
        "statement": "likes(bald_eagle, dog) :- needs(bear, bald_eagle).",
        "description": "If the bear needs the bald eagle then the bald eagle likes the dog."
    },
    {
        "id": 14228,
        "statement": "is(bald_eagle, round) :- likes(X, bald_eagle), needs(X, bald_eagle).",
        "description": "If someone likes the bald eagle and they need the bald eagle then the bald eagle is round."
    },
    {
        "id": 14229,
        "statement": "is(bald_eagle, kind) :- sees(X, bald_eagle), needs(X, bald_eagle).",
        "description": "If someone sees the bald eagle and they need the bald eagle then the bald eagle is kind."
    },
    {
        "id": 14230,
        "statement": "is(X, round) :- sees(X, mouse), is(mouse, blue).",
        "description": "If someone sees the mouse and the mouse is blue then they are round."
    },
    {
        "id": 14231,
        "statement": "is(X, nice) :- likes(X, dog), chases(X, tiger).",
        "description": "If something likes the dog and it chases the tiger then it is nice."
    },
    {
        "id": 14232,
        "statement": "chases(cow, dog) :- likes(X, cow).",
        "description": "If something likes the cow then the cow chases the dog."
    },
    {
        "id": 14233,
        "statement": "likes(X, dog) :- is(X, young).",
        "description": "If something is young then it likes the dog."
    },
    {
        "id": 14234,
        "statement": "eats(X, tiger) :- eats(X, dog).",
        "description": "If something eats the dog then it eats the tiger."
    },
    {
        "id": 14235,
        "statement": "eats(X, dog) :- chases(X, dog), eats(dog, tiger).",
        "description": "If something chases the dog and the dog eats the tiger then it eats the dog."
    },
    {
        "id": 14236,
        "statement": "eats(X, dog) :- is(X, nice).",
        "description": "If something is nice then it eats the dog."
    },
    {
        "id": 14237,
        "statement": "eats(tiger, cow) :- eats(X, tiger), eats(tiger, dog).",
        "description": "If something eats the tiger and the tiger eats the dog then the tiger eats the cow."
    },
    {
        "id": 14238,
        "statement": "likes(X, bear) :- is(X, round).",
        "description": "If something is round then it likes the bear."
    },
    {
        "id": 14239,
        "statement": "needs(mouse, bald_eagle) :- needs(mouse, cow).",
        "description": "If the mouse needs the cow then the mouse needs the bald eagle."
    },
    {
        "id": 14240,
        "statement": "likes(bald_eagle, bear) :- is(bear, young), needs(bear, bald_eagle).",
        "description": "If the bear is young and the bear needs the bald eagle then the bald eagle likes the bear."
    },
    {
        "id": 14241,
        "statement": "is(bear, green) :- likes(bald_eagle, bear).",
        "description": "If the bald eagle likes the bear then the bear is green."
    },
    {
        "id": 14242,
        "statement": "likes(X, bald_eagle) :- sees(X, bald_eagle).",
        "description": "If something sees the bald eagle then it likes the bald eagle."
    },
    {
        "id": 14243,
        "statement": "is(X, round) :- is(X, green), is(X, kind).",
        "description": "Green, kind things are round."
    },
    {
        "id": 14244,
        "statement": "chases(mouse, squirrel) :- needs(X, mouse).",
        "description": "If someone needs the mouse then the mouse chases the squirrel."
    },
    {
        "id": 14245,
        "statement": "is(cow, cold) :- is(X, kind), not chases(X, cow).",
        "description": "If someone is kind and they do not chase the cow then the cow is cold."
    },
    {
        "id": 14246,
        "statement": "is(mouse, cold) :- likes(X, mouse).",
        "description": "If someone likes the mouse then the mouse is cold."
    },
    {
        "id": 14247,
        "statement": "is(X, green) :- is(X, kind), is(X, furry).",
        "description": "Kind, furry things are green."
    },
    {
        "id": 14248,
        "statement": "is(X, round) :- is(X, furry), is(X, big).",
        "description": "All furry, big things are round."
    },
    {
        "id": 14249,
        "statement": "is(X, big) :- is(X, green), is(X, round).",
        "description": "If something is green and round then it is big."
    },
    {
        "id": 14250,
        "statement": "is(gary, round) :- is(gary, furry).",
        "description": "If Gary is furry then Gary is round."
    },
    {
        "id": 14251,
        "statement": "is(charlie, nice) :- is(charlie, smart), is(charlie, young).",
        "description": "If Charlie is smart and Charlie is young then Charlie is nice."
    },
    {
        "id": 14252,
        "statement": "is(X, white) :- is(X, cold), is(X, young).",
        "description": "If someone is cold and young then they are white."
    },
    {
        "id": 14253,
        "statement": "is(X, white) :- is(X, cold), is(X, nice).",
        "description": "All cold, nice people are white."
    },
    {
        "id": 14254,
        "statement": "is(X, green) :- eats(X, cow), visits(cow, lion).",
        "description": "If someone eats the cow and the cow visits the lion then they are green."
    },
    {
        "id": 14255,
        "statement": "eats(dog, cat) :- visits(X, dog).",
        "description": "If someone visits the dog then the dog eats the cat."
    },
    {
        "id": 14256,
        "statement": "eats(cat, dog) :- is(X, green), likes(X, cat).",
        "description": "If someone is green and they like the cat then the cat eats the dog."
    },
    {
        "id": 14257,
        "statement": "visits(cow, dog) :- visits(cow, cat).",
        "description": "If the cow visits the cat then the cow visits the dog."
    },
    {
        "id": 14258,
        "statement": "is(cat, green) :- is(X, rough), likes(X, cat).",
        "description": "If someone is rough and they like the cat then the cat is green."
    },
    {
        "id": 14259,
        "statement": "is(X, round) :- visits(X, cat), likes(X, cat).",
        "description": "If someone visits the cat and they like the cat then they are round."
    },
    {
        "id": 14260,
        "statement": "eats(lion, cow) :- is(X, green), visits(X, lion).",
        "description": "If someone is green and they visit the lion then the lion eats the cow."
    },
    {
        "id": 14261,
        "statement": "is(X, cold) :- is(X, white), is(X, nice).",
        "description": "White, nice things are cold."
    },
    {
        "id": 14262,
        "statement": "is(X, cold) :- is(X, green), is(X, quiet).",
        "description": "Green, quiet things are cold."
    },
    {
        "id": 14263,
        "statement": "is(X, nice) :- is(X, cold), is(X, furry).",
        "description": "All cold, furry things are nice."
    },
    {
        "id": 14264,
        "statement": "is(X, green) :- is(X, nice), is(X, rough).",
        "description": "All nice, rough things are green."
    },
    {
        "id": 14265,
        "statement": "chases(X, cat) :- is(X, green), likes(X, lion).",
        "description": "If someone is green and they like the lion then they chase the cat."
    },
    {
        "id": 14266,
        "statement": "is(lion, red) :- likes(X, lion).",
        "description": "If someone likes the lion then the lion is red."
    },
    {
        "id": 14267,
        "statement": "chases(X, cow) :- likes(X, lion), needs(X, rabbit).",
        "description": "If someone likes the lion and they need the rabbit then they chase the cow."
    },
    {
        "id": 14268,
        "statement": "is(lion, blue) :- needs(X, rabbit), likes(rabbit, lion).",
        "description": "If someone needs the rabbit and the rabbit likes the lion then the lion is blue."
    },
    {
        "id": 14269,
        "statement": "likes(X, rabbit) :- needs(X, cat).",
        "description": "If someone needs the cat then they like the rabbit."
    },
    {
        "id": 14270,
        "statement": "likes(X, lion) :- is(X, blue), is(X, green).",
        "description": "If someone is blue and green then they like the lion."
    },
    {
        "id": 14271,
        "statement": "is(harry, big) :- not is(harry, young).",
        "description": "If Harry is not young then Harry is big."
    },
    {
        "id": 14272,
        "statement": "is(X, green) :- is(X, big), is(X, kind).",
        "description": "If someone is big and kind then they are green."
    },
    {
        "id": 14273,
        "statement": "is(X, quiet) :- is(X, red), is(X, smart).",
        "description": "Red, smart people are quiet."
    },
    {
        "id": 14274,
        "statement": "is(X, green) :- is(X, white), is(X, smart).",
        "description": "If something is white and smart then it is green."
    },
    {
        "id": 14275,
        "statement": "is(X, cold) :- is(X, big), is(X, kind).",
        "description": "Big, kind things are cold."
    },
    {
        "id": 14276,
        "statement": "is(harry, white) :- is(harry, cold), is(harry, green).",
        "description": "If Harry is cold and Harry is green then Harry is white."
    },
    {
        "id": 14277,
        "statement": "is(cow, rough) :- not eats(bald_eagle, cow).",
        "description": "If the bald eagle does not eat the cow then the cow is rough."
    },
    {
        "id": 14278,
        "statement": "eats(lion, squirrel) :- is(lion, big), eats(lion, bald_eagle).",
        "description": "If the lion is big and the lion eats the bald eagle then the lion eats the squirrel."
    },
    {
        "id": 14279,
        "statement": "likes(X, lion) :- is(X, nice), is(X, green).",
        "description": "If someone is nice and green then they like the lion."
    },
    {
        "id": 14280,
        "statement": "needs(X, lion) :- is(X, rough).",
        "description": "If someone is rough then they need the lion."
    },
    {
        "id": 14281,
        "statement": "eats(X, bald_eagle) :- likes(X, lion).",
        "description": "If someone likes the lion then they eat the bald eagle."
    },
    {
        "id": 14282,
        "statement": "likes(X, squirrel) :- likes(X, bald_eagle), not needs(X, bald_eagle).",
        "description": "If someone likes the bald eagle and they do not need the bald eagle then they like the squirrel."
    },
    {
        "id": 14283,
        "statement": "needs(squirrel, lion) :- is(X, rough), likes(X, squirrel).",
        "description": "If someone is rough and they like the squirrel then the squirrel needs the lion."
    },
    {
        "id": 14284,
        "statement": "is(X, nice) :- is(X, big), is(X, green).",
        "description": "If someone is big and green then they are nice."
    },
    {
        "id": 14285,
        "statement": "is(dave, cold) :- is(dave, white).",
        "description": "If Dave is white then Dave is cold."
    },
    {
        "id": 14286,
        "statement": "is(X, cold) :- is(X, furry), is(X, round).",
        "description": "If something is furry and round then it is cold."
    },
    {
        "id": 14287,
        "statement": "is(X, furry) :- is(X, quiet), is(X, white).",
        "description": "All quiet, white things are furry."
    },
    {
        "id": 14288,
        "statement": "is(rabbit, big) :- needs(X, squirrel), likes(X, rabbit).",
        "description": "If someone needs the squirrel and they like the rabbit then the rabbit is big."
    },
    {
        "id": 14289,
        "statement": "needs(X, bear) :- eats(X, squirrel).",
        "description": "If someone eats the squirrel then they need the bear."
    },
    {
        "id": 14290,
        "statement": "needs(mouse, bear) :- needs(X, bear), eats(X, mouse).",
        "description": "If someone needs the bear and they eat the mouse then the mouse needs the bear."
    },
    {
        "id": 14291,
        "statement": "likes(X, rabbit) :- is(X, red), is(X, rough).",
        "description": "If someone is red and rough then they like the rabbit."
    },
    {
        "id": 14292,
        "statement": "likes(X, squirrel) :- eats(X, bear), needs(bear, mouse).",
        "description": "If someone eats the bear and the bear needs the mouse then they like the squirrel."
    },
    {
        "id": 14293,
        "statement": "eats(mouse, bear) :- likes(X, mouse), likes(mouse, bear).",
        "description": "If someone likes the mouse and the mouse likes the bear then the mouse eats the bear."
    },
    {
        "id": 14294,
        "statement": "needs(bear, mouse) :- eats(bear, rabbit).",
        "description": "If the bear eats the rabbit then the bear needs the mouse."
    },
    {
        "id": 14295,
        "statement": "sees(X, squirrel) :- is(X, big), likes(X, cow).",
        "description": "If someone is big and they like the cow then they see the squirrel."
    },
    {
        "id": 14296,
        "statement": "is(bald_eagle, red) :- sees(X, bald_eagle).",
        "description": "If someone sees the bald eagle then the bald eagle is red."
    },
    {
        "id": 14297,
        "statement": "sees(X, bald_eagle) :- is(X, red), sees(X, rabbit).",
        "description": "If someone is red and they see the rabbit then they see the bald eagle."
    },
    {
        "id": 14298,
        "statement": "needs(cow, bald_eagle) :- sees(bald_eagle, cow).",
        "description": "If the bald eagle sees the cow then the cow needs the bald eagle."
    },
    {
        "id": 14299,
        "statement": "needs(squirrel, cow) :- needs(X, squirrel), needs(squirrel, rabbit).",
        "description": "If someone needs the squirrel and the squirrel needs the rabbit then the squirrel needs the cow."
    },
    {
        "id": 14300,
        "statement": "is(harry, nice) :- is(harry, blue).",
        "description": "If Harry is blue then Harry is nice."
    },
    {
        "id": 14301,
        "statement": "is(X, red) :- is(X, rough), is(X, blue).",
        "description": "Rough, blue things are red."
    },
    {
        "id": 14302,
        "statement": "is(tiger, nice) :- sees(tiger, squirrel).",
        "description": "If the tiger sees the squirrel then the tiger is nice."
    },
    {
        "id": 14303,
        "statement": "sees(tiger, squirrel) :- visits(X, tiger).",
        "description": "If someone visits the tiger then the tiger sees the squirrel."
    },
    {
        "id": 14304,
        "statement": "is(X, big) :- is(X, nice), not is(X, rough).",
        "description": "If someone is nice and not rough then they are big."
    },
    {
        "id": 14305,
        "statement": "sees(squirrel, tiger) :- sees(X, mouse), sees(X, squirrel).",
        "description": "If someone sees the mouse and they see the squirrel then the squirrel sees the tiger."
    },
    {
        "id": 14306,
        "statement": "sees(X, mouse) :- is(X, big).",
        "description": "If someone is big then they see the mouse."
    },
    {
        "id": 14307,
        "statement": "sees(tiger, rabbit) :- eats(X, tiger), sees(X, tiger).",
        "description": "If someone eats the tiger and they see the tiger then the tiger sees the rabbit."
    },
    {
        "id": 14308,
        "statement": "is(mouse, nice) :- eats(X, rabbit), not eats(rabbit, mouse).",
        "description": "If someone eats the rabbit and the rabbit does not eat the mouse then the mouse is nice."
    },
    {
        "id": 14309,
        "statement": "is(tiger, nice) :- likes(cow, tiger).",
        "description": "If the cow likes the tiger then the tiger is nice."
    },
    {
        "id": 14310,
        "statement": "likes(X, bald_eagle) :- eats(X, dog).",
        "description": "If someone eats the dog then they like the bald eagle."
    },
    {
        "id": 14311,
        "statement": "likes(cow, dog) :- visits(X, cow).",
        "description": "If someone visits the cow then the cow likes the dog."
    },
    {
        "id": 14312,
        "statement": "visits(X, dog) :- is(X, cold).",
        "description": "If someone is cold then they visit the dog."
    },
    {
        "id": 14313,
        "statement": "is(X, red) :- likes(X, dog), eats(dog, tiger).",
        "description": "If someone likes the dog and the dog eats the tiger then they are red."
    },
    {
        "id": 14314,
        "statement": "is(bald_eagle, cold) :- visits(X, bald_eagle), is(X, red).",
        "description": "If someone visits the bald eagle and they are red then the bald eagle is cold."
    },
    {
        "id": 14315,
        "statement": "visits(dog, bald_eagle) :- eats(bald_eagle, dog).",
        "description": "If the bald eagle eats the dog then the dog visits the bald eagle."
    },
    {
        "id": 14316,
        "statement": "is(bald_eagle, red) :- is(X, round), chases(X, bald_eagle).",
        "description": "If someone is round and they chase the bald eagle then the bald eagle is red."
    },
    {
        "id": 14317,
        "statement": "needs(X, bald_eagle) :- sees(X, lion).",
        "description": "If someone sees the lion then they need the bald eagle."
    },
    {
        "id": 14318,
        "statement": "sees(lion, bear) :- is(lion, big), sees(lion, bald_eagle).",
        "description": "If the lion is big and the lion sees the bald eagle then the lion sees the bear."
    },
    {
        "id": 14319,
        "statement": "needs(lion, mouse) :- chases(bald_eagle, lion).",
        "description": "If the bald eagle chases the lion then the lion needs the mouse."
    },
    {
        "id": 14320,
        "statement": "is(X, rough) :- chases(X, bear).",
        "description": "If someone chases the bear then they are rough."
    },
    {
        "id": 14321,
        "statement": "needs(X, lion) :- sees(X, bear).",
        "description": "If someone sees the bear then they need the lion."
    },
    {
        "id": 14322,
        "statement": "chases(X, bear) :- sees(X, lion).",
        "description": "If someone sees the lion then they chase the bear."
    },
    {
        "id": 14323,
        "statement": "sees(bald_eagle, lion) :- needs(X, bald_eagle).",
        "description": "If someone needs the bald eagle then the bald eagle sees the lion."
    },
    {
        "id": 14324,
        "statement": "is(X, young) :- is(X, round), is(X, blue).",
        "description": "If something is round and blue then it is young."
    },
    {
        "id": 14325,
        "statement": "is(bob, quiet) :- is(bob, blue).",
        "description": "If Bob is blue then Bob is quiet."
    },
    {
        "id": 14326,
        "statement": "eats(X, squirrel) :- likes(X, bear).",
        "description": "If something likes the bear then it eats the squirrel."
    },
    {
        "id": 14327,
        "statement": "likes(X, lion) :- likes(X, bear).",
        "description": "If something likes the bear then it likes the lion."
    },
    {
        "id": 14328,
        "statement": "likes(X, bear) :- needs(X, squirrel).",
        "description": "If something needs the squirrel then it likes the bear."
    },
    {
        "id": 14329,
        "statement": "needs(lion, squirrel) :- likes(X, lion).",
        "description": "If something likes the lion then the lion needs the squirrel."
    },
    {
        "id": 14330,
        "statement": "needs(lion, squirrel) :- is(X, green), eats(X, lion).",
        "description": "If something is green and it eats the lion then the lion needs the squirrel."
    },
    {
        "id": 14331,
        "statement": "needs(bear, lion) :- needs(X, bear).",
        "description": "If something needs the bear then the bear needs the lion."
    },
    {
        "id": 14332,
        "statement": "is(X, round) :- needs(X, bear), not needs(X, squirrel).",
        "description": "If something needs the bear and it does not need the squirrel then it is round."
    },
    {
        "id": 14333,
        "statement": "is(harry, quiet) :- is(harry, smart), is(harry, red).",
        "description": "If Harry is smart and Harry is red then Harry is quiet."
    },
    {
        "id": 14334,
        "statement": "is(X, rough) :- is(X, cold), is(X, blue).",
        "description": "All cold, blue people are rough."
    },
    {
        "id": 14335,
        "statement": "is(X, green) :- is(X, quiet), is(X, big).",
        "description": "All quiet, big things are green."
    },
    {
        "id": 14336,
        "statement": "is(anne, big) :- is(anne, blue), is(anne, smart).",
        "description": "If Anne is blue and Anne is smart then Anne is big."
    },
    {
        "id": 14337,
        "statement": "is(X, quiet) :- is(X, big), is(X, nice).",
        "description": "If something is big and nice then it is quiet."
    },
    {
        "id": 14338,
        "statement": "eats(squirrel, mouse) :- visits(mouse, squirrel), visits(mouse, rabbit).",
        "description": "If the mouse visits the squirrel and the mouse visits the rabbit then the squirrel eats the mouse."
    },
    {
        "id": 14339,
        "statement": "eats(X, tiger) :- chases(X, mouse), eats(X, rabbit).",
        "description": "If someone chases the mouse and they eat the rabbit then they eat the tiger."
    },
    {
        "id": 14340,
        "statement": "visits(tiger, mouse) :- chases(X, mouse), visits(mouse, tiger).",
        "description": "If someone chases the mouse and the mouse visits the tiger then the tiger visits the mouse."
    },
    {
        "id": 14341,
        "statement": "visits(mouse, tiger) :- is(mouse, red).",
        "description": "If the mouse is red then the mouse visits the tiger."
    },
    {
        "id": 14342,
        "statement": "visits(rabbit, mouse) :- is(squirrel, big), chases(squirrel, rabbit).",
        "description": "If the squirrel is big and the squirrel chases the rabbit then the rabbit visits the mouse."
    },
    {
        "id": 14343,
        "statement": "is(mouse, rough) :- visits(X, mouse).",
        "description": "If someone visits the mouse then the mouse is rough."
    },
    {
        "id": 14344,
        "statement": "eats(rabbit, tiger) :- visits(mouse, rabbit), visits(mouse, tiger).",
        "description": "If the mouse visits the rabbit and the mouse visits the tiger then the rabbit eats the tiger."
    },
    {
        "id": 14345,
        "statement": "sees(lion, tiger) :- likes(X, lion), likes(X, tiger).",
        "description": "If someone likes the lion and they like the tiger then the lion sees the tiger."
    },
    {
        "id": 14346,
        "statement": "is(cat, nice) :- is(X, kind), sees(X, cat).",
        "description": "If someone is kind and they see the cat then the cat is nice."
    },
    {
        "id": 14347,
        "statement": "visits(X, cat) :- is(X, round), is(X, rough).",
        "description": "If someone is round and rough then they visit the cat."
    },
    {
        "id": 14348,
        "statement": "is(lion, rough) :- visits(X, lion), likes(X, tiger).",
        "description": "If someone visits the lion and they like the tiger then the lion is rough."
    },
    {
        "id": 14349,
        "statement": "sees(X, tiger) :- visits(X, cat).",
        "description": "If someone visits the cat then they see the tiger."
    },
    {
        "id": 14350,
        "statement": "is(X, kind) :- visits(X, tiger), likes(tiger, lion).",
        "description": "If someone visits the tiger and the tiger likes the lion then they are kind."
    },
    {
        "id": 14351,
        "statement": "likes(X, tiger) :- is(X, nice).",
        "description": "If someone is nice then they like the tiger."
    },
    {
        "id": 14352,
        "statement": "visits(lion, tiger) :- is(X, nice), sees(X, lion).",
        "description": "If someone is nice and they see the lion then the lion visits the tiger."
    },
    {
        "id": 14353,
        "statement": "is(X, quiet) :- is(X, smart), is(X, cold).",
        "description": "If something is smart and cold then it is quiet."
    },
    {
        "id": 14354,
        "statement": "is(X, furry) :- is(X, quiet), is(X, nice).",
        "description": "If something is quiet and nice then it is furry."
    },
    {
        "id": 14355,
        "statement": "is(erin, big) :- is(erin, young).",
        "description": "If Erin is young then Erin is big."
    },
    {
        "id": 14356,
        "statement": "is(X, blue) :- is(X, green), is(X, red).",
        "description": "Green, red things are blue."
    },
    {
        "id": 14357,
        "statement": "is(X, blue) :- is(X, big), is(X, white).",
        "description": "If something is big and white then it is blue."
    },
    {
        "id": 14358,
        "statement": "is(X, quiet) :- is(X, nice), is(X, rough).",
        "description": "Nice, rough people are quiet."
    },
    {
        "id": 14359,
        "statement": "is(X, quiet) :- is(X, green), is(X, big).",
        "description": "All green, big people are quiet."
    },
    {
        "id": 14360,
        "statement": "is(X, big) :- is(X, rough), not is(X, white).",
        "description": "If someone is rough and not white then they are big."
    },
    {
        "id": 14361,
        "statement": "is(X, big) :- is(X, rough), is(X, green).",
        "description": "If someone is rough and green then they are big."
    },
    {
        "id": 14362,
        "statement": "is(X, green) :- is(X, round), is(X, young).",
        "description": "If someone is round and young then they are green."
    },
    {
        "id": 14363,
        "statement": "is(X, kind) :- is(X, round), is(X, nice).",
        "description": "All round, nice people are kind."
    },
    {
        "id": 14364,
        "statement": "is(X, smart) :- is(X, round), is(X, blue).",
        "description": "If something is round and blue then it is smart."
    },
    {
        "id": 14365,
        "statement": "is(X, round) :- is(X, cold), is(X, furry).",
        "description": "Cold, furry things are round."
    },
    {
        "id": 14366,
        "statement": "chases(squirrel, tiger) :- is(squirrel, red), eats(squirrel, bald_eagle).",
        "description": "If the squirrel is red and the squirrel eats the bald eagle then the squirrel chases the tiger."
    },
    {
        "id": 14367,
        "statement": "eats(squirrel, bald_eagle) :- chases(X, squirrel), sees(X, squirrel).",
        "description": "If someone chases the squirrel and they see the squirrel then the squirrel eats the bald eagle."
    },
    {
        "id": 14368,
        "statement": "sees(X, squirrel) :- is(X, rough), chases(X, tiger).",
        "description": "If someone is rough and they chase the tiger then they see the squirrel."
    },
    {
        "id": 14369,
        "statement": "is(bald_eagle, round) :- is(dog, green), chases(dog, bald_eagle).",
        "description": "If the dog is green and the dog chases the bald eagle then the bald eagle is round."
    },
    {
        "id": 14370,
        "statement": "sees(dog, tiger) :- is(X, big), chases(X, dog).",
        "description": "If someone is big and they chase the dog then the dog sees the tiger."
    },
    {
        "id": 14371,
        "statement": "is(X, kind) :- is(X, rough), is(X, round).",
        "description": "Rough, round things are kind."
    },
    {
        "id": 14372,
        "statement": "is(X, nice) :- is(X, cold), is(X, blue).",
        "description": "Cold, blue things are nice."
    },
    {
        "id": 14373,
        "statement": "is(X, quiet) :- is(X, kind), is(X, round).",
        "description": "Kind, round things are quiet."
    },
    {
        "id": 14374,
        "statement": "is(bald_eagle, kind) :- chases(lion, bald_eagle).",
        "description": "If the lion chases the bald eagle then the bald eagle is kind."
    },
    {
        "id": 14375,
        "statement": "sees(X, bald_eagle) :- is(X, nice).",
        "description": "If someone is nice then they see the bald eagle."
    },
    {
        "id": 14376,
        "statement": "sees(rabbit, lion) :- is(rabbit, blue), chases(rabbit, lion).",
        "description": "If the rabbit is blue and the rabbit chases the lion then the rabbit sees the lion."
    },
    {
        "id": 14377,
        "statement": "sees(lion, dog) :- eats(lion, dog), is(lion, nice).",
        "description": "If the lion eats the dog and the lion is nice then the lion sees the dog."
    },
    {
        "id": 14378,
        "statement": "is(X, nice) :- is(X, blue), chases(X, dog).",
        "description": "If someone is blue and they chase the dog then they are nice."
    },
    {
        "id": 14379,
        "statement": "is(X, rough) :- sees(X, bald_eagle).",
        "description": "If someone sees the bald eagle then they are rough."
    },
    {
        "id": 14380,
        "statement": "eats(X, rabbit) :- is(X, cold).",
        "description": "If someone is cold then they eat the rabbit."
    },
    {
        "id": 14381,
        "statement": "is(rabbit, blue) :- not eats(rabbit, bald_eagle).",
        "description": "If the rabbit does not eat the bald eagle then the rabbit is blue."
    },
    {
        "id": 14382,
        "statement": "is(X, kind) :- is(X, cold), is(X, rough).",
        "description": "All cold, rough people are kind."
    },
    {
        "id": 14383,
        "statement": "likes(lion, cow) :- sees(X, cow), sees(X, lion).",
        "description": "If something sees the cow and it sees the lion then the lion likes the cow."
    },
    {
        "id": 14384,
        "statement": "sees(X, bear) :- chases(X, bald_eagle), chases(bald_eagle, lion).",
        "description": "If something chases the bald eagle and the bald eagle chases the lion then it sees the bear."
    },
    {
        "id": 14385,
        "statement": "sees(bear, cow) :- sees(X, cow), sees(cow, bear).",
        "description": "If something sees the cow and the cow sees the bear then the bear sees the cow."
    },
    {
        "id": 14386,
        "statement": "is(cow, blue) :- is(X, round), chases(X, cow).",
        "description": "If something is round and it chases the cow then the cow is blue."
    },
    {
        "id": 14387,
        "statement": "likes(bald_eagle, bear) :- sees(X, bald_eagle), is(X, rough).",
        "description": "If something sees the bald eagle and it is rough then the bald eagle likes the bear."
    },
    {
        "id": 14388,
        "statement": "sees(bald_eagle, cow) :- likes(bald_eagle, lion).",
        "description": "If the bald eagle likes the lion then the bald eagle sees the cow."
    },
    {
        "id": 14389,
        "statement": "is(X, cold) :- likes(X, bear).",
        "description": "If something likes the bear then it is cold."
    },
    {
        "id": 14390,
        "statement": "likes(bald_eagle, lion) :- sees(X, bald_eagle), sees(X, cow).",
        "description": "If something sees the bald eagle and it sees the cow then the bald eagle likes the lion."
    },
    {
        "id": 14391,
        "statement": "is(X, quiet) :- is(X, green), is(X, kind).",
        "description": "Green, kind things are quiet."
    },
    {
        "id": 14392,
        "statement": "is(X, green) :- is(X, kind), is(X, nice).",
        "description": "If something is kind and nice then it is green."
    },
    {
        "id": 14393,
        "statement": "is(X, smart) :- is(X, red), not is(X, kind).",
        "description": "If something is red and not kind then it is smart."
    },
    {
        "id": 14394,
        "statement": "likes(X, squirrel) :- is(X, young).",
        "description": "If someone is young then they like the squirrel."
    },
    {
        "id": 14395,
        "statement": "eats(X, mouse) :- sees(X, lion), likes(X, dog).",
        "description": "If someone sees the lion and they like the dog then they eat the mouse."
    },
    {
        "id": 14396,
        "statement": "is(mouse, big) :- sees(X, mouse).",
        "description": "If someone sees the mouse then the mouse is big."
    },
    {
        "id": 14397,
        "statement": "sees(mouse, dog) :- likes(X, mouse).",
        "description": "If someone likes the mouse then the mouse sees the dog."
    },
    {
        "id": 14398,
        "statement": "eats(dog, mouse) :- eats(X, squirrel), not sees(X, dog).",
        "description": "If someone eats the squirrel and they do not see the dog then the dog eats the mouse."
    },
    {
        "id": 14399,
        "statement": "is(X, green) :- is(X, quiet), is(X, young).",
        "description": "All quiet, young things are green."
    },
    {
        "id": 14400,
        "statement": "is(X, white) :- is(X, young), is(X, cold).",
        "description": "All young, cold things are white."
    },
    {
        "id": 14401,
        "statement": "is(X, nice) :- is(X, young), is(X, rough).",
        "description": "Young, rough things are nice."
    },
    {
        "id": 14402,
        "statement": "is(dave, white) :- is(dave, rough).",
        "description": "If Dave is rough then Dave is white."
    },
    {
        "id": 14403,
        "statement": "is(X, cold) :- is(X, quiet), is(X, blue).",
        "description": "Quiet, blue things are cold."
    },
    {
        "id": 14404,
        "statement": "is(X, blue) :- is(X, young), is(X, white).",
        "description": "Young, white things are blue."
    },
    {
        "id": 14405,
        "statement": "is(X, blue) :- is(X, rough), is(X, young).",
        "description": "If something is rough and young then it is blue."
    },
    {
        "id": 14406,
        "statement": "is(X, rough) :- is(X, cold), is(X, quiet).",
        "description": "If something is cold and quiet then it is rough."
    },
    {
        "id": 14407,
        "statement": "likes(X, bear) :- is(X, rough), chases(X, mouse).",
        "description": "If something is rough and it chases the mouse then it likes the bear."
    },
    {
        "id": 14408,
        "statement": "eats(X, mouse) :- is(X, rough).",
        "description": "If something is rough then it eats the mouse."
    },
    {
        "id": 14409,
        "statement": "likes(bear, rabbit) :- eats(X, bear).",
        "description": "If something eats the bear then the bear likes the rabbit."
    },
    {
        "id": 14410,
        "statement": "is(X, red) :- eats(X, rabbit).",
        "description": "If something eats the rabbit then it is red."
    },
    {
        "id": 14411,
        "statement": "is(mouse, round) :- likes(mouse, rabbit), is(mouse, rough).",
        "description": "If the mouse likes the rabbit and the mouse is rough then the mouse is round."
    },
    {
        "id": 14412,
        "statement": "eats(bear, rabbit) :- eats(bear, mouse), is(mouse, nice).",
        "description": "If the bear eats the mouse and the mouse is nice then the bear eats the rabbit."
    },
    {
        "id": 14413,
        "statement": "eats(mouse, rabbit) :- likes(X, mouse).",
        "description": "If something likes the mouse then the mouse eats the rabbit."
    },
    {
        "id": 14414,
        "statement": "eats(rabbit, mouse) :- is(bear, green), not eats(bear, rabbit).",
        "description": "If the bear is green and the bear does not eat the rabbit then the rabbit eats the mouse."
    },
    {
        "id": 14415,
        "statement": "chases(mouse, rabbit) :- is(X, rough), likes(X, mouse).",
        "description": "If something is rough and it likes the mouse then the mouse chases the rabbit."
    },
    {
        "id": 14416,
        "statement": "likes(cow, cat) :- eats(rabbit, cow), is(rabbit, kind).",
        "description": "If the rabbit eats the cow and the rabbit is kind then the cow likes the cat."
    },
    {
        "id": 14417,
        "statement": "likes(X, cow) :- is(X, young).",
        "description": "If something is young then it likes the cow."
    },
    {
        "id": 14418,
        "statement": "is(X, red) :- chases(X, cat), is(X, round).",
        "description": "If something chases the cat and it is round then it is red."
    },
    {
        "id": 14419,
        "statement": "eats(X, cat) :- is(X, rough).",
        "description": "If something is rough then it eats the cat."
    },
    {
        "id": 14420,
        "statement": "chases(X, cat) :- is(X, round).",
        "description": "If something is round then it chases the cat."
    },
    {
        "id": 14421,
        "statement": "chases(X, mouse) :- likes(X, cow).",
        "description": "If something likes the cow then it chases the mouse."
    },
    {
        "id": 14422,
        "statement": "chases(X, cat) :- likes(X, rabbit), is(rabbit, kind).",
        "description": "If something likes the rabbit and the rabbit is kind then it chases the cat."
    },
    {
        "id": 14423,
        "statement": "is(dog, red) :- needs(X, rabbit), needs(rabbit, dog).",
        "description": "If something needs the rabbit and the rabbit needs the dog then the dog is red."
    },
    {
        "id": 14424,
        "statement": "is(dog, round) :- not visits(dog, tiger).",
        "description": "If the dog does not visit the tiger then the dog is round."
    },
    {
        "id": 14425,
        "statement": "visits(dog, rabbit) :- is(X, cold), eats(X, dog).",
        "description": "If something is cold and it eats the dog then the dog visits the rabbit."
    },
    {
        "id": 14426,
        "statement": "needs(X, rabbit) :- eats(X, dog), is(dog, kind).",
        "description": "If something eats the dog and the dog is kind then it needs the rabbit."
    },
    {
        "id": 14427,
        "statement": "is(X, round) :- eats(X, cow), needs(cow, dog).",
        "description": "If something eats the cow and the cow needs the dog then it is round."
    },
    {
        "id": 14428,
        "statement": "is(cow, cold) :- needs(X, rabbit), visits(X, cow).",
        "description": "If something needs the rabbit and it visits the cow then the cow is cold."
    },
    {
        "id": 14429,
        "statement": "needs(dog, cow) :- is(dog, red).",
        "description": "If the dog is red then the dog needs the cow."
    },
    {
        "id": 14430,
        "statement": "needs(X, squirrel) :- visits(X, cow), is(X, cold).",
        "description": "If someone visits the cow and they are cold then they need the squirrel."
    },
    {
        "id": 14431,
        "statement": "visits(dog, bear) :- chases(X, dog), is(X, kind).",
        "description": "If someone chases the dog and they are kind then the dog visits the bear."
    },
    {
        "id": 14432,
        "statement": "visits(X, bear) :- visits(X, cow).",
        "description": "If someone visits the cow then they visit the bear."
    },
    {
        "id": 14433,
        "statement": "visits(squirrel, cow) :- needs(X, squirrel).",
        "description": "If someone needs the squirrel then the squirrel visits the cow."
    },
    {
        "id": 14434,
        "statement": "needs(bear, cow) :- chases(X, cow), needs(cow, bear).",
        "description": "If someone chases the cow and the cow needs the bear then the bear needs the cow."
    },
    {
        "id": 14435,
        "statement": "chases(cow, dog) :- visits(X, cow).",
        "description": "If someone visits the cow then the cow chases the dog."
    },
    {
        "id": 14436,
        "statement": "is(lion, big) :- visits(X, lion).",
        "description": "If something visits the lion then the lion is big."
    },
    {
        "id": 14437,
        "statement": "visits(X, bald_eagle) :- is(X, blue).",
        "description": "If something is blue then it visits the bald eagle."
    },
    {
        "id": 14438,
        "statement": "likes(lion, rabbit) :- needs(X, bald_eagle), visits(bald_eagle, lion).",
        "description": "If something needs the bald eagle and the bald eagle visits the lion then the lion likes the rabbit."
    },
    {
        "id": 14439,
        "statement": "is(gary, furry) :- is(gary, white).",
        "description": "If Gary is white then Gary is furry."
    },
    {
        "id": 14440,
        "statement": "is(bob, blue) :- is(bob, furry), not is(bob, rough).",
        "description": "If Bob is furry and Bob is not rough then Bob is blue."
    },
    {
        "id": 14441,
        "statement": "is(X, quiet) :- is(X, rough), not is(X, smart).",
        "description": "If something is rough and not smart then it is quiet."
    },
    {
        "id": 14442,
        "statement": "is(X, quiet) :- is(X, rough), is(X, blue).",
        "description": "All rough, blue things are quiet."
    },
    {
        "id": 14443,
        "statement": "is(X, red) :- is(X, big), is(X, smart).",
        "description": "All big, smart people are red."
    },
    {
        "id": 14444,
        "statement": "is(X, round) :- is(X, big), is(X, red).",
        "description": "Big, red people are round."
    },
    {
        "id": 14445,
        "statement": "is(X, smart) :- is(X, round), is(X, red).",
        "description": "Round, red people are smart."
    },
    {
        "id": 14446,
        "statement": "is(X, smart) :- is(X, red), is(X, blue).",
        "description": "All red, blue people are smart."
    },
    {
        "id": 14447,
        "statement": "eats(X, mouse) :- is(X, big).",
        "description": "If someone is big then they eat the mouse."
    },
    {
        "id": 14448,
        "statement": "is(X, blue) :- likes(X, tiger).",
        "description": "If someone likes the tiger then they are blue."
    },
    {
        "id": 14449,
        "statement": "needs(X, mouse) :- eats(X, tiger), is(X, round).",
        "description": "If someone eats the tiger and they are round then they need the mouse."
    },
    {
        "id": 14450,
        "statement": "eats(X, dog) :- is(X, blue).",
        "description": "If someone is blue then they eat the dog."
    },
    {
        "id": 14451,
        "statement": "likes(dog, tiger) :- needs(X, dog).",
        "description": "If someone needs the dog then the dog likes the tiger."
    },
    {
        "id": 14452,
        "statement": "is(X, red) :- likes(X, dog), is(dog, red).",
        "description": "If someone likes the dog and the dog is red then they are red."
    },
    {
        "id": 14453,
        "statement": "is(dog, round) :- eats(X, dog).",
        "description": "If someone eats the dog then the dog is round."
    },
    {
        "id": 14454,
        "statement": "is(X, blue) :- is(X, furry), is(X, green).",
        "description": "Furry, green things are blue."
    },
    {
        "id": 14455,
        "statement": "is(bob, furry) :- is(bob, white).",
        "description": "If Bob is white then Bob is furry."
    },
    {
        "id": 14456,
        "statement": "is(bob, nice) :- is(bob, blue), is(bob, furry).",
        "description": "If Bob is blue and Bob is furry then Bob is nice."
    },
    {
        "id": 14457,
        "statement": "is(rabbit, blue) :- sees(bear, lion), not visits(bear, rabbit).",
        "description": "If the bear sees the lion and the bear does not visit the rabbit then the rabbit is blue."
    },
    {
        "id": 14458,
        "statement": "sees(X, lion) :- visits(X, bear), is(bear, big).",
        "description": "If something visits the bear and the bear is big then it sees the lion."
    },
    {
        "id": 14459,
        "statement": "eats(rabbit, squirrel) :- eats(X, rabbit).",
        "description": "If something eats the rabbit then the rabbit eats the squirrel."
    },
    {
        "id": 14460,
        "statement": "visits(X, lion) :- sees(X, rabbit).",
        "description": "If something sees the rabbit then it visits the lion."
    },
    {
        "id": 14461,
        "statement": "is(X, big) :- is(X, smart), is(X, green).",
        "description": "Smart, green people are big."
    },
    {
        "id": 14462,
        "statement": "is(X, smart) :- is(X, round), is(X, red).",
        "description": "If someone is round and red then they are smart."
    },
    {
        "id": 14463,
        "statement": "is(X, big) :- is(X, round), is(X, green).",
        "description": "Round, green people are big."
    },
    {
        "id": 14464,
        "statement": "is(X, round) :- is(X, furry), is(X, green).",
        "description": "If someone is furry and green then they are round."
    },
    {
        "id": 14465,
        "statement": "is(X, round) :- is(X, smart), is(X, furry).",
        "description": "If someone is smart and furry then they are round."
    },
    {
        "id": 14466,
        "statement": "is(X, blue) :- is(X, white), is(X, red).",
        "description": "If someone is white and red then they are blue."
    },
    {
        "id": 14467,
        "statement": "is(X, young) :- is(X, smart), is(X, furry).",
        "description": "Smart, furry things are young."
    },
    {
        "id": 14468,
        "statement": "is(X, nice) :- is(X, young), not is(X, rough).",
        "description": "If something is young and not rough then it is nice."
    },
    {
        "id": 14469,
        "statement": "is(X, big) :- is(X, white), is(X, smart).",
        "description": "White, smart things are big."
    },
    {
        "id": 14470,
        "statement": "visits(rabbit, cat) :- needs(X, rabbit), is(rabbit, rough).",
        "description": "If someone needs the rabbit and the rabbit is rough then the rabbit visits the cat."
    },
    {
        "id": 14471,
        "statement": "is(tiger, cold) :- needs(X, tiger).",
        "description": "If someone needs the tiger then the tiger is cold."
    },
    {
        "id": 14472,
        "statement": "is(lion, kind) :- visits(X, lion).",
        "description": "If someone visits the lion then the lion is kind."
    },
    {
        "id": 14473,
        "statement": "visits(X, lion) :- is(X, cold).",
        "description": "If someone is cold then they visit the lion."
    },
    {
        "id": 14474,
        "statement": "is(X, cold) :- needs(X, tiger), not visits(X, cat).",
        "description": "If someone needs the tiger and they do not visit the cat then they are cold."
    },
    {
        "id": 14475,
        "statement": "is(bald_eagle, red) :- likes(X, bald_eagle).",
        "description": "If someone likes the bald eagle then the bald eagle is red."
    },
    {
        "id": 14476,
        "statement": "chases(X, bald_eagle) :- likes(X, bald_eagle).",
        "description": "If someone likes the bald eagle then they chase the bald eagle."
    },
    {
        "id": 14477,
        "statement": "sees(X, squirrel) :- is(X, red), is(X, nice).",
        "description": "If someone is red and nice then they see the squirrel."
    },
    {
        "id": 14478,
        "statement": "is(squirrel, red) :- likes(squirrel, dog).",
        "description": "If the squirrel likes the dog then the squirrel is red."
    },
    {
        "id": 14479,
        "statement": "is(bald_eagle, red) :- sees(dog, bald_eagle), chases(bald_eagle, squirrel).",
        "description": "If the dog sees the bald eagle and the bald eagle chases the squirrel then the bald eagle is red."
    },
    {
        "id": 14480,
        "statement": "likes(X, bald_eagle) :- is(X, red).",
        "description": "If someone is red then they like the bald eagle."
    },
    {
        "id": 14481,
        "statement": "is(dave, blue) :- is(dave, cold), is(dave, nice).",
        "description": "If Dave is cold and Dave is nice then Dave is blue."
    },
    {
        "id": 14482,
        "statement": "is(X, smart) :- is(X, nice), is(X, white).",
        "description": "If something is nice and white then it is smart."
    },
    {
        "id": 14483,
        "statement": "visits(mouse, dog) :- is(X, green), not visits(X, mouse).",
        "description": "If something is green and it does not visit the mouse then the mouse visits the dog."
    },
    {
        "id": 14484,
        "statement": "chases(X, mouse) :- sees(X, mouse), sees(mouse, cat).",
        "description": "If something sees the mouse and the mouse sees the cat then it chases the mouse."
    },
    {
        "id": 14485,
        "statement": "is(cow, blue) :- sees(X, cow).",
        "description": "If something sees the cow then the cow is blue."
    },
    {
        "id": 14486,
        "statement": "sees(cat, cow) :- sees(X, dog), not chases(X, cat).",
        "description": "If something sees the dog and it does not chase the cat then the cat sees the cow."
    },
    {
        "id": 14487,
        "statement": "sees(X, dog) :- is(X, nice).",
        "description": "If something is nice then it sees the dog."
    },
    {
        "id": 14488,
        "statement": "visits(X, dog) :- chases(X, cat), not is(cat, nice).",
        "description": "If something chases the cat and the cat is not nice then it visits the dog."
    },
    {
        "id": 14489,
        "statement": "is(X, kind) :- likes(X, bald_eagle).",
        "description": "If something likes the bald eagle then it is kind."
    },
    {
        "id": 14490,
        "statement": "likes(cat, bald_eagle) :- visits(X, cow), needs(X, cat).",
        "description": "If something visits the cow and it needs the cat then the cat likes the bald eagle."
    },
    {
        "id": 14491,
        "statement": "likes(squirrel, cat) :- visits(X, squirrel).",
        "description": "If something visits the squirrel then the squirrel likes the cat."
    },
    {
        "id": 14492,
        "statement": "visits(squirrel, cow) :- needs(cow, squirrel).",
        "description": "If the cow needs the squirrel then the squirrel visits the cow."
    },
    {
        "id": 14493,
        "statement": "needs(squirrel, cat) :- likes(X, squirrel), needs(squirrel, cow).",
        "description": "If something likes the squirrel and the squirrel needs the cow then the squirrel needs the cat."
    },
    {
        "id": 14494,
        "statement": "needs(cow, bald_eagle) :- visits(cat, cow).",
        "description": "If the cat visits the cow then the cow needs the bald eagle."
    },
    {
        "id": 14495,
        "statement": "is(X, smart) :- is(X, furry), is(X, white).",
        "description": "All furry, white things are smart."
    },
    {
        "id": 14496,
        "statement": "is(X, blue) :- is(X, quiet), is(X, smart).",
        "description": "If something is quiet and smart then it is blue."
    },
    {
        "id": 14497,
        "statement": "is(X, smart) :- is(X, big), is(X, furry).",
        "description": "If something is big and furry then it is smart."
    },
    {
        "id": 14498,
        "statement": "eats(lion, rabbit) :- needs(X, lion).",
        "description": "If someone needs the lion then the lion eats the rabbit."
    },
    {
        "id": 14499,
        "statement": "visits(X, squirrel) :- visits(X, cow), eats(cow, lion).",
        "description": "If someone visits the cow and the cow eats the lion then they visit the squirrel."
    },
    {
        "id": 14500,
        "statement": "is(X, rough) :- eats(X, cow).",
        "description": "If someone eats the cow then they are rough."
    },
    {
        "id": 14501,
        "statement": "eats(lion, squirrel) :- needs(X, lion), is(X, nice).",
        "description": "If someone needs the lion and they are nice then the lion eats the squirrel."
    },
    {
        "id": 14502,
        "statement": "eats(X, squirrel) :- eats(X, cow).",
        "description": "If someone eats the cow then they eat the squirrel."
    },
    {
        "id": 14503,
        "statement": "eats(X, cow) :- is(X, rough).",
        "description": "If someone is rough then they eat the cow."
    },
    {
        "id": 14504,
        "statement": "is(X, nice) :- is(X, round), is(X, green).",
        "description": "All round, green things are nice."
    },
    {
        "id": 14505,
        "statement": "is(X, nice) :- is(X, round), is(X, young).",
        "description": "Round, young things are nice."
    },
    {
        "id": 14506,
        "statement": "is(X, green) :- is(X, nice), is(X, round).",
        "description": "If something is nice and round then it is green."
    },
    {
        "id": 14507,
        "statement": "is(anne, cold) :- is(anne, kind), is(anne, big).",
        "description": "If Anne is kind and Anne is big then Anne is cold."
    },
    {
        "id": 14508,
        "statement": "is(anne, kind) :- is(anne, big).",
        "description": "If Anne is big then Anne is kind."
    },
    {
        "id": 14509,
        "statement": "is(X, young) :- is(X, green), is(X, nice).",
        "description": "Green, nice things are young."
    },
    {
        "id": 14510,
        "statement": "is(bear, blue) :- eats(X, bear).",
        "description": "If something eats the bear then the bear is blue."
    },
    {
        "id": 14511,
        "statement": "eats(tiger, cat) :- visits(tiger, lion).",
        "description": "If the tiger visits the lion then the tiger eats the cat."
    },
    {
        "id": 14512,
        "statement": "eats(tiger, bear) :- visits(X, tiger).",
        "description": "If something visits the tiger then the tiger eats the bear."
    },
    {
        "id": 14513,
        "statement": "is(bear, kind) :- visits(X, bear).",
        "description": "If something visits the bear then the bear is kind."
    },
    {
        "id": 14514,
        "statement": "visits(X, tiger) :- is(X, kind), not is(X, rough).",
        "description": "If something is kind and not rough then it visits the tiger."
    },
    {
        "id": 14515,
        "statement": "visits(lion, cat) :- likes(X, lion), eats(X, lion).",
        "description": "If something likes the lion and it eats the lion then the lion visits the cat."
    },
    {
        "id": 14516,
        "statement": "likes(X, lion) :- eats(X, tiger), not eats(tiger, cat).",
        "description": "If something eats the tiger and the tiger does not eat the cat then it likes the lion."
    },
    {
        "id": 14517,
        "statement": "is(X, nice) :- is(X, white), is(X, blue).",
        "description": "All white, blue things are nice."
    },
    {
        "id": 14518,
        "statement": "is(X, rough) :- is(X, nice), is(X, white).",
        "description": "All nice, white things are rough."
    },
    {
        "id": 14519,
        "statement": "is(X, red) :- is(X, white), is(X, quiet).",
        "description": "All white, quiet things are red."
    },
    {
        "id": 14520,
        "statement": "is(X, kind) :- is(X, young), is(X, big).",
        "description": "All young, big people are kind."
    },
    {
        "id": 14521,
        "statement": "is(bob, white) :- is(bob, blue), is(bob, smart).",
        "description": "If Bob is blue and Bob is smart then Bob is white."
    },
    {
        "id": 14522,
        "statement": "is(X, young) :- is(X, cold), is(X, white).",
        "description": "All cold, white people are young."
    },
    {
        "id": 14523,
        "statement": "is(anne, red) :- is(anne, young), is(anne, cold).",
        "description": "If Anne is young and Anne is cold then Anne is red."
    },
    {
        "id": 14524,
        "statement": "is(X, kind) :- is(X, red), is(X, young).",
        "description": "Red, young people are kind."
    },
    {
        "id": 14525,
        "statement": "is(X, smart) :- is(X, red), is(X, blue).",
        "description": "Red, blue people are smart."
    },
    {
        "id": 14526,
        "statement": "is(X, white) :- is(X, smart), is(X, red).",
        "description": "If someone is smart and red then they are white."
    },
    {
        "id": 14527,
        "statement": "chases(X, squirrel) :- needs(X, cow), not likes(X, bald_eagle).",
        "description": "If something needs the cow and it does not like the bald eagle then it chases the squirrel."
    },
    {
        "id": 14528,
        "statement": "is(tiger, blue) :- likes(X, tiger).",
        "description": "If something likes the tiger then the tiger is blue."
    },
    {
        "id": 14529,
        "statement": "likes(X, squirrel) :- is(X, green).",
        "description": "If something is green then it likes the squirrel."
    },
    {
        "id": 14530,
        "statement": "needs(X, cow) :- likes(X, squirrel).",
        "description": "If something likes the squirrel then it needs the cow."
    },
    {
        "id": 14531,
        "statement": "likes(X, cow) :- is(X, green).",
        "description": "If something is green then it likes the cow."
    },
    {
        "id": 14532,
        "statement": "needs(X, squirrel) :- is(X, rough).",
        "description": "If something is rough then it needs the squirrel."
    },
    {
        "id": 14533,
        "statement": "is(cow, green) :- needs(X, cow).",
        "description": "If something needs the cow then the cow is green."
    },
    {
        "id": 14534,
        "statement": "is(harry, red) :- is(harry, smart).",
        "description": "If Harry is smart then Harry is red."
    },
    {
        "id": 14535,
        "statement": "is(X, young) :- is(X, smart), is(X, big).",
        "description": "All smart, big people are young."
    },
    {
        "id": 14536,
        "statement": "is(anne, young) :- is(anne, cold), is(anne, blue).",
        "description": "If Anne is cold and Anne is blue then Anne is young."
    },
    {
        "id": 14537,
        "statement": "is(X, young) :- is(X, cold), is(X, kind).",
        "description": "All cold, kind things are young."
    },
    {
        "id": 14538,
        "statement": "is(fiona, green) :- is(fiona, white), is(fiona, red).",
        "description": "If Fiona is white and Fiona is red then Fiona is green."
    },
    {
        "id": 14539,
        "statement": "is(X, blue) :- is(X, green), is(X, red).",
        "description": "All green, red people are blue."
    },
    {
        "id": 14540,
        "statement": "is(X, white) :- is(X, nice), is(X, red).",
        "description": "Nice, red people are white."
    },
    {
        "id": 14541,
        "statement": "is(X, smart) :- is(X, blue), is(X, red).",
        "description": "All blue, red people are smart."
    },
    {
        "id": 14542,
        "statement": "is(X, furry) :- is(X, white), is(X, round).",
        "description": "If someone is white and round then they are furry."
    },
    {
        "id": 14543,
        "statement": "is(dave, green) :- is(dave, furry), is(dave, round).",
        "description": "If Dave is furry and Dave is round then Dave is green."
    },
    {
        "id": 14544,
        "statement": "is(X, white) :- is(X, furry), is(X, quiet).",
        "description": "All furry, quiet people are white."
    },
    {
        "id": 14545,
        "statement": "is(X, green) :- is(X, quiet), is(X, furry).",
        "description": "If someone is quiet and furry then they are green."
    },
    {
        "id": 14546,
        "statement": "is(X, round) :- is(X, young), is(X, quiet).",
        "description": "Young, quiet people are round."
    },
    {
        "id": 14547,
        "statement": "is(X, nice) :- is(X, green), is(X, white).",
        "description": "If something is green and white then it is nice."
    },
    {
        "id": 14548,
        "statement": "is(dave, nice) :- is(dave, furry).",
        "description": "If Dave is furry then Dave is nice."
    },
    {
        "id": 14549,
        "statement": "is(fiona, white) :- is(fiona, blue), is(fiona, green).",
        "description": "If Fiona is blue and Fiona is green then Fiona is white."
    },
    {
        "id": 14550,
        "statement": "needs(bald_eagle, cat) :- eats(X, bald_eagle).",
        "description": "If something eats the bald eagle then the bald eagle needs the cat."
    },
    {
        "id": 14551,
        "statement": "eats(X, cat) :- sees(X, cat), needs(X, cat).",
        "description": "If something sees the cat and it needs the cat then it eats the cat."
    },
    {
        "id": 14552,
        "statement": "is(lion, nice) :- sees(X, lion).",
        "description": "If something sees the lion then the lion is nice."
    },
    {
        "id": 14553,
        "statement": "needs(X, bald_eagle) :- eats(X, lion).",
        "description": "If something eats the lion then it needs the bald eagle."
    },
    {
        "id": 14554,
        "statement": "eats(bald_eagle, cow) :- sees(bald_eagle, cat).",
        "description": "If the bald eagle sees the cat then the bald eagle eats the cow."
    },
    {
        "id": 14555,
        "statement": "needs(X, lion) :- is(X, red), is(X, cold).",
        "description": "If something is red and cold then it needs the lion."
    },
    {
        "id": 14556,
        "statement": "sees(cat, lion) :- eats(X, cat).",
        "description": "If something eats the cat then the cat sees the lion."
    },
    {
        "id": 14557,
        "statement": "chases(X, squirrel) :- needs(X, cat).",
        "description": "If something needs the cat then it chases the squirrel."
    },
    {
        "id": 14558,
        "statement": "needs(X, cat) :- sees(X, cat).",
        "description": "If something sees the cat then it needs the cat."
    },
    {
        "id": 14559,
        "statement": "chases(X, cat) :- sees(X, bald_eagle), chases(X, mouse).",
        "description": "If something sees the bald eagle and it chases the mouse then it chases the cat."
    },
    {
        "id": 14560,
        "statement": "sees(squirrel, cat) :- needs(X, squirrel), needs(X, cat).",
        "description": "If something needs the squirrel and it needs the cat then the squirrel sees the cat."
    },
    {
        "id": 14561,
        "statement": "is(squirrel, young) :- chases(X, squirrel).",
        "description": "If something chases the squirrel then the squirrel is young."
    },
    {
        "id": 14562,
        "statement": "is(cat, rough) :- chases(squirrel, bald_eagle), chases(bald_eagle, cat).",
        "description": "If the squirrel chases the bald eagle and the bald eagle chases the cat then the cat is rough."
    },
    {
        "id": 14563,
        "statement": "sees(X, cat) :- sees(X, mouse).",
        "description": "If something sees the mouse then it sees the cat."
    },
    {
        "id": 14564,
        "statement": "sees(mouse, bald_eagle) :- needs(mouse, bald_eagle).",
        "description": "If the mouse needs the bald eagle then the mouse sees the bald eagle."
    },
    {
        "id": 14565,
        "statement": "is(X, cold) :- is(X, smart), not is(X, white).",
        "description": "If something is smart and not white then it is cold."
    },
    {
        "id": 14566,
        "statement": "is(X, young) :- is(X, nice), is(X, kind).",
        "description": "If something is nice and kind then it is young."
    },
    {
        "id": 14567,
        "statement": "is(X, big) :- is(X, young), is(X, furry).",
        "description": "All young, furry things are big."
    },
    {
        "id": 14568,
        "statement": "is(charlie, young) :- is(charlie, white), is(charlie, rough).",
        "description": "If Charlie is white and Charlie is rough then Charlie is young."
    },
    {
        "id": 14569,
        "statement": "is(anne, round) :- is(anne, young).",
        "description": "If Anne is young then Anne is round."
    },
    {
        "id": 14570,
        "statement": "is(anne, cold) :- is(anne, quiet), is(anne, young).",
        "description": "If Anne is quiet and Anne is young then Anne is cold."
    },
    {
        "id": 14571,
        "statement": "is(X, quiet) :- is(X, young), not is(X, round).",
        "description": "If something is young and not round then it is quiet."
    },
    {
        "id": 14572,
        "statement": "eats(X, squirrel) :- eats(X, dog).",
        "description": "If someone eats the dog then they eat the squirrel."
    },
    {
        "id": 14573,
        "statement": "eats(X, squirrel) :- eats(X, dog), is(X, blue).",
        "description": "If someone eats the dog and they are blue then they eat the squirrel."
    },
    {
        "id": 14574,
        "statement": "chases(X, cow) :- is(X, big), not chases(X, mouse).",
        "description": "If someone is big and they do not chase the mouse then they chase the cow."
    },
    {
        "id": 14575,
        "statement": "is(dog, big) :- needs(dog, squirrel).",
        "description": "If the dog needs the squirrel then the dog is big."
    },
    {
        "id": 14576,
        "statement": "eats(squirrel, cow) :- needs(X, squirrel), needs(squirrel, mouse).",
        "description": "If someone needs the squirrel and the squirrel needs the mouse then the squirrel eats the cow."
    },
    {
        "id": 14577,
        "statement": "chases(mouse, cow) :- needs(X, squirrel), chases(X, mouse).",
        "description": "If someone needs the squirrel and they chase the mouse then the mouse chases the cow."
    },
    {
        "id": 14578,
        "statement": "is(X, nice) :- is(X, blue), chases(X, bear).",
        "description": "If something is blue and it chases the bear then it is nice."
    },
    {
        "id": 14579,
        "statement": "needs(X, bear) :- is(X, red).",
        "description": "If something is red then it needs the bear."
    },
    {
        "id": 14580,
        "statement": "chases(bald_eagle, bear) :- needs(X, bald_eagle).",
        "description": "If something needs the bald eagle then the bald eagle chases the bear."
    },
    {
        "id": 14581,
        "statement": "chases(rabbit, tiger) :- chases(X, rabbit).",
        "description": "If something chases the rabbit then the rabbit chases the tiger."
    },
    {
        "id": 14582,
        "statement": "visits(X, bald_eagle) :- needs(X, bear).",
        "description": "If something needs the bear then it visits the bald eagle."
    },
    {
        "id": 14583,
        "statement": "visits(X, bald_eagle) :- is(X, nice).",
        "description": "If something is nice then it visits the bald eagle."
    },
    {
        "id": 14584,
        "statement": "needs(X, bald_eagle) :- visits(X, bald_eagle).",
        "description": "If something visits the bald eagle then it needs the bald eagle."
    },
    {
        "id": 14585,
        "statement": "is(rabbit, cold) :- chases(bald_eagle, rabbit).",
        "description": "If the bald eagle chases the rabbit then the rabbit is cold."
    },
    {
        "id": 14586,
        "statement": "is(X, nice) :- is(X, blue), is(X, quiet).",
        "description": "All blue, quiet things are nice."
    },
    {
        "id": 14587,
        "statement": "is(X, green) :- is(X, nice), is(X, blue).",
        "description": "Nice, blue things are green."
    },
    {
        "id": 14588,
        "statement": "is(fiona, cold) :- is(fiona, blue), is(fiona, green).",
        "description": "If Fiona is blue and Fiona is green then Fiona is cold."
    },
    {
        "id": 14589,
        "statement": "is(bald_eagle, blue) :- sees(X, bald_eagle).",
        "description": "If someone sees the bald eagle then the bald eagle is blue."
    },
    {
        "id": 14590,
        "statement": "is(X, kind) :- is(X, big), not is(X, blue).",
        "description": "If someone is big and not blue then they are kind."
    },
    {
        "id": 14591,
        "statement": "chases(lion, bear) :- eats(X, lion), is(X, kind).",
        "description": "If someone eats the lion and they are kind then the lion chases the bear."
    },
    {
        "id": 14592,
        "statement": "chases(lion, bear) :- sees(X, cow), chases(cow, lion).",
        "description": "If someone sees the cow and the cow chases the lion then the lion chases the bear."
    },
    {
        "id": 14593,
        "statement": "is(X, big) :- chases(X, bear).",
        "description": "If someone chases the bear then they are big."
    },
    {
        "id": 14594,
        "statement": "is(bear, kind) :- is(X, big), chases(X, bear).",
        "description": "If someone is big and they chase the bear then the bear is kind."
    },
    {
        "id": 14595,
        "statement": "is(bear, kind) :- sees(bear, bald_eagle), eats(bear, cow).",
        "description": "If the bear sees the bald eagle and the bear eats the cow then the bear is kind."
    },
    {
        "id": 14596,
        "statement": "is(bear, young) :- sees(X, bear), not is(bear, big).",
        "description": "If someone sees the bear and the bear is not big then the bear is young."
    },
    {
        "id": 14597,
        "statement": "is(bear, cold) :- is(bear, nice), chases(bear, rabbit).",
        "description": "If the bear is nice and the bear chases the rabbit then the bear is cold."
    },
    {
        "id": 14598,
        "statement": "is(cat, cold) :- not visits(cat, bear).",
        "description": "If the cat does not visit the bear then the cat is cold."
    },
    {
        "id": 14599,
        "statement": "chases(cat, rabbit) :- likes(X, cat), likes(cat, bear).",
        "description": "If someone likes the cat and the cat likes the bear then the cat chases the rabbit."
    },
    {
        "id": 14600,
        "statement": "visits(X, cat) :- chases(X, rabbit).",
        "description": "If someone chases the rabbit then they visit the cat."
    },
    {
        "id": 14601,
        "statement": "is(X, cold) :- visits(X, cat).",
        "description": "If someone visits the cat then they are cold."
    },
    {
        "id": 14602,
        "statement": "likes(cat, bear) :- is(X, red), visits(X, cat).",
        "description": "If someone is red and they visit the cat then the cat likes the bear."
    },
    {
        "id": 14603,
        "statement": "visits(X, rabbit) :- visits(X, mouse).",
        "description": "If something visits the mouse then it visits the rabbit."
    },
    {
        "id": 14604,
        "statement": "sees(X, cat) :- sees(X, mouse), is(X, big).",
        "description": "If something sees the mouse and it is big then it sees the cat."
    },
    {
        "id": 14605,
        "statement": "is(X, rough) :- eats(X, cat).",
        "description": "If something eats the cat then it is rough."
    },
    {
        "id": 14606,
        "statement": "sees(rabbit, cat) :- eats(X, rabbit), visits(X, rabbit).",
        "description": "If something eats the rabbit and it visits the rabbit then the rabbit sees the cat."
    },
    {
        "id": 14607,
        "statement": "is(X, kind) :- visits(X, mouse), sees(X, mouse).",
        "description": "If something visits the mouse and it sees the mouse then it is kind."
    },
    {
        "id": 14608,
        "statement": "sees(dog, mouse) :- visits(X, dog), eats(X, rabbit).",
        "description": "If something visits the dog and it eats the rabbit then the dog sees the mouse."
    },
    {
        "id": 14609,
        "statement": "chases(X, rabbit) :- eats(X, rabbit), likes(rabbit, bear).",
        "description": "If something eats the rabbit and the rabbit likes the bear then it chases the rabbit."
    },
    {
        "id": 14610,
        "statement": "chases(X, cow) :- eats(X, bear), is(X, cold).",
        "description": "If something eats the bear and it is cold then it chases the cow."
    },
    {
        "id": 14611,
        "statement": "eats(X, bear) :- is(X, cold).",
        "description": "If something is cold then it eats the bear."
    },
    {
        "id": 14612,
        "statement": "is(rabbit, kind) :- eats(X, rabbit), eats(rabbit, bear).",
        "description": "If something eats the rabbit and the rabbit eats the bear then the rabbit is kind."
    },
    {
        "id": 14613,
        "statement": "likes(X, bear) :- chases(X, rabbit).",
        "description": "If something chases the rabbit then it likes the bear."
    },
    {
        "id": 14614,
        "statement": "eats(rabbit, mouse) :- likes(X, rabbit), chases(rabbit, mouse).",
        "description": "If something likes the rabbit and the rabbit chases the mouse then the rabbit eats the mouse."
    },
    {
        "id": 14615,
        "statement": "eats(rabbit, mouse) :- chases(X, cow), likes(cow, rabbit).",
        "description": "If something chases the cow and the cow likes the rabbit then the rabbit eats the mouse."
    },
    {
        "id": 14616,
        "statement": "eats(mouse, bear) :- likes(X, mouse).",
        "description": "If something likes the mouse then the mouse eats the bear."
    },
    {
        "id": 14617,
        "statement": "is(X, white) :- is(X, young), is(X, green).",
        "description": "All young, green things are white."
    },
    {
        "id": 14618,
        "statement": "is(X, blue) :- is(X, white), is(X, young).",
        "description": "All white, young things are blue."
    },
    {
        "id": 14619,
        "statement": "is(X, smart) :- is(X, young), is(X, nice).",
        "description": "If something is young and nice then it is smart."
    },
    {
        "id": 14620,
        "statement": "is(X, green) :- is(X, smart), is(X, white).",
        "description": "All smart, white things are green."
    },
    {
        "id": 14621,
        "statement": "is(X, smart) :- is(X, nice), is(X, round).",
        "description": "All nice, round things are smart."
    },
    {
        "id": 14622,
        "statement": "visits(mouse, tiger) :- is(mouse, young).",
        "description": "If the mouse is young then the mouse visits the tiger."
    },
    {
        "id": 14623,
        "statement": "is(mouse, green) :- sees(X, mouse).",
        "description": "If something sees the mouse then the mouse is green."
    },
    {
        "id": 14624,
        "statement": "sees(X, tiger) :- sees(X, bald_eagle).",
        "description": "If something sees the bald eagle then it sees the tiger."
    },
    {
        "id": 14625,
        "statement": "sees(X, bald_eagle) :- visits(X, rabbit).",
        "description": "If something visits the rabbit then it sees the bald eagle."
    },
    {
        "id": 14626,
        "statement": "is(mouse, rough) :- is(mouse, green).",
        "description": "If the mouse is green then the mouse is rough."
    },
    {
        "id": 14627,
        "statement": "sees(bald_eagle, rabbit) :- sees(X, bald_eagle), visits(X, rabbit).",
        "description": "If something sees the bald eagle and it visits the rabbit then the bald eagle sees the rabbit."
    },
    {
        "id": 14628,
        "statement": "sees(X, mouse) :- sees(X, bald_eagle).",
        "description": "If something sees the bald eagle then it sees the mouse."
    },
    {
        "id": 14629,
        "statement": "is(X, smart) :- is(X, kind), is(X, round).",
        "description": "Kind, round people are smart."
    },
    {
        "id": 14630,
        "statement": "is(X, smart) :- is(X, quiet), is(X, round).",
        "description": "If someone is quiet and round then they are smart."
    },
    {
        "id": 14631,
        "statement": "is(X, cold) :- is(X, round), is(X, blue).",
        "description": "If someone is round and blue then they are cold."
    },
    {
        "id": 14632,
        "statement": "needs(bear, rabbit) :- is(bear, big), not eats(bear, mouse).",
        "description": "If the bear is big and the bear does not eat the mouse then the bear needs the rabbit."
    },
    {
        "id": 14633,
        "statement": "is(lion, round) :- eats(X, lion).",
        "description": "If someone eats the lion then the lion is round."
    },
    {
        "id": 14634,
        "statement": "is(X, nice) :- needs(X, lion), is(X, big).",
        "description": "If someone needs the lion and they are big then they are nice."
    },
    {
        "id": 14635,
        "statement": "eats(X, lion) :- is(X, nice), chases(X, bear).",
        "description": "If someone is nice and they chase the bear then they eat the lion."
    },
    {
        "id": 14636,
        "statement": "chases(X, bear) :- is(X, nice), is(X, big).",
        "description": "If someone is nice and big then they chase the bear."
    },
    {
        "id": 14637,
        "statement": "needs(X, bear) :- is(X, young), not is(X, red).",
        "description": "If someone is young and not red then they need the bear."
    },
    {
        "id": 14638,
        "statement": "eats(bear, lion) :- eats(X, bear).",
        "description": "If someone eats the bear then the bear eats the lion."
    },
    {
        "id": 14639,
        "statement": "is(mouse, nice) :- likes(X, mouse), likes(X, tiger).",
        "description": "If someone likes the mouse and they like the tiger then the mouse is nice."
    },
    {
        "id": 14640,
        "statement": "is(X, red) :- chases(X, bald_eagle).",
        "description": "If someone chases the bald eagle then they are red."
    },
    {
        "id": 14641,
        "statement": "is(X, round) :- chases(X, bald_eagle).",
        "description": "If someone chases the bald eagle then they are round."
    },
    {
        "id": 14642,
        "statement": "is(X, nice) :- likes(X, tiger), likes(tiger, mouse).",
        "description": "If someone likes the tiger and the tiger likes the mouse then they are nice."
    },
    {
        "id": 14643,
        "statement": "sees(X, mouse) :- is(X, round).",
        "description": "If someone is round then they see the mouse."
    },
    {
        "id": 14644,
        "statement": "sees(X, mouse) :- is(X, kind).",
        "description": "If someone is kind then they see the mouse."
    },
    {
        "id": 14645,
        "statement": "sees(tiger, dog) :- is(X, young), needs(X, tiger).",
        "description": "If someone is young and they need the tiger then the tiger sees the dog."
    },
    {
        "id": 14646,
        "statement": "needs(X, bald_eagle) :- sees(X, tiger), is(tiger, young).",
        "description": "If someone sees the tiger and the tiger is young then they need the bald eagle."
    },
    {
        "id": 14647,
        "statement": "is(tiger, blue) :- likes(X, tiger), likes(tiger, mouse).",
        "description": "If someone likes the tiger and the tiger likes the mouse then the tiger is blue."
    },
    {
        "id": 14648,
        "statement": "is(X, young) :- sees(X, mouse), likes(X, bald_eagle).",
        "description": "If someone sees the mouse and they like the bald eagle then they are young."
    },
    {
        "id": 14649,
        "statement": "likes(dog, tiger) :- is(X, blue), sees(X, dog).",
        "description": "If someone is blue and they see the dog then the dog likes the tiger."
    },
    {
        "id": 14650,
        "statement": "is(X, cold) :- is(X, smart), is(X, big).",
        "description": "Smart, big things are cold."
    },
    {
        "id": 14651,
        "statement": "is(X, smart) :- is(X, big), not is(X, green).",
        "description": "If something is big and not green then it is smart."
    },
    {
        "id": 14652,
        "statement": "likes(lion, mouse) :- not eats(lion, mouse).",
        "description": "If the lion does not eat the mouse then the lion likes the mouse."
    },
    {
        "id": 14653,
        "statement": "likes(cat, cow) :- likes(X, cat).",
        "description": "If something likes the cat then the cat likes the cow."
    },
    {
        "id": 14654,
        "statement": "likes(X, cow) :- is(X, rough), is(X, red).",
        "description": "If something is rough and red then it likes the cow."
    },
    {
        "id": 14655,
        "statement": "likes(cat, mouse) :- is(cat, young).",
        "description": "If the cat is young then the cat likes the mouse."
    },
    {
        "id": 14656,
        "statement": "is(cat, cold) :- eats(X, cat).",
        "description": "If something eats the cat then the cat is cold."
    },
    {
        "id": 14657,
        "statement": "is(cow, red) :- likes(X, cow).",
        "description": "If something likes the cow then the cow is red."
    },
    {
        "id": 14658,
        "statement": "eats(mouse, cow) :- is(mouse, rough), not chases(cat, mouse).",
        "description": "If the mouse is rough and the cat does not chase the mouse then the mouse eats the cow."
    },
    {
        "id": 14659,
        "statement": "sees(X, bear) :- likes(X, dog).",
        "description": "If something likes the dog then it sees the bear."
    },
    {
        "id": 14660,
        "statement": "sees(X, bear) :- visits(X, dog).",
        "description": "If something visits the dog then it sees the bear."
    },
    {
        "id": 14661,
        "statement": "visits(cat, tiger) :- sees(cat, dog).",
        "description": "If the cat sees the dog then the cat visits the tiger."
    },
    {
        "id": 14662,
        "statement": "visits(X, bear) :- is(X, green).",
        "description": "If something is green then it visits the bear."
    },
    {
        "id": 14663,
        "statement": "is(tiger, green) :- visits(X, tiger), is(tiger, big).",
        "description": "If something visits the tiger and the tiger is big then the tiger is green."
    },
    {
        "id": 14664,
        "statement": "likes(cat, dog) :- is(cat, big), not sees(cat, dog).",
        "description": "If the cat is big and the cat does not see the dog then the cat likes the dog."
    },
    {
        "id": 14665,
        "statement": "visits(tiger, dog) :- visits(X, bear), not sees(bear, tiger).",
        "description": "If something visits the bear and the bear does not see the tiger then the tiger visits the dog."
    },
    {
        "id": 14666,
        "statement": "likes(dog, bear) :- is(X, round), sees(X, dog).",
        "description": "If something is round and it sees the dog then the dog likes the bear."
    },
    {
        "id": 14667,
        "statement": "is(X, big) :- sees(X, bear), likes(X, bear).",
        "description": "If something sees the bear and it likes the bear then it is big."
    },
    {
        "id": 14668,
        "statement": "is(X, green) :- is(X, rough), is(X, kind).",
        "description": "If someone is rough and kind then they are green."
    },
    {
        "id": 14669,
        "statement": "is(X, rough) :- is(X, young), is(X, red).",
        "description": "Young, red people are rough."
    },
    {
        "id": 14670,
        "statement": "is(X, round) :- is(X, red), is(X, green).",
        "description": "If someone is red and green then they are round."
    },
    {
        "id": 14671,
        "statement": "is(X, blue) :- is(X, rough), is(X, green).",
        "description": "All rough, green people are blue."
    },
    {
        "id": 14672,
        "statement": "is(X, smart) :- is(X, round), is(X, rough).",
        "description": "Round, rough people are smart."
    },
    {
        "id": 14673,
        "statement": "is(X, round) :- is(X, smart), is(X, rough).",
        "description": "Smart, rough people are round."
    },
    {
        "id": 14674,
        "statement": "needs(rabbit, cow) :- is(X, big), eats(X, rabbit).",
        "description": "If someone is big and they eat the rabbit then the rabbit needs the cow."
    },
    {
        "id": 14675,
        "statement": "eats(rabbit, cat) :- eats(X, cow), needs(cow, rabbit).",
        "description": "If someone eats the cow and the cow needs the rabbit then the rabbit eats the cat."
    },
    {
        "id": 14676,
        "statement": "needs(cow, cat) :- is(X, big), needs(X, cow).",
        "description": "If someone is big and they need the cow then the cow needs the cat."
    },
    {
        "id": 14677,
        "statement": "eats(X, bald_eagle) :- chases(X, cat).",
        "description": "If someone chases the cat then they eat the bald eagle."
    },
    {
        "id": 14678,
        "statement": "chases(X, rabbit) :- eats(X, rabbit), eats(rabbit, cow).",
        "description": "If someone eats the rabbit and the rabbit eats the cow then they chase the rabbit."
    },
    {
        "id": 14679,
        "statement": "chases(cow, rabbit) :- needs(X, cow).",
        "description": "If someone needs the cow then the cow chases the rabbit."
    },
    {
        "id": 14680,
        "statement": "eats(cat, rabbit) :- chases(X, cat).",
        "description": "If someone chases the cat then the cat eats the rabbit."
    },
    {
        "id": 14681,
        "statement": "needs(X, rabbit) :- chases(X, rabbit).",
        "description": "If someone chases the rabbit then they need the rabbit."
    },
    {
        "id": 14682,
        "statement": "is(bald_eagle, round) :- likes(bald_eagle, squirrel), likes(squirrel, bear).",
        "description": "If the bald eagle likes the squirrel and the squirrel likes the bear then the bald eagle is round."
    },
    {
        "id": 14683,
        "statement": "likes(X, squirrel) :- needs(X, lion), eats(X, squirrel).",
        "description": "If someone needs the lion and they eat the squirrel then they like the squirrel."
    },
    {
        "id": 14684,
        "statement": "is(bald_eagle, blue) :- is(X, round), likes(X, bald_eagle).",
        "description": "If someone is round and they like the bald eagle then the bald eagle is blue."
    },
    {
        "id": 14685,
        "statement": "eats(X, lion) :- eats(X, squirrel).",
        "description": "If someone eats the squirrel then they eat the lion."
    },
    {
        "id": 14686,
        "statement": "eats(X, bear) :- is(X, blue), eats(X, squirrel).",
        "description": "If someone is blue and they eat the squirrel then they eat the bear."
    },
    {
        "id": 14687,
        "statement": "likes(squirrel, bear) :- needs(X, bear), eats(X, squirrel).",
        "description": "If someone needs the bear and they eat the squirrel then the squirrel likes the bear."
    },
    {
        "id": 14688,
        "statement": "eats(X, squirrel) :- needs(X, squirrel).",
        "description": "If someone needs the squirrel then they eat the squirrel."
    },
    {
        "id": 14689,
        "statement": "needs(bald_eagle, bear) :- visits(bald_eagle, tiger), needs(bald_eagle, lion).",
        "description": "If the bald eagle visits the tiger and the bald eagle needs the lion then the bald eagle needs the bear."
    },
    {
        "id": 14690,
        "statement": "visits(tiger, lion) :- visits(X, tiger), is(X, blue).",
        "description": "If something visits the tiger and it is blue then the tiger visits the lion."
    },
    {
        "id": 14691,
        "statement": "is(X, round) :- visits(X, lion).",
        "description": "If something visits the lion then it is round."
    },
    {
        "id": 14692,
        "statement": "needs(bear, bald_eagle) :- likes(lion, bear).",
        "description": "If the lion likes the bear then the bear needs the bald eagle."
    },
    {
        "id": 14693,
        "statement": "is(tiger, big) :- likes(bald_eagle, tiger), likes(tiger, bald_eagle).",
        "description": "If the bald eagle likes the tiger and the tiger likes the bald eagle then the tiger is big."
    },
    {
        "id": 14694,
        "statement": "is(X, blue) :- needs(X, bear).",
        "description": "If something needs the bear then it is blue."
    },
    {
        "id": 14695,
        "statement": "is(X, nice) :- is(X, cold), is(X, blue).",
        "description": "All cold, blue people are nice."
    },
    {
        "id": 14696,
        "statement": "chases(rabbit, bear) :- chases(dog, rabbit), sees(rabbit, squirrel).",
        "description": "If the dog chases the rabbit and the rabbit sees the squirrel then the rabbit chases the bear."
    },
    {
        "id": 14697,
        "statement": "sees(X, squirrel) :- is(X, blue), is(X, nice).",
        "description": "If someone is blue and nice then they see the squirrel."
    },
    {
        "id": 14698,
        "statement": "needs(X, bear) :- chases(X, squirrel).",
        "description": "If someone chases the squirrel then they need the bear."
    },
    {
        "id": 14699,
        "statement": "sees(X, dog) :- sees(X, squirrel).",
        "description": "If someone sees the squirrel then they see the dog."
    },
    {
        "id": 14700,
        "statement": "is(squirrel, cold) :- chases(X, squirrel).",
        "description": "If someone chases the squirrel then the squirrel is cold."
    },
    {
        "id": 14701,
        "statement": "is(mouse, green) :- sees(mouse, dog), chases(mouse, dog).",
        "description": "If the mouse sees the dog and the mouse chases the dog then the mouse is green."
    },
    {
        "id": 14702,
        "statement": "is(X, rough) :- is(X, big), chases(X, mouse).",
        "description": "If someone is big and they chase the mouse then they are rough."
    },
    {
        "id": 14703,
        "statement": "chases(rabbit, dog) :- sees(X, dog), eats(dog, rabbit).",
        "description": "If someone sees the dog and the dog eats the rabbit then the rabbit chases the dog."
    },
    {
        "id": 14704,
        "statement": "eats(X, mouse) :- is(X, green).",
        "description": "If someone is green then they eat the mouse."
    },
    {
        "id": 14705,
        "statement": "chases(X, dog) :- is(X, cold).",
        "description": "If someone is cold then they chase the dog."
    },
    {
        "id": 14706,
        "statement": "chases(X, mouse) :- eats(X, mouse).",
        "description": "If someone eats the mouse then they chase the mouse."
    },
    {
        "id": 14707,
        "statement": "is(X, green) :- sees(X, rabbit).",
        "description": "If someone sees the rabbit then they are green."
    },
    {
        "id": 14708,
        "statement": "is(mouse, green) :- eats(bear, mouse).",
        "description": "If the bear eats the mouse then the mouse is green."
    },
    {
        "id": 14709,
        "statement": "sees(X, dog) :- eats(X, rabbit), chases(X, bear).",
        "description": "If someone eats the rabbit and they chase the bear then they see the dog."
    },
    {
        "id": 14710,
        "statement": "is(X, furry) :- is(X, green), is(X, big).",
        "description": "All green, big things are furry."
    },
    {
        "id": 14711,
        "statement": "is(X, furry) :- is(X, young), is(X, big).",
        "description": "All young, big things are furry."
    },
    {
        "id": 14712,
        "statement": "is(dave, rough) :- is(dave, furry), is(dave, young).",
        "description": "If Dave is furry and Dave is young then Dave is rough."
    },
    {
        "id": 14713,
        "statement": "is(X, rough) :- is(X, smart), not is(X, young).",
        "description": "If something is smart and not young then it is rough."
    },
    {
        "id": 14714,
        "statement": "is(anne, furry) :- is(anne, green), not is(anne, big).",
        "description": "If Anne is green and Anne is not big then Anne is furry."
    },
    {
        "id": 14715,
        "statement": "is(charlie, furry) :- is(charlie, green), is(charlie, young).",
        "description": "If Charlie is green and Charlie is young then Charlie is furry."
    },
    {
        "id": 14716,
        "statement": "is(X, young) :- is(X, green), is(X, round).",
        "description": "If someone is green and round then they are young."
    },
    {
        "id": 14717,
        "statement": "is(X, cold) :- is(X, red), is(X, round).",
        "description": "If someone is red and round then they are cold."
    },
    {
        "id": 14718,
        "statement": "is(X, cold) :- is(X, green), not is(X, furry).",
        "description": "If someone is green and not furry then they are cold."
    },
    {
        "id": 14719,
        "statement": "is(X, young) :- chases(X, cat).",
        "description": "If something chases the cat then it is young."
    },
    {
        "id": 14720,
        "statement": "visits(cow, tiger) :- visits(X, cow).",
        "description": "If something visits the cow then the cow visits the tiger."
    },
    {
        "id": 14721,
        "statement": "chases(X, cow) :- is(X, kind), is(X, young).",
        "description": "If something is kind and young then it chases the cow."
    },
    {
        "id": 14722,
        "statement": "visits(cat, tiger) :- chases(X, cat).",
        "description": "If something chases the cat then the cat visits the tiger."
    },
    {
        "id": 14723,
        "statement": "chases(X, bald_eagle) :- sees(X, tiger), not is(tiger, red).",
        "description": "If something sees the tiger and the tiger is not red then it chases the bald eagle."
    },
    {
        "id": 14724,
        "statement": "chases(X, cat) :- visits(X, tiger).",
        "description": "If something visits the tiger then it chases the cat."
    },
    {
        "id": 14725,
        "statement": "sees(bald_eagle, cow) :- visits(tiger, bald_eagle), not chases(tiger, bald_eagle).",
        "description": "If the tiger visits the bald eagle and the tiger does not chase the bald eagle then the bald eagle sees the cow."
    },
    {
        "id": 14726,
        "statement": "is(X, smart) :- is(X, furry), is(X, nice).",
        "description": "All furry, nice people are smart."
    },
    {
        "id": 14727,
        "statement": "is(X, round) :- is(X, quiet), is(X, kind).",
        "description": "Quiet, kind people are round."
    },
    {
        "id": 14728,
        "statement": "is(X, kind) :- is(X, nice), is(X, smart).",
        "description": "Nice, smart people are kind."
    },
    {
        "id": 14729,
        "statement": "is(X, rough) :- is(X, kind), is(X, quiet).",
        "description": "If someone is kind and quiet then they are rough."
    },
    {
        "id": 14730,
        "statement": "is(X, kind) :- is(X, quiet), is(X, rough).",
        "description": "All quiet, rough people are kind."
    },
    {
        "id": 14731,
        "statement": "chases(mouse, tiger) :- is(X, rough), likes(X, mouse).",
        "description": "If someone is rough and they like the mouse then the mouse chases the tiger."
    },
    {
        "id": 14732,
        "statement": "likes(tiger, dog) :- chases(mouse, tiger).",
        "description": "If the mouse chases the tiger then the tiger likes the dog."
    },
    {
        "id": 14733,
        "statement": "chases(X, tiger) :- likes(X, cat).",
        "description": "If someone likes the cat then they chase the tiger."
    },
    {
        "id": 14734,
        "statement": "is(tiger, big) :- needs(mouse, cat), likes(mouse, tiger).",
        "description": "If the mouse needs the cat and the mouse likes the tiger then the tiger is big."
    },
    {
        "id": 14735,
        "statement": "is(cat, kind) :- likes(X, cat).",
        "description": "If someone likes the cat then the cat is kind."
    },
    {
        "id": 14736,
        "statement": "is(dog, rough) :- is(X, big), needs(X, dog).",
        "description": "If someone is big and they need the dog then the dog is rough."
    },
    {
        "id": 14737,
        "statement": "sees(X, rabbit) :- eats(X, rabbit), is(X, rough).",
        "description": "If something eats the rabbit and it is rough then it sees the rabbit."
    },
    {
        "id": 14738,
        "statement": "likes(rabbit, dog) :- eats(X, rabbit), eats(rabbit, cow).",
        "description": "If something eats the rabbit and the rabbit eats the cow then the rabbit likes the dog."
    },
    {
        "id": 14739,
        "statement": "sees(cat, cow) :- is(cat, green).",
        "description": "If the cat is green then the cat sees the cow."
    },
    {
        "id": 14740,
        "statement": "likes(X, cat) :- is(X, green).",
        "description": "If something is green then it likes the cat."
    },
    {
        "id": 14741,
        "statement": "is(X, green) :- likes(X, dog).",
        "description": "If something likes the dog then it is green."
    },
    {
        "id": 14742,
        "statement": "is(cat, green) :- eats(X, cat).",
        "description": "If something eats the cat then the cat is green."
    },
    {
        "id": 14743,
        "statement": "eats(tiger, cow) :- is(X, young), likes(X, tiger).",
        "description": "If someone is young and they like the tiger then the tiger eats the cow."
    },
    {
        "id": 14744,
        "statement": "likes(X, cow) :- likes(X, squirrel).",
        "description": "If someone likes the squirrel then they like the cow."
    },
    {
        "id": 14745,
        "statement": "is(squirrel, nice) :- likes(X, bear), eats(X, squirrel).",
        "description": "If someone likes the bear and they eat the squirrel then the squirrel is nice."
    },
    {
        "id": 14746,
        "statement": "eats(X, cow) :- is(X, big), is(X, young).",
        "description": "If someone is big and young then they eat the cow."
    },
    {
        "id": 14747,
        "statement": "likes(X, squirrel) :- eats(X, cow).",
        "description": "If someone eats the cow then they like the squirrel."
    },
    {
        "id": 14748,
        "statement": "is(X, big) :- likes(X, bear).",
        "description": "If someone likes the bear then they are big."
    },
    {
        "id": 14749,
        "statement": "is(X, smart) :- is(X, round), is(X, cold).",
        "description": "Round, cold things are smart."
    },
    {
        "id": 14750,
        "statement": "is(gary, cold) :- is(gary, rough), is(gary, round).",
        "description": "If Gary is rough and Gary is round then Gary is cold."
    },
    {
        "id": 14751,
        "statement": "likes(mouse, cow) :- is(X, red), needs(X, mouse).",
        "description": "If something is red and it needs the mouse then the mouse likes the cow."
    },
    {
        "id": 14752,
        "statement": "sees(X, cat) :- needs(X, mouse).",
        "description": "If something needs the mouse then it sees the cat."
    },
    {
        "id": 14753,
        "statement": "likes(cow, cat) :- likes(X, cow), needs(X, cow).",
        "description": "If something likes the cow and it needs the cow then the cow likes the cat."
    },
    {
        "id": 14754,
        "statement": "is(mouse, red) :- needs(cow, mouse).",
        "description": "If the cow needs the mouse then the mouse is red."
    },
    {
        "id": 14755,
        "statement": "needs(X, cow) :- sees(X, mouse).",
        "description": "If something sees the mouse then it needs the cow."
    },
    {
        "id": 14756,
        "statement": "is(X, green) :- sees(X, bear).",
        "description": "If someone sees the bear then they are green."
    },
    {
        "id": 14757,
        "statement": "likes(lion, dog) :- likes(X, lion), is(lion, big).",
        "description": "If someone likes the lion and the lion is big then the lion likes the dog."
    },
    {
        "id": 14758,
        "statement": "sees(X, squirrel) :- needs(X, squirrel), is(X, green).",
        "description": "If someone needs the squirrel and they are green then they see the squirrel."
    },
    {
        "id": 14759,
        "statement": "sees(squirrel, bear) :- sees(squirrel, dog).",
        "description": "If the squirrel sees the dog then the squirrel sees the bear."
    },
    {
        "id": 14760,
        "statement": "likes(lion, bear) :- sees(X, lion).",
        "description": "If someone sees the lion then the lion likes the bear."
    },
    {
        "id": 14761,
        "statement": "likes(X, lion) :- likes(X, bear).",
        "description": "If someone likes the bear then they like the lion."
    },
    {
        "id": 14762,
        "statement": "is(X, furry) :- is(X, quiet), is(X, blue).",
        "description": "If something is quiet and blue then it is furry."
    },
    {
        "id": 14763,
        "statement": "is(dave, blue) :- is(dave, rough), is(dave, quiet).",
        "description": "If Dave is rough and Dave is quiet then Dave is blue."
    },
    {
        "id": 14764,
        "statement": "is(X, big) :- is(X, furry), is(X, rough).",
        "description": "If something is furry and rough then it is big."
    },
    {
        "id": 14765,
        "statement": "is(cat, round) :- is(X, young), visits(X, cat).",
        "description": "If something is young and it visits the cat then the cat is round."
    },
    {
        "id": 14766,
        "statement": "visits(tiger, cow) :- visits(X, tiger), likes(X, cat).",
        "description": "If something visits the tiger and it likes the cat then the tiger visits the cow."
    },
    {
        "id": 14767,
        "statement": "visits(X, cow) :- is(X, young).",
        "description": "If something is young then it visits the cow."
    },
    {
        "id": 14768,
        "statement": "needs(lion, cow) :- chases(X, lion), is(lion, nice).",
        "description": "If someone chases the lion and the lion is nice then the lion needs the cow."
    },
    {
        "id": 14769,
        "statement": "chases(X, bald_eagle) :- needs(X, lion), is(X, red).",
        "description": "If someone needs the lion and they are red then they chase the bald eagle."
    },
    {
        "id": 14770,
        "statement": "chases(bald_eagle, lion) :- is(X, round), chases(X, bald_eagle).",
        "description": "If someone is round and they chase the bald eagle then the bald eagle chases the lion."
    },
    {
        "id": 14771,
        "statement": "is(squirrel, red) :- needs(X, bald_eagle), chases(X, squirrel).",
        "description": "If someone needs the bald eagle and they chase the squirrel then the squirrel is red."
    },
    {
        "id": 14772,
        "statement": "is(lion, kind) :- is(X, red), eats(X, lion).",
        "description": "If someone is red and they eat the lion then the lion is kind."
    },
    {
        "id": 14773,
        "statement": "is(squirrel, green) :- needs(X, squirrel), eats(squirrel, bald_eagle).",
        "description": "If someone needs the squirrel and the squirrel eats the bald eagle then the squirrel is green."
    },
    {
        "id": 14774,
        "statement": "needs(X, mouse) :- visits(X, bald_eagle).",
        "description": "If someone visits the bald eagle then they need the mouse."
    },
    {
        "id": 14775,
        "statement": "needs(X, squirrel) :- needs(X, mouse).",
        "description": "If someone needs the mouse then they need the squirrel."
    },
    {
        "id": 14776,
        "statement": "visits(lion, bald_eagle) :- visits(X, lion), visits(X, squirrel).",
        "description": "If someone visits the lion and they visit the squirrel then the lion visits the bald eagle."
    },
    {
        "id": 14777,
        "statement": "visits(squirrel, bald_eagle) :- is(X, young), visits(X, squirrel).",
        "description": "If someone is young and they visit the squirrel then the squirrel visits the bald eagle."
    },
    {
        "id": 14778,
        "statement": "is(X, white) :- is(X, round), is(X, quiet).",
        "description": "All round, quiet things are white."
    },
    {
        "id": 14779,
        "statement": "is(gary, white) :- is(gary, cold), is(gary, young).",
        "description": "If Gary is cold and Gary is young then Gary is white."
    },
    {
        "id": 14780,
        "statement": "is(X, smart) :- is(X, white), is(X, cold).",
        "description": "White, cold things are smart."
    },
    {
        "id": 14781,
        "statement": "is(X, red) :- is(X, nice), is(X, quiet).",
        "description": "Nice, quiet things are red."
    },
    {
        "id": 14782,
        "statement": "is(X, nice) :- is(X, kind), is(X, blue).",
        "description": "If something is kind and blue then it is nice."
    },
    {
        "id": 14783,
        "statement": "is(X, nice) :- is(X, rough), is(X, white).",
        "description": "If someone is rough and white then they are nice."
    },
    {
        "id": 14784,
        "statement": "is(X, white) :- is(X, nice), is(X, rough).",
        "description": "All nice, rough people are white."
    },
    {
        "id": 14785,
        "statement": "eats(cat, bear) :- is(X, blue), visits(X, cat).",
        "description": "If something is blue and it visits the cat then the cat eats the bear."
    },
    {
        "id": 14786,
        "statement": "is(cat, rough) :- is(lion, blue), visits(lion, cat).",
        "description": "If the lion is blue and the lion visits the cat then the cat is rough."
    },
    {
        "id": 14787,
        "statement": "likes(X, cat) :- eats(X, dog).",
        "description": "If something eats the dog then it likes the cat."
    },
    {
        "id": 14788,
        "statement": "visits(X, cat) :- is(X, big), not likes(X, bear).",
        "description": "If something is big and it does not like the bear then it visits the cat."
    },
    {
        "id": 14789,
        "statement": "visits(X, cat) :- is(X, blue).",
        "description": "If something is blue then it visits the cat."
    },
    {
        "id": 14790,
        "statement": "likes(X, dog) :- eats(X, cat), not eats(X, dog).",
        "description": "If something eats the cat and it does not eat the dog then it likes the dog."
    },
    {
        "id": 14791,
        "statement": "likes(X, dog) :- visits(X, lion).",
        "description": "If something visits the lion then it likes the dog."
    },
    {
        "id": 14792,
        "statement": "eats(X, cat) :- eats(X, bear), is(bear, blue).",
        "description": "If something eats the bear and the bear is blue then it eats the cat."
    },
    {
        "id": 14793,
        "statement": "is(bear, blue) :- not likes(bear, lion).",
        "description": "If the bear does not like the lion then the bear is blue."
    },
    {
        "id": 14794,
        "statement": "sees(bear, cat) :- sees(X, bear), is(bear, red).",
        "description": "If someone sees the bear and the bear is red then the bear sees the cat."
    },
    {
        "id": 14795,
        "statement": "likes(cat, squirrel) :- sees(X, cat).",
        "description": "If someone sees the cat then the cat likes the squirrel."
    },
    {
        "id": 14796,
        "statement": "is(bear, red) :- is(X, blue), sees(X, bear).",
        "description": "If someone is blue and they see the bear then the bear is red."
    },
    {
        "id": 14797,
        "statement": "is(squirrel, blue) :- sees(X, squirrel), not eats(X, dog).",
        "description": "If someone sees the squirrel and they do not eat the dog then the squirrel is blue."
    },
    {
        "id": 14798,
        "statement": "is(cat, blue) :- eats(bear, cat), is(cat, rough).",
        "description": "If the bear eats the cat and the cat is rough then the cat is blue."
    },
    {
        "id": 14799,
        "statement": "is(X, big) :- eats(X, squirrel), sees(X, squirrel).",
        "description": "If someone eats the squirrel and they see the squirrel then they are big."
    },
    {
        "id": 14800,
        "statement": "sees(X, cat) :- likes(X, squirrel), sees(X, dog).",
        "description": "If someone likes the squirrel and they see the dog then they see the cat."
    },
    {
        "id": 14801,
        "statement": "is(X, nice) :- is(X, smart), is(X, green).",
        "description": "All smart, green people are nice."
    },
    {
        "id": 14802,
        "statement": "is(X, smart) :- is(X, nice).",
        "description": "If someone is nice then they are smart."
    },
    {
        "id": 14803,
        "statement": "is(fiona, cold) :- is(fiona, smart), is(fiona, nice).",
        "description": "If Fiona is smart and Fiona is nice then Fiona is cold."
    },
    {
        "id": 14804,
        "statement": "visits(X, lion) :- sees(X, cow).",
        "description": "If someone sees the cow then they visit the lion."
    },
    {
        "id": 14805,
        "statement": "visits(X, lion) :- is(X, blue), likes(X, lion).",
        "description": "If someone is blue and they like the lion then they visit the lion."
    },
    {
        "id": 14806,
        "statement": "visits(X, rabbit) :- likes(X, cow).",
        "description": "If someone likes the cow then they visit the rabbit."
    },
    {
        "id": 14807,
        "statement": "likes(bear, cow) :- likes(X, bear).",
        "description": "If someone likes the bear then the bear likes the cow."
    },
    {
        "id": 14808,
        "statement": "likes(lion, rabbit) :- visits(X, lion), is(X, rough).",
        "description": "If someone visits the lion and they are rough then the lion likes the rabbit."
    },
    {
        "id": 14809,
        "statement": "likes(X, lion) :- visits(X, lion), likes(X, rabbit).",
        "description": "If someone visits the lion and they like the rabbit then they like the lion."
    },
    {
        "id": 14810,
        "statement": "sees(X, cow) :- visits(X, rabbit), visits(rabbit, bear).",
        "description": "If someone visits the rabbit and the rabbit visits the bear then they see the cow."
    },
    {
        "id": 14811,
        "statement": "likes(cow, lion) :- sees(X, cow).",
        "description": "If someone sees the cow then the cow likes the lion."
    },
    {
        "id": 14812,
        "statement": "visits(bear, cat) :- visits(bear, cow), is(bear, green).",
        "description": "If the bear visits the cow and the bear is green then the bear visits the cat."
    },
    {
        "id": 14813,
        "statement": "visits(cat, tiger) :- visits(X, cat).",
        "description": "If something visits the cat then the cat visits the tiger."
    },
    {
        "id": 14814,
        "statement": "sees(bear, cat) :- sees(X, bear).",
        "description": "If something sees the bear then the bear sees the cat."
    },
    {
        "id": 14815,
        "statement": "visits(X, cow) :- likes(X, cow), likes(cow, bear).",
        "description": "If something likes the cow and the cow likes the bear then it visits the cow."
    },
    {
        "id": 14816,
        "statement": "is(cat, red) :- visits(X, cat), not sees(cat, cow).",
        "description": "If something visits the cat and the cat does not see the cow then the cat is red."
    },
    {
        "id": 14817,
        "statement": "is(X, big) :- visits(X, cow).",
        "description": "If something visits the cow then it is big."
    },
    {
        "id": 14818,
        "statement": "is(X, green) :- is(X, big), sees(X, cat).",
        "description": "If something is big and it sees the cat then it is green."
    },
    {
        "id": 14819,
        "statement": "is(X, nice) :- is(X, smart), is(X, blue).",
        "description": "Smart, blue things are nice."
    },
    {
        "id": 14820,
        "statement": "is(erin, young) :- is(erin, nice), is(erin, big).",
        "description": "If Erin is nice and Erin is big then Erin is young."
    },
    {
        "id": 14821,
        "statement": "is(X, smart) :- is(X, blue), not is(X, cold).",
        "description": "If something is blue and not cold then it is smart."
    },
    {
        "id": 14822,
        "statement": "is(X, young) :- is(X, blue), not is(X, smart).",
        "description": "If something is blue and not smart then it is young."
    },
    {
        "id": 14823,
        "statement": "is(X, rough) :- likes(X, cow).",
        "description": "If someone likes the cow then they are rough."
    },
    {
        "id": 14824,
        "statement": "visits(bald_eagle, cow) :- likes(X, lion), visits(lion, bald_eagle).",
        "description": "If someone likes the lion and the lion visits the bald eagle then the bald eagle visits the cow."
    },
    {
        "id": 14825,
        "statement": "likes(mouse, cow) :- likes(X, mouse).",
        "description": "If someone likes the mouse then the mouse likes the cow."
    },
    {
        "id": 14826,
        "statement": "likes(cow, lion) :- chases(X, cow).",
        "description": "If someone chases the cow then the cow likes the lion."
    },
    {
        "id": 14827,
        "statement": "likes(cow, mouse) :- visits(X, cow).",
        "description": "If someone visits the cow then the cow likes the mouse."
    },
    {
        "id": 14828,
        "statement": "is(X, white) :- is(X, red), is(X, young).",
        "description": "Red, young people are white."
    },
    {
        "id": 14829,
        "statement": "is(X, smart) :- is(X, big), is(X, young).",
        "description": "All big, young people are smart."
    },
    {
        "id": 14830,
        "statement": "eats(mouse, bald_eagle) :- is(mouse, young).",
        "description": "If the mouse is young then the mouse eats the bald eagle."
    },
    {
        "id": 14831,
        "statement": "eats(X, squirrel) :- chases(X, bald_eagle).",
        "description": "If someone chases the bald eagle then they eat the squirrel."
    },
    {
        "id": 14832,
        "statement": "eats(lion, mouse) :- chases(X, lion), eats(X, lion).",
        "description": "If someone chases the lion and they eat the lion then the lion eats the mouse."
    },
    {
        "id": 14833,
        "statement": "eats(lion, squirrel) :- is(X, young), eats(X, lion).",
        "description": "If someone is young and they eat the lion then the lion eats the squirrel."
    },
    {
        "id": 14834,
        "statement": "eats(lion, mouse) :- sees(lion, bald_eagle).",
        "description": "If the lion sees the bald eagle then the lion eats the mouse."
    },
    {
        "id": 14835,
        "statement": "chases(mouse, bald_eagle) :- eats(mouse, squirrel).",
        "description": "If the mouse eats the squirrel then the mouse chases the bald eagle."
    },
    {
        "id": 14836,
        "statement": "is(dave, white) :- is(dave, red).",
        "description": "If Dave is red then Dave is white."
    },
    {
        "id": 14837,
        "statement": "is(X, rough) :- is(X, quiet), not is(X, nice).",
        "description": "If something is quiet and not nice then it is rough."
    },
    {
        "id": 14838,
        "statement": "sees(X, tiger) :- is(X, nice), is(X, rough).",
        "description": "If something is nice and rough then it sees the tiger."
    },
    {
        "id": 14839,
        "statement": "is(bald_eagle, nice) :- is(bald_eagle, green).",
        "description": "If the bald eagle is green then the bald eagle is nice."
    },
    {
        "id": 14840,
        "statement": "sees(tiger, bear) :- visits(X, cow), chases(cow, tiger).",
        "description": "If something visits the cow and the cow chases the tiger then the tiger sees the bear."
    },
    {
        "id": 14841,
        "statement": "is(X, nice) :- is(X, round), is(X, rough).",
        "description": "Round, rough things are nice."
    },
    {
        "id": 14842,
        "statement": "is(X, green) :- chases(X, tiger).",
        "description": "If something chases the tiger then it is green."
    },
    {
        "id": 14843,
        "statement": "is(tiger, cold) :- sees(X, tiger).",
        "description": "If something sees the tiger then the tiger is cold."
    },
    {
        "id": 14844,
        "statement": "sees(bear, bald_eagle) :- sees(X, bear).",
        "description": "If something sees the bear then the bear sees the bald eagle."
    },
    {
        "id": 14845,
        "statement": "visits(X, bald_eagle) :- is(X, green).",
        "description": "If something is green then it visits the bald eagle."
    },
    {
        "id": 14846,
        "statement": "eats(lion, rabbit) :- needs(lion, rabbit).",
        "description": "If the lion needs the rabbit then the lion eats the rabbit."
    },
    {
        "id": 14847,
        "statement": "is(squirrel, kind) :- needs(X, squirrel).",
        "description": "If something needs the squirrel then the squirrel is kind."
    },
    {
        "id": 14848,
        "statement": "eats(rabbit, lion) :- eats(rabbit, squirrel), likes(rabbit, squirrel).",
        "description": "If the rabbit eats the squirrel and the rabbit likes the squirrel then the rabbit eats the lion."
    },
    {
        "id": 14849,
        "statement": "needs(X, squirrel) :- eats(X, rabbit).",
        "description": "If something eats the rabbit then it needs the squirrel."
    },
    {
        "id": 14850,
        "statement": "is(X, furry) :- is(X, nice), is(X, young).",
        "description": "Nice, young things are furry."
    },
    {
        "id": 14851,
        "statement": "is(dave, round) :- is(dave, nice), is(dave, white).",
        "description": "If Dave is nice and Dave is white then Dave is round."
    },
    {
        "id": 14852,
        "statement": "is(X, kind) :- is(X, round), is(X, smart).",
        "description": "Round, smart things are kind."
    },
    {
        "id": 14853,
        "statement": "is(harry, smart) :- is(harry, nice).",
        "description": "If Harry is nice then Harry is smart."
    },
    {
        "id": 14854,
        "statement": "is(X, kind) :- is(X, rough), is(X, smart).",
        "description": "Rough, smart things are kind."
    },
    {
        "id": 14855,
        "statement": "is(X, rough) :- is(X, blue), is(X, smart).",
        "description": "Blue, smart things are rough."
    },
    {
        "id": 14856,
        "statement": "is(X, rough) :- is(X, smart), not is(X, big).",
        "description": "If something is smart and not big then it is rough."
    },
    {
        "id": 14857,
        "statement": "sees(X, bear) :- likes(X, mouse), is(X, blue).",
        "description": "If someone likes the mouse and they are blue then they see the bear."
    },
    {
        "id": 14858,
        "statement": "sees(mouse, rabbit) :- is(mouse, cold), not is(mouse, red).",
        "description": "If the mouse is cold and the mouse is not red then the mouse sees the rabbit."
    },
    {
        "id": 14859,
        "statement": "likes(mouse, rabbit) :- sees(X, bear), likes(bear, mouse).",
        "description": "If someone sees the bear and the bear likes the mouse then the mouse likes the rabbit."
    },
    {
        "id": 14860,
        "statement": "eats(bear, rabbit) :- sees(X, rabbit), eats(rabbit, bear).",
        "description": "If someone sees the rabbit and the rabbit eats the bear then the bear eats the rabbit."
    },
    {
        "id": 14861,
        "statement": "likes(X, mouse) :- likes(X, rabbit).",
        "description": "If someone likes the rabbit then they like the mouse."
    },
    {
        "id": 14862,
        "statement": "likes(mouse, bald_eagle) :- sees(mouse, bear).",
        "description": "If the mouse sees the bear then the mouse likes the bald eagle."
    },
    {
        "id": 14863,
        "statement": "eats(X, cow) :- is(X, cold).",
        "description": "If someone is cold then they eat the cow."
    },
    {
        "id": 14864,
        "statement": "likes(lion, cow) :- eats(lion, tiger), eats(tiger, lion).",
        "description": "If the lion eats the tiger and the tiger eats the lion then the lion likes the cow."
    },
    {
        "id": 14865,
        "statement": "needs(cow, bear) :- is(X, red), eats(X, cow).",
        "description": "If someone is red and they eat the cow then the cow needs the bear."
    },
    {
        "id": 14866,
        "statement": "eats(bear, tiger) :- needs(cow, bear).",
        "description": "If the cow needs the bear then the bear eats the tiger."
    },
    {
        "id": 14867,
        "statement": "is(X, nice) :- visits(X, mouse), is(mouse, blue).",
        "description": "If someone visits the mouse and the mouse is blue then they are nice."
    },
    {
        "id": 14868,
        "statement": "visits(X, cow) :- visits(X, mouse).",
        "description": "If someone visits the mouse then they visit the cow."
    },
    {
        "id": 14869,
        "statement": "is(cow, nice) :- is(X, red), needs(X, cow).",
        "description": "If someone is red and they need the cow then the cow is nice."
    },
    {
        "id": 14870,
        "statement": "visits(X, bear) :- is(X, cold), is(X, nice).",
        "description": "If someone is cold and nice then they visit the bear."
    },
    {
        "id": 14871,
        "statement": "visits(bear, mouse) :- likes(X, bear).",
        "description": "If someone likes the bear then the bear visits the mouse."
    },
    {
        "id": 14872,
        "statement": "is(X, blue) :- likes(X, bear), likes(X, cow).",
        "description": "If someone likes the bear and they like the cow then they are blue."
    },
    {
        "id": 14873,
        "statement": "is(X, nice) :- is(X, rough), is(X, round).",
        "description": "All rough, round things are nice."
    },
    {
        "id": 14874,
        "statement": "is(X, blue) :- is(X, round), is(X, red).",
        "description": "All round, red things are blue."
    },
    {
        "id": 14875,
        "statement": "is(X, white) :- is(X, blue), is(X, nice).",
        "description": "Blue, nice things are white."
    },
    {
        "id": 14876,
        "statement": "is(X, white) :- is(X, furry), is(X, rough).",
        "description": "All furry, rough things are white."
    },
    {
        "id": 14877,
        "statement": "is(X, kind) :- is(X, big), is(X, round).",
        "description": "If something is big and round then it is kind."
    },
    {
        "id": 14878,
        "statement": "is(X, big) :- is(X, white), is(X, furry).",
        "description": "If something is white and furry then it is big."
    },
    {
        "id": 14879,
        "statement": "is(erin, furry) :- is(erin, kind).",
        "description": "If Erin is kind then Erin is furry."
    },
    {
        "id": 14880,
        "statement": "is(X, big) :- is(X, furry), is(X, white).",
        "description": "Furry, white things are big."
    },
    {
        "id": 14881,
        "statement": "is(X, rough) :- is(X, round), is(X, big).",
        "description": "Round, big things are rough."
    },
    {
        "id": 14882,
        "statement": "is(X, nice) :- is(X, smart), is(X, round).",
        "description": "If someone is smart and round then they are nice."
    },
    {
        "id": 14883,
        "statement": "is(X, smart) :- is(X, rough).",
        "description": "All rough people are smart."
    },
    {
        "id": 14884,
        "statement": "is(X, smart) :- is(X, nice), is(X, blue).",
        "description": "Nice, blue people are smart."
    },
    {
        "id": 14885,
        "statement": "is(X, kind) :- is(X, nice), is(X, rough).",
        "description": "All nice, rough people are kind."
    },
    {
        "id": 14886,
        "statement": "is(X, smart) :- is(X, kind), is(X, furry).",
        "description": "All kind, furry people are smart."
    },
    {
        "id": 14887,
        "statement": "is(X, rough) :- is(X, kind), is(X, round).",
        "description": "If someone is kind and round then they are rough."
    },
    {
        "id": 14888,
        "statement": "is(X, young) :- is(X, nice), is(X, kind).",
        "description": "All nice, kind people are young."
    },
    {
        "id": 14889,
        "statement": "is(fiona, young) :- is(fiona, furry), not is(fiona, white).",
        "description": "If Fiona is furry and Fiona is not white then Fiona is young."
    },
    {
        "id": 14890,
        "statement": "is(fiona, red) :- is(fiona, white), is(fiona, furry).",
        "description": "If Fiona is white and Fiona is furry then Fiona is red."
    },
    {
        "id": 14891,
        "statement": "is(X, furry) :- is(X, kind), is(X, young).",
        "description": "All kind, young people are furry."
    },
    {
        "id": 14892,
        "statement": "is(X, red) :- is(X, kind), is(X, round).",
        "description": "All kind, round people are red."
    },
    {
        "id": 14893,
        "statement": "is(X, red) :- is(X, nice), not is(X, round).",
        "description": "If someone is nice and not round then they are red."
    },
    {
        "id": 14894,
        "statement": "visits(X, bald_eagle) :- is(X, kind), sees(X, cow).",
        "description": "If something is kind and it sees the cow then it visits the bald eagle."
    },
    {
        "id": 14895,
        "statement": "sees(X, cow) :- is(X, kind).",
        "description": "If something is kind then it sees the cow."
    },
    {
        "id": 14896,
        "statement": "sees(X, bald_eagle) :- sees(X, cow), is(cow, cold).",
        "description": "If something sees the cow and the cow is cold then it sees the bald eagle."
    },
    {
        "id": 14897,
        "statement": "sees(bald_eagle, cow) :- visits(bald_eagle, squirrel), likes(bald_eagle, squirrel).",
        "description": "If the bald eagle visits the squirrel and the bald eagle likes the squirrel then the bald eagle sees the cow."
    },
    {
        "id": 14898,
        "statement": "is(bald_eagle, kind) :- visits(cow, bald_eagle).",
        "description": "If the cow visits the bald eagle then the bald eagle is kind."
    },
    {
        "id": 14899,
        "statement": "sees(cow, tiger) :- visits(X, cow).",
        "description": "If something visits the cow then the cow sees the tiger."
    },
    {
        "id": 14900,
        "statement": "sees(X, tiger) :- visits(X, cow).",
        "description": "If something visits the cow then it sees the tiger."
    },
    {
        "id": 14901,
        "statement": "visits(bald_eagle, cow) :- likes(squirrel, cow), not sees(squirrel, bald_eagle).",
        "description": "If the squirrel likes the cow and the squirrel does not see the bald eagle then the bald eagle visits the cow."
    },
    {
        "id": 14902,
        "statement": "is(X, cold) :- is(X, round), is(X, blue).",
        "description": "Round, blue things are cold."
    },
    {
        "id": 14903,
        "statement": "is(X, blue) :- is(X, big), is(X, furry).",
        "description": "If something is big and furry then it is blue."
    },
    {
        "id": 14904,
        "statement": "is(harry, big) :- is(harry, green), is(harry, kind).",
        "description": "If Harry is green and Harry is kind then Harry is big."
    },
    {
        "id": 14905,
        "statement": "is(X, blue) :- is(X, white), is(X, nice).",
        "description": "If something is white and nice then it is blue."
    },
    {
        "id": 14906,
        "statement": "is(X, white) :- is(X, nice), is(X, kind).",
        "description": "Nice, kind things are white."
    },
    {
        "id": 14907,
        "statement": "needs(bear, lion) :- needs(X, bear).",
        "description": "If someone needs the bear then the bear needs the lion."
    },
    {
        "id": 14908,
        "statement": "is(bear, green) :- eats(squirrel, bear), needs(squirrel, lion).",
        "description": "If the squirrel eats the bear and the squirrel needs the lion then the bear is green."
    },
    {
        "id": 14909,
        "statement": "needs(bald_eagle, bear) :- visits(X, bald_eagle).",
        "description": "If someone visits the bald eagle then the bald eagle needs the bear."
    },
    {
        "id": 14910,
        "statement": "needs(bald_eagle, squirrel) :- eats(X, bald_eagle), visits(bald_eagle, squirrel).",
        "description": "If someone eats the bald eagle and the bald eagle visits the squirrel then the bald eagle needs the squirrel."
    },
    {
        "id": 14911,
        "statement": "sees(bear, cat) :- chases(X, bear).",
        "description": "If something chases the bear then the bear sees the cat."
    },
    {
        "id": 14912,
        "statement": "chases(X, bear) :- sees(X, cat).",
        "description": "If something sees the cat then it chases the bear."
    },
    {
        "id": 14913,
        "statement": "sees(bald_eagle, bear) :- not is(bald_eagle, rough).",
        "description": "If the bald eagle is not rough then the bald eagle sees the bear."
    },
    {
        "id": 14914,
        "statement": "chases(X, lion) :- chases(X, bear).",
        "description": "If something chases the bear then it chases the lion."
    },
    {
        "id": 14915,
        "statement": "is(X, green) :- likes(X, lion).",
        "description": "If something likes the lion then it is green."
    },
    {
        "id": 14916,
        "statement": "is(X, big) :- is(X, kind), is(X, nice).",
        "description": "If someone is kind and nice then they are big."
    },
    {
        "id": 14917,
        "statement": "is(X, big) :- is(X, nice), is(X, quiet).",
        "description": "Nice, quiet people are big."
    },
    {
        "id": 14918,
        "statement": "is(X, nice) :- is(X, kind), is(X, big).",
        "description": "If someone is kind and big then they are nice."
    },
    {
        "id": 14919,
        "statement": "is(X, young) :- is(X, quiet), is(X, big).",
        "description": "If someone is quiet and big then they are young."
    },
    {
        "id": 14920,
        "statement": "is(X, red) :- is(X, kind), is(X, green).",
        "description": "Kind, green people are red."
    },
    {
        "id": 14921,
        "statement": "is(X, red) :- is(X, round), is(X, white).",
        "description": "Round, white people are red."
    },
    {
        "id": 14922,
        "statement": "is(X, kind) :- is(X, round), is(X, smart).",
        "description": "Round, smart people are kind."
    },
    {
        "id": 14923,
        "statement": "is(X, quiet) :- is(X, smart), is(X, white).",
        "description": "If someone is smart and white then they are quiet."
    },
    {
        "id": 14924,
        "statement": "is(gary, red) :- is(gary, cold).",
        "description": "If Gary is cold then Gary is red."
    },
    {
        "id": 14925,
        "statement": "is(X, cold) :- is(X, young), not is(X, quiet).",
        "description": "If someone is young and not quiet then they are cold."
    },
    {
        "id": 14926,
        "statement": "is(X, rough) :- is(X, smart), not is(X, young).",
        "description": "If someone is smart and not young then they are rough."
    },
    {
        "id": 14927,
        "statement": "is(X, quiet) :- is(X, furry), is(X, nice).",
        "description": "All furry, nice people are quiet."
    },
    {
        "id": 14928,
        "statement": "visits(X, cat) :- visits(X, dog).",
        "description": "If someone visits the dog then they visit the cat."
    },
    {
        "id": 14929,
        "statement": "eats(squirrel, rabbit) :- visits(X, squirrel).",
        "description": "If someone visits the squirrel then the squirrel eats the rabbit."
    },
    {
        "id": 14930,
        "statement": "sees(cat, dog) :- visits(X, cat), sees(X, rabbit).",
        "description": "If someone visits the cat and they see the rabbit then the cat sees the dog."
    },
    {
        "id": 14931,
        "statement": "sees(rabbit, cat) :- sees(squirrel, rabbit).",
        "description": "If the squirrel sees the rabbit then the rabbit sees the cat."
    },
    {
        "id": 14932,
        "statement": "sees(squirrel, cat) :- not eats(squirrel, rabbit).",
        "description": "If the squirrel does not eat the rabbit then the squirrel sees the cat."
    },
    {
        "id": 14933,
        "statement": "chases(mouse, rabbit) :- sees(X, mouse).",
        "description": "If someone sees the mouse then the mouse chases the rabbit."
    },
    {
        "id": 14934,
        "statement": "chases(X, mouse) :- is(X, green).",
        "description": "If someone is green then they chase the mouse."
    },
    {
        "id": 14935,
        "statement": "is(tiger, green) :- sees(squirrel, tiger), is(squirrel, red).",
        "description": "If the squirrel sees the tiger and the squirrel is red then the tiger is green."
    },
    {
        "id": 14936,
        "statement": "likes(mouse, squirrel) :- chases(X, mouse).",
        "description": "If someone chases the mouse then the mouse likes the squirrel."
    },
    {
        "id": 14937,
        "statement": "likes(mouse, squirrel) :- sees(X, mouse), likes(mouse, rabbit).",
        "description": "If someone sees the mouse and the mouse likes the rabbit then the mouse likes the squirrel."
    },
    {
        "id": 14938,
        "statement": "chases(mouse, rabbit) :- chases(X, mouse).",
        "description": "If someone chases the mouse then the mouse chases the rabbit."
    },
    {
        "id": 14939,
        "statement": "is(X, furry) :- is(X, white), is(X, blue).",
        "description": "White, blue things are furry."
    },
    {
        "id": 14940,
        "statement": "is(X, big) :- is(X, white), is(X, furry).",
        "description": "All white, furry things are big."
    },
    {
        "id": 14941,
        "statement": "is(fiona, furry) :- is(fiona, rough), not is(fiona, blue).",
        "description": "If Fiona is rough and Fiona is not blue then Fiona is furry."
    },
    {
        "id": 14942,
        "statement": "eats(bear, squirrel) :- sees(lion, squirrel), eats(squirrel, bear).",
        "description": "If the lion sees the squirrel and the squirrel eats the bear then the bear eats the squirrel."
    },
    {
        "id": 14943,
        "statement": "likes(dog, bear) :- eats(X, lion), not eats(lion, dog).",
        "description": "If something eats the lion and the lion does not eat the dog then the dog likes the bear."
    },
    {
        "id": 14944,
        "statement": "is(X, green) :- is(X, young), eats(X, squirrel).",
        "description": "If something is young and it eats the squirrel then it is green."
    },
    {
        "id": 14945,
        "statement": "sees(bear, lion) :- likes(X, bear), likes(bear, squirrel).",
        "description": "If something likes the bear and the bear likes the squirrel then the bear sees the lion."
    },
    {
        "id": 14946,
        "statement": "likes(bear, squirrel) :- sees(X, bear).",
        "description": "If something sees the bear then the bear likes the squirrel."
    },
    {
        "id": 14947,
        "statement": "is(X, cold) :- eats(X, bear).",
        "description": "If something eats the bear then it is cold."
    },
    {
        "id": 14948,
        "statement": "eats(lion, squirrel) :- sees(dog, squirrel), not sees(lion, dog).",
        "description": "If the dog sees the squirrel and the lion does not see the dog then the lion eats the squirrel."
    },
    {
        "id": 14949,
        "statement": "sees(X, mouse) :- is(X, cold), sees(X, squirrel).",
        "description": "If something is cold and it sees the squirrel then it sees the mouse."
    },
    {
        "id": 14950,
        "statement": "chases(cow, mouse) :- chases(squirrel, cow).",
        "description": "If the squirrel chases the cow then the cow chases the mouse."
    },
    {
        "id": 14951,
        "statement": "sees(squirrel, cow) :- not chases(mouse, squirrel).",
        "description": "If the mouse does not chase the squirrel then the squirrel sees the cow."
    },
    {
        "id": 14952,
        "statement": "is(X, young) :- eats(X, squirrel), sees(squirrel, cow).",
        "description": "If something eats the squirrel and the squirrel sees the cow then it is young."
    },
    {
        "id": 14953,
        "statement": "is(X, cold) :- eats(X, mouse).",
        "description": "If something eats the mouse then it is cold."
    },
    {
        "id": 14954,
        "statement": "is(X, green) :- is(X, kind), sees(X, mouse).",
        "description": "If something is kind and it sees the mouse then it is green."
    },
    {
        "id": 14955,
        "statement": "sees(X, squirrel) :- is(X, cold), is(X, young).",
        "description": "If something is cold and young then it sees the squirrel."
    },
    {
        "id": 14956,
        "statement": "likes(X, lion) :- is(X, cold).",
        "description": "If something is cold then it likes the lion."
    },
    {
        "id": 14957,
        "statement": "likes(lion, dog) :- likes(X, lion).",
        "description": "If something likes the lion then the lion likes the dog."
    },
    {
        "id": 14958,
        "statement": "is(X, cold) :- likes(X, dog).",
        "description": "If something likes the dog then it is cold."
    },
    {
        "id": 14959,
        "statement": "is(X, big) :- sees(X, dog), eats(dog, rabbit).",
        "description": "If something sees the dog and the dog eats the rabbit then it is big."
    },
    {
        "id": 14960,
        "statement": "is(dog, cold) :- likes(X, dog).",
        "description": "If something likes the dog then the dog is cold."
    },
    {
        "id": 14961,
        "statement": "is(X, red) :- sees(X, cat).",
        "description": "If something sees the cat then it is red."
    },
    {
        "id": 14962,
        "statement": "is(dog, big) :- is(X, red), likes(X, dog).",
        "description": "If something is red and it likes the dog then the dog is big."
    },
    {
        "id": 14963,
        "statement": "is(harry, furry) :- is(harry, blue), not is(harry, cold).",
        "description": "If Harry is blue and Harry is not cold then Harry is furry."
    },
    {
        "id": 14964,
        "statement": "is(harry, big) :- is(harry, nice), not is(harry, cold).",
        "description": "If Harry is nice and Harry is not cold then Harry is big."
    },
    {
        "id": 14965,
        "statement": "is(fiona, white) :- is(fiona, quiet).",
        "description": "If Fiona is quiet then Fiona is white."
    },
    {
        "id": 14966,
        "statement": "is(X, white) :- is(X, furry), is(X, red).",
        "description": "All furry, red people are white."
    },
    {
        "id": 14967,
        "statement": "is(X, quiet) :- is(X, white), is(X, smart).",
        "description": "White, smart people are quiet."
    },
    {
        "id": 14968,
        "statement": "is(X, kind) :- is(X, smart), is(X, blue).",
        "description": "Smart, blue people are kind."
    },
    {
        "id": 14969,
        "statement": "is(X, red) :- is(X, smart), is(X, young).",
        "description": "All smart, young people are red."
    },
    {
        "id": 14970,
        "statement": "is(fiona, cold) :- is(fiona, white), is(fiona, red).",
        "description": "If Fiona is white and Fiona is red then Fiona is cold."
    },
    {
        "id": 14971,
        "statement": "is(X, big) :- is(X, blue), is(X, quiet).",
        "description": "If something is blue and quiet then it is big."
    },
    {
        "id": 14972,
        "statement": "is(X, nice) :- is(X, green), is(X, round).",
        "description": "All green, round people are nice."
    },
    {
        "id": 14973,
        "statement": "is(X, green) :- is(X, young), is(X, nice).",
        "description": "All young, nice people are green."
    },
    {
        "id": 14974,
        "statement": "is(X, young) :- is(X, nice), is(X, quiet).",
        "description": "All nice, quiet people are young."
    },
    {
        "id": 14975,
        "statement": "is(X, nice) :- is(X, white), is(X, green).",
        "description": "If something is white and green then it is nice."
    },
    {
        "id": 14976,
        "statement": "is(X, blue) :- is(X, red), is(X, white).",
        "description": "If something is red and white then it is blue."
    },
    {
        "id": 14977,
        "statement": "is(cat, blue) :- likes(X, cat).",
        "description": "If something likes the cat then the cat is blue."
    },
    {
        "id": 14978,
        "statement": "likes(X, lion) :- chases(X, cat), is(cat, blue).",
        "description": "If something chases the cat and the cat is blue then it likes the lion."
    },
    {
        "id": 14979,
        "statement": "likes(dog, cat) :- chases(X, dog).",
        "description": "If something chases the dog then the dog likes the cat."
    },
    {
        "id": 14980,
        "statement": "is(X, round) :- is(X, blue), not is(X, rough).",
        "description": "If something is blue and not rough then it is round."
    },
    {
        "id": 14981,
        "statement": "likes(X, cat) :- is(X, round), not likes(X, dog).",
        "description": "If something is round and it does not like the dog then it likes the cat."
    },
    {
        "id": 14982,
        "statement": "is(X, red) :- eats(X, lion).",
        "description": "If something eats the lion then it is red."
    },
    {
        "id": 14983,
        "statement": "is(X, blue) :- chases(X, lion).",
        "description": "If something chases the lion then it is blue."
    },
    {
        "id": 14984,
        "statement": "eats(lion, cat) :- chases(X, dog), chases(dog, lion).",
        "description": "If something chases the dog and the dog chases the lion then the lion eats the cat."
    },
    {
        "id": 14985,
        "statement": "is(X, big) :- is(X, red), is(X, rough).",
        "description": "All red, rough things are big."
    },
    {
        "id": 14986,
        "statement": "is(X, round) :- is(X, smart), is(X, furry).",
        "description": "Smart, furry things are round."
    },
    {
        "id": 14987,
        "statement": "is(X, red) :- is(X, furry), is(X, big).",
        "description": "All furry, big things are red."
    },
    {
        "id": 14988,
        "statement": "is(erin, smart) :- is(erin, big), is(erin, young).",
        "description": "If Erin is big and Erin is young then Erin is smart."
    },
    {
        "id": 14989,
        "statement": "visits(X, rabbit) :- is(X, rough), sees(X, rabbit).",
        "description": "If someone is rough and they see the rabbit then they visit the rabbit."
    },
    {
        "id": 14990,
        "statement": "eats(X, tiger) :- is(X, round).",
        "description": "If someone is round then they eat the tiger."
    },
    {
        "id": 14991,
        "statement": "sees(X, cow) :- visits(X, rabbit), not is(X, nice).",
        "description": "If someone visits the rabbit and they are not nice then they see the cow."
    },
    {
        "id": 14992,
        "statement": "sees(X, rabbit) :- visits(X, tiger), eats(tiger, cow).",
        "description": "If someone visits the tiger and the tiger eats the cow then they see the rabbit."
    },
    {
        "id": 14993,
        "statement": "is(rabbit, rough) :- visits(tiger, rabbit), not eats(tiger, cow).",
        "description": "If the tiger visits the rabbit and the tiger does not eat the cow then the rabbit is rough."
    },
    {
        "id": 14994,
        "statement": "sees(cow, tiger) :- is(X, nice), not sees(X, cow).",
        "description": "If someone is nice and they do not see the cow then the cow sees the tiger."
    },
    {
        "id": 14995,
        "statement": "is(X, round) :- is(X, green), is(X, smart).",
        "description": "All green, smart things are round."
    },
    {
        "id": 14996,
        "statement": "is(harry, green) :- is(harry, rough), is(harry, white).",
        "description": "If Harry is rough and Harry is white then Harry is green."
    },
    {
        "id": 14997,
        "statement": "sees(squirrel, cow) :- needs(rabbit, squirrel).",
        "description": "If the rabbit needs the squirrel then the squirrel sees the cow."
    },
    {
        "id": 14998,
        "statement": "needs(X, squirrel) :- visits(X, rabbit).",
        "description": "If someone visits the rabbit then they need the squirrel."
    },
    {
        "id": 14999,
        "statement": "visits(X, rabbit) :- visits(X, cow).",
        "description": "If someone visits the cow then they visit the rabbit."
    },
    {
        "id": 15000,
        "statement": "is(X, kind) :- is(X, cold), is(X, round).",
        "description": "All cold, round people are kind."
    },
    {
        "id": 15001,
        "statement": "visits(X, rabbit) :- needs(X, lion), sees(lion, cow).",
        "description": "If someone needs the lion and the lion sees the cow then they visit the rabbit."
    },
    {
        "id": 15002,
        "statement": "needs(cow, lion) :- sees(X, cow), is(X, nice).",
        "description": "If someone sees the cow and they are nice then the cow needs the lion."
    },
    {
        "id": 15003,
        "statement": "needs(X, cow) :- is(X, blue), visits(X, rabbit).",
        "description": "If someone is blue and they visit the rabbit then they need the cow."
    },
    {
        "id": 15004,
        "statement": "is(X, nice) :- needs(X, squirrel).",
        "description": "If someone needs the squirrel then they are nice."
    },
    {
        "id": 15005,
        "statement": "sees(X, rabbit) :- needs(X, squirrel).",
        "description": "If someone needs the squirrel then they see the rabbit."
    },
    {
        "id": 15006,
        "statement": "is(X, white) :- is(X, furry), is(X, green).",
        "description": "Furry, green things are white."
    },
    {
        "id": 15007,
        "statement": "is(X, kind) :- is(X, green), is(X, white).",
        "description": "All green, white things are kind."
    },
    {
        "id": 15008,
        "statement": "is(X, big) :- is(X, kind), is(X, white).",
        "description": "If something is kind and white then it is big."
    },
    {
        "id": 15009,
        "statement": "is(harry, red) :- is(harry, green).",
        "description": "If Harry is green then Harry is red."
    },
    {
        "id": 15010,
        "statement": "is(X, round) :- is(X, white), is(X, furry).",
        "description": "All white, furry things are round."
    },
    {
        "id": 15011,
        "statement": "needs(squirrel, rabbit) :- is(X, rough), needs(X, squirrel).",
        "description": "If someone is rough and they need the squirrel then the squirrel needs the rabbit."
    },
    {
        "id": 15012,
        "statement": "chases(X, rabbit) :- is(X, round).",
        "description": "If someone is round then they chase the rabbit."
    },
    {
        "id": 15013,
        "statement": "needs(X, cat) :- chases(X, rabbit), is(X, kind).",
        "description": "If someone chases the rabbit and they are kind then they need the cat."
    },
    {
        "id": 15014,
        "statement": "chases(X, cat) :- is(X, kind).",
        "description": "If someone is kind then they chase the cat."
    },
    {
        "id": 15015,
        "statement": "is(cow, cold) :- is(cow, round).",
        "description": "If the cow is round then the cow is cold."
    },
    {
        "id": 15016,
        "statement": "needs(cat, rabbit) :- chases(X, cat).",
        "description": "If someone chases the cat then the cat needs the rabbit."
    },
    {
        "id": 15017,
        "statement": "chases(cat, cow) :- sees(X, cat), sees(X, cow).",
        "description": "If someone sees the cat and they see the cow then the cat chases the cow."
    },
    {
        "id": 15018,
        "statement": "is(X, nice) :- is(X, rough).",
        "description": "Rough people are nice."
    },
    {
        "id": 15019,
        "statement": "is(X, big) :- is(X, nice), not is(X, white).",
        "description": "If someone is nice and not white then they are big."
    },
    {
        "id": 15020,
        "statement": "is(anne, smart) :- is(anne, blue).",
        "description": "If Anne is blue then Anne is smart."
    },
    {
        "id": 15021,
        "statement": "is(X, furry) :- is(X, kind), not is(X, red).",
        "description": "If someone is kind and not red then they are furry."
    },
    {
        "id": 15022,
        "statement": "is(X, nice) :- is(X, blue), is(X, smart).",
        "description": "All blue, smart people are nice."
    },
    {
        "id": 15023,
        "statement": "is(anne, round) :- is(anne, rough), is(anne, white).",
        "description": "If Anne is rough and Anne is white then Anne is round."
    },
    {
        "id": 15024,
        "statement": "is(bob, green) :- is(bob, smart), is(bob, quiet).",
        "description": "If Bob is smart and Bob is quiet then Bob is green."
    },
    {
        "id": 15025,
        "statement": "is(bob, green) :- is(bob, white), is(bob, rough).",
        "description": "If Bob is white and Bob is rough then Bob is green."
    },
    {
        "id": 15026,
        "statement": "is(X, round) :- is(X, smart), is(X, quiet).",
        "description": "All smart, quiet people are round."
    },
    {
        "id": 15027,
        "statement": "is(bald_eagle, green) :- needs(X, bald_eagle).",
        "description": "If something needs the bald eagle then the bald eagle is green."
    },
    {
        "id": 15028,
        "statement": "sees(cat, dog) :- sees(bald_eagle, cat), needs(cat, bald_eagle).",
        "description": "If the bald eagle sees the cat and the cat needs the bald eagle then the cat sees the dog."
    },
    {
        "id": 15029,
        "statement": "needs(cat, bald_eagle) :- sees(X, cat), is(X, kind).",
        "description": "If something sees the cat and it is kind then the cat needs the bald eagle."
    },
    {
        "id": 15030,
        "statement": "is(bald_eagle, kind) :- is(bald_eagle, green).",
        "description": "If the bald eagle is green then the bald eagle is kind."
    },
    {
        "id": 15031,
        "statement": "needs(cat, dog) :- sees(X, cat).",
        "description": "If something sees the cat then the cat needs the dog."
    },
    {
        "id": 15032,
        "statement": "needs(dog, cat) :- sees(X, dog).",
        "description": "If something sees the dog then the dog needs the cat."
    },
    {
        "id": 15033,
        "statement": "is(X, round) :- is(X, green), is(X, smart).",
        "description": "Green, smart things are round."
    },
    {
        "id": 15034,
        "statement": "is(charlie, nice) :- is(charlie, round).",
        "description": "If Charlie is round then Charlie is nice."
    },
    {
        "id": 15035,
        "statement": "is(fiona, cold) :- is(fiona, kind), is(fiona, furry).",
        "description": "If Fiona is kind and Fiona is furry then Fiona is cold."
    },
    {
        "id": 15036,
        "statement": "is(X, furry) :- is(X, blue), is(X, red).",
        "description": "All blue, red things are furry."
    },
    {
        "id": 15037,
        "statement": "is(harry, nice) :- is(harry, furry), is(harry, kind).",
        "description": "If Harry is furry and Harry is kind then Harry is nice."
    },
    {
        "id": 15038,
        "statement": "is(X, furry) :- is(X, nice), is(X, smart).",
        "description": "Nice, smart things are furry."
    },
    {
        "id": 15039,
        "statement": "is(X, smart) :- is(X, round), is(X, furry).",
        "description": "If something is round and furry then it is smart."
    },
    {
        "id": 15040,
        "statement": "is(X, big) :- is(X, rough), is(X, furry).",
        "description": "All rough, furry things are big."
    },
    {
        "id": 15041,
        "statement": "is(X, kind) :- is(X, big), is(X, furry).",
        "description": "All big, furry things are kind."
    },
    {
        "id": 15042,
        "statement": "is(X, kind) :- is(X, smart), not is(X, nice).",
        "description": "If something is smart and not nice then it is kind."
    },
    {
        "id": 15043,
        "statement": "sees(cow, lion) :- sees(cow, rabbit), is(rabbit, cold).",
        "description": "If the cow sees the rabbit and the rabbit is cold then the cow sees the lion."
    },
    {
        "id": 15044,
        "statement": "is(cow, big) :- needs(X, cow), sees(X, squirrel).",
        "description": "If someone needs the cow and they see the squirrel then the cow is big."
    },
    {
        "id": 15045,
        "statement": "needs(squirrel, lion) :- sees(squirrel, lion).",
        "description": "If the squirrel sees the lion then the squirrel needs the lion."
    },
    {
        "id": 15046,
        "statement": "eats(X, lion) :- is(X, cold).",
        "description": "If someone is cold then they eat the lion."
    },
    {
        "id": 15047,
        "statement": "eats(X, squirrel) :- sees(X, squirrel).",
        "description": "If someone sees the squirrel then they eat the squirrel."
    },
    {
        "id": 15048,
        "statement": "sees(rabbit, squirrel) :- sees(X, rabbit), not eats(X, cow).",
        "description": "If someone sees the rabbit and they do not eat the cow then the rabbit sees the squirrel."
    },
    {
        "id": 15049,
        "statement": "is(rabbit, nice) :- needs(X, rabbit).",
        "description": "If someone needs the rabbit then the rabbit is nice."
    },
    {
        "id": 15050,
        "statement": "needs(lion, rabbit) :- eats(X, lion), eats(lion, squirrel).",
        "description": "If someone eats the lion and the lion eats the squirrel then the lion needs the rabbit."
    },
    {
        "id": 15051,
        "statement": "is(X, young) :- is(X, smart), not is(X, rough).",
        "description": "If someone is smart and not rough then they are young."
    },
    {
        "id": 15052,
        "statement": "is(X, nice) :- is(X, young), is(X, blue).",
        "description": "All young, blue people are nice."
    },
    {
        "id": 15053,
        "statement": "is(X, big) :- is(X, young), is(X, red).",
        "description": "If someone is young and red then they are big."
    },
    {
        "id": 15054,
        "statement": "is(X, smart) :- is(X, nice), is(X, red).",
        "description": "All nice, red people are smart."
    },
    {
        "id": 15055,
        "statement": "visits(mouse, dog) :- sees(X, mouse), is(mouse, rough).",
        "description": "If someone sees the mouse and the mouse is rough then the mouse visits the dog."
    },
    {
        "id": 15056,
        "statement": "eats(X, squirrel) :- visits(X, squirrel).",
        "description": "If someone visits the squirrel then they eat the squirrel."
    },
    {
        "id": 15057,
        "statement": "is(cat, green) :- visits(X, cat).",
        "description": "If someone visits the cat then the cat is green."
    },
    {
        "id": 15058,
        "statement": "visits(squirrel, cat) :- is(X, green), eats(X, squirrel).",
        "description": "If someone is green and they eat the squirrel then the squirrel visits the cat."
    },
    {
        "id": 15059,
        "statement": "visits(X, squirrel) :- is(X, green).",
        "description": "If someone is green then they visit the squirrel."
    },
    {
        "id": 15060,
        "statement": "is(X, white) :- is(X, green), is(X, red).",
        "description": "If someone is green and red then they are white."
    },
    {
        "id": 15061,
        "statement": "is(X, green) :- is(X, cold), is(X, rough).",
        "description": "Cold, rough things are green."
    },
    {
        "id": 15062,
        "statement": "is(X, cold) :- is(X, round), is(X, rough).",
        "description": "All round, rough things are cold."
    },
    {
        "id": 15063,
        "statement": "is(anne, white) :- is(anne, cold), is(anne, rough).",
        "description": "If Anne is cold and Anne is rough then Anne is white."
    },
    {
        "id": 15064,
        "statement": "is(anne, rough) :- is(anne, young), not is(anne, quiet).",
        "description": "If Anne is young and Anne is not quiet then Anne is rough."
    },
    {
        "id": 15065,
        "statement": "is(gary, green) :- is(gary, big).",
        "description": "If Gary is big then Gary is green."
    },
    {
        "id": 15066,
        "statement": "is(X, cold) :- is(X, big), not is(X, quiet).",
        "description": "If something is big and not quiet then it is cold."
    },
    {
        "id": 15067,
        "statement": "is(X, cold) :- is(X, big), is(X, young).",
        "description": "All big, young things are cold."
    },
    {
        "id": 15068,
        "statement": "is(X, big) :- is(X, blue), is(X, rough).",
        "description": "All blue, rough things are big."
    },
    {
        "id": 15069,
        "statement": "is(dave, green) :- is(dave, cold).",
        "description": "If Dave is cold then Dave is green."
    },
    {
        "id": 15070,
        "statement": "is(X, red) :- needs(X, cat).",
        "description": "If something needs the cat then it is red."
    },
    {
        "id": 15071,
        "statement": "is(rabbit, rough) :- visits(squirrel, rabbit).",
        "description": "If the squirrel visits the rabbit then the rabbit is rough."
    },
    {
        "id": 15072,
        "statement": "needs(rabbit, cat) :- chases(X, rabbit).",
        "description": "If something chases the rabbit then the rabbit needs the cat."
    },
    {
        "id": 15073,
        "statement": "chases(X, rabbit) :- is(X, red).",
        "description": "If something is red then it chases the rabbit."
    },
    {
        "id": 15074,
        "statement": "visits(squirrel, cat) :- not is(squirrel, nice).",
        "description": "If the squirrel is not nice then the squirrel visits the cat."
    },
    {
        "id": 15075,
        "statement": "needs(squirrel, cat) :- is(squirrel, red).",
        "description": "If the squirrel is red then the squirrel needs the cat."
    },
    {
        "id": 15076,
        "statement": "needs(mouse, cat) :- chases(squirrel, mouse).",
        "description": "If the squirrel chases the mouse then the mouse needs the cat."
    },
    {
        "id": 15077,
        "statement": "is(rabbit, young) :- likes(X, rabbit).",
        "description": "If someone likes the rabbit then the rabbit is young."
    },
    {
        "id": 15078,
        "statement": "eats(X, mouse) :- is(X, nice).",
        "description": "If someone is nice then they eat the mouse."
    },
    {
        "id": 15079,
        "statement": "eats(X, rabbit) :- is(X, young).",
        "description": "If someone is young then they eat the rabbit."
    },
    {
        "id": 15080,
        "statement": "likes(X, rabbit) :- likes(X, mouse).",
        "description": "If someone likes the mouse then they like the rabbit."
    },
    {
        "id": 15081,
        "statement": "is(X, nice) :- is(X, white), is(X, round).",
        "description": "If someone is white and round then they are nice."
    },
    {
        "id": 15082,
        "statement": "is(X, round) :- is(X, nice), is(X, young).",
        "description": "If someone is nice and young then they are round."
    },
    {
        "id": 15083,
        "statement": "is(charlie, red) :- is(charlie, young).",
        "description": "If Charlie is young then Charlie is red."
    },
    {
        "id": 15084,
        "statement": "sees(bald_eagle, dog) :- chases(X, bald_eagle).",
        "description": "If something chases the bald eagle then the bald eagle sees the dog."
    },
    {
        "id": 15085,
        "statement": "chases(X, mouse) :- chases(X, dog).",
        "description": "If something chases the dog then it chases the mouse."
    },
    {
        "id": 15086,
        "statement": "eats(cow, mouse) :- sees(X, cow), is(X, nice).",
        "description": "If something sees the cow and it is nice then the cow eats the mouse."
    },
    {
        "id": 15087,
        "statement": "eats(X, cow) :- sees(X, cow).",
        "description": "If something sees the cow then it eats the cow."
    },
    {
        "id": 15088,
        "statement": "eats(mouse, cow) :- sees(X, mouse).",
        "description": "If something sees the mouse then the mouse eats the cow."
    },
    {
        "id": 15089,
        "statement": "chases(dog, bald_eagle) :- sees(X, dog).",
        "description": "If something sees the dog then the dog chases the bald eagle."
    },
    {
        "id": 15090,
        "statement": "sees(X, dog) :- is(X, red), sees(X, cow).",
        "description": "If something is red and it sees the cow then it sees the dog."
    },
    {
        "id": 15091,
        "statement": "is(dog, round) :- chases(X, dog).",
        "description": "If something chases the dog then the dog is round."
    },
    {
        "id": 15092,
        "statement": "needs(X, mouse) :- sees(X, dog).",
        "description": "If something sees the dog then it needs the mouse."
    },
    {
        "id": 15093,
        "statement": "eats(mouse, dog) :- needs(X, mouse).",
        "description": "If something needs the mouse then the mouse eats the dog."
    },
    {
        "id": 15094,
        "statement": "eats(dog, rabbit) :- sees(mouse, dog).",
        "description": "If the mouse sees the dog then the dog eats the rabbit."
    },
    {
        "id": 15095,
        "statement": "is(X, blue) :- eats(X, rabbit).",
        "description": "If something eats the rabbit then it is blue."
    },
    {
        "id": 15096,
        "statement": "eats(X, rabbit) :- is(X, green), needs(X, mouse).",
        "description": "If something is green and it needs the mouse then it eats the rabbit."
    },
    {
        "id": 15097,
        "statement": "needs(X, cow) :- sees(X, rabbit), needs(X, dog).",
        "description": "If something sees the rabbit and it needs the dog then it needs the cow."
    },
    {
        "id": 15098,
        "statement": "chases(tiger, bear) :- needs(tiger, dog).",
        "description": "If the tiger needs the dog then the tiger chases the bear."
    },
    {
        "id": 15099,
        "statement": "chases(tiger, cow) :- needs(tiger, dog).",
        "description": "If the tiger needs the dog then the tiger chases the cow."
    },
    {
        "id": 15100,
        "statement": "is(X, red) :- eats(X, tiger), is(X, kind).",
        "description": "If someone eats the tiger and they are kind then they are red."
    },
    {
        "id": 15101,
        "statement": "eats(bear, cow) :- chases(bear, dog), eats(dog, bear).",
        "description": "If the bear chases the dog and the dog eats the bear then the bear eats the cow."
    },
    {
        "id": 15102,
        "statement": "eats(X, tiger) :- needs(X, bear).",
        "description": "If someone needs the bear then they eat the tiger."
    },
    {
        "id": 15103,
        "statement": "needs(tiger, bear) :- is(X, red), eats(X, tiger).",
        "description": "If someone is red and they eat the tiger then the tiger needs the bear."
    },
    {
        "id": 15104,
        "statement": "chases(X, dog) :- is(X, green), is(X, big).",
        "description": "If someone is green and big then they chase the dog."
    },
    {
        "id": 15105,
        "statement": "is(X, kind) :- chases(X, dog).",
        "description": "If someone chases the dog then they are kind."
    },
    {
        "id": 15106,
        "statement": "is(X, kind) :- eats(X, tiger).",
        "description": "If someone eats the tiger then they are kind."
    },
    {
        "id": 15107,
        "statement": "is(X, kind) :- is(X, white), is(X, round).",
        "description": "All white, round people are kind."
    },
    {
        "id": 15108,
        "statement": "is(X, round) :- is(X, smart), is(X, blue).",
        "description": "Smart, blue people are round."
    },
    {
        "id": 15109,
        "statement": "is(X, cold) :- visits(X, dog).",
        "description": "If someone visits the dog then they are cold."
    },
    {
        "id": 15110,
        "statement": "visits(X, tiger) :- is(X, cold), not is(X, round).",
        "description": "If someone is cold and not round then they visit the tiger."
    },
    {
        "id": 15111,
        "statement": "visits(X, tiger) :- sees(X, bear), sees(X, dog).",
        "description": "If someone sees the bear and they see the dog then they visit the tiger."
    },
    {
        "id": 15112,
        "statement": "visits(X, dog) :- is(X, blue), is(X, big).",
        "description": "If someone is blue and big then they visit the dog."
    },
    {
        "id": 15113,
        "statement": "sees(tiger, bear) :- visits(X, tiger).",
        "description": "If someone visits the tiger then the tiger sees the bear."
    },
    {
        "id": 15114,
        "statement": "chases(dog, tiger) :- sees(X, cow), sees(X, dog).",
        "description": "If someone sees the cow and they see the dog then the dog chases the tiger."
    },
    {
        "id": 15115,
        "statement": "sees(cow, bear) :- visits(X, dog), chases(X, cow).",
        "description": "If someone visits the dog and they chase the cow then the cow sees the bear."
    },
    {
        "id": 15116,
        "statement": "is(tiger, big) :- sees(X, tiger), not is(X, red).",
        "description": "If someone sees the tiger and they are not red then the tiger is big."
    },
    {
        "id": 15117,
        "statement": "sees(X, tiger) :- is(X, cold), is(X, big).",
        "description": "If someone is cold and big then they see the tiger."
    },
    {
        "id": 15118,
        "statement": "is(X, round) :- is(X, white), is(X, kind).",
        "description": "If someone is white and kind then they are round."
    },
    {
        "id": 15119,
        "statement": "is(X, furry) :- is(X, cold), is(X, kind).",
        "description": "If someone is cold and kind then they are furry."
    },
    {
        "id": 15120,
        "statement": "is(dave, young) :- is(dave, green), is(dave, white).",
        "description": "If Dave is green and Dave is white then Dave is young."
    },
    {
        "id": 15121,
        "statement": "is(X, big) :- is(X, young), is(X, round).",
        "description": "All young, round things are big."
    },
    {
        "id": 15122,
        "statement": "is(X, green) :- is(X, young), is(X, cold).",
        "description": "If something is young and cold then it is green."
    },
    {
        "id": 15123,
        "statement": "is(X, big) :- is(X, round), is(X, rough).",
        "description": "All round, rough things are big."
    },
    {
        "id": 15124,
        "statement": "is(X, rough) :- is(X, green), not is(X, cold).",
        "description": "If something is green and not cold then it is rough."
    },
    {
        "id": 15125,
        "statement": "is(X, young) :- is(X, quiet), is(X, big).",
        "description": "All quiet, big things are young."
    },
    {
        "id": 15126,
        "statement": "eats(X, mouse) :- sees(X, squirrel).",
        "description": "If something sees the squirrel then it eats the mouse."
    },
    {
        "id": 15127,
        "statement": "sees(X, bear) :- eats(X, mouse), chases(X, mouse).",
        "description": "If something eats the mouse and it chases the mouse then it sees the bear."
    },
    {
        "id": 15128,
        "statement": "eats(X, mouse) :- eats(X, cat), is(cat, cold).",
        "description": "If something eats the cat and the cat is cold then it eats the mouse."
    },
    {
        "id": 15129,
        "statement": "is(bear, big) :- sees(X, bear), sees(X, mouse).",
        "description": "If something sees the bear and it sees the mouse then the bear is big."
    },
    {
        "id": 15130,
        "statement": "sees(squirrel, mouse) :- chases(X, squirrel), sees(X, cat).",
        "description": "If something chases the squirrel and it sees the cat then the squirrel sees the mouse."
    },
    {
        "id": 15131,
        "statement": "chases(X, squirrel) :- is(X, big).",
        "description": "If something is big then it chases the squirrel."
    },
    {
        "id": 15132,
        "statement": "is(X, quiet) :- is(X, green), is(X, rough).",
        "description": "All green, rough people are quiet."
    },
    {
        "id": 15133,
        "statement": "visits(bald_eagle, cow) :- is(X, red), sees(X, bald_eagle).",
        "description": "If someone is red and they see the bald eagle then the bald eagle visits the cow."
    },
    {
        "id": 15134,
        "statement": "visits(mouse, lion) :- sees(X, mouse).",
        "description": "If someone sees the mouse then the mouse visits the lion."
    },
    {
        "id": 15135,
        "statement": "needs(X, lion) :- is(X, round).",
        "description": "If someone is round then they need the lion."
    },
    {
        "id": 15136,
        "statement": "is(mouse, round) :- visits(lion, mouse).",
        "description": "If the lion visits the mouse then the mouse is round."
    },
    {
        "id": 15137,
        "statement": "needs(X, mouse) :- sees(X, cow), needs(X, bald_eagle).",
        "description": "If someone sees the cow and they need the bald eagle then they need the mouse."
    },
    {
        "id": 15138,
        "statement": "is(X, big) :- sees(X, mouse), is(mouse, young).",
        "description": "If someone sees the mouse and the mouse is young then they are big."
    },
    {
        "id": 15139,
        "statement": "needs(lion, bald_eagle) :- needs(X, lion).",
        "description": "If someone needs the lion then the lion needs the bald eagle."
    },
    {
        "id": 15140,
        "statement": "chases(X, bear) :- eats(X, cat), chases(X, rabbit).",
        "description": "If someone eats the cat and they chase the rabbit then they chase the bear."
    },
    {
        "id": 15141,
        "statement": "is(bald_eagle, kind) :- needs(bear, bald_eagle).",
        "description": "If the bear needs the bald eagle then the bald eagle is kind."
    },
    {
        "id": 15142,
        "statement": "needs(X, bald_eagle) :- chases(X, bald_eagle), not needs(X, bear).",
        "description": "If someone chases the bald eagle and they do not need the bear then they need the bald eagle."
    },
    {
        "id": 15143,
        "statement": "eats(rabbit, bald_eagle) :- chases(X, rabbit).",
        "description": "If someone chases the rabbit then the rabbit eats the bald eagle."
    },
    {
        "id": 15144,
        "statement": "is(X, cold) :- is(X, blue), is(X, young).",
        "description": "All blue, young people are cold."
    },
    {
        "id": 15145,
        "statement": "is(X, young) :- is(X, red), is(X, green).",
        "description": "If someone is red and green then they are young."
    },
    {
        "id": 15146,
        "statement": "is(erin, blue) :- is(erin, young).",
        "description": "If Erin is young then Erin is blue."
    },
    {
        "id": 15147,
        "statement": "is(bob, nice) :- is(bob, big), is(bob, green).",
        "description": "If Bob is big and Bob is green then Bob is nice."
    },
    {
        "id": 15148,
        "statement": "is(X, green) :- is(X, rough), is(X, big).",
        "description": "Rough, big things are green."
    },
    {
        "id": 15149,
        "statement": "is(X, green) :- is(X, smart), not is(X, rough).",
        "description": "If something is smart and not rough then it is green."
    },
    {
        "id": 15150,
        "statement": "is(fiona, quiet) :- is(fiona, big), is(fiona, nice).",
        "description": "If Fiona is big and Fiona is nice then Fiona is quiet."
    },
    {
        "id": 15151,
        "statement": "is(X, big) :- is(X, rough), is(X, furry).",
        "description": "If something is rough and furry then it is big."
    },
    {
        "id": 15152,
        "statement": "is(X, quiet) :- is(X, nice), is(X, smart).",
        "description": "If something is nice and smart then it is quiet."
    },
    {
        "id": 15153,
        "statement": "is(X, red) :- is(X, furry), is(X, quiet).",
        "description": "If someone is furry and quiet then they are red."
    },
    {
        "id": 15154,
        "statement": "is(X, furry) :- is(X, round), is(X, smart).",
        "description": "If someone is round and smart then they are furry."
    },
    {
        "id": 15155,
        "statement": "is(fiona, nice) :- is(fiona, furry), is(fiona, white).",
        "description": "If Fiona is furry and Fiona is white then Fiona is nice."
    },
    {
        "id": 15156,
        "statement": "is(X, smart) :- is(X, green), is(X, white).",
        "description": "Green, white things are smart."
    },
    {
        "id": 15157,
        "statement": "is(X, rough) :- is(X, green), is(X, smart).",
        "description": "Green, smart things are rough."
    },
    {
        "id": 15158,
        "statement": "is(X, white) :- is(X, green), is(X, smart).",
        "description": "If something is green and smart then it is white."
    },
    {
        "id": 15159,
        "statement": "is(X, young) :- sees(X, dog), chases(X, bald_eagle).",
        "description": "If someone sees the dog and they chase the bald eagle then they are young."
    },
    {
        "id": 15160,
        "statement": "sees(X, dog) :- is(X, nice), chases(X, tiger).",
        "description": "If someone is nice and they chase the tiger then they see the dog."
    },
    {
        "id": 15161,
        "statement": "chases(X, bald_eagle) :- is(X, nice), sees(X, dog).",
        "description": "If someone is nice and they see the dog then they chase the bald eagle."
    },
    {
        "id": 15162,
        "statement": "visits(bald_eagle, mouse) :- visits(mouse, bald_eagle), sees(bald_eagle, dog).",
        "description": "If the mouse visits the bald eagle and the bald eagle sees the dog then the bald eagle visits the mouse."
    },
    {
        "id": 15163,
        "statement": "is(bald_eagle, nice) :- chases(X, bald_eagle).",
        "description": "If someone chases the bald eagle then the bald eagle is nice."
    },
    {
        "id": 15164,
        "statement": "is(dave, big) :- is(dave, quiet), is(dave, young).",
        "description": "If Dave is quiet and Dave is young then Dave is big."
    },
    {
        "id": 15165,
        "statement": "is(X, furry) :- is(X, rough), is(X, round).",
        "description": "If something is rough and round then it is furry."
    },
    {
        "id": 15166,
        "statement": "is(X, furry) :- is(X, round), is(X, quiet).",
        "description": "Round, quiet things are furry."
    },
    {
        "id": 15167,
        "statement": "is(X, red) :- is(X, nice), is(X, furry).",
        "description": "Nice, furry things are red."
    },
    {
        "id": 15168,
        "statement": "is(X, red) :- is(X, young), is(X, nice).",
        "description": "Young, nice things are red."
    },
    {
        "id": 15169,
        "statement": "is(X, nice) :- is(X, cold), is(X, blue).",
        "description": "If something is cold and blue then it is nice."
    },
    {
        "id": 15170,
        "statement": "is(X, red) :- is(X, furry), is(X, cold).",
        "description": "Furry, cold things are red."
    },
    {
        "id": 15171,
        "statement": "is(tiger, cold) :- likes(tiger, bald_eagle).",
        "description": "If the tiger likes the bald eagle then the tiger is cold."
    },
    {
        "id": 15172,
        "statement": "eats(mouse, tiger) :- eats(X, mouse).",
        "description": "If someone eats the mouse then the mouse eats the tiger."
    },
    {
        "id": 15173,
        "statement": "visits(X, bear) :- eats(X, tiger).",
        "description": "If someone eats the tiger then they visit the bear."
    },
    {
        "id": 15174,
        "statement": "likes(bear, tiger) :- eats(bear, bald_eagle).",
        "description": "If the bear eats the bald eagle then the bear likes the tiger."
    },
    {
        "id": 15175,
        "statement": "is(bear, cold) :- visits(X, bear), not likes(X, bear).",
        "description": "If someone visits the bear and they do not like the bear then the bear is cold."
    },
    {
        "id": 15176,
        "statement": "likes(X, tiger) :- visits(X, bald_eagle).",
        "description": "If someone visits the bald eagle then they like the tiger."
    },
    {
        "id": 15177,
        "statement": "eats(bear, mouse) :- likes(bear, tiger).",
        "description": "If the bear likes the tiger then the bear eats the mouse."
    },
    {
        "id": 15178,
        "statement": "is(X, furry) :- is(X, smart), is(X, nice).",
        "description": "If someone is smart and nice then they are furry."
    },
    {
        "id": 15179,
        "statement": "is(gary, white) :- is(gary, quiet).",
        "description": "If Gary is quiet then Gary is white."
    },
    {
        "id": 15180,
        "statement": "is(X, nice) :- is(X, rough), is(X, green).",
        "description": "Rough, green people are nice."
    },
    {
        "id": 15181,
        "statement": "is(X, smart) :- is(X, nice), is(X, green).",
        "description": "Nice, green people are smart."
    },
    {
        "id": 15182,
        "statement": "is(bob, cold) :- is(bob, kind), is(bob, smart).",
        "description": "If Bob is kind and Bob is smart then Bob is cold."
    },
    {
        "id": 15183,
        "statement": "is(X, green) :- is(X, kind), is(X, blue).",
        "description": "If someone is kind and blue then they are green."
    },
    {
        "id": 15184,
        "statement": "is(gary, cold) :- is(gary, round), not is(gary, kind).",
        "description": "If Gary is round and Gary is not kind then Gary is cold."
    },
    {
        "id": 15185,
        "statement": "is(X, cold) :- is(X, smart), is(X, round).",
        "description": "All smart, round people are cold."
    },
    {
        "id": 15186,
        "statement": "is(X, white) :- is(X, cold), is(X, smart).",
        "description": "Cold, smart people are white."
    },
    {
        "id": 15187,
        "statement": "is(X, rough) :- is(X, white), is(X, smart).",
        "description": "White, smart people are rough."
    },
    {
        "id": 15188,
        "statement": "is(erin, rough) :- is(erin, quiet), is(erin, round).",
        "description": "If Erin is quiet and Erin is round then Erin is rough."
    },
    {
        "id": 15189,
        "statement": "is(anne, rough) :- is(anne, cold), is(anne, green).",
        "description": "If Anne is cold and Anne is green then Anne is rough."
    },
    {
        "id": 15190,
        "statement": "is(X, round) :- is(X, rough), is(X, green).",
        "description": "Rough, green people are round."
    },
    {
        "id": 15191,
        "statement": "is(X, young) :- is(X, furry), is(X, nice).",
        "description": "Furry, nice things are young."
    },
    {
        "id": 15192,
        "statement": "is(X, smart) :- is(X, rough), is(X, big).",
        "description": "All rough, big things are smart."
    },
    {
        "id": 15193,
        "statement": "is(X, red) :- is(X, green), is(X, smart).",
        "description": "All green, smart things are red."
    },
    {
        "id": 15194,
        "statement": "is(X, red) :- is(X, smart), is(X, green).",
        "description": "All smart, green things are red."
    },
    {
        "id": 15195,
        "statement": "is(X, smart) :- is(X, kind), is(X, quiet).",
        "description": "Kind, quiet things are smart."
    },
    {
        "id": 15196,
        "statement": "is(X, quiet) :- is(X, kind), is(X, blue).",
        "description": "Kind, blue things are quiet."
    },
    {
        "id": 15197,
        "statement": "sees(X, squirrel) :- needs(X, dog), sees(dog, squirrel).",
        "description": "If something needs the dog and the dog sees the squirrel then it sees the squirrel."
    },
    {
        "id": 15198,
        "statement": "eats(X, squirrel) :- is(X, green), eats(X, dog).",
        "description": "If something is green and it eats the dog then it eats the squirrel."
    },
    {
        "id": 15199,
        "statement": "sees(lion, dog) :- sees(squirrel, lion).",
        "description": "If the squirrel sees the lion then the lion sees the dog."
    },
    {
        "id": 15200,
        "statement": "is(lion, green) :- is(X, young), eats(X, lion).",
        "description": "If something is young and it eats the lion then the lion is green."
    },
    {
        "id": 15201,
        "statement": "needs(lion, cat) :- needs(lion, dog), needs(dog, squirrel).",
        "description": "If the lion needs the dog and the dog needs the squirrel then the lion needs the cat."
    },
    {
        "id": 15202,
        "statement": "eats(X, lion) :- needs(X, lion), eats(lion, cat).",
        "description": "If something needs the lion and the lion eats the cat then it eats the lion."
    },
    {
        "id": 15203,
        "statement": "needs(X, rabbit) :- is(X, green).",
        "description": "If someone is green then they need the rabbit."
    },
    {
        "id": 15204,
        "statement": "sees(cat, cow) :- likes(cat, cow), sees(cow, cat).",
        "description": "If the cat likes the cow and the cow sees the cat then the cat sees the cow."
    },
    {
        "id": 15205,
        "statement": "sees(rabbit, tiger) :- sees(X, rabbit).",
        "description": "If someone sees the rabbit then the rabbit sees the tiger."
    },
    {
        "id": 15206,
        "statement": "likes(X, tiger) :- needs(X, rabbit), sees(rabbit, tiger).",
        "description": "If someone needs the rabbit and the rabbit sees the tiger then they like the tiger."
    },
    {
        "id": 15207,
        "statement": "likes(X, cow) :- sees(X, rabbit).",
        "description": "If someone sees the rabbit then they like the cow."
    },
    {
        "id": 15208,
        "statement": "likes(cat, tiger) :- needs(X, rabbit), sees(rabbit, cat).",
        "description": "If someone needs the rabbit and the rabbit sees the cat then the cat likes the tiger."
    },
    {
        "id": 15209,
        "statement": "is(charlie, red) :- is(charlie, rough).",
        "description": "If Charlie is rough then Charlie is red."
    },
    {
        "id": 15210,
        "statement": "is(X, rough) :- is(X, nice), is(X, red).",
        "description": "Nice, red people are rough."
    },
    {
        "id": 15211,
        "statement": "is(gary, nice) :- is(gary, smart).",
        "description": "If Gary is smart then Gary is nice."
    },
    {
        "id": 15212,
        "statement": "is(X, round) :- is(X, young), is(X, white).",
        "description": "All young, white people are round."
    },
    {
        "id": 15213,
        "statement": "is(X, red) :- is(X, white), is(X, nice).",
        "description": "All white, nice people are red."
    },
    {
        "id": 15214,
        "statement": "is(X, big) :- is(X, furry), is(X, young).",
        "description": "All furry, young people are big."
    },
    {
        "id": 15215,
        "statement": "is(X, furry) :- is(X, big), is(X, red).",
        "description": "All big, red people are furry."
    },
    {
        "id": 15216,
        "statement": "is(dave, blue) :- is(dave, nice).",
        "description": "If Dave is nice then Dave is blue."
    },
    {
        "id": 15217,
        "statement": "is(dave, blue) :- is(dave, furry), is(dave, smart).",
        "description": "If Dave is furry and Dave is smart then Dave is blue."
    },
    {
        "id": 15218,
        "statement": "is(X, nice) :- is(X, round), is(X, young).",
        "description": "If someone is round and young then they are nice."
    },
    {
        "id": 15219,
        "statement": "is(fiona, blue) :- is(fiona, cold), is(fiona, red).",
        "description": "If Fiona is cold and Fiona is red then Fiona is blue."
    },
    {
        "id": 15220,
        "statement": "is(fiona, red) :- is(fiona, green), is(fiona, cold).",
        "description": "If Fiona is green and Fiona is cold then Fiona is red."
    },
    {
        "id": 15221,
        "statement": "is(harry, white) :- is(harry, cold), not is(harry, big).",
        "description": "If Harry is cold and Harry is not big then Harry is white."
    },
    {
        "id": 15222,
        "statement": "is(X, green) :- is(X, blue), is(X, round).",
        "description": "If something is blue and round then it is green."
    },
    {
        "id": 15223,
        "statement": "is(X, green) :- is(X, kind), is(X, blue).",
        "description": "Kind, blue things are green."
    },
    {
        "id": 15224,
        "statement": "is(X, quiet) :- is(X, green), not is(X, blue).",
        "description": "If something is green and not blue then it is quiet."
    },
    {
        "id": 15225,
        "statement": "is(X, furry) :- is(X, smart), not is(X, round).",
        "description": "If someone is smart and not round then they are furry."
    },
    {
        "id": 15226,
        "statement": "is(X, cold) :- is(X, furry), is(X, blue).",
        "description": "Furry, blue people are cold."
    },
    {
        "id": 15227,
        "statement": "is(X, nice) :- is(X, cold), is(X, smart).",
        "description": "All cold, smart people are nice."
    },
    {
        "id": 15228,
        "statement": "is(X, blue) :- is(X, furry), is(X, smart).",
        "description": "All furry, smart people are blue."
    },
    {
        "id": 15229,
        "statement": "is(X, green) :- is(X, blue), not is(X, rough).",
        "description": "If something is blue and not rough then it is green."
    },
    {
        "id": 15230,
        "statement": "is(X, red) :- is(X, blue), is(X, green).",
        "description": "If something is blue and green then it is red."
    },
    {
        "id": 15231,
        "statement": "is(X, cold) :- is(X, big), is(X, round).",
        "description": "All big, round things are cold."
    },
    {
        "id": 15232,
        "statement": "is(X, quiet) :- is(X, cold), is(X, rough).",
        "description": "All cold, rough things are quiet."
    },
    {
        "id": 15233,
        "statement": "is(bob, kind) :- is(bob, round), is(bob, big).",
        "description": "If Bob is round and Bob is big then Bob is kind."
    },
    {
        "id": 15234,
        "statement": "is(fiona, rough) :- is(fiona, cold).",
        "description": "If Fiona is cold then Fiona is rough."
    },
    {
        "id": 15235,
        "statement": "is(bob, big) :- is(bob, rough).",
        "description": "If Bob is rough then Bob is big."
    },
    {
        "id": 15236,
        "statement": "is(X, blue) :- is(X, white), is(X, cold).",
        "description": "White, cold people are blue."
    },
    {
        "id": 15237,
        "statement": "is(X, blue) :- is(X, cold), is(X, furry).",
        "description": "If someone is cold and furry then they are blue."
    },
    {
        "id": 15238,
        "statement": "is(gary, blue) :- is(gary, smart).",
        "description": "If Gary is smart then Gary is blue."
    },
    {
        "id": 15239,
        "statement": "is(X, quiet) :- is(X, smart), is(X, blue).",
        "description": "All smart, blue people are quiet."
    },
    {
        "id": 15240,
        "statement": "is(X, quiet) :- is(X, furry), not is(X, smart).",
        "description": "If someone is furry and not smart then they are quiet."
    },
    {
        "id": 15241,
        "statement": "sees(bald_eagle, lion) :- sees(lion, bald_eagle).",
        "description": "If the lion sees the bald eagle then the bald eagle sees the lion."
    },
    {
        "id": 15242,
        "statement": "is(X, young) :- visits(X, dog).",
        "description": "If someone visits the dog then they are young."
    },
    {
        "id": 15243,
        "statement": "needs(cat, dog) :- is(cat, cold).",
        "description": "If the cat is cold then the cat needs the dog."
    },
    {
        "id": 15244,
        "statement": "is(X, cold) :- is(X, red), not is(X, round).",
        "description": "If someone is red and not round then they are cold."
    },
    {
        "id": 15245,
        "statement": "visits(X, cat) :- is(X, cold), needs(X, bald_eagle).",
        "description": "If someone is cold and they need the bald eagle then they visit the cat."
    },
    {
        "id": 15246,
        "statement": "is(dog, rough) :- needs(bald_eagle, lion), needs(lion, dog).",
        "description": "If the bald eagle needs the lion and the lion needs the dog then the dog is rough."
    },
    {
        "id": 15247,
        "statement": "is(X, red) :- needs(X, bald_eagle), not needs(bald_eagle, cat).",
        "description": "If someone needs the bald eagle and the bald eagle does not need the cat then they are red."
    },
    {
        "id": 15248,
        "statement": "needs(dog, bald_eagle) :- needs(X, dog).",
        "description": "If someone needs the dog then the dog needs the bald eagle."
    },
    {
        "id": 15249,
        "statement": "needs(lion, cat) :- is(bald_eagle, cold), needs(bald_eagle, lion).",
        "description": "If the bald eagle is cold and the bald eagle needs the lion then the lion needs the cat."
    },
    {
        "id": 15250,
        "statement": "eats(X, mouse) :- is(X, young), not is(X, round).",
        "description": "If something is young and not round then it eats the mouse."
    },
    {
        "id": 15251,
        "statement": "eats(X, mouse) :- needs(X, lion).",
        "description": "If something needs the lion then it eats the mouse."
    },
    {
        "id": 15252,
        "statement": "eats(bald_eagle, lion) :- sees(X, bald_eagle).",
        "description": "If something sees the bald eagle then the bald eagle eats the lion."
    },
    {
        "id": 15253,
        "statement": "needs(X, lion) :- sees(X, bald_eagle).",
        "description": "If something sees the bald eagle then it needs the lion."
    },
    {
        "id": 15254,
        "statement": "needs(lion, mouse) :- is(lion, young).",
        "description": "If the lion is young then the lion needs the mouse."
    },
    {
        "id": 15255,
        "statement": "needs(mouse, bald_eagle) :- sees(X, mouse), needs(X, mouse).",
        "description": "If something sees the mouse and it needs the mouse then the mouse needs the bald eagle."
    },
    {
        "id": 15256,
        "statement": "eats(bald_eagle, squirrel) :- not is(bald_eagle, blue).",
        "description": "If the bald eagle is not blue then the bald eagle eats the squirrel."
    },
    {
        "id": 15257,
        "statement": "sees(bald_eagle, squirrel) :- needs(X, squirrel), not needs(X, bald_eagle).",
        "description": "If something needs the squirrel and it does not need the bald eagle then the bald eagle sees the squirrel."
    },
    {
        "id": 15258,
        "statement": "likes(bald_eagle, cat) :- is(bald_eagle, kind).",
        "description": "If the bald eagle is kind then the bald eagle likes the cat."
    },
    {
        "id": 15259,
        "statement": "eats(cat, lion) :- eats(bald_eagle, cat), sees(cat, bald_eagle).",
        "description": "If the bald eagle eats the cat and the cat sees the bald eagle then the cat eats the lion."
    },
    {
        "id": 15260,
        "statement": "is(lion, red) :- is(X, kind), eats(X, lion).",
        "description": "If someone is kind and they eat the lion then the lion is red."
    },
    {
        "id": 15261,
        "statement": "sees(X, rabbit) :- likes(X, lion).",
        "description": "If someone likes the lion then they see the rabbit."
    },
    {
        "id": 15262,
        "statement": "likes(cat, bald_eagle) :- eats(X, cat), is(X, round).",
        "description": "If someone eats the cat and they are round then the cat likes the bald eagle."
    },
    {
        "id": 15263,
        "statement": "likes(X, cow) :- is(X, round), likes(X, mouse).",
        "description": "If something is round and it likes the mouse then it likes the cow."
    },
    {
        "id": 15264,
        "statement": "is(mouse, red) :- sees(X, mouse), is(X, cold).",
        "description": "If something sees the mouse and it is cold then the mouse is red."
    },
    {
        "id": 15265,
        "statement": "sees(X, mouse) :- sees(X, tiger), likes(X, tiger).",
        "description": "If something sees the tiger and it likes the tiger then it sees the mouse."
    },
    {
        "id": 15266,
        "statement": "sees(tiger, cow) :- likes(tiger, cow), is(tiger, red).",
        "description": "If the tiger likes the cow and the tiger is red then the tiger sees the cow."
    },
    {
        "id": 15267,
        "statement": "chases(tiger, rabbit) :- likes(X, tiger).",
        "description": "If something likes the tiger then the tiger chases the rabbit."
    },
    {
        "id": 15268,
        "statement": "is(X, nice) :- likes(X, mouse), sees(X, tiger).",
        "description": "If something likes the mouse and it sees the tiger then it is nice."
    },
    {
        "id": 15269,
        "statement": "is(X, white) :- is(X, blue), is(X, big).",
        "description": "If something is blue and big then it is white."
    },
    {
        "id": 15270,
        "statement": "is(X, quiet) :- is(X, white), is(X, rough).",
        "description": "White, rough things are quiet."
    },
    {
        "id": 15271,
        "statement": "is(X, green) :- is(X, young), is(X, cold).",
        "description": "Young, cold people are green."
    },
    {
        "id": 15272,
        "statement": "is(X, green) :- is(X, quiet), is(X, cold).",
        "description": "Quiet, cold people are green."
    },
    {
        "id": 15273,
        "statement": "is(X, smart) :- is(X, young), is(X, green).",
        "description": "If someone is young and green then they are smart."
    },
    {
        "id": 15274,
        "statement": "is(fiona, young) :- is(fiona, cold).",
        "description": "If Fiona is cold then Fiona is young."
    },
    {
        "id": 15275,
        "statement": "is(fiona, cold) :- is(fiona, nice).",
        "description": "If Fiona is nice then Fiona is cold."
    },
    {
        "id": 15276,
        "statement": "chases(tiger, lion) :- chases(bald_eagle, tiger).",
        "description": "If the bald eagle chases the tiger then the tiger chases the lion."
    },
    {
        "id": 15277,
        "statement": "is(tiger, nice) :- sees(tiger, bald_eagle).",
        "description": "If the tiger sees the bald eagle then the tiger is nice."
    },
    {
        "id": 15278,
        "statement": "sees(lion, bear) :- sees(X, bear), visits(X, lion).",
        "description": "If someone sees the bear and they visit the lion then the lion sees the bear."
    },
    {
        "id": 15279,
        "statement": "sees(tiger, bald_eagle) :- sees(X, tiger).",
        "description": "If someone sees the tiger then the tiger sees the bald eagle."
    },
    {
        "id": 15280,
        "statement": "sees(tiger, bald_eagle) :- is(X, kind), chases(X, tiger).",
        "description": "If someone is kind and they chase the tiger then the tiger sees the bald eagle."
    },
    {
        "id": 15281,
        "statement": "is(X, green) :- is(X, kind), is(X, blue).",
        "description": "All kind, blue people are green."
    },
    {
        "id": 15282,
        "statement": "is(tiger, kind) :- sees(bald_eagle, tiger).",
        "description": "If the bald eagle sees the tiger then the tiger is kind."
    },
    {
        "id": 15283,
        "statement": "sees(X, lion) :- is(X, nice).",
        "description": "If someone is nice then they see the lion."
    },
    {
        "id": 15284,
        "statement": "eats(X, rabbit) :- is(X, nice).",
        "description": "If something is nice then it eats the rabbit."
    },
    {
        "id": 15285,
        "statement": "visits(X, squirrel) :- chases(X, rabbit).",
        "description": "If something chases the rabbit then it visits the squirrel."
    },
    {
        "id": 15286,
        "statement": "chases(rabbit, tiger) :- eats(X, rabbit).",
        "description": "If something eats the rabbit then the rabbit chases the tiger."
    },
    {
        "id": 15287,
        "statement": "is(dog, nice) :- is(X, young), chases(X, dog).",
        "description": "If someone is young and they chase the dog then the dog is nice."
    },
    {
        "id": 15288,
        "statement": "sees(tiger, dog) :- sees(dog, tiger), chases(dog, tiger).",
        "description": "If the dog sees the tiger and the dog chases the tiger then the tiger sees the dog."
    },
    {
        "id": 15289,
        "statement": "chases(tiger, cat) :- sees(X, tiger).",
        "description": "If someone sees the tiger then the tiger chases the cat."
    },
    {
        "id": 15290,
        "statement": "is(X, white) :- is(X, green), is(X, blue).",
        "description": "All green, blue people are white."
    },
    {
        "id": 15291,
        "statement": "likes(bear, tiger) :- likes(X, bear).",
        "description": "If something likes the bear then the bear likes the tiger."
    },
    {
        "id": 15292,
        "statement": "is(dog, round) :- sees(X, dog), is(dog, red).",
        "description": "If something sees the dog and the dog is red then the dog is round."
    },
    {
        "id": 15293,
        "statement": "sees(bear, dog) :- likes(X, bear), likes(bear, dog).",
        "description": "If something likes the bear and the bear likes the dog then the bear sees the dog."
    },
    {
        "id": 15294,
        "statement": "likes(X, bear) :- is(X, red), chases(X, cat).",
        "description": "If something is red and it chases the cat then it likes the bear."
    },
    {
        "id": 15295,
        "statement": "is(dog, rough) :- chases(cat, dog), is(dog, red).",
        "description": "If the cat chases the dog and the dog is red then the dog is rough."
    },
    {
        "id": 15296,
        "statement": "is(X, red) :- likes(X, tiger).",
        "description": "If something likes the tiger then it is red."
    },
    {
        "id": 15297,
        "statement": "is(X, young) :- is(X, quiet), is(X, nice).",
        "description": "All quiet, nice people are young."
    },
    {
        "id": 15298,
        "statement": "is(X, round) :- is(X, nice), is(X, young).",
        "description": "All nice, young people are round."
    },
    {
        "id": 15299,
        "statement": "is(X, nice) :- is(X, quiet), is(X, smart).",
        "description": "Quiet, smart people are nice."
    },
    {
        "id": 15300,
        "statement": "is(X, blue) :- is(X, round), is(X, nice).",
        "description": "All round, nice people are blue."
    },
    {
        "id": 15301,
        "statement": "is(fiona, white) :- is(fiona, nice), is(fiona, young).",
        "description": "If Fiona is nice and Fiona is young then Fiona is white."
    },
    {
        "id": 15302,
        "statement": "is(X, blue) :- is(X, round), is(X, white).",
        "description": "Round, white people are blue."
    },
    {
        "id": 15303,
        "statement": "is(X, young) :- is(X, smart), is(X, quiet).",
        "description": "All smart, quiet people are young."
    },
    {
        "id": 15304,
        "statement": "is(fiona, white) :- is(fiona, cold).",
        "description": "If Fiona is cold then Fiona is white."
    },
    {
        "id": 15305,
        "statement": "likes(X, cow) :- is(X, blue).",
        "description": "If something is blue then it likes the cow."
    },
    {
        "id": 15306,
        "statement": "likes(X, cat) :- is(X, nice).",
        "description": "If something is nice then it likes the cat."
    },
    {
        "id": 15307,
        "statement": "is(lion, red) :- is(X, nice), eats(X, lion).",
        "description": "If something is nice and it eats the lion then the lion is red."
    },
    {
        "id": 15308,
        "statement": "eats(lion, cow) :- chases(X, lion).",
        "description": "If something chases the lion then the lion eats the cow."
    },
    {
        "id": 15309,
        "statement": "is(cat, blue) :- chases(X, cat), eats(cat, cow).",
        "description": "If something chases the cat and the cat eats the cow then the cat is blue."
    },
    {
        "id": 15310,
        "statement": "eats(X, lion) :- is(X, big), sees(X, bear).",
        "description": "If something is big and it sees the bear then it eats the lion."
    },
    {
        "id": 15311,
        "statement": "eats(lion, squirrel) :- eats(X, lion).",
        "description": "If something eats the lion then the lion eats the squirrel."
    },
    {
        "id": 15312,
        "statement": "chases(cow, squirrel) :- chases(X, cow).",
        "description": "If something chases the cow then the cow chases the squirrel."
    },
    {
        "id": 15313,
        "statement": "chases(X, squirrel) :- chases(X, bear).",
        "description": "If something chases the bear then it chases the squirrel."
    },
    {
        "id": 15314,
        "statement": "is(cow, big) :- sees(X, cow).",
        "description": "If something sees the cow then the cow is big."
    },
    {
        "id": 15315,
        "statement": "eats(lion, bear) :- eats(X, lion).",
        "description": "If something eats the lion then the lion eats the bear."
    },
    {
        "id": 15316,
        "statement": "eats(cow, lion) :- eats(X, cow), eats(cow, squirrel).",
        "description": "If something eats the cow and the cow eats the squirrel then the cow eats the lion."
    },
    {
        "id": 15317,
        "statement": "chases(lion, bear) :- chases(X, lion), sees(X, lion).",
        "description": "If something chases the lion and it sees the lion then the lion chases the bear."
    },
    {
        "id": 15318,
        "statement": "chases(X, cow) :- eats(X, squirrel).",
        "description": "If something eats the squirrel then it chases the cow."
    },
    {
        "id": 15319,
        "statement": "is(X, blue) :- is(X, quiet), not is(X, young).",
        "description": "If something is quiet and not young then it is blue."
    },
    {
        "id": 15320,
        "statement": "is(X, blue) :- is(X, quiet), is(X, smart).",
        "description": "Quiet, smart things are blue."
    },
    {
        "id": 15321,
        "statement": "is(X, red) :- is(X, big), is(X, smart).",
        "description": "If something is big and smart then it is red."
    },
    {
        "id": 15322,
        "statement": "is(erin, blue) :- is(erin, smart), not is(erin, red).",
        "description": "If Erin is smart and Erin is not red then Erin is blue."
    },
    {
        "id": 15323,
        "statement": "eats(X, cat) :- likes(X, tiger).",
        "description": "If something likes the tiger then it eats the cat."
    },
    {
        "id": 15324,
        "statement": "sees(tiger, cat) :- eats(tiger, cat), likes(tiger, rabbit).",
        "description": "If the tiger eats the cat and the tiger likes the rabbit then the tiger sees the cat."
    },
    {
        "id": 15325,
        "statement": "is(X, red) :- sees(X, tiger), likes(tiger, dog).",
        "description": "If something sees the tiger and the tiger likes the dog then it is red."
    },
    {
        "id": 15326,
        "statement": "likes(cat, rabbit) :- eats(X, cat).",
        "description": "If something eats the cat then the cat likes the rabbit."
    },
    {
        "id": 15327,
        "statement": "likes(X, dog) :- is(X, rough), sees(X, tiger).",
        "description": "If something is rough and it sees the tiger then it likes the dog."
    },
    {
        "id": 15328,
        "statement": "is(X, young) :- likes(X, rabbit).",
        "description": "If something likes the rabbit then it is young."
    },
    {
        "id": 15329,
        "statement": "is(dave, blue) :- is(dave, furry).",
        "description": "If Dave is furry then Dave is blue."
    },
    {
        "id": 15330,
        "statement": "is(X, furry) :- is(X, quiet), is(X, nice).",
        "description": "All quiet, nice people are furry."
    },
    {
        "id": 15331,
        "statement": "is(X, round) :- is(X, nice), is(X, quiet).",
        "description": "All nice, quiet people are round."
    },
    {
        "id": 15332,
        "statement": "is(X, kind) :- is(X, cold), is(X, rough).",
        "description": "If someone is cold and rough then they are kind."
    },
    {
        "id": 15333,
        "statement": "is(harry, nice) :- is(harry, kind).",
        "description": "If Harry is kind then Harry is nice."
    },
    {
        "id": 15334,
        "statement": "is(harry, cold) :- is(harry, furry), is(harry, nice).",
        "description": "If Harry is furry and Harry is nice then Harry is cold."
    },
    {
        "id": 15335,
        "statement": "is(X, nice) :- is(X, furry), is(X, cold).",
        "description": "All furry, cold people are nice."
    },
    {
        "id": 15336,
        "statement": "is(erin, young) :- is(erin, cold), is(erin, kind).",
        "description": "If Erin is cold and Erin is kind then Erin is young."
    },
    {
        "id": 15337,
        "statement": "is(harry, big) :- is(harry, furry), is(harry, red).",
        "description": "If Harry is furry and Harry is red then Harry is big."
    },
    {
        "id": 15338,
        "statement": "is(X, white) :- is(X, quiet), is(X, furry).",
        "description": "If someone is quiet and furry then they are white."
    },
    {
        "id": 15339,
        "statement": "likes(X, cow) :- sees(X, cow), not is(X, nice).",
        "description": "If someone sees the cow and they are not nice then they like the cow."
    },
    {
        "id": 15340,
        "statement": "is(dog, big) :- chases(X, cow), likes(X, dog).",
        "description": "If someone chases the cow and they like the dog then the dog is big."
    },
    {
        "id": 15341,
        "statement": "sees(X, mouse) :- likes(X, cow), not is(X, blue).",
        "description": "If someone likes the cow and they are not blue then they see the mouse."
    },
    {
        "id": 15342,
        "statement": "is(X, green) :- likes(X, tiger), not chases(tiger, dog).",
        "description": "If someone likes the tiger and the tiger does not chase the dog then they are green."
    },
    {
        "id": 15343,
        "statement": "sees(X, squirrel) :- chases(X, bald_eagle), is(bald_eagle, round).",
        "description": "If someone chases the bald eagle and the bald eagle is round then they see the squirrel."
    },
    {
        "id": 15344,
        "statement": "eats(X, bear) :- eats(X, squirrel), is(squirrel, young).",
        "description": "If someone eats the squirrel and the squirrel is young then they eat the bear."
    },
    {
        "id": 15345,
        "statement": "chases(bald_eagle, lion) :- eats(X, bald_eagle).",
        "description": "If someone eats the bald eagle then the bald eagle chases the lion."
    },
    {
        "id": 15346,
        "statement": "sees(bear, lion) :- eats(X, bear), sees(X, bald_eagle).",
        "description": "If someone eats the bear and they see the bald eagle then the bear sees the lion."
    },
    {
        "id": 15347,
        "statement": "eats(squirrel, lion) :- sees(X, lion), eats(X, squirrel).",
        "description": "If someone sees the lion and they eat the squirrel then the squirrel eats the lion."
    },
    {
        "id": 15348,
        "statement": "eats(lion, squirrel) :- chases(X, lion).",
        "description": "If someone chases the lion then the lion eats the squirrel."
    },
    {
        "id": 15349,
        "statement": "is(bear, green) :- eats(X, bear), eats(X, squirrel).",
        "description": "If someone eats the bear and they eat the squirrel then the bear is green."
    },
    {
        "id": 15350,
        "statement": "likes(cow, bear) :- needs(X, cow).",
        "description": "If something needs the cow then the cow likes the bear."
    },
    {
        "id": 15351,
        "statement": "needs(X, mouse) :- is(X, green), likes(X, cow).",
        "description": "If something is green and it likes the cow then it needs the mouse."
    },
    {
        "id": 15352,
        "statement": "chases(cat, mouse) :- needs(X, cat).",
        "description": "If something needs the cat then the cat chases the mouse."
    },
    {
        "id": 15353,
        "statement": "likes(X, cow) :- is(X, young), not is(X, nice).",
        "description": "If something is young and not nice then it likes the cow."
    },
    {
        "id": 15354,
        "statement": "needs(bear, mouse) :- likes(bear, cow).",
        "description": "If the bear likes the cow then the bear needs the mouse."
    },
    {
        "id": 15355,
        "statement": "is(cat, blue) :- chases(X, cat), is(X, green).",
        "description": "If something chases the cat and it is green then the cat is blue."
    },
    {
        "id": 15356,
        "statement": "is(X, young) :- chases(X, cow).",
        "description": "If something chases the cow then it is young."
    },
    {
        "id": 15357,
        "statement": "chases(mouse, cow) :- needs(X, mouse).",
        "description": "If something needs the mouse then the mouse chases the cow."
    },
    {
        "id": 15358,
        "statement": "is(dave, nice) :- is(dave, round), is(dave, quiet).",
        "description": "If Dave is round and Dave is quiet then Dave is nice."
    },
    {
        "id": 15359,
        "statement": "is(X, smart) :- is(X, nice), is(X, quiet).",
        "description": "All nice, quiet things are smart."
    },
    {
        "id": 15360,
        "statement": "is(X, smart) :- is(X, nice), is(X, quiet).",
        "description": "Nice, quiet things are smart."
    },
    {
        "id": 15361,
        "statement": "is(dave, red) :- is(dave, kind), is(dave, round).",
        "description": "If Dave is kind and Dave is round then Dave is red."
    },
    {
        "id": 15362,
        "statement": "is(gary, kind) :- is(gary, smart), is(gary, furry).",
        "description": "If Gary is smart and Gary is furry then Gary is kind."
    },
    {
        "id": 15363,
        "statement": "is(harry, round) :- is(harry, smart).",
        "description": "If Harry is smart then Harry is round."
    },
    {
        "id": 15364,
        "statement": "likes(bald_eagle, dog) :- sees(X, bald_eagle).",
        "description": "If something sees the bald eagle then the bald eagle likes the dog."
    },
    {
        "id": 15365,
        "statement": "likes(lion, cat) :- likes(X, dog), sees(dog, lion).",
        "description": "If something likes the dog and the dog sees the lion then the lion likes the cat."
    },
    {
        "id": 15366,
        "statement": "sees(X, cat) :- needs(X, dog).",
        "description": "If something needs the dog then it sees the cat."
    },
    {
        "id": 15367,
        "statement": "is(lion, rough) :- needs(bald_eagle, lion).",
        "description": "If the bald eagle needs the lion then the lion is rough."
    },
    {
        "id": 15368,
        "statement": "needs(lion, bald_eagle) :- is(lion, young), is(lion, big).",
        "description": "If the lion is young and the lion is big then the lion needs the bald eagle."
    },
    {
        "id": 15369,
        "statement": "needs(dog, lion) :- likes(X, dog), is(X, kind).",
        "description": "If something likes the dog and it is kind then the dog needs the lion."
    },
    {
        "id": 15370,
        "statement": "is(bob, red) :- is(bob, white), is(bob, kind).",
        "description": "If Bob is white and Bob is kind then Bob is red."
    },
    {
        "id": 15371,
        "statement": "is(X, quiet) :- is(X, white), is(X, cold).",
        "description": "All white, cold people are quiet."
    },
    {
        "id": 15372,
        "statement": "is(X, smart) :- is(X, big), is(X, white).",
        "description": "If someone is big and white then they are smart."
    },
    {
        "id": 15373,
        "statement": "is(X, big) :- is(X, smart), not is(X, white).",
        "description": "If someone is smart and not white then they are big."
    },
    {
        "id": 15374,
        "statement": "chases(bear, mouse) :- is(bear, round).",
        "description": "If the bear is round then the bear chases the mouse."
    },
    {
        "id": 15375,
        "statement": "is(mouse, nice) :- is(mouse, kind).",
        "description": "If the mouse is kind then the mouse is nice."
    },
    {
        "id": 15376,
        "statement": "is(X, cold) :- visits(X, bald_eagle).",
        "description": "If someone visits the bald eagle then they are cold."
    },
    {
        "id": 15377,
        "statement": "is(rabbit, green) :- eats(X, rabbit), is(rabbit, kind).",
        "description": "If someone eats the rabbit and the rabbit is kind then the rabbit is green."
    },
    {
        "id": 15378,
        "statement": "visits(bear, mouse) :- is(bear, green).",
        "description": "If the bear is green then the bear visits the mouse."
    },
    {
        "id": 15379,
        "statement": "eats(rabbit, mouse) :- is(rabbit, green), is(rabbit, round).",
        "description": "If the rabbit is green and the rabbit is round then the rabbit eats the mouse."
    },
    {
        "id": 15380,
        "statement": "visits(X, bald_eagle) :- chases(X, mouse).",
        "description": "If someone chases the mouse then they visit the bald eagle."
    },
    {
        "id": 15381,
        "statement": "is(bob, nice) :- is(bob, smart), is(bob, green).",
        "description": "If Bob is smart and Bob is green then Bob is nice."
    },
    {
        "id": 15382,
        "statement": "is(X, smart) :- is(X, young), is(X, blue).",
        "description": "If someone is young and blue then they are smart."
    },
    {
        "id": 15383,
        "statement": "is(charlie, round) :- is(charlie, big).",
        "description": "If Charlie is big then Charlie is round."
    },
    {
        "id": 15384,
        "statement": "is(dave, smart) :- is(dave, young), is(dave, white).",
        "description": "If Dave is young and Dave is white then Dave is smart."
    },
    {
        "id": 15385,
        "statement": "is(dave, blue) :- is(dave, young), not is(dave, round).",
        "description": "If Dave is young and Dave is not round then Dave is blue."
    },
    {
        "id": 15386,
        "statement": "is(fiona, young) :- is(fiona, white), not is(fiona, quiet).",
        "description": "If Fiona is white and Fiona is not quiet then Fiona is young."
    },
    {
        "id": 15387,
        "statement": "chases(dog, lion) :- likes(X, dog).",
        "description": "If someone likes the dog then the dog chases the lion."
    },
    {
        "id": 15388,
        "statement": "likes(X, dog) :- needs(X, lion).",
        "description": "If someone needs the lion then they like the dog."
    },
    {
        "id": 15389,
        "statement": "chases(cow, mouse) :- needs(dog, lion), needs(dog, cow).",
        "description": "If the dog needs the lion and the dog needs the cow then the cow chases the mouse."
    },
    {
        "id": 15390,
        "statement": "needs(X, lion) :- is(X, round), chases(X, mouse).",
        "description": "If someone is round and they chase the mouse then they need the lion."
    },
    {
        "id": 15391,
        "statement": "likes(cow, dog) :- likes(cow, lion), likes(lion, cow).",
        "description": "If the cow likes the lion and the lion likes the cow then the cow likes the dog."
    },
    {
        "id": 15392,
        "statement": "chases(X, lion) :- is(X, blue).",
        "description": "If someone is blue then they chase the lion."
    },
    {
        "id": 15393,
        "statement": "is(lion, blue) :- likes(mouse, lion), chases(mouse, dog).",
        "description": "If the mouse likes the lion and the mouse chases the dog then the lion is blue."
    },
    {
        "id": 15394,
        "statement": "is(lion, blue) :- chases(dog, lion).",
        "description": "If the dog chases the lion then the lion is blue."
    },
    {
        "id": 15395,
        "statement": "likes(cow, mouse) :- is(X, kind), needs(X, cow).",
        "description": "If someone is kind and they need the cow then the cow likes the mouse."
    },
    {
        "id": 15396,
        "statement": "is(X, quiet) :- is(X, young), is(X, round).",
        "description": "All young, round people are quiet."
    },
    {
        "id": 15397,
        "statement": "is(X, kind) :- is(X, blue), is(X, rough).",
        "description": "All blue, rough people are kind."
    },
    {
        "id": 15398,
        "statement": "is(X, cold) :- is(X, big), is(X, kind).",
        "description": "If someone is big and kind then they are cold."
    },
    {
        "id": 15399,
        "statement": "is(X, cold) :- is(X, blue), not is(X, round).",
        "description": "If someone is blue and not round then they are cold."
    },
    {
        "id": 15400,
        "statement": "is(X, rough) :- is(X, kind), is(X, blue).",
        "description": "All kind, blue people are rough."
    },
    {
        "id": 15401,
        "statement": "is(X, blue) :- is(X, big), is(X, cold).",
        "description": "Big, cold people are blue."
    },
    {
        "id": 15402,
        "statement": "is(X, blue) :- is(X, round), is(X, rough).",
        "description": "All round, rough people are blue."
    },
    {
        "id": 15403,
        "statement": "is(harry, kind) :- is(harry, big), is(harry, young).",
        "description": "If Harry is big and Harry is young then Harry is kind."
    },
    {
        "id": 15404,
        "statement": "needs(cat, tiger) :- eats(X, cat).",
        "description": "If something eats the cat then the cat needs the tiger."
    },
    {
        "id": 15405,
        "statement": "eats(X, cat) :- is(X, blue), not is(X, young).",
        "description": "If something is blue and not young then it eats the cat."
    },
    {
        "id": 15406,
        "statement": "is(squirrel, blue) :- eats(X, squirrel), is(X, round).",
        "description": "If something eats the squirrel and it is round then the squirrel is blue."
    },
    {
        "id": 15407,
        "statement": "needs(X, squirrel) :- likes(X, tiger), likes(tiger, squirrel).",
        "description": "If something likes the tiger and the tiger likes the squirrel then it needs the squirrel."
    },
    {
        "id": 15408,
        "statement": "eats(X, squirrel) :- is(X, young), not likes(X, squirrel).",
        "description": "If something is young and it does not like the squirrel then it eats the squirrel."
    },
    {
        "id": 15409,
        "statement": "needs(lion, squirrel) :- eats(squirrel, lion).",
        "description": "If the squirrel eats the lion then the lion needs the squirrel."
    },
    {
        "id": 15410,
        "statement": "needs(squirrel, cat) :- is(squirrel, kind), not eats(squirrel, tiger).",
        "description": "If the squirrel is kind and the squirrel does not eat the tiger then the squirrel needs the cat."
    },
    {
        "id": 15411,
        "statement": "needs(tiger, squirrel) :- needs(X, tiger), not likes(X, cat).",
        "description": "If something needs the tiger and it does not like the cat then the tiger needs the squirrel."
    },
    {
        "id": 15412,
        "statement": "chases(X, bald_eagle) :- sees(X, squirrel), is(X, cold).",
        "description": "If something sees the squirrel and it is cold then it chases the bald eagle."
    },
    {
        "id": 15413,
        "statement": "visits(X, bear) :- chases(X, bald_eagle).",
        "description": "If something chases the bald eagle then it visits the bear."
    },
    {
        "id": 15414,
        "statement": "chases(squirrel, bald_eagle) :- sees(X, bear), chases(bear, squirrel).",
        "description": "If something sees the bear and the bear chases the squirrel then the squirrel chases the bald eagle."
    },
    {
        "id": 15415,
        "statement": "chases(bear, bald_eagle) :- is(X, rough), visits(X, bear).",
        "description": "If something is rough and it visits the bear then the bear chases the bald eagle."
    },
    {
        "id": 15416,
        "statement": "sees(cow, bear) :- sees(X, cow).",
        "description": "If something sees the cow then the cow sees the bear."
    },
    {
        "id": 15417,
        "statement": "chases(X, bald_eagle) :- is(X, nice), is(X, cold).",
        "description": "If something is nice and cold then it chases the bald eagle."
    },
    {
        "id": 15418,
        "statement": "sees(X, squirrel) :- visits(X, squirrel).",
        "description": "If something visits the squirrel then it sees the squirrel."
    },
    {
        "id": 15419,
        "statement": "visits(X, cow) :- visits(X, bald_eagle), chases(X, bald_eagle).",
        "description": "If something visits the bald eagle and it chases the bald eagle then it visits the cow."
    },
    {
        "id": 15420,
        "statement": "is(X, young) :- is(X, round), is(X, rough).",
        "description": "If someone is round and rough then they are young."
    },
    {
        "id": 15421,
        "statement": "is(X, round) :- is(X, kind), is(X, green).",
        "description": "If someone is kind and green then they are round."
    },
    {
        "id": 15422,
        "statement": "is(bob, young) :- is(bob, round), is(bob, cold).",
        "description": "If Bob is round and Bob is cold then Bob is young."
    },
    {
        "id": 15423,
        "statement": "is(X, big) :- is(X, smart), is(X, green).",
        "description": "If something is smart and green then it is big."
    },
    {
        "id": 15424,
        "statement": "is(X, young) :- is(X, blue), is(X, nice).",
        "description": "Blue, nice things are young."
    },
    {
        "id": 15425,
        "statement": "is(X, smart) :- is(X, white), is(X, young).",
        "description": "If something is white and young then it is smart."
    },
    {
        "id": 15426,
        "statement": "is(X, young) :- is(X, smart), is(X, white).",
        "description": "All smart, white people are young."
    },
    {
        "id": 15427,
        "statement": "is(X, green) :- is(X, rough), is(X, smart).",
        "description": "Rough, smart people are green."
    },
    {
        "id": 15428,
        "statement": "visits(X, rabbit) :- is(X, red), is(X, green).",
        "description": "If something is red and green then it visits the rabbit."
    },
    {
        "id": 15429,
        "statement": "is(X, round) :- sees(X, bald_eagle), not chases(X, cow).",
        "description": "If something sees the bald eagle and it does not chase the cow then it is round."
    },
    {
        "id": 15430,
        "statement": "sees(X, squirrel) :- is(X, red).",
        "description": "If something is red then it sees the squirrel."
    },
    {
        "id": 15431,
        "statement": "chases(X, rabbit) :- chases(X, bald_eagle), not chases(X, squirrel).",
        "description": "If something chases the bald eagle and it does not chase the squirrel then it chases the rabbit."
    },
    {
        "id": 15432,
        "statement": "chases(squirrel, bald_eagle) :- sees(X, squirrel).",
        "description": "If something sees the squirrel then the squirrel chases the bald eagle."
    },
    {
        "id": 15433,
        "statement": "sees(X, rabbit) :- is(X, kind).",
        "description": "If something is kind then it sees the rabbit."
    },
    {
        "id": 15434,
        "statement": "visits(cow, squirrel) :- chases(X, cow).",
        "description": "If something chases the cow then the cow visits the squirrel."
    },
    {
        "id": 15435,
        "statement": "is(cat, green) :- likes(X, cat), eats(X, cow).",
        "description": "If something likes the cat and it eats the cow then the cat is green."
    },
    {
        "id": 15436,
        "statement": "eats(X, bear) :- sees(X, cat), is(cat, green).",
        "description": "If something sees the cat and the cat is green then it eats the bear."
    },
    {
        "id": 15437,
        "statement": "sees(cat, bear) :- sees(X, cat).",
        "description": "If something sees the cat then the cat sees the bear."
    },
    {
        "id": 15438,
        "statement": "is(X, quiet) :- is(X, blue), is(X, furry).",
        "description": "Blue, furry things are quiet."
    },
    {
        "id": 15439,
        "statement": "is(gary, big) :- is(gary, smart).",
        "description": "If Gary is smart then Gary is big."
    },
    {
        "id": 15440,
        "statement": "is(X, nice) :- is(X, furry), is(X, quiet).",
        "description": "All furry, quiet things are nice."
    },
    {
        "id": 15441,
        "statement": "is(X, nice) :- is(X, furry), not is(X, rough).",
        "description": "If something is furry and not rough then it is nice."
    },
    {
        "id": 15442,
        "statement": "is(X, green) :- is(X, kind), is(X, quiet).",
        "description": "Kind, quiet things are green."
    },
    {
        "id": 15443,
        "statement": "chases(X, bald_eagle) :- is(X, green), sees(X, rabbit).",
        "description": "If something is green and it sees the rabbit then it chases the bald eagle."
    },
    {
        "id": 15444,
        "statement": "chases(X, bald_eagle) :- sees(X, lion), not is(X, red).",
        "description": "If something sees the lion and it is not red then it chases the bald eagle."
    },
    {
        "id": 15445,
        "statement": "is(X, big) :- sees(X, bald_eagle), is(X, red).",
        "description": "If something sees the bald eagle and it is red then it is big."
    },
    {
        "id": 15446,
        "statement": "sees(X, rabbit) :- is(X, big), chases(X, rabbit).",
        "description": "If something is big and it chases the rabbit then it sees the rabbit."
    },
    {
        "id": 15447,
        "statement": "sees(bald_eagle, rabbit) :- chases(X, bald_eagle).",
        "description": "If something chases the bald eagle then the bald eagle sees the rabbit."
    },
    {
        "id": 15448,
        "statement": "chases(rabbit, bear) :- sees(X, rabbit), visits(rabbit, lion).",
        "description": "If something sees the rabbit and the rabbit visits the lion then the rabbit chases the bear."
    },
    {
        "id": 15449,
        "statement": "chases(X, rabbit) :- sees(X, bear), not sees(X, bald_eagle).",
        "description": "If something sees the bear and it does not see the bald eagle then it chases the rabbit."
    },
    {
        "id": 15450,
        "statement": "is(X, white) :- is(X, round), is(X, cold).",
        "description": "If something is round and cold then it is white."
    },
    {
        "id": 15451,
        "statement": "is(X, kind) :- is(X, big), is(X, cold).",
        "description": "If something is big and cold then it is kind."
    },
    {
        "id": 15452,
        "statement": "is(X, green) :- is(X, round), is(X, cold).",
        "description": "Round, cold things are green."
    },
    {
        "id": 15453,
        "statement": "is(X, rough) :- is(X, round), is(X, green).",
        "description": "If something is round and green then it is rough."
    },
    {
        "id": 15454,
        "statement": "is(anne, cold) :- is(anne, big), is(anne, kind).",
        "description": "If Anne is big and Anne is kind then Anne is cold."
    },
    {
        "id": 15455,
        "statement": "eats(X, bear) :- likes(X, rabbit).",
        "description": "If someone likes the rabbit then they eat the bear."
    },
    {
        "id": 15456,
        "statement": "eats(rabbit, cat) :- is(rabbit, red).",
        "description": "If the rabbit is red then the rabbit eats the cat."
    },
    {
        "id": 15457,
        "statement": "likes(X, bear) :- likes(X, cat).",
        "description": "If someone likes the cat then they like the bear."
    },
    {
        "id": 15458,
        "statement": "likes(cat, rabbit) :- is(X, round), eats(X, cat).",
        "description": "If someone is round and they eat the cat then the cat likes the rabbit."
    },
    {
        "id": 15459,
        "statement": "is(bear, round) :- eats(X, bear).",
        "description": "If someone eats the bear then the bear is round."
    },
    {
        "id": 15460,
        "statement": "is(X, white) :- is(X, smart), is(X, young).",
        "description": "All smart, young things are white."
    },
    {
        "id": 15461,
        "statement": "is(fiona, smart) :- is(fiona, blue), is(fiona, young).",
        "description": "If Fiona is blue and Fiona is young then Fiona is smart."
    },
    {
        "id": 15462,
        "statement": "is(X, kind) :- is(X, quiet), is(X, rough).",
        "description": "Quiet, rough things are kind."
    },
    {
        "id": 15463,
        "statement": "is(X, quiet) :- is(X, blue), is(X, big).",
        "description": "If something is blue and big then it is quiet."
    },
    {
        "id": 15464,
        "statement": "chases(bear, squirrel) :- chases(X, bear), is(bear, round).",
        "description": "If something chases the bear and the bear is round then the bear chases the squirrel."
    },
    {
        "id": 15465,
        "statement": "is(dog, big) :- chases(X, squirrel), chases(X, dog).",
        "description": "If something chases the squirrel and it chases the dog then the dog is big."
    },
    {
        "id": 15466,
        "statement": "is(squirrel, nice) :- is(squirrel, kind), sees(squirrel, tiger).",
        "description": "If the squirrel is kind and the squirrel sees the tiger then the squirrel is nice."
    },
    {
        "id": 15467,
        "statement": "chases(dog, bear) :- chases(X, bear), chases(bear, dog).",
        "description": "If something chases the bear and the bear chases the dog then the dog chases the bear."
    },
    {
        "id": 15468,
        "statement": "sees(tiger, dog) :- chases(X, tiger).",
        "description": "If something chases the tiger then the tiger sees the dog."
    },
    {
        "id": 15469,
        "statement": "is(erin, smart) :- is(erin, green), is(erin, rough).",
        "description": "If Erin is green and Erin is rough then Erin is smart."
    },
    {
        "id": 15470,
        "statement": "is(charlie, white) :- is(charlie, big).",
        "description": "If Charlie is big then Charlie is white."
    },
    {
        "id": 15471,
        "statement": "is(X, kind) :- is(X, quiet), is(X, smart).",
        "description": "All quiet, smart things are kind."
    },
    {
        "id": 15472,
        "statement": "is(X, quiet) :- is(X, white), is(X, big).",
        "description": "White, big things are quiet."
    },
    {
        "id": 15473,
        "statement": "is(X, round) :- is(X, red), is(X, big).",
        "description": "Red, big things are round."
    },
    {
        "id": 15474,
        "statement": "is(X, red) :- is(X, young), is(X, round).",
        "description": "Young, round things are red."
    },
    {
        "id": 15475,
        "statement": "is(gary, red) :- is(gary, blue).",
        "description": "If Gary is blue then Gary is red."
    },
    {
        "id": 15476,
        "statement": "is(charlie, young) :- is(charlie, round).",
        "description": "If Charlie is round then Charlie is young."
    },
    {
        "id": 15477,
        "statement": "is(gary, big) :- is(gary, young), is(gary, red).",
        "description": "If Gary is young and Gary is red then Gary is big."
    },
    {
        "id": 15478,
        "statement": "is(X, cold) :- is(X, round), not is(X, quiet).",
        "description": "If something is round and not quiet then it is cold."
    },
    {
        "id": 15479,
        "statement": "is(X, cold) :- is(X, nice), sees(X, squirrel).",
        "description": "If someone is nice and they see the squirrel then they are cold."
    },
    {
        "id": 15480,
        "statement": "is(bear, rough) :- sees(X, cow), likes(X, bear).",
        "description": "If someone sees the cow and they like the bear then the bear is rough."
    },
    {
        "id": 15481,
        "statement": "is(X, nice) :- is(X, cold), is(X, rough).",
        "description": "If someone is cold and rough then they are nice."
    },
    {
        "id": 15482,
        "statement": "sees(X, tiger) :- is(X, green).",
        "description": "If someone is green then they see the tiger."
    },
    {
        "id": 15483,
        "statement": "needs(tiger, squirrel) :- sees(X, tiger).",
        "description": "If someone sees the tiger then the tiger needs the squirrel."
    },
    {
        "id": 15484,
        "statement": "is(X, blue) :- is(X, kind), is(X, green).",
        "description": "Kind, green things are blue."
    },
    {
        "id": 15485,
        "statement": "is(X, blue) :- is(X, nice), is(X, young).",
        "description": "Nice, young things are blue."
    },
    {
        "id": 15486,
        "statement": "is(X, green) :- is(X, young), is(X, smart).",
        "description": "All young, smart things are green."
    },
    {
        "id": 15487,
        "statement": "likes(X, lion) :- is(X, big).",
        "description": "If something is big then it likes the lion."
    },
    {
        "id": 15488,
        "statement": "is(bear, nice) :- is(bear, blue).",
        "description": "If the bear is blue then the bear is nice."
    },
    {
        "id": 15489,
        "statement": "visits(lion, dog) :- needs(lion, bear).",
        "description": "If the lion needs the bear then the lion visits the dog."
    },
    {
        "id": 15490,
        "statement": "is(dog, big) :- is(X, kind), visits(X, dog).",
        "description": "If something is kind and it visits the dog then the dog is big."
    },
    {
        "id": 15491,
        "statement": "visits(dog, lion) :- is(dog, blue), visits(dog, bear).",
        "description": "If the dog is blue and the dog visits the bear then the dog visits the lion."
    },
    {
        "id": 15492,
        "statement": "visits(bear, dog) :- is(bear, nice), visits(bear, bald_eagle).",
        "description": "If the bear is nice and the bear visits the bald eagle then the bear visits the dog."
    },
    {
        "id": 15493,
        "statement": "likes(X, dog) :- is(X, kind), needs(X, dog).",
        "description": "If something is kind and it needs the dog then it likes the dog."
    },
    {
        "id": 15494,
        "statement": "sees(rabbit, tiger) :- chases(X, rabbit).",
        "description": "If someone chases the rabbit then the rabbit sees the tiger."
    },
    {
        "id": 15495,
        "statement": "is(X, cold) :- is(X, young), is(X, blue).",
        "description": "If someone is young and blue then they are cold."
    },
    {
        "id": 15496,
        "statement": "sees(dog, mouse) :- is(dog, round), is(dog, rough).",
        "description": "If the dog is round and the dog is rough then the dog sees the mouse."
    },
    {
        "id": 15497,
        "statement": "is(X, young) :- chases(X, tiger), is(tiger, blue).",
        "description": "If someone chases the tiger and the tiger is blue then they are young."
    },
    {
        "id": 15498,
        "statement": "is(dog, young) :- sees(X, dog).",
        "description": "If someone sees the dog then the dog is young."
    },
    {
        "id": 15499,
        "statement": "is(dog, young) :- chases(X, dog), sees(dog, tiger).",
        "description": "If someone chases the dog and the dog sees the tiger then the dog is young."
    },
    {
        "id": 15500,
        "statement": "sees(X, dog) :- chases(X, rabbit).",
        "description": "If someone chases the rabbit then they see the dog."
    },
    {
        "id": 15501,
        "statement": "sees(mouse, rabbit) :- is(X, round), sees(X, mouse).",
        "description": "If someone is round and they see the mouse then the mouse sees the rabbit."
    },
    {
        "id": 15502,
        "statement": "likes(X, cat) :- is(X, rough).",
        "description": "If something is rough then it likes the cat."
    },
    {
        "id": 15503,
        "statement": "is(bear, young) :- likes(X, bear), is(X, red).",
        "description": "If something likes the bear and it is red then the bear is young."
    },
    {
        "id": 15504,
        "statement": "likes(dog, bear) :- visits(X, dog).",
        "description": "If something visits the dog then the dog likes the bear."
    },
    {
        "id": 15505,
        "statement": "is(X, green) :- sees(X, cat), is(cat, nice).",
        "description": "If something sees the cat and the cat is nice then it is green."
    },
    {
        "id": 15506,
        "statement": "likes(dog, cat) :- visits(dog, bear).",
        "description": "If the dog visits the bear then the dog likes the cat."
    },
    {
        "id": 15507,
        "statement": "is(cat, rough) :- sees(X, bear), likes(bear, cat).",
        "description": "If something sees the bear and the bear likes the cat then the cat is rough."
    },
    {
        "id": 15508,
        "statement": "likes(X, bear) :- is(X, red), likes(X, cat).",
        "description": "If something is red and it likes the cat then it likes the bear."
    },
    {
        "id": 15509,
        "statement": "visits(cat, tiger) :- sees(X, bear), likes(bear, cat).",
        "description": "If something sees the bear and the bear likes the cat then the cat visits the tiger."
    },
    {
        "id": 15510,
        "statement": "is(cat, nice) :- is(X, red), likes(X, cat).",
        "description": "If something is red and it likes the cat then the cat is nice."
    },
    {
        "id": 15511,
        "statement": "is(X, red) :- is(X, young), is(X, kind).",
        "description": "All young, kind things are red."
    },
    {
        "id": 15512,
        "statement": "is(X, red) :- is(X, young), is(X, white).",
        "description": "All young, white things are red."
    },
    {
        "id": 15513,
        "statement": "is(X, blue) :- is(X, young), is(X, red).",
        "description": "If something is young and red then it is blue."
    },
    {
        "id": 15514,
        "statement": "is(X, white) :- is(X, green), not is(X, nice).",
        "description": "If something is green and not nice then it is white."
    },
    {
        "id": 15515,
        "statement": "is(X, white) :- is(X, green), is(X, nice).",
        "description": "Green, nice things are white."
    },
    {
        "id": 15516,
        "statement": "is(dave, round) :- is(dave, white).",
        "description": "If Dave is white then Dave is round."
    },
    {
        "id": 15517,
        "statement": "is(X, round) :- is(X, smart), is(X, white).",
        "description": "All smart, white things are round."
    },
    {
        "id": 15518,
        "statement": "is(bald_eagle, rough) :- eats(X, bald_eagle).",
        "description": "If something eats the bald eagle then the bald eagle is rough."
    },
    {
        "id": 15519,
        "statement": "eats(lion, cow) :- eats(X, lion), sees(X, lion).",
        "description": "If something eats the lion and it sees the lion then the lion eats the cow."
    },
    {
        "id": 15520,
        "statement": "is(rabbit, big) :- is(rabbit, blue), is(rabbit, young).",
        "description": "If the rabbit is blue and the rabbit is young then the rabbit is big."
    },
    {
        "id": 15521,
        "statement": "eats(lion, bald_eagle) :- chases(X, lion).",
        "description": "If something chases the lion then the lion eats the bald eagle."
    },
    {
        "id": 15522,
        "statement": "chases(bald_eagle, rabbit) :- eats(X, bald_eagle), eats(X, cow).",
        "description": "If something eats the bald eagle and it eats the cow then the bald eagle chases the rabbit."
    },
    {
        "id": 15523,
        "statement": "chases(X, cow) :- is(X, round), is(X, rough).",
        "description": "If something is round and rough then it chases the cow."
    },
    {
        "id": 15524,
        "statement": "chases(cow, lion) :- chases(X, cow), is(X, rough).",
        "description": "If something chases the cow and it is rough then the cow chases the lion."
    },
    {
        "id": 15525,
        "statement": "eats(X, lion) :- chases(X, rabbit), not is(X, young).",
        "description": "If something chases the rabbit and it is not young then it eats the lion."
    },
    {
        "id": 15526,
        "statement": "is(bob, white) :- is(bob, blue).",
        "description": "If Bob is blue then Bob is white."
    },
    {
        "id": 15527,
        "statement": "is(X, cold) :- is(X, red), is(X, round).",
        "description": "Red, round things are cold."
    },
    {
        "id": 15528,
        "statement": "visits(X, cow) :- likes(X, bald_eagle).",
        "description": "If something likes the bald eagle then it visits the cow."
    },
    {
        "id": 15529,
        "statement": "likes(X, bald_eagle) :- visits(X, cow), is(X, nice).",
        "description": "If something visits the cow and it is nice then it likes the bald eagle."
    },
    {
        "id": 15530,
        "statement": "sees(squirrel, tiger) :- visits(X, squirrel).",
        "description": "If something visits the squirrel then the squirrel sees the tiger."
    },
    {
        "id": 15531,
        "statement": "is(X, blue) :- sees(X, tiger).",
        "description": "If something sees the tiger then it is blue."
    },
    {
        "id": 15532,
        "statement": "is(cow, round) :- is(X, cold), visits(X, cow).",
        "description": "If something is cold and it visits the cow then the cow is round."
    },
    {
        "id": 15533,
        "statement": "is(X, nice) :- visits(X, bald_eagle), is(X, blue).",
        "description": "If something visits the bald eagle and it is blue then it is nice."
    },
    {
        "id": 15534,
        "statement": "is(X, rough) :- is(X, cold), is(X, furry).",
        "description": "All cold, furry people are rough."
    },
    {
        "id": 15535,
        "statement": "is(X, cold) :- is(X, nice), is(X, rough).",
        "description": "All nice, rough people are cold."
    },
    {
        "id": 15536,
        "statement": "chases(bald_eagle, rabbit) :- likes(X, bald_eagle).",
        "description": "If something likes the bald eagle then the bald eagle chases the rabbit."
    },
    {
        "id": 15537,
        "statement": "is(squirrel, young) :- is(squirrel, rough), chases(squirrel, cow).",
        "description": "If the squirrel is rough and the squirrel chases the cow then the squirrel is young."
    },
    {
        "id": 15538,
        "statement": "is(cow, young) :- chases(X, cow).",
        "description": "If something chases the cow then the cow is young."
    },
    {
        "id": 15539,
        "statement": "likes(cow, rabbit) :- needs(rabbit, cow), is(cow, cold).",
        "description": "If the rabbit needs the cow and the cow is cold then the cow likes the rabbit."
    },
    {
        "id": 15540,
        "statement": "chases(squirrel, cow) :- likes(X, squirrel), chases(X, rabbit).",
        "description": "If something likes the squirrel and it chases the rabbit then the squirrel chases the cow."
    },
    {
        "id": 15541,
        "statement": "is(squirrel, cold) :- likes(X, squirrel), likes(X, cow).",
        "description": "If something likes the squirrel and it likes the cow then the squirrel is cold."
    },
    {
        "id": 15542,
        "statement": "needs(rabbit, bald_eagle) :- needs(X, rabbit), needs(rabbit, cow).",
        "description": "If something needs the rabbit and the rabbit needs the cow then the rabbit needs the bald eagle."
    },
    {
        "id": 15543,
        "statement": "needs(squirrel, bald_eagle) :- chases(squirrel, cow).",
        "description": "If the squirrel chases the cow then the squirrel needs the bald eagle."
    },
    {
        "id": 15544,
        "statement": "needs(X, squirrel) :- is(X, green).",
        "description": "If someone is green then they need the squirrel."
    },
    {
        "id": 15545,
        "statement": "is(squirrel, big) :- likes(X, tiger), visits(X, squirrel).",
        "description": "If someone likes the tiger and they visit the squirrel then the squirrel is big."
    },
    {
        "id": 15546,
        "statement": "is(squirrel, red) :- likes(X, squirrel), is(X, green).",
        "description": "If someone likes the squirrel and they are green then the squirrel is red."
    },
    {
        "id": 15547,
        "statement": "likes(squirrel, rabbit) :- needs(X, squirrel), is(squirrel, red).",
        "description": "If someone needs the squirrel and the squirrel is red then the squirrel likes the rabbit."
    },
    {
        "id": 15548,
        "statement": "likes(X, squirrel) :- is(X, round), is(X, blue).",
        "description": "If someone is round and blue then they like the squirrel."
    },
    {
        "id": 15549,
        "statement": "is(tiger, green) :- likes(X, tiger).",
        "description": "If someone likes the tiger then the tiger is green."
    },
    {
        "id": 15550,
        "statement": "is(X, round) :- is(X, young), is(X, furry).",
        "description": "If something is young and furry then it is round."
    },
    {
        "id": 15551,
        "statement": "is(X, quiet) :- is(X, big), is(X, furry).",
        "description": "Big, furry things are quiet."
    },
    {
        "id": 15552,
        "statement": "is(X, young) :- is(X, white), is(X, smart).",
        "description": "If someone is white and smart then they are young."
    },
    {
        "id": 15553,
        "statement": "is(bob, white) :- is(bob, young), is(bob, smart).",
        "description": "If Bob is young and Bob is smart then Bob is white."
    },
    {
        "id": 15554,
        "statement": "is(X, smart) :- is(X, red), is(X, rough).",
        "description": "All red, rough people are smart."
    },
    {
        "id": 15555,
        "statement": "is(X, blue) :- is(X, nice), is(X, smart).",
        "description": "All nice, smart people are blue."
    },
    {
        "id": 15556,
        "statement": "is(dave, rough) :- is(dave, round).",
        "description": "If Dave is round then Dave is rough."
    },
    {
        "id": 15557,
        "statement": "is(anne, red) :- is(anne, round).",
        "description": "If Anne is round then Anne is red."
    },
    {
        "id": 15558,
        "statement": "is(anne, blue) :- is(anne, quiet).",
        "description": "If Anne is quiet then Anne is blue."
    },
    {
        "id": 15559,
        "statement": "is(X, nice) :- likes(X, rabbit).",
        "description": "If something likes the rabbit then it is nice."
    },
    {
        "id": 15560,
        "statement": "needs(squirrel, mouse) :- is(lion, blue), needs(lion, squirrel).",
        "description": "If the lion is blue and the lion needs the squirrel then the squirrel needs the mouse."
    },
    {
        "id": 15561,
        "statement": "visits(X, mouse) :- is(X, kind), is(X, young).",
        "description": "If something is kind and young then it visits the mouse."
    },
    {
        "id": 15562,
        "statement": "is(mouse, nice) :- likes(X, mouse).",
        "description": "If something likes the mouse then the mouse is nice."
    },
    {
        "id": 15563,
        "statement": "likes(X, lion) :- needs(X, mouse).",
        "description": "If something needs the mouse then it likes the lion."
    },
    {
        "id": 15564,
        "statement": "likes(X, mouse) :- is(X, nice), likes(X, lion).",
        "description": "If something is nice and it likes the lion then it likes the mouse."
    },
    {
        "id": 15565,
        "statement": "needs(mouse, squirrel) :- needs(X, mouse), likes(mouse, squirrel).",
        "description": "If something needs the mouse and the mouse likes the squirrel then the mouse needs the squirrel."
    },
    {
        "id": 15566,
        "statement": "is(X, white) :- is(X, rough), is(X, smart).",
        "description": "Rough, smart things are white."
    },
    {
        "id": 15567,
        "statement": "is(X, blue) :- is(X, nice), is(X, big).",
        "description": "All nice, big things are blue."
    },
    {
        "id": 15568,
        "statement": "is(charlie, young) :- is(charlie, smart), is(charlie, big).",
        "description": "If Charlie is smart and Charlie is big then Charlie is young."
    },
    {
        "id": 15569,
        "statement": "is(X, nice) :- is(X, big), is(X, smart).",
        "description": "Big, smart people are nice."
    },
    {
        "id": 15570,
        "statement": "is(gary, nice) :- is(gary, furry), is(gary, big).",
        "description": "If Gary is furry and Gary is big then Gary is nice."
    },
    {
        "id": 15571,
        "statement": "is(X, big) :- is(X, white), is(X, smart).",
        "description": "If something is white and smart then it is big."
    },
    {
        "id": 15572,
        "statement": "is(charlie, smart) :- is(charlie, cold), is(charlie, big).",
        "description": "If Charlie is cold and Charlie is big then Charlie is smart."
    },
    {
        "id": 15573,
        "statement": "is(X, green) :- is(X, white), is(X, nice).",
        "description": "If something is white and nice then it is green."
    },
    {
        "id": 15574,
        "statement": "sees(X, bald_eagle) :- is(X, rough), is(X, big).",
        "description": "If someone is rough and big then they see the bald eagle."
    },
    {
        "id": 15575,
        "statement": "sees(tiger, squirrel) :- chases(X, tiger).",
        "description": "If someone chases the tiger then the tiger sees the squirrel."
    },
    {
        "id": 15576,
        "statement": "is(bald_eagle, big) :- sees(cow, bald_eagle).",
        "description": "If the cow sees the bald eagle then the bald eagle is big."
    },
    {
        "id": 15577,
        "statement": "chases(X, squirrel) :- is(X, rough).",
        "description": "If someone is rough then they chase the squirrel."
    },
    {
        "id": 15578,
        "statement": "is(cow, big) :- visits(X, cow), is(X, blue).",
        "description": "If someone visits the cow and they are blue then the cow is big."
    },
    {
        "id": 15579,
        "statement": "visits(X, tiger) :- is(X, rough).",
        "description": "If someone is rough then they visit the tiger."
    },
    {
        "id": 15580,
        "statement": "eats(dog, tiger) :- eats(X, dog).",
        "description": "If someone eats the dog then the dog eats the tiger."
    },
    {
        "id": 15581,
        "statement": "eats(cat, dog) :- eats(X, cat), visits(X, dog).",
        "description": "If someone eats the cat and they visit the dog then the cat eats the dog."
    },
    {
        "id": 15582,
        "statement": "eats(X, cat) :- eats(X, tiger).",
        "description": "If someone eats the tiger then they eat the cat."
    },
    {
        "id": 15583,
        "statement": "visits(X, tiger) :- needs(X, tiger).",
        "description": "If something needs the tiger then it visits the tiger."
    },
    {
        "id": 15584,
        "statement": "is(bear, green) :- likes(X, cat), likes(X, bear).",
        "description": "If something likes the cat and it likes the bear then the bear is green."
    },
    {
        "id": 15585,
        "statement": "visits(cat, bear) :- needs(X, cat).",
        "description": "If something needs the cat then the cat visits the bear."
    },
    {
        "id": 15586,
        "statement": "is(X, kind) :- needs(X, tiger), visits(tiger, bear).",
        "description": "If something needs the tiger and the tiger visits the bear then it is kind."
    },
    {
        "id": 15587,
        "statement": "visits(bear, cat) :- likes(X, bear), is(bear, kind).",
        "description": "If something likes the bear and the bear is kind then the bear visits the cat."
    },
    {
        "id": 15588,
        "statement": "needs(cat, tiger) :- likes(rabbit, cat).",
        "description": "If the rabbit likes the cat then the cat needs the tiger."
    },
    {
        "id": 15589,
        "statement": "needs(tiger, rabbit) :- likes(cat, bear), likes(cat, tiger).",
        "description": "If the cat likes the bear and the cat likes the tiger then the tiger needs the rabbit."
    },
    {
        "id": 15590,
        "statement": "likes(X, cat) :- visits(X, tiger).",
        "description": "If something visits the tiger then it likes the cat."
    },
    {
        "id": 15591,
        "statement": "is(bald_eagle, blue) :- visits(X, mouse), sees(X, bald_eagle).",
        "description": "If someone visits the mouse and they see the bald eagle then the bald eagle is blue."
    },
    {
        "id": 15592,
        "statement": "sees(X, cat) :- is(X, blue).",
        "description": "If someone is blue then they see the cat."
    },
    {
        "id": 15593,
        "statement": "is(cat, cold) :- eats(X, bald_eagle), sees(bald_eagle, cat).",
        "description": "If someone eats the bald eagle and the bald eagle sees the cat then the cat is cold."
    },
    {
        "id": 15594,
        "statement": "visits(X, bald_eagle) :- eats(X, bald_eagle).",
        "description": "If someone eats the bald eagle then they visit the bald eagle."
    },
    {
        "id": 15595,
        "statement": "sees(X, bald_eagle) :- is(X, kind).",
        "description": "If someone is kind then they see the bald eagle."
    },
    {
        "id": 15596,
        "statement": "visits(X, cat) :- sees(X, bald_eagle), visits(X, bald_eagle).",
        "description": "If someone sees the bald eagle and they visit the bald eagle then they visit the cat."
    },
    {
        "id": 15597,
        "statement": "is(bald_eagle, kind) :- is(X, cold), sees(X, bald_eagle).",
        "description": "If someone is cold and they see the bald eagle then the bald eagle is kind."
    },
    {
        "id": 15598,
        "statement": "eats(X, mouse) :- eats(X, squirrel), eats(squirrel, mouse).",
        "description": "If someone eats the squirrel and the squirrel eats the mouse then they eat the mouse."
    },
    {
        "id": 15599,
        "statement": "needs(X, mouse) :- needs(X, rabbit), visits(X, squirrel).",
        "description": "If someone needs the rabbit and they visit the squirrel then they need the mouse."
    },
    {
        "id": 15600,
        "statement": "eats(X, mouse) :- is(X, rough), eats(X, squirrel).",
        "description": "If someone is rough and they eat the squirrel then they eat the mouse."
    },
    {
        "id": 15601,
        "statement": "visits(squirrel, mouse) :- needs(X, rabbit), needs(X, squirrel).",
        "description": "If someone needs the rabbit and they need the squirrel then the squirrel visits the mouse."
    },
    {
        "id": 15602,
        "statement": "is(squirrel, green) :- visits(X, squirrel).",
        "description": "If someone visits the squirrel then the squirrel is green."
    },
    {
        "id": 15603,
        "statement": "visits(X, squirrel) :- is(X, rough).",
        "description": "If someone is rough then they visit the squirrel."
    },
    {
        "id": 15604,
        "statement": "needs(X, bear) :- is(X, big), is(X, round).",
        "description": "If someone is big and round then they need the bear."
    },
    {
        "id": 15605,
        "statement": "needs(X, rabbit) :- visits(X, rabbit).",
        "description": "If someone visits the rabbit then they need the rabbit."
    },
    {
        "id": 15606,
        "statement": "likes(cat, dog) :- visits(X, cat), sees(X, dog).",
        "description": "If something visits the cat and it sees the dog then the cat likes the dog."
    },
    {
        "id": 15607,
        "statement": "visits(X, squirrel) :- visits(X, dog).",
        "description": "If something visits the dog then it visits the squirrel."
    },
    {
        "id": 15608,
        "statement": "visits(squirrel, dog) :- is(squirrel, green).",
        "description": "If the squirrel is green then the squirrel visits the dog."
    },
    {
        "id": 15609,
        "statement": "visits(squirrel, dog) :- likes(X, dog), visits(X, squirrel).",
        "description": "If something likes the dog and it visits the squirrel then the squirrel visits the dog."
    },
    {
        "id": 15610,
        "statement": "is(mouse, green) :- likes(X, mouse).",
        "description": "If something likes the mouse then the mouse is green."
    },
    {
        "id": 15611,
        "statement": "is(X, big) :- visits(X, squirrel), visits(squirrel, dog).",
        "description": "If something visits the squirrel and the squirrel visits the dog then it is big."
    },
    {
        "id": 15612,
        "statement": "sees(X, mouse) :- is(X, green).",
        "description": "If something is green then it sees the mouse."
    },
    {
        "id": 15613,
        "statement": "likes(X, squirrel) :- is(X, cold), not is(X, nice).",
        "description": "If something is cold and not nice then it likes the squirrel."
    },
    {
        "id": 15614,
        "statement": "likes(X, cow) :- is(X, nice).",
        "description": "If someone is nice then they like the cow."
    },
    {
        "id": 15615,
        "statement": "likes(bear, lion) :- likes(X, bear).",
        "description": "If someone likes the bear then the bear likes the lion."
    },
    {
        "id": 15616,
        "statement": "sees(X, squirrel) :- likes(X, cow), likes(cow, bear).",
        "description": "If someone likes the cow and the cow likes the bear then they see the squirrel."
    },
    {
        "id": 15617,
        "statement": "is(squirrel, nice) :- sees(lion, squirrel).",
        "description": "If the lion sees the squirrel then the squirrel is nice."
    },
    {
        "id": 15618,
        "statement": "sees(cow, lion) :- is(cow, cold).",
        "description": "If the cow is cold then the cow sees the lion."
    },
    {
        "id": 15619,
        "statement": "is(X, rough) :- is(X, cold), is(X, young).",
        "description": "All cold, young things are rough."
    },
    {
        "id": 15620,
        "statement": "is(X, young) :- is(X, furry), is(X, cold).",
        "description": "Furry, cold things are young."
    },
    {
        "id": 15621,
        "statement": "is(X, round) :- is(X, furry), is(X, cold).",
        "description": "All furry, cold things are round."
    },
    {
        "id": 15622,
        "statement": "is(X, nice) :- is(X, round), is(X, cold).",
        "description": "Round, cold things are nice."
    },
    {
        "id": 15623,
        "statement": "is(X, red) :- is(X, nice), is(X, rough).",
        "description": "If someone is nice and rough then they are red."
    },
    {
        "id": 15624,
        "statement": "is(anne, smart) :- is(anne, kind), is(anne, nice).",
        "description": "If Anne is kind and Anne is nice then Anne is smart."
    },
    {
        "id": 15625,
        "statement": "is(X, rough) :- is(X, red), is(X, nice).",
        "description": "If someone is red and nice then they are rough."
    },
    {
        "id": 15626,
        "statement": "is(X, young) :- is(X, red), is(X, nice).",
        "description": "All red, nice people are young."
    },
    {
        "id": 15627,
        "statement": "is(dave, green) :- is(dave, blue).",
        "description": "If Dave is blue then Dave is green."
    },
    {
        "id": 15628,
        "statement": "is(harry, green) :- is(harry, white), is(harry, rough).",
        "description": "If Harry is white and Harry is rough then Harry is green."
    },
    {
        "id": 15629,
        "statement": "is(X, white) :- is(X, blue), is(X, green).",
        "description": "All blue, green people are white."
    },
    {
        "id": 15630,
        "statement": "is(X, green) :- is(X, rough).",
        "description": "If something is rough then it is green."
    },
    {
        "id": 15631,
        "statement": "is(X, smart) :- is(X, blue), is(X, cold).",
        "description": "If someone is blue and cold then they are smart."
    },
    {
        "id": 15632,
        "statement": "is(charlie, furry) :- is(charlie, smart).",
        "description": "If Charlie is smart then Charlie is furry."
    },
    {
        "id": 15633,
        "statement": "is(X, blue) :- is(X, young), is(X, quiet).",
        "description": "If someone is young and quiet then they are blue."
    },
    {
        "id": 15634,
        "statement": "is(gary, nice) :- is(gary, furry), is(gary, quiet).",
        "description": "If Gary is furry and Gary is quiet then Gary is nice."
    },
    {
        "id": 15635,
        "statement": "is(X, round) :- is(X, smart), is(X, kind).",
        "description": "Smart, kind people are round."
    },
    {
        "id": 15636,
        "statement": "is(X, big) :- is(X, blue), is(X, green).",
        "description": "Blue, green people are big."
    },
    {
        "id": 15637,
        "statement": "is(X, green) :- is(X, quiet), is(X, kind).",
        "description": "Quiet, kind people are green."
    },
    {
        "id": 15638,
        "statement": "chases(dog, cat) :- needs(cow, dog).",
        "description": "If the cow needs the dog then the dog chases the cat."
    },
    {
        "id": 15639,
        "statement": "chases(cow, rabbit) :- sees(X, cow), is(X, blue).",
        "description": "If someone sees the cow and they are blue then the cow chases the rabbit."
    },
    {
        "id": 15640,
        "statement": "sees(cat, rabbit) :- chases(X, cat).",
        "description": "If someone chases the cat then the cat sees the rabbit."
    },
    {
        "id": 15641,
        "statement": "needs(dog, cat) :- is(X, nice), needs(X, dog).",
        "description": "If someone is nice and they need the dog then the dog needs the cat."
    },
    {
        "id": 15642,
        "statement": "sees(X, rabbit) :- is(X, round).",
        "description": "If someone is round then they see the rabbit."
    },
    {
        "id": 15643,
        "statement": "is(bob, quiet) :- is(bob, white).",
        "description": "If Bob is white then Bob is quiet."
    },
    {
        "id": 15644,
        "statement": "is(X, green) :- is(X, rough), is(X, white).",
        "description": "If something is rough and white then it is green."
    },
    {
        "id": 15645,
        "statement": "is(X, green) :- is(X, smart), is(X, red).",
        "description": "All smart, red things are green."
    },
    {
        "id": 15646,
        "statement": "is(erin, red) :- is(erin, rough).",
        "description": "If Erin is rough then Erin is red."
    },
    {
        "id": 15647,
        "statement": "is(fiona, white) :- is(fiona, red), is(fiona, kind).",
        "description": "If Fiona is red and Fiona is kind then Fiona is white."
    },
    {
        "id": 15648,
        "statement": "is(X, red) :- is(X, blue), is(X, white).",
        "description": "Blue, white people are red."
    },
    {
        "id": 15649,
        "statement": "is(dave, young) :- is(dave, green), is(dave, rough).",
        "description": "If Dave is green and Dave is rough then Dave is young."
    },
    {
        "id": 15650,
        "statement": "is(X, young) :- is(X, furry), is(X, red).",
        "description": "If something is furry and red then it is young."
    },
    {
        "id": 15651,
        "statement": "is(X, round) :- is(X, quiet), is(X, kind).",
        "description": "All quiet, kind things are round."
    },
    {
        "id": 15652,
        "statement": "is(X, smart) :- is(X, round), is(X, red).",
        "description": "All round, red things are smart."
    },
    {
        "id": 15653,
        "statement": "is(X, furry) :- is(X, young), is(X, smart).",
        "description": "If something is young and smart then it is furry."
    },
    {
        "id": 15654,
        "statement": "is(X, red) :- is(X, young), is(X, round).",
        "description": "All young, round things are red."
    },
    {
        "id": 15655,
        "statement": "is(X, blue) :- is(X, cold), is(X, rough).",
        "description": "Cold, rough people are blue."
    },
    {
        "id": 15656,
        "statement": "is(X, rough) :- is(X, smart), is(X, blue).",
        "description": "Smart, blue people are rough."
    },
    {
        "id": 15657,
        "statement": "is(erin, nice) :- is(erin, smart), is(erin, white).",
        "description": "If Erin is smart and Erin is white then Erin is nice."
    },
    {
        "id": 15658,
        "statement": "is(X, quiet) :- is(X, furry), is(X, smart).",
        "description": "Furry, smart people are quiet."
    },
    {
        "id": 15659,
        "statement": "is(X, white) :- is(X, furry), is(X, quiet).",
        "description": "If something is furry and quiet then it is white."
    },
    {
        "id": 15660,
        "statement": "is(X, white) :- is(X, big), is(X, kind).",
        "description": "If something is big and kind then it is white."
    },
    {
        "id": 15661,
        "statement": "is(X, furry) :- is(X, white), is(X, kind).",
        "description": "If something is white and kind then it is furry."
    },
    {
        "id": 15662,
        "statement": "is(X, kind) :- is(X, furry), not is(X, green).",
        "description": "If something is furry and not green then it is kind."
    },
    {
        "id": 15663,
        "statement": "is(X, quiet) :- is(X, smart), is(X, kind).",
        "description": "If something is smart and kind then it is quiet."
    },
    {
        "id": 15664,
        "statement": "is(harry, young) :- is(harry, rough), is(harry, quiet).",
        "description": "If Harry is rough and Harry is quiet then Harry is young."
    },
    {
        "id": 15665,
        "statement": "is(X, green) :- is(X, young), is(X, quiet).",
        "description": "Young, quiet things are green."
    },
    {
        "id": 15666,
        "statement": "is(bob, red) :- is(bob, smart), is(bob, quiet).",
        "description": "If Bob is smart and Bob is quiet then Bob is red."
    },
    {
        "id": 15667,
        "statement": "is(X, nice) :- is(X, green), is(X, quiet).",
        "description": "Green, quiet things are nice."
    },
    {
        "id": 15668,
        "statement": "is(X, quiet) :- is(X, nice), is(X, young).",
        "description": "Nice, young things are quiet."
    },
    {
        "id": 15669,
        "statement": "is(X, nice) :- is(X, furry), is(X, young).",
        "description": "All furry, young things are nice."
    },
    {
        "id": 15670,
        "statement": "is(dave, nice) :- is(dave, blue), is(dave, young).",
        "description": "If Dave is blue and Dave is young then Dave is nice."
    },
    {
        "id": 15671,
        "statement": "is(X, young) :- is(X, green), is(X, blue).",
        "description": "Green, blue things are young."
    },
    {
        "id": 15672,
        "statement": "eats(X, tiger) :- eats(X, squirrel), eats(squirrel, bear).",
        "description": "If someone eats the squirrel and the squirrel eats the bear then they eat the tiger."
    },
    {
        "id": 15673,
        "statement": "eats(cat, squirrel) :- is(X, blue), chases(X, cat).",
        "description": "If someone is blue and they chase the cat then the cat eats the squirrel."
    },
    {
        "id": 15674,
        "statement": "eats(X, cat) :- is(X, big).",
        "description": "If someone is big then they eat the cat."
    },
    {
        "id": 15675,
        "statement": "visits(X, bear) :- eats(X, tiger), chases(X, squirrel).",
        "description": "If someone eats the tiger and they chase the squirrel then they visit the bear."
    },
    {
        "id": 15676,
        "statement": "is(squirrel, young) :- visits(X, squirrel), eats(X, tiger).",
        "description": "If someone visits the squirrel and they eat the tiger then the squirrel is young."
    },
    {
        "id": 15677,
        "statement": "eats(tiger, squirrel) :- eats(X, tiger).",
        "description": "If someone eats the tiger then the tiger eats the squirrel."
    },
    {
        "id": 15678,
        "statement": "is(X, young) :- chases(X, squirrel), chases(squirrel, cat).",
        "description": "If someone chases the squirrel and the squirrel chases the cat then they are young."
    },
    {
        "id": 15679,
        "statement": "eats(bear, cat) :- is(bear, young).",
        "description": "If the bear is young then the bear eats the cat."
    },
    {
        "id": 15680,
        "statement": "chases(cow, squirrel) :- sees(X, cow).",
        "description": "If something sees the cow then the cow chases the squirrel."
    },
    {
        "id": 15681,
        "statement": "sees(X, cow) :- chases(X, mouse).",
        "description": "If something chases the mouse then it sees the cow."
    },
    {
        "id": 15682,
        "statement": "sees(X, cow) :- is(X, blue), eats(X, mouse).",
        "description": "If something is blue and it eats the mouse then it sees the cow."
    },
    {
        "id": 15683,
        "statement": "chases(X, mouse) :- chases(X, squirrel), sees(X, squirrel).",
        "description": "If something chases the squirrel and it sees the squirrel then it chases the mouse."
    },
    {
        "id": 15684,
        "statement": "eats(mouse, bald_eagle) :- chases(X, squirrel), eats(X, mouse).",
        "description": "If something chases the squirrel and it eats the mouse then the mouse eats the bald eagle."
    },
    {
        "id": 15685,
        "statement": "chases(cow, mouse) :- eats(X, bald_eagle), chases(bald_eagle, cow).",
        "description": "If something eats the bald eagle and the bald eagle chases the cow then the cow chases the mouse."
    },
    {
        "id": 15686,
        "statement": "is(charlie, blue) :- is(charlie, smart), is(charlie, rough).",
        "description": "If Charlie is smart and Charlie is rough then Charlie is blue."
    },
    {
        "id": 15687,
        "statement": "is(bald_eagle, cold) :- likes(X, bald_eagle), not eats(X, mouse).",
        "description": "If someone likes the bald eagle and they do not eat the mouse then the bald eagle is cold."
    },
    {
        "id": 15688,
        "statement": "eats(X, rabbit) :- likes(X, bald_eagle).",
        "description": "If someone likes the bald eagle then they eat the rabbit."
    },
    {
        "id": 15689,
        "statement": "likes(X, bald_eagle) :- is(X, nice).",
        "description": "If someone is nice then they like the bald eagle."
    },
    {
        "id": 15690,
        "statement": "likes(X, rabbit) :- is(X, red), likes(X, bald_eagle).",
        "description": "If someone is red and they like the bald eagle then they like the rabbit."
    },
    {
        "id": 15691,
        "statement": "eats(X, bald_eagle) :- is(X, red).",
        "description": "If someone is red then they eat the bald eagle."
    },
    {
        "id": 15692,
        "statement": "is(X, furry) :- is(X, cold), is(X, white).",
        "description": "If someone is cold and white then they are furry."
    },
    {
        "id": 15693,
        "statement": "is(charlie, blue) :- is(charlie, quiet).",
        "description": "If Charlie is quiet then Charlie is blue."
    },
    {
        "id": 15694,
        "statement": "is(fiona, quiet) :- is(fiona, cold), is(fiona, white).",
        "description": "If Fiona is cold and Fiona is white then Fiona is quiet."
    },
    {
        "id": 15695,
        "statement": "is(X, quiet) :- is(X, furry), is(X, smart).",
        "description": "If someone is furry and smart then they are quiet."
    },
    {
        "id": 15696,
        "statement": "is(X, white) :- is(X, smart), is(X, blue).",
        "description": "All smart, blue people are white."
    },
    {
        "id": 15697,
        "statement": "is(X, cold) :- is(X, round), is(X, smart).",
        "description": "If someone is round and smart then they are cold."
    },
    {
        "id": 15698,
        "statement": "is(charlie, white) :- is(charlie, furry).",
        "description": "If Charlie is furry then Charlie is white."
    },
    {
        "id": 15699,
        "statement": "is(X, rough) :- is(X, young), is(X, round).",
        "description": "Young, round people are rough."
    },
    {
        "id": 15700,
        "statement": "is(X, rough) :- is(X, quiet), is(X, round).",
        "description": "All quiet, round people are rough."
    },
    {
        "id": 15701,
        "statement": "is(X, blue) :- is(X, quiet), is(X, green).",
        "description": "All quiet, green people are blue."
    },
    {
        "id": 15702,
        "statement": "is(gary, green) :- is(gary, nice), is(gary, blue).",
        "description": "If Gary is nice and Gary is blue then Gary is green."
    },
    {
        "id": 15703,
        "statement": "is(X, green) :- is(X, round), is(X, quiet).",
        "description": "Round, quiet people are green."
    },
    {
        "id": 15704,
        "statement": "is(X, green) :- is(X, cold), is(X, kind).",
        "description": "If something is cold and kind then it is green."
    },
    {
        "id": 15705,
        "statement": "is(X, green) :- is(X, young), is(X, furry).",
        "description": "All young, furry things are green."
    },
    {
        "id": 15706,
        "statement": "is(X, quiet) :- is(X, young), is(X, kind).",
        "description": "All young, kind things are quiet."
    },
    {
        "id": 15707,
        "statement": "is(X, quiet) :- is(X, green), is(X, cold).",
        "description": "All green, cold things are quiet."
    },
    {
        "id": 15708,
        "statement": "is(X, cold) :- is(X, green), is(X, furry).",
        "description": "Green, furry things are cold."
    },
    {
        "id": 15709,
        "statement": "is(X, cold) :- is(X, nice), is(X, quiet).",
        "description": "All nice, quiet things are cold."
    },
    {
        "id": 15710,
        "statement": "is(fiona, cold) :- is(fiona, nice), is(fiona, quiet).",
        "description": "If Fiona is nice and Fiona is quiet then Fiona is cold."
    },
    {
        "id": 15711,
        "statement": "is(bear, round) :- likes(X, bear).",
        "description": "If someone likes the bear then the bear is round."
    },
    {
        "id": 15712,
        "statement": "likes(rabbit, tiger) :- sees(X, bear), likes(bear, rabbit).",
        "description": "If someone sees the bear and the bear likes the rabbit then the rabbit likes the tiger."
    },
    {
        "id": 15713,
        "statement": "likes(bear, tiger) :- is(bear, big), is(bear, round).",
        "description": "If the bear is big and the bear is round then the bear likes the tiger."
    },
    {
        "id": 15714,
        "statement": "likes(X, bear) :- is(X, big), sees(X, tiger).",
        "description": "If someone is big and they see the tiger then they like the bear."
    },
    {
        "id": 15715,
        "statement": "is(anne, green) :- is(anne, furry), is(anne, white).",
        "description": "If Anne is furry and Anne is white then Anne is green."
    },
    {
        "id": 15716,
        "statement": "is(X, red) :- is(X, green), is(X, white).",
        "description": "If someone is green and white then they are red."
    },
    {
        "id": 15717,
        "statement": "is(bob, furry) :- is(bob, cold), is(bob, young).",
        "description": "If Bob is cold and Bob is young then Bob is furry."
    },
    {
        "id": 15718,
        "statement": "is(X, nice) :- is(X, young), not is(X, cold).",
        "description": "If something is young and not cold then it is nice."
    },
    {
        "id": 15719,
        "statement": "is(X, green) :- is(X, big), is(X, white).",
        "description": "All big, white things are green."
    },
    {
        "id": 15720,
        "statement": "is(X, furry) :- is(X, cold), not is(X, red).",
        "description": "If something is cold and not red then it is furry."
    },
    {
        "id": 15721,
        "statement": "is(fiona, cold) :- is(fiona, round), is(fiona, kind).",
        "description": "If Fiona is round and Fiona is kind then Fiona is cold."
    },
    {
        "id": 15722,
        "statement": "is(charlie, nice) :- is(charlie, kind).",
        "description": "If Charlie is kind then Charlie is nice."
    },
    {
        "id": 15723,
        "statement": "is(X, nice) :- is(X, round), is(X, kind).",
        "description": "All round, kind people are nice."
    },
    {
        "id": 15724,
        "statement": "is(X, young) :- is(X, rough), is(X, nice).",
        "description": "All rough, nice people are young."
    },
    {
        "id": 15725,
        "statement": "sees(bald_eagle, dog) :- is(bald_eagle, nice).",
        "description": "If the bald eagle is nice then the bald eagle sees the dog."
    },
    {
        "id": 15726,
        "statement": "eats(lion, bald_eagle) :- eats(dog, lion), eats(lion, dog).",
        "description": "If the dog eats the lion and the lion eats the dog then the lion eats the bald eagle."
    },
    {
        "id": 15727,
        "statement": "is(dog, big) :- sees(X, dog), eats(X, squirrel).",
        "description": "If someone sees the dog and they eat the squirrel then the dog is big."
    },
    {
        "id": 15728,
        "statement": "chases(dog, lion) :- is(X, round), chases(X, dog).",
        "description": "If someone is round and they chase the dog then the dog chases the lion."
    },
    {
        "id": 15729,
        "statement": "eats(lion, bald_eagle) :- eats(X, lion).",
        "description": "If someone eats the lion then the lion eats the bald eagle."
    },
    {
        "id": 15730,
        "statement": "eats(bald_eagle, squirrel) :- is(squirrel, blue), eats(squirrel, bald_eagle).",
        "description": "If the squirrel is blue and the squirrel eats the bald eagle then the bald eagle eats the squirrel."
    },
    {
        "id": 15731,
        "statement": "eats(X, lion) :- eats(X, bald_eagle), eats(bald_eagle, squirrel).",
        "description": "If someone eats the bald eagle and the bald eagle eats the squirrel then they eat the lion."
    },
    {
        "id": 15732,
        "statement": "eats(squirrel, bald_eagle) :- is(squirrel, big).",
        "description": "If the squirrel is big then the squirrel eats the bald eagle."
    },
    {
        "id": 15733,
        "statement": "chases(squirrel, dog) :- is(X, nice), chases(X, squirrel).",
        "description": "If someone is nice and they chase the squirrel then the squirrel chases the dog."
    },
    {
        "id": 15734,
        "statement": "is(X, smart) :- is(X, round), is(X, big).",
        "description": "All round, big people are smart."
    },
    {
        "id": 15735,
        "statement": "is(X, quiet) :- is(X, blue), is(X, furry).",
        "description": "If someone is blue and furry then they are quiet."
    },
    {
        "id": 15736,
        "statement": "is(X, quiet) :- is(X, round), is(X, red).",
        "description": "All round, red people are quiet."
    },
    {
        "id": 15737,
        "statement": "is(X, big) :- is(X, round), is(X, quiet).",
        "description": "Round, quiet people are big."
    },
    {
        "id": 15738,
        "statement": "is(X, round) :- is(X, smart), is(X, furry).",
        "description": "Smart, furry people are round."
    },
    {
        "id": 15739,
        "statement": "is(X, red) :- is(X, big), is(X, nice).",
        "description": "Big, nice people are red."
    },
    {
        "id": 15740,
        "statement": "is(dave, red) :- is(dave, young), is(dave, nice).",
        "description": "If Dave is young and Dave is nice then Dave is red."
    },
    {
        "id": 15741,
        "statement": "is(X, nice) :- is(X, red), is(X, young).",
        "description": "Red, young people are nice."
    },
    {
        "id": 15742,
        "statement": "is(X, quiet) :- is(X, big), is(X, young).",
        "description": "If someone is big and young then they are quiet."
    },
    {
        "id": 15743,
        "statement": "is(squirrel, red) :- is(squirrel, round).",
        "description": "If the squirrel is round then the squirrel is red."
    },
    {
        "id": 15744,
        "statement": "likes(X, squirrel) :- likes(X, lion), is(lion, blue).",
        "description": "If something likes the lion and the lion is blue then it likes the squirrel."
    },
    {
        "id": 15745,
        "statement": "is(lion, big) :- is(X, big), needs(X, lion).",
        "description": "If something is big and it needs the lion then the lion is big."
    },
    {
        "id": 15746,
        "statement": "needs(X, lion) :- needs(X, dog).",
        "description": "If something needs the dog then it needs the lion."
    },
    {
        "id": 15747,
        "statement": "visits(X, dog) :- needs(X, squirrel), is(X, big).",
        "description": "If something needs the squirrel and it is big then it visits the dog."
    },
    {
        "id": 15748,
        "statement": "likes(X, dog) :- visits(X, dog).",
        "description": "If something visits the dog then it likes the dog."
    },
    {
        "id": 15749,
        "statement": "needs(squirrel, dog) :- needs(lion, squirrel), visits(squirrel, dog).",
        "description": "If the lion needs the squirrel and the squirrel visits the dog then the squirrel needs the dog."
    },
    {
        "id": 15750,
        "statement": "is(dog, red) :- needs(X, dog), not likes(dog, mouse).",
        "description": "If something needs the dog and the dog does not like the mouse then the dog is red."
    },
    {
        "id": 15751,
        "statement": "likes(X, dog) :- needs(X, lion), is(X, rough).",
        "description": "If something needs the lion and it is rough then it likes the dog."
    },
    {
        "id": 15752,
        "statement": "likes(X, dog) :- needs(X, dog).",
        "description": "If something needs the dog then it likes the dog."
    },
    {
        "id": 15753,
        "statement": "is(X, red) :- is(X, rough), likes(X, rabbit).",
        "description": "If something is rough and it likes the rabbit then it is red."
    },
    {
        "id": 15754,
        "statement": "needs(X, lion) :- likes(X, dog), is(dog, red).",
        "description": "If something likes the dog and the dog is red then it needs the lion."
    },
    {
        "id": 15755,
        "statement": "needs(lion, dog) :- needs(X, lion).",
        "description": "If something needs the lion then the lion needs the dog."
    },
    {
        "id": 15756,
        "statement": "likes(rabbit, dog) :- needs(X, rabbit), not visits(X, rabbit).",
        "description": "If something needs the rabbit and it does not visit the rabbit then the rabbit likes the dog."
    },
    {
        "id": 15757,
        "statement": "likes(X, rabbit) :- needs(X, lion).",
        "description": "If something needs the lion then it likes the rabbit."
    },
    {
        "id": 15758,
        "statement": "is(dog, big) :- needs(X, dog), is(X, red).",
        "description": "If something needs the dog and it is red then the dog is big."
    },
    {
        "id": 15759,
        "statement": "is(anne, kind) :- is(anne, round), is(anne, green).",
        "description": "If Anne is round and Anne is green then Anne is kind."
    },
    {
        "id": 15760,
        "statement": "is(X, nice) :- is(X, furry), is(X, kind).",
        "description": "Furry, kind people are nice."
    },
    {
        "id": 15761,
        "statement": "is(X, green) :- is(X, rough), is(X, quiet).",
        "description": "All rough, quiet people are green."
    },
    {
        "id": 15762,
        "statement": "is(X, white) :- is(X, furry), is(X, big).",
        "description": "All furry, big things are white."
    },
    {
        "id": 15763,
        "statement": "is(X, big) :- is(X, blue), is(X, young).",
        "description": "If something is blue and young then it is big."
    },
    {
        "id": 15764,
        "statement": "is(gary, blue) :- is(gary, furry), is(gary, young).",
        "description": "If Gary is furry and Gary is young then Gary is blue."
    },
    {
        "id": 15765,
        "statement": "is(X, nice) :- is(X, young), is(X, furry).",
        "description": "If something is young and furry then it is nice."
    },
    {
        "id": 15766,
        "statement": "is(X, furry) :- is(X, big), is(X, nice).",
        "description": "Big, nice things are furry."
    },
    {
        "id": 15767,
        "statement": "chases(X, bear) :- is(X, kind), not eats(X, squirrel).",
        "description": "If someone is kind and they do not eat the squirrel then they chase the bear."
    },
    {
        "id": 15768,
        "statement": "needs(squirrel, lion) :- needs(X, squirrel), not is(X, round).",
        "description": "If someone needs the squirrel and they are not round then the squirrel needs the lion."
    },
    {
        "id": 15769,
        "statement": "needs(lion, mouse) :- needs(X, lion), not needs(lion, bear).",
        "description": "If someone needs the lion and the lion does not need the bear then the lion needs the mouse."
    },
    {
        "id": 15770,
        "statement": "needs(squirrel, mouse) :- needs(X, squirrel).",
        "description": "If someone needs the squirrel then the squirrel needs the mouse."
    },
    {
        "id": 15771,
        "statement": "chases(bear, mouse) :- eats(X, bear), not chases(X, bear).",
        "description": "If someone eats the bear and they do not chase the bear then the bear chases the mouse."
    },
    {
        "id": 15772,
        "statement": "chases(X, squirrel) :- chases(X, mouse).",
        "description": "If someone chases the mouse then they chase the squirrel."
    },
    {
        "id": 15773,
        "statement": "chases(squirrel, lion) :- chases(X, squirrel), not is(squirrel, cold).",
        "description": "If someone chases the squirrel and the squirrel is not cold then the squirrel chases the lion."
    },
    {
        "id": 15774,
        "statement": "eats(X, bear) :- chases(X, squirrel).",
        "description": "If someone chases the squirrel then they eat the bear."
    },
    {
        "id": 15775,
        "statement": "chases(cow, mouse) :- is(X, cold), eats(X, cow).",
        "description": "If something is cold and it eats the cow then the cow chases the mouse."
    },
    {
        "id": 15776,
        "statement": "eats(lion, mouse) :- is(X, rough), chases(X, lion).",
        "description": "If something is rough and it chases the lion then the lion eats the mouse."
    },
    {
        "id": 15777,
        "statement": "eats(X, cow) :- is(X, young).",
        "description": "If something is young then it eats the cow."
    },
    {
        "id": 15778,
        "statement": "is(lion, green) :- chases(X, lion), is(lion, young).",
        "description": "If something chases the lion and the lion is young then the lion is green."
    },
    {
        "id": 15779,
        "statement": "chases(cow, lion) :- is(X, young), eats(X, cow).",
        "description": "If something is young and it eats the cow then the cow chases the lion."
    },
    {
        "id": 15780,
        "statement": "needs(X, cow) :- eats(X, rabbit).",
        "description": "If something eats the rabbit then it needs the cow."
    },
    {
        "id": 15781,
        "statement": "sees(mouse, lion) :- likes(X, mouse), not is(X, red).",
        "description": "If something likes the mouse and it is not red then the mouse sees the lion."
    },
    {
        "id": 15782,
        "statement": "is(bear, young) :- is(bear, green), not visits(bear, lion).",
        "description": "If the bear is green and the bear does not visit the lion then the bear is young."
    },
    {
        "id": 15783,
        "statement": "is(bear, green) :- likes(X, bear).",
        "description": "If something likes the bear then the bear is green."
    },
    {
        "id": 15784,
        "statement": "sees(X, lion) :- is(X, green).",
        "description": "If something is green then it sees the lion."
    },
    {
        "id": 15785,
        "statement": "visits(mouse, tiger) :- is(X, green), not sees(X, mouse).",
        "description": "If something is green and it does not see the mouse then the mouse visits the tiger."
    },
    {
        "id": 15786,
        "statement": "likes(lion, tiger) :- not visits(lion, tiger).",
        "description": "If the lion does not visit the tiger then the lion likes the tiger."
    },
    {
        "id": 15787,
        "statement": "sees(mouse, bear) :- visits(X, mouse).",
        "description": "If something visits the mouse then the mouse sees the bear."
    },
    {
        "id": 15788,
        "statement": "is(mouse, young) :- visits(X, bear), likes(bear, mouse).",
        "description": "If something visits the bear and the bear likes the mouse then the mouse is young."
    },
    {
        "id": 15789,
        "statement": "is(X, white) :- is(X, young), is(X, smart).",
        "description": "If someone is young and smart then they are white."
    },
    {
        "id": 15790,
        "statement": "is(X, white) :- is(X, young), is(X, rough).",
        "description": "All young, rough people are white."
    },
    {
        "id": 15791,
        "statement": "is(X, blue) :- is(X, white), is(X, smart).",
        "description": "All white, smart people are blue."
    },
    {
        "id": 15792,
        "statement": "is(X, rough) :- is(X, kind), is(X, young).",
        "description": "If someone is kind and young then they are rough."
    },
    {
        "id": 15793,
        "statement": "needs(lion, bear) :- likes(X, lion), is(X, rough).",
        "description": "If something likes the lion and it is rough then the lion needs the bear."
    },
    {
        "id": 15794,
        "statement": "needs(lion, bear) :- is(lion, red).",
        "description": "If the lion is red then the lion needs the bear."
    },
    {
        "id": 15795,
        "statement": "eats(bear, cow) :- likes(X, bear).",
        "description": "If something likes the bear then the bear eats the cow."
    },
    {
        "id": 15796,
        "statement": "likes(lion, bear) :- likes(X, lion), is(lion, nice).",
        "description": "If something likes the lion and the lion is nice then the lion likes the bear."
    },
    {
        "id": 15797,
        "statement": "is(squirrel, rough) :- eats(X, squirrel), not is(squirrel, blue).",
        "description": "If something eats the squirrel and the squirrel is not blue then the squirrel is rough."
    },
    {
        "id": 15798,
        "statement": "is(X, red) :- needs(X, bear).",
        "description": "If something needs the bear then it is red."
    },
    {
        "id": 15799,
        "statement": "likes(X, bear) :- eats(X, cow).",
        "description": "If something eats the cow then it likes the bear."
    },
    {
        "id": 15800,
        "statement": "chases(mouse, cow) :- eats(X, cow), eats(cow, mouse).",
        "description": "If something eats the cow and the cow eats the mouse then the mouse chases the cow."
    },
    {
        "id": 15801,
        "statement": "chases(mouse, cow) :- sees(X, mouse).",
        "description": "If something sees the mouse then the mouse chases the cow."
    },
    {
        "id": 15802,
        "statement": "is(cow, blue) :- eats(X, cow), chases(cow, bear).",
        "description": "If something eats the cow and the cow chases the bear then the cow is blue."
    },
    {
        "id": 15803,
        "statement": "sees(X, bear) :- eats(X, cow), is(cow, round).",
        "description": "If something eats the cow and the cow is round then it sees the bear."
    },
    {
        "id": 15804,
        "statement": "sees(bear, cow) :- eats(dog, cow), not eats(dog, bear).",
        "description": "If the dog eats the cow and the dog does not eat the bear then the bear sees the cow."
    },
    {
        "id": 15805,
        "statement": "eats(X, dog) :- is(X, blue).",
        "description": "If something is blue then it eats the dog."
    },
    {
        "id": 15806,
        "statement": "sees(X, mouse) :- eats(X, cow).",
        "description": "If something eats the cow then it sees the mouse."
    },
    {
        "id": 15807,
        "statement": "needs(X, dog) :- eats(X, dog).",
        "description": "If something eats the dog then it needs the dog."
    },
    {
        "id": 15808,
        "statement": "is(cow, round) :- eats(X, cow).",
        "description": "If something eats the cow then the cow is round."
    },
    {
        "id": 15809,
        "statement": "eats(X, bear) :- eats(X, dog), sees(dog, cow).",
        "description": "If something eats the dog and the dog sees the cow then it eats the bear."
    },
    {
        "id": 15810,
        "statement": "is(X, kind) :- is(X, blue), is(X, smart).",
        "description": "All blue, smart people are kind."
    },
    {
        "id": 15811,
        "statement": "likes(tiger, lion) :- likes(X, tiger), chases(X, tiger).",
        "description": "If someone likes the tiger and they chase the tiger then the tiger likes the lion."
    },
    {
        "id": 15812,
        "statement": "likes(mouse, lion) :- likes(X, mouse), chases(mouse, tiger).",
        "description": "If someone likes the mouse and the mouse chases the tiger then the mouse likes the lion."
    },
    {
        "id": 15813,
        "statement": "needs(X, bear) :- is(X, green), is(X, rough).",
        "description": "If someone is green and rough then they need the bear."
    },
    {
        "id": 15814,
        "statement": "is(lion, cold) :- likes(tiger, lion), chases(tiger, lion).",
        "description": "If the tiger likes the lion and the tiger chases the lion then the lion is cold."
    },
    {
        "id": 15815,
        "statement": "needs(X, tiger) :- needs(X, bear).",
        "description": "If someone needs the bear then they need the tiger."
    },
    {
        "id": 15816,
        "statement": "is(bear, cold) :- needs(mouse, bear), needs(mouse, tiger).",
        "description": "If the mouse needs the bear and the mouse needs the tiger then the bear is cold."
    },
    {
        "id": 15817,
        "statement": "likes(bear, lion) :- likes(X, bear), chases(X, lion).",
        "description": "If someone likes the bear and they chase the lion then the bear likes the lion."
    },
    {
        "id": 15818,
        "statement": "likes(lion, tiger) :- likes(X, lion), is(lion, red).",
        "description": "If someone likes the lion and the lion is red then the lion likes the tiger."
    },
    {
        "id": 15819,
        "statement": "is(X, rough) :- is(X, smart), is(X, red).",
        "description": "All smart, red people are rough."
    },
    {
        "id": 15820,
        "statement": "is(X, big) :- is(X, round), is(X, furry).",
        "description": "If someone is round and furry then they are big."
    },
    {
        "id": 15821,
        "statement": "is(X, white) :- is(X, round), is(X, big).",
        "description": "Round, big people are white."
    },
    {
        "id": 15822,
        "statement": "eats(lion, tiger) :- chases(X, lion).",
        "description": "If someone chases the lion then the lion eats the tiger."
    },
    {
        "id": 15823,
        "statement": "chases(tiger, lion) :- is(tiger, kind).",
        "description": "If the tiger is kind then the tiger chases the lion."
    },
    {
        "id": 15824,
        "statement": "chases(X, cat) :- eats(X, tiger), is(tiger, blue).",
        "description": "If someone eats the tiger and the tiger is blue then they chase the cat."
    },
    {
        "id": 15825,
        "statement": "eats(X, lion) :- chases(X, lion).",
        "description": "If someone chases the lion then they eat the lion."
    },
    {
        "id": 15826,
        "statement": "is(tiger, kind) :- likes(X, tiger).",
        "description": "If someone likes the tiger then the tiger is kind."
    },
    {
        "id": 15827,
        "statement": "is(cat, nice) :- eats(X, cat), eats(cat, bear).",
        "description": "If someone eats the cat and the cat eats the bear then the cat is nice."
    },
    {
        "id": 15828,
        "statement": "likes(X, tiger) :- is(X, round), is(X, nice).",
        "description": "If someone is round and nice then they like the tiger."
    },
    {
        "id": 15829,
        "statement": "chases(X, dog) :- is(X, big).",
        "description": "If something is big then it chases the dog."
    },
    {
        "id": 15830,
        "statement": "chases(squirrel, mouse) :- needs(tiger, squirrel), chases(squirrel, tiger).",
        "description": "If the tiger needs the squirrel and the squirrel chases the tiger then the squirrel chases the mouse."
    },
    {
        "id": 15831,
        "statement": "is(squirrel, cold) :- needs(X, squirrel), not needs(squirrel, mouse).",
        "description": "If something needs the squirrel and the squirrel does not need the mouse then the squirrel is cold."
    },
    {
        "id": 15832,
        "statement": "is(tiger, big) :- visits(X, squirrel), not needs(X, tiger).",
        "description": "If something visits the squirrel and it does not need the tiger then the tiger is big."
    },
    {
        "id": 15833,
        "statement": "visits(X, dog) :- chases(X, dog).",
        "description": "If something chases the dog then it visits the dog."
    },
    {
        "id": 15834,
        "statement": "chases(dog, tiger) :- is(dog, cold), not is(dog, big).",
        "description": "If the dog is cold and the dog is not big then the dog chases the tiger."
    },
    {
        "id": 15835,
        "statement": "is(charlie, kind) :- is(charlie, furry), is(charlie, cold).",
        "description": "If Charlie is furry and Charlie is cold then Charlie is kind."
    },
    {
        "id": 15836,
        "statement": "is(X, young) :- is(X, cold), is(X, furry).",
        "description": "Cold, furry people are young."
    },
    {
        "id": 15837,
        "statement": "is(X, round) :- is(X, blue), not is(X, cold).",
        "description": "If someone is blue and not cold then they are round."
    },
    {
        "id": 15838,
        "statement": "is(X, kind) :- is(X, furry), not is(X, round).",
        "description": "If someone is furry and not round then they are kind."
    },
    {
        "id": 15839,
        "statement": "is(anne, blue) :- is(anne, rough).",
        "description": "If Anne is rough then Anne is blue."
    },
    {
        "id": 15840,
        "statement": "is(anne, red) :- is(anne, round), is(anne, blue).",
        "description": "If Anne is round and Anne is blue then Anne is red."
    },
    {
        "id": 15841,
        "statement": "is(anne, smart) :- is(anne, blue), is(anne, red).",
        "description": "If Anne is blue and Anne is red then Anne is smart."
    },
    {
        "id": 15842,
        "statement": "is(X, red) :- is(X, smart), not is(X, quiet).",
        "description": "If someone is smart and not quiet then they are red."
    },
    {
        "id": 15843,
        "statement": "is(X, red) :- is(X, quiet), is(X, rough).",
        "description": "All quiet, rough people are red."
    },
    {
        "id": 15844,
        "statement": "is(X, young) :- is(X, furry), is(X, cold).",
        "description": "If someone is furry and cold then they are young."
    },
    {
        "id": 15845,
        "statement": "is(X, furry) :- is(X, young), is(X, red).",
        "description": "All young, red people are furry."
    },
    {
        "id": 15846,
        "statement": "is(X, rough) :- is(X, young), not is(X, cold).",
        "description": "If someone is young and not cold then they are rough."
    },
    {
        "id": 15847,
        "statement": "visits(X, bear) :- is(X, kind).",
        "description": "If someone is kind then they visit the bear."
    },
    {
        "id": 15848,
        "statement": "is(bear, red) :- is(bear, kind), not is(bear, young).",
        "description": "If the bear is kind and the bear is not young then the bear is red."
    },
    {
        "id": 15849,
        "statement": "sees(cat, mouse) :- sees(X, cat), chases(cat, rabbit).",
        "description": "If someone sees the cat and the cat chases the rabbit then the cat sees the mouse."
    },
    {
        "id": 15850,
        "statement": "is(mouse, kind) :- sees(X, mouse).",
        "description": "If someone sees the mouse then the mouse is kind."
    },
    {
        "id": 15851,
        "statement": "is(cat, young) :- chases(mouse, cat).",
        "description": "If the mouse chases the cat then the cat is young."
    },
    {
        "id": 15852,
        "statement": "chases(X, rabbit) :- chases(X, cat).",
        "description": "If someone chases the cat then they chase the rabbit."
    },
    {
        "id": 15853,
        "statement": "chases(bear, mouse) :- visits(X, bear), not sees(X, cat).",
        "description": "If someone visits the bear and they do not see the cat then the bear chases the mouse."
    },
    {
        "id": 15854,
        "statement": "chases(cat, lion) :- likes(tiger, cat), not likes(rabbit, tiger).",
        "description": "If the tiger likes the cat and the rabbit does not like the tiger then the cat chases the lion."
    },
    {
        "id": 15855,
        "statement": "is(X, rough) :- likes(X, cat), not visits(cat, tiger).",
        "description": "If someone likes the cat and the cat does not visit the tiger then they are rough."
    },
    {
        "id": 15856,
        "statement": "is(X, rough) :- chases(X, lion).",
        "description": "If someone chases the lion then they are rough."
    },
    {
        "id": 15857,
        "statement": "visits(tiger, cat) :- is(tiger, young).",
        "description": "If the tiger is young then the tiger visits the cat."
    },
    {
        "id": 15858,
        "statement": "likes(X, cat) :- is(X, green), not likes(X, lion).",
        "description": "If someone is green and they do not like the lion then they like the cat."
    },
    {
        "id": 15859,
        "statement": "chases(lion, cat) :- chases(lion, tiger), not likes(tiger, lion).",
        "description": "If the lion chases the tiger and the tiger does not like the lion then the lion chases the cat."
    },
    {
        "id": 15860,
        "statement": "is(X, round) :- is(X, white), is(X, rough).",
        "description": "If something is white and rough then it is round."
    },
    {
        "id": 15861,
        "statement": "is(X, red) :- is(X, furry), is(X, kind).",
        "description": "Furry, kind things are red."
    },
    {
        "id": 15862,
        "statement": "is(fiona, big) :- is(fiona, white), is(fiona, smart).",
        "description": "If Fiona is white and Fiona is smart then Fiona is big."
    },
    {
        "id": 15863,
        "statement": "is(X, smart) :- is(X, nice), is(X, big).",
        "description": "All nice, big things are smart."
    },
    {
        "id": 15864,
        "statement": "likes(X, lion) :- needs(X, tiger), sees(X, rabbit).",
        "description": "If something needs the tiger and it sees the rabbit then it likes the lion."
    },
    {
        "id": 15865,
        "statement": "sees(X, dog) :- likes(X, dog).",
        "description": "If something likes the dog then it sees the dog."
    },
    {
        "id": 15866,
        "statement": "sees(X, rabbit) :- likes(X, tiger).",
        "description": "If something likes the tiger then it sees the rabbit."
    },
    {
        "id": 15867,
        "statement": "sees(dog, rabbit) :- sees(X, dog).",
        "description": "If something sees the dog then the dog sees the rabbit."
    },
    {
        "id": 15868,
        "statement": "likes(tiger, dog) :- is(tiger, kind).",
        "description": "If the tiger is kind then the tiger likes the dog."
    },
    {
        "id": 15869,
        "statement": "likes(lion, tiger) :- sees(X, lion).",
        "description": "If something sees the lion then the lion likes the tiger."
    },
    {
        "id": 15870,
        "statement": "is(lion, green) :- sees(X, lion).",
        "description": "If something sees the lion then the lion is green."
    },
    {
        "id": 15871,
        "statement": "likes(dog, rabbit) :- is(lion, green), not likes(dog, lion).",
        "description": "If the lion is green and the dog does not like the lion then the dog likes the rabbit."
    },
    {
        "id": 15872,
        "statement": "likes(cow, lion) :- likes(X, cow).",
        "description": "If something likes the cow then the cow likes the lion."
    },
    {
        "id": 15873,
        "statement": "is(X, green) :- likes(X, rabbit), needs(X, rabbit).",
        "description": "If something likes the rabbit and it needs the rabbit then it is green."
    },
    {
        "id": 15874,
        "statement": "sees(rabbit, dog) :- likes(X, dog), needs(X, rabbit).",
        "description": "If something likes the dog and it needs the rabbit then the rabbit sees the dog."
    },
    {
        "id": 15875,
        "statement": "sees(lion, dog) :- likes(X, lion), likes(X, dog).",
        "description": "If something likes the lion and it likes the dog then the lion sees the dog."
    },
    {
        "id": 15876,
        "statement": "needs(X, rabbit) :- likes(X, dog).",
        "description": "If something likes the dog then it needs the rabbit."
    },
    {
        "id": 15877,
        "statement": "visits(dog, mouse) :- is(dog, kind).",
        "description": "If the dog is kind then the dog visits the mouse."
    },
    {
        "id": 15878,
        "statement": "visits(lion, cow) :- needs(X, lion).",
        "description": "If someone needs the lion then the lion visits the cow."
    },
    {
        "id": 15879,
        "statement": "is(cow, round) :- visits(X, cow), needs(X, cow).",
        "description": "If someone visits the cow and they need the cow then the cow is round."
    },
    {
        "id": 15880,
        "statement": "eats(lion, dog) :- needs(cow, lion).",
        "description": "If the cow needs the lion then the lion eats the dog."
    },
    {
        "id": 15881,
        "statement": "is(squirrel, kind) :- is(X, kind), chases(X, squirrel).",
        "description": "If something is kind and it chases the squirrel then the squirrel is kind."
    },
    {
        "id": 15882,
        "statement": "visits(rabbit, squirrel) :- is(X, nice), chases(X, rabbit).",
        "description": "If something is nice and it chases the rabbit then the rabbit visits the squirrel."
    },
    {
        "id": 15883,
        "statement": "visits(cat, squirrel) :- visits(X, cat), visits(cat, lion).",
        "description": "If something visits the cat and the cat visits the lion then the cat visits the squirrel."
    },
    {
        "id": 15884,
        "statement": "visits(squirrel, cat) :- eats(X, squirrel).",
        "description": "If something eats the squirrel then the squirrel visits the cat."
    },
    {
        "id": 15885,
        "statement": "eats(X, rabbit) :- chases(X, squirrel), is(X, nice).",
        "description": "If something chases the squirrel and it is nice then it eats the rabbit."
    },
    {
        "id": 15886,
        "statement": "is(rabbit, red) :- chases(X, rabbit), is(X, kind).",
        "description": "If something chases the rabbit and it is kind then the rabbit is red."
    },
    {
        "id": 15887,
        "statement": "likes(bald_eagle, mouse) :- is(X, nice), sees(X, bald_eagle).",
        "description": "If someone is nice and they see the bald eagle then the bald eagle likes the mouse."
    },
    {
        "id": 15888,
        "statement": "is(X, nice) :- likes(X, cow).",
        "description": "If someone likes the cow then they are nice."
    },
    {
        "id": 15889,
        "statement": "sees(mouse, cow) :- is(X, nice), likes(X, mouse).",
        "description": "If someone is nice and they like the mouse then the mouse sees the cow."
    },
    {
        "id": 15890,
        "statement": "sees(tiger, mouse) :- eats(mouse, tiger).",
        "description": "If the mouse eats the tiger then the tiger sees the mouse."
    },
    {
        "id": 15891,
        "statement": "likes(tiger, bald_eagle) :- likes(X, tiger), is(tiger, young).",
        "description": "If someone likes the tiger and the tiger is young then the tiger likes the bald eagle."
    },
    {
        "id": 15892,
        "statement": "likes(tiger, cow) :- eats(X, tiger).",
        "description": "If someone eats the tiger then the tiger likes the cow."
    },
    {
        "id": 15893,
        "statement": "is(X, kind) :- is(X, big), is(X, rough).",
        "description": "Big, rough things are kind."
    },
    {
        "id": 15894,
        "statement": "is(X, smart) :- is(X, big), is(X, young).",
        "description": "All big, young things are smart."
    },
    {
        "id": 15895,
        "statement": "is(fiona, round) :- is(fiona, cold), is(fiona, white).",
        "description": "If Fiona is cold and Fiona is white then Fiona is round."
    },
    {
        "id": 15896,
        "statement": "is(X, round) :- is(X, white), not is(X, smart).",
        "description": "If something is white and not smart then it is round."
    },
    {
        "id": 15897,
        "statement": "is(X, white) :- is(X, furry), is(X, big).",
        "description": "Furry, big things are white."
    },
    {
        "id": 15898,
        "statement": "likes(cow, cat) :- needs(cow, cat), is(cow, kind).",
        "description": "If the cow needs the cat and the cow is kind then the cow likes the cat."
    },
    {
        "id": 15899,
        "statement": "is(X, blue) :- visits(X, cow).",
        "description": "If something visits the cow then it is blue."
    },
    {
        "id": 15900,
        "statement": "needs(rabbit, lion) :- visits(X, cow), not needs(cow, rabbit).",
        "description": "If something visits the cow and the cow does not need the rabbit then the rabbit needs the lion."
    },
    {
        "id": 15901,
        "statement": "visits(X, lion) :- is(X, kind), not likes(X, cat).",
        "description": "If something is kind and it does not like the cat then it visits the lion."
    },
    {
        "id": 15902,
        "statement": "is(X, red) :- visits(X, mouse).",
        "description": "If something visits the mouse then it is red."
    },
    {
        "id": 15903,
        "statement": "visits(bear, squirrel) :- is(X, kind), sees(X, bear).",
        "description": "If something is kind and it sees the bear then the bear visits the squirrel."
    },
    {
        "id": 15904,
        "statement": "visits(X, mouse) :- sees(X, squirrel).",
        "description": "If something sees the squirrel then it visits the mouse."
    },
    {
        "id": 15905,
        "statement": "sees(X, squirrel) :- visits(X, bear).",
        "description": "If something visits the bear then it sees the squirrel."
    },
    {
        "id": 15906,
        "statement": "sees(X, squirrel) :- needs(X, mouse), is(mouse, cold).",
        "description": "If something needs the mouse and the mouse is cold then it sees the squirrel."
    },
    {
        "id": 15907,
        "statement": "visits(X, bear) :- needs(X, bear).",
        "description": "If something needs the bear then it visits the bear."
    },
    {
        "id": 15908,
        "statement": "likes(X, dog) :- needs(X, bald_eagle).",
        "description": "If something needs the bald eagle then it likes the dog."
    },
    {
        "id": 15909,
        "statement": "is(lion, blue) :- likes(X, dog), needs(dog, lion).",
        "description": "If something likes the dog and the dog needs the lion then the lion is blue."
    },
    {
        "id": 15910,
        "statement": "needs(dog, bald_eagle) :- eats(X, dog).",
        "description": "If something eats the dog then the dog needs the bald eagle."
    },
    {
        "id": 15911,
        "statement": "needs(dog, lion) :- needs(X, bald_eagle), likes(bald_eagle, dog).",
        "description": "If something needs the bald eagle and the bald eagle likes the dog then the dog needs the lion."
    },
    {
        "id": 15912,
        "statement": "likes(lion, dog) :- eats(tiger, lion).",
        "description": "If the tiger eats the lion then the lion likes the dog."
    },
    {
        "id": 15913,
        "statement": "is(lion, green) :- needs(X, dog), needs(X, lion).",
        "description": "If something needs the dog and it needs the lion then the lion is green."
    },
    {
        "id": 15914,
        "statement": "chases(X, cow) :- is(X, round).",
        "description": "If something is round then it chases the cow."
    },
    {
        "id": 15915,
        "statement": "chases(cow, mouse) :- visits(X, cow).",
        "description": "If something visits the cow then the cow chases the mouse."
    },
    {
        "id": 15916,
        "statement": "is(X, round) :- sees(X, cow), not visits(X, lion).",
        "description": "If something sees the cow and it does not visit the lion then it is round."
    },
    {
        "id": 15917,
        "statement": "visits(dog, cow) :- chases(X, dog).",
        "description": "If something chases the dog then the dog visits the cow."
    },
    {
        "id": 15918,
        "statement": "sees(X, lion) :- chases(X, cow).",
        "description": "If something chases the cow then it sees the lion."
    },
    {
        "id": 15919,
        "statement": "is(X, rough) :- is(X, cold), is(X, blue).",
        "description": "Cold, blue people are rough."
    },
    {
        "id": 15920,
        "statement": "is(X, blue) :- is(X, smart), is(X, nice).",
        "description": "All smart, nice people are blue."
    },
    {
        "id": 15921,
        "statement": "is(X, green) :- is(X, cold), is(X, smart).",
        "description": "Cold, smart people are green."
    },
    {
        "id": 15922,
        "statement": "is(X, green) :- is(X, smart), is(X, red).",
        "description": "If someone is smart and red then they are green."
    },
    {
        "id": 15923,
        "statement": "is(X, nice) :- is(X, rough), is(X, round).",
        "description": "If someone is rough and round then they are nice."
    },
    {
        "id": 15924,
        "statement": "is(charlie, green) :- is(charlie, smart).",
        "description": "If Charlie is smart then Charlie is green."
    },
    {
        "id": 15925,
        "statement": "is(X, smart) :- is(X, big), is(X, blue).",
        "description": "All big, blue things are smart."
    },
    {
        "id": 15926,
        "statement": "is(bob, blue) :- is(bob, young).",
        "description": "If Bob is young then Bob is blue."
    },
    {
        "id": 15927,
        "statement": "is(X, white) :- is(X, red), is(X, blue).",
        "description": "All red, blue people are white."
    },
    {
        "id": 15928,
        "statement": "is(X, blue) :- is(X, furry), is(X, quiet).",
        "description": "Furry, quiet people are blue."
    },
    {
        "id": 15929,
        "statement": "is(X, blue) :- is(X, red), is(X, nice).",
        "description": "If someone is red and nice then they are blue."
    },
    {
        "id": 15930,
        "statement": "is(harry, blue) :- is(harry, nice), is(harry, quiet).",
        "description": "If Harry is nice and Harry is quiet then Harry is blue."
    },
    {
        "id": 15931,
        "statement": "is(X, nice) :- is(X, smart), is(X, big).",
        "description": "All smart, big things are nice."
    },
    {
        "id": 15932,
        "statement": "is(X, quiet) :- is(X, white), is(X, blue).",
        "description": "All white, blue things are quiet."
    },
    {
        "id": 15933,
        "statement": "is(X, quiet) :- is(X, blue), is(X, nice).",
        "description": "All blue, nice things are quiet."
    },
    {
        "id": 15934,
        "statement": "is(X, blue) :- is(X, furry), is(X, big).",
        "description": "All furry, big things are blue."
    },
    {
        "id": 15935,
        "statement": "is(X, nice) :- is(X, smart), is(X, quiet).",
        "description": "Smart, quiet things are nice."
    },
    {
        "id": 15936,
        "statement": "is(fiona, nice) :- is(fiona, white), is(fiona, big).",
        "description": "If Fiona is white and Fiona is big then Fiona is nice."
    },
    {
        "id": 15937,
        "statement": "is(X, cold) :- is(X, kind), is(X, white).",
        "description": "Kind, white things are cold."
    },
    {
        "id": 15938,
        "statement": "is(X, quiet) :- is(X, kind), is(X, white).",
        "description": "If something is kind and white then it is quiet."
    },
    {
        "id": 15939,
        "statement": "is(X, nice) :- is(X, cold), is(X, white).",
        "description": "If something is cold and white then it is nice."
    },
    {
        "id": 15940,
        "statement": "is(erin, quiet) :- is(erin, white).",
        "description": "If Erin is white then Erin is quiet."
    },
    {
        "id": 15941,
        "statement": "is(bear, round) :- likes(bear, cat).",
        "description": "If the bear likes the cat then the bear is round."
    },
    {
        "id": 15942,
        "statement": "likes(mouse, bear) :- needs(cat, mouse), is(mouse, green).",
        "description": "If the cat needs the mouse and the mouse is green then the mouse likes the bear."
    },
    {
        "id": 15943,
        "statement": "chases(X, bear) :- needs(X, cat).",
        "description": "If something needs the cat then it chases the bear."
    },
    {
        "id": 15944,
        "statement": "is(X, green) :- chases(X, bear).",
        "description": "If something chases the bear then it is green."
    },
    {
        "id": 15945,
        "statement": "needs(bear, cat) :- is(bear, round), not is(bear, nice).",
        "description": "If the bear is round and the bear is not nice then the bear needs the cat."
    },
    {
        "id": 15946,
        "statement": "needs(X, tiger) :- chases(X, cat), needs(cat, tiger).",
        "description": "If something chases the cat and the cat needs the tiger then it needs the tiger."
    },
    {
        "id": 15947,
        "statement": "likes(mouse, cat) :- chases(X, mouse), is(mouse, green).",
        "description": "If something chases the mouse and the mouse is green then the mouse likes the cat."
    },
    {
        "id": 15948,
        "statement": "is(charlie, kind) :- is(charlie, big), is(charlie, smart).",
        "description": "If Charlie is big and Charlie is smart then Charlie is kind."
    },
    {
        "id": 15949,
        "statement": "is(X, big) :- is(X, red), not is(X, furry).",
        "description": "If something is red and not furry then it is big."
    },
    {
        "id": 15950,
        "statement": "is(charlie, blue) :- is(charlie, kind), is(charlie, furry).",
        "description": "If Charlie is kind and Charlie is furry then Charlie is blue."
    },
    {
        "id": 15951,
        "statement": "is(gary, red) :- is(gary, kind), is(gary, blue).",
        "description": "If Gary is kind and Gary is blue then Gary is red."
    },
    {
        "id": 15952,
        "statement": "is(X, big) :- is(X, round), is(X, red).",
        "description": "All round, red people are big."
    },
    {
        "id": 15953,
        "statement": "is(X, smart) :- is(X, round), is(X, furry).",
        "description": "All round, furry people are smart."
    },
    {
        "id": 15954,
        "statement": "is(X, big) :- is(X, cold), is(X, nice).",
        "description": "If someone is cold and nice then they are big."
    },
    {
        "id": 15955,
        "statement": "is(X, cold) :- is(X, green), is(X, blue).",
        "description": "Green, blue people are cold."
    },
    {
        "id": 15956,
        "statement": "is(X, green) :- is(X, round), is(X, nice).",
        "description": "All round, nice people are green."
    },
    {
        "id": 15957,
        "statement": "is(fiona, nice) :- not is(fiona, smart).",
        "description": "If Fiona is not smart then Fiona is nice."
    },
    {
        "id": 15958,
        "statement": "is(X, kind) :- is(X, rough), is(X, cold).",
        "description": "Rough, cold people are kind."
    },
    {
        "id": 15959,
        "statement": "is(X, kind) :- is(X, nice), not is(X, rough).",
        "description": "If someone is nice and not rough then they are kind."
    },
    {
        "id": 15960,
        "statement": "is(X, kind) :- is(X, young), is(X, nice).",
        "description": "If someone is young and nice then they are kind."
    },
    {
        "id": 15961,
        "statement": "is(rabbit, young) :- chases(X, rabbit).",
        "description": "If someone chases the rabbit then the rabbit is young."
    },
    {
        "id": 15962,
        "statement": "chases(rabbit, squirrel) :- likes(X, rabbit), likes(rabbit, cow).",
        "description": "If someone likes the rabbit and the rabbit likes the cow then the rabbit chases the squirrel."
    },
    {
        "id": 15963,
        "statement": "chases(mouse, rabbit) :- likes(X, mouse), chases(X, cow).",
        "description": "If someone likes the mouse and they chase the cow then the mouse chases the rabbit."
    },
    {
        "id": 15964,
        "statement": "sees(X, cow) :- likes(X, mouse).",
        "description": "If someone likes the mouse then they see the cow."
    },
    {
        "id": 15965,
        "statement": "likes(mouse, squirrel) :- likes(X, mouse), sees(mouse, rabbit).",
        "description": "If someone likes the mouse and the mouse sees the rabbit then the mouse likes the squirrel."
    },
    {
        "id": 15966,
        "statement": "sees(X, squirrel) :- is(X, young), is(X, green).",
        "description": "If someone is young and green then they see the squirrel."
    },
    {
        "id": 15967,
        "statement": "chases(X, cow) :- likes(X, mouse), likes(mouse, squirrel).",
        "description": "If someone likes the mouse and the mouse likes the squirrel then they chase the cow."
    },
    {
        "id": 15968,
        "statement": "likes(rabbit, bear) :- not visits(cow, rabbit).",
        "description": "If the cow does not visit the rabbit then the rabbit likes the bear."
    },
    {
        "id": 15969,
        "statement": "chases(tiger, cow) :- is(X, young), chases(X, tiger).",
        "description": "If someone is young and they chase the tiger then the tiger chases the cow."
    },
    {
        "id": 15970,
        "statement": "visits(X, bear) :- is(X, cold).",
        "description": "If someone is cold then they visit the bear."
    },
    {
        "id": 15971,
        "statement": "likes(X, cow) :- visits(X, cow).",
        "description": "If someone visits the cow then they like the cow."
    },
    {
        "id": 15972,
        "statement": "is(cow, young) :- visits(rabbit, bear), likes(rabbit, cow).",
        "description": "If the rabbit visits the bear and the rabbit likes the cow then the cow is young."
    },
    {
        "id": 15973,
        "statement": "is(rabbit, cold) :- chases(X, rabbit).",
        "description": "If someone chases the rabbit then the rabbit is cold."
    },
    {
        "id": 15974,
        "statement": "visits(X, tiger) :- is(X, young).",
        "description": "If someone is young then they visit the tiger."
    },
    {
        "id": 15975,
        "statement": "is(X, smart) :- is(X, big), is(X, furry).",
        "description": "If someone is big and furry then they are smart."
    },
    {
        "id": 15976,
        "statement": "is(X, big) :- is(X, green), is(X, quiet).",
        "description": "If someone is green and quiet then they are big."
    },
    {
        "id": 15977,
        "statement": "is(X, white) :- is(X, big), is(X, smart).",
        "description": "Big, smart people are white."
    },
    {
        "id": 15978,
        "statement": "is(X, green) :- is(X, white), is(X, big).",
        "description": "All white, big people are green."
    },
    {
        "id": 15979,
        "statement": "is(X, furry) :- is(X, blue), is(X, round).",
        "description": "If something is blue and round then it is furry."
    },
    {
        "id": 15980,
        "statement": "is(dave, kind) :- is(dave, nice), is(dave, furry).",
        "description": "If Dave is nice and Dave is furry then Dave is kind."
    },
    {
        "id": 15981,
        "statement": "is(X, round) :- is(X, blue), is(X, kind).",
        "description": "All blue, kind things are round."
    },
    {
        "id": 15982,
        "statement": "is(X, blue) :- is(X, round), is(X, kind).",
        "description": "All round, kind things are blue."
    },
    {
        "id": 15983,
        "statement": "eats(X, bear) :- visits(X, cow), is(cow, blue).",
        "description": "If something visits the cow and the cow is blue then it eats the bear."
    },
    {
        "id": 15984,
        "statement": "visits(X, cow) :- needs(X, rabbit), needs(rabbit, cow).",
        "description": "If something needs the rabbit and the rabbit needs the cow then it visits the cow."
    },
    {
        "id": 15985,
        "statement": "is(cat, big) :- eats(X, cat), eats(X, bear).",
        "description": "If something eats the cat and it eats the bear then the cat is big."
    },
    {
        "id": 15986,
        "statement": "visits(X, rabbit) :- needs(X, bear).",
        "description": "If something needs the bear then it visits the rabbit."
    },
    {
        "id": 15987,
        "statement": "needs(X, cow) :- is(X, blue).",
        "description": "If something is blue then it needs the cow."
    },
    {
        "id": 15988,
        "statement": "needs(rabbit, cow) :- eats(X, rabbit).",
        "description": "If something eats the rabbit then the rabbit needs the cow."
    },
    {
        "id": 15989,
        "statement": "is(bald_eagle, rough) :- likes(X, bald_eagle), is(bald_eagle, red).",
        "description": "If something likes the bald eagle and the bald eagle is red then the bald eagle is rough."
    },
    {
        "id": 15990,
        "statement": "is(bear, red) :- is(X, red), visits(X, bear).",
        "description": "If something is red and it visits the bear then the bear is red."
    },
    {
        "id": 15991,
        "statement": "needs(cat, bear) :- is(X, red), not visits(X, cat).",
        "description": "If something is red and it does not visit the cat then the cat needs the bear."
    },
    {
        "id": 15992,
        "statement": "likes(bald_eagle, dog) :- needs(X, bald_eagle).",
        "description": "If something needs the bald eagle then the bald eagle likes the dog."
    },
    {
        "id": 15993,
        "statement": "likes(X, dog) :- is(X, red).",
        "description": "If something is red then it likes the dog."
    },
    {
        "id": 15994,
        "statement": "is(dog, red) :- likes(X, dog), not visits(dog, cat).",
        "description": "If something likes the dog and the dog does not visit the cat then the dog is red."
    },
    {
        "id": 15995,
        "statement": "is(X, smart) :- is(X, kind), is(X, young).",
        "description": "All kind, young people are smart."
    },
    {
        "id": 15996,
        "statement": "is(X, big) :- is(X, smart), is(X, kind).",
        "description": "If someone is smart and kind then they are big."
    },
    {
        "id": 15997,
        "statement": "is(erin, smart) :- is(erin, cold), not is(erin, kind).",
        "description": "If Erin is cold and Erin is not kind then Erin is smart."
    },
    {
        "id": 15998,
        "statement": "is(X, furry) :- is(X, red), is(X, cold).",
        "description": "Red, cold people are furry."
    },
    {
        "id": 15999,
        "statement": "is(X, furry) :- is(X, kind), not is(X, big).",
        "description": "If someone is kind and not big then they are furry."
    },
    {
        "id": 16000,
        "statement": "is(harry, red) :- is(harry, cold).",
        "description": "If Harry is cold then Harry is red."
    },
    {
        "id": 16001,
        "statement": "is(X, nice) :- is(X, big), is(X, furry).",
        "description": "Big, furry people are nice."
    },
    {
        "id": 16002,
        "statement": "is(X, young) :- is(X, big), is(X, nice).",
        "description": "Big, nice people are young."
    },
    {
        "id": 16003,
        "statement": "is(bob, green) :- is(bob, cold).",
        "description": "If Bob is cold then Bob is green."
    },
    {
        "id": 16004,
        "statement": "is(X, rough) :- is(X, blue), is(X, green).",
        "description": "All blue, green things are rough."
    },
    {
        "id": 16005,
        "statement": "is(X, smart) :- is(X, white), is(X, cold).",
        "description": "All white, cold people are smart."
    },
    {
        "id": 16006,
        "statement": "is(gary, round) :- is(gary, smart).",
        "description": "If Gary is smart then Gary is round."
    },
    {
        "id": 16007,
        "statement": "is(anne, cold) :- is(anne, white), is(anne, nice).",
        "description": "If Anne is white and Anne is nice then Anne is cold."
    },
    {
        "id": 16008,
        "statement": "is(X, blue) :- is(X, furry), is(X, kind).",
        "description": "All furry, kind things are blue."
    },
    {
        "id": 16009,
        "statement": "visits(X, mouse) :- needs(X, bear), is(bear, green).",
        "description": "If someone needs the bear and the bear is green then they visit the mouse."
    },
    {
        "id": 16010,
        "statement": "visits(X, mouse) :- is(X, blue), sees(X, cow).",
        "description": "If someone is blue and they see the cow then they visit the mouse."
    },
    {
        "id": 16011,
        "statement": "is(mouse, cold) :- needs(mouse, bear), visits(bear, bald_eagle).",
        "description": "If the mouse needs the bear and the bear visits the bald eagle then the mouse is cold."
    },
    {
        "id": 16012,
        "statement": "visits(bear, bald_eagle) :- needs(cow, bear).",
        "description": "If the cow needs the bear then the bear visits the bald eagle."
    },
    {
        "id": 16013,
        "statement": "visits(cow, mouse) :- sees(cow, bear).",
        "description": "If the cow sees the bear then the cow visits the mouse."
    },
    {
        "id": 16014,
        "statement": "is(bear, red) :- is(X, cold), visits(X, bear).",
        "description": "If someone is cold and they visit the bear then the bear is red."
    },
    {
        "id": 16015,
        "statement": "needs(X, bear) :- visits(X, mouse), needs(mouse, bear).",
        "description": "If someone visits the mouse and the mouse needs the bear then they need the bear."
    },
    {
        "id": 16016,
        "statement": "visits(X, mouse) :- visits(X, bald_eagle).",
        "description": "If someone visits the bald eagle then they visit the mouse."
    },
    {
        "id": 16017,
        "statement": "sees(X, lion) :- needs(X, mouse), is(mouse, big).",
        "description": "If someone needs the mouse and the mouse is big then they see the lion."
    },
    {
        "id": 16018,
        "statement": "chases(tiger, mouse) :- is(X, young), chases(X, tiger).",
        "description": "If someone is young and they chase the tiger then the tiger chases the mouse."
    },
    {
        "id": 16019,
        "statement": "chases(X, lion) :- chases(X, mouse).",
        "description": "If someone chases the mouse then they chase the lion."
    },
    {
        "id": 16020,
        "statement": "needs(tiger, bear) :- sees(tiger, lion).",
        "description": "If the tiger sees the lion then the tiger needs the bear."
    },
    {
        "id": 16021,
        "statement": "chases(bear, tiger) :- chases(X, bear), chases(X, tiger).",
        "description": "If someone chases the bear and they chase the tiger then the bear chases the tiger."
    },
    {
        "id": 16022,
        "statement": "sees(lion, mouse) :- sees(X, lion).",
        "description": "If someone sees the lion then the lion sees the mouse."
    },
    {
        "id": 16023,
        "statement": "chases(lion, mouse) :- chases(X, lion).",
        "description": "If someone chases the lion then the lion chases the mouse."
    },
    {
        "id": 16024,
        "statement": "is(lion, nice) :- chases(X, lion), is(lion, red).",
        "description": "If something chases the lion and the lion is red then the lion is nice."
    },
    {
        "id": 16025,
        "statement": "is(lion, big) :- not is(lion, nice).",
        "description": "If the lion is not nice then the lion is big."
    },
    {
        "id": 16026,
        "statement": "sees(cow, bear) :- needs(X, cow), not is(X, big).",
        "description": "If something needs the cow and it is not big then the cow sees the bear."
    },
    {
        "id": 16027,
        "statement": "sees(lion, bald_eagle) :- sees(X, lion), not is(lion, nice).",
        "description": "If something sees the lion and the lion is not nice then the lion sees the bald eagle."
    },
    {
        "id": 16028,
        "statement": "needs(X, cow) :- sees(X, lion).",
        "description": "If something sees the lion then it needs the cow."
    },
    {
        "id": 16029,
        "statement": "sees(bear, lion) :- chases(cow, bear).",
        "description": "If the cow chases the bear then the bear sees the lion."
    },
    {
        "id": 16030,
        "statement": "is(X, white) :- is(X, blue), not is(X, smart).",
        "description": "If something is blue and not smart then it is white."
    },
    {
        "id": 16031,
        "statement": "is(X, quiet) :- is(X, smart), is(X, green).",
        "description": "If something is smart and green then it is quiet."
    },
    {
        "id": 16032,
        "statement": "is(X, green) :- is(X, quiet), not is(X, smart).",
        "description": "If something is quiet and not smart then it is green."
    },
    {
        "id": 16033,
        "statement": "is(X, round) :- is(X, furry), is(X, smart).",
        "description": "All furry, smart people are round."
    },
    {
        "id": 16034,
        "statement": "is(X, white) :- is(X, quiet), not is(X, young).",
        "description": "If someone is quiet and not young then they are white."
    },
    {
        "id": 16035,
        "statement": "is(anne, nice) :- is(anne, round).",
        "description": "If Anne is round then Anne is nice."
    },
    {
        "id": 16036,
        "statement": "is(X, smart) :- is(X, young), is(X, round).",
        "description": "All young, round people are smart."
    },
    {
        "id": 16037,
        "statement": "is(X, round) :- is(X, cold), is(X, furry).",
        "description": "If someone is cold and furry then they are round."
    },
    {
        "id": 16038,
        "statement": "is(X, furry) :- is(X, quiet), is(X, round).",
        "description": "Quiet, round people are furry."
    },
    {
        "id": 16039,
        "statement": "is(X, red) :- is(X, furry), is(X, rough).",
        "description": "If someone is furry and rough then they are red."
    },
    {
        "id": 16040,
        "statement": "is(X, cold) :- is(X, furry), is(X, red).",
        "description": "All furry, red people are cold."
    },
    {
        "id": 16041,
        "statement": "is(X, rough) :- is(X, white), is(X, furry).",
        "description": "All white, furry people are rough."
    },
    {
        "id": 16042,
        "statement": "is(X, quiet) :- is(X, round), is(X, nice).",
        "description": "Round, nice people are quiet."
    },
    {
        "id": 16043,
        "statement": "is(charlie, cold) :- is(charlie, quiet).",
        "description": "If Charlie is quiet then Charlie is cold."
    },
    {
        "id": 16044,
        "statement": "is(X, green) :- is(X, quiet), is(X, round).",
        "description": "All quiet, round people are green."
    },
    {
        "id": 16045,
        "statement": "is(X, big) :- is(X, rough), is(X, nice).",
        "description": "If someone is rough and nice then they are big."
    },
    {
        "id": 16046,
        "statement": "is(X, red) :- is(X, smart), is(X, nice).",
        "description": "If someone is smart and nice then they are red."
    },
    {
        "id": 16047,
        "statement": "needs(tiger, mouse) :- likes(X, mouse), needs(mouse, tiger).",
        "description": "If someone likes the mouse and the mouse needs the tiger then the tiger needs the mouse."
    },
    {
        "id": 16048,
        "statement": "eats(lion, tiger) :- is(X, rough), eats(X, lion).",
        "description": "If someone is rough and they eat the lion then the lion eats the tiger."
    },
    {
        "id": 16049,
        "statement": "is(cow, round) :- needs(lion, cow), not needs(mouse, lion).",
        "description": "If the lion needs the cow and the mouse does not need the lion then the cow is round."
    },
    {
        "id": 16050,
        "statement": "needs(mouse, cow) :- likes(X, mouse), not likes(mouse, cow).",
        "description": "If someone likes the mouse and the mouse does not like the cow then the mouse needs the cow."
    },
    {
        "id": 16051,
        "statement": "eats(X, tiger) :- is(X, round), is(X, red).",
        "description": "If someone is round and red then they eat the tiger."
    },
    {
        "id": 16052,
        "statement": "needs(cow, tiger) :- is(lion, round), needs(lion, cow).",
        "description": "If the lion is round and the lion needs the cow then the cow needs the tiger."
    },
    {
        "id": 16053,
        "statement": "needs(X, cow) :- is(X, rough), not is(X, red).",
        "description": "If someone is rough and not red then they need the cow."
    },
    {
        "id": 16054,
        "statement": "is(charlie, red) :- is(charlie, green), is(charlie, round).",
        "description": "If Charlie is green and Charlie is round then Charlie is red."
    },
    {
        "id": 16055,
        "statement": "is(X, young) :- is(X, rough), is(X, nice).",
        "description": "If someone is rough and nice then they are young."
    },
    {
        "id": 16056,
        "statement": "is(X, smart) :- is(X, quiet), is(X, rough).",
        "description": "All quiet, rough people are smart."
    },
    {
        "id": 16057,
        "statement": "is(harry, smart) :- is(harry, furry), is(harry, quiet).",
        "description": "If Harry is furry and Harry is quiet then Harry is smart."
    },
    {
        "id": 16058,
        "statement": "is(harry, quiet) :- is(harry, cold).",
        "description": "If Harry is cold then Harry is quiet."
    },
    {
        "id": 16059,
        "statement": "is(X, smart) :- is(X, cold), is(X, green).",
        "description": "All cold, green people are smart."
    },
    {
        "id": 16060,
        "statement": "is(erin, smart) :- is(erin, round), is(erin, green).",
        "description": "If Erin is round and Erin is green then Erin is smart."
    },
    {
        "id": 16061,
        "statement": "is(X, white) :- is(X, cold), is(X, smart).",
        "description": "All cold, smart people are white."
    },
    {
        "id": 16062,
        "statement": "is(X, big) :- is(X, blue), is(X, smart).",
        "description": "If someone is blue and smart then they are big."
    },
    {
        "id": 16063,
        "statement": "is(X, red) :- is(X, nice), is(X, quiet).",
        "description": "All nice, quiet people are red."
    },
    {
        "id": 16064,
        "statement": "is(X, nice) :- is(X, young), is(X, quiet).",
        "description": "All young, quiet people are nice."
    },
    {
        "id": 16065,
        "statement": "is(X, rough) :- is(X, red), is(X, quiet).",
        "description": "Red, quiet people are rough."
    },
    {
        "id": 16066,
        "statement": "is(bob, furry) :- is(bob, quiet), is(bob, rough).",
        "description": "If Bob is quiet and Bob is rough then Bob is furry."
    },
    {
        "id": 16067,
        "statement": "visits(cow, lion) :- sees(cow, bald_eagle), visits(cow, bald_eagle).",
        "description": "If the cow sees the bald eagle and the cow visits the bald eagle then the cow visits the lion."
    },
    {
        "id": 16068,
        "statement": "visits(cow, lion) :- sees(X, cow).",
        "description": "If something sees the cow then the cow visits the lion."
    },
    {
        "id": 16069,
        "statement": "sees(cow, bald_eagle) :- likes(cow, bald_eagle), likes(bald_eagle, dog).",
        "description": "If the cow likes the bald eagle and the bald eagle likes the dog then the cow sees the bald eagle."
    },
    {
        "id": 16070,
        "statement": "visits(X, cow) :- visits(X, lion).",
        "description": "If something visits the lion then it visits the cow."
    },
    {
        "id": 16071,
        "statement": "sees(bald_eagle, dog) :- sees(X, bald_eagle), is(bald_eagle, rough).",
        "description": "If something sees the bald eagle and the bald eagle is rough then the bald eagle sees the dog."
    },
    {
        "id": 16072,
        "statement": "sees(dog, cow) :- sees(X, dog), is(dog, kind).",
        "description": "If something sees the dog and the dog is kind then the dog sees the cow."
    },
    {
        "id": 16073,
        "statement": "is(X, young) :- is(X, kind), likes(X, bald_eagle).",
        "description": "If something is kind and it likes the bald eagle then it is young."
    },
    {
        "id": 16074,
        "statement": "is(X, smart) :- is(X, round), is(X, red).",
        "description": "Round, red things are smart."
    },
    {
        "id": 16075,
        "statement": "is(X, big) :- is(X, nice), is(X, red).",
        "description": "All nice, red things are big."
    },
    {
        "id": 16076,
        "statement": "is(dave, smart) :- is(dave, kind), is(dave, round).",
        "description": "If Dave is kind and Dave is round then Dave is smart."
    },
    {
        "id": 16077,
        "statement": "is(X, quiet) :- is(X, blue), is(X, smart).",
        "description": "If someone is blue and smart then they are quiet."
    },
    {
        "id": 16078,
        "statement": "is(X, big) :- is(X, round), is(X, young).",
        "description": "All round, young people are big."
    },
    {
        "id": 16079,
        "statement": "is(erin, big) :- is(erin, round), is(erin, young).",
        "description": "If Erin is round and Erin is young then Erin is big."
    },
    {
        "id": 16080,
        "statement": "is(X, blue) :- is(X, round), is(X, smart).",
        "description": "Round, smart people are blue."
    },
    {
        "id": 16081,
        "statement": "sees(rabbit, mouse) :- sees(X, rabbit).",
        "description": "If something sees the rabbit then the rabbit sees the mouse."
    },
    {
        "id": 16082,
        "statement": "chases(X, dog) :- chases(X, rabbit).",
        "description": "If something chases the rabbit then it chases the dog."
    },
    {
        "id": 16083,
        "statement": "is(rabbit, rough) :- eats(rabbit, mouse).",
        "description": "If the rabbit eats the mouse then the rabbit is rough."
    },
    {
        "id": 16084,
        "statement": "eats(X, rabbit) :- eats(X, dog).",
        "description": "If something eats the dog then it eats the rabbit."
    },
    {
        "id": 16085,
        "statement": "is(dog, cold) :- chases(dog, cat).",
        "description": "If the dog chases the cat then the dog is cold."
    },
    {
        "id": 16086,
        "statement": "chases(X, rabbit) :- eats(X, mouse), chases(mouse, cat).",
        "description": "If something eats the mouse and the mouse chases the cat then it chases the rabbit."
    },
    {
        "id": 16087,
        "statement": "eats(cat, dog) :- sees(X, cat).",
        "description": "If something sees the cat then the cat eats the dog."
    },
    {
        "id": 16088,
        "statement": "eats(mouse, dog) :- sees(mouse, rabbit).",
        "description": "If the mouse sees the rabbit then the mouse eats the dog."
    },
    {
        "id": 16089,
        "statement": "chases(X, cat) :- chases(X, dog).",
        "description": "If something chases the dog then it chases the cat."
    },
    {
        "id": 16090,
        "statement": "is(cow, young) :- visits(cow, squirrel).",
        "description": "If the cow visits the squirrel then the cow is young."
    },
    {
        "id": 16091,
        "statement": "chases(X, cow) :- is(X, big), is(X, green).",
        "description": "If something is big and green then it chases the cow."
    },
    {
        "id": 16092,
        "statement": "is(dog, big) :- needs(dog, cow), is(cow, green).",
        "description": "If the dog needs the cow and the cow is green then the dog is big."
    },
    {
        "id": 16093,
        "statement": "visits(cow, mouse) :- chases(X, cow), visits(cow, squirrel).",
        "description": "If something chases the cow and the cow visits the squirrel then the cow visits the mouse."
    },
    {
        "id": 16094,
        "statement": "is(X, green) :- needs(X, squirrel), needs(squirrel, mouse).",
        "description": "If something needs the squirrel and the squirrel needs the mouse then it is green."
    },
    {
        "id": 16095,
        "statement": "needs(mouse, dog) :- visits(X, mouse), is(mouse, green).",
        "description": "If something visits the mouse and the mouse is green then the mouse needs the dog."
    },
    {
        "id": 16096,
        "statement": "needs(dog, squirrel) :- needs(X, dog), is(dog, rough).",
        "description": "If something needs the dog and the dog is rough then the dog needs the squirrel."
    },
    {
        "id": 16097,
        "statement": "chases(X, dog) :- is(X, blue), is(X, big).",
        "description": "If something is blue and big then it chases the dog."
    },
    {
        "id": 16098,
        "statement": "is(bear, green) :- chases(bear, bald_eagle), is(bear, blue).",
        "description": "If the bear chases the bald eagle and the bear is blue then the bear is green."
    },
    {
        "id": 16099,
        "statement": "needs(X, dog) :- chases(X, tiger), chases(X, dog).",
        "description": "If something chases the tiger and it chases the dog then it needs the dog."
    },
    {
        "id": 16100,
        "statement": "chases(X, tiger) :- is(X, green).",
        "description": "If something is green then it chases the tiger."
    },
    {
        "id": 16101,
        "statement": "is(dog, green) :- visits(X, dog), needs(X, dog).",
        "description": "If something visits the dog and it needs the dog then the dog is green."
    },
    {
        "id": 16102,
        "statement": "is(dog, green) :- is(bald_eagle, red), chases(bald_eagle, dog).",
        "description": "If the bald eagle is red and the bald eagle chases the dog then the dog is green."
    },
    {
        "id": 16103,
        "statement": "is(X, cold) :- visits(X, bald_eagle), not needs(bald_eagle, bear).",
        "description": "If something visits the bald eagle and the bald eagle does not need the bear then it is cold."
    },
    {
        "id": 16104,
        "statement": "chases(bear, dog) :- chases(X, bear).",
        "description": "If something chases the bear then the bear chases the dog."
    },
    {
        "id": 16105,
        "statement": "is(bald_eagle, cold) :- visits(X, bald_eagle), is(bald_eagle, red).",
        "description": "If something visits the bald eagle and the bald eagle is red then the bald eagle is cold."
    },
    {
        "id": 16106,
        "statement": "visits(bald_eagle, bear) :- chases(bald_eagle, bear).",
        "description": "If the bald eagle chases the bear then the bald eagle visits the bear."
    },
    {
        "id": 16107,
        "statement": "is(X, quiet) :- is(X, cold), is(X, big).",
        "description": "All cold, big things are quiet."
    },
    {
        "id": 16108,
        "statement": "is(X, green) :- is(X, kind), is(X, big).",
        "description": "All kind, big things are green."
    },
    {
        "id": 16109,
        "statement": "is(X, smart) :- is(X, green), is(X, quiet).",
        "description": "Green, quiet things are smart."
    },
    {
        "id": 16110,
        "statement": "is(X, kind) :- is(X, rough), is(X, green).",
        "description": "If something is rough and green then it is kind."
    },
    {
        "id": 16111,
        "statement": "is(X, kind) :- is(X, quiet), is(X, smart).",
        "description": "Quiet, smart things are kind."
    },
    {
        "id": 16112,
        "statement": "is(bob, kind) :- is(bob, smart), is(bob, rough).",
        "description": "If Bob is smart and Bob is rough then Bob is kind."
    },
    {
        "id": 16113,
        "statement": "needs(bear, dog) :- eats(X, dog), needs(dog, bear).",
        "description": "If something eats the dog and the dog needs the bear then the bear needs the dog."
    },
    {
        "id": 16114,
        "statement": "visits(bear, dog) :- eats(bear, mouse), needs(mouse, bear).",
        "description": "If the bear eats the mouse and the mouse needs the bear then the bear visits the dog."
    },
    {
        "id": 16115,
        "statement": "needs(X, dog) :- is(X, rough), visits(X, dog).",
        "description": "If something is rough and it visits the dog then it needs the dog."
    },
    {
        "id": 16116,
        "statement": "eats(lion, bear) :- needs(X, lion).",
        "description": "If something needs the lion then the lion eats the bear."
    },
    {
        "id": 16117,
        "statement": "needs(mouse, lion) :- eats(X, mouse).",
        "description": "If something eats the mouse then the mouse needs the lion."
    },
    {
        "id": 16118,
        "statement": "visits(lion, bear) :- is(lion, young), needs(lion, dog).",
        "description": "If the lion is young and the lion needs the dog then the lion visits the bear."
    },
    {
        "id": 16119,
        "statement": "needs(mouse, bear) :- eats(X, lion), eats(X, mouse).",
        "description": "If something eats the lion and it eats the mouse then the mouse needs the bear."
    },
    {
        "id": 16120,
        "statement": "is(erin, red) :- is(erin, white).",
        "description": "If Erin is white then Erin is red."
    },
    {
        "id": 16121,
        "statement": "is(erin, red) :- is(erin, green), is(erin, round).",
        "description": "If Erin is green and Erin is round then Erin is red."
    },
    {
        "id": 16122,
        "statement": "is(X, rough) :- is(X, kind), is(X, blue).",
        "description": "If something is kind and blue then it is rough."
    },
    {
        "id": 16123,
        "statement": "is(X, kind) :- is(X, cold), is(X, blue).",
        "description": "If something is cold and blue then it is kind."
    },
    {
        "id": 16124,
        "statement": "is(bob, blue) :- is(bob, cold), is(bob, red).",
        "description": "If Bob is cold and Bob is red then Bob is blue."
    },
    {
        "id": 16125,
        "statement": "is(X, red) :- is(X, kind), is(X, rough).",
        "description": "Kind, rough things are red."
    },
    {
        "id": 16126,
        "statement": "is(X, green) :- is(X, furry), is(X, rough).",
        "description": "If something is furry and rough then it is green."
    },
    {
        "id": 16127,
        "statement": "is(X, furry) :- is(X, rough), is(X, cold).",
        "description": "If something is rough and cold then it is furry."
    },
    {
        "id": 16128,
        "statement": "is(X, white) :- is(X, rough), is(X, cold).",
        "description": "All rough, cold things are white."
    },
    {
        "id": 16129,
        "statement": "is(X, red) :- is(X, cold), is(X, young).",
        "description": "All cold, young things are red."
    },
    {
        "id": 16130,
        "statement": "is(X, young) :- is(X, white), is(X, rough).",
        "description": "White, rough things are young."
    },
    {
        "id": 16131,
        "statement": "is(X, big) :- is(X, cold), not is(X, blue).",
        "description": "If something is cold and not blue then it is big."
    },
    {
        "id": 16132,
        "statement": "is(X, big) :- is(X, blue), is(X, cold).",
        "description": "Blue, cold things are big."
    },
    {
        "id": 16133,
        "statement": "is(bob, rough) :- is(bob, kind), is(bob, big).",
        "description": "If Bob is kind and Bob is big then Bob is rough."
    },
    {
        "id": 16134,
        "statement": "is(erin, rough) :- is(erin, kind), is(erin, cold).",
        "description": "If Erin is kind and Erin is cold then Erin is rough."
    },
    {
        "id": 16135,
        "statement": "is(X, cold) :- is(X, big), is(X, furry).",
        "description": "Big, furry things are cold."
    },
    {
        "id": 16136,
        "statement": "is(bald_eagle, green) :- needs(X, bald_eagle).",
        "description": "If someone needs the bald eagle then the bald eagle is green."
    },
    {
        "id": 16137,
        "statement": "chases(X, bear) :- eats(X, rabbit).",
        "description": "If someone eats the rabbit then they chase the bear."
    },
    {
        "id": 16138,
        "statement": "is(X, nice) :- needs(X, bear).",
        "description": "If someone needs the bear then they are nice."
    },
    {
        "id": 16139,
        "statement": "needs(bear, bald_eagle) :- chases(X, bear).",
        "description": "If someone chases the bear then the bear needs the bald eagle."
    },
    {
        "id": 16140,
        "statement": "is(X, red) :- is(X, cold), is(X, blue).",
        "description": "All cold, blue people are red."
    },
    {
        "id": 16141,
        "statement": "eats(lion, rabbit) :- is(lion, cold).",
        "description": "If the lion is cold then the lion eats the rabbit."
    },
    {
        "id": 16142,
        "statement": "is(lion, cold) :- is(X, red), chases(X, lion).",
        "description": "If someone is red and they chase the lion then the lion is cold."
    },
    {
        "id": 16143,
        "statement": "is(rabbit, blue) :- chases(X, rabbit).",
        "description": "If someone chases the rabbit then the rabbit is blue."
    },
    {
        "id": 16144,
        "statement": "is(X, young) :- is(X, big), is(X, blue).",
        "description": "All big, blue things are young."
    },
    {
        "id": 16145,
        "statement": "is(X, round) :- is(X, cold), is(X, blue).",
        "description": "If something is cold and blue then it is round."
    },
    {
        "id": 16146,
        "statement": "is(X, red) :- is(X, blue), is(X, round).",
        "description": "Blue, round things are red."
    },
    {
        "id": 16147,
        "statement": "is(charlie, white) :- is(charlie, kind), is(charlie, nice).",
        "description": "If Charlie is kind and Charlie is nice then Charlie is white."
    },
    {
        "id": 16148,
        "statement": "is(X, blue) :- is(X, kind), is(X, nice).",
        "description": "All kind, nice things are blue."
    },
    {
        "id": 16149,
        "statement": "is(X, cold) :- is(X, furry), is(X, rough).",
        "description": "If something is furry and rough then it is cold."
    },
    {
        "id": 16150,
        "statement": "is(X, rough) :- is(X, young), is(X, furry).",
        "description": "All young, furry things are rough."
    },
    {
        "id": 16151,
        "statement": "is(dave, nice) :- is(dave, round).",
        "description": "If Dave is round then Dave is nice."
    },
    {
        "id": 16152,
        "statement": "is(bear, kind) :- likes(X, bear), likes(X, squirrel).",
        "description": "If something likes the bear and it likes the squirrel then the bear is kind."
    },
    {
        "id": 16153,
        "statement": "is(bear, young) :- likes(X, bear).",
        "description": "If something likes the bear then the bear is young."
    },
    {
        "id": 16154,
        "statement": "likes(X, bear) :- is(X, young).",
        "description": "If something is young then it likes the bear."
    },
    {
        "id": 16155,
        "statement": "is(X, white) :- is(X, furry), is(X, nice).",
        "description": "All furry, nice things are white."
    },
    {
        "id": 16156,
        "statement": "is(gary, white) :- is(gary, nice), is(gary, rough).",
        "description": "If Gary is nice and Gary is rough then Gary is white."
    },
    {
        "id": 16157,
        "statement": "is(bob, nice) :- is(bob, green).",
        "description": "If Bob is green then Bob is nice."
    },
    {
        "id": 16158,
        "statement": "sees(bear, tiger) :- eats(X, bear), is(X, green).",
        "description": "If something eats the bear and it is green then the bear sees the tiger."
    },
    {
        "id": 16159,
        "statement": "eats(bald_eagle, cow) :- is(bald_eagle, blue).",
        "description": "If the bald eagle is blue then the bald eagle eats the cow."
    },
    {
        "id": 16160,
        "statement": "eats(X, tiger) :- eats(X, bald_eagle).",
        "description": "If something eats the bald eagle then it eats the tiger."
    },
    {
        "id": 16161,
        "statement": "needs(X, bear) :- sees(X, tiger).",
        "description": "If something sees the tiger then it needs the bear."
    },
    {
        "id": 16162,
        "statement": "needs(cow, tiger) :- eats(bear, cow).",
        "description": "If the bear eats the cow then the cow needs the tiger."
    },
    {
        "id": 16163,
        "statement": "eats(X, bear) :- needs(X, cow), is(X, blue).",
        "description": "If something needs the cow and it is blue then it eats the bear."
    },
    {
        "id": 16164,
        "statement": "is(X, kind) :- is(X, young), is(X, smart).",
        "description": "If something is young and smart then it is kind."
    },
    {
        "id": 16165,
        "statement": "is(X, green) :- is(X, kind), is(X, young).",
        "description": "If something is kind and young then it is green."
    },
    {
        "id": 16166,
        "statement": "is(erin, nice) :- is(erin, red), is(erin, green).",
        "description": "If Erin is red and Erin is green then Erin is nice."
    },
    {
        "id": 16167,
        "statement": "is(dave, red) :- is(dave, nice).",
        "description": "If Dave is nice then Dave is red."
    },
    {
        "id": 16168,
        "statement": "is(erin, red) :- is(erin, blue), is(erin, quiet).",
        "description": "If Erin is blue and Erin is quiet then Erin is red."
    },
    {
        "id": 16169,
        "statement": "is(X, cold) :- is(X, red), is(X, round).",
        "description": "All red, round things are cold."
    },
    {
        "id": 16170,
        "statement": "sees(tiger, bear) :- visits(tiger, lion), sees(tiger, lion).",
        "description": "If the tiger visits the lion and the tiger sees the lion then the tiger sees the bear."
    },
    {
        "id": 16171,
        "statement": "likes(X, lion) :- is(X, young).",
        "description": "If someone is young then they like the lion."
    },
    {
        "id": 16172,
        "statement": "likes(bald_eagle, bear) :- is(bald_eagle, kind).",
        "description": "If the bald eagle is kind then the bald eagle likes the bear."
    },
    {
        "id": 16173,
        "statement": "likes(X, bald_eagle) :- likes(X, bear), sees(X, lion).",
        "description": "If someone likes the bear and they see the lion then they like the bald eagle."
    },
    {
        "id": 16174,
        "statement": "sees(tiger, bald_eagle) :- likes(X, tiger).",
        "description": "If someone likes the tiger then the tiger sees the bald eagle."
    },
    {
        "id": 16175,
        "statement": "likes(lion, tiger) :- is(X, green), likes(X, lion).",
        "description": "If someone is green and they like the lion then the lion likes the tiger."
    },
    {
        "id": 16176,
        "statement": "sees(X, bear) :- is(X, blue), is(X, kind).",
        "description": "If someone is blue and kind then they see the bear."
    },
    {
        "id": 16177,
        "statement": "likes(X, bald_eagle) :- likes(X, tiger).",
        "description": "If someone likes the tiger then they like the bald eagle."
    },
    {
        "id": 16178,
        "statement": "is(X, nice) :- is(X, quiet), is(X, furry).",
        "description": "Quiet, furry people are nice."
    },
    {
        "id": 16179,
        "statement": "is(X, green) :- is(X, nice), is(X, quiet).",
        "description": "All nice, quiet people are green."
    },
    {
        "id": 16180,
        "statement": "is(erin, quiet) :- is(erin, green), is(erin, big).",
        "description": "If Erin is green and Erin is big then Erin is quiet."
    },
    {
        "id": 16181,
        "statement": "is(X, red) :- is(X, quiet), is(X, big).",
        "description": "All quiet, big people are red."
    },
    {
        "id": 16182,
        "statement": "is(bob, blue) :- is(bob, big), is(bob, furry).",
        "description": "If Bob is big and Bob is furry then Bob is blue."
    },
    {
        "id": 16183,
        "statement": "is(harry, young) :- is(harry, white), is(harry, nice).",
        "description": "If Harry is white and Harry is nice then Harry is young."
    },
    {
        "id": 16184,
        "statement": "is(fiona, nice) :- is(fiona, big), is(fiona, rough).",
        "description": "If Fiona is big and Fiona is rough then Fiona is nice."
    },
    {
        "id": 16185,
        "statement": "is(X, big) :- is(X, rough), is(X, young).",
        "description": "If something is rough and young then it is big."
    },
    {
        "id": 16186,
        "statement": "is(fiona, nice) :- is(fiona, quiet), is(fiona, young).",
        "description": "If Fiona is quiet and Fiona is young then Fiona is nice."
    },
    {
        "id": 16187,
        "statement": "is(X, white) :- is(X, big), is(X, young).",
        "description": "If something is big and young then it is white."
    },
    {
        "id": 16188,
        "statement": "is(fiona, rough) :- is(fiona, quiet), is(fiona, nice).",
        "description": "If Fiona is quiet and Fiona is nice then Fiona is rough."
    },
    {
        "id": 16189,
        "statement": "is(dave, white) :- not is(dave, red).",
        "description": "If Dave is not red then Dave is white."
    },
    {
        "id": 16190,
        "statement": "is(X, quiet) :- is(X, young), is(X, white).",
        "description": "If someone is young and white then they are quiet."
    },
    {
        "id": 16191,
        "statement": "is(X, smart) :- is(X, blue), is(X, furry).",
        "description": "All blue, furry things are smart."
    },
    {
        "id": 16192,
        "statement": "is(X, green) :- is(X, kind), is(X, big).",
        "description": "Kind, big people are green."
    },
    {
        "id": 16193,
        "statement": "is(X, white) :- is(X, smart), is(X, young).",
        "description": "Smart, young people are white."
    },
    {
        "id": 16194,
        "statement": "is(bob, furry) :- is(bob, green), is(bob, white).",
        "description": "If Bob is green and Bob is white then Bob is furry."
    },
    {
        "id": 16195,
        "statement": "is(harry, white) :- is(harry, rough), is(harry, nice).",
        "description": "If Harry is rough and Harry is nice then Harry is white."
    },
    {
        "id": 16196,
        "statement": "is(bob, young) :- is(bob, rough), is(bob, big).",
        "description": "If Bob is rough and Bob is big then Bob is young."
    },
    {
        "id": 16197,
        "statement": "is(X, rough) :- is(X, nice), is(X, white).",
        "description": "Nice, white things are rough."
    },
    {
        "id": 16198,
        "statement": "is(X, green) :- is(X, rough), is(X, white).",
        "description": "All rough, white things are green."
    },
    {
        "id": 16199,
        "statement": "is(X, nice) :- is(X, white), is(X, blue).",
        "description": "If someone is white and blue then they are nice."
    },
    {
        "id": 16200,
        "statement": "is(X, round) :- is(X, furry), is(X, kind).",
        "description": "If something is furry and kind then it is round."
    },
    {
        "id": 16201,
        "statement": "is(X, red) :- is(X, green), is(X, quiet).",
        "description": "All green, quiet things are red."
    },
    {
        "id": 16202,
        "statement": "is(erin, red) :- not is(erin, quiet).",
        "description": "If Erin is not quiet then Erin is red."
    },
    {
        "id": 16203,
        "statement": "is(X, green) :- is(X, red), is(X, furry).",
        "description": "If something is red and furry then it is green."
    },
    {
        "id": 16204,
        "statement": "is(X, white) :- is(X, round), is(X, blue).",
        "description": "All round, blue people are white."
    },
    {
        "id": 16205,
        "statement": "is(dave, round) :- is(dave, green), is(dave, furry).",
        "description": "If Dave is green and Dave is furry then Dave is round."
    },
    {
        "id": 16206,
        "statement": "is(X, quiet) :- is(X, cold), is(X, green).",
        "description": "If someone is cold and green then they are quiet."
    },
    {
        "id": 16207,
        "statement": "is(X, round) :- is(X, cold), is(X, green).",
        "description": "All cold, green things are round."
    },
    {
        "id": 16208,
        "statement": "is(X, green) :- is(X, cold), is(X, smart).",
        "description": "All cold, smart things are green."
    },
    {
        "id": 16209,
        "statement": "likes(cow, lion) :- is(X, kind), likes(X, cow).",
        "description": "If something is kind and it likes the cow then the cow likes the lion."
    },
    {
        "id": 16210,
        "statement": "chases(X, lion) :- is(X, nice).",
        "description": "If something is nice then it chases the lion."
    },
    {
        "id": 16211,
        "statement": "needs(cow, bald_eagle) :- needs(X, cow).",
        "description": "If something needs the cow then the cow needs the bald eagle."
    },
    {
        "id": 16212,
        "statement": "is(X, kind) :- is(X, cold), not is(X, green).",
        "description": "If something is cold and not green then it is kind."
    },
    {
        "id": 16213,
        "statement": "is(bald_eagle, kind) :- chases(X, bald_eagle).",
        "description": "If something chases the bald eagle then the bald eagle is kind."
    },
    {
        "id": 16214,
        "statement": "is(anne, smart) :- is(anne, nice).",
        "description": "If Anne is nice then Anne is smart."
    },
    {
        "id": 16215,
        "statement": "is(X, quiet) :- is(X, white), is(X, nice).",
        "description": "All white, nice people are quiet."
    },
    {
        "id": 16216,
        "statement": "is(X, red) :- likes(X, bald_eagle).",
        "description": "If someone likes the bald eagle then they are red."
    },
    {
        "id": 16217,
        "statement": "is(bald_eagle, round) :- likes(X, bald_eagle), chases(bald_eagle, cat).",
        "description": "If someone likes the bald eagle and the bald eagle chases the cat then the bald eagle is round."
    },
    {
        "id": 16218,
        "statement": "is(cat, round) :- likes(bear, bald_eagle), not sees(bear, cat).",
        "description": "If the bear likes the bald eagle and the bear does not see the cat then the cat is round."
    },
    {
        "id": 16219,
        "statement": "chases(X, squirrel) :- likes(X, squirrel).",
        "description": "If someone likes the squirrel then they chase the squirrel."
    },
    {
        "id": 16220,
        "statement": "is(bald_eagle, kind) :- is(bald_eagle, red), not likes(bear, bald_eagle).",
        "description": "If the bald eagle is red and the bear does not like the bald eagle then the bald eagle is kind."
    },
    {
        "id": 16221,
        "statement": "is(X, young) :- is(X, white), is(X, green).",
        "description": "White, green people are young."
    },
    {
        "id": 16222,
        "statement": "is(X, furry) :- is(X, green), is(X, quiet).",
        "description": "If someone is green and quiet then they are furry."
    },
    {
        "id": 16223,
        "statement": "is(X, quiet) :- is(X, young), is(X, furry).",
        "description": "If someone is young and furry then they are quiet."
    },
    {
        "id": 16224,
        "statement": "is(X, white) :- is(X, young), is(X, red).",
        "description": "If someone is young and red then they are white."
    },
    {
        "id": 16225,
        "statement": "is(X, quiet) :- is(X, green), is(X, cold).",
        "description": "All green, cold people are quiet."
    },
    {
        "id": 16226,
        "statement": "is(X, furry) :- is(X, kind), is(X, blue).",
        "description": "Kind, blue people are furry."
    },
    {
        "id": 16227,
        "statement": "is(X, furry) :- is(X, quiet), is(X, blue).",
        "description": "Quiet, blue people are furry."
    },
    {
        "id": 16228,
        "statement": "is(harry, blue) :- is(harry, kind), is(harry, rough).",
        "description": "If Harry is kind and Harry is rough then Harry is blue."
    },
    {
        "id": 16229,
        "statement": "is(X, rough) :- is(X, quiet), is(X, kind).",
        "description": "If someone is quiet and kind then they are rough."
    },
    {
        "id": 16230,
        "statement": "is(X, kind) :- is(X, quiet), is(X, furry).",
        "description": "All quiet, furry people are kind."
    },
    {
        "id": 16231,
        "statement": "is(X, blue) :- is(X, nice), is(X, quiet).",
        "description": "All nice, quiet people are blue."
    },
    {
        "id": 16232,
        "statement": "is(fiona, rough) :- is(fiona, furry), is(fiona, kind).",
        "description": "If Fiona is furry and Fiona is kind then Fiona is rough."
    },
    {
        "id": 16233,
        "statement": "sees(cow, bald_eagle) :- needs(bald_eagle, squirrel), needs(bald_eagle, cow).",
        "description": "If the bald eagle needs the squirrel and the bald eagle needs the cow then the cow sees the bald eagle."
    },
    {
        "id": 16234,
        "statement": "is(X, red) :- visits(X, bald_eagle).",
        "description": "If someone visits the bald eagle then they are red."
    },
    {
        "id": 16235,
        "statement": "visits(X, mouse) :- is(X, red).",
        "description": "If someone is red then they visit the mouse."
    },
    {
        "id": 16236,
        "statement": "sees(cow, mouse) :- sees(X, bald_eagle), sees(X, cow).",
        "description": "If someone sees the bald eagle and they see the cow then the cow sees the mouse."
    },
    {
        "id": 16237,
        "statement": "is(mouse, green) :- needs(X, bald_eagle), visits(X, mouse).",
        "description": "If someone needs the bald eagle and they visit the mouse then the mouse is green."
    },
    {
        "id": 16238,
        "statement": "needs(cow, mouse) :- is(X, cold), not sees(X, cow).",
        "description": "If someone is cold and they do not see the cow then the cow needs the mouse."
    },
    {
        "id": 16239,
        "statement": "is(X, red) :- is(X, green), is(X, young).",
        "description": "Green, young things are red."
    },
    {
        "id": 16240,
        "statement": "is(X, green) :- is(X, young), is(X, big).",
        "description": "If something is young and big then it is green."
    },
    {
        "id": 16241,
        "statement": "is(X, furry) :- is(X, young).",
        "description": "Young things are furry."
    },
    {
        "id": 16242,
        "statement": "is(dave, furry) :- is(dave, blue), not is(dave, young).",
        "description": "If Dave is blue and Dave is not young then Dave is furry."
    },
    {
        "id": 16243,
        "statement": "is(anne, smart) :- not is(anne, big), not is(anne, green).",
        "description": "If Anne is not big and Anne is not green then Anne is smart."
    },
    {
        "id": 16244,
        "statement": "is(X, smart) :- is(X, red), is(X, green).",
        "description": "Red, green things are smart."
    },
    {
        "id": 16245,
        "statement": "is(X, red) :- is(X, smart), is(X, white).",
        "description": "All smart, white things are red."
    },
    {
        "id": 16246,
        "statement": "is(anne, furry) :- is(anne, round).",
        "description": "If Anne is round then Anne is furry."
    },
    {
        "id": 16247,
        "statement": "is(X, white) :- is(X, smart), is(X, green).",
        "description": "If something is smart and green then it is white."
    },
    {
        "id": 16248,
        "statement": "is(X, rough) :- is(X, blue), is(X, nice).",
        "description": "If someone is blue and nice then they are rough."
    },
    {
        "id": 16249,
        "statement": "is(X, furry) :- is(X, nice), is(X, quiet).",
        "description": "Nice, quiet people are furry."
    },
    {
        "id": 16250,
        "statement": "is(X, round) :- is(X, quiet), is(X, furry).",
        "description": "If someone is quiet and furry then they are round."
    },
    {
        "id": 16251,
        "statement": "is(X, green) :- is(X, red), is(X, quiet).",
        "description": "All red, quiet things are green."
    },
    {
        "id": 16252,
        "statement": "is(X, green) :- is(X, young), is(X, red).",
        "description": "If something is young and red then it is green."
    },
    {
        "id": 16253,
        "statement": "is(harry, green) :- is(harry, quiet), is(harry, rough).",
        "description": "If Harry is quiet and Harry is rough then Harry is green."
    },
    {
        "id": 16254,
        "statement": "is(harry, rough) :- is(harry, green), is(harry, young).",
        "description": "If Harry is green and Harry is young then Harry is rough."
    },
    {
        "id": 16255,
        "statement": "is(X, round) :- is(X, kind), not is(X, young).",
        "description": "If something is kind and not young then it is round."
    },
    {
        "id": 16256,
        "statement": "chases(X, bald_eagle) :- visits(X, cat), is(cat, green).",
        "description": "If someone visits the cat and the cat is green then they chase the bald eagle."
    },
    {
        "id": 16257,
        "statement": "visits(rabbit, cat) :- visits(cat, rabbit).",
        "description": "If the cat visits the rabbit then the rabbit visits the cat."
    },
    {
        "id": 16258,
        "statement": "chases(X, squirrel) :- visits(X, bald_eagle).",
        "description": "If someone visits the bald eagle then they chase the squirrel."
    },
    {
        "id": 16259,
        "statement": "visits(cat, rabbit) :- chases(bald_eagle, cat).",
        "description": "If the bald eagle chases the cat then the cat visits the rabbit."
    },
    {
        "id": 16260,
        "statement": "visits(squirrel, bald_eagle) :- visits(X, cat), visits(cat, squirrel).",
        "description": "If someone visits the cat and the cat visits the squirrel then the squirrel visits the bald eagle."
    },
    {
        "id": 16261,
        "statement": "visits(X, squirrel) :- chases(X, squirrel).",
        "description": "If someone chases the squirrel then they visit the squirrel."
    },
    {
        "id": 16262,
        "statement": "chases(rabbit, bald_eagle) :- needs(rabbit, squirrel), chases(squirrel, cat).",
        "description": "If the rabbit needs the squirrel and the squirrel chases the cat then the rabbit chases the bald eagle."
    },
    {
        "id": 16263,
        "statement": "is(X, young) :- is(X, blue), is(X, big).",
        "description": "All blue, big people are young."
    },
    {
        "id": 16264,
        "statement": "is(anne, rough) :- is(anne, young).",
        "description": "If Anne is young then Anne is rough."
    },
    {
        "id": 16265,
        "statement": "is(X, big) :- is(X, round), is(X, kind).",
        "description": "If someone is round and kind then they are big."
    },
    {
        "id": 16266,
        "statement": "is(erin, kind) :- is(erin, round), is(erin, white).",
        "description": "If Erin is round and Erin is white then Erin is kind."
    },
    {
        "id": 16267,
        "statement": "is(X, round) :- is(X, white), is(X, rough).",
        "description": "White, rough things are round."
    },
    {
        "id": 16268,
        "statement": "is(gary, kind) :- is(gary, round), is(gary, white).",
        "description": "If Gary is round and Gary is white then Gary is kind."
    },
    {
        "id": 16269,
        "statement": "is(X, white) :- is(X, rough), is(X, red).",
        "description": "All rough, red things are white."
    },
    {
        "id": 16270,
        "statement": "is(X, cold) :- is(X, white), is(X, quiet).",
        "description": "White, quiet things are cold."
    },
    {
        "id": 16271,
        "statement": "is(X, round) :- is(X, cold), is(X, white).",
        "description": "If something is cold and white then it is round."
    },
    {
        "id": 16272,
        "statement": "is(X, round) :- is(X, smart), is(X, young).",
        "description": "All smart, young things are round."
    },
    {
        "id": 16273,
        "statement": "visits(rabbit, dog) :- chases(X, rabbit), is(rabbit, red).",
        "description": "If something chases the rabbit and the rabbit is red then the rabbit visits the dog."
    },
    {
        "id": 16274,
        "statement": "visits(dog, rabbit) :- likes(X, squirrel), chases(X, dog).",
        "description": "If something likes the squirrel and it chases the dog then the dog visits the rabbit."
    },
    {
        "id": 16275,
        "statement": "chases(dog, lion) :- is(X, cold), visits(X, dog).",
        "description": "If something is cold and it visits the dog then the dog chases the lion."
    },
    {
        "id": 16276,
        "statement": "is(X, green) :- chases(X, dog).",
        "description": "If something chases the dog then it is green."
    },
    {
        "id": 16277,
        "statement": "likes(lion, rabbit) :- chases(X, lion).",
        "description": "If something chases the lion then the lion likes the rabbit."
    },
    {
        "id": 16278,
        "statement": "likes(rabbit, lion) :- likes(X, rabbit), is(X, round).",
        "description": "If something likes the rabbit and it is round then the rabbit likes the lion."
    },
    {
        "id": 16279,
        "statement": "is(X, round) :- likes(X, rabbit).",
        "description": "If something likes the rabbit then it is round."
    },
    {
        "id": 16280,
        "statement": "chases(X, dog) :- likes(X, lion), visits(lion, rabbit).",
        "description": "If something likes the lion and the lion visits the rabbit then it chases the dog."
    },
    {
        "id": 16281,
        "statement": "is(X, smart) :- is(X, green), is(X, nice).",
        "description": "All green, nice people are smart."
    },
    {
        "id": 16282,
        "statement": "is(X, young) :- is(X, quiet), is(X, cold).",
        "description": "All quiet, cold people are young."
    },
    {
        "id": 16283,
        "statement": "is(X, smart) :- is(X, quiet), is(X, rough).",
        "description": "If someone is quiet and rough then they are smart."
    },
    {
        "id": 16284,
        "statement": "visits(X, squirrel) :- is(X, cold).",
        "description": "If something is cold then it visits the squirrel."
    },
    {
        "id": 16285,
        "statement": "needs(X, dog) :- needs(X, tiger), chases(X, dog).",
        "description": "If something needs the tiger and it chases the dog then it needs the dog."
    },
    {
        "id": 16286,
        "statement": "needs(squirrel, dog) :- is(squirrel, green).",
        "description": "If the squirrel is green then the squirrel needs the dog."
    },
    {
        "id": 16287,
        "statement": "is(tiger, big) :- chases(squirrel, tiger), is(squirrel, cold).",
        "description": "If the squirrel chases the tiger and the squirrel is cold then the tiger is big."
    },
    {
        "id": 16288,
        "statement": "visits(tiger, dog) :- chases(X, tiger).",
        "description": "If something chases the tiger then the tiger visits the dog."
    },
    {
        "id": 16289,
        "statement": "is(lion, cold) :- needs(tiger, lion).",
        "description": "If the tiger needs the lion then the lion is cold."
    },
    {
        "id": 16290,
        "statement": "needs(X, lion) :- visits(X, squirrel).",
        "description": "If something visits the squirrel then it needs the lion."
    },
    {
        "id": 16291,
        "statement": "chases(X, dog) :- visits(X, squirrel), is(X, round).",
        "description": "If something visits the squirrel and it is round then it chases the dog."
    },
    {
        "id": 16292,
        "statement": "is(X, quiet) :- is(X, red), not is(X, blue).",
        "description": "If someone is red and not blue then they are quiet."
    },
    {
        "id": 16293,
        "statement": "is(erin, rough) :- is(erin, cold), is(erin, quiet).",
        "description": "If Erin is cold and Erin is quiet then Erin is rough."
    },
    {
        "id": 16294,
        "statement": "is(fiona, red) :- not is(fiona, round).",
        "description": "If Fiona is not round then Fiona is red."
    },
    {
        "id": 16295,
        "statement": "is(X, quiet) :- is(X, blue), is(X, red).",
        "description": "Blue, red people are quiet."
    },
    {
        "id": 16296,
        "statement": "is(X, kind) :- is(X, rough), is(X, quiet).",
        "description": "Rough, quiet things are kind."
    },
    {
        "id": 16297,
        "statement": "is(X, rough) :- is(X, cold), not is(X, round).",
        "description": "If something is cold and not round then it is rough."
    },
    {
        "id": 16298,
        "statement": "is(X, quiet) :- is(X, smart), is(X, kind).",
        "description": "All smart, kind things are quiet."
    },
    {
        "id": 16299,
        "statement": "chases(X, cat) :- is(X, red), is(X, big).",
        "description": "If something is red and big then it chases the cat."
    },
    {
        "id": 16300,
        "statement": "is(cat, red) :- chases(dog, cat).",
        "description": "If the dog chases the cat then the cat is red."
    },
    {
        "id": 16301,
        "statement": "chases(X, dog) :- is(X, red).",
        "description": "If something is red then it chases the dog."
    },
    {
        "id": 16302,
        "statement": "is(X, cold) :- is(X, green), needs(X, squirrel).",
        "description": "If something is green and it needs the squirrel then it is cold."
    },
    {
        "id": 16303,
        "statement": "is(dog, big) :- is(dog, young).",
        "description": "If the dog is young then the dog is big."
    },
    {
        "id": 16304,
        "statement": "sees(bald_eagle, tiger) :- sees(X, cat), chases(X, bald_eagle).",
        "description": "If someone sees the cat and they chase the bald eagle then the bald eagle sees the tiger."
    },
    {
        "id": 16305,
        "statement": "chases(X, bald_eagle) :- is(X, kind), sees(X, mouse).",
        "description": "If someone is kind and they see the mouse then they chase the bald eagle."
    },
    {
        "id": 16306,
        "statement": "sees(X, mouse) :- is(X, young).",
        "description": "If someone is young then they see the mouse."
    },
    {
        "id": 16307,
        "statement": "chases(bald_eagle, cat) :- chases(X, bald_eagle).",
        "description": "If someone chases the bald eagle then the bald eagle chases the cat."
    },
    {
        "id": 16308,
        "statement": "is(bald_eagle, young) :- chases(X, bald_eagle), eats(X, tiger).",
        "description": "If someone chases the bald eagle and they eat the tiger then the bald eagle is young."
    },
    {
        "id": 16309,
        "statement": "is(X, kind) :- sees(X, mouse).",
        "description": "If someone sees the mouse then they are kind."
    },
    {
        "id": 16310,
        "statement": "chases(cat, bald_eagle) :- sees(X, cat), is(cat, nice).",
        "description": "If someone sees the cat and the cat is nice then the cat chases the bald eagle."
    },
    {
        "id": 16311,
        "statement": "chases(bear, rabbit) :- likes(X, bear).",
        "description": "If something likes the bear then the bear chases the rabbit."
    },
    {
        "id": 16312,
        "statement": "sees(X, squirrel) :- is(X, big).",
        "description": "If something is big then it sees the squirrel."
    },
    {
        "id": 16313,
        "statement": "sees(lion, rabbit) :- chases(X, lion).",
        "description": "If something chases the lion then the lion sees the rabbit."
    },
    {
        "id": 16314,
        "statement": "is(squirrel, round) :- likes(X, squirrel).",
        "description": "If something likes the squirrel then the squirrel is round."
    },
    {
        "id": 16315,
        "statement": "is(X, big) :- likes(X, rabbit), chases(rabbit, squirrel).",
        "description": "If something likes the rabbit and the rabbit chases the squirrel then it is big."
    },
    {
        "id": 16316,
        "statement": "likes(X, bear) :- chases(X, lion), likes(lion, bear).",
        "description": "If something chases the lion and the lion likes the bear then it likes the bear."
    },
    {
        "id": 16317,
        "statement": "likes(X, squirrel) :- chases(X, squirrel), chases(X, bear).",
        "description": "If something chases the squirrel and it chases the bear then it likes the squirrel."
    },
    {
        "id": 16318,
        "statement": "sees(X, rabbit) :- sees(X, squirrel).",
        "description": "If something sees the squirrel then it sees the rabbit."
    },
    {
        "id": 16319,
        "statement": "is(X, kind) :- is(X, cold), is(X, round).",
        "description": "Cold, round people are kind."
    },
    {
        "id": 16320,
        "statement": "is(fiona, big) :- is(fiona, green), is(fiona, nice).",
        "description": "If Fiona is green and Fiona is nice then Fiona is big."
    },
    {
        "id": 16321,
        "statement": "is(X, white) :- is(X, rough), is(X, nice).",
        "description": "Rough, nice people are white."
    },
    {
        "id": 16322,
        "statement": "is(erin, big) :- is(erin, blue), is(erin, young).",
        "description": "If Erin is blue and Erin is young then Erin is big."
    },
    {
        "id": 16323,
        "statement": "is(X, round) :- is(X, kind), is(X, big).",
        "description": "If something is kind and big then it is round."
    },
    {
        "id": 16324,
        "statement": "is(X, green) :- is(X, quiet), is(X, blue).",
        "description": "All quiet, blue things are green."
    },
    {
        "id": 16325,
        "statement": "is(X, round) :- is(X, kind), is(X, furry).",
        "description": "All kind, furry people are round."
    },
    {
        "id": 16326,
        "statement": "is(X, round) :- is(X, green), is(X, white).",
        "description": "All green, white people are round."
    },
    {
        "id": 16327,
        "statement": "is(fiona, round) :- is(fiona, quiet), is(fiona, white).",
        "description": "If Fiona is quiet and Fiona is white then Fiona is round."
    },
    {
        "id": 16328,
        "statement": "is(fiona, round) :- is(fiona, quiet).",
        "description": "If Fiona is quiet then Fiona is round."
    },
    {
        "id": 16329,
        "statement": "is(X, young) :- is(X, cold), is(X, nice).",
        "description": "Cold, nice things are young."
    },
    {
        "id": 16330,
        "statement": "is(erin, green) :- is(erin, nice), is(erin, young).",
        "description": "If Erin is nice and Erin is young then Erin is green."
    },
    {
        "id": 16331,
        "statement": "is(X, rough) :- is(X, young).",
        "description": "All young things are rough."
    },
    {
        "id": 16332,
        "statement": "is(X, furry) :- is(X, cold), is(X, rough).",
        "description": "All cold, rough things are furry."
    },
    {
        "id": 16333,
        "statement": "is(X, young) :- is(X, furry), is(X, nice).",
        "description": "If something is furry and nice then it is young."
    },
    {
        "id": 16334,
        "statement": "is(X, rough) :- is(X, smart), is(X, red).",
        "description": "If something is smart and red then it is rough."
    },
    {
        "id": 16335,
        "statement": "is(erin, smart) :- is(erin, white), is(erin, quiet).",
        "description": "If Erin is white and Erin is quiet then Erin is smart."
    },
    {
        "id": 16336,
        "statement": "is(X, quiet) :- is(X, red), is(X, rough).",
        "description": "All red, rough things are quiet."
    },
    {
        "id": 16337,
        "statement": "is(gary, white) :- is(gary, kind).",
        "description": "If Gary is kind then Gary is white."
    },
    {
        "id": 16338,
        "statement": "is(X, white) :- is(X, quiet), is(X, rough).",
        "description": "If something is quiet and rough then it is white."
    },
    {
        "id": 16339,
        "statement": "is(X, green) :- is(X, kind), is(X, cold).",
        "description": "Kind, cold people are green."
    },
    {
        "id": 16340,
        "statement": "sees(X, bear) :- chases(X, tiger).",
        "description": "If someone chases the tiger then they see the bear."
    },
    {
        "id": 16341,
        "statement": "is(X, kind) :- needs(X, cat), chases(cat, mouse).",
        "description": "If someone needs the cat and the cat chases the mouse then they are kind."
    },
    {
        "id": 16342,
        "statement": "is(cat, red) :- sees(tiger, cat).",
        "description": "If the tiger sees the cat then the cat is red."
    },
    {
        "id": 16343,
        "statement": "sees(X, cat) :- sees(X, mouse), is(mouse, green).",
        "description": "If someone sees the mouse and the mouse is green then they see the cat."
    },
    {
        "id": 16344,
        "statement": "chases(cat, mouse) :- sees(X, cat), sees(X, mouse).",
        "description": "If someone sees the cat and they see the mouse then the cat chases the mouse."
    },
    {
        "id": 16345,
        "statement": "chases(X, tiger) :- sees(X, mouse).",
        "description": "If someone sees the mouse then they chase the tiger."
    },
    {
        "id": 16346,
        "statement": "likes(X, dog) :- is(X, nice), is(X, rough).",
        "description": "If someone is nice and rough then they like the dog."
    },
    {
        "id": 16347,
        "statement": "likes(dog, mouse) :- visits(X, dog), is(X, young).",
        "description": "If someone visits the dog and they are young then the dog likes the mouse."
    },
    {
        "id": 16348,
        "statement": "is(X, rough) :- visits(X, tiger), not visits(X, dog).",
        "description": "If someone visits the tiger and they do not visit the dog then they are rough."
    },
    {
        "id": 16349,
        "statement": "visits(mouse, squirrel) :- is(X, green), visits(X, mouse).",
        "description": "If someone is green and they visit the mouse then the mouse visits the squirrel."
    },
    {
        "id": 16350,
        "statement": "visits(X, mouse) :- is(X, round).",
        "description": "If someone is round then they visit the mouse."
    },
    {
        "id": 16351,
        "statement": "is(harry, blue) :- is(harry, quiet).",
        "description": "If Harry is quiet then Harry is blue."
    },
    {
        "id": 16352,
        "statement": "is(harry, blue) :- is(harry, kind).",
        "description": "If Harry is kind then Harry is blue."
    },
    {
        "id": 16353,
        "statement": "is(gary, kind) :- is(gary, nice).",
        "description": "If Gary is nice then Gary is kind."
    },
    {
        "id": 16354,
        "statement": "is(harry, furry) :- is(harry, young), is(harry, blue).",
        "description": "If Harry is young and Harry is blue then Harry is furry."
    },
    {
        "id": 16355,
        "statement": "is(X, young) :- is(X, furry), is(X, nice).",
        "description": "Furry, nice people are young."
    },
    {
        "id": 16356,
        "statement": "visits(tiger, rabbit) :- visits(X, rabbit), chases(X, tiger).",
        "description": "If someone visits the rabbit and they chase the tiger then the tiger visits the rabbit."
    },
    {
        "id": 16357,
        "statement": "likes(rabbit, dog) :- chases(X, bear), likes(X, rabbit).",
        "description": "If someone chases the bear and they like the rabbit then the rabbit likes the dog."
    },
    {
        "id": 16358,
        "statement": "chases(dog, bear) :- likes(X, dog).",
        "description": "If someone likes the dog then the dog chases the bear."
    },
    {
        "id": 16359,
        "statement": "likes(rabbit, tiger) :- likes(dog, rabbit).",
        "description": "If the dog likes the rabbit then the rabbit likes the tiger."
    },
    {
        "id": 16360,
        "statement": "visits(tiger, rabbit) :- chases(X, tiger), is(X, nice).",
        "description": "If someone chases the tiger and they are nice then the tiger visits the rabbit."
    },
    {
        "id": 16361,
        "statement": "visits(dog, lion) :- is(X, young), chases(X, dog).",
        "description": "If someone is young and they chase the dog then the dog visits the lion."
    },
    {
        "id": 16362,
        "statement": "eats(X, dog) :- is(X, young), eats(X, tiger).",
        "description": "If someone is young and they eat the tiger then they eat the dog."
    },
    {
        "id": 16363,
        "statement": "chases(X, dog) :- chases(X, cow).",
        "description": "If someone chases the cow then they chase the dog."
    },
    {
        "id": 16364,
        "statement": "visits(lion, tiger) :- is(lion, green).",
        "description": "If the lion is green then the lion visits the tiger."
    },
    {
        "id": 16365,
        "statement": "chases(tiger, cow) :- eats(lion, tiger), visits(lion, tiger).",
        "description": "If the lion eats the tiger and the lion visits the tiger then the tiger chases the cow."
    },
    {
        "id": 16366,
        "statement": "eats(X, lion) :- chases(X, dog), visits(dog, lion).",
        "description": "If someone chases the dog and the dog visits the lion then they eat the lion."
    },
    {
        "id": 16367,
        "statement": "eats(lion, dog) :- eats(dog, lion).",
        "description": "If the dog eats the lion then the lion eats the dog."
    },
    {
        "id": 16368,
        "statement": "chases(X, cow) :- visits(X, lion), eats(lion, dog).",
        "description": "If someone visits the lion and the lion eats the dog then they chase the cow."
    },
    {
        "id": 16369,
        "statement": "is(X, quiet) :- is(X, furry), is(X, round).",
        "description": "If someone is furry and round then they are quiet."
    },
    {
        "id": 16370,
        "statement": "is(erin, kind) :- is(erin, young), is(erin, furry).",
        "description": "If Erin is young and Erin is furry then Erin is kind."
    },
    {
        "id": 16371,
        "statement": "visits(X, cow) :- visits(X, cat).",
        "description": "If something visits the cat then it visits the cow."
    },
    {
        "id": 16372,
        "statement": "is(cat, big) :- needs(cow, cat).",
        "description": "If the cow needs the cat then the cat is big."
    },
    {
        "id": 16373,
        "statement": "eats(X, lion) :- is(X, cold), visits(X, cow).",
        "description": "If something is cold and it visits the cow then it eats the lion."
    },
    {
        "id": 16374,
        "statement": "eats(X, mouse) :- is(X, rough), is(X, young).",
        "description": "If something is rough and young then it eats the mouse."
    },
    {
        "id": 16375,
        "statement": "visits(X, mouse) :- is(X, young), is(X, cold).",
        "description": "If something is young and cold then it visits the mouse."
    },
    {
        "id": 16376,
        "statement": "is(X, blue) :- is(X, cold), needs(X, mouse).",
        "description": "If something is cold and it needs the mouse then it is blue."
    },
    {
        "id": 16377,
        "statement": "visits(X, cat) :- eats(X, cow).",
        "description": "If something eats the cow then it visits the cat."
    },
    {
        "id": 16378,
        "statement": "is(mouse, big) :- visits(mouse, cow).",
        "description": "If the mouse visits the cow then the mouse is big."
    },
    {
        "id": 16379,
        "statement": "eats(mouse, cow) :- needs(X, mouse), is(X, blue).",
        "description": "If something needs the mouse and it is blue then the mouse eats the cow."
    },
    {
        "id": 16380,
        "statement": "is(X, green) :- is(X, young), is(X, blue).",
        "description": "All young, blue people are green."
    },
    {
        "id": 16381,
        "statement": "is(harry, smart) :- is(harry, young), is(harry, white).",
        "description": "If Harry is young and Harry is white then Harry is smart."
    },
    {
        "id": 16382,
        "statement": "is(X, kind) :- is(X, young), is(X, green).",
        "description": "Young, green people are kind."
    },
    {
        "id": 16383,
        "statement": "is(bald_eagle, blue) :- chases(X, bald_eagle).",
        "description": "If something chases the bald eagle then the bald eagle is blue."
    },
    {
        "id": 16384,
        "statement": "is(X, blue) :- chases(X, bald_eagle), chases(bald_eagle, lion).",
        "description": "If something chases the bald eagle and the bald eagle chases the lion then it is blue."
    },
    {
        "id": 16385,
        "statement": "sees(X, tiger) :- is(X, young).",
        "description": "If something is young then it sees the tiger."
    },
    {
        "id": 16386,
        "statement": "is(rabbit, young) :- sees(rabbit, tiger).",
        "description": "If the rabbit sees the tiger then the rabbit is young."
    },
    {
        "id": 16387,
        "statement": "visits(X, lion) :- chases(X, lion).",
        "description": "If something chases the lion then it visits the lion."
    },
    {
        "id": 16388,
        "statement": "is(X, round) :- is(X, young), sees(X, lion).",
        "description": "If something is young and it sees the lion then it is round."
    },
    {
        "id": 16389,
        "statement": "is(rabbit, blue) :- visits(X, rabbit), is(X, young).",
        "description": "If something visits the rabbit and it is young then the rabbit is blue."
    },
    {
        "id": 16390,
        "statement": "is(X, kind) :- is(X, quiet), is(X, rough).",
        "description": "All quiet, rough things are kind."
    },
    {
        "id": 16391,
        "statement": "is(X, young) :- is(X, cold), is(X, big).",
        "description": "If something is cold and big then it is young."
    },
    {
        "id": 16392,
        "statement": "is(X, rough) :- is(X, white), is(X, kind).",
        "description": "If something is white and kind then it is rough."
    },
    {
        "id": 16393,
        "statement": "needs(squirrel, rabbit) :- is(X, nice), not visits(X, squirrel).",
        "description": "If someone is nice and they do not visit the squirrel then the squirrel needs the rabbit."
    },
    {
        "id": 16394,
        "statement": "chases(cow, rabbit) :- is(cow, cold).",
        "description": "If the cow is cold then the cow chases the rabbit."
    },
    {
        "id": 16395,
        "statement": "is(squirrel, big) :- not needs(cow, squirrel), not visits(cow, cat).",
        "description": "If the cow does not need the squirrel and the cow does not visit the cat then the squirrel is big."
    },
    {
        "id": 16396,
        "statement": "is(X, cold) :- visits(X, rabbit), is(rabbit, kind).",
        "description": "If someone visits the rabbit and the rabbit is kind then they are cold."
    },
    {
        "id": 16397,
        "statement": "visits(cat, cow) :- is(cat, cold), not needs(cat, rabbit).",
        "description": "If the cat is cold and the cat does not need the rabbit then the cat visits the cow."
    },
    {
        "id": 16398,
        "statement": "is(anne, big) :- is(anne, green).",
        "description": "If Anne is green then Anne is big."
    },
    {
        "id": 16399,
        "statement": "is(X, smart) :- is(X, blue), is(X, big).",
        "description": "If something is blue and big then it is smart."
    },
    {
        "id": 16400,
        "statement": "is(anne, young) :- is(anne, big).",
        "description": "If Anne is big then Anne is young."
    },
    {
        "id": 16401,
        "statement": "is(X, blue) :- is(X, smart), is(X, young).",
        "description": "If something is smart and young then it is blue."
    },
    {
        "id": 16402,
        "statement": "is(X, nice) :- is(X, big), is(X, blue).",
        "description": "All big, blue things are nice."
    },
    {
        "id": 16403,
        "statement": "eats(lion, bald_eagle) :- is(X, big), not likes(X, lion).",
        "description": "If someone is big and they do not like the lion then the lion eats the bald eagle."
    },
    {
        "id": 16404,
        "statement": "eats(X, bear) :- eats(X, bald_eagle).",
        "description": "If someone eats the bald eagle then they eat the bear."
    },
    {
        "id": 16405,
        "statement": "eats(X, bear) :- is(X, big).",
        "description": "If someone is big then they eat the bear."
    },
    {
        "id": 16406,
        "statement": "eats(X, mouse) :- likes(X, bear).",
        "description": "If someone likes the bear then they eat the mouse."
    },
    {
        "id": 16407,
        "statement": "is(bald_eagle, cold) :- likes(X, lion), eats(lion, bald_eagle).",
        "description": "If someone likes the lion and the lion eats the bald eagle then the bald eagle is cold."
    },
    {
        "id": 16408,
        "statement": "is(X, blue) :- is(X, young), is(X, red).",
        "description": "All young, red people are blue."
    },
    {
        "id": 16409,
        "statement": "is(X, rough) :- is(X, blue), is(X, young).",
        "description": "If someone is blue and young then they are rough."
    },
    {
        "id": 16410,
        "statement": "is(X, young) :- is(X, rough), is(X, quiet).",
        "description": "All rough, quiet people are young."
    },
    {
        "id": 16411,
        "statement": "is(X, big) :- is(X, young), is(X, quiet).",
        "description": "All young, quiet people are big."
    },
    {
        "id": 16412,
        "statement": "is(X, white) :- is(X, blue), is(X, rough).",
        "description": "If someone is blue and rough then they are white."
    },
    {
        "id": 16413,
        "statement": "sees(cat, mouse) :- sees(X, mouse), needs(mouse, cat).",
        "description": "If someone sees the mouse and the mouse needs the cat then the cat sees the mouse."
    },
    {
        "id": 16414,
        "statement": "is(lion, kind) :- is(lion, big).",
        "description": "If the lion is big then the lion is kind."
    },
    {
        "id": 16415,
        "statement": "needs(bald_eagle, cat) :- needs(X, bald_eagle).",
        "description": "If someone needs the bald eagle then the bald eagle needs the cat."
    },
    {
        "id": 16416,
        "statement": "needs(lion, mouse) :- visits(X, cat), sees(cat, lion).",
        "description": "If someone visits the cat and the cat sees the lion then the lion needs the mouse."
    },
    {
        "id": 16417,
        "statement": "sees(cat, lion) :- needs(mouse, cat), needs(mouse, lion).",
        "description": "If the mouse needs the cat and the mouse needs the lion then the cat sees the lion."
    },
    {
        "id": 16418,
        "statement": "needs(X, lion) :- needs(X, cat).",
        "description": "If someone needs the cat then they need the lion."
    },
    {
        "id": 16419,
        "statement": "sees(X, lion) :- visits(X, bald_eagle).",
        "description": "If someone visits the bald eagle then they see the lion."
    },
    {
        "id": 16420,
        "statement": "is(X, young) :- needs(X, mouse).",
        "description": "If someone needs the mouse then they are young."
    },
    {
        "id": 16421,
        "statement": "is(gary, young) :- is(gary, big), is(gary, green).",
        "description": "If Gary is big and Gary is green then Gary is young."
    },
    {
        "id": 16422,
        "statement": "is(X, young) :- is(X, furry), is(X, quiet).",
        "description": "Furry, quiet people are young."
    },
    {
        "id": 16423,
        "statement": "is(X, nice) :- is(X, round), needs(X, cat).",
        "description": "If something is round and it needs the cat then it is nice."
    },
    {
        "id": 16424,
        "statement": "likes(cat, lion) :- is(cat, nice).",
        "description": "If the cat is nice then the cat likes the lion."
    },
    {
        "id": 16425,
        "statement": "likes(cat, lion) :- needs(X, cat).",
        "description": "If something needs the cat then the cat likes the lion."
    },
    {
        "id": 16426,
        "statement": "is(cow, young) :- likes(X, cow).",
        "description": "If something likes the cow then the cow is young."
    },
    {
        "id": 16427,
        "statement": "is(lion, round) :- eats(cow, lion), needs(cow, dog).",
        "description": "If the cow eats the lion and the cow needs the dog then the lion is round."
    },
    {
        "id": 16428,
        "statement": "is(X, cold) :- is(X, young), is(X, furry).",
        "description": "All young, furry things are cold."
    },
    {
        "id": 16429,
        "statement": "is(X, furry) :- is(X, cold), is(X, young).",
        "description": "All cold, young things are furry."
    },
    {
        "id": 16430,
        "statement": "is(harry, rough) :- is(harry, young), is(harry, furry).",
        "description": "If Harry is young and Harry is furry then Harry is rough."
    },
    {
        "id": 16431,
        "statement": "is(X, rough) :- is(X, white), is(X, young).",
        "description": "White, young things are rough."
    },
    {
        "id": 16432,
        "statement": "is(X, big) :- is(X, cold), not is(X, round).",
        "description": "If something is cold and not round then it is big."
    },
    {
        "id": 16433,
        "statement": "is(X, quiet) :- is(X, big), is(X, nice).",
        "description": "All big, nice things are quiet."
    },
    {
        "id": 16434,
        "statement": "is(X, blue) :- is(X, round), not is(X, cold).",
        "description": "If something is round and not cold then it is blue."
    },
    {
        "id": 16435,
        "statement": "is(X, young) :- is(X, smart), is(X, big).",
        "description": "Smart, big things are young."
    },
    {
        "id": 16436,
        "statement": "is(X, furry) :- is(X, smart), is(X, blue).",
        "description": "Smart, blue things are furry."
    },
    {
        "id": 16437,
        "statement": "is(X, blue) :- is(X, cold), is(X, smart).",
        "description": "If something is cold and smart then it is blue."
    },
    {
        "id": 16438,
        "statement": "is(X, young) :- is(X, big), is(X, furry).",
        "description": "If something is big and furry then it is young."
    },
    {
        "id": 16439,
        "statement": "is(X, nice) :- is(X, round), is(X, cold).",
        "description": "If someone is round and cold then they are nice."
    },
    {
        "id": 16440,
        "statement": "is(X, nice) :- is(X, kind), is(X, round).",
        "description": "All kind, round people are nice."
    },
    {
        "id": 16441,
        "statement": "is(X, nice) :- is(X, rough), is(X, red).",
        "description": "All rough, red people are nice."
    },
    {
        "id": 16442,
        "statement": "is(X, rough) :- is(X, smart), is(X, nice).",
        "description": "All smart, nice people are rough."
    },
    {
        "id": 16443,
        "statement": "is(harry, nice) :- is(harry, rough).",
        "description": "If Harry is rough then Harry is nice."
    },
    {
        "id": 16444,
        "statement": "is(X, green) :- is(X, rough), is(X, nice).",
        "description": "All rough, nice people are green."
    },
    {
        "id": 16445,
        "statement": "is(X, quiet) :- is(X, smart), is(X, green).",
        "description": "Smart, green people are quiet."
    },
    {
        "id": 16446,
        "statement": "is(X, blue) :- is(X, big), is(X, red).",
        "description": "If something is big and red then it is blue."
    },
    {
        "id": 16447,
        "statement": "is(gary, blue) :- is(gary, furry), is(gary, big).",
        "description": "If Gary is furry and Gary is big then Gary is blue."
    },
    {
        "id": 16448,
        "statement": "is(harry, quiet) :- is(harry, nice).",
        "description": "If Harry is nice then Harry is quiet."
    },
    {
        "id": 16449,
        "statement": "needs(X, tiger) :- sees(X, lion), likes(lion, tiger).",
        "description": "If something sees the lion and the lion likes the tiger then it needs the tiger."
    },
    {
        "id": 16450,
        "statement": "needs(X, tiger) :- likes(X, dog).",
        "description": "If something likes the dog then it needs the tiger."
    },
    {
        "id": 16451,
        "statement": "likes(tiger, dog) :- likes(X, lion), needs(lion, tiger).",
        "description": "If something likes the lion and the lion needs the tiger then the tiger likes the dog."
    },
    {
        "id": 16452,
        "statement": "sees(lion, tiger) :- sees(X, lion), needs(X, lion).",
        "description": "If something sees the lion and it needs the lion then the lion sees the tiger."
    },
    {
        "id": 16453,
        "statement": "is(lion, rough) :- likes(lion, tiger), likes(lion, cow).",
        "description": "If the lion likes the tiger and the lion likes the cow then the lion is rough."
    },
    {
        "id": 16454,
        "statement": "is(X, smart) :- is(X, young), is(X, quiet).",
        "description": "All young, quiet people are smart."
    },
    {
        "id": 16455,
        "statement": "is(X, blue) :- is(X, young), is(X, kind).",
        "description": "If someone is young and kind then they are blue."
    },
    {
        "id": 16456,
        "statement": "is(X, cold) :- is(X, smart), is(X, round).",
        "description": "Smart, round people are cold."
    },
    {
        "id": 16457,
        "statement": "is(X, young) :- is(X, kind), is(X, smart).",
        "description": "All kind, smart people are young."
    },
    {
        "id": 16458,
        "statement": "is(bob, big) :- is(bob, white), is(bob, quiet).",
        "description": "If Bob is white and Bob is quiet then Bob is big."
    },
    {
        "id": 16459,
        "statement": "is(X, cold) :- is(X, green), is(X, rough).",
        "description": "If something is green and rough then it is cold."
    },
    {
        "id": 16460,
        "statement": "is(X, cold) :- is(X, round), not is(X, green).",
        "description": "If something is round and not green then it is cold."
    },
    {
        "id": 16461,
        "statement": "is(X, cold) :- is(X, young), not is(X, green).",
        "description": "If something is young and not green then it is cold."
    },
    {
        "id": 16462,
        "statement": "is(anne, smart) :- is(anne, quiet), is(anne, green).",
        "description": "If Anne is quiet and Anne is green then Anne is smart."
    },
    {
        "id": 16463,
        "statement": "is(X, smart) :- is(X, young), is(X, white).",
        "description": "Young, white people are smart."
    },
    {
        "id": 16464,
        "statement": "needs(cat, bald_eagle) :- likes(X, cat).",
        "description": "If something likes the cat then the cat needs the bald eagle."
    },
    {
        "id": 16465,
        "statement": "sees(bear, bald_eagle) :- sees(X, bear), needs(X, cat).",
        "description": "If something sees the bear and it needs the cat then the bear sees the bald eagle."
    },
    {
        "id": 16466,
        "statement": "needs(X, bald_eagle) :- likes(X, cow).",
        "description": "If something likes the cow then it needs the bald eagle."
    },
    {
        "id": 16467,
        "statement": "likes(bald_eagle, cow) :- needs(X, bald_eagle), is(X, cold).",
        "description": "If something needs the bald eagle and it is cold then the bald eagle likes the cow."
    },
    {
        "id": 16468,
        "statement": "needs(bear, dog) :- likes(X, dog), sees(dog, bear).",
        "description": "If someone likes the dog and the dog sees the bear then the bear needs the dog."
    },
    {
        "id": 16469,
        "statement": "needs(X, bear) :- likes(X, bear).",
        "description": "If someone likes the bear then they need the bear."
    },
    {
        "id": 16470,
        "statement": "is(X, blue) :- needs(X, dog), sees(X, lion).",
        "description": "If someone needs the dog and they see the lion then they are blue."
    },
    {
        "id": 16471,
        "statement": "likes(X, dog) :- needs(X, mouse), sees(mouse, lion).",
        "description": "If someone needs the mouse and the mouse sees the lion then they like the dog."
    },
    {
        "id": 16472,
        "statement": "sees(X, lion) :- likes(X, dog).",
        "description": "If someone likes the dog then they see the lion."
    },
    {
        "id": 16473,
        "statement": "is(X, big) :- needs(X, lion), sees(X, lion).",
        "description": "If someone needs the lion and they see the lion then they are big."
    },
    {
        "id": 16474,
        "statement": "needs(dog, lion) :- likes(X, dog).",
        "description": "If someone likes the dog then the dog needs the lion."
    },
    {
        "id": 16475,
        "statement": "needs(lion, dog) :- is(X, round), likes(X, lion).",
        "description": "If someone is round and they like the lion then the lion needs the dog."
    },
    {
        "id": 16476,
        "statement": "chases(X, cat) :- sees(X, cat).",
        "description": "If something sees the cat then it chases the cat."
    },
    {
        "id": 16477,
        "statement": "is(bald_eagle, rough) :- not visits(bald_eagle, mouse).",
        "description": "If the bald eagle does not visit the mouse then the bald eagle is rough."
    },
    {
        "id": 16478,
        "statement": "visits(cat, mouse) :- sees(bear, cat).",
        "description": "If the bear sees the cat then the cat visits the mouse."
    },
    {
        "id": 16479,
        "statement": "chases(X, bald_eagle) :- sees(X, cat).",
        "description": "If something sees the cat then it chases the bald eagle."
    },
    {
        "id": 16480,
        "statement": "visits(X, bald_eagle) :- sees(X, bear).",
        "description": "If something sees the bear then it visits the bald eagle."
    },
    {
        "id": 16481,
        "statement": "is(X, furry) :- is(X, nice), is(X, red).",
        "description": "Nice, red people are furry."
    },
    {
        "id": 16482,
        "statement": "is(X, nice) :- is(X, white), not is(X, quiet).",
        "description": "If someone is white and not quiet then they are nice."
    },
    {
        "id": 16483,
        "statement": "is(X, young) :- is(X, smart), is(X, round).",
        "description": "All smart, round things are young."
    },
    {
        "id": 16484,
        "statement": "is(X, quiet) :- is(X, round), is(X, kind).",
        "description": "Round, kind things are quiet."
    },
    {
        "id": 16485,
        "statement": "is(X, cold) :- is(X, kind), is(X, quiet).",
        "description": "If someone is kind and quiet then they are cold."
    },
    {
        "id": 16486,
        "statement": "is(X, furry) :- is(X, red), is(X, kind).",
        "description": "If someone is red and kind then they are furry."
    },
    {
        "id": 16487,
        "statement": "is(charlie, red) :- is(charlie, quiet).",
        "description": "If Charlie is quiet then Charlie is red."
    },
    {
        "id": 16488,
        "statement": "is(X, green) :- is(X, rough), is(X, round).",
        "description": "Rough, round things are green."
    },
    {
        "id": 16489,
        "statement": "is(X, rough) :- is(X, blue), is(X, furry).",
        "description": "If something is blue and furry then it is rough."
    },
    {
        "id": 16490,
        "statement": "is(harry, rough) :- is(harry, kind), is(harry, round).",
        "description": "If Harry is kind and Harry is round then Harry is rough."
    },
    {
        "id": 16491,
        "statement": "is(X, furry) :- is(X, blue), is(X, rough).",
        "description": "Blue, rough things are furry."
    },
    {
        "id": 16492,
        "statement": "is(X, blue) :- is(X, round), is(X, cold).",
        "description": "Round, cold things are blue."
    },
    {
        "id": 16493,
        "statement": "is(anne, round) :- is(anne, nice), is(anne, white).",
        "description": "If Anne is nice and Anne is white then Anne is round."
    },
    {
        "id": 16494,
        "statement": "is(X, furry) :- is(X, nice), is(X, round).",
        "description": "All nice, round people are furry."
    },
    {
        "id": 16495,
        "statement": "is(X, round) :- is(X, nice), is(X, red).",
        "description": "Nice, red people are round."
    },
    {
        "id": 16496,
        "statement": "is(X, red) :- is(X, rough), is(X, quiet).",
        "description": "Rough, quiet people are red."
    },
    {
        "id": 16497,
        "statement": "is(X, quiet) :- is(X, furry), is(X, round).",
        "description": "All furry, round people are quiet."
    },
    {
        "id": 16498,
        "statement": "is(X, kind) :- is(X, quiet), is(X, green).",
        "description": "If something is quiet and green then it is kind."
    },
    {
        "id": 16499,
        "statement": "is(harry, red) :- is(harry, young), is(harry, big).",
        "description": "If Harry is young and Harry is big then Harry is red."
    },
    {
        "id": 16500,
        "statement": "is(X, young) :- is(X, blue), is(X, red).",
        "description": "If something is blue and red then it is young."
    },
    {
        "id": 16501,
        "statement": "is(X, rough) :- is(X, young), is(X, smart).",
        "description": "If something is young and smart then it is rough."
    },
    {
        "id": 16502,
        "statement": "is(X, blue) :- is(X, smart), is(X, rough).",
        "description": "If something is smart and rough then it is blue."
    },
    {
        "id": 16503,
        "statement": "is(X, big) :- is(X, cold), is(X, young).",
        "description": "If something is cold and young then it is big."
    },
    {
        "id": 16504,
        "statement": "needs(lion, cow) :- likes(X, lion), needs(lion, mouse).",
        "description": "If something likes the lion and the lion needs the mouse then the lion needs the cow."
    },
    {
        "id": 16505,
        "statement": "chases(dog, cow) :- needs(X, cow), needs(X, dog).",
        "description": "If something needs the cow and it needs the dog then the dog chases the cow."
    },
    {
        "id": 16506,
        "statement": "likes(mouse, dog) :- is(X, young), needs(X, mouse).",
        "description": "If something is young and it needs the mouse then the mouse likes the dog."
    },
    {
        "id": 16507,
        "statement": "chases(lion, mouse) :- is(X, round), chases(X, lion).",
        "description": "If something is round and it chases the lion then the lion chases the mouse."
    },
    {
        "id": 16508,
        "statement": "likes(X, mouse) :- likes(X, dog).",
        "description": "If something likes the dog then it likes the mouse."
    },
    {
        "id": 16509,
        "statement": "chases(X, lion) :- likes(X, lion), likes(lion, cow).",
        "description": "If something likes the lion and the lion likes the cow then it chases the lion."
    },
    {
        "id": 16510,
        "statement": "visits(X, squirrel) :- is(X, nice), is(X, kind).",
        "description": "If someone is nice and kind then they visit the squirrel."
    },
    {
        "id": 16511,
        "statement": "is(X, big) :- visits(X, tiger), chases(tiger, bear).",
        "description": "If someone visits the tiger and the tiger chases the bear then they are big."
    },
    {
        "id": 16512,
        "statement": "chases(rabbit, tiger) :- eats(X, tiger), not visits(tiger, rabbit).",
        "description": "If someone eats the tiger and the tiger does not visit the rabbit then the rabbit chases the tiger."
    },
    {
        "id": 16513,
        "statement": "chases(squirrel, rabbit) :- is(X, rough), chases(X, squirrel).",
        "description": "If someone is rough and they chase the squirrel then the squirrel chases the rabbit."
    },
    {
        "id": 16514,
        "statement": "chases(X, bear) :- chases(X, rabbit), not visits(X, rabbit).",
        "description": "If someone chases the rabbit and they do not visit the rabbit then they chase the bear."
    },
    {
        "id": 16515,
        "statement": "is(bob, kind) :- is(bob, green), is(bob, blue).",
        "description": "If Bob is green and Bob is blue then Bob is kind."
    },
    {
        "id": 16516,
        "statement": "is(X, green) :- is(X, rough), is(X, blue).",
        "description": "If something is rough and blue then it is green."
    },
    {
        "id": 16517,
        "statement": "is(X, kind) :- is(X, rough), not is(X, quiet).",
        "description": "If something is rough and not quiet then it is kind."
    },
    {
        "id": 16518,
        "statement": "is(dave, green) :- is(dave, rough).",
        "description": "If Dave is rough then Dave is green."
    },
    {
        "id": 16519,
        "statement": "is(X, furry) :- is(X, rough), is(X, big).",
        "description": "Rough, big things are furry."
    },
    {
        "id": 16520,
        "statement": "is(X, rough) :- is(X, furry), is(X, green).",
        "description": "If something is furry and green then it is rough."
    },
    {
        "id": 16521,
        "statement": "is(X, young) :- is(X, green), needs(X, cat).",
        "description": "If something is green and it needs the cat then it is young."
    },
    {
        "id": 16522,
        "statement": "is(mouse, big) :- eats(mouse, dog), is(mouse, young).",
        "description": "If the mouse eats the dog and the mouse is young then the mouse is big."
    },
    {
        "id": 16523,
        "statement": "eats(lion, cat) :- chases(lion, dog), is(dog, cold).",
        "description": "If the lion chases the dog and the dog is cold then the lion eats the cat."
    },
    {
        "id": 16524,
        "statement": "chases(lion, mouse) :- is(dog, young), chases(dog, lion).",
        "description": "If the dog is young and the dog chases the lion then the lion chases the mouse."
    },
    {
        "id": 16525,
        "statement": "needs(X, mouse) :- is(X, cold), eats(X, mouse).",
        "description": "If something is cold and it eats the mouse then it needs the mouse."
    },
    {
        "id": 16526,
        "statement": "chases(X, dog) :- needs(X, lion), is(lion, big).",
        "description": "If something needs the lion and the lion is big then it chases the dog."
    },
    {
        "id": 16527,
        "statement": "needs(lion, cat) :- chases(lion, cat).",
        "description": "If the lion chases the cat then the lion needs the cat."
    },
    {
        "id": 16528,
        "statement": "is(lion, big) :- is(X, cold), eats(X, lion).",
        "description": "If something is cold and it eats the lion then the lion is big."
    },
    {
        "id": 16529,
        "statement": "is(X, quiet) :- is(X, blue), is(X, smart).",
        "description": "Blue, smart people are quiet."
    },
    {
        "id": 16530,
        "statement": "is(X, blue) :- is(X, rough), is(X, big).",
        "description": "All rough, big people are blue."
    },
    {
        "id": 16531,
        "statement": "is(X, red) :- is(X, rough), is(X, smart).",
        "description": "If something is rough and smart then it is red."
    },
    {
        "id": 16532,
        "statement": "is(X, blue) :- is(X, smart), is(X, red).",
        "description": "All smart, red things are blue."
    },
    {
        "id": 16533,
        "statement": "is(X, quiet) :- is(X, round), is(X, rough).",
        "description": "If something is round and rough then it is quiet."
    },
    {
        "id": 16534,
        "statement": "is(X, furry) :- is(X, blue), is(X, rough).",
        "description": "All blue, rough things are furry."
    },
    {
        "id": 16535,
        "statement": "is(X, rough) :- is(X, smart), is(X, kind).",
        "description": "All smart, kind things are rough."
    },
    {
        "id": 16536,
        "statement": "is(X, blue) :- is(X, furry), is(X, smart).",
        "description": "If something is furry and smart then it is blue."
    },
    {
        "id": 16537,
        "statement": "needs(bear, tiger) :- is(X, rough), needs(X, bear).",
        "description": "If someone is rough and they need the bear then the bear needs the tiger."
    },
    {
        "id": 16538,
        "statement": "needs(X, bald_eagle) :- is(X, kind).",
        "description": "If someone is kind then they need the bald eagle."
    },
    {
        "id": 16539,
        "statement": "is(bear, green) :- needs(X, bear), needs(X, bald_eagle).",
        "description": "If someone needs the bear and they need the bald eagle then the bear is green."
    },
    {
        "id": 16540,
        "statement": "chases(X, tiger) :- needs(X, bald_eagle), is(X, rough).",
        "description": "If someone needs the bald eagle and they are rough then they chase the tiger."
    },
    {
        "id": 16541,
        "statement": "chases(bald_eagle, dog) :- needs(X, bald_eagle).",
        "description": "If someone needs the bald eagle then the bald eagle chases the dog."
    },
    {
        "id": 16542,
        "statement": "is(X, round) :- is(X, quiet), is(X, nice).",
        "description": "All quiet, nice things are round."
    },
    {
        "id": 16543,
        "statement": "is(X, quiet) :- is(X, furry), is(X, white).",
        "description": "If something is furry and white then it is quiet."
    },
    {
        "id": 16544,
        "statement": "is(X, quiet) :- is(X, furry), is(X, nice).",
        "description": "All furry, nice things are quiet."
    },
    {
        "id": 16545,
        "statement": "is(X, nice) :- is(X, quiet), is(X, white).",
        "description": "If something is quiet and white then it is nice."
    },
    {
        "id": 16546,
        "statement": "visits(squirrel, bear) :- sees(X, mouse), visits(X, squirrel).",
        "description": "If someone sees the mouse and they visit the squirrel then the squirrel visits the bear."
    },
    {
        "id": 16547,
        "statement": "sees(X, mouse) :- visits(X, squirrel).",
        "description": "If someone visits the squirrel then they see the mouse."
    },
    {
        "id": 16548,
        "statement": "is(X, round) :- visits(X, bear).",
        "description": "If someone visits the bear then they are round."
    },
    {
        "id": 16549,
        "statement": "is(squirrel, young) :- eats(X, squirrel), sees(X, cow).",
        "description": "If someone eats the squirrel and they see the cow then the squirrel is young."
    },
    {
        "id": 16550,
        "statement": "visits(X, squirrel) :- eats(X, squirrel).",
        "description": "If someone eats the squirrel then they visit the squirrel."
    },
    {
        "id": 16551,
        "statement": "eats(squirrel, cow) :- is(squirrel, round), sees(squirrel, bear).",
        "description": "If the squirrel is round and the squirrel sees the bear then the squirrel eats the cow."
    },
    {
        "id": 16552,
        "statement": "sees(X, bear) :- sees(X, mouse).",
        "description": "If someone sees the mouse then they see the bear."
    },
    {
        "id": 16553,
        "statement": "is(harry, cold) :- is(harry, kind), is(harry, green).",
        "description": "If Harry is kind and Harry is green then Harry is cold."
    },
    {
        "id": 16554,
        "statement": "is(X, smart) :- is(X, green), not is(X, young).",
        "description": "If something is green and not young then it is smart."
    },
    {
        "id": 16555,
        "statement": "likes(X, mouse) :- likes(X, tiger).",
        "description": "If something likes the tiger then it likes the mouse."
    },
    {
        "id": 16556,
        "statement": "sees(bald_eagle, mouse) :- visits(X, bald_eagle).",
        "description": "If something visits the bald eagle then the bald eagle sees the mouse."
    },
    {
        "id": 16557,
        "statement": "visits(cow, tiger) :- likes(X, cow).",
        "description": "If something likes the cow then the cow visits the tiger."
    },
    {
        "id": 16558,
        "statement": "likes(mouse, tiger) :- sees(bald_eagle, mouse).",
        "description": "If the bald eagle sees the mouse then the mouse likes the tiger."
    },
    {
        "id": 16559,
        "statement": "sees(bald_eagle, tiger) :- visits(bald_eagle, cow), is(bald_eagle, cold).",
        "description": "If the bald eagle visits the cow and the bald eagle is cold then the bald eagle sees the tiger."
    },
    {
        "id": 16560,
        "statement": "visits(cow, bald_eagle) :- visits(cow, tiger).",
        "description": "If the cow visits the tiger then the cow visits the bald eagle."
    },
    {
        "id": 16561,
        "statement": "needs(X, rabbit) :- is(X, big), chases(X, squirrel).",
        "description": "If someone is big and they chase the squirrel then they need the rabbit."
    },
    {
        "id": 16562,
        "statement": "is(X, big) :- is(X, blue), needs(X, squirrel).",
        "description": "If someone is blue and they need the squirrel then they are big."
    },
    {
        "id": 16563,
        "statement": "eats(squirrel, rabbit) :- eats(bald_eagle, rabbit), chases(bald_eagle, squirrel).",
        "description": "If the bald eagle eats the rabbit and the bald eagle chases the squirrel then the squirrel eats the rabbit."
    },
    {
        "id": 16564,
        "statement": "is(rabbit, green) :- chases(rabbit, bear), is(bear, blue).",
        "description": "If the rabbit chases the bear and the bear is blue then the rabbit is green."
    },
    {
        "id": 16565,
        "statement": "chases(squirrel, rabbit) :- chases(X, squirrel).",
        "description": "If someone chases the squirrel then the squirrel chases the rabbit."
    },
    {
        "id": 16566,
        "statement": "is(rabbit, blue) :- needs(X, rabbit), is(X, cold).",
        "description": "If someone needs the rabbit and they are cold then the rabbit is blue."
    },
    {
        "id": 16567,
        "statement": "chases(X, squirrel) :- is(X, cold).",
        "description": "If someone is cold then they chase the squirrel."
    },
    {
        "id": 16568,
        "statement": "likes(X, tiger) :- is(X, red), eats(X, tiger).",
        "description": "If something is red and it eats the tiger then it likes the tiger."
    },
    {
        "id": 16569,
        "statement": "likes(X, rabbit) :- eats(X, squirrel).",
        "description": "If something eats the squirrel then it likes the rabbit."
    },
    {
        "id": 16570,
        "statement": "likes(squirrel, cow) :- needs(squirrel, rabbit).",
        "description": "If the squirrel needs the rabbit then the squirrel likes the cow."
    },
    {
        "id": 16571,
        "statement": "needs(X, rabbit) :- likes(X, tiger).",
        "description": "If something likes the tiger then it needs the rabbit."
    },
    {
        "id": 16572,
        "statement": "likes(X, rabbit) :- is(X, blue), eats(X, tiger).",
        "description": "If something is blue and it eats the tiger then it likes the rabbit."
    },
    {
        "id": 16573,
        "statement": "likes(rabbit, tiger) :- needs(X, rabbit).",
        "description": "If something needs the rabbit then the rabbit likes the tiger."
    },
    {
        "id": 16574,
        "statement": "eats(X, tiger) :- likes(X, squirrel).",
        "description": "If something likes the squirrel then it eats the tiger."
    },
    {
        "id": 16575,
        "statement": "is(cat, cold) :- eats(X, rabbit), eats(X, cat).",
        "description": "If something eats the rabbit and it eats the cat then the cat is cold."
    },
    {
        "id": 16576,
        "statement": "sees(cat, rabbit) :- eats(X, cat).",
        "description": "If something eats the cat then the cat sees the rabbit."
    },
    {
        "id": 16577,
        "statement": "eats(rabbit, squirrel) :- is(X, blue), chases(X, rabbit).",
        "description": "If something is blue and it chases the rabbit then the rabbit eats the squirrel."
    },
    {
        "id": 16578,
        "statement": "sees(cat, squirrel) :- is(X, cold), eats(X, cat).",
        "description": "If something is cold and it eats the cat then the cat sees the squirrel."
    },
    {
        "id": 16579,
        "statement": "is(rabbit, cold) :- eats(X, rabbit), is(X, nice).",
        "description": "If something eats the rabbit and it is nice then the rabbit is cold."
    },
    {
        "id": 16580,
        "statement": "eats(squirrel, cat) :- sees(X, squirrel), not chases(X, tiger).",
        "description": "If something sees the squirrel and it does not chase the tiger then the squirrel eats the cat."
    },
    {
        "id": 16581,
        "statement": "sees(X, tiger) :- eats(X, squirrel), is(X, kind).",
        "description": "If something eats the squirrel and it is kind then it sees the tiger."
    },
    {
        "id": 16582,
        "statement": "visits(X, rabbit) :- is(X, nice).",
        "description": "If someone is nice then they visit the rabbit."
    },
    {
        "id": 16583,
        "statement": "is(rabbit, big) :- visits(rabbit, tiger).",
        "description": "If the rabbit visits the tiger then the rabbit is big."
    },
    {
        "id": 16584,
        "statement": "visits(X, bald_eagle) :- visits(X, rabbit).",
        "description": "If someone visits the rabbit then they visit the bald eagle."
    },
    {
        "id": 16585,
        "statement": "is(bald_eagle, nice) :- visits(X, bald_eagle).",
        "description": "If someone visits the bald eagle then the bald eagle is nice."
    },
    {
        "id": 16586,
        "statement": "likes(rabbit, bald_eagle) :- is(X, young), not likes(X, rabbit).",
        "description": "If someone is young and they do not like the rabbit then the rabbit likes the bald eagle."
    },
    {
        "id": 16587,
        "statement": "needs(X, tiger) :- is(X, kind), is(X, green).",
        "description": "If something is kind and green then it needs the tiger."
    },
    {
        "id": 16588,
        "statement": "likes(cat, bald_eagle) :- needs(X, cat).",
        "description": "If something needs the cat then the cat likes the bald eagle."
    },
    {
        "id": 16589,
        "statement": "sees(X, bald_eagle) :- is(X, kind).",
        "description": "If something is kind then it sees the bald eagle."
    },
    {
        "id": 16590,
        "statement": "needs(X, cat) :- is(X, red), sees(X, bald_eagle).",
        "description": "If something is red and it sees the bald eagle then it needs the cat."
    },
    {
        "id": 16591,
        "statement": "is(cat, green) :- is(cat, cold), likes(cat, bald_eagle).",
        "description": "If the cat is cold and the cat likes the bald eagle then the cat is green."
    },
    {
        "id": 16592,
        "statement": "is(X, blue) :- is(X, kind), is(X, big).",
        "description": "Kind, big things are blue."
    },
    {
        "id": 16593,
        "statement": "is(X, blue) :- is(X, furry), is(X, kind).",
        "description": "If something is furry and kind then it is blue."
    },
    {
        "id": 16594,
        "statement": "is(tiger, cold) :- sees(tiger, bear).",
        "description": "If the tiger sees the bear then the tiger is cold."
    },
    {
        "id": 16595,
        "statement": "sees(tiger, bear) :- chases(tiger, cat), sees(tiger, squirrel).",
        "description": "If the tiger chases the cat and the tiger sees the squirrel then the tiger sees the bear."
    },
    {
        "id": 16596,
        "statement": "chases(bear, tiger) :- chases(X, bear).",
        "description": "If something chases the bear then the bear chases the tiger."
    },
    {
        "id": 16597,
        "statement": "needs(bear, cat) :- not chases(bear, squirrel).",
        "description": "If the bear does not chase the squirrel then the bear needs the cat."
    },
    {
        "id": 16598,
        "statement": "needs(squirrel, tiger) :- needs(X, squirrel), not needs(squirrel, cat).",
        "description": "If something needs the squirrel and the squirrel does not need the cat then the squirrel needs the tiger."
    },
    {
        "id": 16599,
        "statement": "needs(cat, tiger) :- needs(X, bear), sees(X, cat).",
        "description": "If something needs the bear and it sees the cat then the cat needs the tiger."
    },
    {
        "id": 16600,
        "statement": "is(X, young) :- sees(X, tiger), not chases(tiger, bear).",
        "description": "If something sees the tiger and the tiger does not chase the bear then it is young."
    },
    {
        "id": 16601,
        "statement": "is(X, furry) :- is(X, red), is(X, blue).",
        "description": "All red, blue people are furry."
    },
    {
        "id": 16602,
        "statement": "is(X, cold) :- is(X, quiet), is(X, nice).",
        "description": "Quiet, nice people are cold."
    },
    {
        "id": 16603,
        "statement": "is(X, blue) :- is(X, quiet), is(X, nice).",
        "description": "Quiet, nice people are blue."
    },
    {
        "id": 16604,
        "statement": "sees(X, dog) :- chases(X, cat).",
        "description": "If something chases the cat then it sees the dog."
    },
    {
        "id": 16605,
        "statement": "chases(lion, cat) :- sees(X, lion), not likes(X, dog).",
        "description": "If something sees the lion and it does not like the dog then the lion chases the cat."
    },
    {
        "id": 16606,
        "statement": "chases(X, cow) :- is(X, round), not chases(X, dog).",
        "description": "If something is round and it does not chase the dog then it chases the cow."
    },
    {
        "id": 16607,
        "statement": "chases(dog, cat) :- sees(X, cow), not likes(X, dog).",
        "description": "If something sees the cow and it does not like the dog then the dog chases the cat."
    },
    {
        "id": 16608,
        "statement": "chases(dog, cat) :- sees(X, dog), likes(dog, cow).",
        "description": "If something sees the dog and the dog likes the cow then the dog chases the cat."
    },
    {
        "id": 16609,
        "statement": "likes(X, cat) :- is(X, big).",
        "description": "If something is big then it likes the cat."
    },
    {
        "id": 16610,
        "statement": "sees(dog, lion) :- sees(X, dog).",
        "description": "If something sees the dog then the dog sees the lion."
    },
    {
        "id": 16611,
        "statement": "is(X, cold) :- is(X, big), is(X, round).",
        "description": "If someone is big and round then they are cold."
    },
    {
        "id": 16612,
        "statement": "is(fiona, big) :- is(fiona, green), is(fiona, round).",
        "description": "If Fiona is green and Fiona is round then Fiona is big."
    },
    {
        "id": 16613,
        "statement": "is(fiona, green) :- is(fiona, big), is(fiona, smart).",
        "description": "If Fiona is big and Fiona is smart then Fiona is green."
    },
    {
        "id": 16614,
        "statement": "is(cat, young) :- sees(X, bear), sees(X, cat).",
        "description": "If someone sees the bear and they see the cat then the cat is young."
    },
    {
        "id": 16615,
        "statement": "is(X, blue) :- sees(X, lion), not eats(X, lion).",
        "description": "If someone sees the lion and they do not eat the lion then they are blue."
    },
    {
        "id": 16616,
        "statement": "needs(X, rabbit) :- sees(X, lion).",
        "description": "If someone sees the lion then they need the rabbit."
    },
    {
        "id": 16617,
        "statement": "is(cat, red) :- not sees(cat, rabbit).",
        "description": "If the cat does not see the rabbit then the cat is red."
    },
    {
        "id": 16618,
        "statement": "likes(bear, cow) :- is(cow, red), not likes(cow, bear).",
        "description": "If the cow is red and the cow does not like the bear then the bear likes the cow."
    },
    {
        "id": 16619,
        "statement": "is(squirrel, rough) :- eats(X, squirrel).",
        "description": "If something eats the squirrel then the squirrel is rough."
    },
    {
        "id": 16620,
        "statement": "likes(X, squirrel) :- is(X, red), chases(X, cow).",
        "description": "If something is red and it chases the cow then it likes the squirrel."
    },
    {
        "id": 16621,
        "statement": "eats(X, cow) :- chases(X, squirrel).",
        "description": "If something chases the squirrel then it eats the cow."
    },
    {
        "id": 16622,
        "statement": "eats(X, squirrel) :- chases(X, cow), is(X, nice).",
        "description": "If something chases the cow and it is nice then it eats the squirrel."
    },
    {
        "id": 16623,
        "statement": "is(tiger, young) :- eats(X, tiger).",
        "description": "If something eats the tiger then the tiger is young."
    },
    {
        "id": 16624,
        "statement": "eats(X, dog) :- is(X, cold), needs(X, tiger).",
        "description": "If something is cold and it needs the tiger then it eats the dog."
    },
    {
        "id": 16625,
        "statement": "eats(tiger, cow) :- sees(tiger, cow).",
        "description": "If the tiger sees the cow then the tiger eats the cow."
    },
    {
        "id": 16626,
        "statement": "is(dog, green) :- needs(X, bear), sees(bear, dog).",
        "description": "If something needs the bear and the bear sees the dog then the dog is green."
    },
    {
        "id": 16627,
        "statement": "needs(dog, tiger) :- needs(X, dog).",
        "description": "If something needs the dog then the dog needs the tiger."
    },
    {
        "id": 16628,
        "statement": "is(X, cold) :- eats(X, cow).",
        "description": "If something eats the cow then it is cold."
    },
    {
        "id": 16629,
        "statement": "needs(bear, cow) :- needs(X, cow), needs(cow, bear).",
        "description": "If something needs the cow and the cow needs the bear then the bear needs the cow."
    },
    {
        "id": 16630,
        "statement": "is(anne, kind) :- is(anne, furry), is(anne, green).",
        "description": "If Anne is furry and Anne is green then Anne is kind."
    },
    {
        "id": 16631,
        "statement": "is(X, white) :- is(X, cold), is(X, young).",
        "description": "If something is cold and young then it is white."
    },
    {
        "id": 16632,
        "statement": "is(charlie, big) :- is(charlie, cold), is(charlie, quiet).",
        "description": "If Charlie is cold and Charlie is quiet then Charlie is big."
    },
    {
        "id": 16633,
        "statement": "is(X, cold) :- is(X, red), is(X, furry).",
        "description": "If someone is red and furry then they are cold."
    },
    {
        "id": 16634,
        "statement": "is(harry, big) :- is(harry, quiet), is(harry, furry).",
        "description": "If Harry is quiet and Harry is furry then Harry is big."
    },
    {
        "id": 16635,
        "statement": "is(X, rough) :- is(X, green), is(X, kind).",
        "description": "Green, kind people are rough."
    },
    {
        "id": 16636,
        "statement": "is(X, green) :- is(X, blue), is(X, cold).",
        "description": "Blue, cold people are green."
    },
    {
        "id": 16637,
        "statement": "is(erin, cold) :- is(erin, white), is(erin, quiet).",
        "description": "If Erin is white and Erin is quiet then Erin is cold."
    },
    {
        "id": 16638,
        "statement": "is(bob, cold) :- is(bob, kind).",
        "description": "If Bob is kind then Bob is cold."
    },
    {
        "id": 16639,
        "statement": "is(X, white) :- is(X, quiet), is(X, red).",
        "description": "All quiet, red people are white."
    },
    {
        "id": 16640,
        "statement": "is(X, blue) :- is(X, white), is(X, red).",
        "description": "White, red people are blue."
    },
    {
        "id": 16641,
        "statement": "is(X, rough) :- is(X, quiet), is(X, red).",
        "description": "Quiet, red things are rough."
    },
    {
        "id": 16642,
        "statement": "is(X, cold) :- is(X, red), is(X, blue).",
        "description": "Red, blue things are cold."
    },
    {
        "id": 16643,
        "statement": "is(dave, blue) :- is(dave, cold), is(dave, big).",
        "description": "If Dave is cold and Dave is big then Dave is blue."
    },
    {
        "id": 16644,
        "statement": "is(X, cold) :- is(X, big), is(X, rough).",
        "description": "If something is big and rough then it is cold."
    },
    {
        "id": 16645,
        "statement": "is(gary, rough) :- is(gary, red).",
        "description": "If Gary is red then Gary is rough."
    },
    {
        "id": 16646,
        "statement": "sees(X, cow) :- sees(X, lion).",
        "description": "If someone sees the lion then they see the cow."
    },
    {
        "id": 16647,
        "statement": "sees(mouse, lion) :- is(X, green), needs(X, mouse).",
        "description": "If someone is green and they need the mouse then the mouse sees the lion."
    },
    {
        "id": 16648,
        "statement": "needs(lion, mouse) :- needs(X, lion).",
        "description": "If someone needs the lion then the lion needs the mouse."
    },
    {
        "id": 16649,
        "statement": "is(lion, cold) :- eats(mouse, lion).",
        "description": "If the mouse eats the lion then the lion is cold."
    },
    {
        "id": 16650,
        "statement": "eats(mouse, cow) :- eats(X, mouse).",
        "description": "If someone eats the mouse then the mouse eats the cow."
    },
    {
        "id": 16651,
        "statement": "is(bear, green) :- eats(X, bear).",
        "description": "If someone eats the bear then the bear is green."
    },
    {
        "id": 16652,
        "statement": "is(X, rough) :- is(X, cold), is(X, green).",
        "description": "All cold, green people are rough."
    },
    {
        "id": 16653,
        "statement": "is(X, young) :- is(X, cold), is(X, rough).",
        "description": "All cold, rough people are young."
    },
    {
        "id": 16654,
        "statement": "is(bob, big) :- is(bob, smart).",
        "description": "If Bob is smart then Bob is big."
    },
    {
        "id": 16655,
        "statement": "is(X, round) :- is(X, nice), is(X, young).",
        "description": "All nice, young things are round."
    },
    {
        "id": 16656,
        "statement": "is(X, quiet) :- is(X, round), is(X, young).",
        "description": "Round, young things are quiet."
    },
    {
        "id": 16657,
        "statement": "is(X, red) :- is(X, cold), is(X, round).",
        "description": "If something is cold and round then it is red."
    },
    {
        "id": 16658,
        "statement": "is(anne, green) :- is(anne, round), is(anne, cold).",
        "description": "If Anne is round and Anne is cold then Anne is green."
    },
    {
        "id": 16659,
        "statement": "is(X, blue) :- is(X, smart), is(X, cold).",
        "description": "Smart, cold people are blue."
    },
    {
        "id": 16660,
        "statement": "is(charlie, quiet) :- is(charlie, cold).",
        "description": "If Charlie is cold then Charlie is quiet."
    },
    {
        "id": 16661,
        "statement": "is(X, kind) :- is(X, blue), is(X, big).",
        "description": "All blue, big people are kind."
    },
    {
        "id": 16662,
        "statement": "is(X, blue) :- is(X, furry), is(X, smart).",
        "description": "Furry, smart people are blue."
    },
    {
        "id": 16663,
        "statement": "is(fiona, green) :- is(fiona, rough), is(fiona, blue).",
        "description": "If Fiona is rough and Fiona is blue then Fiona is green."
    },
    {
        "id": 16664,
        "statement": "is(fiona, rough) :- is(fiona, round), is(fiona, smart).",
        "description": "If Fiona is round and Fiona is smart then Fiona is rough."
    },
    {
        "id": 16665,
        "statement": "visits(X, cat) :- visits(X, dog).",
        "description": "If something visits the dog then it visits the cat."
    },
    {
        "id": 16666,
        "statement": "visits(cow, lion) :- needs(X, cow), visits(X, lion).",
        "description": "If something needs the cow and it visits the lion then the cow visits the lion."
    },
    {
        "id": 16667,
        "statement": "needs(X, cat) :- visits(X, dog), visits(X, cat).",
        "description": "If something visits the dog and it visits the cat then it needs the cat."
    },
    {
        "id": 16668,
        "statement": "visits(lion, cow) :- needs(X, lion), needs(X, cat).",
        "description": "If something needs the lion and it needs the cat then the lion visits the cow."
    },
    {
        "id": 16669,
        "statement": "chases(X, dog) :- needs(X, cat).",
        "description": "If something needs the cat then it chases the dog."
    },
    {
        "id": 16670,
        "statement": "needs(dog, cow) :- is(cow, cold), chases(cow, dog).",
        "description": "If the cow is cold and the cow chases the dog then the dog needs the cow."
    },
    {
        "id": 16671,
        "statement": "visits(X, mouse) :- sees(X, dog).",
        "description": "If someone sees the dog then they visit the mouse."
    },
    {
        "id": 16672,
        "statement": "is(X, green) :- visits(X, dog).",
        "description": "If someone visits the dog then they are green."
    },
    {
        "id": 16673,
        "statement": "sees(dog, mouse) :- chases(bald_eagle, dog).",
        "description": "If the bald eagle chases the dog then the dog sees the mouse."
    },
    {
        "id": 16674,
        "statement": "visits(bald_eagle, dog) :- is(X, green), sees(X, bald_eagle).",
        "description": "If someone is green and they see the bald eagle then the bald eagle visits the dog."
    },
    {
        "id": 16675,
        "statement": "chases(X, dog) :- is(X, blue), chases(X, mouse).",
        "description": "If someone is blue and they chase the mouse then they chase the dog."
    },
    {
        "id": 16676,
        "statement": "sees(tiger, bald_eagle) :- chases(bald_eagle, tiger).",
        "description": "If the bald eagle chases the tiger then the tiger sees the bald eagle."
    },
    {
        "id": 16677,
        "statement": "sees(X, mouse) :- sees(X, tiger).",
        "description": "If someone sees the tiger then they see the mouse."
    },
    {
        "id": 16678,
        "statement": "needs(X, bear) :- chases(X, bald_eagle), is(X, rough).",
        "description": "If something chases the bald eagle and it is rough then it needs the bear."
    },
    {
        "id": 16679,
        "statement": "is(cow, nice) :- needs(bald_eagle, cow).",
        "description": "If the bald eagle needs the cow then the cow is nice."
    },
    {
        "id": 16680,
        "statement": "is(cat, kind) :- needs(bear, cat).",
        "description": "If the bear needs the cat then the cat is kind."
    },
    {
        "id": 16681,
        "statement": "needs(X, cat) :- is(X, rough).",
        "description": "If something is rough then it needs the cat."
    },
    {
        "id": 16682,
        "statement": "is(cat, rough) :- is(cat, blue).",
        "description": "If the cat is blue then the cat is rough."
    },
    {
        "id": 16683,
        "statement": "likes(X, mouse) :- is(X, nice).",
        "description": "If something is nice then it likes the mouse."
    },
    {
        "id": 16684,
        "statement": "likes(tiger, cow) :- likes(tiger, mouse).",
        "description": "If the tiger likes the mouse then the tiger likes the cow."
    },
    {
        "id": 16685,
        "statement": "is(X, green) :- is(X, red), likes(X, cow).",
        "description": "If something is red and it likes the cow then it is green."
    },
    {
        "id": 16686,
        "statement": "is(mouse, cold) :- is(X, red), likes(X, mouse).",
        "description": "If something is red and it likes the mouse then the mouse is cold."
    },
    {
        "id": 16687,
        "statement": "visits(squirrel, tiger) :- needs(squirrel, cow), likes(cow, squirrel).",
        "description": "If the squirrel needs the cow and the cow likes the squirrel then the squirrel visits the tiger."
    },
    {
        "id": 16688,
        "statement": "likes(X, tiger) :- needs(X, cow).",
        "description": "If something needs the cow then it likes the tiger."
    },
    {
        "id": 16689,
        "statement": "visits(X, tiger) :- is(X, red), likes(X, cow).",
        "description": "If something is red and it likes the cow then it visits the tiger."
    },
    {
        "id": 16690,
        "statement": "visits(cow, dog) :- visits(X, cow).",
        "description": "If someone visits the cow then the cow visits the dog."
    },
    {
        "id": 16691,
        "statement": "visits(squirrel, cow) :- eats(X, squirrel).",
        "description": "If someone eats the squirrel then the squirrel visits the cow."
    },
    {
        "id": 16692,
        "statement": "is(dog, nice) :- visits(X, dog).",
        "description": "If someone visits the dog then the dog is nice."
    },
    {
        "id": 16693,
        "statement": "visits(X, cow) :- visits(X, dog), eats(X, cow).",
        "description": "If someone visits the dog and they eat the cow then they visit the cow."
    },
    {
        "id": 16694,
        "statement": "visits(squirrel, dog) :- likes(squirrel, lion).",
        "description": "If the squirrel likes the lion then the squirrel visits the dog."
    },
    {
        "id": 16695,
        "statement": "visits(X, lion) :- is(X, nice).",
        "description": "If someone is nice then they visit the lion."
    },
    {
        "id": 16696,
        "statement": "eats(X, lion) :- is(X, green).",
        "description": "If someone is green then they eat the lion."
    },
    {
        "id": 16697,
        "statement": "likes(cow, dog) :- likes(X, cow).",
        "description": "If someone likes the cow then the cow likes the dog."
    },
    {
        "id": 16698,
        "statement": "is(X, rough) :- is(X, round), is(X, white).",
        "description": "Round, white things are rough."
    },
    {
        "id": 16699,
        "statement": "is(X, white) :- is(X, quiet), is(X, red).",
        "description": "All quiet, red things are white."
    },
    {
        "id": 16700,
        "statement": "is(X, big) :- is(X, red), is(X, smart).",
        "description": "Red, smart things are big."
    },
    {
        "id": 16701,
        "statement": "chases(X, dog) :- is(X, blue), likes(X, bear).",
        "description": "If someone is blue and they like the bear then they chase the dog."
    },
    {
        "id": 16702,
        "statement": "likes(X, bear) :- sees(X, bald_eagle).",
        "description": "If someone sees the bald eagle then they like the bear."
    },
    {
        "id": 16703,
        "statement": "likes(X, lion) :- chases(X, bald_eagle), chases(X, bear).",
        "description": "If someone chases the bald eagle and they chase the bear then they like the lion."
    },
    {
        "id": 16704,
        "statement": "chases(dog, bald_eagle) :- chases(X, dog).",
        "description": "If someone chases the dog then the dog chases the bald eagle."
    },
    {
        "id": 16705,
        "statement": "likes(bald_eagle, bear) :- is(bald_eagle, big).",
        "description": "If the bald eagle is big then the bald eagle likes the bear."
    },
    {
        "id": 16706,
        "statement": "is(X, red) :- is(X, young), is(X, cold).",
        "description": "If someone is young and cold then they are red."
    },
    {
        "id": 16707,
        "statement": "is(X, red) :- is(X, nice), is(X, green).",
        "description": "If someone is nice and green then they are red."
    },
    {
        "id": 16708,
        "statement": "likes(tiger, mouse) :- needs(X, tiger).",
        "description": "If something needs the tiger then the tiger likes the mouse."
    },
    {
        "id": 16709,
        "statement": "needs(tiger, mouse) :- likes(X, rabbit), needs(X, tiger).",
        "description": "If something likes the rabbit and it needs the tiger then the tiger needs the mouse."
    },
    {
        "id": 16710,
        "statement": "is(X, blue) :- likes(X, mouse), sees(X, mouse).",
        "description": "If something likes the mouse and it sees the mouse then it is blue."
    },
    {
        "id": 16711,
        "statement": "likes(squirrel, tiger) :- sees(rabbit, tiger), sees(rabbit, squirrel).",
        "description": "If the rabbit sees the tiger and the rabbit sees the squirrel then the squirrel likes the tiger."
    },
    {
        "id": 16712,
        "statement": "likes(rabbit, tiger) :- likes(X, squirrel), sees(squirrel, rabbit).",
        "description": "If something likes the squirrel and the squirrel sees the rabbit then the rabbit likes the tiger."
    },
    {
        "id": 16713,
        "statement": "is(tiger, blue) :- sees(rabbit, tiger), not sees(rabbit, mouse).",
        "description": "If the rabbit sees the tiger and the rabbit does not see the mouse then the tiger is blue."
    },
    {
        "id": 16714,
        "statement": "sees(X, tiger) :- sees(X, squirrel), is(X, cold).",
        "description": "If something sees the squirrel and it is cold then it sees the tiger."
    },
    {
        "id": 16715,
        "statement": "needs(X, lion) :- sees(X, squirrel).",
        "description": "If something sees the squirrel then it needs the lion."
    },
    {
        "id": 16716,
        "statement": "likes(X, squirrel) :- needs(X, lion).",
        "description": "If something needs the lion then it likes the squirrel."
    },
    {
        "id": 16717,
        "statement": "likes(lion, rabbit) :- is(lion, young).",
        "description": "If the lion is young then the lion likes the rabbit."
    },
    {
        "id": 16718,
        "statement": "needs(rabbit, lion) :- likes(X, rabbit), is(rabbit, rough).",
        "description": "If something likes the rabbit and the rabbit is rough then the rabbit needs the lion."
    },
    {
        "id": 16719,
        "statement": "needs(squirrel, mouse) :- likes(mouse, squirrel).",
        "description": "If the mouse likes the squirrel then the squirrel needs the mouse."
    },
    {
        "id": 16720,
        "statement": "likes(mouse, lion) :- needs(X, mouse), is(X, young).",
        "description": "If something needs the mouse and it is young then the mouse likes the lion."
    },
    {
        "id": 16721,
        "statement": "needs(X, rabbit) :- likes(X, lion).",
        "description": "If something likes the lion then it needs the rabbit."
    },
    {
        "id": 16722,
        "statement": "likes(lion, squirrel) :- needs(lion, mouse), needs(mouse, squirrel).",
        "description": "If the lion needs the mouse and the mouse needs the squirrel then the lion likes the squirrel."
    },
    {
        "id": 16723,
        "statement": "is(X, round) :- is(X, cold), is(X, rough).",
        "description": "All cold, rough people are round."
    },
    {
        "id": 16724,
        "statement": "is(X, cold) :- is(X, quiet), is(X, round).",
        "description": "Quiet, round people are cold."
    },
    {
        "id": 16725,
        "statement": "is(lion, red) :- chases(X, lion).",
        "description": "If someone chases the lion then the lion is red."
    },
    {
        "id": 16726,
        "statement": "eats(mouse, lion) :- eats(X, mouse), not is(X, cold).",
        "description": "If someone eats the mouse and they are not cold then the mouse eats the lion."
    },
    {
        "id": 16727,
        "statement": "eats(X, lion) :- is(X, red).",
        "description": "If someone is red then they eat the lion."
    },
    {
        "id": 16728,
        "statement": "eats(mouse, bear) :- not chases(lion, mouse).",
        "description": "If the lion does not chase the mouse then the mouse eats the bear."
    },
    {
        "id": 16729,
        "statement": "is(X, young) :- is(X, cold), eats(X, bear).",
        "description": "If someone is cold and they eat the bear then they are young."
    },
    {
        "id": 16730,
        "statement": "chases(X, lion) :- eats(X, lion).",
        "description": "If someone eats the lion then they chase the lion."
    },
    {
        "id": 16731,
        "statement": "is(gary, young) :- is(gary, red), is(gary, rough).",
        "description": "If Gary is red and Gary is rough then Gary is young."
    },
    {
        "id": 16732,
        "statement": "is(gary, red) :- is(gary, nice), is(gary, big).",
        "description": "If Gary is nice and Gary is big then Gary is red."
    },
    {
        "id": 16733,
        "statement": "is(erin, smart) :- not is(erin, big).",
        "description": "If Erin is not big then Erin is smart."
    },
    {
        "id": 16734,
        "statement": "is(X, nice) :- is(X, kind), is(X, white).",
        "description": "All kind, white people are nice."
    },
    {
        "id": 16735,
        "statement": "is(X, kind) :- is(X, smart), not is(X, rough).",
        "description": "If someone is smart and not rough then they are kind."
    },
    {
        "id": 16736,
        "statement": "is(X, kind) :- is(X, rough), is(X, white).",
        "description": "Rough, white people are kind."
    },
    {
        "id": 16737,
        "statement": "is(bob, white) :- is(bob, cold), is(bob, nice).",
        "description": "If Bob is cold and Bob is nice then Bob is white."
    },
    {
        "id": 16738,
        "statement": "is(X, nice) :- is(X, quiet), is(X, cold).",
        "description": "If someone is quiet and cold then they are nice."
    },
    {
        "id": 16739,
        "statement": "is(X, quiet) :- is(X, blue), is(X, young).",
        "description": "Blue, young people are quiet."
    },
    {
        "id": 16740,
        "statement": "is(X, rough) :- is(X, red), is(X, blue).",
        "description": "All red, blue things are rough."
    },
    {
        "id": 16741,
        "statement": "is(X, blue) :- is(X, furry), is(X, red).",
        "description": "Furry, red things are blue."
    },
    {
        "id": 16742,
        "statement": "is(X, cold) :- is(X, red), is(X, rough).",
        "description": "Red, rough things are cold."
    },
    {
        "id": 16743,
        "statement": "sees(X, dog) :- is(X, rough).",
        "description": "If something is rough then it sees the dog."
    },
    {
        "id": 16744,
        "statement": "chases(bear, dog) :- needs(X, bear).",
        "description": "If something needs the bear then the bear chases the dog."
    },
    {
        "id": 16745,
        "statement": "chases(X, tiger) :- chases(X, squirrel).",
        "description": "If something chases the squirrel then it chases the tiger."
    },
    {
        "id": 16746,
        "statement": "sees(tiger, bear) :- chases(dog, squirrel), chases(dog, tiger).",
        "description": "If the dog chases the squirrel and the dog chases the tiger then the tiger sees the bear."
    },
    {
        "id": 16747,
        "statement": "chases(X, squirrel) :- sees(X, bear).",
        "description": "If something sees the bear then it chases the squirrel."
    },
    {
        "id": 16748,
        "statement": "sees(dog, bear) :- chases(X, tiger), chases(tiger, dog).",
        "description": "If something chases the tiger and the tiger chases the dog then the dog sees the bear."
    },
    {
        "id": 16749,
        "statement": "needs(dog, bear) :- is(dog, round).",
        "description": "If the dog is round then the dog needs the bear."
    },
    {
        "id": 16750,
        "statement": "is(bear, round) :- chases(X, bear), is(bear, nice).",
        "description": "If something chases the bear and the bear is nice then the bear is round."
    },
    {
        "id": 16751,
        "statement": "is(X, red) :- is(X, quiet), is(X, white).",
        "description": "If something is quiet and white then it is red."
    },
    {
        "id": 16752,
        "statement": "is(X, green) :- is(X, white), not is(X, quiet).",
        "description": "If something is white and not quiet then it is green."
    },
    {
        "id": 16753,
        "statement": "is(X, white) :- is(X, green), is(X, big).",
        "description": "Green, big things are white."
    },
    {
        "id": 16754,
        "statement": "is(dave, nice) :- is(dave, cold), is(dave, green).",
        "description": "If Dave is cold and Dave is green then Dave is nice."
    },
    {
        "id": 16755,
        "statement": "is(X, smart) :- is(X, nice), is(X, blue).",
        "description": "Nice, blue things are smart."
    },
    {
        "id": 16756,
        "statement": "is(X, nice) :- is(X, rough), is(X, kind).",
        "description": "Rough, kind things are nice."
    },
    {
        "id": 16757,
        "statement": "is(gary, young) :- is(gary, smart).",
        "description": "If Gary is smart then Gary is young."
    },
    {
        "id": 16758,
        "statement": "is(X, big) :- is(X, green), not needs(X, dog).",
        "description": "If something is green and it does not need the dog then it is big."
    },
    {
        "id": 16759,
        "statement": "is(X, cold) :- eats(X, bald_eagle), is(X, red).",
        "description": "If something eats the bald eagle and it is red then it is cold."
    },
    {
        "id": 16760,
        "statement": "needs(tiger, squirrel) :- eats(X, tiger), is(tiger, big).",
        "description": "If something eats the tiger and the tiger is big then the tiger needs the squirrel."
    },
    {
        "id": 16761,
        "statement": "likes(tiger, squirrel) :- likes(X, tiger).",
        "description": "If something likes the tiger then the tiger likes the squirrel."
    },
    {
        "id": 16762,
        "statement": "likes(bald_eagle, tiger) :- not is(bald_eagle, cold).",
        "description": "If the bald eagle is not cold then the bald eagle likes the tiger."
    },
    {
        "id": 16763,
        "statement": "eats(X, tiger) :- is(X, big), likes(X, squirrel).",
        "description": "If something is big and it likes the squirrel then it eats the tiger."
    },
    {
        "id": 16764,
        "statement": "likes(bald_eagle, dog) :- needs(dog, bald_eagle), not is(dog, cold).",
        "description": "If the dog needs the bald eagle and the dog is not cold then the bald eagle likes the dog."
    },
    {
        "id": 16765,
        "statement": "eats(bald_eagle, squirrel) :- needs(X, squirrel), not needs(X, bald_eagle).",
        "description": "If something needs the squirrel and it does not need the bald eagle then the bald eagle eats the squirrel."
    },
    {
        "id": 16766,
        "statement": "is(X, white) :- is(X, nice), is(X, cold).",
        "description": "If something is nice and cold then it is white."
    },
    {
        "id": 16767,
        "statement": "is(harry, white) :- is(harry, nice).",
        "description": "If Harry is nice then Harry is white."
    },
    {
        "id": 16768,
        "statement": "needs(X, rabbit) :- needs(X, cow).",
        "description": "If someone needs the cow then they need the rabbit."
    },
    {
        "id": 16769,
        "statement": "is(cat, kind) :- eats(cat, rabbit).",
        "description": "If the cat eats the rabbit then the cat is kind."
    },
    {
        "id": 16770,
        "statement": "needs(rabbit, cow) :- sees(X, cow), eats(X, rabbit).",
        "description": "If someone sees the cow and they eat the rabbit then the rabbit needs the cow."
    },
    {
        "id": 16771,
        "statement": "needs(cat, rabbit) :- needs(cow, cat).",
        "description": "If the cow needs the cat then the cat needs the rabbit."
    },
    {
        "id": 16772,
        "statement": "is(X, kind) :- is(X, blue), needs(X, bald_eagle).",
        "description": "If someone is blue and they need the bald eagle then they are kind."
    },
    {
        "id": 16773,
        "statement": "sees(cat, cow) :- sees(rabbit, cat).",
        "description": "If the rabbit sees the cat then the cat sees the cow."
    },
    {
        "id": 16774,
        "statement": "is(X, young) :- sees(X, bald_eagle), is(bald_eagle, young).",
        "description": "If someone sees the bald eagle and the bald eagle is young then they are young."
    },
    {
        "id": 16775,
        "statement": "chases(X, dog) :- chases(X, cat).",
        "description": "If someone chases the cat then they chase the dog."
    },
    {
        "id": 16776,
        "statement": "is(cat, blue) :- visits(X, cat).",
        "description": "If someone visits the cat then the cat is blue."
    },
    {
        "id": 16777,
        "statement": "chases(dog, cat) :- is(X, blue), visits(X, dog).",
        "description": "If someone is blue and they visit the dog then the dog chases the cat."
    },
    {
        "id": 16778,
        "statement": "eats(bear, dog) :- eats(X, bear), is(bear, kind).",
        "description": "If someone eats the bear and the bear is kind then the bear eats the dog."
    },
    {
        "id": 16779,
        "statement": "eats(dog, cat) :- visits(dog, bear), is(dog, round).",
        "description": "If the dog visits the bear and the dog is round then the dog eats the cat."
    },
    {
        "id": 16780,
        "statement": "visits(X, cat) :- chases(X, dog), is(X, blue).",
        "description": "If someone chases the dog and they are blue then they visit the cat."
    },
    {
        "id": 16781,
        "statement": "chases(bear, dog) :- eats(X, dog), visits(dog, bear).",
        "description": "If someone eats the dog and the dog visits the bear then the bear chases the dog."
    },
    {
        "id": 16782,
        "statement": "eats(X, bear) :- chases(X, bear).",
        "description": "If someone chases the bear then they eat the bear."
    },
    {
        "id": 16783,
        "statement": "visits(bear, bald_eagle) :- chases(X, bear), chases(X, dog).",
        "description": "If someone chases the bear and they chase the dog then the bear visits the bald eagle."
    },
    {
        "id": 16784,
        "statement": "is(X, smart) :- is(X, quiet), is(X, young).",
        "description": "If someone is quiet and young then they are smart."
    },
    {
        "id": 16785,
        "statement": "is(X, quiet) :- is(X, kind), is(X, smart).",
        "description": "All kind, smart people are quiet."
    },
    {
        "id": 16786,
        "statement": "is(X, white) :- is(X, cold), is(X, quiet).",
        "description": "If someone is cold and quiet then they are white."
    },
    {
        "id": 16787,
        "statement": "sees(bear, cat) :- sees(X, bear), is(X, rough).",
        "description": "If someone sees the bear and they are rough then the bear sees the cat."
    },
    {
        "id": 16788,
        "statement": "is(cat, nice) :- visits(X, cat), is(X, green).",
        "description": "If someone visits the cat and they are green then the cat is nice."
    },
    {
        "id": 16789,
        "statement": "visits(X, cat) :- likes(X, bear), visits(bear, cow).",
        "description": "If someone likes the bear and the bear visits the cow then they visit the cat."
    },
    {
        "id": 16790,
        "statement": "visits(bear, cow) :- likes(bear, cat).",
        "description": "If the bear likes the cat then the bear visits the cow."
    },
    {
        "id": 16791,
        "statement": "is(X, red) :- likes(X, cat).",
        "description": "If someone likes the cat then they are red."
    },
    {
        "id": 16792,
        "statement": "sees(X, cat) :- is(X, big).",
        "description": "If someone is big then they see the cat."
    },
    {
        "id": 16793,
        "statement": "visits(cat, cow) :- is(cat, nice), is(cat, big).",
        "description": "If the cat is nice and the cat is big then the cat visits the cow."
    },
    {
        "id": 16794,
        "statement": "likes(bear, cat) :- likes(X, bear), is(bear, red).",
        "description": "If someone likes the bear and the bear is red then the bear likes the cat."
    },
    {
        "id": 16795,
        "statement": "is(X, big) :- is(X, nice), is(X, smart).",
        "description": "If something is nice and smart then it is big."
    },
    {
        "id": 16796,
        "statement": "is(X, green) :- is(X, cold), is(X, quiet).",
        "description": "If something is cold and quiet then it is green."
    },
    {
        "id": 16797,
        "statement": "is(X, young) :- is(X, green), is(X, kind).",
        "description": "If something is green and kind then it is young."
    },
    {
        "id": 16798,
        "statement": "is(gary, smart) :- is(gary, cold), is(gary, green).",
        "description": "If Gary is cold and Gary is green then Gary is smart."
    },
    {
        "id": 16799,
        "statement": "is(anne, quiet) :- is(anne, blue), is(anne, big).",
        "description": "If Anne is blue and Anne is big then Anne is quiet."
    },
    {
        "id": 16800,
        "statement": "is(X, big) :- is(X, cold), is(X, smart).",
        "description": "If someone is cold and smart then they are big."
    },
    {
        "id": 16801,
        "statement": "is(X, blue) :- is(X, nice), is(X, kind).",
        "description": "All nice, kind people are blue."
    },
    {
        "id": 16802,
        "statement": "is(X, kind) :- is(X, smart), is(X, quiet).",
        "description": "All smart, quiet people are kind."
    },
    {
        "id": 16803,
        "statement": "is(X, cold) :- is(X, kind), is(X, quiet).",
        "description": "All kind, quiet people are cold."
    },
    {
        "id": 16804,
        "statement": "is(X, round) :- is(X, white), is(X, red).",
        "description": "All white, red people are round."
    },
    {
        "id": 16805,
        "statement": "is(anne, red) :- is(anne, nice), is(anne, cold).",
        "description": "If Anne is nice and Anne is cold then Anne is red."
    },
    {
        "id": 16806,
        "statement": "is(X, red) :- is(X, young), is(X, nice).",
        "description": "All young, nice people are red."
    },
    {
        "id": 16807,
        "statement": "is(charlie, big) :- is(charlie, smart).",
        "description": "If Charlie is smart then Charlie is big."
    },
    {
        "id": 16808,
        "statement": "is(X, green) :- is(X, rough), is(X, quiet).",
        "description": "If someone is rough and quiet then they are green."
    },
    {
        "id": 16809,
        "statement": "is(X, smart) :- is(X, quiet), is(X, young).",
        "description": "Quiet, young people are smart."
    },
    {
        "id": 16810,
        "statement": "is(X, smart) :- is(X, white), is(X, kind).",
        "description": "White, kind things are smart."
    },
    {
        "id": 16811,
        "statement": "is(X, furry) :- is(X, white), is(X, nice).",
        "description": "White, nice things are furry."
    },
    {
        "id": 16812,
        "statement": "is(X, cold) :- is(X, nice), is(X, furry).",
        "description": "All nice, furry things are cold."
    },
    {
        "id": 16813,
        "statement": "is(X, big) :- is(X, cold), is(X, rough).",
        "description": "If something is cold and rough then it is big."
    },
    {
        "id": 16814,
        "statement": "is(X, round) :- is(X, smart), is(X, cold).",
        "description": "If something is smart and cold then it is round."
    },
    {
        "id": 16815,
        "statement": "is(X, furry) :- is(X, smart), is(X, big).",
        "description": "All smart, big things are furry."
    },
    {
        "id": 16816,
        "statement": "is(X, rough) :- is(X, nice), not is(X, white).",
        "description": "If something is nice and not white then it is rough."
    },
    {
        "id": 16817,
        "statement": "is(X, furry) :- is(X, white), is(X, big).",
        "description": "All white, big things are furry."
    },
    {
        "id": 16818,
        "statement": "is(X, red) :- is(X, furry), is(X, round).",
        "description": "All furry, round things are red."
    },
    {
        "id": 16819,
        "statement": "visits(X, lion) :- sees(X, mouse), sees(mouse, dog).",
        "description": "If someone sees the mouse and the mouse sees the dog then they visit the lion."
    },
    {
        "id": 16820,
        "statement": "needs(mouse, squirrel) :- visits(X, mouse).",
        "description": "If someone visits the mouse then the mouse needs the squirrel."
    },
    {
        "id": 16821,
        "statement": "visits(lion, squirrel) :- is(lion, kind).",
        "description": "If the lion is kind then the lion visits the squirrel."
    },
    {
        "id": 16822,
        "statement": "needs(X, mouse) :- is(X, red), is(X, kind).",
        "description": "If someone is red and kind then they need the mouse."
    },
    {
        "id": 16823,
        "statement": "is(X, nice) :- visits(X, lion).",
        "description": "If someone visits the lion then they are nice."
    },
    {
        "id": 16824,
        "statement": "sees(squirrel, mouse) :- sees(X, squirrel), is(X, nice).",
        "description": "If someone sees the squirrel and they are nice then the squirrel sees the mouse."
    },
    {
        "id": 16825,
        "statement": "is(lion, nice) :- needs(X, lion).",
        "description": "If someone needs the lion then the lion is nice."
    },
    {
        "id": 16826,
        "statement": "sees(X, squirrel) :- is(X, rough).",
        "description": "If someone is rough then they see the squirrel."
    },
    {
        "id": 16827,
        "statement": "visits(mouse, squirrel) :- sees(squirrel, mouse), is(mouse, cold).",
        "description": "If the squirrel sees the mouse and the mouse is cold then the mouse visits the squirrel."
    },
    {
        "id": 16828,
        "statement": "is(anne, furry) :- is(anne, white).",
        "description": "If Anne is white then Anne is furry."
    },
    {
        "id": 16829,
        "statement": "is(X, big) :- is(X, blue), is(X, green).",
        "description": "All blue, green things are big."
    },
    {
        "id": 16830,
        "statement": "is(X, blue) :- is(X, green), is(X, kind).",
        "description": "If something is green and kind then it is blue."
    },
    {
        "id": 16831,
        "statement": "is(X, rough) :- is(X, nice), is(X, smart).",
        "description": "All nice, smart people are rough."
    },
    {
        "id": 16832,
        "statement": "likes(cow, tiger) :- is(cow, kind), is(cow, rough).",
        "description": "If the cow is kind and the cow is rough then the cow likes the tiger."
    },
    {
        "id": 16833,
        "statement": "eats(X, cat) :- likes(X, dog), eats(dog, cat).",
        "description": "If something likes the dog and the dog eats the cat then it eats the cat."
    },
    {
        "id": 16834,
        "statement": "is(tiger, red) :- is(X, red), eats(X, tiger).",
        "description": "If something is red and it eats the tiger then the tiger is red."
    },
    {
        "id": 16835,
        "statement": "is(cow, rough) :- needs(X, cow), likes(X, cow).",
        "description": "If something needs the cow and it likes the cow then the cow is rough."
    },
    {
        "id": 16836,
        "statement": "eats(dog, tiger) :- eats(X, dog), is(X, red).",
        "description": "If something eats the dog and it is red then the dog eats the tiger."
    },
    {
        "id": 16837,
        "statement": "is(cow, red) :- likes(cow, tiger).",
        "description": "If the cow likes the tiger then the cow is red."
    },
    {
        "id": 16838,
        "statement": "is(X, cold) :- likes(X, dog), needs(dog, cow).",
        "description": "If something likes the dog and the dog needs the cow then it is cold."
    },
    {
        "id": 16839,
        "statement": "is(dave, young) :- is(dave, quiet), is(dave, nice).",
        "description": "If Dave is quiet and Dave is nice then Dave is young."
    },
    {
        "id": 16840,
        "statement": "is(X, green) :- is(X, round), is(X, smart).",
        "description": "Round, smart things are green."
    },
    {
        "id": 16841,
        "statement": "is(X, quiet) :- is(X, round), is(X, green).",
        "description": "All round, green things are quiet."
    },
    {
        "id": 16842,
        "statement": "is(X, white) :- is(X, round), is(X, green).",
        "description": "All round, green things are white."
    },
    {
        "id": 16843,
        "statement": "is(X, green) :- is(X, blue), is(X, big).",
        "description": "Blue, big things are green."
    },
    {
        "id": 16844,
        "statement": "is(dave, cold) :- not is(dave, young).",
        "description": "If Dave is not young then Dave is cold."
    },
    {
        "id": 16845,
        "statement": "is(X, kind) :- is(X, big), is(X, young).",
        "description": "If something is big and young then it is kind."
    },
    {
        "id": 16846,
        "statement": "is(X, kind) :- is(X, rough), is(X, smart).",
        "description": "All rough, smart things are kind."
    },
    {
        "id": 16847,
        "statement": "is(X, young) :- is(X, furry), is(X, red).",
        "description": "Furry, red things are young."
    },
    {
        "id": 16848,
        "statement": "likes(bald_eagle, cat) :- needs(cat, bald_eagle).",
        "description": "If the cat needs the bald eagle then the bald eagle likes the cat."
    },
    {
        "id": 16849,
        "statement": "needs(X, rabbit) :- is(X, rough).",
        "description": "If someone is rough then they need the rabbit."
    },
    {
        "id": 16850,
        "statement": "is(cat, round) :- chases(X, cat), chases(cat, dog).",
        "description": "If someone chases the cat and the cat chases the dog then the cat is round."
    },
    {
        "id": 16851,
        "statement": "likes(bald_eagle, rabbit) :- chases(X, bald_eagle), needs(X, bald_eagle).",
        "description": "If someone chases the bald eagle and they need the bald eagle then the bald eagle likes the rabbit."
    },
    {
        "id": 16852,
        "statement": "is(bald_eagle, green) :- needs(cat, bald_eagle).",
        "description": "If the cat needs the bald eagle then the bald eagle is green."
    },
    {
        "id": 16853,
        "statement": "needs(X, dog) :- is(X, green).",
        "description": "If someone is green then they need the dog."
    },
    {
        "id": 16854,
        "statement": "needs(X, bald_eagle) :- chases(X, rabbit), is(X, round).",
        "description": "If someone chases the rabbit and they are round then they need the bald eagle."
    },
    {
        "id": 16855,
        "statement": "is(X, blue) :- needs(X, dog).",
        "description": "If someone needs the dog then they are blue."
    },
    {
        "id": 16856,
        "statement": "needs(dog, bald_eagle) :- chases(rabbit, dog).",
        "description": "If the rabbit chases the dog then the dog needs the bald eagle."
    },
    {
        "id": 16857,
        "statement": "sees(X, rabbit) :- sees(X, mouse), is(X, round).",
        "description": "If someone sees the mouse and they are round then they see the rabbit."
    },
    {
        "id": 16858,
        "statement": "is(X, round) :- visits(X, bald_eagle), likes(bald_eagle, rabbit).",
        "description": "If someone visits the bald eagle and the bald eagle likes the rabbit then they are round."
    },
    {
        "id": 16859,
        "statement": "visits(tiger, bald_eagle) :- sees(X, tiger), visits(X, tiger).",
        "description": "If someone sees the tiger and they visit the tiger then the tiger visits the bald eagle."
    },
    {
        "id": 16860,
        "statement": "likes(X, rabbit) :- likes(X, tiger), visits(tiger, bald_eagle).",
        "description": "If someone likes the tiger and the tiger visits the bald eagle then they like the rabbit."
    },
    {
        "id": 16861,
        "statement": "is(X, green) :- is(X, young), is(X, cold).",
        "description": "All young, cold people are green."
    },
    {
        "id": 16862,
        "statement": "is(bob, furry) :- is(bob, rough).",
        "description": "If Bob is rough then Bob is furry."
    },
    {
        "id": 16863,
        "statement": "chases(bald_eagle, bear) :- is(bald_eagle, cold).",
        "description": "If the bald eagle is cold then the bald eagle chases the bear."
    },
    {
        "id": 16864,
        "statement": "is(dog, young) :- is(X, rough), sees(X, dog).",
        "description": "If something is rough and it sees the dog then the dog is young."
    },
    {
        "id": 16865,
        "statement": "sees(X, dog) :- sees(X, bald_eagle), chases(bald_eagle, rabbit).",
        "description": "If something sees the bald eagle and the bald eagle chases the rabbit then it sees the dog."
    },
    {
        "id": 16866,
        "statement": "eats(X, squirrel) :- visits(X, squirrel), chases(squirrel, lion).",
        "description": "If someone visits the squirrel and the squirrel chases the lion then they eat the squirrel."
    },
    {
        "id": 16867,
        "statement": "chases(X, lion) :- visits(X, squirrel).",
        "description": "If someone visits the squirrel then they chase the lion."
    },
    {
        "id": 16868,
        "statement": "is(squirrel, big) :- eats(X, squirrel).",
        "description": "If someone eats the squirrel then the squirrel is big."
    },
    {
        "id": 16869,
        "statement": "visits(X, squirrel) :- is(X, big), not eats(X, lion).",
        "description": "If someone is big and they do not eat the lion then they visit the squirrel."
    },
    {
        "id": 16870,
        "statement": "visits(tiger, mouse) :- sees(tiger, lion).",
        "description": "If the tiger sees the lion then the tiger visits the mouse."
    },
    {
        "id": 16871,
        "statement": "likes(mouse, cow) :- is(X, kind), visits(X, mouse).",
        "description": "If something is kind and it visits the mouse then the mouse likes the cow."
    },
    {
        "id": 16872,
        "statement": "is(tiger, rough) :- sees(tiger, mouse).",
        "description": "If the tiger sees the mouse then the tiger is rough."
    },
    {
        "id": 16873,
        "statement": "likes(X, tiger) :- likes(X, cow), visits(cow, lion).",
        "description": "If something likes the cow and the cow visits the lion then it likes the tiger."
    },
    {
        "id": 16874,
        "statement": "visits(tiger, cow) :- sees(X, tiger).",
        "description": "If something sees the tiger then the tiger visits the cow."
    },
    {
        "id": 16875,
        "statement": "sees(X, lion) :- likes(X, tiger), likes(X, mouse).",
        "description": "If something likes the tiger and it likes the mouse then it sees the lion."
    },
    {
        "id": 16876,
        "statement": "sees(cow, lion) :- likes(mouse, cow), not sees(mouse, lion).",
        "description": "If the mouse likes the cow and the mouse does not see the lion then the cow sees the lion."
    },
    {
        "id": 16877,
        "statement": "visits(X, cow) :- likes(X, cow), sees(X, cow).",
        "description": "If something likes the cow and it sees the cow then it visits the cow."
    },
    {
        "id": 16878,
        "statement": "sees(X, cow) :- is(X, big), not is(X, rough).",
        "description": "If something is big and not rough then it sees the cow."
    },
    {
        "id": 16879,
        "statement": "is(X, round) :- is(X, quiet), not is(X, young).",
        "description": "If someone is quiet and not young then they are round."
    },
    {
        "id": 16880,
        "statement": "is(X, furry) :- is(X, cold), not is(X, young).",
        "description": "If someone is cold and not young then they are furry."
    },
    {
        "id": 16881,
        "statement": "likes(bald_eagle, cat) :- chases(X, cat), likes(X, bald_eagle).",
        "description": "If someone chases the cat and they like the bald eagle then the bald eagle likes the cat."
    },
    {
        "id": 16882,
        "statement": "chases(cow, cat) :- chases(X, cow).",
        "description": "If someone chases the cow then the cow chases the cat."
    },
    {
        "id": 16883,
        "statement": "sees(bald_eagle, cow) :- chases(X, rabbit), likes(X, bald_eagle).",
        "description": "If someone chases the rabbit and they like the bald eagle then the bald eagle sees the cow."
    },
    {
        "id": 16884,
        "statement": "chases(X, rabbit) :- is(X, big), is(X, rough).",
        "description": "If someone is big and rough then they chase the rabbit."
    },
    {
        "id": 16885,
        "statement": "is(rabbit, nice) :- chases(X, rabbit), is(X, nice).",
        "description": "If someone chases the rabbit and they are nice then the rabbit is nice."
    },
    {
        "id": 16886,
        "statement": "likes(bald_eagle, rabbit) :- chases(cow, bald_eagle), is(cow, green).",
        "description": "If the cow chases the bald eagle and the cow is green then the bald eagle likes the rabbit."
    },
    {
        "id": 16887,
        "statement": "chases(X, cat) :- is(X, nice), sees(X, cow).",
        "description": "If someone is nice and they see the cow then they chase the cat."
    },
    {
        "id": 16888,
        "statement": "likes(X, bald_eagle) :- likes(X, cat).",
        "description": "If someone likes the cat then they like the bald eagle."
    },
    {
        "id": 16889,
        "statement": "chases(rabbit, cow) :- chases(bald_eagle, rabbit), likes(rabbit, bald_eagle).",
        "description": "If the bald eagle chases the rabbit and the rabbit likes the bald eagle then the rabbit chases the cow."
    },
    {
        "id": 16890,
        "statement": "is(harry, round) :- is(harry, quiet).",
        "description": "If Harry is quiet then Harry is round."
    },
    {
        "id": 16891,
        "statement": "is(X, blue) :- is(X, quiet), is(X, rough).",
        "description": "All quiet, rough things are blue."
    },
    {
        "id": 16892,
        "statement": "is(X, round) :- is(X, smart), is(X, rough).",
        "description": "If something is smart and rough then it is round."
    },
    {
        "id": 16893,
        "statement": "is(X, rough) :- is(X, blue), is(X, cold).",
        "description": "All blue, cold things are rough."
    },
    {
        "id": 16894,
        "statement": "chases(X, squirrel) :- sees(X, rabbit), sees(rabbit, tiger).",
        "description": "If something sees the rabbit and the rabbit sees the tiger then it chases the squirrel."
    },
    {
        "id": 16895,
        "statement": "sees(squirrel, rabbit) :- sees(X, squirrel).",
        "description": "If something sees the squirrel then the squirrel sees the rabbit."
    },
    {
        "id": 16896,
        "statement": "sees(X, squirrel) :- likes(X, tiger).",
        "description": "If something likes the tiger then it sees the squirrel."
    },
    {
        "id": 16897,
        "statement": "likes(X, tiger) :- is(X, rough).",
        "description": "If something is rough then it likes the tiger."
    },
    {
        "id": 16898,
        "statement": "sees(tiger, dog) :- likes(dog, tiger).",
        "description": "If the dog likes the tiger then the tiger sees the dog."
    },
    {
        "id": 16899,
        "statement": "likes(X, tiger) :- chases(X, rabbit).",
        "description": "If something chases the rabbit then it likes the tiger."
    },
    {
        "id": 16900,
        "statement": "chases(rabbit, tiger) :- is(rabbit, round).",
        "description": "If the rabbit is round then the rabbit chases the tiger."
    },
    {
        "id": 16901,
        "statement": "is(rabbit, blue) :- is(X, young), sees(X, rabbit).",
        "description": "If something is young and it sees the rabbit then the rabbit is blue."
    },
    {
        "id": 16902,
        "statement": "chases(cat, rabbit) :- visits(X, cat).",
        "description": "If something visits the cat then the cat chases the rabbit."
    },
    {
        "id": 16903,
        "statement": "is(X, young) :- visits(X, rabbit).",
        "description": "If something visits the rabbit then it is young."
    },
    {
        "id": 16904,
        "statement": "is(gary, red) :- is(gary, nice), is(gary, white).",
        "description": "If Gary is nice and Gary is white then Gary is red."
    },
    {
        "id": 16905,
        "statement": "is(X, nice) :- is(X, big), is(X, white).",
        "description": "If someone is big and white then they are nice."
    },
    {
        "id": 16906,
        "statement": "is(X, nice) :- is(X, young), is(X, quiet).",
        "description": "Young, quiet people are nice."
    },
    {
        "id": 16907,
        "statement": "is(X, big) :- is(X, white), is(X, quiet).",
        "description": "All white, quiet people are big."
    },
    {
        "id": 16908,
        "statement": "is(X, furry) :- is(X, big), is(X, nice).",
        "description": "All big, nice people are furry."
    },
    {
        "id": 16909,
        "statement": "is(anne, white) :- is(anne, red), is(anne, quiet).",
        "description": "If Anne is red and Anne is quiet then Anne is white."
    },
    {
        "id": 16910,
        "statement": "is(gary, young) :- is(gary, nice), is(gary, red).",
        "description": "If Gary is nice and Gary is red then Gary is young."
    },
    {
        "id": 16911,
        "statement": "is(X, kind) :- is(X, big), is(X, rough).",
        "description": "Big, rough people are kind."
    },
    {
        "id": 16912,
        "statement": "is(X, smart) :- is(X, rough), not is(X, blue).",
        "description": "If someone is rough and not blue then they are smart."
    },
    {
        "id": 16913,
        "statement": "is(bob, quiet) :- is(bob, smart), is(bob, white).",
        "description": "If Bob is smart and Bob is white then Bob is quiet."
    },
    {
        "id": 16914,
        "statement": "is(X, big) :- is(X, smart), is(X, rough).",
        "description": "Smart, rough people are big."
    },
    {
        "id": 16915,
        "statement": "is(X, rough) :- is(X, quiet), is(X, white).",
        "description": "Quiet, white people are rough."
    },
    {
        "id": 16916,
        "statement": "is(harry, quiet) :- is(harry, smart).",
        "description": "If Harry is smart then Harry is quiet."
    },
    {
        "id": 16917,
        "statement": "is(charlie, smart) :- is(charlie, quiet).",
        "description": "If Charlie is quiet then Charlie is smart."
    },
    {
        "id": 16918,
        "statement": "is(X, smart) :- is(X, big), is(X, nice).",
        "description": "All big, nice people are smart."
    },
    {
        "id": 16919,
        "statement": "eats(bald_eagle, bear) :- eats(X, bald_eagle).",
        "description": "If something eats the bald eagle then the bald eagle eats the bear."
    },
    {
        "id": 16920,
        "statement": "eats(X, lion) :- is(X, blue), is(X, young).",
        "description": "If something is blue and young then it eats the lion."
    },
    {
        "id": 16921,
        "statement": "visits(X, cow) :- visits(X, lion), not is(X, big).",
        "description": "If something visits the lion and it is not big then it visits the cow."
    },
    {
        "id": 16922,
        "statement": "eats(bald_eagle, cow) :- eats(lion, cow), chases(lion, bald_eagle).",
        "description": "If the lion eats the cow and the lion chases the bald eagle then the bald eagle eats the cow."
    },
    {
        "id": 16923,
        "statement": "is(cow, blue) :- visits(bald_eagle, cow), not eats(bear, bald_eagle).",
        "description": "If the bald eagle visits the cow and the bear does not eat the bald eagle then the cow is blue."
    },
    {
        "id": 16924,
        "statement": "visits(lion, bear) :- is(X, blue), chases(X, lion).",
        "description": "If something is blue and it chases the lion then the lion visits the bear."
    },
    {
        "id": 16925,
        "statement": "visits(X, lion) :- eats(X, bear).",
        "description": "If something eats the bear then it visits the lion."
    },
    {
        "id": 16926,
        "statement": "is(X, green) :- eats(X, bear).",
        "description": "If something eats the bear then it is green."
    },
    {
        "id": 16927,
        "statement": "is(X, red) :- is(X, blue), is(X, kind).",
        "description": "Blue, kind things are red."
    },
    {
        "id": 16928,
        "statement": "is(X, kind) :- is(X, young), is(X, blue).",
        "description": "All young, blue things are kind."
    },
    {
        "id": 16929,
        "statement": "is(bob, young) :- is(bob, big), is(bob, kind).",
        "description": "If Bob is big and Bob is kind then Bob is young."
    },
    {
        "id": 16930,
        "statement": "is(X, quiet) :- is(X, young).",
        "description": "If something is young then it is quiet."
    },
    {
        "id": 16931,
        "statement": "likes(X, squirrel) :- likes(X, cow).",
        "description": "If someone likes the cow then they like the squirrel."
    },
    {
        "id": 16932,
        "statement": "chases(X, bear) :- is(X, blue).",
        "description": "If someone is blue then they chase the bear."
    },
    {
        "id": 16933,
        "statement": "likes(bald_eagle, bear) :- likes(X, bald_eagle).",
        "description": "If someone likes the bald eagle then the bald eagle likes the bear."
    },
    {
        "id": 16934,
        "statement": "is(cow, rough) :- needs(X, cow), chases(cow, squirrel).",
        "description": "If someone needs the cow and the cow chases the squirrel then the cow is rough."
    },
    {
        "id": 16935,
        "statement": "is(X, blue) :- likes(X, bald_eagle).",
        "description": "If someone likes the bald eagle then they are blue."
    },
    {
        "id": 16936,
        "statement": "likes(X, bald_eagle) :- is(X, round), is(X, rough).",
        "description": "If someone is round and rough then they like the bald eagle."
    },
    {
        "id": 16937,
        "statement": "chases(X, squirrel) :- needs(X, squirrel), is(squirrel, round).",
        "description": "If someone needs the squirrel and the squirrel is round then they chase the squirrel."
    },
    {
        "id": 16938,
        "statement": "needs(bear, cow) :- chases(X, bear).",
        "description": "If someone chases the bear then the bear needs the cow."
    },
    {
        "id": 16939,
        "statement": "likes(X, bald_eagle) :- is(X, blue), likes(X, squirrel).",
        "description": "If someone is blue and they like the squirrel then they like the bald eagle."
    },
    {
        "id": 16940,
        "statement": "is(X, quiet) :- is(X, smart), is(X, nice).",
        "description": "Smart, nice people are quiet."
    },
    {
        "id": 16941,
        "statement": "is(X, kind) :- is(X, quiet), is(X, nice).",
        "description": "All quiet, nice people are kind."
    },
    {
        "id": 16942,
        "statement": "is(X, big) :- is(X, smart), is(X, young).",
        "description": "Smart, young people are big."
    },
    {
        "id": 16943,
        "statement": "is(harry, young) :- is(harry, blue), is(harry, quiet).",
        "description": "If Harry is blue and Harry is quiet then Harry is young."
    },
    {
        "id": 16944,
        "statement": "is(fiona, kind) :- is(fiona, big).",
        "description": "If Fiona is big then Fiona is kind."
    },
    {
        "id": 16945,
        "statement": "is(X, green) :- chases(X, squirrel).",
        "description": "If something chases the squirrel then it is green."
    },
    {
        "id": 16946,
        "statement": "is(tiger, blue) :- sees(tiger, rabbit), chases(tiger, rabbit).",
        "description": "If the tiger sees the rabbit and the tiger chases the rabbit then the tiger is blue."
    },
    {
        "id": 16947,
        "statement": "chases(bear, rabbit) :- chases(X, bear).",
        "description": "If something chases the bear then the bear chases the rabbit."
    },
    {
        "id": 16948,
        "statement": "sees(X, tiger) :- is(X, green), not is(X, round).",
        "description": "If something is green and not round then it sees the tiger."
    },
    {
        "id": 16949,
        "statement": "chases(bear, tiger) :- eats(X, bear).",
        "description": "If something eats the bear then the bear chases the tiger."
    },
    {
        "id": 16950,
        "statement": "chases(tiger, squirrel) :- sees(bear, tiger).",
        "description": "If the bear sees the tiger then the tiger chases the squirrel."
    },
    {
        "id": 16951,
        "statement": "is(squirrel, blue) :- is(squirrel, round), not sees(squirrel, bear).",
        "description": "If the squirrel is round and the squirrel does not see the bear then the squirrel is blue."
    },
    {
        "id": 16952,
        "statement": "chases(X, bear) :- sees(X, bear), not is(X, round).",
        "description": "If something sees the bear and it is not round then it chases the bear."
    },
    {
        "id": 16953,
        "statement": "is(anne, kind) :- is(anne, cold), is(anne, big).",
        "description": "If Anne is cold and Anne is big then Anne is kind."
    },
    {
        "id": 16954,
        "statement": "is(X, big) :- is(X, green), is(X, furry).",
        "description": "All green, furry people are big."
    },
    {
        "id": 16955,
        "statement": "is(X, kind) :- is(X, furry), is(X, quiet).",
        "description": "If someone is furry and quiet then they are kind."
    },
    {
        "id": 16956,
        "statement": "is(erin, kind) :- is(erin, quiet).",
        "description": "If Erin is quiet then Erin is kind."
    },
    {
        "id": 16957,
        "statement": "is(X, quiet) :- is(X, big), is(X, young).",
        "description": "All big, young people are quiet."
    },
    {
        "id": 16958,
        "statement": "needs(bear, cat) :- is(X, rough), needs(X, bear).",
        "description": "If someone is rough and they need the bear then the bear needs the cat."
    },
    {
        "id": 16959,
        "statement": "visits(X, bald_eagle) :- is(X, rough), needs(X, cow).",
        "description": "If someone is rough and they need the cow then they visit the bald eagle."
    },
    {
        "id": 16960,
        "statement": "needs(X, bear) :- likes(X, bald_eagle).",
        "description": "If someone likes the bald eagle then they need the bear."
    },
    {
        "id": 16961,
        "statement": "is(cat, cold) :- needs(bear, cat).",
        "description": "If the bear needs the cat then the cat is cold."
    },
    {
        "id": 16962,
        "statement": "needs(X, bear) :- is(X, kind).",
        "description": "If someone is kind then they need the bear."
    },
    {
        "id": 16963,
        "statement": "needs(cat, cow) :- likes(bald_eagle, cat), likes(bald_eagle, bear).",
        "description": "If the bald eagle likes the cat and the bald eagle likes the bear then the cat needs the cow."
    },
    {
        "id": 16964,
        "statement": "is(X, rough) :- is(X, white), is(X, red).",
        "description": "If something is white and red then it is rough."
    },
    {
        "id": 16965,
        "statement": "is(X, rough) :- is(X, nice), is(X, round).",
        "description": "Nice, round things are rough."
    },
    {
        "id": 16966,
        "statement": "is(X, red) :- is(X, round), is(X, rough).",
        "description": "If something is round and rough then it is red."
    },
    {
        "id": 16967,
        "statement": "is(dave, nice) :- is(dave, rough), is(dave, smart).",
        "description": "If Dave is rough and Dave is smart then Dave is nice."
    },
    {
        "id": 16968,
        "statement": "is(X, young) :- visits(X, lion).",
        "description": "If something visits the lion then it is young."
    },
    {
        "id": 16969,
        "statement": "visits(dog, lion) :- needs(X, dog).",
        "description": "If something needs the dog then the dog visits the lion."
    },
    {
        "id": 16970,
        "statement": "chases(rabbit, bear) :- chases(dog, rabbit).",
        "description": "If the dog chases the rabbit then the rabbit chases the bear."
    },
    {
        "id": 16971,
        "statement": "is(X, young) :- needs(X, dog), chases(dog, bear).",
        "description": "If something needs the dog and the dog chases the bear then it is young."
    },
    {
        "id": 16972,
        "statement": "needs(rabbit, dog) :- needs(X, lion), needs(X, rabbit).",
        "description": "If something needs the lion and it needs the rabbit then the rabbit needs the dog."
    },
    {
        "id": 16973,
        "statement": "likes(X, tiger) :- is(X, rough), not sees(X, bear).",
        "description": "If someone is rough and they do not see the bear then they like the tiger."
    },
    {
        "id": 16974,
        "statement": "is(X, rough) :- is(X, big), needs(X, tiger).",
        "description": "If someone is big and they need the tiger then they are rough."
    },
    {
        "id": 16975,
        "statement": "sees(squirrel, tiger) :- is(squirrel, rough), is(squirrel, kind).",
        "description": "If the squirrel is rough and the squirrel is kind then the squirrel sees the tiger."
    },
    {
        "id": 16976,
        "statement": "is(X, kind) :- likes(X, tiger).",
        "description": "If someone likes the tiger then they are kind."
    },
    {
        "id": 16977,
        "statement": "sees(X, rabbit) :- sees(X, tiger).",
        "description": "If someone sees the tiger then they see the rabbit."
    },
    {
        "id": 16978,
        "statement": "likes(squirrel, tiger) :- likes(squirrel, bear).",
        "description": "If the squirrel likes the bear then the squirrel likes the tiger."
    },
    {
        "id": 16979,
        "statement": "likes(bear, rabbit) :- needs(X, bear), not sees(X, tiger).",
        "description": "If someone needs the bear and they do not see the tiger then the bear likes the rabbit."
    },
    {
        "id": 16980,
        "statement": "likes(bear, rabbit) :- not likes(rabbit, bear), not sees(bear, rabbit).",
        "description": "If the rabbit does not like the bear and the bear does not see the rabbit then the bear likes the rabbit."
    },
    {
        "id": 16981,
        "statement": "is(X, kind) :- is(X, furry), not is(X, smart).",
        "description": "If something is furry and not smart then it is kind."
    },
    {
        "id": 16982,
        "statement": "is(anne, furry) :- is(anne, quiet), is(anne, rough).",
        "description": "If Anne is quiet and Anne is rough then Anne is furry."
    },
    {
        "id": 16983,
        "statement": "chases(X, rabbit) :- chases(X, tiger).",
        "description": "If something chases the tiger then it chases the rabbit."
    },
    {
        "id": 16984,
        "statement": "visits(tiger, lion) :- needs(rabbit, tiger).",
        "description": "If the rabbit needs the tiger then the tiger visits the lion."
    },
    {
        "id": 16985,
        "statement": "needs(mouse, tiger) :- visits(X, tiger), visits(tiger, mouse).",
        "description": "If something visits the tiger and the tiger visits the mouse then the mouse needs the tiger."
    },
    {
        "id": 16986,
        "statement": "visits(X, mouse) :- is(X, rough), not visits(X, lion).",
        "description": "If something is rough and it does not visit the lion then it visits the mouse."
    },
    {
        "id": 16987,
        "statement": "needs(rabbit, lion) :- visits(tiger, rabbit).",
        "description": "If the tiger visits the rabbit then the rabbit needs the lion."
    },
    {
        "id": 16988,
        "statement": "needs(rabbit, lion) :- needs(X, tiger), chases(X, rabbit).",
        "description": "If something needs the tiger and it chases the rabbit then the rabbit needs the lion."
    },
    {
        "id": 16989,
        "statement": "visits(X, rabbit) :- is(X, rough).",
        "description": "If something is rough then it visits the rabbit."
    },
    {
        "id": 16990,
        "statement": "is(X, rough) :- needs(X, rabbit), is(rabbit, cold).",
        "description": "If something needs the rabbit and the rabbit is cold then it is rough."
    },
    {
        "id": 16991,
        "statement": "is(X, cold) :- needs(X, lion).",
        "description": "If something needs the lion then it is cold."
    },
    {
        "id": 16992,
        "statement": "is(bald_eagle, young) :- chases(X, cow), likes(X, bald_eagle).",
        "description": "If someone chases the cow and they like the bald eagle then the bald eagle is young."
    },
    {
        "id": 16993,
        "statement": "chases(cow, lion) :- eats(X, cow).",
        "description": "If someone eats the cow then the cow chases the lion."
    },
    {
        "id": 16994,
        "statement": "is(lion, rough) :- eats(lion, bald_eagle), likes(lion, mouse).",
        "description": "If the lion eats the bald eagle and the lion likes the mouse then the lion is rough."
    },
    {
        "id": 16995,
        "statement": "eats(X, bald_eagle) :- chases(X, lion), not likes(X, bald_eagle).",
        "description": "If someone chases the lion and they do not like the bald eagle then they eat the bald eagle."
    },
    {
        "id": 16996,
        "statement": "eats(X, cow) :- eats(X, mouse).",
        "description": "If someone eats the mouse then they eat the cow."
    },
    {
        "id": 16997,
        "statement": "eats(mouse, bald_eagle) :- chases(X, mouse).",
        "description": "If someone chases the mouse then the mouse eats the bald eagle."
    },
    {
        "id": 16998,
        "statement": "likes(X, cow) :- eats(X, bald_eagle), not chases(bald_eagle, cow).",
        "description": "If someone eats the bald eagle and the bald eagle does not chase the cow then they like the cow."
    },
    {
        "id": 16999,
        "statement": "is(X, furry) :- is(X, kind), is(X, nice).",
        "description": "All kind, nice people are furry."
    },
    {
        "id": 17000,
        "statement": "is(X, cold) :- is(X, furry), is(X, nice).",
        "description": "If someone is furry and nice then they are cold."
    },
    {
        "id": 17001,
        "statement": "is(squirrel, kind) :- needs(X, squirrel), is(squirrel, green).",
        "description": "If someone needs the squirrel and the squirrel is green then the squirrel is kind."
    },
    {
        "id": 17002,
        "statement": "visits(bear, lion) :- needs(tiger, bear), chases(tiger, bear).",
        "description": "If the tiger needs the bear and the tiger chases the bear then the bear visits the lion."
    },
    {
        "id": 17003,
        "statement": "chases(X, bear) :- is(X, green), chases(X, squirrel).",
        "description": "If someone is green and they chase the squirrel then they chase the bear."
    },
    {
        "id": 17004,
        "statement": "chases(X, lion) :- is(X, round), chases(X, bear).",
        "description": "If someone is round and they chase the bear then they chase the lion."
    },
    {
        "id": 17005,
        "statement": "needs(X, lion) :- is(X, round), is(X, green).",
        "description": "If someone is round and green then they need the lion."
    },
    {
        "id": 17006,
        "statement": "chases(X, lion) :- visits(X, bear).",
        "description": "If someone visits the bear then they chase the lion."
    },
    {
        "id": 17007,
        "statement": "visits(X, bear) :- is(X, big), visits(X, lion).",
        "description": "If someone is big and they visit the lion then they visit the bear."
    },
    {
        "id": 17008,
        "statement": "is(X, quiet) :- is(X, red), is(X, blue).",
        "description": "If someone is red and blue then they are quiet."
    },
    {
        "id": 17009,
        "statement": "is(X, round) :- is(X, blue), is(X, red).",
        "description": "Blue, red people are round."
    },
    {
        "id": 17010,
        "statement": "is(X, red) :- is(X, furry), is(X, quiet).",
        "description": "All furry, quiet people are red."
    },
    {
        "id": 17011,
        "statement": "is(X, white) :- is(X, green), is(X, blue).",
        "description": "All green, blue things are white."
    },
    {
        "id": 17012,
        "statement": "is(X, kind) :- is(X, round), is(X, white).",
        "description": "All round, white things are kind."
    },
    {
        "id": 17013,
        "statement": "is(X, nice) :- is(X, smart), not is(X, cold).",
        "description": "If something is smart and not cold then it is nice."
    },
    {
        "id": 17014,
        "statement": "is(X, smart) :- is(X, cold), is(X, white).",
        "description": "If something is cold and white then it is smart."
    },
    {
        "id": 17015,
        "statement": "is(X, smart) :- is(X, nice), is(X, kind).",
        "description": "If something is nice and kind then it is smart."
    },
    {
        "id": 17016,
        "statement": "is(X, quiet) :- is(X, green), is(X, kind).",
        "description": "If something is green and kind then it is quiet."
    },
    {
        "id": 17017,
        "statement": "is(dave, nice) :- is(dave, red).",
        "description": "If Dave is red then Dave is nice."
    },
    {
        "id": 17018,
        "statement": "eats(bald_eagle, lion) :- likes(lion, bald_eagle).",
        "description": "If the lion likes the bald eagle then the bald eagle eats the lion."
    },
    {
        "id": 17019,
        "statement": "eats(X, lion) :- eats(X, cow).",
        "description": "If someone eats the cow then they eat the lion."
    },
    {
        "id": 17020,
        "statement": "eats(rabbit, cow) :- sees(rabbit, cow).",
        "description": "If the rabbit sees the cow then the rabbit eats the cow."
    },
    {
        "id": 17021,
        "statement": "is(X, big) :- eats(X, bald_eagle).",
        "description": "If someone eats the bald eagle then they are big."
    },
    {
        "id": 17022,
        "statement": "is(X, blue) :- sees(X, cow), likes(cow, bald_eagle).",
        "description": "If someone sees the cow and the cow likes the bald eagle then they are blue."
    },
    {
        "id": 17023,
        "statement": "eats(lion, rabbit) :- sees(X, lion).",
        "description": "If someone sees the lion then the lion eats the rabbit."
    },
    {
        "id": 17024,
        "statement": "eats(X, rabbit) :- is(X, big).",
        "description": "If someone is big then they eat the rabbit."
    },
    {
        "id": 17025,
        "statement": "sees(X, cow) :- is(X, green), eats(X, rabbit).",
        "description": "If someone is green and they eat the rabbit then they see the cow."
    },
    {
        "id": 17026,
        "statement": "is(rabbit, young) :- sees(cow, rabbit), not eats(rabbit, cow).",
        "description": "If the cow sees the rabbit and the rabbit does not eat the cow then the rabbit is young."
    },
    {
        "id": 17027,
        "statement": "is(rabbit, big) :- visits(cat, rabbit).",
        "description": "If the cat visits the rabbit then the rabbit is big."
    },
    {
        "id": 17028,
        "statement": "visits(squirrel, rabbit) :- likes(X, cat), likes(X, squirrel).",
        "description": "If someone likes the cat and they like the squirrel then the squirrel visits the rabbit."
    },
    {
        "id": 17029,
        "statement": "visits(X, squirrel) :- visits(X, rabbit).",
        "description": "If someone visits the rabbit then they visit the squirrel."
    },
    {
        "id": 17030,
        "statement": "is(lion, big) :- visits(X, rabbit), chases(rabbit, lion).",
        "description": "If someone visits the rabbit and the rabbit chases the lion then the lion is big."
    },
    {
        "id": 17031,
        "statement": "likes(X, cat) :- visits(X, squirrel), not is(squirrel, cold).",
        "description": "If someone visits the squirrel and the squirrel is not cold then they like the cat."
    },
    {
        "id": 17032,
        "statement": "visits(X, rabbit) :- is(X, cold).",
        "description": "If someone is cold then they visit the rabbit."
    },
    {
        "id": 17033,
        "statement": "visits(squirrel, lion) :- is(X, nice), not visits(X, squirrel).",
        "description": "If someone is nice and they do not visit the squirrel then the squirrel visits the lion."
    },
    {
        "id": 17034,
        "statement": "is(X, kind) :- chases(X, cow).",
        "description": "If something chases the cow then it is kind."
    },
    {
        "id": 17035,
        "statement": "is(dog, green) :- chases(dog, cow), not likes(dog, cow).",
        "description": "If the dog chases the cow and the dog does not like the cow then the dog is green."
    },
    {
        "id": 17036,
        "statement": "chases(X, mouse) :- needs(X, dog), is(dog, green).",
        "description": "If something needs the dog and the dog is green then it chases the mouse."
    },
    {
        "id": 17037,
        "statement": "chases(X, mouse) :- is(X, green), is(X, cold).",
        "description": "If something is green and cold then it chases the mouse."
    },
    {
        "id": 17038,
        "statement": "needs(X, dog) :- is(X, kind), is(X, cold).",
        "description": "If something is kind and cold then it needs the dog."
    },
    {
        "id": 17039,
        "statement": "likes(cow, mouse) :- is(cow, red).",
        "description": "If the cow is red then the cow likes the mouse."
    },
    {
        "id": 17040,
        "statement": "needs(dog, cow) :- chases(X, dog).",
        "description": "If something chases the dog then the dog needs the cow."
    },
    {
        "id": 17041,
        "statement": "chases(cow, mouse) :- needs(X, dog), not likes(X, cow).",
        "description": "If something needs the dog and it does not like the cow then the cow chases the mouse."
    },
    {
        "id": 17042,
        "statement": "is(X, white) :- is(X, young), is(X, round).",
        "description": "Young, round things are white."
    },
    {
        "id": 17043,
        "statement": "is(X, smart) :- is(X, round), is(X, nice).",
        "description": "Round, nice things are smart."
    },
    {
        "id": 17044,
        "statement": "is(gary, green) :- is(gary, kind).",
        "description": "If Gary is kind then Gary is green."
    },
    {
        "id": 17045,
        "statement": "likes(mouse, tiger) :- needs(X, mouse).",
        "description": "If something needs the mouse then the mouse likes the tiger."
    },
    {
        "id": 17046,
        "statement": "eats(mouse, rabbit) :- likes(mouse, tiger).",
        "description": "If the mouse likes the tiger then the mouse eats the rabbit."
    },
    {
        "id": 17047,
        "statement": "eats(X, tiger) :- is(X, kind).",
        "description": "If something is kind then it eats the tiger."
    },
    {
        "id": 17048,
        "statement": "needs(X, tiger) :- is(X, rough), is(X, nice).",
        "description": "If something is rough and nice then it needs the tiger."
    },
    {
        "id": 17049,
        "statement": "eats(rabbit, dog) :- eats(X, rabbit), not is(X, kind).",
        "description": "If something eats the rabbit and it is not kind then the rabbit eats the dog."
    },
    {
        "id": 17050,
        "statement": "sees(X, bear) :- eats(X, bear).",
        "description": "If someone eats the bear then they see the bear."
    },
    {
        "id": 17051,
        "statement": "is(X, round) :- is(X, kind), sees(X, bear).",
        "description": "If someone is kind and they see the bear then they are round."
    },
    {
        "id": 17052,
        "statement": "eats(X, squirrel) :- sees(X, bear).",
        "description": "If someone sees the bear then they eat the squirrel."
    },
    {
        "id": 17053,
        "statement": "is(X, rough) :- is(X, quiet), is(X, round).",
        "description": "If someone is quiet and round then they are rough."
    },
    {
        "id": 17054,
        "statement": "is(fiona, cold) :- is(fiona, rough).",
        "description": "If Fiona is rough then Fiona is cold."
    },
    {
        "id": 17055,
        "statement": "is(X, red) :- is(X, rough), is(X, young).",
        "description": "All rough, young people are red."
    },
    {
        "id": 17056,
        "statement": "likes(X, tiger) :- visits(X, cat).",
        "description": "If something visits the cat then it likes the tiger."
    },
    {
        "id": 17057,
        "statement": "visits(cat, cow) :- likes(tiger, cat), eats(cat, squirrel).",
        "description": "If the tiger likes the cat and the cat eats the squirrel then the cat visits the cow."
    },
    {
        "id": 17058,
        "statement": "is(X, round) :- likes(X, squirrel), is(X, young).",
        "description": "If something likes the squirrel and it is young then it is round."
    },
    {
        "id": 17059,
        "statement": "is(cow, round) :- is(X, young), eats(X, cow).",
        "description": "If something is young and it eats the cow then the cow is round."
    },
    {
        "id": 17060,
        "statement": "likes(X, cow) :- visits(X, cat).",
        "description": "If something visits the cat then it likes the cow."
    },
    {
        "id": 17061,
        "statement": "visits(tiger, squirrel) :- likes(X, tiger).",
        "description": "If something likes the tiger then the tiger visits the squirrel."
    },
    {
        "id": 17062,
        "statement": "visits(cat, tiger) :- not likes(cat, cow), not is(cat, red).",
        "description": "If the cat does not like the cow and the cat is not red then the cat visits the tiger."
    },
    {
        "id": 17063,
        "statement": "is(cat, cold) :- visits(squirrel, cat).",
        "description": "If the squirrel visits the cat then the cat is cold."
    },
    {
        "id": 17064,
        "statement": "visits(squirrel, cat) :- needs(X, cat), likes(X, squirrel).",
        "description": "If someone needs the cat and they like the squirrel then the squirrel visits the cat."
    },
    {
        "id": 17065,
        "statement": "is(mouse, rough) :- is(X, rough), visits(X, mouse).",
        "description": "If someone is rough and they visit the mouse then the mouse is rough."
    },
    {
        "id": 17066,
        "statement": "visits(X, mouse) :- needs(X, cow).",
        "description": "If someone needs the cow then they visit the mouse."
    },
    {
        "id": 17067,
        "statement": "visits(squirrel, mouse) :- likes(X, squirrel), is(squirrel, kind).",
        "description": "If someone likes the squirrel and the squirrel is kind then the squirrel visits the mouse."
    },
    {
        "id": 17068,
        "statement": "eats(dog, cow) :- visits(X, dog), needs(dog, bald_eagle).",
        "description": "If something visits the dog and the dog needs the bald eagle then the dog eats the cow."
    },
    {
        "id": 17069,
        "statement": "eats(cow, rabbit) :- is(cow, rough).",
        "description": "If the cow is rough then the cow eats the rabbit."
    },
    {
        "id": 17070,
        "statement": "is(rabbit, round) :- visits(X, rabbit).",
        "description": "If something visits the rabbit then the rabbit is round."
    },
    {
        "id": 17071,
        "statement": "visits(X, bald_eagle) :- visits(X, cow), not is(cow, rough).",
        "description": "If something visits the cow and the cow is not rough then it visits the bald eagle."
    },
    {
        "id": 17072,
        "statement": "needs(X, rabbit) :- is(X, round).",
        "description": "If something is round then it needs the rabbit."
    },
    {
        "id": 17073,
        "statement": "visits(X, rabbit) :- is(X, nice), not eats(X, cow).",
        "description": "If something is nice and it does not eat the cow then it visits the rabbit."
    },
    {
        "id": 17074,
        "statement": "visits(rabbit, cow) :- eats(X, bald_eagle), needs(X, rabbit).",
        "description": "If something eats the bald eagle and it needs the rabbit then the rabbit visits the cow."
    },
    {
        "id": 17075,
        "statement": "likes(bald_eagle, lion) :- likes(X, bald_eagle), eats(bald_eagle, dog).",
        "description": "If someone likes the bald eagle and the bald eagle eats the dog then the bald eagle likes the lion."
    },
    {
        "id": 17076,
        "statement": "eats(X, dog) :- likes(X, dog), sees(dog, lion).",
        "description": "If someone likes the dog and the dog sees the lion then they eat the dog."
    },
    {
        "id": 17077,
        "statement": "likes(dog, cow) :- likes(dog, bald_eagle).",
        "description": "If the dog likes the bald eagle then the dog likes the cow."
    },
    {
        "id": 17078,
        "statement": "likes(X, cow) :- eats(X, cow), likes(X, dog).",
        "description": "If someone eats the cow and they like the dog then they like the cow."
    },
    {
        "id": 17079,
        "statement": "is(X, young) :- likes(X, dog), eats(dog, bald_eagle).",
        "description": "If someone likes the dog and the dog eats the bald eagle then they are young."
    },
    {
        "id": 17080,
        "statement": "eats(X, bald_eagle) :- is(X, round).",
        "description": "If someone is round then they eat the bald eagle."
    },
    {
        "id": 17081,
        "statement": "eats(X, dog) :- sees(X, cow), likes(cow, dog).",
        "description": "If someone sees the cow and the cow likes the dog then they eat the dog."
    },
    {
        "id": 17082,
        "statement": "is(dog, round) :- likes(dog, cow).",
        "description": "If the dog likes the cow then the dog is round."
    },
    {
        "id": 17083,
        "statement": "is(bald_eagle, cold) :- eats(X, bald_eagle), is(X, green).",
        "description": "If someone eats the bald eagle and they are green then the bald eagle is cold."
    },
    {
        "id": 17084,
        "statement": "is(lion, green) :- likes(X, bald_eagle), likes(X, lion).",
        "description": "If someone likes the bald eagle and they like the lion then the lion is green."
    },
    {
        "id": 17085,
        "statement": "likes(X, rabbit) :- needs(X, lion).",
        "description": "If someone needs the lion then they like the rabbit."
    },
    {
        "id": 17086,
        "statement": "eats(bald_eagle, rabbit) :- likes(X, bald_eagle), eats(bald_eagle, lion).",
        "description": "If someone likes the bald eagle and the bald eagle eats the lion then the bald eagle eats the rabbit."
    },
    {
        "id": 17087,
        "statement": "eats(bald_eagle, cow) :- likes(X, bald_eagle).",
        "description": "If someone likes the bald eagle then the bald eagle eats the cow."
    },
    {
        "id": 17088,
        "statement": "likes(bald_eagle, cow) :- needs(lion, bald_eagle).",
        "description": "If the lion needs the bald eagle then the bald eagle likes the cow."
    },
    {
        "id": 17089,
        "statement": "is(X, rough) :- eats(X, bear), sees(X, dog).",
        "description": "If something eats the bear and it sees the dog then it is rough."
    },
    {
        "id": 17090,
        "statement": "sees(X, mouse) :- eats(X, mouse).",
        "description": "If something eats the mouse then it sees the mouse."
    },
    {
        "id": 17091,
        "statement": "is(mouse, blue) :- sees(dog, mouse).",
        "description": "If the dog sees the mouse then the mouse is blue."
    },
    {
        "id": 17092,
        "statement": "sees(bear, lion) :- eats(X, bear), is(X, kind).",
        "description": "If something eats the bear and it is kind then the bear sees the lion."
    },
    {
        "id": 17093,
        "statement": "is(X, young) :- sees(X, mouse).",
        "description": "If something sees the mouse then it is young."
    },
    {
        "id": 17094,
        "statement": "sees(X, bear) :- is(X, rough), eats(X, bear).",
        "description": "If something is rough and it eats the bear then it sees the bear."
    },
    {
        "id": 17095,
        "statement": "chases(X, rabbit) :- eats(X, rabbit), chases(rabbit, cow).",
        "description": "If something eats the rabbit and the rabbit chases the cow then it chases the rabbit."
    },
    {
        "id": 17096,
        "statement": "is(dog, green) :- chases(X, dog).",
        "description": "If something chases the dog then the dog is green."
    },
    {
        "id": 17097,
        "statement": "visits(X, rabbit) :- eats(X, dog).",
        "description": "If something eats the dog then it visits the rabbit."
    },
    {
        "id": 17098,
        "statement": "is(X, cold) :- eats(X, lion), is(lion, round).",
        "description": "If something eats the lion and the lion is round then it is cold."
    },
    {
        "id": 17099,
        "statement": "eats(X, dog) :- eats(X, rabbit).",
        "description": "If something eats the rabbit then it eats the dog."
    },
    {
        "id": 17100,
        "statement": "visits(dog, lion) :- visits(X, dog).",
        "description": "If something visits the dog then the dog visits the lion."
    },
    {
        "id": 17101,
        "statement": "is(X, rough) :- eats(X, cow), visits(X, lion).",
        "description": "If something eats the cow and it visits the lion then it is rough."
    },
    {
        "id": 17102,
        "statement": "is(dave, green) :- is(dave, cold), not is(dave, smart).",
        "description": "If Dave is cold and Dave is not smart then Dave is green."
    },
    {
        "id": 17103,
        "statement": "is(X, red) :- is(X, kind), is(X, furry).",
        "description": "All kind, furry people are red."
    },
    {
        "id": 17104,
        "statement": "is(dave, round) :- is(dave, smart).",
        "description": "If Dave is smart then Dave is round."
    },
    {
        "id": 17105,
        "statement": "visits(bear, lion) :- needs(X, tiger), chases(X, bear).",
        "description": "If something needs the tiger and it chases the bear then the bear visits the lion."
    },
    {
        "id": 17106,
        "statement": "needs(rabbit, bear) :- is(rabbit, big), is(rabbit, young).",
        "description": "If the rabbit is big and the rabbit is young then the rabbit needs the bear."
    },
    {
        "id": 17107,
        "statement": "chases(X, tiger) :- is(X, red).",
        "description": "If something is red then it chases the tiger."
    },
    {
        "id": 17108,
        "statement": "is(X, big) :- is(X, blue), visits(X, lion).",
        "description": "If something is blue and it visits the lion then it is big."
    },
    {
        "id": 17109,
        "statement": "is(bear, blue) :- visits(bear, lion).",
        "description": "If the bear visits the lion then the bear is blue."
    },
    {
        "id": 17110,
        "statement": "visits(lion, rabbit) :- needs(lion, rabbit), visits(rabbit, lion).",
        "description": "If the lion needs the rabbit and the rabbit visits the lion then the lion visits the rabbit."
    },
    {
        "id": 17111,
        "statement": "chases(X, lion) :- visits(X, bear).",
        "description": "If something visits the bear then it chases the lion."
    },
    {
        "id": 17112,
        "statement": "is(X, white) :- is(X, nice), not is(X, round).",
        "description": "If something is nice and not round then it is white."
    },
    {
        "id": 17113,
        "statement": "is(X, nice) :- is(X, quiet), is(X, green).",
        "description": "If something is quiet and green then it is nice."
    },
    {
        "id": 17114,
        "statement": "is(X, rough) :- is(X, nice), is(X, quiet).",
        "description": "Nice, quiet things are rough."
    },
    {
        "id": 17115,
        "statement": "is(erin, white) :- is(erin, round), not is(erin, green).",
        "description": "If Erin is round and Erin is not green then Erin is white."
    },
    {
        "id": 17116,
        "statement": "is(mouse, green) :- chases(X, mouse), likes(X, cat).",
        "description": "If someone chases the mouse and they like the cat then the mouse is green."
    },
    {
        "id": 17117,
        "statement": "eats(X, cat) :- eats(X, mouse), not eats(X, bear).",
        "description": "If someone eats the mouse and they do not eat the bear then they eat the cat."
    },
    {
        "id": 17118,
        "statement": "is(X, nice) :- eats(X, bear), chases(X, cat).",
        "description": "If someone eats the bear and they chase the cat then they are nice."
    },
    {
        "id": 17119,
        "statement": "is(X, rough) :- is(X, red), is(X, white).",
        "description": "If something is red and white then it is rough."
    },
    {
        "id": 17120,
        "statement": "is(gary, quiet) :- is(gary, kind).",
        "description": "If Gary is kind then Gary is quiet."
    },
    {
        "id": 17121,
        "statement": "is(X, big) :- is(X, quiet), not is(X, white).",
        "description": "If someone is quiet and not white then they are big."
    },
    {
        "id": 17122,
        "statement": "is(X, kind) :- is(X, blue), is(X, white).",
        "description": "If someone is blue and white then they are kind."
    },
    {
        "id": 17123,
        "statement": "is(X, blue) :- is(X, big), is(X, white).",
        "description": "All big, white people are blue."
    },
    {
        "id": 17124,
        "statement": "is(X, furry) :- is(X, red), is(X, quiet).",
        "description": "All red, quiet people are furry."
    },
    {
        "id": 17125,
        "statement": "is(X, red) :- is(X, round), is(X, rough).",
        "description": "Round, rough people are red."
    },
    {
        "id": 17126,
        "statement": "is(X, smart) :- is(X, big), is(X, quiet).",
        "description": "Big, quiet things are smart."
    },
    {
        "id": 17127,
        "statement": "is(X, smart) :- is(X, red), is(X, blue).",
        "description": "All red, blue things are smart."
    },
    {
        "id": 17128,
        "statement": "is(X, quiet) :- is(X, big), is(X, smart).",
        "description": "If something is big and smart then it is quiet."
    },
    {
        "id": 17129,
        "statement": "is(X, blue) :- is(X, rough), is(X, smart).",
        "description": "All rough, smart things are blue."
    },
    {
        "id": 17130,
        "statement": "sees(rabbit, cow) :- chases(X, rabbit).",
        "description": "If something chases the rabbit then the rabbit sees the cow."
    },
    {
        "id": 17131,
        "statement": "sees(cow, rabbit) :- needs(X, squirrel), needs(X, cow).",
        "description": "If something needs the squirrel and it needs the cow then the cow sees the rabbit."
    },
    {
        "id": 17132,
        "statement": "is(rabbit, round) :- is(cow, red), needs(cow, rabbit).",
        "description": "If the cow is red and the cow needs the rabbit then the rabbit is round."
    },
    {
        "id": 17133,
        "statement": "sees(squirrel, cow) :- sees(X, squirrel), sees(X, cow).",
        "description": "If something sees the squirrel and it sees the cow then the squirrel sees the cow."
    },
    {
        "id": 17134,
        "statement": "is(dog, round) :- needs(X, squirrel), sees(squirrel, dog).",
        "description": "If something needs the squirrel and the squirrel sees the dog then the dog is round."
    },
    {
        "id": 17135,
        "statement": "sees(X, dog) :- sees(X, cow).",
        "description": "If something sees the cow then it sees the dog."
    },
    {
        "id": 17136,
        "statement": "is(X, round) :- is(X, blue), is(X, rough).",
        "description": "Blue, rough people are round."
    },
    {
        "id": 17137,
        "statement": "is(anne, cold) :- is(anne, smart).",
        "description": "If Anne is smart then Anne is cold."
    },
    {
        "id": 17138,
        "statement": "is(anne, blue) :- is(anne, green), is(anne, smart).",
        "description": "If Anne is green and Anne is smart then Anne is blue."
    },
    {
        "id": 17139,
        "statement": "is(fiona, cold) :- is(fiona, rough), is(fiona, smart).",
        "description": "If Fiona is rough and Fiona is smart then Fiona is cold."
    },
    {
        "id": 17140,
        "statement": "is(X, rough) :- is(X, kind), is(X, green).",
        "description": "All kind, green people are rough."
    },
    {
        "id": 17141,
        "statement": "is(X, cold) :- is(X, blue), is(X, smart).",
        "description": "All blue, smart people are cold."
    },
    {
        "id": 17142,
        "statement": "is(dave, quiet) :- is(dave, blue).",
        "description": "If Dave is blue then Dave is quiet."
    },
    {
        "id": 17143,
        "statement": "is(charlie, cold) :- is(charlie, quiet), is(charlie, young).",
        "description": "If Charlie is quiet and Charlie is young then Charlie is cold."
    },
    {
        "id": 17144,
        "statement": "is(X, young) :- is(X, rough), is(X, cold).",
        "description": "Rough, cold people are young."
    },
    {
        "id": 17145,
        "statement": "likes(X, bear) :- likes(X, rabbit).",
        "description": "If something likes the rabbit then it likes the bear."
    },
    {
        "id": 17146,
        "statement": "is(X, red) :- is(X, nice), likes(X, bear).",
        "description": "If something is nice and it likes the bear then it is red."
    },
    {
        "id": 17147,
        "statement": "is(rabbit, blue) :- sees(bear, rabbit).",
        "description": "If the bear sees the rabbit then the rabbit is blue."
    },
    {
        "id": 17148,
        "statement": "likes(squirrel, rabbit) :- eats(X, squirrel).",
        "description": "If something eats the squirrel then the squirrel likes the rabbit."
    },
    {
        "id": 17149,
        "statement": "eats(tiger, squirrel) :- eats(X, tiger), sees(tiger, bear).",
        "description": "If something eats the tiger and the tiger sees the bear then the tiger eats the squirrel."
    },
    {
        "id": 17150,
        "statement": "eats(bear, tiger) :- eats(X, bear), sees(bear, squirrel).",
        "description": "If something eats the bear and the bear sees the squirrel then the bear eats the tiger."
    },
    {
        "id": 17151,
        "statement": "eats(tiger, rabbit) :- likes(X, tiger).",
        "description": "If something likes the tiger then the tiger eats the rabbit."
    },
    {
        "id": 17152,
        "statement": "is(X, kind) :- is(X, big), is(X, red).",
        "description": "All big, red people are kind."
    },
    {
        "id": 17153,
        "statement": "sees(rabbit, squirrel) :- likes(X, rabbit), is(X, red).",
        "description": "If someone likes the rabbit and they are red then the rabbit sees the squirrel."
    },
    {
        "id": 17154,
        "statement": "likes(X, squirrel) :- sees(X, squirrel).",
        "description": "If someone sees the squirrel then they like the squirrel."
    },
    {
        "id": 17155,
        "statement": "likes(X, squirrel) :- needs(X, lion).",
        "description": "If someone needs the lion then they like the squirrel."
    },
    {
        "id": 17156,
        "statement": "needs(squirrel, lion) :- likes(X, squirrel), likes(X, rabbit).",
        "description": "If someone likes the squirrel and they like the rabbit then the squirrel needs the lion."
    },
    {
        "id": 17157,
        "statement": "sees(X, rabbit) :- likes(X, squirrel).",
        "description": "If someone likes the squirrel then they see the rabbit."
    },
    {
        "id": 17158,
        "statement": "sees(X, squirrel) :- likes(X, rabbit), not is(rabbit, kind).",
        "description": "If someone likes the rabbit and the rabbit is not kind then they see the squirrel."
    },
    {
        "id": 17159,
        "statement": "likes(X, cat) :- needs(X, rabbit), needs(X, cat).",
        "description": "If someone needs the rabbit and they need the cat then they like the cat."
    },
    {
        "id": 17160,
        "statement": "is(X, quiet) :- is(X, round), is(X, blue).",
        "description": "Round, blue people are quiet."
    },
    {
        "id": 17161,
        "statement": "is(X, big) :- is(X, round), is(X, kind).",
        "description": "Round, kind people are big."
    },
    {
        "id": 17162,
        "statement": "is(X, kind) :- is(X, blue), is(X, quiet).",
        "description": "Blue, quiet people are kind."
    },
    {
        "id": 17163,
        "statement": "is(gary, round) :- is(gary, rough), is(gary, big).",
        "description": "If Gary is rough and Gary is big then Gary is round."
    },
    {
        "id": 17164,
        "statement": "is(X, big) :- is(X, round), is(X, blue).",
        "description": "If something is round and blue then it is big."
    },
    {
        "id": 17165,
        "statement": "is(harry, big) :- is(harry, blue), is(harry, rough).",
        "description": "If Harry is blue and Harry is rough then Harry is big."
    },
    {
        "id": 17166,
        "statement": "is(X, red) :- is(X, kind), is(X, blue).",
        "description": "Kind, blue things are red."
    },
    {
        "id": 17167,
        "statement": "is(erin, kind) :- is(erin, round), is(erin, rough).",
        "description": "If Erin is round and Erin is rough then Erin is kind."
    },
    {
        "id": 17168,
        "statement": "is(X, rough) :- is(X, blue), is(X, big).",
        "description": "All blue, big things are rough."
    },
    {
        "id": 17169,
        "statement": "is(cat, red) :- visits(cat, dog).",
        "description": "If the cat visits the dog then the cat is red."
    },
    {
        "id": 17170,
        "statement": "likes(squirrel, dog) :- visits(X, squirrel).",
        "description": "If something visits the squirrel then the squirrel likes the dog."
    },
    {
        "id": 17171,
        "statement": "is(tiger, blue) :- visits(tiger, squirrel), likes(tiger, squirrel).",
        "description": "If the tiger visits the squirrel and the tiger likes the squirrel then the tiger is blue."
    },
    {
        "id": 17172,
        "statement": "is(tiger, blue) :- needs(X, tiger), needs(X, dog).",
        "description": "If something needs the tiger and it needs the dog then the tiger is blue."
    },
    {
        "id": 17173,
        "statement": "needs(dog, tiger) :- is(X, blue), needs(X, dog).",
        "description": "If something is blue and it needs the dog then the dog needs the tiger."
    },
    {
        "id": 17174,
        "statement": "is(X, round) :- needs(X, dog).",
        "description": "If something needs the dog then it is round."
    },
    {
        "id": 17175,
        "statement": "is(mouse, big) :- visits(X, mouse).",
        "description": "If something visits the mouse then the mouse is big."
    },
    {
        "id": 17176,
        "statement": "is(dog, round) :- needs(X, dog).",
        "description": "If something needs the dog then the dog is round."
    },
    {
        "id": 17177,
        "statement": "is(X, rough) :- visits(X, tiger).",
        "description": "If something visits the tiger then it is rough."
    },
    {
        "id": 17178,
        "statement": "likes(X, tiger) :- is(X, big), is(X, rough).",
        "description": "If something is big and rough then it likes the tiger."
    },
    {
        "id": 17179,
        "statement": "is(fiona, smart) :- is(fiona, round).",
        "description": "If Fiona is round then Fiona is smart."
    },
    {
        "id": 17180,
        "statement": "is(X, kind) :- is(X, green), is(X, cold).",
        "description": "All green, cold people are kind."
    },
    {
        "id": 17181,
        "statement": "is(X, quiet) :- is(X, young), is(X, green).",
        "description": "All young, green people are quiet."
    },
    {
        "id": 17182,
        "statement": "is(X, smart) :- is(X, kind), is(X, round).",
        "description": "If someone is kind and round then they are smart."
    },
    {
        "id": 17183,
        "statement": "is(X, rough) :- is(X, furry), is(X, red).",
        "description": "If something is furry and red then it is rough."
    },
    {
        "id": 17184,
        "statement": "is(fiona, white) :- not is(fiona, rough).",
        "description": "If Fiona is not rough then Fiona is white."
    },
    {
        "id": 17185,
        "statement": "is(fiona, white) :- is(fiona, rough), is(fiona, big).",
        "description": "If Fiona is rough and Fiona is big then Fiona is white."
    },
    {
        "id": 17186,
        "statement": "needs(rabbit, bald_eagle) :- needs(X, rabbit), likes(rabbit, dog).",
        "description": "If something needs the rabbit and the rabbit likes the dog then the rabbit needs the bald eagle."
    },
    {
        "id": 17187,
        "statement": "chases(dog, cow) :- chases(X, dog).",
        "description": "If something chases the dog then the dog chases the cow."
    },
    {
        "id": 17188,
        "statement": "chases(X, dog) :- is(X, blue), is(X, young).",
        "description": "If something is blue and young then it chases the dog."
    },
    {
        "id": 17189,
        "statement": "likes(cow, bald_eagle) :- chases(X, cow), chases(X, dog).",
        "description": "If something chases the cow and it chases the dog then the cow likes the bald eagle."
    },
    {
        "id": 17190,
        "statement": "is(X, blue) :- likes(X, bald_eagle).",
        "description": "If something likes the bald eagle then it is blue."
    },
    {
        "id": 17191,
        "statement": "is(X, big) :- is(X, green), is(X, cold).",
        "description": "Green, cold things are big."
    },
    {
        "id": 17192,
        "statement": "is(gary, nice) :- is(gary, red), is(gary, green).",
        "description": "If Gary is red and Gary is green then Gary is nice."
    },
    {
        "id": 17193,
        "statement": "is(X, green) :- is(X, nice), is(X, rough).",
        "description": "Nice, rough things are green."
    },
    {
        "id": 17194,
        "statement": "is(X, furry) :- is(X, cold), is(X, white).",
        "description": "Cold, white things are furry."
    },
    {
        "id": 17195,
        "statement": "chases(bald_eagle, rabbit) :- likes(X, rabbit), chases(rabbit, bald_eagle).",
        "description": "If someone likes the rabbit and the rabbit chases the bald eagle then the bald eagle chases the rabbit."
    },
    {
        "id": 17196,
        "statement": "chases(dog, rabbit) :- likes(X, bald_eagle), needs(bald_eagle, dog).",
        "description": "If someone likes the bald eagle and the bald eagle needs the dog then the dog chases the rabbit."
    },
    {
        "id": 17197,
        "statement": "chases(X, rabbit) :- needs(X, rabbit).",
        "description": "If someone needs the rabbit then they chase the rabbit."
    },
    {
        "id": 17198,
        "statement": "likes(cat, rabbit) :- chases(X, cat), is(X, young).",
        "description": "If someone chases the cat and they are young then the cat likes the rabbit."
    },
    {
        "id": 17199,
        "statement": "likes(rabbit, dog) :- needs(X, rabbit), likes(X, dog).",
        "description": "If someone needs the rabbit and they like the dog then the rabbit likes the dog."
    },
    {
        "id": 17200,
        "statement": "needs(bald_eagle, rabbit) :- likes(bald_eagle, cat).",
        "description": "If the bald eagle likes the cat then the bald eagle needs the rabbit."
    },
    {
        "id": 17201,
        "statement": "needs(X, cat) :- likes(X, rabbit).",
        "description": "If someone likes the rabbit then they need the cat."
    },
    {
        "id": 17202,
        "statement": "needs(X, dog) :- likes(X, bald_eagle), likes(bald_eagle, dog).",
        "description": "If someone likes the bald eagle and the bald eagle likes the dog then they need the dog."
    },
    {
        "id": 17203,
        "statement": "eats(X, lion) :- chases(X, squirrel).",
        "description": "If something chases the squirrel then it eats the lion."
    },
    {
        "id": 17204,
        "statement": "is(squirrel, rough) :- chases(X, squirrel), sees(squirrel, cow).",
        "description": "If something chases the squirrel and the squirrel sees the cow then the squirrel is rough."
    },
    {
        "id": 17205,
        "statement": "sees(X, squirrel) :- eats(X, bald_eagle).",
        "description": "If something eats the bald eagle then it sees the squirrel."
    },
    {
        "id": 17206,
        "statement": "chases(X, bald_eagle) :- chases(X, cow).",
        "description": "If something chases the cow then it chases the bald eagle."
    },
    {
        "id": 17207,
        "statement": "eats(bald_eagle, lion) :- eats(X, bald_eagle).",
        "description": "If something eats the bald eagle then the bald eagle eats the lion."
    },
    {
        "id": 17208,
        "statement": "eats(lion, squirrel) :- is(cow, cold), eats(cow, lion).",
        "description": "If the cow is cold and the cow eats the lion then the lion eats the squirrel."
    },
    {
        "id": 17209,
        "statement": "eats(lion, bald_eagle) :- sees(X, lion).",
        "description": "If something sees the lion then the lion eats the bald eagle."
    },
    {
        "id": 17210,
        "statement": "sees(X, lion) :- sees(X, squirrel).",
        "description": "If something sees the squirrel then it sees the lion."
    },
    {
        "id": 17211,
        "statement": "sees(dog, mouse) :- chases(X, dog), sees(X, bear).",
        "description": "If someone chases the dog and they see the bear then the dog sees the mouse."
    },
    {
        "id": 17212,
        "statement": "chases(X, mouse) :- sees(X, mouse).",
        "description": "If someone sees the mouse then they chase the mouse."
    },
    {
        "id": 17213,
        "statement": "is(X, nice) :- is(X, round), visits(X, mouse).",
        "description": "If someone is round and they visit the mouse then they are nice."
    },
    {
        "id": 17214,
        "statement": "sees(mouse, bear) :- visits(X, squirrel), chases(squirrel, mouse).",
        "description": "If someone visits the squirrel and the squirrel chases the mouse then the mouse sees the bear."
    },
    {
        "id": 17215,
        "statement": "visits(squirrel, mouse) :- chases(X, squirrel), is(squirrel, blue).",
        "description": "If someone chases the squirrel and the squirrel is blue then the squirrel visits the mouse."
    },
    {
        "id": 17216,
        "statement": "chases(X, squirrel) :- chases(X, bear).",
        "description": "If someone chases the bear then they chase the squirrel."
    },
    {
        "id": 17217,
        "statement": "sees(squirrel, mouse) :- visits(X, squirrel).",
        "description": "If someone visits the squirrel then the squirrel sees the mouse."
    },
    {
        "id": 17218,
        "statement": "chases(bear, mouse) :- sees(bear, squirrel).",
        "description": "If the bear sees the squirrel then the bear chases the mouse."
    },
    {
        "id": 17219,
        "statement": "is(X, blue) :- is(X, green), is(X, cold).",
        "description": "All green, cold things are blue."
    },
    {
        "id": 17220,
        "statement": "is(X, blue) :- eats(X, dog), eats(X, cow).",
        "description": "If something eats the dog and it eats the cow then it is blue."
    },
    {
        "id": 17221,
        "statement": "visits(X, dog) :- visits(X, lion).",
        "description": "If something visits the lion then it visits the dog."
    },
    {
        "id": 17222,
        "statement": "visits(X, dog) :- visits(X, lion), eats(X, lion).",
        "description": "If something visits the lion and it eats the lion then it visits the dog."
    },
    {
        "id": 17223,
        "statement": "eats(cat, lion) :- visits(X, dog), eats(dog, cat).",
        "description": "If something visits the dog and the dog eats the cat then the cat eats the lion."
    },
    {
        "id": 17224,
        "statement": "is(cat, cold) :- is(X, blue), not chases(X, cat).",
        "description": "If something is blue and it does not chase the cat then the cat is cold."
    },
    {
        "id": 17225,
        "statement": "is(dog, green) :- is(X, cold), eats(X, dog).",
        "description": "If something is cold and it eats the dog then the dog is green."
    },
    {
        "id": 17226,
        "statement": "is(X, smart) :- is(X, big), is(X, quiet).",
        "description": "All big, quiet people are smart."
    },
    {
        "id": 17227,
        "statement": "is(X, blue) :- is(X, big), is(X, kind).",
        "description": "If someone is big and kind then they are blue."
    },
    {
        "id": 17228,
        "statement": "is(X, green) :- is(X, smart), is(X, blue).",
        "description": "Smart, blue people are green."
    },
    {
        "id": 17229,
        "statement": "is(X, green) :- is(X, rough), is(X, smart).",
        "description": "If someone is rough and smart then they are green."
    },
    {
        "id": 17230,
        "statement": "needs(X, cow) :- needs(X, tiger).",
        "description": "If someone needs the tiger then they need the cow."
    },
    {
        "id": 17231,
        "statement": "is(tiger, round) :- visits(X, tiger).",
        "description": "If someone visits the tiger then the tiger is round."
    },
    {
        "id": 17232,
        "statement": "is(dog, cold) :- needs(dog, mouse), is(dog, nice).",
        "description": "If the dog needs the mouse and the dog is nice then the dog is cold."
    },
    {
        "id": 17233,
        "statement": "is(mouse, kind) :- needs(X, mouse).",
        "description": "If someone needs the mouse then the mouse is kind."
    },
    {
        "id": 17234,
        "statement": "needs(cow, tiger) :- visits(cow, dog).",
        "description": "If the cow visits the dog then the cow needs the tiger."
    },
    {
        "id": 17235,
        "statement": "visits(X, tiger) :- needs(X, cow).",
        "description": "If someone needs the cow then they visit the tiger."
    },
    {
        "id": 17236,
        "statement": "needs(mouse, tiger) :- needs(X, mouse).",
        "description": "If someone needs the mouse then the mouse needs the tiger."
    },
    {
        "id": 17237,
        "statement": "needs(cat, lion) :- needs(X, cat).",
        "description": "If something needs the cat then the cat needs the lion."
    },
    {
        "id": 17238,
        "statement": "needs(X, cat) :- needs(X, dog).",
        "description": "If something needs the dog then it needs the cat."
    },
    {
        "id": 17239,
        "statement": "needs(lion, dog) :- needs(X, tiger), sees(X, lion).",
        "description": "If something needs the tiger and it sees the lion then the lion needs the dog."
    },
    {
        "id": 17240,
        "statement": "needs(X, lion) :- needs(X, tiger), not is(X, round).",
        "description": "If something needs the tiger and it is not round then it needs the lion."
    },
    {
        "id": 17241,
        "statement": "needs(X, tiger) :- needs(X, cat).",
        "description": "If something needs the cat then it needs the tiger."
    },
    {
        "id": 17242,
        "statement": "is(cat, cold) :- eats(X, cat), sees(X, cat).",
        "description": "If something eats the cat and it sees the cat then the cat is cold."
    },
    {
        "id": 17243,
        "statement": "is(X, green) :- needs(X, cat), not needs(cat, bear).",
        "description": "If something needs the cat and the cat does not need the bear then it is green."
    },
    {
        "id": 17244,
        "statement": "chases(X, dog) :- chases(X, tiger), needs(X, dog).",
        "description": "If something chases the tiger and it needs the dog then it chases the dog."
    },
    {
        "id": 17245,
        "statement": "needs(tiger, bear) :- is(X, big), visits(X, tiger).",
        "description": "If something is big and it visits the tiger then the tiger needs the bear."
    },
    {
        "id": 17246,
        "statement": "visits(X, dog) :- is(X, nice).",
        "description": "If something is nice then it visits the dog."
    },
    {
        "id": 17247,
        "statement": "chases(tiger, bear) :- visits(X, dog), visits(dog, tiger).",
        "description": "If something visits the dog and the dog visits the tiger then the tiger chases the bear."
    },
    {
        "id": 17248,
        "statement": "is(cat, big) :- eats(mouse, tiger), eats(mouse, cat).",
        "description": "If the mouse eats the tiger and the mouse eats the cat then the cat is big."
    },
    {
        "id": 17249,
        "statement": "is(X, nice) :- eats(X, mouse).",
        "description": "If something eats the mouse then it is nice."
    },
    {
        "id": 17250,
        "statement": "eats(X, dog) :- sees(X, tiger).",
        "description": "If something sees the tiger then it eats the dog."
    },
    {
        "id": 17251,
        "statement": "eats(X, mouse) :- is(X, cold), is(X, round).",
        "description": "If something is cold and round then it eats the mouse."
    },
    {
        "id": 17252,
        "statement": "eats(dog, mouse) :- is(X, round), sees(X, dog).",
        "description": "If something is round and it sees the dog then the dog eats the mouse."
    },
    {
        "id": 17253,
        "statement": "sees(mouse, dog) :- is(tiger, blue), sees(tiger, mouse).",
        "description": "If the tiger is blue and the tiger sees the mouse then the mouse sees the dog."
    },
    {
        "id": 17254,
        "statement": "sees(X, dog) :- is(X, cold), is(X, nice).",
        "description": "If something is cold and nice then it sees the dog."
    },
    {
        "id": 17255,
        "statement": "is(X, big) :- is(X, smart), is(X, nice).",
        "description": "All smart, nice things are big."
    },
    {
        "id": 17256,
        "statement": "is(X, round) :- is(X, blue), not is(X, young).",
        "description": "If something is blue and not young then it is round."
    },
    {
        "id": 17257,
        "statement": "is(X, blue) :- is(X, nice), is(X, big).",
        "description": "If something is nice and big then it is blue."
    },
    {
        "id": 17258,
        "statement": "is(X, quiet) :- is(X, big), not is(X, round).",
        "description": "If something is big and not round then it is quiet."
    },
    {
        "id": 17259,
        "statement": "likes(tiger, bald_eagle) :- sees(dog, tiger), visits(tiger, dog).",
        "description": "If the dog sees the tiger and the tiger visits the dog then the tiger likes the bald eagle."
    },
    {
        "id": 17260,
        "statement": "sees(X, lion) :- visits(X, lion), visits(X, dog).",
        "description": "If something visits the lion and it visits the dog then it sees the lion."
    },
    {
        "id": 17261,
        "statement": "is(lion, rough) :- likes(X, dog), not likes(X, lion).",
        "description": "If something likes the dog and it does not like the lion then the lion is rough."
    },
    {
        "id": 17262,
        "statement": "is(tiger, nice) :- sees(X, tiger), visits(X, bald_eagle).",
        "description": "If something sees the tiger and it visits the bald eagle then the tiger is nice."
    },
    {
        "id": 17263,
        "statement": "is(dog, cold) :- not sees(dog, lion).",
        "description": "If the dog does not see the lion then the dog is cold."
    },
    {
        "id": 17264,
        "statement": "is(X, blue) :- is(X, smart), is(X, green).",
        "description": "Smart, green things are blue."
    },
    {
        "id": 17265,
        "statement": "is(X, quiet) :- is(X, green), is(X, big).",
        "description": "If something is green and big then it is quiet."
    },
    {
        "id": 17266,
        "statement": "is(X, young) :- is(X, green), is(X, kind).",
        "description": "Green, kind things are young."
    },
    {
        "id": 17267,
        "statement": "visits(X, bald_eagle) :- likes(X, bald_eagle), likes(bald_eagle, cow).",
        "description": "If something likes the bald eagle and the bald eagle likes the cow then it visits the bald eagle."
    },
    {
        "id": 17268,
        "statement": "visits(X, cow) :- likes(X, bald_eagle), is(bald_eagle, young).",
        "description": "If something likes the bald eagle and the bald eagle is young then it visits the cow."
    },
    {
        "id": 17269,
        "statement": "sees(X, cow) :- is(X, kind), sees(X, dog).",
        "description": "If something is kind and it sees the dog then it sees the cow."
    },
    {
        "id": 17270,
        "statement": "is(X, kind) :- visits(X, cow).",
        "description": "If something visits the cow then it is kind."
    },
    {
        "id": 17271,
        "statement": "is(bald_eagle, young) :- sees(X, bald_eagle).",
        "description": "If something sees the bald eagle then the bald eagle is young."
    },
    {
        "id": 17272,
        "statement": "likes(X, rabbit) :- sees(X, cow).",
        "description": "If something sees the cow then it likes the rabbit."
    },
    {
        "id": 17273,
        "statement": "needs(cat, bald_eagle) :- eats(X, cat).",
        "description": "If something eats the cat then the cat needs the bald eagle."
    },
    {
        "id": 17274,
        "statement": "is(cow, round) :- needs(X, cow), is(cow, young).",
        "description": "If something needs the cow and the cow is young then the cow is round."
    },
    {
        "id": 17275,
        "statement": "is(cat, cold) :- needs(X, cat).",
        "description": "If something needs the cat then the cat is cold."
    },
    {
        "id": 17276,
        "statement": "eats(X, cow) :- is(X, round).",
        "description": "If something is round then it eats the cow."
    },
    {
        "id": 17277,
        "statement": "needs(X, cow) :- eats(X, cat).",
        "description": "If something eats the cat then it needs the cow."
    },
    {
        "id": 17278,
        "statement": "eats(X, cat) :- is(X, cold).",
        "description": "If something is cold then it eats the cat."
    },
    {
        "id": 17279,
        "statement": "eats(cat, bald_eagle) :- eats(bald_eagle, cat), is(bald_eagle, round).",
        "description": "If the bald eagle eats the cat and the bald eagle is round then the cat eats the bald eagle."
    },
    {
        "id": 17280,
        "statement": "visits(tiger, bear) :- eats(X, tiger).",
        "description": "If someone eats the tiger then the tiger visits the bear."
    },
    {
        "id": 17281,
        "statement": "is(X, red) :- eats(X, tiger), visits(X, squirrel).",
        "description": "If someone eats the tiger and they visit the squirrel then they are red."
    },
    {
        "id": 17282,
        "statement": "visits(X, rabbit) :- eats(X, squirrel).",
        "description": "If someone eats the squirrel then they visit the rabbit."
    },
    {
        "id": 17283,
        "statement": "likes(X, bear) :- likes(X, rabbit), is(rabbit, kind).",
        "description": "If someone likes the rabbit and the rabbit is kind then they like the bear."
    },
    {
        "id": 17284,
        "statement": "visits(bear, tiger) :- is(X, red), eats(X, bear).",
        "description": "If someone is red and they eat the bear then the bear visits the tiger."
    },
    {
        "id": 17285,
        "statement": "eats(squirrel, tiger) :- visits(X, squirrel), likes(X, tiger).",
        "description": "If someone visits the squirrel and they like the tiger then the squirrel eats the tiger."
    },
    {
        "id": 17286,
        "statement": "eats(X, squirrel) :- is(X, kind), is(X, blue).",
        "description": "If someone is kind and blue then they eat the squirrel."
    },
    {
        "id": 17287,
        "statement": "is(X, blue) :- visits(X, tiger).",
        "description": "If someone visits the tiger then they are blue."
    },
    {
        "id": 17288,
        "statement": "is(dave, white) :- is(dave, round).",
        "description": "If Dave is round then Dave is white."
    },
    {
        "id": 17289,
        "statement": "is(X, white) :- is(X, round), is(X, kind).",
        "description": "All round, kind people are white."
    },
    {
        "id": 17290,
        "statement": "is(X, round) :- is(X, blue), is(X, nice).",
        "description": "All blue, nice people are round."
    },
    {
        "id": 17291,
        "statement": "is(bob, blue) :- is(bob, white).",
        "description": "If Bob is white then Bob is blue."
    },
    {
        "id": 17292,
        "statement": "is(X, green) :- is(X, rough), is(X, blue).",
        "description": "Rough, blue people are green."
    },
    {
        "id": 17293,
        "statement": "is(X, cold) :- is(X, young), is(X, kind).",
        "description": "All young, kind things are cold."
    },
    {
        "id": 17294,
        "statement": "is(X, furry) :- is(X, round), is(X, rough).",
        "description": "All round, rough things are furry."
    },
    {
        "id": 17295,
        "statement": "is(X, young) :- is(X, rough), is(X, furry).",
        "description": "If something is rough and furry then it is young."
    },
    {
        "id": 17296,
        "statement": "sees(rabbit, bear) :- sees(X, rabbit).",
        "description": "If someone sees the rabbit then the rabbit sees the bear."
    },
    {
        "id": 17297,
        "statement": "sees(rabbit, bear) :- is(mouse, nice), visits(mouse, rabbit).",
        "description": "If the mouse is nice and the mouse visits the rabbit then the rabbit sees the bear."
    },
    {
        "id": 17298,
        "statement": "likes(mouse, bear) :- sees(bear, mouse).",
        "description": "If the bear sees the mouse then the mouse likes the bear."
    },
    {
        "id": 17299,
        "statement": "likes(X, bear) :- sees(X, bear).",
        "description": "If someone sees the bear then they like the bear."
    },
    {
        "id": 17300,
        "statement": "likes(X, mouse) :- is(X, red).",
        "description": "If someone is red then they like the mouse."
    },
    {
        "id": 17301,
        "statement": "sees(bear, rabbit) :- visits(rabbit, squirrel), likes(rabbit, bear).",
        "description": "If the rabbit visits the squirrel and the rabbit likes the bear then the bear sees the rabbit."
    },
    {
        "id": 17302,
        "statement": "sees(mouse, bear) :- sees(mouse, rabbit), is(mouse, round).",
        "description": "If the mouse sees the rabbit and the mouse is round then the mouse sees the bear."
    },
    {
        "id": 17303,
        "statement": "is(dave, green) :- is(dave, big).",
        "description": "If Dave is big then Dave is green."
    },
    {
        "id": 17304,
        "statement": "is(charlie, white) :- is(charlie, rough), is(charlie, smart).",
        "description": "If Charlie is rough and Charlie is smart then Charlie is white."
    },
    {
        "id": 17305,
        "statement": "is(charlie, smart) :- is(charlie, green), is(charlie, rough).",
        "description": "If Charlie is green and Charlie is rough then Charlie is smart."
    },
    {
        "id": 17306,
        "statement": "is(X, young) :- likes(X, cow).",
        "description": "If someone likes the cow then they are young."
    },
    {
        "id": 17307,
        "statement": "is(squirrel, nice) :- eats(bear, squirrel).",
        "description": "If the bear eats the squirrel then the squirrel is nice."
    },
    {
        "id": 17308,
        "statement": "eats(mouse, cow) :- is(mouse, young).",
        "description": "If the mouse is young then the mouse eats the cow."
    },
    {
        "id": 17309,
        "statement": "is(cow, big) :- visits(X, cow), not eats(cow, mouse).",
        "description": "If someone visits the cow and the cow does not eat the mouse then the cow is big."
    },
    {
        "id": 17310,
        "statement": "visits(X, bear) :- eats(X, mouse), eats(mouse, squirrel).",
        "description": "If someone eats the mouse and the mouse eats the squirrel then they visit the bear."
    },
    {
        "id": 17311,
        "statement": "visits(squirrel, mouse) :- visits(X, squirrel), not visits(X, bear).",
        "description": "If someone visits the squirrel and they do not visit the bear then the squirrel visits the mouse."
    },
    {
        "id": 17312,
        "statement": "visits(cow, mouse) :- likes(X, squirrel), visits(X, cow).",
        "description": "If someone likes the squirrel and they visit the cow then the cow visits the mouse."
    },
    {
        "id": 17313,
        "statement": "is(X, big) :- visits(X, mouse).",
        "description": "If someone visits the mouse then they are big."
    },
    {
        "id": 17314,
        "statement": "likes(X, squirrel) :- is(X, big).",
        "description": "If someone is big then they like the squirrel."
    },
    {
        "id": 17315,
        "statement": "likes(X, mouse) :- is(X, round), chases(X, mouse).",
        "description": "If something is round and it chases the mouse then it likes the mouse."
    },
    {
        "id": 17316,
        "statement": "is(squirrel, red) :- chases(squirrel, bear).",
        "description": "If the squirrel chases the bear then the squirrel is red."
    },
    {
        "id": 17317,
        "statement": "likes(bear, mouse) :- needs(X, lion), not needs(lion, bear).",
        "description": "If something needs the lion and the lion does not need the bear then the bear likes the mouse."
    },
    {
        "id": 17318,
        "statement": "chases(X, bear) :- chases(X, squirrel).",
        "description": "If something chases the squirrel then it chases the bear."
    },
    {
        "id": 17319,
        "statement": "is(bear, round) :- chases(X, bear).",
        "description": "If something chases the bear then the bear is round."
    },
    {
        "id": 17320,
        "statement": "likes(mouse, bear) :- is(mouse, cold).",
        "description": "If the mouse is cold then the mouse likes the bear."
    },
    {
        "id": 17321,
        "statement": "needs(X, squirrel) :- likes(X, mouse).",
        "description": "If something likes the mouse then it needs the squirrel."
    },
    {
        "id": 17322,
        "statement": "chases(X, mouse) :- is(X, round), not is(X, cold).",
        "description": "If something is round and not cold then it chases the mouse."
    },
    {
        "id": 17323,
        "statement": "needs(bear, lion) :- chases(X, bear).",
        "description": "If something chases the bear then the bear needs the lion."
    },
    {
        "id": 17324,
        "statement": "is(X, rough) :- is(X, blue), is(X, cold).",
        "description": "Blue, cold things are rough."
    },
    {
        "id": 17325,
        "statement": "is(X, round) :- is(X, big), is(X, rough).",
        "description": "If something is big and rough then it is round."
    },
    {
        "id": 17326,
        "statement": "is(bob, big) :- is(bob, rough), is(bob, round).",
        "description": "If Bob is rough and Bob is round then Bob is big."
    },
    {
        "id": 17327,
        "statement": "is(bob, rough) :- is(bob, round), is(bob, blue).",
        "description": "If Bob is round and Bob is blue then Bob is rough."
    },
    {
        "id": 17328,
        "statement": "is(X, big) :- is(X, cold), is(X, rough).",
        "description": "Cold, rough things are big."
    },
    {
        "id": 17329,
        "statement": "is(X, young) :- is(X, nice), is(X, blue).",
        "description": "Nice, blue things are young."
    },
    {
        "id": 17330,
        "statement": "is(erin, furry) :- is(erin, green), not is(erin, rough).",
        "description": "If Erin is green and Erin is not rough then Erin is furry."
    },
    {
        "id": 17331,
        "statement": "is(X, nice) :- is(X, quiet), is(X, big).",
        "description": "If someone is quiet and big then they are nice."
    },
    {
        "id": 17332,
        "statement": "is(X, green) :- is(X, big), is(X, quiet).",
        "description": "If someone is big and quiet then they are green."
    },
    {
        "id": 17333,
        "statement": "is(X, big) :- is(X, furry), is(X, smart).",
        "description": "Furry, smart people are big."
    },
    {
        "id": 17334,
        "statement": "is(X, green) :- is(X, blue), is(X, smart).",
        "description": "Blue, smart people are green."
    },
    {
        "id": 17335,
        "statement": "is(X, furry) :- is(X, nice), is(X, big).",
        "description": "Nice, big people are furry."
    },
    {
        "id": 17336,
        "statement": "is(X, big) :- is(X, round), is(X, green).",
        "description": "All round, green people are big."
    },
    {
        "id": 17337,
        "statement": "is(erin, big) :- is(erin, nice), is(erin, round).",
        "description": "If Erin is nice and Erin is round then Erin is big."
    },
    {
        "id": 17338,
        "statement": "is(X, green) :- is(X, round), is(X, furry).",
        "description": "All round, furry people are green."
    },
    {
        "id": 17339,
        "statement": "is(X, big) :- is(X, green), is(X, furry).",
        "description": "Green, furry people are big."
    },
    {
        "id": 17340,
        "statement": "is(X, green) :- is(X, rough), is(X, young).",
        "description": "Rough, young people are green."
    },
    {
        "id": 17341,
        "statement": "is(X, young) :- sees(X, bald_eagle), not chases(X, rabbit).",
        "description": "If someone sees the bald eagle and they do not chase the rabbit then they are young."
    },
    {
        "id": 17342,
        "statement": "sees(X, lion) :- likes(X, bald_eagle).",
        "description": "If someone likes the bald eagle then they see the lion."
    },
    {
        "id": 17343,
        "statement": "chases(X, squirrel) :- is(X, red), is(X, round).",
        "description": "If someone is red and round then they chase the squirrel."
    },
    {
        "id": 17344,
        "statement": "sees(rabbit, lion) :- is(X, nice), likes(X, rabbit).",
        "description": "If someone is nice and they like the rabbit then the rabbit sees the lion."
    },
    {
        "id": 17345,
        "statement": "likes(lion, bald_eagle) :- chases(X, lion).",
        "description": "If someone chases the lion then the lion likes the bald eagle."
    },
    {
        "id": 17346,
        "statement": "chases(lion, bald_eagle) :- sees(X, lion), likes(X, squirrel).",
        "description": "If someone sees the lion and they like the squirrel then the lion chases the bald eagle."
    },
    {
        "id": 17347,
        "statement": "chases(lion, bald_eagle) :- is(lion, round), not likes(lion, bald_eagle).",
        "description": "If the lion is round and the lion does not like the bald eagle then the lion chases the bald eagle."
    },
    {
        "id": 17348,
        "statement": "is(X, furry) :- is(X, quiet), is(X, red).",
        "description": "If something is quiet and red then it is furry."
    },
    {
        "id": 17349,
        "statement": "is(X, blue) :- is(X, nice), is(X, furry).",
        "description": "If something is nice and furry then it is blue."
    },
    {
        "id": 17350,
        "statement": "is(X, red) :- is(X, nice), is(X, blue).",
        "description": "If something is nice and blue then it is red."
    },
    {
        "id": 17351,
        "statement": "is(X, cold) :- is(X, rough), is(X, red).",
        "description": "If something is rough and red then it is cold."
    },
    {
        "id": 17352,
        "statement": "is(X, rough) :- is(X, blue), is(X, red).",
        "description": "All blue, red things are rough."
    },
    {
        "id": 17353,
        "statement": "is(harry, rough) :- is(harry, cold), is(harry, quiet).",
        "description": "If Harry is cold and Harry is quiet then Harry is rough."
    },
    {
        "id": 17354,
        "statement": "is(X, quiet) :- is(X, nice), is(X, blue).",
        "description": "If something is nice and blue then it is quiet."
    },
    {
        "id": 17355,
        "statement": "is(gary, green) :- is(gary, quiet).",
        "description": "If Gary is quiet then Gary is green."
    },
    {
        "id": 17356,
        "statement": "is(gary, quiet) :- is(gary, blue).",
        "description": "If Gary is blue then Gary is quiet."
    },
    {
        "id": 17357,
        "statement": "eats(bear, bald_eagle) :- eats(X, bear).",
        "description": "If something eats the bear then the bear eats the bald eagle."
    },
    {
        "id": 17358,
        "statement": "is(X, round) :- eats(X, bald_eagle).",
        "description": "If something eats the bald eagle then it is round."
    },
    {
        "id": 17359,
        "statement": "needs(X, bald_eagle) :- is(X, cold), is(X, blue).",
        "description": "If something is cold and blue then it needs the bald eagle."
    },
    {
        "id": 17360,
        "statement": "eats(X, bald_eagle) :- chases(X, bear), chases(bear, squirrel).",
        "description": "If something chases the bear and the bear chases the squirrel then it eats the bald eagle."
    },
    {
        "id": 17361,
        "statement": "chases(X, squirrel) :- needs(X, squirrel).",
        "description": "If something needs the squirrel then it chases the squirrel."
    },
    {
        "id": 17362,
        "statement": "eats(X, bear) :- is(X, big), not is(X, kind).",
        "description": "If something is big and not kind then it eats the bear."
    },
    {
        "id": 17363,
        "statement": "eats(X, bear) :- needs(X, bald_eagle), needs(X, squirrel).",
        "description": "If something needs the bald eagle and it needs the squirrel then it eats the bear."
    },
    {
        "id": 17364,
        "statement": "needs(X, squirrel) :- eats(X, bald_eagle).",
        "description": "If something eats the bald eagle then it needs the squirrel."
    },
    {
        "id": 17365,
        "statement": "needs(X, rabbit) :- needs(X, bald_eagle).",
        "description": "If something needs the bald eagle then it needs the rabbit."
    },
    {
        "id": 17366,
        "statement": "sees(bald_eagle, cow) :- is(bald_eagle, nice), is(bald_eagle, young).",
        "description": "If the bald eagle is nice and the bald eagle is young then the bald eagle sees the cow."
    },
    {
        "id": 17367,
        "statement": "sees(cow, rabbit) :- needs(rabbit, cow).",
        "description": "If the rabbit needs the cow then the cow sees the rabbit."
    },
    {
        "id": 17368,
        "statement": "needs(X, bald_eagle) :- eats(X, cow), is(cow, nice).",
        "description": "If something eats the cow and the cow is nice then it needs the bald eagle."
    },
    {
        "id": 17369,
        "statement": "is(X, nice) :- needs(X, rabbit).",
        "description": "If something needs the rabbit then it is nice."
    },
    {
        "id": 17370,
        "statement": "is(X, red) :- sees(X, rabbit).",
        "description": "If something sees the rabbit then it is red."
    },
    {
        "id": 17371,
        "statement": "eats(X, bald_eagle) :- needs(X, bald_eagle).",
        "description": "If something needs the bald eagle then it eats the bald eagle."
    },
    {
        "id": 17372,
        "statement": "is(dave, furry) :- is(dave, kind).",
        "description": "If Dave is kind then Dave is furry."
    },
    {
        "id": 17373,
        "statement": "is(X, red) :- is(X, cold), is(X, quiet).",
        "description": "All cold, quiet people are red."
    },
    {
        "id": 17374,
        "statement": "is(dave, kind) :- is(dave, red).",
        "description": "If Dave is red then Dave is kind."
    },
    {
        "id": 17375,
        "statement": "is(X, red) :- is(X, round), is(X, green).",
        "description": "Round, green things are red."
    },
    {
        "id": 17376,
        "statement": "is(harry, smart) :- is(harry, green), is(harry, red).",
        "description": "If Harry is green and Harry is red then Harry is smart."
    },
    {
        "id": 17377,
        "statement": "is(harry, quiet) :- is(harry, big), is(harry, green).",
        "description": "If Harry is big and Harry is green then Harry is quiet."
    },
    {
        "id": 17378,
        "statement": "is(dave, nice) :- is(dave, rough).",
        "description": "If Dave is rough then Dave is nice."
    },
    {
        "id": 17379,
        "statement": "is(gary, white) :- is(gary, young), is(gary, round).",
        "description": "If Gary is young and Gary is round then Gary is white."
    },
    {
        "id": 17380,
        "statement": "is(harry, smart) :- is(harry, white).",
        "description": "If Harry is white then Harry is smart."
    },
    {
        "id": 17381,
        "statement": "is(X, cold) :- is(X, white), not is(X, furry).",
        "description": "If something is white and not furry then it is cold."
    },
    {
        "id": 17382,
        "statement": "is(dave, round) :- is(dave, young).",
        "description": "If Dave is young then Dave is round."
    },
    {
        "id": 17383,
        "statement": "is(dave, white) :- is(dave, nice), is(dave, big).",
        "description": "If Dave is nice and Dave is big then Dave is white."
    },
    {
        "id": 17384,
        "statement": "is(X, nice) :- is(X, kind), is(X, round).",
        "description": "All kind, round things are nice."
    },
    {
        "id": 17385,
        "statement": "is(X, rough) :- is(X, young), is(X, nice).",
        "description": "If something is young and nice then it is rough."
    },
    {
        "id": 17386,
        "statement": "is(X, kind) :- is(X, round), is(X, big).",
        "description": "Round, big things are kind."
    },
    {
        "id": 17387,
        "statement": "is(X, big) :- is(X, young), is(X, rough).",
        "description": "If something is young and rough then it is big."
    },
    {
        "id": 17388,
        "statement": "is(X, blue) :- is(X, red), is(X, kind).",
        "description": "Red, kind things are blue."
    },
    {
        "id": 17389,
        "statement": "is(erin, young) :- is(erin, rough), is(erin, cold).",
        "description": "If Erin is rough and Erin is cold then Erin is young."
    },
    {
        "id": 17390,
        "statement": "is(gary, rough) :- is(gary, round).",
        "description": "If Gary is round then Gary is rough."
    },
    {
        "id": 17391,
        "statement": "is(X, kind) :- is(X, blue), is(X, round).",
        "description": "If something is blue and round then it is kind."
    },
    {
        "id": 17392,
        "statement": "is(X, rough) :- is(X, smart), is(X, furry).",
        "description": "Smart, furry things are rough."
    },
    {
        "id": 17393,
        "statement": "is(X, kind) :- is(X, furry), is(X, big).",
        "description": "Furry, big things are kind."
    },
    {
        "id": 17394,
        "statement": "is(X, rough) :- is(X, smart), is(X, big).",
        "description": "Smart, big things are rough."
    },
    {
        "id": 17395,
        "statement": "is(X, red) :- is(X, round), is(X, cold).",
        "description": "If something is round and cold then it is red."
    },
    {
        "id": 17396,
        "statement": "is(X, white) :- is(X, cold), is(X, rough).",
        "description": "Cold, rough things are white."
    },
    {
        "id": 17397,
        "statement": "is(bear, cold) :- chases(bear, lion).",
        "description": "If the bear chases the lion then the bear is cold."
    },
    {
        "id": 17398,
        "statement": "is(rabbit, big) :- is(X, cold), sees(X, rabbit).",
        "description": "If something is cold and it sees the rabbit then the rabbit is big."
    },
    {
        "id": 17399,
        "statement": "chases(bear, lion) :- is(X, red), sees(X, bear).",
        "description": "If something is red and it sees the bear then the bear chases the lion."
    },
    {
        "id": 17400,
        "statement": "sees(rabbit, lion) :- is(rabbit, big).",
        "description": "If the rabbit is big then the rabbit sees the lion."
    },
    {
        "id": 17401,
        "statement": "sees(cow, bear) :- chases(X, cow), chases(cow, rabbit).",
        "description": "If something chases the cow and the cow chases the rabbit then the cow sees the bear."
    },
    {
        "id": 17402,
        "statement": "is(X, white) :- is(X, green), is(X, cold).",
        "description": "If something is green and cold then it is white."
    },
    {
        "id": 17403,
        "statement": "is(X, round) :- is(X, cold), is(X, red).",
        "description": "If something is cold and red then it is round."
    },
    {
        "id": 17404,
        "statement": "is(X, round) :- is(X, white), not is(X, kind).",
        "description": "If something is white and not kind then it is round."
    },
    {
        "id": 17405,
        "statement": "is(X, rough) :- is(X, big), is(X, smart).",
        "description": "All big, smart things are rough."
    },
    {
        "id": 17406,
        "statement": "chases(X, tiger) :- chases(X, cow).",
        "description": "If someone chases the cow then they chase the tiger."
    },
    {
        "id": 17407,
        "statement": "chases(tiger, cow) :- not eats(tiger, bald_eagle).",
        "description": "If the tiger does not eat the bald eagle then the tiger chases the cow."
    },
    {
        "id": 17408,
        "statement": "visits(tiger, dog) :- chases(X, tiger), chases(X, dog).",
        "description": "If someone chases the tiger and they chase the dog then the tiger visits the dog."
    },
    {
        "id": 17409,
        "statement": "chases(X, dog) :- chases(X, tiger).",
        "description": "If someone chases the tiger then they chase the dog."
    },
    {
        "id": 17410,
        "statement": "chases(bald_eagle, tiger) :- eats(bald_eagle, tiger).",
        "description": "If the bald eagle eats the tiger then the bald eagle chases the tiger."
    },
    {
        "id": 17411,
        "statement": "chases(bald_eagle, dog) :- visits(X, bald_eagle), eats(X, bald_eagle).",
        "description": "If someone visits the bald eagle and they eat the bald eagle then the bald eagle chases the dog."
    },
    {
        "id": 17412,
        "statement": "visits(X, dog) :- chases(X, bald_eagle), not eats(X, tiger).",
        "description": "If someone chases the bald eagle and they do not eat the tiger then they visit the dog."
    },
    {
        "id": 17413,
        "statement": "is(X, smart) :- is(X, cold), is(X, rough).",
        "description": "Cold, rough people are smart."
    },
    {
        "id": 17414,
        "statement": "is(X, quiet) :- is(X, cold), is(X, smart).",
        "description": "If someone is cold and smart then they are quiet."
    },
    {
        "id": 17415,
        "statement": "is(X, quiet) :- is(X, round), is(X, nice).",
        "description": "If someone is round and nice then they are quiet."
    },
    {
        "id": 17416,
        "statement": "is(X, nice) :- is(X, round), is(X, quiet).",
        "description": "If someone is round and quiet then they are nice."
    },
    {
        "id": 17417,
        "statement": "chases(lion, cow) :- likes(X, lion), is(lion, round).",
        "description": "If something likes the lion and the lion is round then the lion chases the cow."
    },
    {
        "id": 17418,
        "statement": "visits(X, cow) :- chases(X, cow), is(cow, young).",
        "description": "If something chases the cow and the cow is young then it visits the cow."
    },
    {
        "id": 17419,
        "statement": "visits(cow, mouse) :- likes(lion, cow).",
        "description": "If the lion likes the cow then the cow visits the mouse."
    },
    {
        "id": 17420,
        "statement": "chases(X, cow) :- likes(X, lion).",
        "description": "If something likes the lion then it chases the cow."
    },
    {
        "id": 17421,
        "statement": "likes(X, mouse) :- is(X, round).",
        "description": "If something is round then it likes the mouse."
    },
    {
        "id": 17422,
        "statement": "is(X, round) :- visits(X, rabbit), is(rabbit, blue).",
        "description": "If something visits the rabbit and the rabbit is blue then it is round."
    },
    {
        "id": 17423,
        "statement": "is(bob, green) :- not is(bob, round).",
        "description": "If Bob is not round then Bob is green."
    },
    {
        "id": 17424,
        "statement": "is(X, nice) :- is(X, big), is(X, green).",
        "description": "Big, green things are nice."
    },
    {
        "id": 17425,
        "statement": "is(bob, cold) :- is(bob, big).",
        "description": "If Bob is big then Bob is cold."
    },
    {
        "id": 17426,
        "statement": "is(X, white) :- is(X, rough), is(X, round).",
        "description": "Rough, round things are white."
    },
    {
        "id": 17427,
        "statement": "is(X, blue) :- is(X, round), is(X, nice).",
        "description": "If something is round and nice then it is blue."
    },
    {
        "id": 17428,
        "statement": "is(X, smart) :- is(X, blue), is(X, nice).",
        "description": "Blue, nice things are smart."
    },
    {
        "id": 17429,
        "statement": "sees(X, tiger) :- is(X, cold), likes(X, bear).",
        "description": "If someone is cold and they like the bear then they see the tiger."
    },
    {
        "id": 17430,
        "statement": "likes(X, tiger) :- is(X, green), is(X, nice).",
        "description": "If someone is green and nice then they like the tiger."
    },
    {
        "id": 17431,
        "statement": "likes(bear, dog) :- sees(tiger, bear).",
        "description": "If the tiger sees the bear then the bear likes the dog."
    },
    {
        "id": 17432,
        "statement": "likes(bear, bald_eagle) :- sees(X, bear), is(X, green).",
        "description": "If someone sees the bear and they are green then the bear likes the bald eagle."
    },
    {
        "id": 17433,
        "statement": "likes(X, bear) :- sees(X, tiger).",
        "description": "If someone sees the tiger then they like the bear."
    },
    {
        "id": 17434,
        "statement": "is(X, cold) :- is(X, round), is(X, rough).",
        "description": "Round, rough people are cold."
    },
    {
        "id": 17435,
        "statement": "is(anne, red) :- is(anne, green), is(anne, young).",
        "description": "If Anne is green and Anne is young then Anne is red."
    },
    {
        "id": 17436,
        "statement": "is(erin, young) :- is(erin, green), is(erin, red).",
        "description": "If Erin is green and Erin is red then Erin is young."
    },
    {
        "id": 17437,
        "statement": "is(X, round) :- is(X, green), is(X, cold).",
        "description": "Green, cold people are round."
    },
    {
        "id": 17438,
        "statement": "is(harry, smart) :- is(harry, round), is(harry, green).",
        "description": "If Harry is round and Harry is green then Harry is smart."
    },
    {
        "id": 17439,
        "statement": "visits(cow, dog) :- sees(bear, cow).",
        "description": "If the bear sees the cow then the cow visits the dog."
    },
    {
        "id": 17440,
        "statement": "sees(X, dog) :- chases(X, cow).",
        "description": "If someone chases the cow then they see the dog."
    },
    {
        "id": 17441,
        "statement": "visits(dog, tiger) :- chases(X, dog), chases(dog, bear).",
        "description": "If someone chases the dog and the dog chases the bear then the dog visits the tiger."
    },
    {
        "id": 17442,
        "statement": "sees(cow, tiger) :- chases(X, cow), is(X, big).",
        "description": "If someone chases the cow and they are big then the cow sees the tiger."
    },
    {
        "id": 17443,
        "statement": "chases(X, bear) :- sees(X, dog), not visits(X, dog).",
        "description": "If someone sees the dog and they do not visit the dog then they chase the bear."
    },
    {
        "id": 17444,
        "statement": "chases(cow, bear) :- is(X, big), visits(X, cow).",
        "description": "If someone is big and they visit the cow then the cow chases the bear."
    },
    {
        "id": 17445,
        "statement": "is(bear, big) :- chases(X, bear), not sees(bear, cow).",
        "description": "If someone chases the bear and the bear does not see the cow then the bear is big."
    },
    {
        "id": 17446,
        "statement": "is(X, furry) :- is(X, big), is(X, quiet).",
        "description": "If someone is big and quiet then they are furry."
    },
    {
        "id": 17447,
        "statement": "is(X, round) :- is(X, quiet), is(X, furry).",
        "description": "Quiet, furry people are round."
    },
    {
        "id": 17448,
        "statement": "is(X, young) :- is(X, round), is(X, furry).",
        "description": "Round, furry people are young."
    },
    {
        "id": 17449,
        "statement": "is(charlie, kind) :- is(charlie, quiet), is(charlie, smart).",
        "description": "If Charlie is quiet and Charlie is smart then Charlie is kind."
    },
    {
        "id": 17450,
        "statement": "is(X, rough) :- is(X, nice), is(X, big).",
        "description": "All nice, big things are rough."
    },
    {
        "id": 17451,
        "statement": "is(X, rough) :- is(X, kind), is(X, quiet).",
        "description": "If something is kind and quiet then it is rough."
    },
    {
        "id": 17452,
        "statement": "eats(bear, squirrel) :- likes(X, bear).",
        "description": "If someone likes the bear then the bear eats the squirrel."
    },
    {
        "id": 17453,
        "statement": "eats(mouse, lion) :- visits(X, bear), eats(bear, mouse).",
        "description": "If someone visits the bear and the bear eats the mouse then the mouse eats the lion."
    },
    {
        "id": 17454,
        "statement": "eats(bear, lion) :- likes(X, bear).",
        "description": "If someone likes the bear then the bear eats the lion."
    },
    {
        "id": 17455,
        "statement": "visits(mouse, bear) :- visits(X, squirrel), likes(squirrel, mouse).",
        "description": "If someone visits the squirrel and the squirrel likes the mouse then the mouse visits the bear."
    },
    {
        "id": 17456,
        "statement": "likes(bear, squirrel) :- likes(bear, mouse).",
        "description": "If the bear likes the mouse then the bear likes the squirrel."
    },
    {
        "id": 17457,
        "statement": "visits(squirrel, mouse) :- likes(X, bear), visits(X, squirrel).",
        "description": "If someone likes the bear and they visit the squirrel then the squirrel visits the mouse."
    },
    {
        "id": 17458,
        "statement": "likes(squirrel, mouse) :- eats(bear, squirrel).",
        "description": "If the bear eats the squirrel then the squirrel likes the mouse."
    },
    {
        "id": 17459,
        "statement": "is(X, blue) :- is(X, kind), is(X, young).",
        "description": "If something is kind and young then it is blue."
    },
    {
        "id": 17460,
        "statement": "is(X, white) :- is(X, nice), is(X, kind).",
        "description": "All nice, kind things are white."
    },
    {
        "id": 17461,
        "statement": "is(X, white) :- is(X, nice), is(X, round).",
        "description": "Nice, round things are white."
    },
    {
        "id": 17462,
        "statement": "is(fiona, blue) :- is(fiona, nice), is(fiona, kind).",
        "description": "If Fiona is nice and Fiona is kind then Fiona is blue."
    },
    {
        "id": 17463,
        "statement": "is(X, red) :- likes(X, rabbit).",
        "description": "If something likes the rabbit then it is red."
    },
    {
        "id": 17464,
        "statement": "eats(lion, bear) :- sees(X, lion).",
        "description": "If something sees the lion then the lion eats the bear."
    },
    {
        "id": 17465,
        "statement": "is(X, blue) :- eats(X, rabbit), sees(X, rabbit).",
        "description": "If something eats the rabbit and it sees the rabbit then it is blue."
    },
    {
        "id": 17466,
        "statement": "sees(bald_eagle, lion) :- sees(X, bear), eats(bear, bald_eagle).",
        "description": "If something sees the bear and the bear eats the bald eagle then the bald eagle sees the lion."
    },
    {
        "id": 17467,
        "statement": "is(bear, blue) :- eats(X, bear), eats(X, bald_eagle).",
        "description": "If something eats the bear and it eats the bald eagle then the bear is blue."
    },
    {
        "id": 17468,
        "statement": "likes(bear, rabbit) :- is(X, red), eats(X, bear).",
        "description": "If something is red and it eats the bear then the bear likes the rabbit."
    },
    {
        "id": 17469,
        "statement": "visits(X, bald_eagle) :- sees(X, bald_eagle).",
        "description": "If something sees the bald eagle then it visits the bald eagle."
    },
    {
        "id": 17470,
        "statement": "is(cow, red) :- is(cow, green).",
        "description": "If the cow is green then the cow is red."
    },
    {
        "id": 17471,
        "statement": "visits(cow, lion) :- eats(bald_eagle, cow).",
        "description": "If the bald eagle eats the cow then the cow visits the lion."
    },
    {
        "id": 17472,
        "statement": "is(X, green) :- visits(X, lion), eats(lion, bear).",
        "description": "If something visits the lion and the lion eats the bear then it is green."
    },
    {
        "id": 17473,
        "statement": "eats(X, cow) :- is(X, cold).",
        "description": "If something is cold then it eats the cow."
    },
    {
        "id": 17474,
        "statement": "sees(lion, bald_eagle) :- sees(lion, cow).",
        "description": "If the lion sees the cow then the lion sees the bald eagle."
    },
    {
        "id": 17475,
        "statement": "sees(bald_eagle, lion) :- eats(X, bald_eagle).",
        "description": "If something eats the bald eagle then the bald eagle sees the lion."
    },
    {
        "id": 17476,
        "statement": "is(bear, kind) :- eats(X, bald_eagle), eats(bald_eagle, bear).",
        "description": "If something eats the bald eagle and the bald eagle eats the bear then the bear is kind."
    },
    {
        "id": 17477,
        "statement": "eats(X, lion) :- sees(X, cat).",
        "description": "If someone sees the cat then they eat the lion."
    },
    {
        "id": 17478,
        "statement": "sees(lion, rabbit) :- sees(cat, lion), eats(cat, rabbit).",
        "description": "If the cat sees the lion and the cat eats the rabbit then the lion sees the rabbit."
    },
    {
        "id": 17479,
        "statement": "is(lion, rough) :- visits(X, bald_eagle), visits(X, lion).",
        "description": "If someone visits the bald eagle and they visit the lion then the lion is rough."
    },
    {
        "id": 17480,
        "statement": "visits(X, lion) :- sees(X, cat).",
        "description": "If someone sees the cat then they visit the lion."
    },
    {
        "id": 17481,
        "statement": "eats(rabbit, lion) :- visits(X, rabbit).",
        "description": "If someone visits the rabbit then the rabbit eats the lion."
    },
    {
        "id": 17482,
        "statement": "is(charlie, rough) :- is(charlie, kind), is(charlie, round).",
        "description": "If Charlie is kind and Charlie is round then Charlie is rough."
    },
    {
        "id": 17483,
        "statement": "is(harry, quiet) :- is(harry, rough).",
        "description": "If Harry is rough then Harry is quiet."
    },
    {
        "id": 17484,
        "statement": "is(X, quiet) :- is(X, kind), is(X, round).",
        "description": "All kind, round things are quiet."
    },
    {
        "id": 17485,
        "statement": "is(harry, big) :- is(harry, round).",
        "description": "If Harry is round then Harry is big."
    },
    {
        "id": 17486,
        "statement": "is(X, blue) :- is(X, rough), is(X, round).",
        "description": "Rough, round people are blue."
    },
    {
        "id": 17487,
        "statement": "is(gary, rough) :- is(gary, green), is(gary, blue).",
        "description": "If Gary is green and Gary is blue then Gary is rough."
    },
    {
        "id": 17488,
        "statement": "is(X, blue) :- is(X, green), is(X, round).",
        "description": "If someone is green and round then they are blue."
    },
    {
        "id": 17489,
        "statement": "is(X, young) :- is(X, cold), is(X, green).",
        "description": "All cold, green people are young."
    },
    {
        "id": 17490,
        "statement": "is(X, blue) :- is(X, kind), is(X, green).",
        "description": "All kind, green people are blue."
    },
    {
        "id": 17491,
        "statement": "is(X, young) :- is(X, smart), is(X, round).",
        "description": "If something is smart and round then it is young."
    },
    {
        "id": 17492,
        "statement": "is(erin, rough) :- is(erin, green), is(erin, smart).",
        "description": "If Erin is green and Erin is smart then Erin is rough."
    },
    {
        "id": 17493,
        "statement": "is(X, round) :- is(X, furry), is(X, smart).",
        "description": "If something is furry and smart then it is round."
    },
    {
        "id": 17494,
        "statement": "is(gary, furry) :- is(gary, rough).",
        "description": "If Gary is rough then Gary is furry."
    },
    {
        "id": 17495,
        "statement": "is(X, blue) :- is(X, round), is(X, young).",
        "description": "All round, young things are blue."
    },
    {
        "id": 17496,
        "statement": "is(bob, red) :- not is(bob, kind).",
        "description": "If Bob is not kind then Bob is red."
    },
    {
        "id": 17497,
        "statement": "is(harry, blue) :- is(harry, furry), is(harry, big).",
        "description": "If Harry is furry and Harry is big then Harry is blue."
    },
    {
        "id": 17498,
        "statement": "eats(X, squirrel) :- sees(X, bald_eagle).",
        "description": "If someone sees the bald eagle then they eat the squirrel."
    },
    {
        "id": 17499,
        "statement": "is(squirrel, kind) :- sees(X, mouse), eats(X, squirrel).",
        "description": "If someone sees the mouse and they eat the squirrel then the squirrel is kind."
    },
    {
        "id": 17500,
        "statement": "eats(bald_eagle, mouse) :- eats(X, bald_eagle).",
        "description": "If someone eats the bald eagle then the bald eagle eats the mouse."
    },
    {
        "id": 17501,
        "statement": "is(bald_eagle, round) :- is(X, young), eats(X, bald_eagle).",
        "description": "If someone is young and they eat the bald eagle then the bald eagle is round."
    },
    {
        "id": 17502,
        "statement": "is(bald_eagle, kind) :- is(X, kind), needs(X, bald_eagle).",
        "description": "If someone is kind and they need the bald eagle then the bald eagle is kind."
    },
    {
        "id": 17503,
        "statement": "sees(X, mouse) :- eats(X, squirrel).",
        "description": "If someone eats the squirrel then they see the mouse."
    },
    {
        "id": 17504,
        "statement": "likes(X, dog) :- chases(X, cow), is(cow, nice).",
        "description": "If someone chases the cow and the cow is nice then they like the dog."
    },
    {
        "id": 17505,
        "statement": "is(cow, round) :- likes(X, dog), likes(dog, cow).",
        "description": "If someone likes the dog and the dog likes the cow then the cow is round."
    },
    {
        "id": 17506,
        "statement": "is(dog, round) :- likes(X, dog).",
        "description": "If someone likes the dog then the dog is round."
    },
    {
        "id": 17507,
        "statement": "chases(X, bear) :- is(X, round).",
        "description": "If someone is round then they chase the bear."
    },
    {
        "id": 17508,
        "statement": "chases(X, cow) :- is(X, round).",
        "description": "If someone is round then they chase the cow."
    },
    {
        "id": 17509,
        "statement": "is(X, cold) :- is(X, nice), visits(X, tiger).",
        "description": "If someone is nice and they visit the tiger then they are cold."
    },
    {
        "id": 17510,
        "statement": "eats(dog, lion) :- visits(X, dog), is(X, kind).",
        "description": "If someone visits the dog and they are kind then the dog eats the lion."
    },
    {
        "id": 17511,
        "statement": "eats(bald_eagle, lion) :- is(X, nice), visits(X, bald_eagle).",
        "description": "If someone is nice and they visit the bald eagle then the bald eagle eats the lion."
    },
    {
        "id": 17512,
        "statement": "is(lion, nice) :- eats(dog, lion).",
        "description": "If the dog eats the lion then the lion is nice."
    },
    {
        "id": 17513,
        "statement": "eats(dog, lion) :- needs(X, dog), needs(X, tiger).",
        "description": "If someone needs the dog and they need the tiger then the dog eats the lion."
    },
    {
        "id": 17514,
        "statement": "needs(X, tiger) :- visits(X, bald_eagle).",
        "description": "If someone visits the bald eagle then they need the tiger."
    },
    {
        "id": 17515,
        "statement": "needs(bald_eagle, dog) :- eats(bald_eagle, lion), is(bald_eagle, cold).",
        "description": "If the bald eagle eats the lion and the bald eagle is cold then the bald eagle needs the dog."
    },
    {
        "id": 17516,
        "statement": "eats(lion, dog) :- eats(X, dog), visits(dog, lion).",
        "description": "If someone eats the dog and the dog visits the lion then the lion eats the dog."
    },
    {
        "id": 17517,
        "statement": "is(gary, green) :- is(gary, quiet), is(gary, round).",
        "description": "If Gary is quiet and Gary is round then Gary is green."
    },
    {
        "id": 17518,
        "statement": "is(X, round) :- is(X, green), is(X, young).",
        "description": "Green, young people are round."
    },
    {
        "id": 17519,
        "statement": "is(X, young) :- is(X, green), is(X, kind).",
        "description": "All green, kind people are young."
    },
    {
        "id": 17520,
        "statement": "is(X, white) :- is(X, kind), is(X, young).",
        "description": "All kind, young people are white."
    },
    {
        "id": 17521,
        "statement": "is(X, quiet) :- is(X, white), is(X, green).",
        "description": "All white, green people are quiet."
    },
    {
        "id": 17522,
        "statement": "is(fiona, green) :- is(fiona, furry).",
        "description": "If Fiona is furry then Fiona is green."
    },
    {
        "id": 17523,
        "statement": "is(X, nice) :- is(X, white), is(X, cold).",
        "description": "If someone is white and cold then they are nice."
    },
    {
        "id": 17524,
        "statement": "is(X, nice) :- is(X, white), is(X, furry).",
        "description": "White, furry people are nice."
    },
    {
        "id": 17525,
        "statement": "is(X, young) :- is(X, blue), is(X, green).",
        "description": "If someone is blue and green then they are young."
    },
    {
        "id": 17526,
        "statement": "is(X, green) :- is(X, nice), is(X, blue).",
        "description": "If someone is nice and blue then they are green."
    },
    {
        "id": 17527,
        "statement": "is(X, red) :- is(X, white), is(X, big).",
        "description": "White, big things are red."
    },
    {
        "id": 17528,
        "statement": "is(X, blue) :- is(X, red), is(X, young).",
        "description": "All red, young things are blue."
    },
    {
        "id": 17529,
        "statement": "is(X, big) :- is(X, green), is(X, blue).",
        "description": "All green, blue things are big."
    },
    {
        "id": 17530,
        "statement": "eats(bald_eagle, squirrel) :- chases(dog, bald_eagle), chases(bald_eagle, squirrel).",
        "description": "If the dog chases the bald eagle and the bald eagle chases the squirrel then the bald eagle eats the squirrel."
    },
    {
        "id": 17531,
        "statement": "likes(X, tiger) :- is(X, big), is(X, green).",
        "description": "If someone is big and green then they like the tiger."
    },
    {
        "id": 17532,
        "statement": "likes(X, tiger) :- is(X, young), is(X, round).",
        "description": "If someone is young and round then they like the tiger."
    },
    {
        "id": 17533,
        "statement": "eats(tiger, squirrel) :- is(X, round), chases(X, tiger).",
        "description": "If someone is round and they chase the tiger then the tiger eats the squirrel."
    },
    {
        "id": 17534,
        "statement": "chases(X, dog) :- is(X, nice), eats(X, squirrel).",
        "description": "If someone is nice and they eat the squirrel then they chase the dog."
    },
    {
        "id": 17535,
        "statement": "eats(squirrel, tiger) :- eats(X, squirrel), is(squirrel, nice).",
        "description": "If someone eats the squirrel and the squirrel is nice then the squirrel eats the tiger."
    },
    {
        "id": 17536,
        "statement": "is(X, red) :- is(X, round), is(X, furry).",
        "description": "If someone is round and furry then they are red."
    },
    {
        "id": 17537,
        "statement": "is(X, white) :- is(X, furry), is(X, round).",
        "description": "Furry, round people are white."
    },
    {
        "id": 17538,
        "statement": "eats(X, rabbit) :- sees(X, cat).",
        "description": "If something sees the cat then it eats the rabbit."
    },
    {
        "id": 17539,
        "statement": "likes(mouse, rabbit) :- eats(mouse, rabbit).",
        "description": "If the mouse eats the rabbit then the mouse likes the rabbit."
    },
    {
        "id": 17540,
        "statement": "likes(X, rabbit) :- likes(X, cat).",
        "description": "If something likes the cat then it likes the rabbit."
    },
    {
        "id": 17541,
        "statement": "is(rabbit, round) :- likes(X, rabbit).",
        "description": "If something likes the rabbit then the rabbit is round."
    },
    {
        "id": 17542,
        "statement": "likes(X, tiger) :- is(X, blue), likes(X, mouse).",
        "description": "If someone is blue and they like the mouse then they like the tiger."
    },
    {
        "id": 17543,
        "statement": "chases(X, tiger) :- is(X, big), needs(X, dog).",
        "description": "If someone is big and they need the dog then they chase the tiger."
    },
    {
        "id": 17544,
        "statement": "needs(tiger, dog) :- is(X, red), needs(X, tiger).",
        "description": "If someone is red and they need the tiger then the tiger needs the dog."
    },
    {
        "id": 17545,
        "statement": "is(dog, blue) :- likes(X, tiger), not chases(X, dog).",
        "description": "If someone likes the tiger and they do not chase the dog then the dog is blue."
    },
    {
        "id": 17546,
        "statement": "is(tiger, green) :- eats(X, tiger).",
        "description": "If someone eats the tiger then the tiger is green."
    },
    {
        "id": 17547,
        "statement": "eats(tiger, dog) :- needs(X, dog), not sees(dog, tiger).",
        "description": "If someone needs the dog and the dog does not see the tiger then the tiger eats the dog."
    },
    {
        "id": 17548,
        "statement": "needs(X, dog) :- eats(X, cat), not is(X, young).",
        "description": "If someone eats the cat and they are not young then they need the dog."
    },
    {
        "id": 17549,
        "statement": "sees(cow, dog) :- eats(X, cow), not needs(X, tiger).",
        "description": "If someone eats the cow and they do not need the tiger then the cow sees the dog."
    },
    {
        "id": 17550,
        "statement": "eats(X, cat) :- is(X, rough).",
        "description": "If someone is rough then they eat the cat."
    },
    {
        "id": 17551,
        "statement": "is(dog, blue) :- eats(X, dog).",
        "description": "If someone eats the dog then the dog is blue."
    },
    {
        "id": 17552,
        "statement": "is(X, nice) :- is(X, young), is(X, big).",
        "description": "If something is young and big then it is nice."
    },
    {
        "id": 17553,
        "statement": "is(X, rough) :- visits(X, bald_eagle), likes(X, cow).",
        "description": "If something visits the bald eagle and it likes the cow then it is rough."
    },
    {
        "id": 17554,
        "statement": "eats(bald_eagle, cow) :- visits(X, bald_eagle).",
        "description": "If something visits the bald eagle then the bald eagle eats the cow."
    },
    {
        "id": 17555,
        "statement": "eats(cow, bald_eagle) :- visits(X, cow), is(X, rough).",
        "description": "If something visits the cow and it is rough then the cow eats the bald eagle."
    },
    {
        "id": 17556,
        "statement": "is(mouse, kind) :- likes(X, mouse).",
        "description": "If something likes the mouse then the mouse is kind."
    },
    {
        "id": 17557,
        "statement": "visits(bald_eagle, bear) :- eats(X, bald_eagle).",
        "description": "If something eats the bald eagle then the bald eagle visits the bear."
    },
    {
        "id": 17558,
        "statement": "is(X, round) :- visits(X, cow), eats(X, cow).",
        "description": "If something visits the cow and it eats the cow then it is round."
    },
    {
        "id": 17559,
        "statement": "likes(X, mouse) :- visits(X, bear).",
        "description": "If something visits the bear then it likes the mouse."
    },
    {
        "id": 17560,
        "statement": "eats(bear, cow) :- likes(mouse, bear).",
        "description": "If the mouse likes the bear then the bear eats the cow."
    },
    {
        "id": 17561,
        "statement": "needs(bald_eagle, rabbit) :- sees(bald_eagle, bear), sees(bald_eagle, dog).",
        "description": "If the bald eagle sees the bear and the bald eagle sees the dog then the bald eagle needs the rabbit."
    },
    {
        "id": 17562,
        "statement": "is(bald_eagle, rough) :- visits(X, bald_eagle).",
        "description": "If something visits the bald eagle then the bald eagle is rough."
    },
    {
        "id": 17563,
        "statement": "is(X, nice) :- is(X, kind), visits(X, dog).",
        "description": "If something is kind and it visits the dog then it is nice."
    },
    {
        "id": 17564,
        "statement": "sees(X, bear) :- is(X, young).",
        "description": "If something is young then it sees the bear."
    },
    {
        "id": 17565,
        "statement": "visits(bald_eagle, dog) :- visits(dog, bald_eagle).",
        "description": "If the dog visits the bald eagle then the bald eagle visits the dog."
    },
    {
        "id": 17566,
        "statement": "needs(X, dog) :- visits(X, dog), sees(X, dog).",
        "description": "If something visits the dog and it sees the dog then it needs the dog."
    },
    {
        "id": 17567,
        "statement": "is(bald_eagle, kind) :- visits(X, bald_eagle).",
        "description": "If something visits the bald eagle then the bald eagle is kind."
    },
    {
        "id": 17568,
        "statement": "visits(dog, bald_eagle) :- visits(X, dog).",
        "description": "If something visits the dog then the dog visits the bald eagle."
    },
    {
        "id": 17569,
        "statement": "is(cat, round) :- likes(X, cat), likes(cat, cow).",
        "description": "If something likes the cat and the cat likes the cow then the cat is round."
    },
    {
        "id": 17570,
        "statement": "needs(X, cow) :- is(X, round), is(X, green).",
        "description": "If something is round and green then it needs the cow."
    },
    {
        "id": 17571,
        "statement": "needs(X, mouse) :- eats(X, cow), is(X, green).",
        "description": "If something eats the cow and it is green then it needs the mouse."
    },
    {
        "id": 17572,
        "statement": "is(cat, nice) :- needs(X, squirrel), eats(X, cat).",
        "description": "If something needs the squirrel and it eats the cat then the cat is nice."
    },
    {
        "id": 17573,
        "statement": "needs(X, cat) :- likes(X, cat).",
        "description": "If something likes the cat then it needs the cat."
    },
    {
        "id": 17574,
        "statement": "is(mouse, green) :- needs(X, mouse).",
        "description": "If something needs the mouse then the mouse is green."
    },
    {
        "id": 17575,
        "statement": "needs(X, cat) :- needs(X, cow), eats(X, cat).",
        "description": "If something needs the cow and it eats the cat then it needs the cat."
    },
    {
        "id": 17576,
        "statement": "is(cat, big) :- is(X, green), sees(X, cat).",
        "description": "If something is green and it sees the cat then the cat is big."
    },
    {
        "id": 17577,
        "statement": "likes(X, dog) :- is(X, green).",
        "description": "If something is green then it likes the dog."
    },
    {
        "id": 17578,
        "statement": "is(X, kind) :- is(X, green), is(X, big).",
        "description": "Green, big things are kind."
    },
    {
        "id": 17579,
        "statement": "likes(cat, bald_eagle) :- likes(bald_eagle, cat).",
        "description": "If the bald eagle likes the cat then the cat likes the bald eagle."
    },
    {
        "id": 17580,
        "statement": "is(X, blue) :- is(X, furry), is(X, white).",
        "description": "All furry, white people are blue."
    },
    {
        "id": 17581,
        "statement": "is(erin, blue) :- is(erin, kind), is(erin, smart).",
        "description": "If Erin is kind and Erin is smart then Erin is blue."
    },
    {
        "id": 17582,
        "statement": "is(X, round) :- is(X, kind), is(X, white).",
        "description": "If someone is kind and white then they are round."
    },
    {
        "id": 17583,
        "statement": "is(harry, kind) :- is(harry, furry).",
        "description": "If Harry is furry then Harry is kind."
    },
    {
        "id": 17584,
        "statement": "is(gary, furry) :- is(gary, smart), is(gary, white).",
        "description": "If Gary is smart and Gary is white then Gary is furry."
    },
    {
        "id": 17585,
        "statement": "likes(X, squirrel) :- is(X, cold).",
        "description": "If something is cold then it likes the squirrel."
    },
    {
        "id": 17586,
        "statement": "is(X, blue) :- visits(X, dog), chases(X, dog).",
        "description": "If something visits the dog and it chases the dog then it is blue."
    },
    {
        "id": 17587,
        "statement": "likes(X, dog) :- visits(X, rabbit).",
        "description": "If something visits the rabbit then it likes the dog."
    },
    {
        "id": 17588,
        "statement": "visits(X, bear) :- is(X, blue), chases(X, rabbit).",
        "description": "If something is blue and it chases the rabbit then it visits the bear."
    },
    {
        "id": 17589,
        "statement": "chases(bear, squirrel) :- likes(X, bear), not is(X, blue).",
        "description": "If something likes the bear and it is not blue then the bear chases the squirrel."
    },
    {
        "id": 17590,
        "statement": "likes(X, rabbit) :- likes(X, squirrel), chases(X, squirrel).",
        "description": "If something likes the squirrel and it chases the squirrel then it likes the rabbit."
    },
    {
        "id": 17591,
        "statement": "likes(rabbit, bear) :- chases(X, squirrel), likes(X, rabbit).",
        "description": "If something chases the squirrel and it likes the rabbit then the rabbit likes the bear."
    },
    {
        "id": 17592,
        "statement": "is(erin, rough) :- is(erin, green).",
        "description": "If Erin is green then Erin is rough."
    },
    {
        "id": 17593,
        "statement": "is(dave, rough) :- is(dave, cold), not is(dave, nice).",
        "description": "If Dave is cold and Dave is not nice then Dave is rough."
    },
    {
        "id": 17594,
        "statement": "is(X, blue) :- is(X, white), not is(X, smart).",
        "description": "If something is white and not smart then it is blue."
    },
    {
        "id": 17595,
        "statement": "is(X, white) :- is(X, rough), not is(X, smart).",
        "description": "If something is rough and not smart then it is white."
    },
    {
        "id": 17596,
        "statement": "is(erin, smart) :- is(erin, quiet), is(erin, green).",
        "description": "If Erin is quiet and Erin is green then Erin is smart."
    },
    {
        "id": 17597,
        "statement": "is(X, green) :- is(X, kind), is(X, smart).",
        "description": "Kind, smart things are green."
    },
    {
        "id": 17598,
        "statement": "is(X, big) :- is(X, red), is(X, round).",
        "description": "If something is red and round then it is big."
    },
    {
        "id": 17599,
        "statement": "is(charlie, blue) :- is(charlie, smart), is(charlie, round).",
        "description": "If Charlie is smart and Charlie is round then Charlie is blue."
    },
    {
        "id": 17600,
        "statement": "is(charlie, round) :- is(charlie, red).",
        "description": "If Charlie is red then Charlie is round."
    },
    {
        "id": 17601,
        "statement": "is(X, kind) :- is(X, round), is(X, blue).",
        "description": "Round, blue people are kind."
    },
    {
        "id": 17602,
        "statement": "is(X, quiet) :- is(X, kind), is(X, round).",
        "description": "If someone is kind and round then they are quiet."
    },
    {
        "id": 17603,
        "statement": "eats(X, tiger) :- likes(X, tiger).",
        "description": "If someone likes the tiger then they eat the tiger."
    },
    {
        "id": 17604,
        "statement": "is(X, big) :- likes(X, dog).",
        "description": "If someone likes the dog then they are big."
    },
    {
        "id": 17605,
        "statement": "is(squirrel, red) :- sees(X, squirrel).",
        "description": "If someone sees the squirrel then the squirrel is red."
    },
    {
        "id": 17606,
        "statement": "sees(squirrel, bear) :- sees(X, tiger), likes(tiger, squirrel).",
        "description": "If someone sees the tiger and the tiger likes the squirrel then the squirrel sees the bear."
    },
    {
        "id": 17607,
        "statement": "sees(dog, tiger) :- is(tiger, big), likes(tiger, dog).",
        "description": "If the tiger is big and the tiger likes the dog then the dog sees the tiger."
    },
    {
        "id": 17608,
        "statement": "sees(squirrel, dog) :- likes(squirrel, tiger), sees(squirrel, bear).",
        "description": "If the squirrel likes the tiger and the squirrel sees the bear then the squirrel sees the dog."
    },
    {
        "id": 17609,
        "statement": "likes(X, dog) :- likes(X, tiger), eats(X, tiger).",
        "description": "If someone likes the tiger and they eat the tiger then they like the dog."
    },
    {
        "id": 17610,
        "statement": "is(X, red) :- is(X, big), is(X, kind).",
        "description": "All big, kind things are red."
    },
    {
        "id": 17611,
        "statement": "is(X, cold) :- is(X, round), is(X, blue).",
        "description": "If something is round and blue then it is cold."
    },
    {
        "id": 17612,
        "statement": "is(X, red) :- is(X, blue), not is(X, smart).",
        "description": "If someone is blue and not smart then they are red."
    },
    {
        "id": 17613,
        "statement": "is(X, nice) :- is(X, smart), is(X, cold).",
        "description": "If someone is smart and cold then they are nice."
    },
    {
        "id": 17614,
        "statement": "is(bob, red) :- not is(bob, blue).",
        "description": "If Bob is not blue then Bob is red."
    },
    {
        "id": 17615,
        "statement": "is(X, blue) :- likes(X, tiger), eats(tiger, dog).",
        "description": "If someone likes the tiger and the tiger eats the dog then they are blue."
    },
    {
        "id": 17616,
        "statement": "chases(dog, tiger) :- likes(X, dog), likes(dog, tiger).",
        "description": "If someone likes the dog and the dog likes the tiger then the dog chases the tiger."
    },
    {
        "id": 17617,
        "statement": "likes(X, squirrel) :- likes(X, dog).",
        "description": "If someone likes the dog then they like the squirrel."
    },
    {
        "id": 17618,
        "statement": "likes(X, dog) :- chases(X, squirrel).",
        "description": "If someone chases the squirrel then they like the dog."
    },
    {
        "id": 17619,
        "statement": "eats(rabbit, tiger) :- chases(rabbit, squirrel), chases(squirrel, tiger).",
        "description": "If the rabbit chases the squirrel and the squirrel chases the tiger then the rabbit eats the tiger."
    },
    {
        "id": 17620,
        "statement": "likes(dog, tiger) :- likes(X, dog).",
        "description": "If someone likes the dog then the dog likes the tiger."
    },
    {
        "id": 17621,
        "statement": "chases(X, dog) :- chases(X, rabbit).",
        "description": "If someone chases the rabbit then they chase the dog."
    },
    {
        "id": 17622,
        "statement": "chases(X, dog) :- chases(X, squirrel).",
        "description": "If someone chases the squirrel then they chase the dog."
    },
    {
        "id": 17623,
        "statement": "chases(dog, rabbit) :- chases(X, tiger), not likes(X, dog).",
        "description": "If someone chases the tiger and they do not like the dog then the dog chases the rabbit."
    },
    {
        "id": 17624,
        "statement": "is(bear, cold) :- visits(dog, bear), needs(dog, cat).",
        "description": "If the dog visits the bear and the dog needs the cat then the bear is cold."
    },
    {
        "id": 17625,
        "statement": "eats(mouse, cat) :- not visits(mouse, dog).",
        "description": "If the mouse does not visit the dog then the mouse eats the cat."
    },
    {
        "id": 17626,
        "statement": "is(X, big) :- eats(X, cat), not eats(cat, mouse).",
        "description": "If someone eats the cat and the cat does not eat the mouse then they are big."
    },
    {
        "id": 17627,
        "statement": "needs(cat, dog) :- eats(X, cat).",
        "description": "If someone eats the cat then the cat needs the dog."
    },
    {
        "id": 17628,
        "statement": "eats(X, dog) :- visits(X, mouse).",
        "description": "If someone visits the mouse then they eat the dog."
    },
    {
        "id": 17629,
        "statement": "visits(dog, mouse) :- eats(X, dog).",
        "description": "If someone eats the dog then the dog visits the mouse."
    },
    {
        "id": 17630,
        "statement": "visits(X, mouse) :- is(X, big).",
        "description": "If someone is big then they visit the mouse."
    },
    {
        "id": 17631,
        "statement": "needs(dog, mouse) :- eats(X, cat), not eats(cat, dog).",
        "description": "If someone eats the cat and the cat does not eat the dog then the dog needs the mouse."
    },
    {
        "id": 17632,
        "statement": "is(gary, furry) :- is(gary, quiet), is(gary, red).",
        "description": "If Gary is quiet and Gary is red then Gary is furry."
    },
    {
        "id": 17633,
        "statement": "is(bob, quiet) :- is(bob, smart).",
        "description": "If Bob is smart then Bob is quiet."
    },
    {
        "id": 17634,
        "statement": "is(X, red) :- is(X, smart), is(X, nice).",
        "description": "Smart, nice people are red."
    },
    {
        "id": 17635,
        "statement": "is(X, quiet) :- is(X, nice), is(X, blue).",
        "description": "All nice, blue people are quiet."
    },
    {
        "id": 17636,
        "statement": "eats(lion, cat) :- likes(lion, cat).",
        "description": "If the lion likes the cat then the lion eats the cat."
    },
    {
        "id": 17637,
        "statement": "likes(X, lion) :- visits(X, cat).",
        "description": "If someone visits the cat then they like the lion."
    },
    {
        "id": 17638,
        "statement": "likes(X, squirrel) :- is(X, round), is(X, red).",
        "description": "If someone is round and red then they like the squirrel."
    },
    {
        "id": 17639,
        "statement": "visits(X, lion) :- is(X, cold), is(X, round).",
        "description": "If someone is cold and round then they visit the lion."
    },
    {
        "id": 17640,
        "statement": "eats(squirrel, lion) :- likes(X, squirrel).",
        "description": "If someone likes the squirrel then the squirrel eats the lion."
    },
    {
        "id": 17641,
        "statement": "visits(X, cat) :- is(X, cold).",
        "description": "If someone is cold then they visit the cat."
    },
    {
        "id": 17642,
        "statement": "is(lion, cold) :- is(X, cold), likes(X, lion).",
        "description": "If someone is cold and they like the lion then the lion is cold."
    },
    {
        "id": 17643,
        "statement": "is(X, round) :- is(X, blue), is(X, rough).",
        "description": "If someone is blue and rough then they are round."
    },
    {
        "id": 17644,
        "statement": "is(X, white) :- is(X, rough), not is(X, green).",
        "description": "If someone is rough and not green then they are white."
    },
    {
        "id": 17645,
        "statement": "is(X, blue) :- is(X, rough), is(X, green).",
        "description": "If someone is rough and green then they are blue."
    },
    {
        "id": 17646,
        "statement": "is(X, cold) :- is(X, blue), is(X, kind).",
        "description": "If someone is blue and kind then they are cold."
    },
    {
        "id": 17647,
        "statement": "needs(lion, squirrel) :- visits(lion, mouse).",
        "description": "If the lion visits the mouse then the lion needs the squirrel."
    },
    {
        "id": 17648,
        "statement": "visits(lion, mouse) :- visits(X, lion).",
        "description": "If someone visits the lion then the lion visits the mouse."
    },
    {
        "id": 17649,
        "statement": "needs(lion, mouse) :- is(rabbit, cold), visits(rabbit, lion).",
        "description": "If the rabbit is cold and the rabbit visits the lion then the lion needs the mouse."
    },
    {
        "id": 17650,
        "statement": "sees(X, squirrel) :- sees(X, lion).",
        "description": "If someone sees the lion then they see the squirrel."
    },
    {
        "id": 17651,
        "statement": "is(mouse, round) :- needs(X, cow), eats(cow, mouse).",
        "description": "If someone needs the cow and the cow eats the mouse then the mouse is round."
    },
    {
        "id": 17652,
        "statement": "is(cow, young) :- likes(mouse, cow).",
        "description": "If the mouse likes the cow then the cow is young."
    },
    {
        "id": 17653,
        "statement": "needs(X, mouse) :- needs(X, rabbit).",
        "description": "If someone needs the rabbit then they need the mouse."
    },
    {
        "id": 17654,
        "statement": "eats(X, rabbit) :- likes(X, mouse).",
        "description": "If someone likes the mouse then they eat the rabbit."
    },
    {
        "id": 17655,
        "statement": "likes(cow, lion) :- needs(X, cow), eats(X, rabbit).",
        "description": "If someone needs the cow and they eat the rabbit then the cow likes the lion."
    },
    {
        "id": 17656,
        "statement": "is(X, round) :- needs(X, cow), is(cow, rough).",
        "description": "If someone needs the cow and the cow is rough then they are round."
    },
    {
        "id": 17657,
        "statement": "needs(X, cow) :- is(X, rough), is(X, green).",
        "description": "If someone is rough and green then they need the cow."
    },
    {
        "id": 17658,
        "statement": "is(cow, green) :- likes(cow, lion).",
        "description": "If the cow likes the lion then the cow is green."
    },
    {
        "id": 17659,
        "statement": "is(X, rough) :- likes(X, lion).",
        "description": "If someone likes the lion then they are rough."
    },
    {
        "id": 17660,
        "statement": "sees(X, cow) :- chases(X, dog), is(X, big).",
        "description": "If someone chases the dog and they are big then they see the cow."
    },
    {
        "id": 17661,
        "statement": "is(X, young) :- sees(X, dog).",
        "description": "If someone sees the dog then they are young."
    },
    {
        "id": 17662,
        "statement": "is(cat, cold) :- sees(X, cat), is(X, big).",
        "description": "If someone sees the cat and they are big then the cat is cold."
    },
    {
        "id": 17663,
        "statement": "sees(tiger, dog) :- sees(X, cow), sees(X, tiger).",
        "description": "If someone sees the cow and they see the tiger then the tiger sees the dog."
    },
    {
        "id": 17664,
        "statement": "chases(cat, tiger) :- needs(X, cat).",
        "description": "If someone needs the cat then the cat chases the tiger."
    },
    {
        "id": 17665,
        "statement": "is(X, rough) :- is(X, smart), is(X, blue).",
        "description": "All smart, blue things are rough."
    },
    {
        "id": 17666,
        "statement": "is(X, furry) :- is(X, kind), is(X, green).",
        "description": "All kind, green things are furry."
    },
    {
        "id": 17667,
        "statement": "is(X, smart) :- is(X, red), is(X, kind).",
        "description": "If something is red and kind then it is smart."
    },
    {
        "id": 17668,
        "statement": "is(X, round) :- is(X, furry), is(X, big).",
        "description": "Furry, big people are round."
    },
    {
        "id": 17669,
        "statement": "is(dave, green) :- is(dave, red).",
        "description": "If Dave is red then Dave is green."
    },
    {
        "id": 17670,
        "statement": "is(X, big) :- is(X, rough), is(X, round).",
        "description": "If someone is rough and round then they are big."
    },
    {
        "id": 17671,
        "statement": "is(dave, big) :- is(dave, red).",
        "description": "If Dave is red then Dave is big."
    },
    {
        "id": 17672,
        "statement": "chases(X, squirrel) :- is(X, rough).",
        "description": "If something is rough then it chases the squirrel."
    },
    {
        "id": 17673,
        "statement": "is(mouse, rough) :- chases(X, mouse).",
        "description": "If something chases the mouse then the mouse is rough."
    },
    {
        "id": 17674,
        "statement": "is(dog, green) :- eats(squirrel, mouse), eats(mouse, dog).",
        "description": "If the squirrel eats the mouse and the mouse eats the dog then the dog is green."
    },
    {
        "id": 17675,
        "statement": "is(rabbit, green) :- eats(rabbit, dog).",
        "description": "If the rabbit eats the dog then the rabbit is green."
    },
    {
        "id": 17676,
        "statement": "likes(rabbit, mouse) :- not chases(rabbit, mouse).",
        "description": "If the rabbit does not chase the mouse then the rabbit likes the mouse."
    },
    {
        "id": 17677,
        "statement": "eats(X, rabbit) :- likes(X, mouse).",
        "description": "If something likes the mouse then it eats the rabbit."
    },
    {
        "id": 17678,
        "statement": "eats(X, squirrel) :- eats(X, mouse), not is(X, green).",
        "description": "If something eats the mouse and it is not green then it eats the squirrel."
    },
    {
        "id": 17679,
        "statement": "is(mouse, young) :- eats(X, dog), not likes(X, mouse).",
        "description": "If something eats the dog and it does not like the mouse then the mouse is young."
    },
    {
        "id": 17680,
        "statement": "is(cat, young) :- visits(X, cat), visits(X, cow).",
        "description": "If something visits the cat and it visits the cow then the cat is young."
    },
    {
        "id": 17681,
        "statement": "chases(X, cat) :- visits(X, cow).",
        "description": "If something visits the cow then it chases the cat."
    },
    {
        "id": 17682,
        "statement": "visits(X, cow) :- is(X, cold).",
        "description": "If something is cold then it visits the cow."
    },
    {
        "id": 17683,
        "statement": "visits(X, cat) :- is(X, red), chases(X, cat).",
        "description": "If something is red and it chases the cat then it visits the cat."
    },
    {
        "id": 17684,
        "statement": "is(X, cold) :- is(X, red), needs(X, dog).",
        "description": "If something is red and it needs the dog then it is cold."
    },
    {
        "id": 17685,
        "statement": "visits(X, lion) :- visits(X, cat).",
        "description": "If something visits the cat then it visits the lion."
    },
    {
        "id": 17686,
        "statement": "visits(dog, cat) :- visits(dog, lion).",
        "description": "If the dog visits the lion then the dog visits the cat."
    },
    {
        "id": 17687,
        "statement": "visits(cow, lion) :- chases(X, cow).",
        "description": "If something chases the cow then the cow visits the lion."
    },
    {
        "id": 17688,
        "statement": "chases(X, cat) :- needs(X, dog), visits(X, dog).",
        "description": "If something needs the dog and it visits the dog then it chases the cat."
    },
    {
        "id": 17689,
        "statement": "visits(X, bear) :- likes(X, tiger).",
        "description": "If someone likes the tiger then they visit the bear."
    },
    {
        "id": 17690,
        "statement": "visits(tiger, cat) :- visits(tiger, bear).",
        "description": "If the tiger visits the bear then the tiger visits the cat."
    },
    {
        "id": 17691,
        "statement": "likes(bear, cat) :- visits(X, bear).",
        "description": "If someone visits the bear then the bear likes the cat."
    },
    {
        "id": 17692,
        "statement": "visits(tiger, bear) :- likes(tiger, cat).",
        "description": "If the tiger likes the cat then the tiger visits the bear."
    },
    {
        "id": 17693,
        "statement": "is(cow, young) :- likes(cow, cat).",
        "description": "If the cow likes the cat then the cow is young."
    },
    {
        "id": 17694,
        "statement": "likes(bear, cow) :- needs(X, bear).",
        "description": "If someone needs the bear then the bear likes the cow."
    },
    {
        "id": 17695,
        "statement": "likes(tiger, cat) :- is(X, round), likes(X, tiger).",
        "description": "If someone is round and they like the tiger then the tiger likes the cat."
    },
    {
        "id": 17696,
        "statement": "is(X, red) :- is(X, big), is(X, round).",
        "description": "All big, round people are red."
    },
    {
        "id": 17697,
        "statement": "is(anne, white) :- is(anne, blue).",
        "description": "If Anne is blue then Anne is white."
    },
    {
        "id": 17698,
        "statement": "is(X, young) :- is(X, cold), is(X, rough).",
        "description": "If someone is cold and rough then they are young."
    },
    {
        "id": 17699,
        "statement": "is(X, young) :- is(X, round), is(X, kind).",
        "description": "If someone is round and kind then they are young."
    },
    {
        "id": 17700,
        "statement": "is(X, cold) :- is(X, young), is(X, rough).",
        "description": "If someone is young and rough then they are cold."
    },
    {
        "id": 17701,
        "statement": "is(lion, blue) :- sees(X, cow), not chases(X, lion).",
        "description": "If something sees the cow and it does not chase the lion then the lion is blue."
    },
    {
        "id": 17702,
        "statement": "sees(X, cow) :- likes(X, lion), not likes(lion, mouse).",
        "description": "If something likes the lion and the lion does not like the mouse then it sees the cow."
    },
    {
        "id": 17703,
        "statement": "is(mouse, nice) :- chases(cow, mouse), likes(mouse, rabbit).",
        "description": "If the cow chases the mouse and the mouse likes the rabbit then the mouse is nice."
    },
    {
        "id": 17704,
        "statement": "likes(X, cow) :- sees(X, lion), is(X, round).",
        "description": "If something sees the lion and it is round then it likes the cow."
    },
    {
        "id": 17705,
        "statement": "is(cow, blue) :- likes(X, cow), not is(X, cold).",
        "description": "If something likes the cow and it is not cold then the cow is blue."
    },
    {
        "id": 17706,
        "statement": "is(lion, round) :- likes(rabbit, lion).",
        "description": "If the rabbit likes the lion then the lion is round."
    },
    {
        "id": 17707,
        "statement": "is(X, round) :- chases(X, rabbit).",
        "description": "If something chases the rabbit then it is round."
    },
    {
        "id": 17708,
        "statement": "is(squirrel, green) :- chases(X, squirrel), likes(X, squirrel).",
        "description": "If something chases the squirrel and it likes the squirrel then the squirrel is green."
    },
    {
        "id": 17709,
        "statement": "chases(rabbit, lion) :- is(X, nice), needs(X, rabbit).",
        "description": "If something is nice and it needs the rabbit then the rabbit chases the lion."
    },
    {
        "id": 17710,
        "statement": "is(cat, round) :- sees(X, cat), visits(cat, rabbit).",
        "description": "If something sees the cat and the cat visits the rabbit then the cat is round."
    },
    {
        "id": 17711,
        "statement": "is(cat, green) :- visits(X, cat), likes(X, rabbit).",
        "description": "If something visits the cat and it likes the rabbit then the cat is green."
    },
    {
        "id": 17712,
        "statement": "is(cow, cold) :- is(X, young), sees(X, cow).",
        "description": "If something is young and it sees the cow then the cow is cold."
    },
    {
        "id": 17713,
        "statement": "likes(cat, tiger) :- visits(X, cow), likes(cow, cat).",
        "description": "If something visits the cow and the cow likes the cat then the cat likes the tiger."
    },
    {
        "id": 17714,
        "statement": "visits(cat, tiger) :- sees(cat, rabbit), is(rabbit, nice).",
        "description": "If the cat sees the rabbit and the rabbit is nice then the cat visits the tiger."
    },
    {
        "id": 17715,
        "statement": "visits(X, tiger) :- visits(X, rabbit), is(X, round).",
        "description": "If something visits the rabbit and it is round then it visits the tiger."
    },
    {
        "id": 17716,
        "statement": "is(X, young) :- visits(X, cow).",
        "description": "If something visits the cow then it is young."
    },
    {
        "id": 17717,
        "statement": "is(X, round) :- is(X, white), is(X, blue).",
        "description": "If someone is white and blue then they are round."
    },
    {
        "id": 17718,
        "statement": "is(X, cold) :- is(X, rough), is(X, round).",
        "description": "If someone is rough and round then they are cold."
    },
    {
        "id": 17719,
        "statement": "is(X, cold) :- is(X, rough), is(X, smart).",
        "description": "If someone is rough and smart then they are cold."
    },
    {
        "id": 17720,
        "statement": "is(dave, furry) :- is(dave, red), is(dave, rough).",
        "description": "If Dave is red and Dave is rough then Dave is furry."
    },
    {
        "id": 17721,
        "statement": "is(X, round) :- is(X, rough), is(X, smart).",
        "description": "All rough, smart people are round."
    },
    {
        "id": 17722,
        "statement": "is(X, quiet) :- is(X, green), is(X, red).",
        "description": "All green, red people are quiet."
    },
    {
        "id": 17723,
        "statement": "is(X, red) :- is(X, blue), is(X, kind).",
        "description": "Blue, kind people are red."
    },
    {
        "id": 17724,
        "statement": "is(X, kind) :- is(X, young), is(X, nice).",
        "description": "Young, nice people are kind."
    },
    {
        "id": 17725,
        "statement": "is(X, blue) :- is(X, green), is(X, kind).",
        "description": "All green, kind people are blue."
    },
    {
        "id": 17726,
        "statement": "is(gary, young) :- is(gary, quiet).",
        "description": "If Gary is quiet then Gary is young."
    },
    {
        "id": 17727,
        "statement": "visits(X, cow) :- is(X, kind), is(X, young).",
        "description": "If something is kind and young then it visits the cow."
    },
    {
        "id": 17728,
        "statement": "chases(cow, cat) :- visits(X, cow), visits(X, lion).",
        "description": "If something visits the cow and it visits the lion then the cow chases the cat."
    },
    {
        "id": 17729,
        "statement": "is(cow, kind) :- eats(X, lion), visits(X, cow).",
        "description": "If something eats the lion and it visits the cow then the cow is kind."
    },
    {
        "id": 17730,
        "statement": "is(cow, cold) :- visits(cat, cow), eats(cat, cow).",
        "description": "If the cat visits the cow and the cat eats the cow then the cow is cold."
    },
    {
        "id": 17731,
        "statement": "is(X, young) :- eats(X, lion).",
        "description": "If something eats the lion then it is young."
    },
    {
        "id": 17732,
        "statement": "eats(X, rabbit) :- visits(X, cow).",
        "description": "If something visits the cow then it eats the rabbit."
    },
    {
        "id": 17733,
        "statement": "eats(cow, rabbit) :- visits(X, cow), eats(X, cat).",
        "description": "If something visits the cow and it eats the cat then the cow eats the rabbit."
    },
    {
        "id": 17734,
        "statement": "chases(lion, rabbit) :- is(X, kind), visits(X, lion).",
        "description": "If something is kind and it visits the lion then the lion chases the rabbit."
    },
    {
        "id": 17735,
        "statement": "is(X, nice) :- is(X, blue), is(X, big).",
        "description": "If someone is blue and big then they are nice."
    },
    {
        "id": 17736,
        "statement": "is(X, quiet) :- is(X, furry), is(X, big).",
        "description": "If someone is furry and big then they are quiet."
    },
    {
        "id": 17737,
        "statement": "is(X, quiet) :- is(X, rough), is(X, big).",
        "description": "Rough, big people are quiet."
    },
    {
        "id": 17738,
        "statement": "is(X, rough) :- is(X, white), is(X, green).",
        "description": "White, green people are rough."
    },
    {
        "id": 17739,
        "statement": "is(X, blue) :- is(X, furry), is(X, smart).",
        "description": "Furry, smart things are blue."
    },
    {
        "id": 17740,
        "statement": "is(X, rough) :- is(X, quiet), is(X, smart).",
        "description": "If something is quiet and smart then it is rough."
    },
    {
        "id": 17741,
        "statement": "is(X, quiet) :- is(X, white), is(X, red).",
        "description": "All white, red things are quiet."
    },
    {
        "id": 17742,
        "statement": "is(X, quiet) :- is(X, smart), is(X, big).",
        "description": "If something is smart and big then it is quiet."
    },
    {
        "id": 17743,
        "statement": "is(charlie, green) :- is(charlie, quiet), is(charlie, nice).",
        "description": "If Charlie is quiet and Charlie is nice then Charlie is green."
    },
    {
        "id": 17744,
        "statement": "is(X, nice) :- is(X, furry), is(X, smart).",
        "description": "All furry, smart things are nice."
    },
    {
        "id": 17745,
        "statement": "is(X, nice) :- needs(X, bear), likes(bear, tiger).",
        "description": "If someone needs the bear and the bear likes the tiger then they are nice."
    },
    {
        "id": 17746,
        "statement": "is(bear, big) :- needs(X, dog), visits(dog, bear).",
        "description": "If someone needs the dog and the dog visits the bear then the bear is big."
    },
    {
        "id": 17747,
        "statement": "likes(dog, tiger) :- visits(X, bear), needs(bear, dog).",
        "description": "If someone visits the bear and the bear needs the dog then the dog likes the tiger."
    },
    {
        "id": 17748,
        "statement": "is(bear, young) :- needs(tiger, bear), is(bear, cold).",
        "description": "If the tiger needs the bear and the bear is cold then the bear is young."
    },
    {
        "id": 17749,
        "statement": "eats(mouse, cat) :- needs(X, mouse).",
        "description": "If someone needs the mouse then the mouse eats the cat."
    },
    {
        "id": 17750,
        "statement": "needs(X, mouse) :- eats(X, cat), eats(X, tiger).",
        "description": "If someone eats the cat and they eat the tiger then they need the mouse."
    },
    {
        "id": 17751,
        "statement": "is(tiger, nice) :- not likes(tiger, squirrel).",
        "description": "If the tiger does not like the squirrel then the tiger is nice."
    },
    {
        "id": 17752,
        "statement": "likes(mouse, tiger) :- eats(X, mouse), not needs(X, tiger).",
        "description": "If someone eats the mouse and they do not need the tiger then the mouse likes the tiger."
    },
    {
        "id": 17753,
        "statement": "likes(mouse, cat) :- eats(mouse, cat), needs(cat, mouse).",
        "description": "If the mouse eats the cat and the cat needs the mouse then the mouse likes the cat."
    },
    {
        "id": 17754,
        "statement": "is(X, green) :- is(X, smart), is(X, quiet).",
        "description": "If something is smart and quiet then it is green."
    },
    {
        "id": 17755,
        "statement": "is(X, blue) :- is(X, rough), is(X, smart).",
        "description": "Rough, smart things are blue."
    },
    {
        "id": 17756,
        "statement": "is(X, round) :- is(X, red), is(X, green).",
        "description": "Red, green things are round."
    },
    {
        "id": 17757,
        "statement": "is(X, quiet) :- is(X, rough), is(X, smart).",
        "description": "If something is rough and smart then it is quiet."
    },
    {
        "id": 17758,
        "statement": "is(X, smart) :- is(X, blue), is(X, rough).",
        "description": "All blue, rough things are smart."
    },
    {
        "id": 17759,
        "statement": "is(charlie, white) :- is(charlie, blue), is(charlie, quiet).",
        "description": "If Charlie is blue and Charlie is quiet then Charlie is white."
    },
    {
        "id": 17760,
        "statement": "is(X, white) :- is(X, green), is(X, quiet).",
        "description": "Green, quiet people are white."
    },
    {
        "id": 17761,
        "statement": "is(dave, green) :- is(dave, quiet), is(dave, round).",
        "description": "If Dave is quiet and Dave is round then Dave is green."
    },
    {
        "id": 17762,
        "statement": "is(X, nice) :- is(X, smart), is(X, rough).",
        "description": "Smart, rough people are nice."
    },
    {
        "id": 17763,
        "statement": "is(X, big) :- is(X, rough), not is(X, blue).",
        "description": "If someone is rough and not blue then they are big."
    },
    {
        "id": 17764,
        "statement": "is(X, big) :- is(X, blue), is(X, quiet).",
        "description": "If someone is blue and quiet then they are big."
    },
    {
        "id": 17765,
        "statement": "is(X, quiet) :- is(X, blue), is(X, big).",
        "description": "All blue, big things are quiet."
    },
    {
        "id": 17766,
        "statement": "is(X, blue) :- is(X, quiet), is(X, white).",
        "description": "Quiet, white things are blue."
    },
    {
        "id": 17767,
        "statement": "is(X, red) :- is(X, smart), is(X, young).",
        "description": "Smart, young people are red."
    },
    {
        "id": 17768,
        "statement": "is(X, quiet) :- is(X, big), is(X, kind).",
        "description": "All big, kind people are quiet."
    },
    {
        "id": 17769,
        "statement": "is(X, young) :- is(X, big), is(X, smart).",
        "description": "Big, smart people are young."
    },
    {
        "id": 17770,
        "statement": "is(X, kind) :- is(X, smart), is(X, red).",
        "description": "All smart, red people are kind."
    },
    {
        "id": 17771,
        "statement": "eats(bald_eagle, mouse) :- needs(X, bald_eagle), is(bald_eagle, big).",
        "description": "If something needs the bald eagle and the bald eagle is big then the bald eagle eats the mouse."
    },
    {
        "id": 17772,
        "statement": "needs(mouse, rabbit) :- needs(X, mouse), is(X, big).",
        "description": "If something needs the mouse and it is big then the mouse needs the rabbit."
    },
    {
        "id": 17773,
        "statement": "is(X, big) :- is(X, nice), needs(X, bald_eagle).",
        "description": "If something is nice and it needs the bald eagle then it is big."
    },
    {
        "id": 17774,
        "statement": "is(mouse, round) :- likes(X, mouse), eats(X, rabbit).",
        "description": "If something likes the mouse and it eats the rabbit then the mouse is round."
    },
    {
        "id": 17775,
        "statement": "eats(cat, bald_eagle) :- likes(cat, bald_eagle).",
        "description": "If the cat likes the bald eagle then the cat eats the bald eagle."
    },
    {
        "id": 17776,
        "statement": "needs(bald_eagle, mouse) :- eats(X, bald_eagle), is(bald_eagle, round).",
        "description": "If something eats the bald eagle and the bald eagle is round then the bald eagle needs the mouse."
    },
    {
        "id": 17777,
        "statement": "is(X, red) :- sees(X, mouse), needs(mouse, tiger).",
        "description": "If something sees the mouse and the mouse needs the tiger then it is red."
    },
    {
        "id": 17778,
        "statement": "sees(X, mouse) :- sees(X, dog).",
        "description": "If something sees the dog then it sees the mouse."
    },
    {
        "id": 17779,
        "statement": "chases(X, bear) :- sees(X, dog).",
        "description": "If something sees the dog then it chases the bear."
    },
    {
        "id": 17780,
        "statement": "chases(mouse, bear) :- sees(X, mouse).",
        "description": "If something sees the mouse then the mouse chases the bear."
    },
    {
        "id": 17781,
        "statement": "sees(X, tiger) :- needs(X, bear).",
        "description": "If something needs the bear then it sees the tiger."
    },
    {
        "id": 17782,
        "statement": "sees(bear, tiger) :- needs(bear, mouse), is(bear, cold).",
        "description": "If the bear needs the mouse and the bear is cold then the bear sees the tiger."
    },
    {
        "id": 17783,
        "statement": "is(tiger, blue) :- needs(X, tiger), is(X, big).",
        "description": "If something needs the tiger and it is big then the tiger is blue."
    },
    {
        "id": 17784,
        "statement": "is(X, rough) :- is(X, smart), is(X, blue).",
        "description": "If something is smart and blue then it is rough."
    },
    {
        "id": 17785,
        "statement": "is(X, rough) :- is(X, kind), is(X, big).",
        "description": "Kind, big things are rough."
    },
    {
        "id": 17786,
        "statement": "is(X, big) :- is(X, kind), not is(X, white).",
        "description": "If something is kind and not white then it is big."
    },
    {
        "id": 17787,
        "statement": "is(anne, smart) :- is(anne, kind), is(anne, rough).",
        "description": "If Anne is kind and Anne is rough then Anne is smart."
    },
    {
        "id": 17788,
        "statement": "is(X, nice) :- is(X, kind), is(X, red).",
        "description": "Kind, red people are nice."
    },
    {
        "id": 17789,
        "statement": "is(fiona, furry) :- is(fiona, cold).",
        "description": "If Fiona is cold then Fiona is furry."
    },
    {
        "id": 17790,
        "statement": "visits(X, bald_eagle) :- is(X, big).",
        "description": "If something is big then it visits the bald eagle."
    },
    {
        "id": 17791,
        "statement": "chases(cow, bald_eagle) :- is(X, big), visits(X, cow).",
        "description": "If something is big and it visits the cow then the cow chases the bald eagle."
    },
    {
        "id": 17792,
        "statement": "visits(X, cow) :- visits(X, bald_eagle), is(X, nice).",
        "description": "If something visits the bald eagle and it is nice then it visits the cow."
    },
    {
        "id": 17793,
        "statement": "visits(X, lion) :- eats(X, lion).",
        "description": "If something eats the lion then it visits the lion."
    },
    {
        "id": 17794,
        "statement": "is(squirrel, cold) :- visits(X, bald_eagle), visits(X, squirrel).",
        "description": "If someone visits the bald eagle and they visit the squirrel then the squirrel is cold."
    },
    {
        "id": 17795,
        "statement": "likes(X, tiger) :- chases(X, cat), visits(cat, tiger).",
        "description": "If someone chases the cat and the cat visits the tiger then they like the tiger."
    },
    {
        "id": 17796,
        "statement": "chases(cat, bald_eagle) :- visits(X, cat).",
        "description": "If someone visits the cat then the cat chases the bald eagle."
    },
    {
        "id": 17797,
        "statement": "is(X, blue) :- likes(X, cat), is(cat, blue).",
        "description": "If someone likes the cat and the cat is blue then they are blue."
    },
    {
        "id": 17798,
        "statement": "visits(tiger, bald_eagle) :- likes(X, tiger), is(X, round).",
        "description": "If someone likes the tiger and they are round then the tiger visits the bald eagle."
    },
    {
        "id": 17799,
        "statement": "visits(cat, tiger) :- chases(X, cat).",
        "description": "If someone chases the cat then the cat visits the tiger."
    },
    {
        "id": 17800,
        "statement": "is(X, nice) :- chases(X, squirrel).",
        "description": "If someone chases the squirrel then they are nice."
    },
    {
        "id": 17801,
        "statement": "chases(X, squirrel) :- visits(X, cat), visits(X, bald_eagle).",
        "description": "If someone visits the cat and they visit the bald eagle then they chase the squirrel."
    },
    {
        "id": 17802,
        "statement": "is(erin, cold) :- is(erin, young), is(erin, red).",
        "description": "If Erin is young and Erin is red then Erin is cold."
    },
    {
        "id": 17803,
        "statement": "is(erin, big) :- is(erin, furry), is(erin, rough).",
        "description": "If Erin is furry and Erin is rough then Erin is big."
    },
    {
        "id": 17804,
        "statement": "is(X, furry) :- is(X, cold), is(X, rough).",
        "description": "Cold, rough things are furry."
    },
    {
        "id": 17805,
        "statement": "eats(X, cow) :- needs(X, rabbit).",
        "description": "If something needs the rabbit then it eats the cow."
    },
    {
        "id": 17806,
        "statement": "needs(cat, cow) :- is(X, nice), visits(X, cat).",
        "description": "If something is nice and it visits the cat then the cat needs the cow."
    },
    {
        "id": 17807,
        "statement": "is(squirrel, nice) :- eats(cow, squirrel).",
        "description": "If the cow eats the squirrel then the squirrel is nice."
    },
    {
        "id": 17808,
        "statement": "visits(X, cat) :- is(X, kind), is(X, rough).",
        "description": "If something is kind and rough then it visits the cat."
    },
    {
        "id": 17809,
        "statement": "needs(rabbit, squirrel) :- eats(cow, rabbit).",
        "description": "If the cow eats the rabbit then the rabbit needs the squirrel."
    },
    {
        "id": 17810,
        "statement": "eats(X, squirrel) :- eats(X, cow).",
        "description": "If something eats the cow then it eats the squirrel."
    },
    {
        "id": 17811,
        "statement": "is(X, blue) :- visits(X, tiger), needs(X, cat).",
        "description": "If someone visits the tiger and they need the cat then they are blue."
    },
    {
        "id": 17812,
        "statement": "likes(lion, cat) :- likes(X, lion), likes(X, mouse).",
        "description": "If someone likes the lion and they like the mouse then the lion likes the cat."
    },
    {
        "id": 17813,
        "statement": "is(X, blue) :- is(X, green), likes(X, cat).",
        "description": "If someone is green and they like the cat then they are blue."
    },
    {
        "id": 17814,
        "statement": "likes(cat, mouse) :- visits(X, cat).",
        "description": "If someone visits the cat then the cat likes the mouse."
    },
    {
        "id": 17815,
        "statement": "visits(X, cat) :- likes(X, cat).",
        "description": "If someone likes the cat then they visit the cat."
    },
    {
        "id": 17816,
        "statement": "likes(X, lion) :- likes(X, mouse).",
        "description": "If someone likes the mouse then they like the lion."
    },
    {
        "id": 17817,
        "statement": "is(bald_eagle, cold) :- eats(X, bald_eagle).",
        "description": "If something eats the bald eagle then the bald eagle is cold."
    },
    {
        "id": 17818,
        "statement": "is(bald_eagle, big) :- is(bald_eagle, kind).",
        "description": "If the bald eagle is kind then the bald eagle is big."
    },
    {
        "id": 17819,
        "statement": "is(cat, round) :- likes(X, dog), needs(X, cat).",
        "description": "If something likes the dog and it needs the cat then the cat is round."
    },
    {
        "id": 17820,
        "statement": "likes(dog, cat) :- needs(bald_eagle, dog).",
        "description": "If the bald eagle needs the dog then the dog likes the cat."
    },
    {
        "id": 17821,
        "statement": "needs(X, squirrel) :- eats(X, cow).",
        "description": "If someone eats the cow then they need the squirrel."
    },
    {
        "id": 17822,
        "statement": "eats(X, bald_eagle) :- is(X, cold), visits(X, squirrel).",
        "description": "If someone is cold and they visit the squirrel then they eat the bald eagle."
    },
    {
        "id": 17823,
        "statement": "eats(cow, dog) :- is(cow, big), is(cow, kind).",
        "description": "If the cow is big and the cow is kind then the cow eats the dog."
    },
    {
        "id": 17824,
        "statement": "eats(X, bald_eagle) :- is(X, green), visits(X, cow).",
        "description": "If someone is green and they visit the cow then they eat the bald eagle."
    },
    {
        "id": 17825,
        "statement": "is(dog, big) :- eats(X, dog).",
        "description": "If someone eats the dog then the dog is big."
    },
    {
        "id": 17826,
        "statement": "eats(bald_eagle, cow) :- eats(X, bald_eagle), is(X, cold).",
        "description": "If someone eats the bald eagle and they are cold then the bald eagle eats the cow."
    },
    {
        "id": 17827,
        "statement": "is(X, green) :- is(X, blue), visits(X, dog).",
        "description": "If something is blue and it visits the dog then it is green."
    },
    {
        "id": 17828,
        "statement": "visits(X, squirrel) :- sees(X, squirrel), visits(squirrel, bear).",
        "description": "If something sees the squirrel and the squirrel visits the bear then it visits the squirrel."
    },
    {
        "id": 17829,
        "statement": "sees(rabbit, bear) :- sees(X, rabbit), eats(rabbit, squirrel).",
        "description": "If something sees the rabbit and the rabbit eats the squirrel then the rabbit sees the bear."
    },
    {
        "id": 17830,
        "statement": "sees(bear, squirrel) :- sees(X, squirrel), eats(squirrel, bear).",
        "description": "If something sees the squirrel and the squirrel eats the bear then the bear sees the squirrel."
    },
    {
        "id": 17831,
        "statement": "sees(rabbit, squirrel) :- is(rabbit, green), eats(rabbit, dog).",
        "description": "If the rabbit is green and the rabbit eats the dog then the rabbit sees the squirrel."
    },
    {
        "id": 17832,
        "statement": "is(rabbit, blue) :- sees(rabbit, bear).",
        "description": "If the rabbit sees the bear then the rabbit is blue."
    },
    {
        "id": 17833,
        "statement": "eats(X, dog) :- visits(X, rabbit).",
        "description": "If something visits the rabbit then it eats the dog."
    },
    {
        "id": 17834,
        "statement": "is(X, big) :- is(X, white), is(X, nice).",
        "description": "If something is white and nice then it is big."
    },
    {
        "id": 17835,
        "statement": "is(bob, big) :- is(bob, white), is(bob, furry).",
        "description": "If Bob is white and Bob is furry then Bob is big."
    },
    {
        "id": 17836,
        "statement": "is(X, white) :- is(X, kind), is(X, young).",
        "description": "If something is kind and young then it is white."
    },
    {
        "id": 17837,
        "statement": "sees(X, squirrel) :- is(X, kind).",
        "description": "If someone is kind then they see the squirrel."
    },
    {
        "id": 17838,
        "statement": "is(X, big) :- visits(X, cat).",
        "description": "If someone visits the cat then they are big."
    },
    {
        "id": 17839,
        "statement": "needs(squirrel, cow) :- visits(cat, squirrel).",
        "description": "If the cat visits the squirrel then the squirrel needs the cow."
    },
    {
        "id": 17840,
        "statement": "is(X, kind) :- needs(X, lion).",
        "description": "If someone needs the lion then they are kind."
    },
    {
        "id": 17841,
        "statement": "is(X, big) :- visits(X, squirrel), needs(X, lion).",
        "description": "If someone visits the squirrel and they need the lion then they are big."
    },
    {
        "id": 17842,
        "statement": "is(X, kind) :- is(X, cold), sees(X, squirrel).",
        "description": "If someone is cold and they see the squirrel then they are kind."
    },
    {
        "id": 17843,
        "statement": "needs(X, mouse) :- is(X, red).",
        "description": "If something is red then it needs the mouse."
    },
    {
        "id": 17844,
        "statement": "eats(mouse, lion) :- eats(X, mouse), needs(X, mouse).",
        "description": "If something eats the mouse and it needs the mouse then the mouse eats the lion."
    },
    {
        "id": 17845,
        "statement": "needs(cow, mouse) :- eats(mouse, lion), needs(lion, cow).",
        "description": "If the mouse eats the lion and the lion needs the cow then the cow needs the mouse."
    },
    {
        "id": 17846,
        "statement": "is(dave, green) :- is(dave, rough), is(dave, smart).",
        "description": "If Dave is rough and Dave is smart then Dave is green."
    },
    {
        "id": 17847,
        "statement": "is(X, blue) :- is(X, green), is(X, smart).",
        "description": "If someone is green and smart then they are blue."
    },
    {
        "id": 17848,
        "statement": "is(X, green) :- is(X, nice), is(X, rough).",
        "description": "If someone is nice and rough then they are green."
    },
    {
        "id": 17849,
        "statement": "is(X, green) :- is(X, smart), is(X, furry).",
        "description": "Smart, furry people are green."
    },
    {
        "id": 17850,
        "statement": "is(harry, nice) :- is(harry, quiet), is(harry, blue).",
        "description": "If Harry is quiet and Harry is blue then Harry is nice."
    },
    {
        "id": 17851,
        "statement": "is(charlie, nice) :- is(charlie, quiet), is(charlie, round).",
        "description": "If Charlie is quiet and Charlie is round then Charlie is nice."
    },
    {
        "id": 17852,
        "statement": "is(X, big) :- chases(X, mouse).",
        "description": "If something chases the mouse then it is big."
    },
    {
        "id": 17853,
        "statement": "chases(X, mouse) :- chases(X, cow), not eats(X, cat).",
        "description": "If something chases the cow and it does not eat the cat then it chases the mouse."
    },
    {
        "id": 17854,
        "statement": "eats(cow, mouse) :- is(X, big), chases(X, cow).",
        "description": "If something is big and it chases the cow then the cow eats the mouse."
    },
    {
        "id": 17855,
        "statement": "is(X, nice) :- eats(X, mouse), chases(X, tiger).",
        "description": "If something eats the mouse and it chases the tiger then it is nice."
    },
    {
        "id": 17856,
        "statement": "needs(X, cat) :- needs(X, tiger).",
        "description": "If something needs the tiger then it needs the cat."
    },
    {
        "id": 17857,
        "statement": "eats(mouse, tiger) :- chases(X, mouse), is(X, nice).",
        "description": "If something chases the mouse and it is nice then the mouse eats the tiger."
    },
    {
        "id": 17858,
        "statement": "chases(X, cow) :- needs(X, tiger).",
        "description": "If something needs the tiger then it chases the cow."
    },
    {
        "id": 17859,
        "statement": "needs(X, tiger) :- eats(X, mouse), not is(X, blue).",
        "description": "If something eats the mouse and it is not blue then it needs the tiger."
    },
    {
        "id": 17860,
        "statement": "sees(X, mouse) :- is(X, red), chases(X, bald_eagle).",
        "description": "If someone is red and they chase the bald eagle then they see the mouse."
    },
    {
        "id": 17861,
        "statement": "sees(X, bear) :- is(X, nice), is(X, red).",
        "description": "If someone is nice and red then they see the bear."
    },
    {
        "id": 17862,
        "statement": "likes(X, rabbit) :- sees(X, bear), sees(X, mouse).",
        "description": "If someone sees the bear and they see the mouse then they like the rabbit."
    },
    {
        "id": 17863,
        "statement": "likes(X, bald_eagle) :- is(X, green), chases(X, mouse).",
        "description": "If someone is green and they chase the mouse then they like the bald eagle."
    },
    {
        "id": 17864,
        "statement": "likes(X, bald_eagle) :- is(X, blue).",
        "description": "If someone is blue then they like the bald eagle."
    },
    {
        "id": 17865,
        "statement": "chases(X, bald_eagle) :- sees(X, bear).",
        "description": "If someone sees the bear then they chase the bald eagle."
    },
    {
        "id": 17866,
        "statement": "is(bear, blue) :- sees(rabbit, bear), is(bear, nice).",
        "description": "If the rabbit sees the bear and the bear is nice then the bear is blue."
    },
    {
        "id": 17867,
        "statement": "is(X, round) :- is(X, young), is(X, quiet).",
        "description": "If someone is young and quiet then they are round."
    },
    {
        "id": 17868,
        "statement": "is(harry, round) :- is(harry, young).",
        "description": "If Harry is young then Harry is round."
    },
    {
        "id": 17869,
        "statement": "is(X, cold) :- is(X, quiet).",
        "description": "Quiet people are cold."
    },
    {
        "id": 17870,
        "statement": "is(X, quiet) :- is(X, blue), is(X, red).",
        "description": "All blue, red people are quiet."
    },
    {
        "id": 17871,
        "statement": "is(X, cold) :- is(X, quiet), is(X, smart).",
        "description": "If someone is quiet and smart then they are cold."
    },
    {
        "id": 17872,
        "statement": "is(X, smart) :- is(X, cold), is(X, kind).",
        "description": "All cold, kind people are smart."
    },
    {
        "id": 17873,
        "statement": "visits(X, bear) :- is(X, young), likes(X, bald_eagle).",
        "description": "If something is young and it likes the bald eagle then it visits the bear."
    },
    {
        "id": 17874,
        "statement": "chases(tiger, bald_eagle) :- is(tiger, kind).",
        "description": "If the tiger is kind then the tiger chases the bald eagle."
    },
    {
        "id": 17875,
        "statement": "visits(X, bear) :- is(X, kind), is(X, round).",
        "description": "If something is kind and round then it visits the bear."
    },
    {
        "id": 17876,
        "statement": "is(X, kind) :- likes(X, cow).",
        "description": "If something likes the cow then it is kind."
    },
    {
        "id": 17877,
        "statement": "likes(X, cow) :- likes(X, bald_eagle), visits(bald_eagle, bear).",
        "description": "If something likes the bald eagle and the bald eagle visits the bear then it likes the cow."
    },
    {
        "id": 17878,
        "statement": "visits(X, bear) :- likes(X, bald_eagle).",
        "description": "If something likes the bald eagle then it visits the bear."
    },
    {
        "id": 17879,
        "statement": "likes(bear, cow) :- visits(X, bear), chases(bear, cow).",
        "description": "If something visits the bear and the bear chases the cow then the bear likes the cow."
    },
    {
        "id": 17880,
        "statement": "visits(X, bear) :- visits(X, bald_eagle), is(bald_eagle, cold).",
        "description": "If something visits the bald eagle and the bald eagle is cold then it visits the bear."
    },
    {
        "id": 17881,
        "statement": "is(X, blue) :- is(X, young), is(X, nice).",
        "description": "All young, nice people are blue."
    },
    {
        "id": 17882,
        "statement": "is(dave, young) :- is(dave, round), is(dave, nice).",
        "description": "If Dave is round and Dave is nice then Dave is young."
    },
    {
        "id": 17883,
        "statement": "is(X, blue) :- is(X, big), is(X, round).",
        "description": "If someone is big and round then they are blue."
    },
    {
        "id": 17884,
        "statement": "likes(X, tiger) :- is(X, rough), is(X, green).",
        "description": "If something is rough and green then it likes the tiger."
    },
    {
        "id": 17885,
        "statement": "likes(cat, rabbit) :- visits(rabbit, cat).",
        "description": "If the rabbit visits the cat then the cat likes the rabbit."
    },
    {
        "id": 17886,
        "statement": "needs(rabbit, cow) :- needs(X, rabbit).",
        "description": "If something needs the rabbit then the rabbit needs the cow."
    },
    {
        "id": 17887,
        "statement": "visits(cow, cat) :- likes(X, cow), visits(X, cow).",
        "description": "If something likes the cow and it visits the cow then the cow visits the cat."
    },
    {
        "id": 17888,
        "statement": "needs(rabbit, cat) :- visits(X, rabbit).",
        "description": "If something visits the rabbit then the rabbit needs the cat."
    },
    {
        "id": 17889,
        "statement": "likes(cat, cow) :- likes(cat, tiger).",
        "description": "If the cat likes the tiger then the cat likes the cow."
    },
    {
        "id": 17890,
        "statement": "is(X, kind) :- is(X, big), is(X, smart).",
        "description": "All big, smart people are kind."
    },
    {
        "id": 17891,
        "statement": "is(anne, blue) :- is(anne, quiet), is(anne, white).",
        "description": "If Anne is quiet and Anne is white then Anne is blue."
    },
    {
        "id": 17892,
        "statement": "is(X, big) :- is(X, white), is(X, blue).",
        "description": "All white, blue people are big."
    },
    {
        "id": 17893,
        "statement": "is(anne, big) :- is(anne, quiet), is(anne, blue).",
        "description": "If Anne is quiet and Anne is blue then Anne is big."
    },
    {
        "id": 17894,
        "statement": "likes(tiger, cat) :- likes(tiger, dog).",
        "description": "If the tiger likes the dog then the tiger likes the cat."
    },
    {
        "id": 17895,
        "statement": "likes(X, mouse) :- likes(X, dog), needs(X, mouse).",
        "description": "If someone likes the dog and they need the mouse then they like the mouse."
    },
    {
        "id": 17896,
        "statement": "eats(X, dog) :- likes(X, dog).",
        "description": "If someone likes the dog then they eat the dog."
    },
    {
        "id": 17897,
        "statement": "needs(X, mouse) :- eats(X, mouse).",
        "description": "If someone eats the mouse then they need the mouse."
    },
    {
        "id": 17898,
        "statement": "is(X, rough) :- likes(X, tiger), eats(tiger, dog).",
        "description": "If someone likes the tiger and the tiger eats the dog then they are rough."
    },
    {
        "id": 17899,
        "statement": "likes(X, dog) :- needs(X, tiger), is(tiger, big).",
        "description": "If someone needs the tiger and the tiger is big then they like the dog."
    },
    {
        "id": 17900,
        "statement": "is(tiger, rough) :- needs(X, tiger).",
        "description": "If someone needs the tiger then the tiger is rough."
    },
    {
        "id": 17901,
        "statement": "is(bald_eagle, kind) :- needs(X, bald_eagle).",
        "description": "If something needs the bald eagle then the bald eagle is kind."
    },
    {
        "id": 17902,
        "statement": "eats(cat, tiger) :- eats(squirrel, cat).",
        "description": "If the squirrel eats the cat then the cat eats the tiger."
    },
    {
        "id": 17903,
        "statement": "needs(X, cat) :- eats(X, squirrel), eats(X, tiger).",
        "description": "If something eats the squirrel and it eats the tiger then it needs the cat."
    },
    {
        "id": 17904,
        "statement": "needs(squirrel, tiger) :- visits(X, squirrel), is(squirrel, blue).",
        "description": "If something visits the squirrel and the squirrel is blue then the squirrel needs the tiger."
    },
    {
        "id": 17905,
        "statement": "visits(X, cat) :- is(X, nice), is(X, kind).",
        "description": "If something is nice and kind then it visits the cat."
    },
    {
        "id": 17906,
        "statement": "eats(tiger, cat) :- is(X, kind), eats(X, tiger).",
        "description": "If something is kind and it eats the tiger then the tiger eats the cat."
    },
    {
        "id": 17907,
        "statement": "needs(X, bald_eagle) :- visits(X, tiger).",
        "description": "If something visits the tiger then it needs the bald eagle."
    },
    {
        "id": 17908,
        "statement": "is(X, quiet) :- is(X, cold), is(X, white).",
        "description": "All cold, white people are quiet."
    },
    {
        "id": 17909,
        "statement": "is(X, big) :- is(X, cold), is(X, blue).",
        "description": "All cold, blue people are big."
    },
    {
        "id": 17910,
        "statement": "is(X, white) :- is(X, red), is(X, quiet).",
        "description": "If someone is red and quiet then they are white."
    },
    {
        "id": 17911,
        "statement": "is(X, young) :- is(X, round), is(X, white).",
        "description": "If someone is round and white then they are young."
    },
    {
        "id": 17912,
        "statement": "eats(X, rabbit) :- chases(X, rabbit), is(rabbit, kind).",
        "description": "If someone chases the rabbit and the rabbit is kind then they eat the rabbit."
    },
    {
        "id": 17913,
        "statement": "is(rabbit, rough) :- eats(X, rabbit).",
        "description": "If someone eats the rabbit then the rabbit is rough."
    },
    {
        "id": 17914,
        "statement": "is(rabbit, big) :- visits(rabbit, squirrel).",
        "description": "If the rabbit visits the squirrel then the rabbit is big."
    },
    {
        "id": 17915,
        "statement": "is(X, green) :- is(X, nice), is(X, big).",
        "description": "Nice, big people are green."
    },
    {
        "id": 17916,
        "statement": "visits(squirrel, rabbit) :- visits(rabbit, squirrel), eats(rabbit, bald_eagle).",
        "description": "If the rabbit visits the squirrel and the rabbit eats the bald eagle then the squirrel visits the rabbit."
    },
    {
        "id": 17917,
        "statement": "is(X, big) :- eats(X, rabbit).",
        "description": "If someone eats the rabbit then they are big."
    },
    {
        "id": 17918,
        "statement": "is(X, kind) :- visits(X, bald_eagle).",
        "description": "If someone visits the bald eagle then they are kind."
    },
    {
        "id": 17919,
        "statement": "visits(rabbit, lion) :- visits(X, rabbit), is(X, big).",
        "description": "If someone visits the rabbit and they are big then the rabbit visits the lion."
    },
    {
        "id": 17920,
        "statement": "is(X, green) :- is(X, quiet), is(X, blue).",
        "description": "Quiet, blue people are green."
    },
    {
        "id": 17921,
        "statement": "is(erin, young) :- is(erin, furry), is(erin, quiet).",
        "description": "If Erin is furry and Erin is quiet then Erin is young."
    },
    {
        "id": 17922,
        "statement": "is(X, big) :- is(X, cold), is(X, kind).",
        "description": "If something is cold and kind then it is big."
    },
    {
        "id": 17923,
        "statement": "is(X, white) :- is(X, kind), is(X, red).",
        "description": "If something is kind and red then it is white."
    },
    {
        "id": 17924,
        "statement": "is(X, big) :- is(X, round), is(X, cold).",
        "description": "If something is round and cold then it is big."
    },
    {
        "id": 17925,
        "statement": "is(X, cold) :- is(X, round), is(X, red).",
        "description": "All round, red things are cold."
    },
    {
        "id": 17926,
        "statement": "likes(cow, dog) :- eats(X, cow), is(X, cold).",
        "description": "If someone eats the cow and they are cold then the cow likes the dog."
    },
    {
        "id": 17927,
        "statement": "is(dog, cold) :- likes(X, dog).",
        "description": "If someone likes the dog then the dog is cold."
    },
    {
        "id": 17928,
        "statement": "likes(X, dog) :- eats(X, dog).",
        "description": "If someone eats the dog then they like the dog."
    },
    {
        "id": 17929,
        "statement": "eats(X, cow) :- is(X, kind), is(X, young).",
        "description": "If someone is kind and young then they eat the cow."
    },
    {
        "id": 17930,
        "statement": "eats(lion, cow) :- likes(lion, bear), sees(bear, lion).",
        "description": "If the lion likes the bear and the bear sees the lion then the lion eats the cow."
    },
    {
        "id": 17931,
        "statement": "sees(X, dog) :- eats(X, lion).",
        "description": "If someone eats the lion then they see the dog."
    },
    {
        "id": 17932,
        "statement": "sees(X, lion) :- eats(X, cow).",
        "description": "If someone eats the cow then they see the lion."
    },
    {
        "id": 17933,
        "statement": "sees(bear, lion) :- is(lion, young), likes(lion, bear).",
        "description": "If the lion is young and the lion likes the bear then the bear sees the lion."
    },
    {
        "id": 17934,
        "statement": "likes(X, lion) :- needs(X, mouse).",
        "description": "If someone needs the mouse then they like the lion."
    },
    {
        "id": 17935,
        "statement": "eats(mouse, lion) :- is(mouse, nice).",
        "description": "If the mouse is nice then the mouse eats the lion."
    },
    {
        "id": 17936,
        "statement": "eats(lion, cat) :- is(lion, nice).",
        "description": "If the lion is nice then the lion eats the cat."
    },
    {
        "id": 17937,
        "statement": "likes(X, tiger) :- eats(X, lion), not likes(X, lion).",
        "description": "If someone eats the lion and they do not like the lion then they like the tiger."
    },
    {
        "id": 17938,
        "statement": "is(X, cold) :- likes(X, tiger).",
        "description": "If someone likes the tiger then they are cold."
    },
    {
        "id": 17939,
        "statement": "eats(X, lion) :- likes(X, cat).",
        "description": "If someone likes the cat then they eat the lion."
    },
    {
        "id": 17940,
        "statement": "likes(X, cat) :- eats(X, cat), not needs(X, cat).",
        "description": "If someone eats the cat and they do not need the cat then they like the cat."
    },
    {
        "id": 17941,
        "statement": "is(X, white) :- is(X, round), is(X, blue).",
        "description": "If someone is round and blue then they are white."
    },
    {
        "id": 17942,
        "statement": "is(X, cold) :- is(X, young), is(X, round).",
        "description": "Young, round people are cold."
    },
    {
        "id": 17943,
        "statement": "is(X, rough) :- is(X, blue), is(X, young).",
        "description": "All blue, young people are rough."
    },
    {
        "id": 17944,
        "statement": "is(erin, green) :- is(erin, big), is(erin, furry).",
        "description": "If Erin is big and Erin is furry then Erin is green."
    },
    {
        "id": 17945,
        "statement": "is(X, red) :- is(X, rough), is(X, cold).",
        "description": "If something is rough and cold then it is red."
    },
    {
        "id": 17946,
        "statement": "is(X, blue) :- is(X, rough), is(X, cold).",
        "description": "All rough, cold things are blue."
    },
    {
        "id": 17947,
        "statement": "is(erin, white) :- is(erin, cold), is(erin, blue).",
        "description": "If Erin is cold and Erin is blue then Erin is white."
    },
    {
        "id": 17948,
        "statement": "is(X, furry) :- is(X, nice), is(X, big).",
        "description": "If something is nice and big then it is furry."
    },
    {
        "id": 17949,
        "statement": "is(fiona, cold) :- is(fiona, young), not is(fiona, furry).",
        "description": "If Fiona is young and Fiona is not furry then Fiona is cold."
    },
    {
        "id": 17950,
        "statement": "is(X, smart) :- is(X, nice), is(X, big).",
        "description": "Nice, big things are smart."
    },
    {
        "id": 17951,
        "statement": "is(X, smart) :- is(X, blue), is(X, green).",
        "description": "If something is blue and green then it is smart."
    },
    {
        "id": 17952,
        "statement": "is(X, blue) :- is(X, smart), is(X, rough).",
        "description": "All smart, rough things are blue."
    },
    {
        "id": 17953,
        "statement": "is(dave, blue) :- is(dave, rough).",
        "description": "If Dave is rough then Dave is blue."
    },
    {
        "id": 17954,
        "statement": "is(X, green) :- is(X, kind), is(X, red).",
        "description": "All kind, red people are green."
    },
    {
        "id": 17955,
        "statement": "eats(dog, lion) :- visits(X, cat), sees(X, dog).",
        "description": "If something visits the cat and it sees the dog then the dog eats the lion."
    },
    {
        "id": 17956,
        "statement": "visits(cat, cow) :- sees(cat, cow), eats(cow, cat).",
        "description": "If the cat sees the cow and the cow eats the cat then the cat visits the cow."
    },
    {
        "id": 17957,
        "statement": "visits(X, cow) :- is(X, red), visits(X, dog).",
        "description": "If something is red and it visits the dog then it visits the cow."
    },
    {
        "id": 17958,
        "statement": "is(dog, cold) :- sees(X, dog), sees(dog, cat).",
        "description": "If something sees the dog and the dog sees the cat then the dog is cold."
    },
    {
        "id": 17959,
        "statement": "sees(cat, lion) :- visits(X, dog), visits(dog, cat).",
        "description": "If something visits the dog and the dog visits the cat then the cat sees the lion."
    },
    {
        "id": 17960,
        "statement": "visits(X, cat) :- sees(X, cow).",
        "description": "If something sees the cow then it visits the cat."
    },
    {
        "id": 17961,
        "statement": "sees(X, dog) :- sees(X, lion).",
        "description": "If something sees the lion then it sees the dog."
    },
    {
        "id": 17962,
        "statement": "sees(dog, cow) :- sees(X, dog), eats(dog, cat).",
        "description": "If something sees the dog and the dog eats the cat then the dog sees the cow."
    },
    {
        "id": 17963,
        "statement": "needs(bald_eagle, squirrel) :- likes(X, bald_eagle).",
        "description": "If someone likes the bald eagle then the bald eagle needs the squirrel."
    },
    {
        "id": 17964,
        "statement": "is(X, nice) :- needs(X, bald_eagle).",
        "description": "If someone needs the bald eagle then they are nice."
    },
    {
        "id": 17965,
        "statement": "needs(X, squirrel) :- is(X, nice).",
        "description": "If someone is nice then they need the squirrel."
    },
    {
        "id": 17966,
        "statement": "is(rabbit, kind) :- needs(X, rabbit).",
        "description": "If someone needs the rabbit then the rabbit is kind."
    },
    {
        "id": 17967,
        "statement": "visits(X, cat) :- is(X, nice).",
        "description": "If someone is nice then they visit the cat."
    },
    {
        "id": 17968,
        "statement": "visits(dog, rabbit) :- chases(X, dog), needs(dog, rabbit).",
        "description": "If someone chases the dog and the dog needs the rabbit then the dog visits the rabbit."
    },
    {
        "id": 17969,
        "statement": "is(bear, red) :- is(bear, nice), is(bear, rough).",
        "description": "If the bear is nice and the bear is rough then the bear is red."
    },
    {
        "id": 17970,
        "statement": "is(cat, nice) :- visits(X, cat), not needs(X, dog).",
        "description": "If someone visits the cat and they do not need the dog then the cat is nice."
    },
    {
        "id": 17971,
        "statement": "needs(X, rabbit) :- chases(X, cat).",
        "description": "If someone chases the cat then they need the rabbit."
    },
    {
        "id": 17972,
        "statement": "is(X, blue) :- is(X, round), is(X, white).",
        "description": "If someone is round and white then they are blue."
    },
    {
        "id": 17973,
        "statement": "is(X, rough) :- is(X, round), is(X, blue).",
        "description": "If someone is round and blue then they are rough."
    },
    {
        "id": 17974,
        "statement": "is(fiona, nice) :- is(fiona, quiet), is(fiona, smart).",
        "description": "If Fiona is quiet and Fiona is smart then Fiona is nice."
    },
    {
        "id": 17975,
        "statement": "is(gary, red) :- is(gary, quiet), is(gary, white).",
        "description": "If Gary is quiet and Gary is white then Gary is red."
    },
    {
        "id": 17976,
        "statement": "is(dave, quiet) :- not is(dave, nice).",
        "description": "If Dave is not nice then Dave is quiet."
    },
    {
        "id": 17977,
        "statement": "is(X, green) :- is(X, nice), is(X, big).",
        "description": "All nice, big people are green."
    },
    {
        "id": 17978,
        "statement": "is(X, young) :- is(X, white), is(X, kind).",
        "description": "White, kind people are young."
    },
    {
        "id": 17979,
        "statement": "is(X, white) :- is(X, blue), is(X, big).",
        "description": "All blue, big people are white."
    },
    {
        "id": 17980,
        "statement": "is(dave, big) :- is(dave, quiet).",
        "description": "If Dave is quiet then Dave is big."
    },
    {
        "id": 17981,
        "statement": "is(X, green) :- is(X, round), is(X, kind).",
        "description": "If someone is round and kind then they are green."
    },
    {
        "id": 17982,
        "statement": "is(X, cold) :- is(X, kind), is(X, round).",
        "description": "If someone is kind and round then they are cold."
    },
    {
        "id": 17983,
        "statement": "is(fiona, rough) :- is(fiona, red), is(fiona, green).",
        "description": "If Fiona is red and Fiona is green then Fiona is rough."
    },
    {
        "id": 17984,
        "statement": "is(X, round) :- is(X, cold), is(X, young).",
        "description": "Cold, young people are round."
    },
    {
        "id": 17985,
        "statement": "is(X, kind) :- is(X, green), is(X, young).",
        "description": "If someone is green and young then they are kind."
    },
    {
        "id": 17986,
        "statement": "is(X, kind) :- is(X, round), is(X, rough).",
        "description": "All round, rough people are kind."
    },
    {
        "id": 17987,
        "statement": "sees(lion, bald_eagle) :- eats(X, lion), is(X, green).",
        "description": "If someone eats the lion and they are green then the lion sees the bald eagle."
    },
    {
        "id": 17988,
        "statement": "is(bald_eagle, green) :- eats(bear, lion), sees(bear, bald_eagle).",
        "description": "If the bear eats the lion and the bear sees the bald eagle then the bald eagle is green."
    },
    {
        "id": 17989,
        "statement": "chases(X, bald_eagle) :- is(X, nice), not is(X, big).",
        "description": "If someone is nice and not big then they chase the bald eagle."
    },
    {
        "id": 17990,
        "statement": "eats(X, cow) :- eats(X, lion), sees(lion, bald_eagle).",
        "description": "If someone eats the lion and the lion sees the bald eagle then they eat the cow."
    },
    {
        "id": 17991,
        "statement": "sees(bald_eagle, lion) :- is(bear, cold), chases(bear, bald_eagle).",
        "description": "If the bear is cold and the bear chases the bald eagle then the bald eagle sees the lion."
    },
    {
        "id": 17992,
        "statement": "is(cow, green) :- eats(X, cow), not is(X, blue).",
        "description": "If someone eats the cow and they are not blue then the cow is green."
    },
    {
        "id": 17993,
        "statement": "is(X, quiet) :- is(X, young), is(X, red).",
        "description": "If someone is young and red then they are quiet."
    },
    {
        "id": 17994,
        "statement": "is(bob, big) :- not is(bob, red).",
        "description": "If Bob is not red then Bob is big."
    },
    {
        "id": 17995,
        "statement": "is(X, big) :- is(X, white), is(X, red).",
        "description": "If someone is white and red then they are big."
    },
    {
        "id": 17996,
        "statement": "likes(X, rabbit) :- likes(X, cow).",
        "description": "If someone likes the cow then they like the rabbit."
    },
    {
        "id": 17997,
        "statement": "eats(X, rabbit) :- needs(X, cat).",
        "description": "If someone needs the cat then they eat the rabbit."
    },
    {
        "id": 17998,
        "statement": "eats(X, bald_eagle) :- likes(X, rabbit).",
        "description": "If someone likes the rabbit then they eat the bald eagle."
    },
    {
        "id": 17999,
        "statement": "eats(bald_eagle, rabbit) :- likes(X, cat), likes(X, bald_eagle).",
        "description": "If someone likes the cat and they like the bald eagle then the bald eagle eats the rabbit."
    },
    {
        "id": 18000,
        "statement": "likes(X, cow) :- eats(X, rabbit).",
        "description": "If someone eats the rabbit then they like the cow."
    },
    {
        "id": 18001,
        "statement": "likes(cat, bald_eagle) :- eats(X, cat).",
        "description": "If someone eats the cat then the cat likes the bald eagle."
    },
    {
        "id": 18002,
        "statement": "needs(X, rabbit) :- likes(X, bald_eagle).",
        "description": "If someone likes the bald eagle then they need the rabbit."
    },
    {
        "id": 18003,
        "statement": "eats(X, cat) :- eats(X, bald_eagle), is(bald_eagle, kind).",
        "description": "If someone eats the bald eagle and the bald eagle is kind then they eat the cat."
    },
    {
        "id": 18004,
        "statement": "visits(squirrel, cow) :- chases(cow, squirrel).",
        "description": "If the cow chases the squirrel then the squirrel visits the cow."
    },
    {
        "id": 18005,
        "statement": "is(squirrel, rough) :- eats(lion, bear), eats(bear, squirrel).",
        "description": "If the lion eats the bear and the bear eats the squirrel then the squirrel is rough."
    },
    {
        "id": 18006,
        "statement": "is(lion, young) :- chases(X, lion).",
        "description": "If someone chases the lion then the lion is young."
    },
    {
        "id": 18007,
        "statement": "visits(X, bear) :- visits(X, squirrel).",
        "description": "If someone visits the squirrel then they visit the bear."
    },
    {
        "id": 18008,
        "statement": "visits(lion, cow) :- is(lion, cold), not chases(lion, squirrel).",
        "description": "If the lion is cold and the lion does not chase the squirrel then the lion visits the cow."
    },
    {
        "id": 18009,
        "statement": "is(bear, young) :- visits(X, cow), not visits(X, bear).",
        "description": "If someone visits the cow and they do not visit the bear then the bear is young."
    },
    {
        "id": 18010,
        "statement": "is(dave, big) :- is(dave, green).",
        "description": "If Dave is green then Dave is big."
    },
    {
        "id": 18011,
        "statement": "is(erin, round) :- is(erin, young).",
        "description": "If Erin is young then Erin is round."
    },
    {
        "id": 18012,
        "statement": "is(gary, blue) :- is(gary, big), is(gary, round).",
        "description": "If Gary is big and Gary is round then Gary is blue."
    },
    {
        "id": 18013,
        "statement": "is(X, furry) :- is(X, green), is(X, big).",
        "description": "All green, big people are furry."
    },
    {
        "id": 18014,
        "statement": "is(X, nice) :- is(X, green), is(X, smart).",
        "description": "Green, smart things are nice."
    },
    {
        "id": 18015,
        "statement": "is(dave, kind) :- is(dave, smart), not is(dave, nice).",
        "description": "If Dave is smart and Dave is not nice then Dave is kind."
    },
    {
        "id": 18016,
        "statement": "is(X, furry) :- is(X, smart), not is(X, kind).",
        "description": "If something is smart and not kind then it is furry."
    },
    {
        "id": 18017,
        "statement": "is(X, round) :- is(X, green), is(X, smart).",
        "description": "If someone is green and smart then they are round."
    },
    {
        "id": 18018,
        "statement": "is(X, round) :- is(X, young), is(X, big).",
        "description": "If someone is young and big then they are round."
    },
    {
        "id": 18019,
        "statement": "is(X, quiet) :- is(X, white), not is(X, round).",
        "description": "If something is white and not round then it is quiet."
    },
    {
        "id": 18020,
        "statement": "is(X, white) :- is(X, blue), is(X, red).",
        "description": "If something is blue and red then it is white."
    },
    {
        "id": 18021,
        "statement": "is(anne, young) :- is(anne, furry), is(anne, blue).",
        "description": "If Anne is furry and Anne is blue then Anne is young."
    },
    {
        "id": 18022,
        "statement": "is(X, furry) :- is(X, white), is(X, quiet).",
        "description": "If something is white and quiet then it is furry."
    },
    {
        "id": 18023,
        "statement": "is(X, nice) :- is(X, white), is(X, smart).",
        "description": "If someone is white and smart then they are nice."
    },
    {
        "id": 18024,
        "statement": "is(X, smart) :- is(X, rough), is(X, white).",
        "description": "Rough, white people are smart."
    },
    {
        "id": 18025,
        "statement": "is(X, blue) :- is(X, white), is(X, nice).",
        "description": "White, nice people are blue."
    },
    {
        "id": 18026,
        "statement": "is(X, furry) :- is(X, blue), is(X, big).",
        "description": "If someone is blue and big then they are furry."
    },
    {
        "id": 18027,
        "statement": "is(X, cold) :- is(X, kind), is(X, red).",
        "description": "If someone is kind and red then they are cold."
    },
    {
        "id": 18028,
        "statement": "is(dave, cold) :- is(dave, green), is(dave, smart).",
        "description": "If Dave is green and Dave is smart then Dave is cold."
    },
    {
        "id": 18029,
        "statement": "is(X, kind) :- is(X, nice), not is(X, big).",
        "description": "If someone is nice and not big then they are kind."
    },
    {
        "id": 18030,
        "statement": "is(X, quiet) :- is(X, rough), is(X, white).",
        "description": "If someone is rough and white then they are quiet."
    },
    {
        "id": 18031,
        "statement": "is(charlie, furry) :- not is(charlie, big).",
        "description": "If Charlie is not big then Charlie is furry."
    },
    {
        "id": 18032,
        "statement": "is(charlie, rough) :- is(charlie, big), is(charlie, nice).",
        "description": "If Charlie is big and Charlie is nice then Charlie is rough."
    },
    {
        "id": 18033,
        "statement": "is(X, rough) :- is(X, quiet), is(X, kind).",
        "description": "All quiet, kind people are rough."
    },
    {
        "id": 18034,
        "statement": "is(X, furry) :- is(X, young), is(X, kind).",
        "description": "Young, kind people are furry."
    },
    {
        "id": 18035,
        "statement": "is(X, white) :- is(X, red), not is(X, round).",
        "description": "If someone is red and not round then they are white."
    },
    {
        "id": 18036,
        "statement": "is(X, red) :- is(X, kind), is(X, round).",
        "description": "Kind, round people are red."
    },
    {
        "id": 18037,
        "statement": "is(X, red) :- is(X, round), is(X, young).",
        "description": "Round, young people are red."
    },
    {
        "id": 18038,
        "statement": "is(dave, green) :- is(dave, kind), is(dave, quiet).",
        "description": "If Dave is kind and Dave is quiet then Dave is green."
    },
    {
        "id": 18039,
        "statement": "is(X, smart) :- is(X, quiet), is(X, green).",
        "description": "If something is quiet and green then it is smart."
    },
    {
        "id": 18040,
        "statement": "is(X, white) :- is(X, kind), is(X, smart).",
        "description": "All kind, smart things are white."
    },
    {
        "id": 18041,
        "statement": "is(charlie, kind) :- is(charlie, round), is(charlie, young).",
        "description": "If Charlie is round and Charlie is young then Charlie is kind."
    },
    {
        "id": 18042,
        "statement": "is(X, green) :- is(X, smart), is(X, kind).",
        "description": "All smart, kind people are green."
    },
    {
        "id": 18043,
        "statement": "is(dave, green) :- is(dave, red), not is(dave, young).",
        "description": "If Dave is red and Dave is not young then Dave is green."
    },
    {
        "id": 18044,
        "statement": "is(X, quiet) :- is(X, green), is(X, young).",
        "description": "All green, young things are quiet."
    },
    {
        "id": 18045,
        "statement": "is(X, red) :- is(X, green), not is(X, big).",
        "description": "If something is green and not big then it is red."
    },
    {
        "id": 18046,
        "statement": "is(bob, young) :- is(bob, round), is(bob, rough).",
        "description": "If Bob is round and Bob is rough then Bob is young."
    },
    {
        "id": 18047,
        "statement": "sees(cat, squirrel) :- eats(X, cat).",
        "description": "If something eats the cat then the cat sees the squirrel."
    },
    {
        "id": 18048,
        "statement": "is(X, young) :- sees(X, mouse), chases(X, tiger).",
        "description": "If something sees the mouse and it chases the tiger then it is young."
    },
    {
        "id": 18049,
        "statement": "eats(X, squirrel) :- sees(X, cat).",
        "description": "If something sees the cat then it eats the squirrel."
    },
    {
        "id": 18050,
        "statement": "chases(squirrel, tiger) :- eats(X, squirrel).",
        "description": "If something eats the squirrel then the squirrel chases the tiger."
    },
    {
        "id": 18051,
        "statement": "is(X, rough) :- is(X, young), chases(X, mouse).",
        "description": "If something is young and it chases the mouse then it is rough."
    },
    {
        "id": 18052,
        "statement": "sees(X, mouse) :- eats(X, dog).",
        "description": "If someone eats the dog then they see the mouse."
    },
    {
        "id": 18053,
        "statement": "sees(X, dog) :- needs(X, cat).",
        "description": "If someone needs the cat then they see the dog."
    },
    {
        "id": 18054,
        "statement": "eats(X, tiger) :- sees(X, dog), sees(X, mouse).",
        "description": "If someone sees the dog and they see the mouse then they eat the tiger."
    },
    {
        "id": 18055,
        "statement": "is(mouse, green) :- is(mouse, big).",
        "description": "If the mouse is big then the mouse is green."
    },
    {
        "id": 18056,
        "statement": "needs(tiger, cat) :- needs(X, tiger).",
        "description": "If someone needs the tiger then the tiger needs the cat."
    },
    {
        "id": 18057,
        "statement": "eats(X, mouse) :- needs(X, mouse).",
        "description": "If someone needs the mouse then they eat the mouse."
    },
    {
        "id": 18058,
        "statement": "is(X, nice) :- sees(X, tiger).",
        "description": "If someone sees the tiger then they are nice."
    },
    {
        "id": 18059,
        "statement": "is(X, cold) :- is(X, big), is(X, nice).",
        "description": "All big, nice things are cold."
    },
    {
        "id": 18060,
        "statement": "is(charlie, furry) :- is(charlie, round), is(charlie, green).",
        "description": "If Charlie is round and Charlie is green then Charlie is furry."
    },
    {
        "id": 18061,
        "statement": "is(X, quiet) :- is(X, cold), is(X, green).",
        "description": "Cold, green things are quiet."
    },
    {
        "id": 18062,
        "statement": "is(X, white) :- is(X, cold), is(X, quiet).",
        "description": "All cold, quiet things are white."
    },
    {
        "id": 18063,
        "statement": "is(X, smart) :- is(X, white), is(X, round).",
        "description": "All white, round things are smart."
    },
    {
        "id": 18064,
        "statement": "is(X, smart) :- is(X, white), is(X, nice).",
        "description": "If something is white and nice then it is smart."
    },
    {
        "id": 18065,
        "statement": "is(bear, cold) :- sees(rabbit, bear), chases(bear, rabbit).",
        "description": "If the rabbit sees the bear and the bear chases the rabbit then the bear is cold."
    },
    {
        "id": 18066,
        "statement": "sees(X, squirrel) :- is(X, blue), is(X, kind).",
        "description": "If something is blue and kind then it sees the squirrel."
    },
    {
        "id": 18067,
        "statement": "sees(X, rabbit) :- is(X, cold), not sees(X, tiger).",
        "description": "If something is cold and it does not see the tiger then it sees the rabbit."
    },
    {
        "id": 18068,
        "statement": "is(X, cold) :- eats(X, squirrel).",
        "description": "If something eats the squirrel then it is cold."
    },
    {
        "id": 18069,
        "statement": "eats(tiger, squirrel) :- chases(X, tiger), chases(tiger, squirrel).",
        "description": "If something chases the tiger and the tiger chases the squirrel then the tiger eats the squirrel."
    },
    {
        "id": 18070,
        "statement": "chases(X, tiger) :- is(X, round), is(X, kind).",
        "description": "If something is round and kind then it chases the tiger."
    },
    {
        "id": 18071,
        "statement": "is(bear, round) :- eats(X, bear), not is(X, nice).",
        "description": "If something eats the bear and it is not nice then the bear is round."
    },
    {
        "id": 18072,
        "statement": "is(X, green) :- is(X, round), is(X, big).",
        "description": "Round, big people are green."
    },
    {
        "id": 18073,
        "statement": "is(X, green) :- is(X, big), is(X, rough).",
        "description": "Big, rough people are green."
    },
    {
        "id": 18074,
        "statement": "is(fiona, big) :- is(fiona, quiet), is(fiona, furry).",
        "description": "If Fiona is quiet and Fiona is furry then Fiona is big."
    },
    {
        "id": 18075,
        "statement": "is(X, round) :- is(X, green), is(X, blue).",
        "description": "If someone is green and blue then they are round."
    },
    {
        "id": 18076,
        "statement": "is(erin, blue) :- is(erin, quiet), not is(erin, rough).",
        "description": "If Erin is quiet and Erin is not rough then Erin is blue."
    },
    {
        "id": 18077,
        "statement": "is(gary, big) :- is(gary, quiet), is(gary, rough).",
        "description": "If Gary is quiet and Gary is rough then Gary is big."
    },
    {
        "id": 18078,
        "statement": "is(X, furry) :- is(X, quiet), is(X, big).",
        "description": "If something is quiet and big then it is furry."
    },
    {
        "id": 18079,
        "statement": "is(X, blue) :- is(X, quiet), is(X, cold).",
        "description": "All quiet, cold things are blue."
    },
    {
        "id": 18080,
        "statement": "is(fiona, green) :- is(fiona, cold), is(fiona, blue).",
        "description": "If Fiona is cold and Fiona is blue then Fiona is green."
    },
    {
        "id": 18081,
        "statement": "likes(X, rabbit) :- likes(X, dog), chases(dog, rabbit).",
        "description": "If something likes the dog and the dog chases the rabbit then it likes the rabbit."
    },
    {
        "id": 18082,
        "statement": "sees(bald_eagle, dog) :- sees(X, bald_eagle), likes(X, bear).",
        "description": "If something sees the bald eagle and it likes the bear then the bald eagle sees the dog."
    },
    {
        "id": 18083,
        "statement": "likes(X, rabbit) :- is(X, cold).",
        "description": "If something is cold then it likes the rabbit."
    },
    {
        "id": 18084,
        "statement": "likes(bear, bald_eagle) :- likes(X, bear), chases(X, dog).",
        "description": "If something likes the bear and it chases the dog then the bear likes the bald eagle."
    },
    {
        "id": 18085,
        "statement": "chases(X, rabbit) :- sees(X, dog).",
        "description": "If something sees the dog then it chases the rabbit."
    },
    {
        "id": 18086,
        "statement": "is(X, blue) :- is(X, young), is(X, red).",
        "description": "Young, red people are blue."
    },
    {
        "id": 18087,
        "statement": "is(X, rough) :- is(X, red), is(X, young).",
        "description": "If someone is red and young then they are rough."
    },
    {
        "id": 18088,
        "statement": "is(X, nice) :- is(X, young), is(X, smart).",
        "description": "Young, smart people are nice."
    },
    {
        "id": 18089,
        "statement": "is(X, rough) :- is(X, round), is(X, nice).",
        "description": "Round, nice people are rough."
    },
    {
        "id": 18090,
        "statement": "is(X, cold) :- is(X, blue), not is(X, nice).",
        "description": "If something is blue and not nice then it is cold."
    },
    {
        "id": 18091,
        "statement": "is(X, red) :- is(X, blue), not is(X, young).",
        "description": "If something is blue and not young then it is red."
    },
    {
        "id": 18092,
        "statement": "is(anne, furry) :- is(anne, green).",
        "description": "If Anne is green then Anne is furry."
    },
    {
        "id": 18093,
        "statement": "is(harry, kind) :- is(harry, green), is(harry, round).",
        "description": "If Harry is green and Harry is round then Harry is kind."
    },
    {
        "id": 18094,
        "statement": "is(X, big) :- is(X, furry), is(X, green).",
        "description": "All furry, green things are big."
    },
    {
        "id": 18095,
        "statement": "is(charlie, round) :- is(charlie, green).",
        "description": "If Charlie is green then Charlie is round."
    },
    {
        "id": 18096,
        "statement": "is(harry, blue) :- is(harry, round).",
        "description": "If Harry is round then Harry is blue."
    },
    {
        "id": 18097,
        "statement": "is(X, white) :- is(X, rough), is(X, kind).",
        "description": "Rough, kind things are white."
    },
    {
        "id": 18098,
        "statement": "is(charlie, kind) :- is(charlie, quiet), is(charlie, rough).",
        "description": "If Charlie is quiet and Charlie is rough then Charlie is kind."
    },
    {
        "id": 18099,
        "statement": "is(charlie, round) :- is(charlie, quiet), is(charlie, kind).",
        "description": "If Charlie is quiet and Charlie is kind then Charlie is round."
    },
    {
        "id": 18100,
        "statement": "is(erin, round) :- is(erin, nice), not is(erin, quiet).",
        "description": "If Erin is nice and Erin is not quiet then Erin is round."
    },
    {
        "id": 18101,
        "statement": "is(X, green) :- is(X, furry), is(X, cold).",
        "description": "All furry, cold things are green."
    },
    {
        "id": 18102,
        "statement": "chases(cow, dog) :- eats(X, cow).",
        "description": "If someone eats the cow then the cow chases the dog."
    },
    {
        "id": 18103,
        "statement": "is(X, blue) :- chases(X, cow), chases(cow, squirrel).",
        "description": "If someone chases the cow and the cow chases the squirrel then they are blue."
    },
    {
        "id": 18104,
        "statement": "eats(X, cow) :- chases(X, dog).",
        "description": "If someone chases the dog then they eat the cow."
    },
    {
        "id": 18105,
        "statement": "eats(squirrel, bald_eagle) :- chases(X, squirrel), is(squirrel, big).",
        "description": "If someone chases the squirrel and the squirrel is big then the squirrel eats the bald eagle."
    },
    {
        "id": 18106,
        "statement": "eats(squirrel, dog) :- is(X, big), visits(X, squirrel).",
        "description": "If someone is big and they visit the squirrel then the squirrel eats the dog."
    },
    {
        "id": 18107,
        "statement": "is(bald_eagle, young) :- is(X, blue), chases(X, bald_eagle).",
        "description": "If someone is blue and they chase the bald eagle then the bald eagle is young."
    },
    {
        "id": 18108,
        "statement": "needs(X, cow) :- chases(X, tiger).",
        "description": "If something chases the tiger then it needs the cow."
    },
    {
        "id": 18109,
        "statement": "is(squirrel, blue) :- needs(X, squirrel).",
        "description": "If something needs the squirrel then the squirrel is blue."
    },
    {
        "id": 18110,
        "statement": "is(tiger, red) :- not chases(dog, tiger).",
        "description": "If the dog does not chase the tiger then the tiger is red."
    },
    {
        "id": 18111,
        "statement": "needs(X, tiger) :- needs(X, dog).",
        "description": "If something needs the dog then it needs the tiger."
    },
    {
        "id": 18112,
        "statement": "is(X, blue) :- chases(X, squirrel), not eats(squirrel, cow).",
        "description": "If something chases the squirrel and the squirrel does not eat the cow then it is blue."
    },
    {
        "id": 18113,
        "statement": "is(squirrel, green) :- not is(squirrel, cold).",
        "description": "If the squirrel is not cold then the squirrel is green."
    },
    {
        "id": 18114,
        "statement": "is(gary, nice) :- is(gary, blue), is(gary, rough).",
        "description": "If Gary is blue and Gary is rough then Gary is nice."
    },
    {
        "id": 18115,
        "statement": "is(X, furry) :- is(X, red), is(X, blue).",
        "description": "Red, blue people are furry."
    },
    {
        "id": 18116,
        "statement": "is(X, young) :- is(X, green), is(X, rough).",
        "description": "All green, rough people are young."
    },
    {
        "id": 18117,
        "statement": "eats(cow, bear) :- eats(X, cow).",
        "description": "If someone eats the cow then the cow eats the bear."
    },
    {
        "id": 18118,
        "statement": "needs(X, squirrel) :- needs(X, dog), is(dog, cold).",
        "description": "If someone needs the dog and the dog is cold then they need the squirrel."
    },
    {
        "id": 18119,
        "statement": "is(X, cold) :- eats(X, bear), not likes(X, bear).",
        "description": "If someone eats the bear and they do not like the bear then they are cold."
    },
    {
        "id": 18120,
        "statement": "likes(bear, cow) :- needs(X, squirrel), needs(X, bear).",
        "description": "If someone needs the squirrel and they need the bear then the bear likes the cow."
    },
    {
        "id": 18121,
        "statement": "is(dog, blue) :- not is(dog, kind), not eats(dog, bear).",
        "description": "If the dog is not kind and the dog does not eat the bear then the dog is blue."
    },
    {
        "id": 18122,
        "statement": "likes(cow, squirrel) :- is(cow, kind).",
        "description": "If the cow is kind then the cow likes the squirrel."
    },
    {
        "id": 18123,
        "statement": "eats(cow, dog) :- likes(X, cow).",
        "description": "If someone likes the cow then the cow eats the dog."
    },
    {
        "id": 18124,
        "statement": "is(X, young) :- is(X, quiet), is(X, kind).",
        "description": "Quiet, kind things are young."
    },
    {
        "id": 18125,
        "statement": "is(X, nice) :- is(X, quiet), is(X, red).",
        "description": "Quiet, red things are nice."
    },
    {
        "id": 18126,
        "statement": "is(X, cold) :- is(X, green), is(X, nice).",
        "description": "All green, nice things are cold."
    },
    {
        "id": 18127,
        "statement": "likes(X, dog) :- sees(X, bald_eagle).",
        "description": "If someone sees the bald eagle then they like the dog."
    },
    {
        "id": 18128,
        "statement": "chases(bald_eagle, squirrel) :- is(bald_eagle, rough), is(bald_eagle, young).",
        "description": "If the bald eagle is rough and the bald eagle is young then the bald eagle chases the squirrel."
    },
    {
        "id": 18129,
        "statement": "is(tiger, rough) :- likes(X, tiger), likes(tiger, bald_eagle).",
        "description": "If someone likes the tiger and the tiger likes the bald eagle then the tiger is rough."
    },
    {
        "id": 18130,
        "statement": "likes(bald_eagle, tiger) :- is(X, young), sees(X, bald_eagle).",
        "description": "If someone is young and they see the bald eagle then the bald eagle likes the tiger."
    },
    {
        "id": 18131,
        "statement": "sees(X, squirrel) :- sees(X, bald_eagle), not chases(X, bald_eagle).",
        "description": "If someone sees the bald eagle and they do not chase the bald eagle then they see the squirrel."
    },
    {
        "id": 18132,
        "statement": "sees(X, bald_eagle) :- is(X, round), chases(X, bald_eagle).",
        "description": "If someone is round and they chase the bald eagle then they see the bald eagle."
    },
    {
        "id": 18133,
        "statement": "sees(squirrel, tiger) :- sees(X, tiger), not chases(X, squirrel).",
        "description": "If someone sees the tiger and they do not chase the squirrel then the squirrel sees the tiger."
    },
    {
        "id": 18134,
        "statement": "visits(X, cow) :- is(X, big).",
        "description": "If someone is big then they visit the cow."
    },
    {
        "id": 18135,
        "statement": "is(X, big) :- sees(X, cow).",
        "description": "If someone sees the cow then they are big."
    },
    {
        "id": 18136,
        "statement": "visits(cow, cat) :- sees(cat, cow), sees(cat, bear).",
        "description": "If the cat sees the cow and the cat sees the bear then the cow visits the cat."
    },
    {
        "id": 18137,
        "statement": "visits(bear, cat) :- sees(rabbit, bear), visits(rabbit, cow).",
        "description": "If the rabbit sees the bear and the rabbit visits the cow then the bear visits the cat."
    },
    {
        "id": 18138,
        "statement": "sees(cat, cow) :- sees(bear, rabbit), not chases(cat, bear).",
        "description": "If the bear sees the rabbit and the cat does not chase the bear then the cat sees the cow."
    },
    {
        "id": 18139,
        "statement": "is(rabbit, big) :- sees(cow, rabbit).",
        "description": "If the cow sees the rabbit then the rabbit is big."
    },
    {
        "id": 18140,
        "statement": "chases(cat, cow) :- sees(cat, rabbit), visits(rabbit, cat).",
        "description": "If the cat sees the rabbit and the rabbit visits the cat then the cat chases the cow."
    },
    {
        "id": 18141,
        "statement": "sees(X, cow) :- sees(X, cat), visits(cat, cow).",
        "description": "If someone sees the cat and the cat visits the cow then they see the cow."
    },
    {
        "id": 18142,
        "statement": "likes(bear, lion) :- chases(X, bear).",
        "description": "If something chases the bear then the bear likes the lion."
    },
    {
        "id": 18143,
        "statement": "chases(X, bear) :- likes(X, lion), not likes(lion, bald_eagle).",
        "description": "If something likes the lion and the lion does not like the bald eagle then it chases the bear."
    },
    {
        "id": 18144,
        "statement": "chases(lion, bald_eagle) :- sees(X, lion).",
        "description": "If something sees the lion then the lion chases the bald eagle."
    },
    {
        "id": 18145,
        "statement": "likes(X, mouse) :- likes(X, lion).",
        "description": "If something likes the lion then it likes the mouse."
    },
    {
        "id": 18146,
        "statement": "likes(mouse, bald_eagle) :- is(mouse, round), chases(mouse, bald_eagle).",
        "description": "If the mouse is round and the mouse chases the bald eagle then the mouse likes the bald eagle."
    },
    {
        "id": 18147,
        "statement": "sees(bear, bald_eagle) :- chases(bear, lion).",
        "description": "If the bear chases the lion then the bear sees the bald eagle."
    },
    {
        "id": 18148,
        "statement": "sees(lion, mouse) :- chases(X, bear), likes(bear, lion).",
        "description": "If something chases the bear and the bear likes the lion then the lion sees the mouse."
    },
    {
        "id": 18149,
        "statement": "sees(bear, lion) :- sees(X, bear).",
        "description": "If something sees the bear then the bear sees the lion."
    },
    {
        "id": 18150,
        "statement": "is(gary, white) :- is(gary, furry), is(gary, big).",
        "description": "If Gary is furry and Gary is big then Gary is white."
    },
    {
        "id": 18151,
        "statement": "is(X, quiet) :- is(X, white), is(X, big).",
        "description": "All white, big things are quiet."
    },
    {
        "id": 18152,
        "statement": "is(bob, smart) :- is(bob, nice), is(bob, quiet).",
        "description": "If Bob is nice and Bob is quiet then Bob is smart."
    },
    {
        "id": 18153,
        "statement": "is(harry, smart) :- is(harry, nice), is(harry, big).",
        "description": "If Harry is nice and Harry is big then Harry is smart."
    },
    {
        "id": 18154,
        "statement": "is(X, big) :- is(X, nice), is(X, rough).",
        "description": "If someone is nice and rough then they are big."
    },
    {
        "id": 18155,
        "statement": "is(X, young) :- is(X, smart), is(X, cold).",
        "description": "If something is smart and cold then it is young."
    },
    {
        "id": 18156,
        "statement": "is(X, furry) :- is(X, young), is(X, quiet).",
        "description": "Young, quiet things are furry."
    },
    {
        "id": 18157,
        "statement": "is(X, young) :- is(X, furry), is(X, rough).",
        "description": "If something is furry and rough then it is young."
    },
    {
        "id": 18158,
        "statement": "is(X, blue) :- is(X, young), is(X, red).",
        "description": "All young, red things are blue."
    },
    {
        "id": 18159,
        "statement": "is(charlie, blue) :- not is(charlie, cold).",
        "description": "If Charlie is not cold then Charlie is blue."
    },
    {
        "id": 18160,
        "statement": "likes(X, cow) :- chases(X, lion).",
        "description": "If someone chases the lion then they like the cow."
    },
    {
        "id": 18161,
        "statement": "visits(cow, lion) :- chases(X, lion), likes(X, cow).",
        "description": "If someone chases the lion and they like the cow then the cow visits the lion."
    },
    {
        "id": 18162,
        "statement": "likes(X, dog) :- chases(X, dog).",
        "description": "If someone chases the dog then they like the dog."
    },
    {
        "id": 18163,
        "statement": "chases(X, lion) :- visits(X, lion).",
        "description": "If someone visits the lion then they chase the lion."
    },
    {
        "id": 18164,
        "statement": "chases(X, squirrel) :- is(X, nice), not chases(X, lion).",
        "description": "If someone is nice and they do not chase the lion then they chase the squirrel."
    },
    {
        "id": 18165,
        "statement": "likes(X, tiger) :- is(X, young).",
        "description": "If someone is young then they like the tiger."
    },
    {
        "id": 18166,
        "statement": "sees(cow, cat) :- is(cow, big).",
        "description": "If the cow is big then the cow sees the cat."
    },
    {
        "id": 18167,
        "statement": "sees(cat, tiger) :- is(X, rough), visits(X, cat).",
        "description": "If someone is rough and they visit the cat then the cat sees the tiger."
    },
    {
        "id": 18168,
        "statement": "likes(X, cow) :- sees(X, cat), is(X, young).",
        "description": "If someone sees the cat and they are young then they like the cow."
    },
    {
        "id": 18169,
        "statement": "likes(tiger, cow) :- sees(X, tiger).",
        "description": "If someone sees the tiger then the tiger likes the cow."
    },
    {
        "id": 18170,
        "statement": "visits(X, cat) :- likes(X, tiger).",
        "description": "If someone likes the tiger then they visit the cat."
    },
    {
        "id": 18171,
        "statement": "visits(tiger, cow) :- visits(X, tiger).",
        "description": "If someone visits the tiger then the tiger visits the cow."
    },
    {
        "id": 18172,
        "statement": "is(rabbit, young) :- is(rabbit, rough).",
        "description": "If the rabbit is rough then the rabbit is young."
    },
    {
        "id": 18173,
        "statement": "visits(X, tiger) :- sees(X, cat), is(X, cold).",
        "description": "If someone sees the cat and they are cold then they visit the tiger."
    },
    {
        "id": 18174,
        "statement": "is(bob, nice) :- is(bob, round), is(bob, white).",
        "description": "If Bob is round and Bob is white then Bob is nice."
    },
    {
        "id": 18175,
        "statement": "is(X, rough) :- is(X, white), is(X, kind).",
        "description": "All white, kind things are rough."
    },
    {
        "id": 18176,
        "statement": "is(X, green) :- is(X, rough), is(X, kind).",
        "description": "Rough, kind things are green."
    },
    {
        "id": 18177,
        "statement": "is(X, rough) :- is(X, furry), is(X, big).",
        "description": "If something is furry and big then it is rough."
    },
    {
        "id": 18178,
        "statement": "is(X, nice) :- is(X, big), is(X, rough).",
        "description": "Big, rough things are nice."
    },
    {
        "id": 18179,
        "statement": "is(X, round) :- is(X, cold), is(X, green).",
        "description": "Cold, green people are round."
    },
    {
        "id": 18180,
        "statement": "is(X, rough) :- is(X, kind), is(X, cold).",
        "description": "If someone is kind and cold then they are rough."
    },
    {
        "id": 18181,
        "statement": "is(bob, quiet) :- is(bob, green).",
        "description": "If Bob is green then Bob is quiet."
    },
    {
        "id": 18182,
        "statement": "is(X, cold) :- is(X, quiet), is(X, rough).",
        "description": "All quiet, rough people are cold."
    },
    {
        "id": 18183,
        "statement": "is(X, rough) :- is(X, round), is(X, big).",
        "description": "Round, big people are rough."
    },
    {
        "id": 18184,
        "statement": "is(X, big) :- is(X, green), is(X, round).",
        "description": "If someone is green and round then they are big."
    },
    {
        "id": 18185,
        "statement": "is(fiona, young) :- is(fiona, quiet), is(fiona, nice).",
        "description": "If Fiona is quiet and Fiona is nice then Fiona is young."
    },
    {
        "id": 18186,
        "statement": "is(X, nice) :- is(X, quiet), is(X, green).",
        "description": "All quiet, green things are nice."
    },
    {
        "id": 18187,
        "statement": "is(X, cold) :- is(X, young), is(X, smart).",
        "description": "All young, smart things are cold."
    },
    {
        "id": 18188,
        "statement": "is(fiona, cold) :- is(fiona, green).",
        "description": "If Fiona is green then Fiona is cold."
    },
    {
        "id": 18189,
        "statement": "likes(rabbit, lion) :- needs(mouse, rabbit).",
        "description": "If the mouse needs the rabbit then the rabbit likes the lion."
    },
    {
        "id": 18190,
        "statement": "visits(mouse, lion) :- likes(mouse, lion), likes(lion, mouse).",
        "description": "If the mouse likes the lion and the lion likes the mouse then the mouse visits the lion."
    },
    {
        "id": 18191,
        "statement": "likes(mouse, dog) :- visits(dog, mouse), is(dog, green).",
        "description": "If the dog visits the mouse and the dog is green then the mouse likes the dog."
    },
    {
        "id": 18192,
        "statement": "likes(lion, mouse) :- is(lion, cold).",
        "description": "If the lion is cold then the lion likes the mouse."
    },
    {
        "id": 18193,
        "statement": "needs(mouse, dog) :- visits(X, dog), not visits(X, mouse).",
        "description": "If something visits the dog and it does not visit the mouse then the mouse needs the dog."
    },
    {
        "id": 18194,
        "statement": "visits(rabbit, dog) :- likes(X, rabbit).",
        "description": "If something likes the rabbit then the rabbit visits the dog."
    },
    {
        "id": 18195,
        "statement": "likes(X, rabbit) :- visits(X, rabbit), not is(rabbit, cold).",
        "description": "If something visits the rabbit and the rabbit is not cold then it likes the rabbit."
    },
    {
        "id": 18196,
        "statement": "visits(X, rabbit) :- needs(X, dog).",
        "description": "If something needs the dog then it visits the rabbit."
    },
    {
        "id": 18197,
        "statement": "needs(X, rabbit) :- is(X, young).",
        "description": "If something is young then it needs the rabbit."
    },
    {
        "id": 18198,
        "statement": "chases(bear, squirrel) :- eats(bald_eagle, bear).",
        "description": "If the bald eagle eats the bear then the bear chases the squirrel."
    },
    {
        "id": 18199,
        "statement": "eats(X, dog) :- is(X, big), not chases(X, bald_eagle).",
        "description": "If someone is big and they do not chase the bald eagle then they eat the dog."
    },
    {
        "id": 18200,
        "statement": "is(bear, rough) :- visits(X, squirrel), not visits(squirrel, bear).",
        "description": "If someone visits the squirrel and the squirrel does not visit the bear then the bear is rough."
    },
    {
        "id": 18201,
        "statement": "eats(X, bald_eagle) :- is(X, rough), eats(X, bear).",
        "description": "If someone is rough and they eat the bear then they eat the bald eagle."
    },
    {
        "id": 18202,
        "statement": "visits(squirrel, dog) :- eats(X, squirrel).",
        "description": "If someone eats the squirrel then the squirrel visits the dog."
    },
    {
        "id": 18203,
        "statement": "is(bald_eagle, big) :- visits(X, bald_eagle), not eats(bald_eagle, squirrel).",
        "description": "If someone visits the bald eagle and the bald eagle does not eat the squirrel then the bald eagle is big."
    },
    {
        "id": 18204,
        "statement": "visits(X, bald_eagle) :- chases(X, squirrel).",
        "description": "If someone chases the squirrel then they visit the bald eagle."
    },
    {
        "id": 18205,
        "statement": "chases(bald_eagle, bear) :- eats(bald_eagle, dog).",
        "description": "If the bald eagle eats the dog then the bald eagle chases the bear."
    },
    {
        "id": 18206,
        "statement": "is(X, nice) :- is(X, round), is(X, furry).",
        "description": "If someone is round and furry then they are nice."
    },
    {
        "id": 18207,
        "statement": "is(X, round) :- is(X, white), is(X, furry).",
        "description": "If someone is white and furry then they are round."
    },
    {
        "id": 18208,
        "statement": "is(charlie, furry) :- is(charlie, blue), is(charlie, nice).",
        "description": "If Charlie is blue and Charlie is nice then Charlie is furry."
    },
    {
        "id": 18209,
        "statement": "is(X, blue) :- is(X, white), is(X, nice).",
        "description": "If someone is white and nice then they are blue."
    },
    {
        "id": 18210,
        "statement": "is(dave, red) :- is(dave, rough), is(dave, furry).",
        "description": "If Dave is rough and Dave is furry then Dave is red."
    },
    {
        "id": 18211,
        "statement": "is(dave, red) :- is(dave, young), is(dave, green).",
        "description": "If Dave is young and Dave is green then Dave is red."
    },
    {
        "id": 18212,
        "statement": "likes(X, bear) :- likes(X, rabbit), is(X, young).",
        "description": "If something likes the rabbit and it is young then it likes the bear."
    },
    {
        "id": 18213,
        "statement": "likes(X, bear) :- chases(X, rabbit), likes(rabbit, lion).",
        "description": "If something chases the rabbit and the rabbit likes the lion then it likes the bear."
    },
    {
        "id": 18214,
        "statement": "chases(bear, rabbit) :- visits(bear, lion).",
        "description": "If the bear visits the lion then the bear chases the rabbit."
    },
    {
        "id": 18215,
        "statement": "visits(squirrel, lion) :- visits(X, squirrel).",
        "description": "If something visits the squirrel then the squirrel visits the lion."
    },
    {
        "id": 18216,
        "statement": "chases(lion, rabbit) :- likes(X, lion), likes(X, bear).",
        "description": "If something likes the lion and it likes the bear then the lion chases the rabbit."
    },
    {
        "id": 18217,
        "statement": "is(X, cold) :- is(X, round), likes(X, bear).",
        "description": "If something is round and it likes the bear then it is cold."
    },
    {
        "id": 18218,
        "statement": "chases(squirrel, rabbit) :- visits(squirrel, rabbit), chases(rabbit, squirrel).",
        "description": "If the squirrel visits the rabbit and the rabbit chases the squirrel then the squirrel chases the rabbit."
    },
    {
        "id": 18219,
        "statement": "likes(X, squirrel) :- is(X, young), likes(X, rabbit).",
        "description": "If something is young and it likes the rabbit then it likes the squirrel."
    },
    {
        "id": 18220,
        "statement": "likes(X, lion) :- visits(X, bear), is(bear, cold).",
        "description": "If something visits the bear and the bear is cold then it likes the lion."
    },
    {
        "id": 18221,
        "statement": "is(X, white) :- is(X, smart), is(X, furry).",
        "description": "All smart, furry things are white."
    },
    {
        "id": 18222,
        "statement": "sees(squirrel, bear) :- sees(X, cow), eats(cow, squirrel).",
        "description": "If something sees the cow and the cow eats the squirrel then the squirrel sees the bear."
    },
    {
        "id": 18223,
        "statement": "chases(X, mouse) :- eats(X, bear).",
        "description": "If something eats the bear then it chases the mouse."
    },
    {
        "id": 18224,
        "statement": "sees(X, squirrel) :- sees(X, mouse), eats(X, bear).",
        "description": "If something sees the mouse and it eats the bear then it sees the squirrel."
    },
    {
        "id": 18225,
        "statement": "sees(cow, mouse) :- sees(X, cow), sees(X, squirrel).",
        "description": "If something sees the cow and it sees the squirrel then the cow sees the mouse."
    },
    {
        "id": 18226,
        "statement": "sees(squirrel, cow) :- sees(X, squirrel), is(squirrel, round).",
        "description": "If something sees the squirrel and the squirrel is round then the squirrel sees the cow."
    },
    {
        "id": 18227,
        "statement": "sees(cow, squirrel) :- eats(X, cow), is(X, round).",
        "description": "If something eats the cow and it is round then the cow sees the squirrel."
    },
    {
        "id": 18228,
        "statement": "eats(X, mouse) :- is(X, blue), sees(X, mouse).",
        "description": "If something is blue and it sees the mouse then it eats the mouse."
    },
    {
        "id": 18229,
        "statement": "sees(X, cat) :- is(X, rough).",
        "description": "If something is rough then it sees the cat."
    },
    {
        "id": 18230,
        "statement": "sees(X, cat) :- sees(X, cow).",
        "description": "If something sees the cow then it sees the cat."
    },
    {
        "id": 18231,
        "statement": "is(cat, green) :- sees(X, cat), visits(cat, cow).",
        "description": "If something sees the cat and the cat visits the cow then the cat is green."
    },
    {
        "id": 18232,
        "statement": "is(X, rough) :- visits(X, cat).",
        "description": "If something visits the cat then it is rough."
    },
    {
        "id": 18233,
        "statement": "sees(rabbit, cow) :- is(X, green), sees(X, rabbit).",
        "description": "If something is green and it sees the rabbit then the rabbit sees the cow."
    },
    {
        "id": 18234,
        "statement": "sees(rabbit, bald_eagle) :- sees(bald_eagle, rabbit).",
        "description": "If the bald eagle sees the rabbit then the rabbit sees the bald eagle."
    },
    {
        "id": 18235,
        "statement": "eats(X, bald_eagle) :- sees(X, rabbit), is(rabbit, cold).",
        "description": "If something sees the rabbit and the rabbit is cold then it eats the bald eagle."
    },
    {
        "id": 18236,
        "statement": "sees(X, rabbit) :- sees(X, cat).",
        "description": "If something sees the cat then it sees the rabbit."
    },
    {
        "id": 18237,
        "statement": "is(charlie, blue) :- is(charlie, quiet), is(charlie, round).",
        "description": "If Charlie is quiet and Charlie is round then Charlie is blue."
    },
    {
        "id": 18238,
        "statement": "is(bob, red) :- is(bob, round).",
        "description": "If Bob is round then Bob is red."
    },
    {
        "id": 18239,
        "statement": "is(X, round) :- is(X, red), is(X, furry).",
        "description": "If someone is red and furry then they are round."
    },
    {
        "id": 18240,
        "statement": "is(dave, nice) :- is(dave, young), is(dave, smart).",
        "description": "If Dave is young and Dave is smart then Dave is nice."
    },
    {
        "id": 18241,
        "statement": "is(X, white) :- is(X, rough), is(X, big).",
        "description": "If someone is rough and big then they are white."
    },
    {
        "id": 18242,
        "statement": "is(X, smart) :- is(X, green), is(X, white).",
        "description": "All green, white people are smart."
    },
    {
        "id": 18243,
        "statement": "is(X, big) :- is(X, furry), is(X, rough).",
        "description": "All furry, rough people are big."
    },
    {
        "id": 18244,
        "statement": "is(X, round) :- is(X, white), is(X, big).",
        "description": "All white, big people are round."
    },
    {
        "id": 18245,
        "statement": "is(X, green) :- is(X, round), is(X, blue).",
        "description": "All round, blue people are green."
    },
    {
        "id": 18246,
        "statement": "is(X, green) :- is(X, blue), is(X, red).",
        "description": "Blue, red things are green."
    },
    {
        "id": 18247,
        "statement": "is(X, green) :- is(X, kind), is(X, big).",
        "description": "If something is kind and big then it is green."
    },
    {
        "id": 18248,
        "statement": "is(X, smart) :- is(X, green), is(X, kind).",
        "description": "Green, kind things are smart."
    },
    {
        "id": 18249,
        "statement": "is(fiona, big) :- is(fiona, furry), is(fiona, smart).",
        "description": "If Fiona is furry and Fiona is smart then Fiona is big."
    },
    {
        "id": 18250,
        "statement": "is(X, red) :- is(X, kind), is(X, blue).",
        "description": "If someone is kind and blue then they are red."
    },
    {
        "id": 18251,
        "statement": "is(X, red) :- is(X, blue), is(X, big).",
        "description": "If someone is blue and big then they are red."
    },
    {
        "id": 18252,
        "statement": "is(X, blue) :- is(X, rough), is(X, big).",
        "description": "If someone is rough and big then they are blue."
    },
    {
        "id": 18253,
        "statement": "is(X, kind) :- is(X, blue), is(X, young).",
        "description": "All blue, young people are kind."
    },
    {
        "id": 18254,
        "statement": "is(X, blue) :- is(X, red), is(X, rough).",
        "description": "All red, rough people are blue."
    },
    {
        "id": 18255,
        "statement": "is(X, quiet) :- is(X, kind), not is(X, blue).",
        "description": "If someone is kind and not blue then they are quiet."
    },
    {
        "id": 18256,
        "statement": "is(bob, kind) :- is(bob, cold).",
        "description": "If Bob is cold then Bob is kind."
    },
    {
        "id": 18257,
        "statement": "is(X, big) :- is(X, blue), is(X, quiet).",
        "description": "All blue, quiet people are big."
    },
    {
        "id": 18258,
        "statement": "is(X, blue) :- is(X, smart), is(X, furry).",
        "description": "Smart, furry people are blue."
    },
    {
        "id": 18259,
        "statement": "is(charlie, furry) :- is(charlie, round).",
        "description": "If Charlie is round then Charlie is furry."
    },
    {
        "id": 18260,
        "statement": "is(X, quiet) :- is(X, smart), is(X, blue).",
        "description": "If someone is smart and blue then they are quiet."
    },
    {
        "id": 18261,
        "statement": "is(lion, nice) :- eats(lion, bald_eagle), not is(lion, kind).",
        "description": "If the lion eats the bald eagle and the lion is not kind then the lion is nice."
    },
    {
        "id": 18262,
        "statement": "needs(lion, bald_eagle) :- is(lion, nice).",
        "description": "If the lion is nice then the lion needs the bald eagle."
    },
    {
        "id": 18263,
        "statement": "is(bald_eagle, kind) :- is(bald_eagle, red), not is(bald_eagle, young).",
        "description": "If the bald eagle is red and the bald eagle is not young then the bald eagle is kind."
    },
    {
        "id": 18264,
        "statement": "needs(dog, squirrel) :- sees(X, dog), sees(X, squirrel).",
        "description": "If something sees the dog and it sees the squirrel then the dog needs the squirrel."
    },
    {
        "id": 18265,
        "statement": "is(squirrel, rough) :- needs(squirrel, lion).",
        "description": "If the squirrel needs the lion then the squirrel is rough."
    },
    {
        "id": 18266,
        "statement": "eats(lion, bald_eagle) :- sees(bald_eagle, lion).",
        "description": "If the bald eagle sees the lion then the lion eats the bald eagle."
    },
    {
        "id": 18267,
        "statement": "sees(bald_eagle, dog) :- eats(bald_eagle, squirrel).",
        "description": "If the bald eagle eats the squirrel then the bald eagle sees the dog."
    },
    {
        "id": 18268,
        "statement": "sees(squirrel, dog) :- is(squirrel, kind), sees(squirrel, lion).",
        "description": "If the squirrel is kind and the squirrel sees the lion then the squirrel sees the dog."
    },
    {
        "id": 18269,
        "statement": "is(X, rough) :- is(X, furry), is(X, red).",
        "description": "Furry, red things are rough."
    },
    {
        "id": 18270,
        "statement": "is(X, round) :- is(X, rough), is(X, young).",
        "description": "All rough, young things are round."
    },
    {
        "id": 18271,
        "statement": "is(X, young) :- is(X, rough), is(X, cold).",
        "description": "If something is rough and cold then it is young."
    },
    {
        "id": 18272,
        "statement": "is(rabbit, big) :- is(rabbit, young).",
        "description": "If the rabbit is young then the rabbit is big."
    },
    {
        "id": 18273,
        "statement": "needs(X, cow) :- needs(X, rabbit), is(X, big).",
        "description": "If something needs the rabbit and it is big then it needs the cow."
    },
    {
        "id": 18274,
        "statement": "is(dog, red) :- chases(X, dog).",
        "description": "If something chases the dog then the dog is red."
    },
    {
        "id": 18275,
        "statement": "visits(cow, bear) :- needs(dog, cow), is(dog, kind).",
        "description": "If the dog needs the cow and the dog is kind then the cow visits the bear."
    },
    {
        "id": 18276,
        "statement": "visits(rabbit, dog) :- visits(bear, rabbit).",
        "description": "If the bear visits the rabbit then the rabbit visits the dog."
    },
    {
        "id": 18277,
        "statement": "is(harry, cold) :- is(harry, nice), is(harry, red).",
        "description": "If Harry is nice and Harry is red then Harry is cold."
    },
    {
        "id": 18278,
        "statement": "is(X, red) :- is(X, kind), is(X, cold).",
        "description": "All kind, cold people are red."
    },
    {
        "id": 18279,
        "statement": "is(X, cold) :- is(X, smart), is(X, white).",
        "description": "Smart, white people are cold."
    },
    {
        "id": 18280,
        "statement": "is(bob, white) :- is(bob, smart), is(bob, cold).",
        "description": "If Bob is smart and Bob is cold then Bob is white."
    },
    {
        "id": 18281,
        "statement": "is(X, furry) :- is(X, white), is(X, big).",
        "description": "All white, big people are furry."
    },
    {
        "id": 18282,
        "statement": "is(X, nice) :- is(X, red), is(X, smart).",
        "description": "All red, smart people are nice."
    },
    {
        "id": 18283,
        "statement": "likes(X, mouse) :- visits(X, bald_eagle).",
        "description": "If something visits the bald eagle then it likes the mouse."
    },
    {
        "id": 18284,
        "statement": "eats(bear, mouse) :- is(X, green), visits(X, bear).",
        "description": "If something is green and it visits the bear then the bear eats the mouse."
    },
    {
        "id": 18285,
        "statement": "visits(squirrel, bald_eagle) :- is(X, green), likes(X, squirrel).",
        "description": "If something is green and it likes the squirrel then the squirrel visits the bald eagle."
    },
    {
        "id": 18286,
        "statement": "likes(X, squirrel) :- likes(X, mouse).",
        "description": "If something likes the mouse then it likes the squirrel."
    },
    {
        "id": 18287,
        "statement": "sees(lion, cow) :- is(X, red), not sees(X, lion).",
        "description": "If something is red and it does not see the lion then the lion sees the cow."
    },
    {
        "id": 18288,
        "statement": "is(cow, big) :- sees(X, cow), is(X, red).",
        "description": "If something sees the cow and it is red then the cow is big."
    },
    {
        "id": 18289,
        "statement": "eats(lion, tiger) :- sees(cow, lion), not chases(cow, lion).",
        "description": "If the cow sees the lion and the cow does not chase the lion then the lion eats the tiger."
    },
    {
        "id": 18290,
        "statement": "sees(X, cow) :- eats(X, tiger).",
        "description": "If something eats the tiger then it sees the cow."
    },
    {
        "id": 18291,
        "statement": "sees(squirrel, tiger) :- is(tiger, red), chases(tiger, squirrel).",
        "description": "If the tiger is red and the tiger chases the squirrel then the squirrel sees the tiger."
    },
    {
        "id": 18292,
        "statement": "eats(cow, squirrel) :- chases(cow, tiger), not is(cow, cold).",
        "description": "If the cow chases the tiger and the cow is not cold then the cow eats the squirrel."
    },
    {
        "id": 18293,
        "statement": "chases(X, tiger) :- chases(X, cow).",
        "description": "If something chases the cow then it chases the tiger."
    },
    {
        "id": 18294,
        "statement": "is(bald_eagle, kind) :- is(X, nice), not sees(X, bald_eagle).",
        "description": "If someone is nice and they do not see the bald eagle then the bald eagle is kind."
    },
    {
        "id": 18295,
        "statement": "sees(X, tiger) :- likes(X, tiger), sees(tiger, bald_eagle).",
        "description": "If someone likes the tiger and the tiger sees the bald eagle then they see the tiger."
    },
    {
        "id": 18296,
        "statement": "eats(bald_eagle, bear) :- likes(X, bald_eagle), sees(X, tiger).",
        "description": "If someone likes the bald eagle and they see the tiger then the bald eagle eats the bear."
    },
    {
        "id": 18297,
        "statement": "likes(X, bear) :- sees(X, bear), not likes(bear, bald_eagle).",
        "description": "If someone sees the bear and the bear does not like the bald eagle then they like the bear."
    },
    {
        "id": 18298,
        "statement": "likes(X, cat) :- eats(X, cat), eats(cat, tiger).",
        "description": "If someone eats the cat and the cat eats the tiger then they like the cat."
    },
    {
        "id": 18299,
        "statement": "is(X, blue) :- eats(X, tiger).",
        "description": "If someone eats the tiger then they are blue."
    },
    {
        "id": 18300,
        "statement": "sees(X, mouse) :- sees(X, bald_eagle), eats(X, bald_eagle).",
        "description": "If something sees the bald eagle and it eats the bald eagle then it sees the mouse."
    },
    {
        "id": 18301,
        "statement": "likes(squirrel, bald_eagle) :- likes(X, squirrel), sees(squirrel, mouse).",
        "description": "If something likes the squirrel and the squirrel sees the mouse then the squirrel likes the bald eagle."
    },
    {
        "id": 18302,
        "statement": "likes(X, bald_eagle) :- sees(X, mouse), is(X, kind).",
        "description": "If something sees the mouse and it is kind then it likes the bald eagle."
    },
    {
        "id": 18303,
        "statement": "sees(X, lion) :- needs(X, dog).",
        "description": "If something needs the dog then it sees the lion."
    },
    {
        "id": 18304,
        "statement": "sees(squirrel, dog) :- sees(X, squirrel), is(squirrel, young).",
        "description": "If something sees the squirrel and the squirrel is young then the squirrel sees the dog."
    },
    {
        "id": 18305,
        "statement": "is(lion, red) :- sees(X, lion), is(X, red).",
        "description": "If something sees the lion and it is red then the lion is red."
    },
    {
        "id": 18306,
        "statement": "is(cat, blue) :- is(X, red), sees(X, cat).",
        "description": "If something is red and it sees the cat then the cat is blue."
    },
    {
        "id": 18307,
        "statement": "is(squirrel, red) :- is(squirrel, green), is(squirrel, rough).",
        "description": "If the squirrel is green and the squirrel is rough then the squirrel is red."
    },
    {
        "id": 18308,
        "statement": "is(X, red) :- needs(X, lion), sees(X, lion).",
        "description": "If something needs the lion and it sees the lion then it is red."
    },
    {
        "id": 18309,
        "statement": "is(X, rough) :- visits(X, lion), is(X, young).",
        "description": "If something visits the lion and it is young then it is rough."
    },
    {
        "id": 18310,
        "statement": "sees(X, bald_eagle) :- visits(X, cat), not is(X, kind).",
        "description": "If someone visits the cat and they are not kind then they see the bald eagle."
    },
    {
        "id": 18311,
        "statement": "visits(dog, cat) :- sees(X, dog), sees(X, cat).",
        "description": "If someone sees the dog and they see the cat then the dog visits the cat."
    },
    {
        "id": 18312,
        "statement": "visits(dog, cat) :- likes(X, dog).",
        "description": "If someone likes the dog then the dog visits the cat."
    },
    {
        "id": 18313,
        "statement": "sees(X, tiger) :- is(X, green), not is(X, kind).",
        "description": "If someone is green and not kind then they see the tiger."
    },
    {
        "id": 18314,
        "statement": "is(harry, big) :- is(harry, red), is(harry, rough).",
        "description": "If Harry is red and Harry is rough then Harry is big."
    },
    {
        "id": 18315,
        "statement": "is(X, quiet) :- is(X, young), is(X, blue).",
        "description": "Young, blue people are quiet."
    },
    {
        "id": 18316,
        "statement": "is(X, kind) :- is(X, young), needs(X, tiger).",
        "description": "If someone is young and they need the tiger then they are kind."
    },
    {
        "id": 18317,
        "statement": "likes(bald_eagle, squirrel) :- chases(bald_eagle, tiger).",
        "description": "If the bald eagle chases the tiger then the bald eagle likes the squirrel."
    },
    {
        "id": 18318,
        "statement": "chases(tiger, squirrel) :- needs(X, tiger), is(X, big).",
        "description": "If someone needs the tiger and they are big then the tiger chases the squirrel."
    },
    {
        "id": 18319,
        "statement": "chases(X, squirrel) :- chases(X, rabbit).",
        "description": "If someone chases the rabbit then they chase the squirrel."
    },
    {
        "id": 18320,
        "statement": "is(X, big) :- is(X, quiet), is(X, smart).",
        "description": "If something is quiet and smart then it is big."
    },
    {
        "id": 18321,
        "statement": "is(anne, kind) :- is(anne, smart), is(anne, cold).",
        "description": "If Anne is smart and Anne is cold then Anne is kind."
    },
    {
        "id": 18322,
        "statement": "needs(X, mouse) :- eats(X, cow).",
        "description": "If someone eats the cow then they need the mouse."
    },
    {
        "id": 18323,
        "statement": "is(cow, big) :- needs(X, cow), is(X, rough).",
        "description": "If someone needs the cow and they are rough then the cow is big."
    },
    {
        "id": 18324,
        "statement": "is(cow, rough) :- not chases(cat, bear), not needs(bear, cow).",
        "description": "If the cat does not chase the bear and the bear does not need the cow then the cow is rough."
    },
    {
        "id": 18325,
        "statement": "eats(X, bear) :- is(X, blue).",
        "description": "If someone is blue then they eat the bear."
    },
    {
        "id": 18326,
        "statement": "is(bear, red) :- eats(X, bear), not is(X, big).",
        "description": "If someone eats the bear and they are not big then the bear is red."
    },
    {
        "id": 18327,
        "statement": "is(charlie, blue) :- is(charlie, cold), is(charlie, white).",
        "description": "If Charlie is cold and Charlie is white then Charlie is blue."
    },
    {
        "id": 18328,
        "statement": "is(charlie, furry) :- is(charlie, young).",
        "description": "If Charlie is young then Charlie is furry."
    },
    {
        "id": 18329,
        "statement": "is(X, blue) :- is(X, cold), is(X, white).",
        "description": "Cold, white people are blue."
    },
    {
        "id": 18330,
        "statement": "is(X, white) :- is(X, furry), not is(X, kind).",
        "description": "If someone is furry and not kind then they are white."
    },
    {
        "id": 18331,
        "statement": "is(dave, furry) :- is(dave, nice).",
        "description": "If Dave is nice then Dave is furry."
    },
    {
        "id": 18332,
        "statement": "is(X, furry) :- is(X, nice), is(X, kind).",
        "description": "Nice, kind things are furry."
    },
    {
        "id": 18333,
        "statement": "is(anne, nice) :- is(anne, rough), is(anne, big).",
        "description": "If Anne is rough and Anne is big then Anne is nice."
    },
    {
        "id": 18334,
        "statement": "is(X, kind) :- is(X, rough), is(X, nice).",
        "description": "All rough, nice things are kind."
    },
    {
        "id": 18335,
        "statement": "is(X, big) :- is(X, rough), is(X, green).",
        "description": "Rough, green things are big."
    },
    {
        "id": 18336,
        "statement": "sees(X, tiger) :- sees(X, cat).",
        "description": "If something sees the cat then it sees the tiger."
    },
    {
        "id": 18337,
        "statement": "visits(X, cow) :- sees(X, cat).",
        "description": "If something sees the cat then it visits the cow."
    },
    {
        "id": 18338,
        "statement": "sees(cow, tiger) :- sees(X, cow).",
        "description": "If something sees the cow then the cow sees the tiger."
    },
    {
        "id": 18339,
        "statement": "is(X, green) :- sees(X, tiger).",
        "description": "If something sees the tiger then it is green."
    },
    {
        "id": 18340,
        "statement": "likes(X, cow) :- sees(X, tiger).",
        "description": "If something sees the tiger then it likes the cow."
    },
    {
        "id": 18341,
        "statement": "visits(cow, cat) :- visits(cat, cow).",
        "description": "If the cat visits the cow then the cow visits the cat."
    },
    {
        "id": 18342,
        "statement": "likes(tiger, bear) :- likes(X, tiger).",
        "description": "If something likes the tiger then the tiger likes the bear."
    },
    {
        "id": 18343,
        "statement": "visits(cat, tiger) :- likes(tiger, cat), not visits(tiger, cat).",
        "description": "If the tiger likes the cat and the tiger does not visit the cat then the cat visits the tiger."
    },
    {
        "id": 18344,
        "statement": "is(anne, young) :- is(anne, blue).",
        "description": "If Anne is blue then Anne is young."
    },
    {
        "id": 18345,
        "statement": "is(X, young) :- is(X, smart), is(X, kind).",
        "description": "All smart, kind things are young."
    },
    {
        "id": 18346,
        "statement": "is(X, cold) :- is(X, furry), is(X, smart).",
        "description": "If something is furry and smart then it is cold."
    },
    {
        "id": 18347,
        "statement": "is(X, round) :- is(X, green), is(X, blue).",
        "description": "Green, blue things are round."
    },
    {
        "id": 18348,
        "statement": "is(X, cold) :- is(X, white), is(X, green).",
        "description": "All white, green things are cold."
    },
    {
        "id": 18349,
        "statement": "is(X, cold) :- is(X, white), is(X, red).",
        "description": "White, red things are cold."
    },
    {
        "id": 18350,
        "statement": "is(harry, red) :- is(harry, cold), is(harry, blue).",
        "description": "If Harry is cold and Harry is blue then Harry is red."
    },
    {
        "id": 18351,
        "statement": "is(bob, red) :- is(bob, cold), is(bob, blue).",
        "description": "If Bob is cold and Bob is blue then Bob is red."
    },
    {
        "id": 18352,
        "statement": "is(X, blue) :- is(X, cold), not is(X, round).",
        "description": "If someone is cold and not round then they are blue."
    },
    {
        "id": 18353,
        "statement": "is(X, young) :- is(X, kind), is(X, nice).",
        "description": "Kind, nice people are young."
    },
    {
        "id": 18354,
        "statement": "is(charlie, kind) :- is(charlie, round).",
        "description": "If Charlie is round then Charlie is kind."
    },
    {
        "id": 18355,
        "statement": "is(X, kind) :- is(X, cold), is(X, red).",
        "description": "If someone is cold and red then they are kind."
    },
    {
        "id": 18356,
        "statement": "eats(X, mouse) :- is(X, red).",
        "description": "If someone is red then they eat the mouse."
    },
    {
        "id": 18357,
        "statement": "is(X, kind) :- eats(X, bear).",
        "description": "If someone eats the bear then they are kind."
    },
    {
        "id": 18358,
        "statement": "eats(X, lion) :- is(X, young).",
        "description": "If someone is young then they eat the lion."
    },
    {
        "id": 18359,
        "statement": "likes(X, squirrel) :- is(X, kind), eats(X, mouse).",
        "description": "If someone is kind and they eat the mouse then they like the squirrel."
    },
    {
        "id": 18360,
        "statement": "likes(lion, mouse) :- is(X, big), sees(X, lion).",
        "description": "If someone is big and they see the lion then the lion likes the mouse."
    },
    {
        "id": 18361,
        "statement": "is(X, round) :- is(X, kind), is(X, young).",
        "description": "Kind, young things are round."
    },
    {
        "id": 18362,
        "statement": "is(X, red) :- is(X, round), is(X, cold).",
        "description": "All round, cold things are red."
    },
    {
        "id": 18363,
        "statement": "is(X, young) :- is(X, round), is(X, cold).",
        "description": "Round, cold people are young."
    },
    {
        "id": 18364,
        "statement": "is(X, smart) :- is(X, blue), is(X, round).",
        "description": "Blue, round things are smart."
    },
    {
        "id": 18365,
        "statement": "is(gary, smart) :- is(gary, nice), is(gary, quiet).",
        "description": "If Gary is nice and Gary is quiet then Gary is smart."
    },
    {
        "id": 18366,
        "statement": "is(gary, blue) :- is(gary, smart), is(gary, round).",
        "description": "If Gary is smart and Gary is round then Gary is blue."
    },
    {
        "id": 18367,
        "statement": "is(harry, quiet) :- is(harry, rough), is(harry, big).",
        "description": "If Harry is rough and Harry is big then Harry is quiet."
    },
    {
        "id": 18368,
        "statement": "is(X, big) :- is(X, red), is(X, quiet).",
        "description": "If something is red and quiet then it is big."
    },
    {
        "id": 18369,
        "statement": "is(harry, smart) :- not is(harry, big), not is(harry, red).",
        "description": "If Harry is not big and Harry is not red then Harry is smart."
    },
    {
        "id": 18370,
        "statement": "is(X, quiet) :- is(X, kind), is(X, smart).",
        "description": "All kind, smart things are quiet."
    },
    {
        "id": 18371,
        "statement": "is(X, smart) :- is(X, rough), is(X, quiet).",
        "description": "Rough, quiet things are smart."
    },
    {
        "id": 18372,
        "statement": "is(X, furry) :- is(X, big), is(X, rough).",
        "description": "Big, rough things are furry."
    },
    {
        "id": 18373,
        "statement": "is(charlie, quiet) :- is(charlie, big).",
        "description": "If Charlie is big then Charlie is quiet."
    },
    {
        "id": 18374,
        "statement": "is(X, white) :- is(X, green), is(X, furry).",
        "description": "All green, furry things are white."
    },
    {
        "id": 18375,
        "statement": "visits(cat, lion) :- visits(lion, cat).",
        "description": "If the lion visits the cat then the cat visits the lion."
    },
    {
        "id": 18376,
        "statement": "needs(lion, mouse) :- visits(lion, cat).",
        "description": "If the lion visits the cat then the lion needs the mouse."
    },
    {
        "id": 18377,
        "statement": "is(X, nice) :- chases(X, bear).",
        "description": "If someone chases the bear then they are nice."
    },
    {
        "id": 18378,
        "statement": "visits(X, cat) :- is(X, big).",
        "description": "If someone is big then they visit the cat."
    },
    {
        "id": 18379,
        "statement": "chases(mouse, bear) :- needs(X, mouse), visits(X, lion).",
        "description": "If someone needs the mouse and they visit the lion then the mouse chases the bear."
    },
    {
        "id": 18380,
        "statement": "visits(X, lion) :- is(X, round), needs(X, lion).",
        "description": "If someone is round and they need the lion then they visit the lion."
    },
    {
        "id": 18381,
        "statement": "chases(bear, lion) :- is(bear, red), not is(bear, kind).",
        "description": "If the bear is red and the bear is not kind then the bear chases the lion."
    },
    {
        "id": 18382,
        "statement": "is(fiona, round) :- is(fiona, rough).",
        "description": "If Fiona is rough then Fiona is round."
    },
    {
        "id": 18383,
        "statement": "is(X, furry) :- is(X, kind), is(X, nice).",
        "description": "If someone is kind and nice then they are furry."
    },
    {
        "id": 18384,
        "statement": "is(X, kind) :- is(X, nice), is(X, big).",
        "description": "If someone is nice and big then they are kind."
    },
    {
        "id": 18385,
        "statement": "is(X, white) :- is(X, round), is(X, big).",
        "description": "All round, big people are white."
    },
    {
        "id": 18386,
        "statement": "is(charlie, round) :- is(charlie, furry), is(charlie, rough).",
        "description": "If Charlie is furry and Charlie is rough then Charlie is round."
    },
    {
        "id": 18387,
        "statement": "sees(lion, rabbit) :- visits(lion, dog), sees(lion, dog).",
        "description": "If the lion visits the dog and the lion sees the dog then the lion sees the rabbit."
    },
    {
        "id": 18388,
        "statement": "likes(X, rabbit) :- is(X, rough), likes(X, lion).",
        "description": "If something is rough and it likes the lion then it likes the rabbit."
    },
    {
        "id": 18389,
        "statement": "likes(X, dog) :- is(X, nice), sees(X, dog).",
        "description": "If something is nice and it sees the dog then it likes the dog."
    },
    {
        "id": 18390,
        "statement": "is(tiger, rough) :- sees(X, tiger).",
        "description": "If something sees the tiger then the tiger is rough."
    },
    {
        "id": 18391,
        "statement": "likes(dog, rabbit) :- is(tiger, rough), likes(tiger, dog).",
        "description": "If the tiger is rough and the tiger likes the dog then the dog likes the rabbit."
    },
    {
        "id": 18392,
        "statement": "is(X, young) :- likes(X, dog).",
        "description": "If something likes the dog then it is young."
    },
    {
        "id": 18393,
        "statement": "sees(rabbit, tiger) :- sees(X, rabbit).",
        "description": "If something sees the rabbit then the rabbit sees the tiger."
    },
    {
        "id": 18394,
        "statement": "is(cow, rough) :- sees(X, mouse), chases(mouse, cow).",
        "description": "If something sees the mouse and the mouse chases the cow then the cow is rough."
    },
    {
        "id": 18395,
        "statement": "is(squirrel, nice) :- is(squirrel, blue), sees(squirrel, cow).",
        "description": "If the squirrel is blue and the squirrel sees the cow then the squirrel is nice."
    },
    {
        "id": 18396,
        "statement": "eats(X, squirrel) :- chases(X, cow), is(cow, nice).",
        "description": "If something chases the cow and the cow is nice then it eats the squirrel."
    },
    {
        "id": 18397,
        "statement": "chases(bear, squirrel) :- sees(X, bear), is(bear, green).",
        "description": "If something sees the bear and the bear is green then the bear chases the squirrel."
    },
    {
        "id": 18398,
        "statement": "is(mouse, green) :- eats(X, mouse), sees(mouse, bear).",
        "description": "If something eats the mouse and the mouse sees the bear then the mouse is green."
    },
    {
        "id": 18399,
        "statement": "eats(X, mouse) :- is(X, blue).",
        "description": "If something is blue then it eats the mouse."
    },
    {
        "id": 18400,
        "statement": "is(anne, rough) :- is(anne, green), is(anne, nice).",
        "description": "If Anne is green and Anne is nice then Anne is rough."
    },
    {
        "id": 18401,
        "statement": "is(X, cold) :- is(X, white), is(X, kind).",
        "description": "All white, kind people are cold."
    },
    {
        "id": 18402,
        "statement": "is(gary, smart) :- is(gary, nice).",
        "description": "If Gary is nice then Gary is smart."
    },
    {
        "id": 18403,
        "statement": "is(X, cold) :- is(X, rough), is(X, nice).",
        "description": "All rough, nice people are cold."
    },
    {
        "id": 18404,
        "statement": "is(rabbit, rough) :- chases(X, bear), sees(bear, rabbit).",
        "description": "If something chases the bear and the bear sees the rabbit then the rabbit is rough."
    },
    {
        "id": 18405,
        "statement": "chases(cat, lion) :- sees(bear, cat).",
        "description": "If the bear sees the cat then the cat chases the lion."
    },
    {
        "id": 18406,
        "statement": "eats(rabbit, cat) :- sees(X, rabbit), chases(X, rabbit).",
        "description": "If something sees the rabbit and it chases the rabbit then the rabbit eats the cat."
    },
    {
        "id": 18407,
        "statement": "is(bear, big) :- is(X, red), chases(X, bear).",
        "description": "If something is red and it chases the bear then the bear is big."
    },
    {
        "id": 18408,
        "statement": "sees(X, rabbit) :- is(X, cold).",
        "description": "If something is cold then it sees the rabbit."
    },
    {
        "id": 18409,
        "statement": "is(X, red) :- is(X, rough), is(X, green).",
        "description": "Rough, green things are red."
    },
    {
        "id": 18410,
        "statement": "is(X, green) :- is(X, round), is(X, quiet).",
        "description": "Round, quiet things are green."
    },
    {
        "id": 18411,
        "statement": "is(X, blue) :- is(X, quiet), is(X, round).",
        "description": "Quiet, round things are blue."
    },
    {
        "id": 18412,
        "statement": "likes(X, bald_eagle) :- is(X, nice), visits(X, bear).",
        "description": "If something is nice and it visits the bear then it likes the bald eagle."
    },
    {
        "id": 18413,
        "statement": "eats(X, bear) :- eats(X, bald_eagle).",
        "description": "If something eats the bald eagle then it eats the bear."
    },
    {
        "id": 18414,
        "statement": "visits(X, bear) :- likes(X, bear).",
        "description": "If something likes the bear then it visits the bear."
    },
    {
        "id": 18415,
        "statement": "visits(X, bear) :- eats(X, cat), is(X, nice).",
        "description": "If something eats the cat and it is nice then it visits the bear."
    },
    {
        "id": 18416,
        "statement": "eats(X, bald_eagle) :- likes(X, bald_eagle).",
        "description": "If something likes the bald eagle then it eats the bald eagle."
    },
    {
        "id": 18417,
        "statement": "eats(cow, cat) :- visits(bald_eagle, cow).",
        "description": "If the bald eagle visits the cow then the cow eats the cat."
    },
    {
        "id": 18418,
        "statement": "is(bald_eagle, kind) :- eats(bald_eagle, cat).",
        "description": "If the bald eagle eats the cat then the bald eagle is kind."
    },
    {
        "id": 18419,
        "statement": "likes(bald_eagle, bear) :- likes(X, bald_eagle).",
        "description": "If something likes the bald eagle then the bald eagle likes the bear."
    },
    {
        "id": 18420,
        "statement": "likes(lion, mouse) :- chases(X, lion).",
        "description": "If someone chases the lion then the lion likes the mouse."
    },
    {
        "id": 18421,
        "statement": "is(cow, red) :- likes(X, cow), is(cow, rough).",
        "description": "If someone likes the cow and the cow is rough then the cow is red."
    },
    {
        "id": 18422,
        "statement": "is(X, young) :- chases(X, lion), is(X, red).",
        "description": "If someone chases the lion and they are red then they are young."
    },
    {
        "id": 18423,
        "statement": "sees(squirrel, cow) :- chases(lion, squirrel).",
        "description": "If the lion chases the squirrel then the squirrel sees the cow."
    },
    {
        "id": 18424,
        "statement": "chases(squirrel, lion) :- sees(X, squirrel), is(squirrel, kind).",
        "description": "If someone sees the squirrel and the squirrel is kind then the squirrel chases the lion."
    },
    {
        "id": 18425,
        "statement": "likes(cow, squirrel) :- likes(squirrel, cow).",
        "description": "If the squirrel likes the cow then the cow likes the squirrel."
    },
    {
        "id": 18426,
        "statement": "is(gary, blue) :- is(gary, quiet), is(gary, nice).",
        "description": "If Gary is quiet and Gary is nice then Gary is blue."
    },
    {
        "id": 18427,
        "statement": "is(X, big) :- is(X, white), is(X, blue).",
        "description": "All white, blue things are big."
    },
    {
        "id": 18428,
        "statement": "is(charlie, big) :- is(charlie, quiet), is(charlie, white).",
        "description": "If Charlie is quiet and Charlie is white then Charlie is big."
    },
    {
        "id": 18429,
        "statement": "is(harry, quiet) :- is(harry, nice), is(harry, smart).",
        "description": "If Harry is nice and Harry is smart then Harry is quiet."
    },
    {
        "id": 18430,
        "statement": "is(X, green) :- is(X, furry), is(X, nice).",
        "description": "Furry, nice things are green."
    },
    {
        "id": 18431,
        "statement": "is(X, smart) :- is(X, blue), is(X, quiet).",
        "description": "All blue, quiet things are smart."
    },
    {
        "id": 18432,
        "statement": "is(X, nice) :- is(X, smart), is(X, furry).",
        "description": "If something is smart and furry then it is nice."
    },
    {
        "id": 18433,
        "statement": "visits(rabbit, lion) :- needs(mouse, rabbit), is(mouse, rough).",
        "description": "If the mouse needs the rabbit and the mouse is rough then the rabbit visits the lion."
    },
    {
        "id": 18434,
        "statement": "is(cat, green) :- visits(rabbit, cat), is(rabbit, rough).",
        "description": "If the rabbit visits the cat and the rabbit is rough then the cat is green."
    },
    {
        "id": 18435,
        "statement": "is(X, green) :- likes(X, rabbit).",
        "description": "If someone likes the rabbit then they are green."
    },
    {
        "id": 18436,
        "statement": "is(cat, rough) :- visits(cat, rabbit).",
        "description": "If the cat visits the rabbit then the cat is rough."
    },
    {
        "id": 18437,
        "statement": "visits(X, cat) :- likes(X, lion).",
        "description": "If someone likes the lion then they visit the cat."
    },
    {
        "id": 18438,
        "statement": "needs(rabbit, cat) :- visits(X, rabbit).",
        "description": "If someone visits the rabbit then the rabbit needs the cat."
    },
    {
        "id": 18439,
        "statement": "is(X, nice) :- is(X, quiet), is(X, young).",
        "description": "If something is quiet and young then it is nice."
    },
    {
        "id": 18440,
        "statement": "is(X, quiet) :- is(X, red), is(X, kind).",
        "description": "All red, kind things are quiet."
    },
    {
        "id": 18441,
        "statement": "is(X, cold) :- is(X, kind), is(X, green).",
        "description": "Kind, green things are cold."
    },
    {
        "id": 18442,
        "statement": "is(X, rough) :- is(X, round), is(X, blue).",
        "description": "If something is round and blue then it is rough."
    },
    {
        "id": 18443,
        "statement": "is(X, rough) :- is(X, kind), is(X, cold).",
        "description": "If something is kind and cold then it is rough."
    },
    {
        "id": 18444,
        "statement": "is(X, cold) :- is(X, rough), is(X, big).",
        "description": "All rough, big things are cold."
    },
    {
        "id": 18445,
        "statement": "is(X, blue) :- is(X, kind), is(X, round).",
        "description": "All kind, round things are blue."
    },
    {
        "id": 18446,
        "statement": "is(X, cold) :- is(X, green), is(X, red).",
        "description": "Green, red people are cold."
    },
    {
        "id": 18447,
        "statement": "is(X, nice) :- is(X, kind), is(X, red).",
        "description": "All kind, red people are nice."
    },
    {
        "id": 18448,
        "statement": "is(X, red) :- is(X, blue), is(X, nice).",
        "description": "Blue, nice people are red."
    },
    {
        "id": 18449,
        "statement": "is(X, round) :- needs(X, cat).",
        "description": "If something needs the cat then it is round."
    },
    {
        "id": 18450,
        "statement": "chases(mouse, squirrel) :- visits(X, cat), visits(cat, mouse).",
        "description": "If something visits the cat and the cat visits the mouse then the mouse chases the squirrel."
    },
    {
        "id": 18451,
        "statement": "is(bear, rough) :- needs(X, bear).",
        "description": "If something needs the bear then the bear is rough."
    },
    {
        "id": 18452,
        "statement": "visits(squirrel, mouse) :- visits(X, squirrel), is(squirrel, rough).",
        "description": "If something visits the squirrel and the squirrel is rough then the squirrel visits the mouse."
    },
    {
        "id": 18453,
        "statement": "needs(X, bear) :- visits(X, squirrel).",
        "description": "If something visits the squirrel then it needs the bear."
    },
    {
        "id": 18454,
        "statement": "needs(X, cat) :- chases(X, squirrel).",
        "description": "If something chases the squirrel then it needs the cat."
    },
    {
        "id": 18455,
        "statement": "is(X, cold) :- visits(X, squirrel).",
        "description": "If something visits the squirrel then it is cold."
    },
    {
        "id": 18456,
        "statement": "chases(X, squirrel) :- needs(X, bear).",
        "description": "If something needs the bear then it chases the squirrel."
    },
    {
        "id": 18457,
        "statement": "is(X, green) :- is(X, young), is(X, cold).",
        "description": "All young, cold things are green."
    },
    {
        "id": 18458,
        "statement": "is(X, nice) :- is(X, rough), is(X, green).",
        "description": "All rough, green things are nice."
    },
    {
        "id": 18459,
        "statement": "chases(X, lion) :- likes(X, lion), chases(lion, cat).",
        "description": "If someone likes the lion and the lion chases the cat then they chase the lion."
    },
    {
        "id": 18460,
        "statement": "likes(lion, squirrel) :- likes(X, lion).",
        "description": "If someone likes the lion then the lion likes the squirrel."
    },
    {
        "id": 18461,
        "statement": "likes(tiger, squirrel) :- likes(X, tiger).",
        "description": "If someone likes the tiger then the tiger likes the squirrel."
    },
    {
        "id": 18462,
        "statement": "is(cat, cold) :- chases(X, cat), not is(X, rough).",
        "description": "If someone chases the cat and they are not rough then the cat is cold."
    },
    {
        "id": 18463,
        "statement": "sees(tiger, lion) :- is(X, cold), chases(X, tiger).",
        "description": "If someone is cold and they chase the tiger then the tiger sees the lion."
    },
    {
        "id": 18464,
        "statement": "chases(X, cat) :- is(X, blue).",
        "description": "If someone is blue then they chase the cat."
    },
    {
        "id": 18465,
        "statement": "likes(X, cat) :- chases(X, squirrel), not likes(squirrel, lion).",
        "description": "If someone chases the squirrel and the squirrel does not like the lion then they like the cat."
    },
    {
        "id": 18466,
        "statement": "is(lion, kind) :- is(squirrel, young), not chases(squirrel, lion).",
        "description": "If the squirrel is young and the squirrel does not chase the lion then the lion is kind."
    },
    {
        "id": 18467,
        "statement": "is(X, kind) :- is(X, round), is(X, blue).",
        "description": "All round, blue people are kind."
    },
    {
        "id": 18468,
        "statement": "is(X, round) :- is(X, young), is(X, cold).",
        "description": "All young, cold people are round."
    },
    {
        "id": 18469,
        "statement": "is(X, nice) :- is(X, red), is(X, blue).",
        "description": "If something is red and blue then it is nice."
    },
    {
        "id": 18470,
        "statement": "is(X, nice) :- is(X, white), is(X, young).",
        "description": "All white, young things are nice."
    },
    {
        "id": 18471,
        "statement": "is(X, round) :- is(X, nice), is(X, white).",
        "description": "All nice, white things are round."
    },
    {
        "id": 18472,
        "statement": "is(X, white) :- is(X, blue), is(X, big).",
        "description": "Blue, big things are white."
    },
    {
        "id": 18473,
        "statement": "is(X, red) :- is(X, big), is(X, young).",
        "description": "All big, young things are red."
    },
    {
        "id": 18474,
        "statement": "is(X, round) :- is(X, blue), not is(X, red).",
        "description": "If something is blue and not red then it is round."
    },
    {
        "id": 18475,
        "statement": "is(X, cold) :- is(X, blue), is(X, round).",
        "description": "If something is blue and round then it is cold."
    },
    {
        "id": 18476,
        "statement": "likes(X, cow) :- is(X, young), is(X, cold).",
        "description": "If someone is young and cold then they like the cow."
    },
    {
        "id": 18477,
        "statement": "likes(rabbit, dog) :- visits(rabbit, cat).",
        "description": "If the rabbit visits the cat then the rabbit likes the dog."
    },
    {
        "id": 18478,
        "statement": "sees(X, rabbit) :- likes(X, cow), is(cow, young).",
        "description": "If someone likes the cow and the cow is young then they see the rabbit."
    },
    {
        "id": 18479,
        "statement": "sees(cow, dog) :- likes(dog, cow).",
        "description": "If the dog likes the cow then the cow sees the dog."
    },
    {
        "id": 18480,
        "statement": "is(X, young) :- sees(X, cat).",
        "description": "If someone sees the cat then they are young."
    },
    {
        "id": 18481,
        "statement": "visits(dog, rabbit) :- visits(X, dog).",
        "description": "If someone visits the dog then the dog visits the rabbit."
    },
    {
        "id": 18482,
        "statement": "is(erin, cold) :- is(erin, white).",
        "description": "If Erin is white then Erin is cold."
    },
    {
        "id": 18483,
        "statement": "is(X, white) :- is(X, smart), is(X, young).",
        "description": "Smart, young things are white."
    },
    {
        "id": 18484,
        "statement": "is(X, young) :- is(X, rough), is(X, red).",
        "description": "Rough, red things are young."
    },
    {
        "id": 18485,
        "statement": "is(bear, red) :- chases(X, bear), visits(X, rabbit).",
        "description": "If something chases the bear and it visits the rabbit then the bear is red."
    },
    {
        "id": 18486,
        "statement": "chases(lion, mouse) :- chases(rabbit, lion).",
        "description": "If the rabbit chases the lion then the lion chases the mouse."
    },
    {
        "id": 18487,
        "statement": "visits(bear, lion) :- visits(X, bear).",
        "description": "If something visits the bear then the bear visits the lion."
    },
    {
        "id": 18488,
        "statement": "chases(X, bear) :- is(X, red).",
        "description": "If something is red then it chases the bear."
    },
    {
        "id": 18489,
        "statement": "is(lion, red) :- visits(X, lion).",
        "description": "If something visits the lion then the lion is red."
    },
    {
        "id": 18490,
        "statement": "chases(lion, rabbit) :- is(lion, round), visits(lion, bear).",
        "description": "If the lion is round and the lion visits the bear then the lion chases the rabbit."
    },
    {
        "id": 18491,
        "statement": "visits(lion, rabbit) :- visits(lion, bear), visits(bear, lion).",
        "description": "If the lion visits the bear and the bear visits the lion then the lion visits the rabbit."
    },
    {
        "id": 18492,
        "statement": "is(bob, quiet) :- is(bob, rough).",
        "description": "If Bob is rough then Bob is quiet."
    },
    {
        "id": 18493,
        "statement": "is(X, big) :- is(X, kind), not is(X, furry).",
        "description": "If someone is kind and not furry then they are big."
    },
    {
        "id": 18494,
        "statement": "is(X, green) :- is(X, cold), is(X, young).",
        "description": "If someone is cold and young then they are green."
    },
    {
        "id": 18495,
        "statement": "is(X, smart) :- is(X, cold), is(X, round).",
        "description": "All cold, round people are smart."
    },
    {
        "id": 18496,
        "statement": "is(erin, cold) :- is(erin, big), is(erin, smart).",
        "description": "If Erin is big and Erin is smart then Erin is cold."
    },
    {
        "id": 18497,
        "statement": "is(X, big) :- is(X, young), is(X, green).",
        "description": "Young, green people are big."
    },
    {
        "id": 18498,
        "statement": "is(X, blue) :- is(X, kind), is(X, young).",
        "description": "All kind, young things are blue."
    },
    {
        "id": 18499,
        "statement": "is(X, nice) :- is(X, quiet), is(X, kind).",
        "description": "Quiet, kind things are nice."
    },
    {
        "id": 18500,
        "statement": "is(bob, nice) :- is(bob, blue).",
        "description": "If Bob is blue then Bob is nice."
    },
    {
        "id": 18501,
        "statement": "is(X, young) :- is(X, smart), is(X, rough).",
        "description": "Smart, rough things are young."
    },
    {
        "id": 18502,
        "statement": "is(X, young) :- is(X, rough), is(X, quiet).",
        "description": "All rough, quiet things are young."
    },
    {
        "id": 18503,
        "statement": "chases(X, cow) :- is(X, cold), is(X, blue).",
        "description": "If something is cold and blue then it chases the cow."
    },
    {
        "id": 18504,
        "statement": "is(tiger, round) :- sees(X, tiger).",
        "description": "If something sees the tiger then the tiger is round."
    },
    {
        "id": 18505,
        "statement": "sees(cow, tiger) :- chases(X, tiger), sees(tiger, cow).",
        "description": "If something chases the tiger and the tiger sees the cow then the cow sees the tiger."
    },
    {
        "id": 18506,
        "statement": "visits(cow, tiger) :- is(X, round), sees(X, cow).",
        "description": "If something is round and it sees the cow then the cow visits the tiger."
    },
    {
        "id": 18507,
        "statement": "chases(cow, tiger) :- chases(X, cow).",
        "description": "If something chases the cow then the cow chases the tiger."
    },
    {
        "id": 18508,
        "statement": "visits(squirrel, cow) :- chases(squirrel, tiger), is(tiger, round).",
        "description": "If the squirrel chases the tiger and the tiger is round then the squirrel visits the cow."
    },
    {
        "id": 18509,
        "statement": "sees(cow, squirrel) :- sees(X, cow), is(cow, blue).",
        "description": "If something sees the cow and the cow is blue then the cow sees the squirrel."
    },
    {
        "id": 18510,
        "statement": "chases(X, dog) :- likes(X, cow).",
        "description": "If something likes the cow then it chases the dog."
    },
    {
        "id": 18511,
        "statement": "sees(dog, cow) :- chases(X, dog), sees(X, squirrel).",
        "description": "If something chases the dog and it sees the squirrel then the dog sees the cow."
    },
    {
        "id": 18512,
        "statement": "is(cow, blue) :- likes(X, cow), is(X, nice).",
        "description": "If something likes the cow and it is nice then the cow is blue."
    },
    {
        "id": 18513,
        "statement": "sees(X, dog) :- is(X, nice), is(X, kind).",
        "description": "If something is nice and kind then it sees the dog."
    },
    {
        "id": 18514,
        "statement": "is(X, nice) :- sees(X, cow).",
        "description": "If something sees the cow then it is nice."
    },
    {
        "id": 18515,
        "statement": "chases(squirrel, cow) :- chases(squirrel, dog), chases(squirrel, bear).",
        "description": "If the squirrel chases the dog and the squirrel chases the bear then the squirrel chases the cow."
    },
    {
        "id": 18516,
        "statement": "is(charlie, big) :- is(charlie, cold), is(charlie, young).",
        "description": "If Charlie is cold and Charlie is young then Charlie is big."
    },
    {
        "id": 18517,
        "statement": "is(X, young) :- is(X, smart), is(X, cold).",
        "description": "All smart, cold people are young."
    },
    {
        "id": 18518,
        "statement": "is(X, red) :- is(X, smart), is(X, big).",
        "description": "Smart, big people are red."
    },
    {
        "id": 18519,
        "statement": "is(X, smart) :- is(X, big), is(X, kind).",
        "description": "All big, kind people are smart."
    },
    {
        "id": 18520,
        "statement": "is(X, young) :- likes(X, tiger).",
        "description": "If something likes the tiger then it is young."
    },
    {
        "id": 18521,
        "statement": "sees(tiger, squirrel) :- eats(X, cow), eats(cow, tiger).",
        "description": "If something eats the cow and the cow eats the tiger then the tiger sees the squirrel."
    },
    {
        "id": 18522,
        "statement": "eats(X, tiger) :- sees(X, lion).",
        "description": "If something sees the lion then it eats the tiger."
    },
    {
        "id": 18523,
        "statement": "is(cow, nice) :- is(X, big), eats(X, cow).",
        "description": "If something is big and it eats the cow then the cow is nice."
    },
    {
        "id": 18524,
        "statement": "sees(cow, tiger) :- sees(cow, squirrel).",
        "description": "If the cow sees the squirrel then the cow sees the tiger."
    },
    {
        "id": 18525,
        "statement": "eats(lion, tiger) :- eats(X, lion), is(X, big).",
        "description": "If something eats the lion and it is big then the lion eats the tiger."
    },
    {
        "id": 18526,
        "statement": "likes(X, squirrel) :- likes(X, lion).",
        "description": "If something likes the lion then it likes the squirrel."
    },
    {
        "id": 18527,
        "statement": "likes(X, tiger) :- sees(X, squirrel).",
        "description": "If something sees the squirrel then it likes the tiger."
    },
    {
        "id": 18528,
        "statement": "is(gary, furry) :- is(gary, nice), is(gary, quiet).",
        "description": "If Gary is nice and Gary is quiet then Gary is furry."
    },
    {
        "id": 18529,
        "statement": "is(X, green) :- is(X, quiet), is(X, red).",
        "description": "If someone is quiet and red then they are green."
    },
    {
        "id": 18530,
        "statement": "is(X, quiet) :- is(X, red), is(X, big).",
        "description": "All red, big things are quiet."
    },
    {
        "id": 18531,
        "statement": "is(X, kind) :- is(X, furry), is(X, round).",
        "description": "Furry, round things are kind."
    },
    {
        "id": 18532,
        "statement": "sees(bald_eagle, tiger) :- sees(X, bald_eagle).",
        "description": "If something sees the bald eagle then the bald eagle sees the tiger."
    },
    {
        "id": 18533,
        "statement": "is(cat, round) :- is(cat, cold).",
        "description": "If the cat is cold then the cat is round."
    },
    {
        "id": 18534,
        "statement": "needs(tiger, cat) :- is(X, cold), likes(X, tiger).",
        "description": "If something is cold and it likes the tiger then the tiger needs the cat."
    },
    {
        "id": 18535,
        "statement": "sees(X, cat) :- needs(X, cat), needs(cat, cow).",
        "description": "If something needs the cat and the cat needs the cow then it sees the cat."
    },
    {
        "id": 18536,
        "statement": "needs(cat, cow) :- needs(X, cat).",
        "description": "If something needs the cat then the cat needs the cow."
    },
    {
        "id": 18537,
        "statement": "is(X, red) :- is(X, rough), is(X, kind).",
        "description": "Rough, kind things are red."
    },
    {
        "id": 18538,
        "statement": "is(X, kind) :- is(X, red), is(X, smart).",
        "description": "All red, smart things are kind."
    },
    {
        "id": 18539,
        "statement": "is(X, rough) :- is(X, kind), is(X, young).",
        "description": "All kind, young things are rough."
    },
    {
        "id": 18540,
        "statement": "is(X, smart) :- is(X, rough), is(X, round).",
        "description": "All rough, round things are smart."
    },
    {
        "id": 18541,
        "statement": "is(X, rough) :- sees(X, squirrel).",
        "description": "If something sees the squirrel then it is rough."
    },
    {
        "id": 18542,
        "statement": "eats(lion, squirrel) :- visits(X, lion).",
        "description": "If something visits the lion then the lion eats the squirrel."
    },
    {
        "id": 18543,
        "statement": "eats(cow, lion) :- eats(X, cow), is(cow, green).",
        "description": "If something eats the cow and the cow is green then the cow eats the lion."
    },
    {
        "id": 18544,
        "statement": "visits(X, cat) :- is(X, kind).",
        "description": "If something is kind then it visits the cat."
    },
    {
        "id": 18545,
        "statement": "eats(X, lion) :- eats(X, squirrel), is(X, kind).",
        "description": "If something eats the squirrel and it is kind then it eats the lion."
    },
    {
        "id": 18546,
        "statement": "is(squirrel, rough) :- visits(cat, squirrel).",
        "description": "If the cat visits the squirrel then the squirrel is rough."
    },
    {
        "id": 18547,
        "statement": "is(X, kind) :- is(X, rough), not is(X, big).",
        "description": "If someone is rough and not big then they are kind."
    },
    {
        "id": 18548,
        "statement": "is(fiona, white) :- is(fiona, red), not is(fiona, big).",
        "description": "If Fiona is red and Fiona is not big then Fiona is white."
    },
    {
        "id": 18549,
        "statement": "is(X, young) :- is(X, red), is(X, white).",
        "description": "All red, white people are young."
    },
    {
        "id": 18550,
        "statement": "is(X, red) :- is(X, nice), is(X, rough).",
        "description": "All nice, rough people are red."
    },
    {
        "id": 18551,
        "statement": "chases(X, dog) :- visits(X, dog), visits(dog, lion).",
        "description": "If someone visits the dog and the dog visits the lion then they chase the dog."
    },
    {
        "id": 18552,
        "statement": "is(cat, rough) :- is(X, rough), not visits(X, cat).",
        "description": "If someone is rough and they do not visit the cat then the cat is rough."
    },
    {
        "id": 18553,
        "statement": "chases(X, lion) :- sees(X, cat).",
        "description": "If someone sees the cat then they chase the lion."
    },
    {
        "id": 18554,
        "statement": "visits(X, lion) :- chases(X, dog), sees(X, mouse).",
        "description": "If someone chases the dog and they see the mouse then they visit the lion."
    },
    {
        "id": 18555,
        "statement": "sees(X, cat) :- chases(X, dog), chases(dog, cat).",
        "description": "If someone chases the dog and the dog chases the cat then they see the cat."
    },
    {
        "id": 18556,
        "statement": "sees(X, dog) :- is(X, kind), is(X, big).",
        "description": "If someone is kind and big then they see the dog."
    },
    {
        "id": 18557,
        "statement": "visits(cat, lion) :- sees(X, cat).",
        "description": "If someone sees the cat then the cat visits the lion."
    },
    {
        "id": 18558,
        "statement": "is(anne, round) :- is(anne, furry).",
        "description": "If Anne is furry then Anne is round."
    },
    {
        "id": 18559,
        "statement": "is(X, smart) :- is(X, red), is(X, green).",
        "description": "All red, green people are smart."
    },
    {
        "id": 18560,
        "statement": "is(X, cold) :- is(X, furry), is(X, green).",
        "description": "All furry, green people are cold."
    },
    {
        "id": 18561,
        "statement": "is(harry, furry) :- is(harry, young), is(harry, red).",
        "description": "If Harry is young and Harry is red then Harry is furry."
    },
    {
        "id": 18562,
        "statement": "is(X, nice) :- is(X, furry), is(X, white).",
        "description": "If something is furry and white then it is nice."
    },
    {
        "id": 18563,
        "statement": "is(X, kind) :- is(X, nice), is(X, young).",
        "description": "All nice, young people are kind."
    },
    {
        "id": 18564,
        "statement": "is(X, kind) :- is(X, white), is(X, young).",
        "description": "If someone is white and young then they are kind."
    },
    {
        "id": 18565,
        "statement": "is(gary, blue) :- is(gary, white), is(gary, big).",
        "description": "If Gary is white and Gary is big then Gary is blue."
    },
    {
        "id": 18566,
        "statement": "is(X, big) :- is(X, kind), is(X, young).",
        "description": "All kind, young people are big."
    },
    {
        "id": 18567,
        "statement": "is(X, nice) :- is(X, red), is(X, young).",
        "description": "All red, young things are nice."
    },
    {
        "id": 18568,
        "statement": "is(X, blue) :- is(X, red), is(X, nice).",
        "description": "If something is red and nice then it is blue."
    },
    {
        "id": 18569,
        "statement": "is(X, round) :- is(X, nice), not is(X, young).",
        "description": "If something is nice and not young then it is round."
    },
    {
        "id": 18570,
        "statement": "is(charlie, round) :- is(charlie, young).",
        "description": "If Charlie is young then Charlie is round."
    },
    {
        "id": 18571,
        "statement": "chases(dog, bald_eagle) :- eats(X, dog).",
        "description": "If something eats the dog then the dog chases the bald eagle."
    },
    {
        "id": 18572,
        "statement": "is(dog, nice) :- chases(X, dog), eats(X, dog).",
        "description": "If something chases the dog and it eats the dog then the dog is nice."
    },
    {
        "id": 18573,
        "statement": "is(X, big) :- chases(X, cow).",
        "description": "If something chases the cow then it is big."
    },
    {
        "id": 18574,
        "statement": "chases(bear, bald_eagle) :- sees(X, bear).",
        "description": "If something sees the bear then the bear chases the bald eagle."
    },
    {
        "id": 18575,
        "statement": "chases(X, cow) :- chases(X, dog).",
        "description": "If something chases the dog then it chases the cow."
    },
    {
        "id": 18576,
        "statement": "chases(X, dog) :- chases(X, bald_eagle).",
        "description": "If something chases the bald eagle then it chases the dog."
    },
    {
        "id": 18577,
        "statement": "sees(bald_eagle, bear) :- eats(X, bald_eagle).",
        "description": "If something eats the bald eagle then the bald eagle sees the bear."
    },
    {
        "id": 18578,
        "statement": "is(X, blue) :- is(X, cold), is(X, smart).",
        "description": "All cold, smart things are blue."
    },
    {
        "id": 18579,
        "statement": "is(erin, red) :- is(erin, young), is(erin, big).",
        "description": "If Erin is young and Erin is big then Erin is red."
    },
    {
        "id": 18580,
        "statement": "is(X, furry) :- is(X, nice), is(X, young).",
        "description": "All nice, young people are furry."
    },
    {
        "id": 18581,
        "statement": "is(X, kind) :- is(X, young), is(X, big).",
        "description": "Young, big people are kind."
    },
    {
        "id": 18582,
        "statement": "chases(cat, dog) :- chases(X, cat), not is(X, green).",
        "description": "If something chases the cat and it is not green then the cat chases the dog."
    },
    {
        "id": 18583,
        "statement": "chases(cat, dog) :- chases(X, cat).",
        "description": "If something chases the cat then the cat chases the dog."
    },
    {
        "id": 18584,
        "statement": "visits(dog, squirrel) :- visits(X, dog), is(dog, young).",
        "description": "If something visits the dog and the dog is young then the dog visits the squirrel."
    },
    {
        "id": 18585,
        "statement": "is(dog, blue) :- visits(X, dog).",
        "description": "If something visits the dog then the dog is blue."
    },
    {
        "id": 18586,
        "statement": "is(X, nice) :- chases(X, dog).",
        "description": "If something chases the dog then it is nice."
    },
    {
        "id": 18587,
        "statement": "chases(X, cat) :- is(X, blue), is(X, green).",
        "description": "If something is blue and green then it chases the cat."
    },
    {
        "id": 18588,
        "statement": "needs(dog, tiger) :- likes(X, dog).",
        "description": "If someone likes the dog then the dog needs the tiger."
    },
    {
        "id": 18589,
        "statement": "needs(X, cat) :- needs(X, squirrel), likes(squirrel, tiger).",
        "description": "If someone needs the squirrel and the squirrel likes the tiger then they need the cat."
    },
    {
        "id": 18590,
        "statement": "is(squirrel, rough) :- is(X, rough), visits(X, squirrel).",
        "description": "If someone is rough and they visit the squirrel then the squirrel is rough."
    },
    {
        "id": 18591,
        "statement": "is(cat, cold) :- visits(X, cat), needs(cat, rabbit).",
        "description": "If something visits the cat and the cat needs the rabbit then the cat is cold."
    },
    {
        "id": 18592,
        "statement": "likes(bear, rabbit) :- needs(bear, rabbit).",
        "description": "If the bear needs the rabbit then the bear likes the rabbit."
    },
    {
        "id": 18593,
        "statement": "is(rabbit, kind) :- visits(rabbit, bear), is(bear, rough).",
        "description": "If the rabbit visits the bear and the bear is rough then the rabbit is kind."
    },
    {
        "id": 18594,
        "statement": "likes(cat, rabbit) :- likes(X, rabbit), needs(rabbit, cat).",
        "description": "If something likes the rabbit and the rabbit needs the cat then the cat likes the rabbit."
    },
    {
        "id": 18595,
        "statement": "visits(bald_eagle, cat) :- likes(X, rabbit), visits(rabbit, bald_eagle).",
        "description": "If something likes the rabbit and the rabbit visits the bald eagle then the bald eagle visits the cat."
    },
    {
        "id": 18596,
        "statement": "needs(X, bear) :- visits(X, cat).",
        "description": "If something visits the cat then it needs the bear."
    },
    {
        "id": 18597,
        "statement": "is(X, nice) :- is(X, red), is(X, green).",
        "description": "If something is red and green then it is nice."
    },
    {
        "id": 18598,
        "statement": "is(harry, young) :- is(harry, red), is(harry, smart).",
        "description": "If Harry is red and Harry is smart then Harry is young."
    },
    {
        "id": 18599,
        "statement": "is(gary, nice) :- is(gary, young).",
        "description": "If Gary is young then Gary is nice."
    },
    {
        "id": 18600,
        "statement": "is(X, kind) :- is(X, young), is(X, nice).",
        "description": "If something is young and nice then it is kind."
    },
    {
        "id": 18601,
        "statement": "eats(X, rabbit) :- sees(X, mouse).",
        "description": "If someone sees the mouse then they eat the rabbit."
    },
    {
        "id": 18602,
        "statement": "sees(X, mouse) :- chases(X, mouse).",
        "description": "If someone chases the mouse then they see the mouse."
    },
    {
        "id": 18603,
        "statement": "chases(rabbit, dog) :- sees(X, rabbit).",
        "description": "If someone sees the rabbit then the rabbit chases the dog."
    },
    {
        "id": 18604,
        "statement": "eats(X, mouse) :- chases(X, mouse).",
        "description": "If someone chases the mouse then they eat the mouse."
    },
    {
        "id": 18605,
        "statement": "is(lion, big) :- chases(dog, mouse), sees(dog, lion).",
        "description": "If the dog chases the mouse and the dog sees the lion then the lion is big."
    },
    {
        "id": 18606,
        "statement": "is(X, round) :- is(X, red), is(X, nice).",
        "description": "If something is red and nice then it is round."
    },
    {
        "id": 18607,
        "statement": "is(X, young) :- is(X, green), is(X, red).",
        "description": "If something is green and red then it is young."
    },
    {
        "id": 18608,
        "statement": "is(bob, nice) :- is(bob, smart), is(bob, young).",
        "description": "If Bob is smart and Bob is young then Bob is nice."
    },
    {
        "id": 18609,
        "statement": "is(fiona, quiet) :- is(fiona, young).",
        "description": "If Fiona is young then Fiona is quiet."
    },
    {
        "id": 18610,
        "statement": "is(X, green) :- is(X, red), is(X, nice).",
        "description": "If something is red and nice then it is green."
    },
    {
        "id": 18611,
        "statement": "is(X, furry) :- is(X, round), is(X, green).",
        "description": "All round, green things are furry."
    },
    {
        "id": 18612,
        "statement": "is(X, green) :- is(X, nice), is(X, young).",
        "description": "All nice, young things are green."
    },
    {
        "id": 18613,
        "statement": "visits(X, dog) :- likes(X, dog).",
        "description": "If someone likes the dog then they visit the dog."
    },
    {
        "id": 18614,
        "statement": "visits(cat, bald_eagle) :- eats(X, bald_eagle), eats(bald_eagle, cat).",
        "description": "If someone eats the bald eagle and the bald eagle eats the cat then the cat visits the bald eagle."
    },
    {
        "id": 18615,
        "statement": "eats(bald_eagle, cat) :- likes(bald_eagle, cow).",
        "description": "If the bald eagle likes the cow then the bald eagle eats the cat."
    },
    {
        "id": 18616,
        "statement": "visits(cat, bald_eagle) :- likes(X, cat), is(cat, red).",
        "description": "If someone likes the cat and the cat is red then the cat visits the bald eagle."
    },
    {
        "id": 18617,
        "statement": "likes(cow, dog) :- visits(cat, cow), visits(cat, dog).",
        "description": "If the cat visits the cow and the cat visits the dog then the cow likes the dog."
    },
    {
        "id": 18618,
        "statement": "is(X, nice) :- eats(X, dog).",
        "description": "If someone eats the dog then they are nice."
    },
    {
        "id": 18619,
        "statement": "is(X, green) :- needs(X, rabbit), not is(X, kind).",
        "description": "If someone needs the rabbit and they are not kind then they are green."
    },
    {
        "id": 18620,
        "statement": "needs(X, cat) :- chases(X, cat), chases(X, dog).",
        "description": "If someone chases the cat and they chase the dog then they need the cat."
    },
    {
        "id": 18621,
        "statement": "chases(X, rabbit) :- is(X, big), is(X, cold).",
        "description": "If someone is big and cold then they chase the rabbit."
    },
    {
        "id": 18622,
        "statement": "needs(cat, rabbit) :- sees(X, dog), chases(dog, cat).",
        "description": "If someone sees the dog and the dog chases the cat then the cat needs the rabbit."
    },
    {
        "id": 18623,
        "statement": "chases(bear, rabbit) :- needs(X, bear), is(X, cold).",
        "description": "If someone needs the bear and they are cold then the bear chases the rabbit."
    },
    {
        "id": 18624,
        "statement": "chases(dog, cat) :- not sees(dog, bear).",
        "description": "If the dog does not see the bear then the dog chases the cat."
    },
    {
        "id": 18625,
        "statement": "needs(rabbit, bear) :- needs(rabbit, cat).",
        "description": "If the rabbit needs the cat then the rabbit needs the bear."
    },
    {
        "id": 18626,
        "statement": "likes(cat, rabbit) :- sees(X, cat).",
        "description": "If someone sees the cat then the cat likes the rabbit."
    },
    {
        "id": 18627,
        "statement": "sees(bear, rabbit) :- is(bear, young).",
        "description": "If the bear is young then the bear sees the rabbit."
    },
    {
        "id": 18628,
        "statement": "sees(X, cat) :- is(X, round).",
        "description": "If someone is round then they see the cat."
    },
    {
        "id": 18629,
        "statement": "sees(X, cat) :- is(X, young), is(X, round).",
        "description": "If someone is young and round then they see the cat."
    },
    {
        "id": 18630,
        "statement": "likes(rabbit, mouse) :- is(X, green), likes(X, rabbit).",
        "description": "If someone is green and they like the rabbit then the rabbit likes the mouse."
    },
    {
        "id": 18631,
        "statement": "likes(bear, mouse) :- sees(X, cat), chases(cat, bear).",
        "description": "If someone sees the cat and the cat chases the bear then the bear likes the mouse."
    },
    {
        "id": 18632,
        "statement": "eats(X, cat) :- is(X, green), is(X, kind).",
        "description": "If something is green and kind then it eats the cat."
    },
    {
        "id": 18633,
        "statement": "is(bald_eagle, green) :- eats(X, bald_eagle).",
        "description": "If something eats the bald eagle then the bald eagle is green."
    },
    {
        "id": 18634,
        "statement": "chases(X, cat) :- is(X, green), not likes(X, squirrel).",
        "description": "If something is green and it does not like the squirrel then it chases the cat."
    },
    {
        "id": 18635,
        "statement": "eats(squirrel, dog) :- is(X, kind), eats(X, squirrel).",
        "description": "If something is kind and it eats the squirrel then the squirrel eats the dog."
    },
    {
        "id": 18636,
        "statement": "eats(X, mouse) :- is(X, cold), needs(X, mouse).",
        "description": "If someone is cold and they need the mouse then they eat the mouse."
    },
    {
        "id": 18637,
        "statement": "needs(mouse, bear) :- needs(X, mouse).",
        "description": "If someone needs the mouse then the mouse needs the bear."
    },
    {
        "id": 18638,
        "statement": "eats(tiger, mouse) :- visits(X, tiger).",
        "description": "If someone visits the tiger then the tiger eats the mouse."
    },
    {
        "id": 18639,
        "statement": "is(X, rough) :- is(X, red), is(X, blue).",
        "description": "All red, blue people are rough."
    },
    {
        "id": 18640,
        "statement": "needs(bear, mouse) :- visits(X, bear), is(X, red).",
        "description": "If someone visits the bear and they are red then the bear needs the mouse."
    },
    {
        "id": 18641,
        "statement": "is(bear, round) :- visits(dog, tiger), needs(dog, bear).",
        "description": "If the dog visits the tiger and the dog needs the bear then the bear is round."
    },
    {
        "id": 18642,
        "statement": "is(X, red) :- needs(X, mouse), eats(X, mouse).",
        "description": "If someone needs the mouse and they eat the mouse then they are red."
    },
    {
        "id": 18643,
        "statement": "visits(squirrel, bear) :- visits(X, squirrel).",
        "description": "If someone visits the squirrel then the squirrel visits the bear."
    },
    {
        "id": 18644,
        "statement": "visits(bear, bald_eagle) :- needs(bear, bald_eagle), not is(bald_eagle, rough).",
        "description": "If the bear needs the bald eagle and the bald eagle is not rough then the bear visits the bald eagle."
    },
    {
        "id": 18645,
        "statement": "eats(X, squirrel) :- eats(X, bear), not is(bear, kind).",
        "description": "If someone eats the bear and the bear is not kind then they eat the squirrel."
    },
    {
        "id": 18646,
        "statement": "visits(X, bald_eagle) :- needs(X, bear), not is(bear, nice).",
        "description": "If someone needs the bear and the bear is not nice then they visit the bald eagle."
    },
    {
        "id": 18647,
        "statement": "needs(bald_eagle, bear) :- needs(X, bald_eagle).",
        "description": "If someone needs the bald eagle then the bald eagle needs the bear."
    },
    {
        "id": 18648,
        "statement": "is(mouse, nice) :- is(X, blue), eats(X, mouse).",
        "description": "If someone is blue and they eat the mouse then the mouse is nice."
    },
    {
        "id": 18649,
        "statement": "needs(mouse, squirrel) :- visits(mouse, bald_eagle).",
        "description": "If the mouse visits the bald eagle then the mouse needs the squirrel."
    },
    {
        "id": 18650,
        "statement": "eats(X, bald_eagle) :- visits(X, bald_eagle), not is(bald_eagle, nice).",
        "description": "If someone visits the bald eagle and the bald eagle is not nice then they eat the bald eagle."
    },
    {
        "id": 18651,
        "statement": "likes(bear, cow) :- is(X, rough), needs(X, bear).",
        "description": "If something is rough and it needs the bear then the bear likes the cow."
    },
    {
        "id": 18652,
        "statement": "sees(X, cow) :- needs(X, cow).",
        "description": "If something needs the cow then it sees the cow."
    },
    {
        "id": 18653,
        "statement": "sees(rabbit, cow) :- is(X, nice), needs(X, rabbit).",
        "description": "If something is nice and it needs the rabbit then the rabbit sees the cow."
    },
    {
        "id": 18654,
        "statement": "needs(X, rabbit) :- sees(X, cow).",
        "description": "If something sees the cow then it needs the rabbit."
    },
    {
        "id": 18655,
        "statement": "sees(bald_eagle, bear) :- likes(X, cow), needs(cow, bald_eagle).",
        "description": "If something likes the cow and the cow needs the bald eagle then the bald eagle sees the bear."
    },
    {
        "id": 18656,
        "statement": "is(X, young) :- is(X, green), is(X, kind).",
        "description": "If someone is green and kind then they are young."
    },
    {
        "id": 18657,
        "statement": "is(X, blue) :- is(X, young), is(X, cold).",
        "description": "Young, cold people are blue."
    },
    {
        "id": 18658,
        "statement": "is(X, kind) :- is(X, cold), is(X, big).",
        "description": "If someone is cold and big then they are kind."
    },
    {
        "id": 18659,
        "statement": "is(X, furry) :- is(X, red), is(X, white).",
        "description": "Red, white people are furry."
    },
    {
        "id": 18660,
        "statement": "is(X, nice) :- is(X, white), is(X, young).",
        "description": "White, young people are nice."
    },
    {
        "id": 18661,
        "statement": "is(anne, green) :- is(anne, white), is(anne, furry).",
        "description": "If Anne is white and Anne is furry then Anne is green."
    },
    {
        "id": 18662,
        "statement": "eats(X, tiger) :- chases(X, tiger), is(X, red).",
        "description": "If someone chases the tiger and they are red then they eat the tiger."
    },
    {
        "id": 18663,
        "statement": "eats(X, mouse) :- eats(X, dog).",
        "description": "If someone eats the dog then they eat the mouse."
    },
    {
        "id": 18664,
        "statement": "likes(X, tiger) :- eats(X, tiger).",
        "description": "If someone eats the tiger then they like the tiger."
    },
    {
        "id": 18665,
        "statement": "is(mouse, red) :- eats(mouse, lion).",
        "description": "If the mouse eats the lion then the mouse is red."
    },
    {
        "id": 18666,
        "statement": "chases(X, tiger) :- is(X, nice), likes(X, tiger).",
        "description": "If someone is nice and they like the tiger then they chase the tiger."
    },
    {
        "id": 18667,
        "statement": "eats(tiger, dog) :- likes(mouse, tiger).",
        "description": "If the mouse likes the tiger then the tiger eats the dog."
    },
    {
        "id": 18668,
        "statement": "chases(X, dog) :- eats(X, mouse).",
        "description": "If someone eats the mouse then they chase the dog."
    },
    {
        "id": 18669,
        "statement": "eats(X, lion) :- likes(X, lion), chases(lion, dog).",
        "description": "If someone likes the lion and the lion chases the dog then they eat the lion."
    },
    {
        "id": 18670,
        "statement": "is(X, cold) :- is(X, rough), is(X, young).",
        "description": "All rough, young things are cold."
    },
    {
        "id": 18671,
        "statement": "is(X, quiet) :- is(X, blue), is(X, rough).",
        "description": "If something is blue and rough then it is quiet."
    },
    {
        "id": 18672,
        "statement": "likes(X, dog) :- likes(X, lion).",
        "description": "If someone likes the lion then they like the dog."
    },
    {
        "id": 18673,
        "statement": "likes(X, cow) :- is(X, young).",
        "description": "If someone is young then they like the cow."
    },
    {
        "id": 18674,
        "statement": "is(dog, young) :- is(cow, young), sees(cow, dog).",
        "description": "If the cow is young and the cow sees the dog then the dog is young."
    },
    {
        "id": 18675,
        "statement": "sees(X, dog) :- likes(X, cow).",
        "description": "If someone likes the cow then they see the dog."
    },
    {
        "id": 18676,
        "statement": "is(cat, blue) :- sees(X, cat).",
        "description": "If someone sees the cat then the cat is blue."
    },
    {
        "id": 18677,
        "statement": "eats(mouse, squirrel) :- likes(X, mouse).",
        "description": "If someone likes the mouse then the mouse eats the squirrel."
    },
    {
        "id": 18678,
        "statement": "eats(lion, cow) :- needs(lion, squirrel), likes(lion, mouse).",
        "description": "If the lion needs the squirrel and the lion likes the mouse then the lion eats the cow."
    },
    {
        "id": 18679,
        "statement": "likes(lion, mouse) :- likes(lion, cow).",
        "description": "If the lion likes the cow then the lion likes the mouse."
    },
    {
        "id": 18680,
        "statement": "is(X, nice) :- needs(X, squirrel), is(squirrel, round).",
        "description": "If someone needs the squirrel and the squirrel is round then they are nice."
    },
    {
        "id": 18681,
        "statement": "needs(X, squirrel) :- eats(X, squirrel).",
        "description": "If someone eats the squirrel then they need the squirrel."
    },
    {
        "id": 18682,
        "statement": "is(X, smart) :- is(X, blue), is(X, white).",
        "description": "All blue, white people are smart."
    },
    {
        "id": 18683,
        "statement": "is(X, white) :- is(X, young), is(X, blue).",
        "description": "Young, blue people are white."
    },
    {
        "id": 18684,
        "statement": "is(X, round) :- is(X, white), is(X, quiet).",
        "description": "All white, quiet people are round."
    },
    {
        "id": 18685,
        "statement": "is(X, rough) :- is(X, smart), is(X, young).",
        "description": "If someone is smart and young then they are rough."
    },
    {
        "id": 18686,
        "statement": "is(X, quiet) :- is(X, rough), is(X, white).",
        "description": "All rough, white people are quiet."
    },
    {
        "id": 18687,
        "statement": "is(X, quiet) :- is(X, rough), not is(X, white).",
        "description": "If someone is rough and not white then they are quiet."
    },
    {
        "id": 18688,
        "statement": "chases(cow, cat) :- chases(X, cow), needs(X, cow).",
        "description": "If someone chases the cow and they need the cow then the cow chases the cat."
    },
    {
        "id": 18689,
        "statement": "chases(X, bald_eagle) :- needs(X, rabbit).",
        "description": "If someone needs the rabbit then they chase the bald eagle."
    },
    {
        "id": 18690,
        "statement": "likes(cat, bald_eagle) :- likes(X, cat).",
        "description": "If someone likes the cat then the cat likes the bald eagle."
    },
    {
        "id": 18691,
        "statement": "likes(X, cat) :- chases(X, bald_eagle).",
        "description": "If someone chases the bald eagle then they like the cat."
    },
    {
        "id": 18692,
        "statement": "chases(X, cat) :- chases(X, rabbit).",
        "description": "If someone chases the rabbit then they chase the cat."
    },
    {
        "id": 18693,
        "statement": "chases(cat, rabbit) :- likes(X, cat), is(X, blue).",
        "description": "If someone likes the cat and they are blue then the cat chases the rabbit."
    },
    {
        "id": 18694,
        "statement": "chases(X, lion) :- likes(X, lion).",
        "description": "If something likes the lion then it chases the lion."
    },
    {
        "id": 18695,
        "statement": "is(X, blue) :- eats(X, mouse).",
        "description": "If something eats the mouse then it is blue."
    },
    {
        "id": 18696,
        "statement": "likes(X, lion) :- eats(X, mouse).",
        "description": "If something eats the mouse then it likes the lion."
    },
    {
        "id": 18697,
        "statement": "is(X, green) :- is(X, blue), not likes(X, tiger).",
        "description": "If something is blue and it does not like the tiger then it is green."
    },
    {
        "id": 18698,
        "statement": "eats(X, mouse) :- likes(X, mouse).",
        "description": "If something likes the mouse then it eats the mouse."
    },
    {
        "id": 18699,
        "statement": "eats(mouse, lion) :- likes(X, mouse).",
        "description": "If something likes the mouse then the mouse eats the lion."
    },
    {
        "id": 18700,
        "statement": "likes(mouse, lion) :- eats(X, mouse).",
        "description": "If something eats the mouse then the mouse likes the lion."
    },
    {
        "id": 18701,
        "statement": "is(X, nice) :- eats(X, bear), eats(X, lion).",
        "description": "If something eats the bear and it eats the lion then it is nice."
    },
    {
        "id": 18702,
        "statement": "likes(bear, bald_eagle) :- eats(X, bear), is(X, nice).",
        "description": "If something eats the bear and it is nice then the bear likes the bald eagle."
    },
    {
        "id": 18703,
        "statement": "eats(X, rabbit) :- is(X, nice), likes(X, bear).",
        "description": "If something is nice and it likes the bear then it eats the rabbit."
    },
    {
        "id": 18704,
        "statement": "eats(bear, rabbit) :- likes(X, bear), is(bear, young).",
        "description": "If something likes the bear and the bear is young then the bear eats the rabbit."
    },
    {
        "id": 18705,
        "statement": "chases(X, rabbit) :- is(X, round).",
        "description": "If something is round then it chases the rabbit."
    },
    {
        "id": 18706,
        "statement": "is(X, round) :- likes(X, bear), likes(X, bald_eagle).",
        "description": "If something likes the bear and it likes the bald eagle then it is round."
    },
    {
        "id": 18707,
        "statement": "chases(X, rabbit) :- is(X, green), is(X, round).",
        "description": "If something is green and round then it chases the rabbit."
    },
    {
        "id": 18708,
        "statement": "eats(X, lion) :- chases(X, bear).",
        "description": "If something chases the bear then it eats the lion."
    },
    {
        "id": 18709,
        "statement": "likes(X, bear) :- eats(X, bald_eagle), eats(bald_eagle, bear).",
        "description": "If something eats the bald eagle and the bald eagle eats the bear then it likes the bear."
    },
    {
        "id": 18710,
        "statement": "eats(cat, dog) :- needs(squirrel, cat), eats(squirrel, cat).",
        "description": "If the squirrel needs the cat and the squirrel eats the cat then the cat eats the dog."
    },
    {
        "id": 18711,
        "statement": "eats(tiger, squirrel) :- is(tiger, round), is(tiger, red).",
        "description": "If the tiger is round and the tiger is red then the tiger eats the squirrel."
    },
    {
        "id": 18712,
        "statement": "eats(X, dog) :- needs(X, cat).",
        "description": "If something needs the cat then it eats the dog."
    },
    {
        "id": 18713,
        "statement": "sees(tiger, cat) :- needs(X, tiger).",
        "description": "If something needs the tiger then the tiger sees the cat."
    },
    {
        "id": 18714,
        "statement": "sees(squirrel, tiger) :- is(X, round), eats(X, squirrel).",
        "description": "If something is round and it eats the squirrel then the squirrel sees the tiger."
    },
    {
        "id": 18715,
        "statement": "sees(cat, dog) :- eats(X, cat).",
        "description": "If something eats the cat then the cat sees the dog."
    },
    {
        "id": 18716,
        "statement": "eats(X, cat) :- eats(X, dog).",
        "description": "If something eats the dog then it eats the cat."
    },
    {
        "id": 18717,
        "statement": "eats(X, tiger) :- sees(X, dog), not eats(X, cat).",
        "description": "If something sees the dog and it does not eat the cat then it eats the tiger."
    },
    {
        "id": 18718,
        "statement": "is(mouse, cold) :- chases(X, mouse), not needs(X, cat).",
        "description": "If someone chases the mouse and they do not need the cat then the mouse is cold."
    },
    {
        "id": 18719,
        "statement": "is(X, rough) :- is(X, young), needs(X, cat).",
        "description": "If someone is young and they need the cat then they are rough."
    },
    {
        "id": 18720,
        "statement": "sees(X, cat) :- chases(X, cat).",
        "description": "If someone chases the cat then they see the cat."
    },
    {
        "id": 18721,
        "statement": "is(X, green) :- chases(X, cat), is(cat, young).",
        "description": "If someone chases the cat and the cat is young then they are green."
    },
    {
        "id": 18722,
        "statement": "sees(X, rabbit) :- is(X, cold), not is(X, kind).",
        "description": "If someone is cold and not kind then they see the rabbit."
    },
    {
        "id": 18723,
        "statement": "is(rabbit, green) :- sees(X, rabbit), not is(X, kind).",
        "description": "If someone sees the rabbit and they are not kind then the rabbit is green."
    },
    {
        "id": 18724,
        "statement": "chases(X, squirrel) :- is(X, green), not sees(X, cat).",
        "description": "If someone is green and they do not see the cat then they chase the squirrel."
    },
    {
        "id": 18725,
        "statement": "is(X, round) :- is(X, young), is(X, smart).",
        "description": "All young, smart things are round."
    },
    {
        "id": 18726,
        "statement": "is(X, round) :- is(X, quiet), is(X, red).",
        "description": "Quiet, red things are round."
    },
    {
        "id": 18727,
        "statement": "is(X, quiet) :- is(X, blue), is(X, young).",
        "description": "All blue, young things are quiet."
    },
    {
        "id": 18728,
        "statement": "sees(cat, bald_eagle) :- visits(X, cat), chases(cat, bald_eagle).",
        "description": "If something visits the cat and the cat chases the bald eagle then the cat sees the bald eagle."
    },
    {
        "id": 18729,
        "statement": "visits(rabbit, bald_eagle) :- is(rabbit, red).",
        "description": "If the rabbit is red then the rabbit visits the bald eagle."
    },
    {
        "id": 18730,
        "statement": "visits(X, cat) :- sees(X, rabbit).",
        "description": "If something sees the rabbit then it visits the cat."
    },
    {
        "id": 18731,
        "statement": "visits(cat, bald_eagle) :- visits(X, cat), not sees(X, cat).",
        "description": "If something visits the cat and it does not see the cat then the cat visits the bald eagle."
    },
    {
        "id": 18732,
        "statement": "is(X, young) :- visits(X, bald_eagle).",
        "description": "If something visits the bald eagle then it is young."
    },
    {
        "id": 18733,
        "statement": "is(X, round) :- is(X, green), is(X, big).",
        "description": "If something is green and big then it is round."
    },
    {
        "id": 18734,
        "statement": "is(X, rough) :- is(X, furry), is(X, round).",
        "description": "All furry, round things are rough."
    },
    {
        "id": 18735,
        "statement": "is(X, kind) :- is(X, green), is(X, nice).",
        "description": "Green, nice things are kind."
    },
    {
        "id": 18736,
        "statement": "is(X, nice) :- is(X, furry), is(X, round).",
        "description": "All furry, round things are nice."
    },
    {
        "id": 18737,
        "statement": "is(X, red) :- is(X, furry), not is(X, green).",
        "description": "If something is furry and not green then it is red."
    },
    {
        "id": 18738,
        "statement": "is(anne, smart) :- is(anne, rough).",
        "description": "If Anne is rough then Anne is smart."
    },
    {
        "id": 18739,
        "statement": "is(X, rough) :- is(X, young), is(X, cold).",
        "description": "Young, cold people are rough."
    },
    {
        "id": 18740,
        "statement": "is(fiona, smart) :- is(fiona, young), is(fiona, furry).",
        "description": "If Fiona is young and Fiona is furry then Fiona is smart."
    },
    {
        "id": 18741,
        "statement": "is(X, green) :- is(X, blue), is(X, rough).",
        "description": "All blue, rough things are green."
    },
    {
        "id": 18742,
        "statement": "is(X, cold) :- is(X, furry), is(X, white).",
        "description": "Furry, white people are cold."
    },
    {
        "id": 18743,
        "statement": "is(X, white) :- is(X, big), is(X, furry).",
        "description": "If someone is big and furry then they are white."
    },
    {
        "id": 18744,
        "statement": "is(X, green) :- is(X, quiet), is(X, red).",
        "description": "All quiet, red people are green."
    },
    {
        "id": 18745,
        "statement": "is(X, red) :- is(X, quiet), is(X, kind).",
        "description": "All quiet, kind people are red."
    },
    {
        "id": 18746,
        "statement": "is(X, nice) :- is(X, quiet), not is(X, kind).",
        "description": "If someone is quiet and not kind then they are nice."
    },
    {
        "id": 18747,
        "statement": "is(X, smart) :- is(X, red), is(X, round).",
        "description": "All red, round people are smart."
    },
    {
        "id": 18748,
        "statement": "is(X, round) :- is(X, cold), is(X, big).",
        "description": "All cold, big people are round."
    },
    {
        "id": 18749,
        "statement": "is(X, red) :- is(X, cold), is(X, round).",
        "description": "All cold, round people are red."
    },
    {
        "id": 18750,
        "statement": "is(X, blue) :- is(X, smart), is(X, round).",
        "description": "All smart, round people are blue."
    },
    {
        "id": 18751,
        "statement": "is(harry, smart) :- is(harry, round).",
        "description": "If Harry is round then Harry is smart."
    },
    {
        "id": 18752,
        "statement": "is(X, furry) :- is(X, white), is(X, green).",
        "description": "White, green things are furry."
    },
    {
        "id": 18753,
        "statement": "is(X, red) :- is(X, furry), is(X, white).",
        "description": "Furry, white things are red."
    },
    {
        "id": 18754,
        "statement": "is(X, white) :- is(X, rough), is(X, cold).",
        "description": "Rough, cold things are white."
    },
    {
        "id": 18755,
        "statement": "is(X, round) :- is(X, young), is(X, quiet).",
        "description": "All young, quiet things are round."
    },
    {
        "id": 18756,
        "statement": "is(X, quiet) :- is(X, rough), is(X, round).",
        "description": "If someone is rough and round then they are quiet."
    },
    {
        "id": 18757,
        "statement": "is(X, green) :- is(X, blue), is(X, round).",
        "description": "All blue, round people are green."
    },
    {
        "id": 18758,
        "statement": "is(X, rough) :- is(X, green), is(X, blue).",
        "description": "All green, blue people are rough."
    },
    {
        "id": 18759,
        "statement": "is(dave, quiet) :- is(dave, green), is(dave, nice).",
        "description": "If Dave is green and Dave is nice then Dave is quiet."
    },
    {
        "id": 18760,
        "statement": "visits(X, dog) :- is(X, nice), not sees(X, cow).",
        "description": "If someone is nice and they do not see the cow then they visit the dog."
    },
    {
        "id": 18761,
        "statement": "sees(cat, bear) :- visits(X, cat).",
        "description": "If someone visits the cat then the cat sees the bear."
    },
    {
        "id": 18762,
        "statement": "is(X, big) :- visits(X, cow), not is(cow, red).",
        "description": "If someone visits the cow and the cow is not red then they are big."
    },
    {
        "id": 18763,
        "statement": "is(bear, nice) :- is(X, kind), not likes(X, bear).",
        "description": "If someone is kind and they do not like the bear then the bear is nice."
    },
    {
        "id": 18764,
        "statement": "sees(dog, cat) :- likes(X, dog), is(X, kind).",
        "description": "If someone likes the dog and they are kind then the dog sees the cat."
    },
    {
        "id": 18765,
        "statement": "is(X, kind) :- visits(X, dog).",
        "description": "If someone visits the dog then they are kind."
    },
    {
        "id": 18766,
        "statement": "is(bear, blue) :- chases(bear, cat).",
        "description": "If the bear chases the cat then the bear is blue."
    },
    {
        "id": 18767,
        "statement": "is(cat, rough) :- chases(X, cat), needs(cat, lion).",
        "description": "If something chases the cat and the cat needs the lion then the cat is rough."
    },
    {
        "id": 18768,
        "statement": "is(X, kind) :- sees(X, bald_eagle).",
        "description": "If something sees the bald eagle then it is kind."
    },
    {
        "id": 18769,
        "statement": "needs(bear, bald_eagle) :- needs(bear, cat).",
        "description": "If the bear needs the cat then the bear needs the bald eagle."
    },
    {
        "id": 18770,
        "statement": "sees(cat, bear) :- needs(X, lion), needs(lion, cat).",
        "description": "If something needs the lion and the lion needs the cat then the cat sees the bear."
    },
    {
        "id": 18771,
        "statement": "sees(tiger, mouse) :- is(X, big), needs(X, tiger).",
        "description": "If someone is big and they need the tiger then the tiger sees the mouse."
    },
    {
        "id": 18772,
        "statement": "needs(X, tiger) :- is(X, blue).",
        "description": "If someone is blue then they need the tiger."
    },
    {
        "id": 18773,
        "statement": "is(X, green) :- sees(X, mouse).",
        "description": "If someone sees the mouse then they are green."
    },
    {
        "id": 18774,
        "statement": "is(anne, blue) :- is(anne, young), is(anne, furry).",
        "description": "If Anne is young and Anne is furry then Anne is blue."
    },
    {
        "id": 18775,
        "statement": "is(X, cold) :- is(X, rough), is(X, young).",
        "description": "If someone is rough and young then they are cold."
    },
    {
        "id": 18776,
        "statement": "is(X, blue) :- is(X, round), not is(X, rough).",
        "description": "If someone is round and not rough then they are blue."
    },
    {
        "id": 18777,
        "statement": "is(X, round) :- is(X, rough), is(X, blue).",
        "description": "Rough, blue people are round."
    },
    {
        "id": 18778,
        "statement": "is(X, round) :- is(X, young), is(X, red).",
        "description": "Young, red people are round."
    },
    {
        "id": 18779,
        "statement": "is(bob, nice) :- is(bob, kind), is(bob, quiet).",
        "description": "If Bob is kind and Bob is quiet then Bob is nice."
    },
    {
        "id": 18780,
        "statement": "is(X, nice) :- is(X, smart), not is(X, quiet).",
        "description": "If someone is smart and not quiet then they are nice."
    },
    {
        "id": 18781,
        "statement": "is(X, smart) :- is(X, quiet), not is(X, kind).",
        "description": "If someone is quiet and not kind then they are smart."
    },
    {
        "id": 18782,
        "statement": "is(X, furry) :- is(X, white), is(X, young).",
        "description": "White, young people are furry."
    },
    {
        "id": 18783,
        "statement": "is(X, cold) :- likes(X, bald_eagle).",
        "description": "If someone likes the bald eagle then they are cold."
    },
    {
        "id": 18784,
        "statement": "sees(squirrel, rabbit) :- likes(X, cat), sees(cat, squirrel).",
        "description": "If someone likes the cat and the cat sees the squirrel then the squirrel sees the rabbit."
    },
    {
        "id": 18785,
        "statement": "likes(cat, squirrel) :- is(cat, cold).",
        "description": "If the cat is cold then the cat likes the squirrel."
    },
    {
        "id": 18786,
        "statement": "chases(bald_eagle, squirrel) :- likes(X, bald_eagle).",
        "description": "If someone likes the bald eagle then the bald eagle chases the squirrel."
    },
    {
        "id": 18787,
        "statement": "is(X, red) :- likes(X, rabbit).",
        "description": "If someone likes the rabbit then they are red."
    },
    {
        "id": 18788,
        "statement": "likes(cat, bald_eagle) :- likes(X, cat), is(X, cold).",
        "description": "If someone likes the cat and they are cold then the cat likes the bald eagle."
    },
    {
        "id": 18789,
        "statement": "sees(rabbit, mouse) :- not needs(rabbit, cat).",
        "description": "If the rabbit does not need the cat then the rabbit sees the mouse."
    },
    {
        "id": 18790,
        "statement": "is(X, blue) :- sees(X, rabbit), not is(X, young).",
        "description": "If something sees the rabbit and it is not young then it is blue."
    },
    {
        "id": 18791,
        "statement": "visits(mouse, lion) :- needs(lion, mouse), not is(lion, round).",
        "description": "If the lion needs the mouse and the lion is not round then the mouse visits the lion."
    },
    {
        "id": 18792,
        "statement": "visits(rabbit, lion) :- needs(X, rabbit), is(rabbit, green).",
        "description": "If something needs the rabbit and the rabbit is green then the rabbit visits the lion."
    },
    {
        "id": 18793,
        "statement": "is(mouse, blue) :- visits(lion, rabbit), visits(lion, mouse).",
        "description": "If the lion visits the rabbit and the lion visits the mouse then the mouse is blue."
    },
    {
        "id": 18794,
        "statement": "needs(X, mouse) :- needs(X, cat), visits(X, cat).",
        "description": "If something needs the cat and it visits the cat then it needs the mouse."
    },
    {
        "id": 18795,
        "statement": "sees(X, rabbit) :- visits(X, mouse).",
        "description": "If something visits the mouse then it sees the rabbit."
    },
    {
        "id": 18796,
        "statement": "is(X, kind) :- is(X, rough), not is(X, green).",
        "description": "If someone is rough and not green then they are kind."
    },
    {
        "id": 18797,
        "statement": "is(X, blue) :- is(X, nice), is(X, young).",
        "description": "All nice, young people are blue."
    },
    {
        "id": 18798,
        "statement": "is(gary, rough) :- is(gary, young), is(gary, round).",
        "description": "If Gary is young and Gary is round then Gary is rough."
    },
    {
        "id": 18799,
        "statement": "is(gary, round) :- is(gary, nice), is(gary, rough).",
        "description": "If Gary is nice and Gary is rough then Gary is round."
    },
    {
        "id": 18800,
        "statement": "is(X, nice) :- is(X, rough), is(X, young).",
        "description": "All rough, young people are nice."
    },
    {
        "id": 18801,
        "statement": "visits(cow, dog) :- visits(X, cow), sees(cow, dog).",
        "description": "If something visits the cow and the cow sees the dog then the cow visits the dog."
    },
    {
        "id": 18802,
        "statement": "is(X, blue) :- chases(X, cow).",
        "description": "If something chases the cow then it is blue."
    },
    {
        "id": 18803,
        "statement": "is(rabbit, young) :- sees(X, lion), visits(lion, rabbit).",
        "description": "If something sees the lion and the lion visits the rabbit then the rabbit is young."
    },
    {
        "id": 18804,
        "statement": "chases(rabbit, cow) :- visits(rabbit, cow), visits(cow, dog).",
        "description": "If the rabbit visits the cow and the cow visits the dog then the rabbit chases the cow."
    },
    {
        "id": 18805,
        "statement": "chases(X, lion) :- chases(X, cow), sees(X, lion).",
        "description": "If something chases the cow and it sees the lion then it chases the lion."
    },
    {
        "id": 18806,
        "statement": "visits(cow, rabbit) :- sees(rabbit, cow).",
        "description": "If the rabbit sees the cow then the cow visits the rabbit."
    },
    {
        "id": 18807,
        "statement": "is(X, rough) :- is(X, young), is(X, furry).",
        "description": "All young, furry people are rough."
    },
    {
        "id": 18808,
        "statement": "is(X, smart) :- is(X, red), is(X, nice).",
        "description": "Red, nice people are smart."
    },
    {
        "id": 18809,
        "statement": "is(X, white) :- is(X, kind), is(X, big).",
        "description": "If someone is kind and big then they are white."
    },
    {
        "id": 18810,
        "statement": "is(X, red) :- is(X, white), is(X, nice).",
        "description": "If someone is white and nice then they are red."
    },
    {
        "id": 18811,
        "statement": "chases(X, squirrel) :- likes(X, cat).",
        "description": "If something likes the cat then it chases the squirrel."
    },
    {
        "id": 18812,
        "statement": "is(X, round) :- chases(X, squirrel), not chases(X, dog).",
        "description": "If something chases the squirrel and it does not chase the dog then it is round."
    },
    {
        "id": 18813,
        "statement": "likes(squirrel, cat) :- needs(squirrel, rabbit).",
        "description": "If the squirrel needs the rabbit then the squirrel likes the cat."
    },
    {
        "id": 18814,
        "statement": "chases(cat, squirrel) :- likes(X, cat).",
        "description": "If something likes the cat then the cat chases the squirrel."
    },
    {
        "id": 18815,
        "statement": "chases(cat, squirrel) :- needs(X, cat), is(X, blue).",
        "description": "If something needs the cat and it is blue then the cat chases the squirrel."
    },
    {
        "id": 18816,
        "statement": "is(dog, young) :- likes(X, dog).",
        "description": "If something likes the dog then the dog is young."
    },
    {
        "id": 18817,
        "statement": "is(squirrel, green) :- likes(X, squirrel).",
        "description": "If something likes the squirrel then the squirrel is green."
    },
    {
        "id": 18818,
        "statement": "needs(X, dog) :- is(X, green), chases(X, rabbit).",
        "description": "If something is green and it chases the rabbit then it needs the dog."
    },
    {
        "id": 18819,
        "statement": "is(X, furry) :- is(X, cold), is(X, blue).",
        "description": "Cold, blue people are furry."
    },
    {
        "id": 18820,
        "statement": "is(X, round) :- is(X, rough), is(X, cold).",
        "description": "If someone is rough and cold then they are round."
    },
    {
        "id": 18821,
        "statement": "is(gary, furry) :- is(gary, blue), is(gary, rough).",
        "description": "If Gary is blue and Gary is rough then Gary is furry."
    },
    {
        "id": 18822,
        "statement": "is(anne, cold) :- is(anne, round).",
        "description": "If Anne is round then Anne is cold."
    },
    {
        "id": 18823,
        "statement": "is(X, green) :- is(X, quiet), is(X, blue).",
        "description": "Quiet, blue things are green."
    },
    {
        "id": 18824,
        "statement": "sees(lion, dog) :- chases(X, lion).",
        "description": "If something chases the lion then the lion sees the dog."
    },
    {
        "id": 18825,
        "statement": "is(cow, blue) :- sees(cow, lion), sees(lion, cow).",
        "description": "If the cow sees the lion and the lion sees the cow then the cow is blue."
    },
    {
        "id": 18826,
        "statement": "likes(X, squirrel) :- is(X, big).",
        "description": "If something is big then it likes the squirrel."
    },
    {
        "id": 18827,
        "statement": "likes(X, dog) :- is(X, cold), not chases(X, dog).",
        "description": "If something is cold and it does not chase the dog then it likes the dog."
    },
    {
        "id": 18828,
        "statement": "is(lion, cold) :- likes(X, lion), is(X, cold).",
        "description": "If something likes the lion and it is cold then the lion is cold."
    },
    {
        "id": 18829,
        "statement": "is(dog, green) :- likes(X, dog), sees(dog, cow).",
        "description": "If something likes the dog and the dog sees the cow then the dog is green."
    },
    {
        "id": 18830,
        "statement": "is(dog, cold) :- sees(X, lion), likes(lion, dog).",
        "description": "If something sees the lion and the lion likes the dog then the dog is cold."
    },
    {
        "id": 18831,
        "statement": "sees(dog, lion) :- sees(lion, dog), not likes(dog, squirrel).",
        "description": "If the lion sees the dog and the dog does not like the squirrel then the dog sees the lion."
    },
    {
        "id": 18832,
        "statement": "is(squirrel, nice) :- is(squirrel, rough).",
        "description": "If the squirrel is rough then the squirrel is nice."
    },
    {
        "id": 18833,
        "statement": "likes(bear, dog) :- likes(X, bear).",
        "description": "If something likes the bear then the bear likes the dog."
    },
    {
        "id": 18834,
        "statement": "chases(X, cow) :- is(X, red).",
        "description": "If something is red then it chases the cow."
    },
    {
        "id": 18835,
        "statement": "needs(dog, bear) :- chases(dog, bear).",
        "description": "If the dog chases the bear then the dog needs the bear."
    },
    {
        "id": 18836,
        "statement": "needs(X, dog) :- is(X, rough).",
        "description": "If something is rough then it needs the dog."
    },
    {
        "id": 18837,
        "statement": "chases(cow, dog) :- needs(X, cow), likes(X, bear).",
        "description": "If something needs the cow and it likes the bear then the cow chases the dog."
    },
    {
        "id": 18838,
        "statement": "likes(X, bear) :- is(X, round), likes(X, dog).",
        "description": "If something is round and it likes the dog then it likes the bear."
    },
    {
        "id": 18839,
        "statement": "is(squirrel, rough) :- is(X, round), needs(X, squirrel).",
        "description": "If something is round and it needs the squirrel then the squirrel is rough."
    },
    {
        "id": 18840,
        "statement": "is(X, blue) :- sees(X, lion).",
        "description": "If something sees the lion then it is blue."
    },
    {
        "id": 18841,
        "statement": "needs(X, tiger) :- is(X, blue), needs(X, cow).",
        "description": "If something is blue and it needs the cow then it needs the tiger."
    },
    {
        "id": 18842,
        "statement": "visits(X, lion) :- sees(X, cow).",
        "description": "If something sees the cow then it visits the lion."
    },
    {
        "id": 18843,
        "statement": "is(lion, cold) :- sees(X, lion).",
        "description": "If something sees the lion then the lion is cold."
    },
    {
        "id": 18844,
        "statement": "sees(tiger, lion) :- needs(X, tiger).",
        "description": "If something needs the tiger then the tiger sees the lion."
    },
    {
        "id": 18845,
        "statement": "needs(X, squirrel) :- needs(X, cow).",
        "description": "If something needs the cow then it needs the squirrel."
    },
    {
        "id": 18846,
        "statement": "is(X, nice) :- is(X, smart), is(X, white).",
        "description": "All smart, white things are nice."
    },
    {
        "id": 18847,
        "statement": "is(X, smart) :- is(X, round), is(X, young).",
        "description": "If something is round and young then it is smart."
    },
    {
        "id": 18848,
        "statement": "is(X, white) :- is(X, round), is(X, young).",
        "description": "All round, young things are white."
    },
    {
        "id": 18849,
        "statement": "is(X, young) :- is(X, white), is(X, round).",
        "description": "All white, round things are young."
    },
    {
        "id": 18850,
        "statement": "is(X, blue) :- is(X, red), is(X, cold).",
        "description": "All red, cold people are blue."
    },
    {
        "id": 18851,
        "statement": "is(X, blue) :- is(X, cold), is(X, rough).",
        "description": "If someone is cold and rough then they are blue."
    },
    {
        "id": 18852,
        "statement": "eats(X, bear) :- likes(X, lion).",
        "description": "If something likes the lion then it eats the bear."
    },
    {
        "id": 18853,
        "statement": "sees(X, tiger) :- likes(X, cow).",
        "description": "If something likes the cow then it sees the tiger."
    },
    {
        "id": 18854,
        "statement": "eats(X, tiger) :- eats(X, bear), likes(X, lion).",
        "description": "If something eats the bear and it likes the lion then it eats the tiger."
    },
    {
        "id": 18855,
        "statement": "is(lion, cold) :- sees(X, lion), sees(lion, tiger).",
        "description": "If something sees the lion and the lion sees the tiger then the lion is cold."
    },
    {
        "id": 18856,
        "statement": "likes(X, lion) :- eats(X, lion), likes(lion, bear).",
        "description": "If something eats the lion and the lion likes the bear then it likes the lion."
    },
    {
        "id": 18857,
        "statement": "chases(rabbit, bald_eagle) :- is(rabbit, round), is(rabbit, cold).",
        "description": "If the rabbit is round and the rabbit is cold then the rabbit chases the bald eagle."
    },
    {
        "id": 18858,
        "statement": "chases(rabbit, cat) :- eats(bald_eagle, cat), eats(cat, rabbit).",
        "description": "If the bald eagle eats the cat and the cat eats the rabbit then the rabbit chases the cat."
    },
    {
        "id": 18859,
        "statement": "eats(rabbit, cat) :- eats(X, rabbit), is(X, red).",
        "description": "If something eats the rabbit and it is red then the rabbit eats the cat."
    },
    {
        "id": 18860,
        "statement": "chases(X, bear) :- chases(X, bald_eagle).",
        "description": "If something chases the bald eagle then it chases the bear."
    },
    {
        "id": 18861,
        "statement": "chases(tiger, squirrel) :- visits(X, tiger).",
        "description": "If something visits the tiger then the tiger chases the squirrel."
    },
    {
        "id": 18862,
        "statement": "sees(X, squirrel) :- is(X, young).",
        "description": "If something is young then it sees the squirrel."
    },
    {
        "id": 18863,
        "statement": "is(X, young) :- is(X, round), chases(X, tiger).",
        "description": "If something is round and it chases the tiger then it is young."
    },
    {
        "id": 18864,
        "statement": "chases(rabbit, mouse) :- is(rabbit, round), visits(rabbit, mouse).",
        "description": "If the rabbit is round and the rabbit visits the mouse then the rabbit chases the mouse."
    },
    {
        "id": 18865,
        "statement": "visits(squirrel, tiger) :- sees(X, squirrel), visits(squirrel, rabbit).",
        "description": "If something sees the squirrel and the squirrel visits the rabbit then the squirrel visits the tiger."
    },
    {
        "id": 18866,
        "statement": "is(X, big) :- is(X, green), is(X, nice).",
        "description": "All green, nice things are big."
    },
    {
        "id": 18867,
        "statement": "is(X, nice) :- is(X, green), is(X, round).",
        "description": "Green, round things are nice."
    },
    {
        "id": 18868,
        "statement": "is(X, rough) :- is(X, cold), is(X, round).",
        "description": "Cold, round things are rough."
    },
    {
        "id": 18869,
        "statement": "is(bob, big) :- is(bob, round), is(bob, blue).",
        "description": "If Bob is round and Bob is blue then Bob is big."
    },
    {
        "id": 18870,
        "statement": "sees(tiger, mouse) :- likes(tiger, bear).",
        "description": "If the tiger likes the bear then the tiger sees the mouse."
    },
    {
        "id": 18871,
        "statement": "sees(mouse, tiger) :- likes(mouse, dog).",
        "description": "If the mouse likes the dog then the mouse sees the tiger."
    },
    {
        "id": 18872,
        "statement": "likes(mouse, dog) :- likes(X, mouse), likes(X, bear).",
        "description": "If someone likes the mouse and they like the bear then the mouse likes the dog."
    },
    {
        "id": 18873,
        "statement": "is(bear, red) :- visits(X, bear).",
        "description": "If someone visits the bear then the bear is red."
    },
    {
        "id": 18874,
        "statement": "sees(bear, tiger) :- sees(bear, dog).",
        "description": "If the bear sees the dog then the bear sees the tiger."
    },
    {
        "id": 18875,
        "statement": "is(mouse, red) :- is(X, kind), sees(X, mouse).",
        "description": "If someone is kind and they see the mouse then the mouse is red."
    },
    {
        "id": 18876,
        "statement": "visits(mouse, bear) :- sees(dog, mouse).",
        "description": "If the dog sees the mouse then the mouse visits the bear."
    },
    {
        "id": 18877,
        "statement": "is(X, nice) :- sees(X, tiger), is(tiger, red).",
        "description": "If someone sees the tiger and the tiger is red then they are nice."
    },
    {
        "id": 18878,
        "statement": "is(anne, round) :- is(anne, cold).",
        "description": "If Anne is cold then Anne is round."
    },
    {
        "id": 18879,
        "statement": "is(X, young) :- is(X, big), is(X, nice).",
        "description": "All big, nice people are young."
    },
    {
        "id": 18880,
        "statement": "is(X, round) :- is(X, cold), is(X, nice).",
        "description": "All cold, nice people are round."
    },
    {
        "id": 18881,
        "statement": "is(gary, white) :- is(gary, big), is(gary, kind).",
        "description": "If Gary is big and Gary is kind then Gary is white."
    },
    {
        "id": 18882,
        "statement": "is(X, rough) :- is(X, blue), is(X, furry).",
        "description": "If someone is blue and furry then they are rough."
    },
    {
        "id": 18883,
        "statement": "is(gary, kind) :- is(gary, blue), is(gary, white).",
        "description": "If Gary is blue and Gary is white then Gary is kind."
    },
    {
        "id": 18884,
        "statement": "is(X, cold) :- is(X, furry), is(X, white).",
        "description": "All furry, white people are cold."
    },
    {
        "id": 18885,
        "statement": "eats(squirrel, lion) :- eats(X, squirrel).",
        "description": "If someone eats the squirrel then the squirrel eats the lion."
    },
    {
        "id": 18886,
        "statement": "visits(squirrel, cow) :- visits(X, cow), eats(cow, squirrel).",
        "description": "If someone visits the cow and the cow eats the squirrel then the squirrel visits the cow."
    },
    {
        "id": 18887,
        "statement": "is(bald_eagle, nice) :- likes(X, bald_eagle), is(bald_eagle, blue).",
        "description": "If someone likes the bald eagle and the bald eagle is blue then the bald eagle is nice."
    },
    {
        "id": 18888,
        "statement": "eats(cow, lion) :- likes(X, cow).",
        "description": "If someone likes the cow then the cow eats the lion."
    },
    {
        "id": 18889,
        "statement": "is(cow, big) :- visits(X, lion), eats(lion, cow).",
        "description": "If someone visits the lion and the lion eats the cow then the cow is big."
    },
    {
        "id": 18890,
        "statement": "visits(X, lion) :- eats(X, lion), eats(X, squirrel).",
        "description": "If someone eats the lion and they eat the squirrel then they visit the lion."
    },
    {
        "id": 18891,
        "statement": "likes(X, cow) :- eats(X, lion).",
        "description": "If someone eats the lion then they like the cow."
    },
    {
        "id": 18892,
        "statement": "visits(lion, cow) :- visits(X, lion), eats(X, squirrel).",
        "description": "If someone visits the lion and they eat the squirrel then the lion visits the cow."
    },
    {
        "id": 18893,
        "statement": "is(erin, red) :- is(erin, quiet), is(erin, big).",
        "description": "If Erin is quiet and Erin is big then Erin is red."
    },
    {
        "id": 18894,
        "statement": "is(X, big) :- is(X, cold), is(X, smart).",
        "description": "Cold, smart people are big."
    },
    {
        "id": 18895,
        "statement": "is(harry, kind) :- is(harry, red).",
        "description": "If Harry is red then Harry is kind."
    },
    {
        "id": 18896,
        "statement": "is(X, cold) :- is(X, big), is(X, green).",
        "description": "Big, green people are cold."
    },
    {
        "id": 18897,
        "statement": "chases(X, cat) :- is(X, blue), is(X, big).",
        "description": "If someone is blue and big then they chase the cat."
    },
    {
        "id": 18898,
        "statement": "visits(rabbit, tiger) :- chases(X, rabbit), eats(rabbit, dog).",
        "description": "If someone chases the rabbit and the rabbit eats the dog then the rabbit visits the tiger."
    },
    {
        "id": 18899,
        "statement": "eats(X, tiger) :- visits(X, dog).",
        "description": "If someone visits the dog then they eat the tiger."
    },
    {
        "id": 18900,
        "statement": "visits(tiger, dog) :- visits(X, tiger).",
        "description": "If someone visits the tiger then the tiger visits the dog."
    },
    {
        "id": 18901,
        "statement": "visits(X, cat) :- eats(X, tiger).",
        "description": "If someone eats the tiger then they visit the cat."
    },
    {
        "id": 18902,
        "statement": "visits(tiger, rabbit) :- visits(X, tiger), visits(X, rabbit).",
        "description": "If someone visits the tiger and they visit the rabbit then the tiger visits the rabbit."
    },
    {
        "id": 18903,
        "statement": "visits(cat, rabbit) :- not chases(tiger, cat).",
        "description": "If the tiger does not chase the cat then the cat visits the rabbit."
    },
    {
        "id": 18904,
        "statement": "visits(cat, rabbit) :- chases(X, cat).",
        "description": "If someone chases the cat then the cat visits the rabbit."
    },
    {
        "id": 18905,
        "statement": "is(lion, blue) :- visits(X, cow), not visits(X, lion).",
        "description": "If someone visits the cow and they do not visit the lion then the lion is blue."
    },
    {
        "id": 18906,
        "statement": "needs(X, cow) :- eats(X, cow).",
        "description": "If someone eats the cow then they need the cow."
    },
    {
        "id": 18907,
        "statement": "is(X, nice) :- eats(X, cow), needs(X, cow).",
        "description": "If someone eats the cow and they need the cow then they are nice."
    },
    {
        "id": 18908,
        "statement": "is(lion, big) :- eats(X, lion), needs(X, cow).",
        "description": "If someone eats the lion and they need the cow then the lion is big."
    },
    {
        "id": 18909,
        "statement": "eats(cat, lion) :- is(cat, cold), is(cat, nice).",
        "description": "If the cat is cold and the cat is nice then the cat eats the lion."
    },
    {
        "id": 18910,
        "statement": "is(cow, green) :- eats(X, lion), needs(X, cow).",
        "description": "If someone eats the lion and they need the cow then the cow is green."
    },
    {
        "id": 18911,
        "statement": "visits(X, cat) :- eats(X, lion).",
        "description": "If someone eats the lion then they visit the cat."
    },
    {
        "id": 18912,
        "statement": "sees(lion, rabbit) :- visits(lion, dog).",
        "description": "If the lion visits the dog then the lion sees the rabbit."
    },
    {
        "id": 18913,
        "statement": "visits(lion, dog) :- visits(X, lion).",
        "description": "If something visits the lion then the lion visits the dog."
    },
    {
        "id": 18914,
        "statement": "is(rabbit, round) :- visits(X, lion), sees(X, rabbit).",
        "description": "If something visits the lion and it sees the rabbit then the rabbit is round."
    },
    {
        "id": 18915,
        "statement": "is(X, furry) :- is(X, big), is(X, rough).",
        "description": "All big, rough people are furry."
    },
    {
        "id": 18916,
        "statement": "is(X, furry) :- is(X, smart), is(X, big).",
        "description": "If someone is smart and big then they are furry."
    },
    {
        "id": 18917,
        "statement": "is(bob, rough) :- is(bob, big), is(bob, blue).",
        "description": "If Bob is big and Bob is blue then Bob is rough."
    },
    {
        "id": 18918,
        "statement": "sees(X, cat) :- likes(X, bald_eagle).",
        "description": "If someone likes the bald eagle then they see the cat."
    },
    {
        "id": 18919,
        "statement": "is(dog, big) :- chases(X, dog).",
        "description": "If someone chases the dog then the dog is big."
    },
    {
        "id": 18920,
        "statement": "chases(X, bald_eagle) :- sees(X, cat).",
        "description": "If someone sees the cat then they chase the bald eagle."
    },
    {
        "id": 18921,
        "statement": "chases(bald_eagle, cat) :- is(bald_eagle, red).",
        "description": "If the bald eagle is red then the bald eagle chases the cat."
    },
    {
        "id": 18922,
        "statement": "sees(X, cow) :- chases(X, cat), not is(X, big).",
        "description": "If someone chases the cat and they are not big then they see the cow."
    },
    {
        "id": 18923,
        "statement": "sees(X, cow) :- sees(X, dog), is(X, rough).",
        "description": "If someone sees the dog and they are rough then they see the cow."
    },
    {
        "id": 18924,
        "statement": "is(X, kind) :- is(X, young), is(X, cold).",
        "description": "Young, cold people are kind."
    },
    {
        "id": 18925,
        "statement": "is(X, kind) :- is(X, young), is(X, white).",
        "description": "Young, white people are kind."
    },
    {
        "id": 18926,
        "statement": "is(X, white) :- is(X, furry), is(X, kind).",
        "description": "All furry, kind people are white."
    },
    {
        "id": 18927,
        "statement": "is(gary, blue) :- is(gary, cold), is(gary, white).",
        "description": "If Gary is cold and Gary is white then Gary is blue."
    },
    {
        "id": 18928,
        "statement": "is(X, round) :- is(X, big), is(X, rough).",
        "description": "All big, rough people are round."
    },
    {
        "id": 18929,
        "statement": "is(X, big) :- is(X, cold), is(X, white).",
        "description": "Cold, white people are big."
    },
    {
        "id": 18930,
        "statement": "is(erin, white) :- is(erin, round).",
        "description": "If Erin is round then Erin is white."
    },
    {
        "id": 18931,
        "statement": "is(X, furry) :- is(X, green), is(X, cold).",
        "description": "Green, cold people are furry."
    },
    {
        "id": 18932,
        "statement": "needs(X, bald_eagle) :- is(X, round), is(X, big).",
        "description": "If something is round and big then it needs the bald eagle."
    },
    {
        "id": 18933,
        "statement": "is(X, nice) :- needs(X, cat).",
        "description": "If something needs the cat then it is nice."
    },
    {
        "id": 18934,
        "statement": "likes(X, bear) :- is(X, nice), visits(X, bear).",
        "description": "If something is nice and it visits the bear then it likes the bear."
    },
    {
        "id": 18935,
        "statement": "needs(X, cat) :- is(X, round), needs(X, bear).",
        "description": "If something is round and it needs the bear then it needs the cat."
    },
    {
        "id": 18936,
        "statement": "is(cat, big) :- is(cat, nice), is(cat, round).",
        "description": "If the cat is nice and the cat is round then the cat is big."
    },
    {
        "id": 18937,
        "statement": "is(cat, round) :- needs(cat, tiger).",
        "description": "If the cat needs the tiger then the cat is round."
    },
    {
        "id": 18938,
        "statement": "eats(bald_eagle, bear) :- likes(X, bear), eats(bear, bald_eagle).",
        "description": "If something likes the bear and the bear eats the bald eagle then the bald eagle eats the bear."
    },
    {
        "id": 18939,
        "statement": "likes(dog, bear) :- needs(X, dog).",
        "description": "If something needs the dog then the dog likes the bear."
    },
    {
        "id": 18940,
        "statement": "eats(X, bald_eagle) :- eats(X, bear).",
        "description": "If something eats the bear then it eats the bald eagle."
    },
    {
        "id": 18941,
        "statement": "needs(X, dog) :- is(X, big), needs(X, bald_eagle).",
        "description": "If something is big and it needs the bald eagle then it needs the dog."
    },
    {
        "id": 18942,
        "statement": "eats(dog, bald_eagle) :- needs(X, squirrel), eats(X, dog).",
        "description": "If something needs the squirrel and it eats the dog then the dog eats the bald eagle."
    },
    {
        "id": 18943,
        "statement": "is(X, round) :- is(X, big), is(X, red).",
        "description": "All big, red things are round."
    },
    {
        "id": 18944,
        "statement": "is(X, white) :- is(X, quiet), is(X, round).",
        "description": "All quiet, round things are white."
    },
    {
        "id": 18945,
        "statement": "is(X, blue) :- is(X, white), is(X, big).",
        "description": "White, big things are blue."
    },
    {
        "id": 18946,
        "statement": "is(harry, round) :- is(harry, red), is(harry, blue).",
        "description": "If Harry is red and Harry is blue then Harry is round."
    },
    {
        "id": 18947,
        "statement": "is(X, furry) :- is(X, red), is(X, nice).",
        "description": "Red, nice people are furry."
    },
    {
        "id": 18948,
        "statement": "is(charlie, big) :- is(charlie, furry), is(charlie, nice).",
        "description": "If Charlie is furry and Charlie is nice then Charlie is big."
    },
    {
        "id": 18949,
        "statement": "is(X, big) :- is(X, cold), is(X, white).",
        "description": "All cold, white things are big."
    },
    {
        "id": 18950,
        "statement": "is(X, cold) :- is(X, smart), is(X, kind).",
        "description": "If something is smart and kind then it is cold."
    },
    {
        "id": 18951,
        "statement": "is(dave, round) :- is(dave, kind), is(dave, white).",
        "description": "If Dave is kind and Dave is white then Dave is round."
    },
    {
        "id": 18952,
        "statement": "is(X, rough) :- is(X, furry), is(X, big).",
        "description": "Furry, big things are rough."
    },
    {
        "id": 18953,
        "statement": "is(X, blue) :- is(X, furry), is(X, big).",
        "description": "Furry, big things are blue."
    },
    {
        "id": 18954,
        "statement": "is(X, blue) :- is(X, red), is(X, furry).",
        "description": "If someone is red and furry then they are blue."
    },
    {
        "id": 18955,
        "statement": "is(X, furry) :- is(X, rough), is(X, kind).",
        "description": "Rough, kind people are furry."
    },
    {
        "id": 18956,
        "statement": "is(charlie, nice) :- is(charlie, furry).",
        "description": "If Charlie is furry then Charlie is nice."
    }
]